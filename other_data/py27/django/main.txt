core		render_to_response	template_name context content_type status	returns a httpresponse whose content is filled with the result of calling django
core		render	request template_name context content_type	returns a httpresponse whose content is filled with the result of calling django
core		redirect	to	returns an httpresponseredirect to the appropriate url for the arguments passed
core		_get_queryset	klass	return a queryset or a manager
core		get_object_or_404	klass	uses get() to return an object or raises a http404 exception if the object does not exist
core		get_list_or_404	klass	uses filter() to return a list of objects or raise a http404 exception if the list is empty
core		resolve_url	to	return a url appropriate for the arguments passed
core		setup	set_prefix	configure the settings this happens as a side effect of accessing the first setting configure logging and populate the app registry
core		get_wsgi_application		the public interface to django's wsgi support should return a wsgi
core		dumps	obj key salt serializer	returns url-safe sha1 signed base64 compressed json string if key is
core		loads	s key salt serializer	reverse of dumps(), raises badsignature if signature fails
core	TimestampSigner	unsign	value max_age	retrieve original value and check it wasn't signed more than max_age seconds ago
core	Paginator	validate_number	number	validates the given 1-based page number
core	Paginator	page	number	returns a page object for the given 1-based page number
core	Paginator	_get_page		returns an instance of a single page
core	Paginator	count		returns the total number of objects across all pages
core	Paginator	num_pages		returns the total number of pages
core	Paginator	page_range		returns a 1-based range of pages for iterating through within a template for loop
core	Paginator	_check_object_list_is_ordered		warn if self object_list is unordered typically a queryset
core	Page	start_index		returns the 1-based index of the first object on this page relative to total objects in the paginator
core	Page	end_index		returns the 1-based index of the last object on this page relative to total objects found hits
core		_lazy_re_compile	regex flags	lazily compile a regex with flags
core	RegexValidator	__call__	value	validate that the input contains a match for the regular expression if inverse_match is false otherwise raise validationerror
core		ip_address_validators	protocol unpack_ipv4	depending on the given parameters returns the appropriate validators for the genericipaddressfield
core	ValidationError	__init__	message code params	the message argument can be a single error a list of errors or a dictionary that maps field names to lists of errors
core.handlers		get_path_info	environ	returns the http request's path_info as a unicode string
core.handlers		get_script_name	environ	returns the equivalent of the http request's script_name environment variable
core.handlers		get_bytes_from_wsgi	environ key default	get a value from the wsgi environ dictionary as bytes
core.handlers		get_str_from_wsgi	environ key default	get a value from the wsgi environ dictionary as str
core.handlers	BaseHandler	load_middleware		populate middleware lists from settings middleware (or the deprecated
core.handlers	BaseHandler	get_response	request	return an httpresponse object for the given httprequest
core.handlers	BaseHandler	_get_response	request	resolve and call the view then apply view exception and template_response middleware
core.handlers	BaseHandler	process_exception_by_middleware	exception request	pass the exception to the exception middleware if no middleware
core.handlers	BaseHandler	handle_uncaught_exception	request resolver exc_info	allow subclasses to override uncaught exception handling
core.handlers	BaseHandler	_legacy_get_response	request	apply process_request() middleware and call the main _get_response(), if needed
core.handlers		convert_exception_to_response	get_response	wrap the given get_response callable in exception-to-response conversion
core.handlers		handle_uncaught_exception	request resolver exc_info	processing for any otherwise uncaught exceptions those that will generate http 500 responses
core.servers		get_internal_wsgi_application		loads and returns the wsgi application as configured by the user in settings
core.servers	WSGIRequestHandler	handle		copy of wsgirequesthandler but with different serverhandler
core.checks		check_resolver	resolver	recursively check the resolver
core.checks		check_url_namespaces_unique	app_configs	warn if url namespaces used in applications aren't unique
core.checks		_load_all_namespaces	resolver parents	recursively load all namespaces from url patterns
core.checks		get_warning_for_invalid_pattern	pattern	return a list containing a warning that the pattern is invalid
core.checks	CheckRegistry	register	check	can be used as a function or a decorator register given function
core.checks	CheckRegistry	run_checks	app_configs tags include_deployment_checks	run all registered checks and return list of errors and warnings
core.checks		_check_lazy_references	apps ignore	ensure all lazy i e string model references have been resolved
core.cache.backends	FileBasedCache	_cull		removes random cache entries if max_entries is reached at a ratio of num_entries / cull_frequency
core.cache.backends	FileBasedCache	_key_to_file	key version	convert a key into a cache file path basically this is the
core.cache.backends	FileBasedCache	clear		remove all the cache files
core.cache.backends	FileBasedCache	_is_expired	f	takes an open cache file and determines if it has expired deletes the file if it is has passed its expiry time
core.cache.backends	FileBasedCache	_list_cache_files		get a list of paths to all the cache files these are all the files
core.cache.backends		default_key_func	key key_prefix version	default function to generate keys
core.cache.backends		get_key_func	key_func	function to decide which key function to use
core.cache.backends	BaseCache	get_backend_timeout	timeout	returns the timeout value usable by this backend based upon the provided timeout
core.cache.backends	BaseCache	make_key	key version	constructs the key used by all other methods by default it
core.cache.backends	BaseCache	add	key value timeout version	set a value in the cache if the key does not already exist if
core.cache.backends	BaseCache	get	key default version	fetch a given key from the cache if the key does not exist return
core.cache.backends	BaseCache	set	key value timeout version	set a value in the cache if timeout is given that timeout will be
core.cache.backends	BaseCache	delete	key version	delete a key from the cache failing silently
core.cache.backends	BaseCache	get_many	keys version	fetch a bunch of keys from the cache for certain backends (memcached
core.cache.backends	BaseCache	get_or_set	key default timeout version	fetch a given key from the cache if the key does not exist
core.cache.backends	BaseCache	has_key	key version	returns true if the key is in the cache and has not expired
core.cache.backends	BaseCache	incr	key delta version	add delta to value in the cache if the key does not exist raise a
core.cache.backends	BaseCache	decr	key delta version	subtract delta from value in the cache if the key does not exist raise
core.cache.backends	BaseCache	__contains__	key	returns true if the key is in the cache and has not expired
core.cache.backends	BaseCache	set_many	data timeout version	set a bunch of values in the cache at once from a dict of key/value pairs
core.cache.backends	BaseCache	delete_many	keys version	delete a bunch of values in the cache at once for certain backends
core.cache.backends	BaseCache	clear		remove *all* values from the cache at once
core.cache.backends	BaseCache	validate_key	key	warn about keys that would not be portable to the memcached backend
core.cache.backends	BaseCache	incr_version	key delta version	adds delta to the cache version for the supplied key returns the
core.cache.backends	BaseCache	decr_version	key delta version	subtracts delta from the cache version for the supplied key returns
core.cache.backends	BaseCache	close		close the cache connection
core.cache.backends		dummy		a context manager that does nothing special
core.cache.backends	BaseMemcachedCache	_cache		implements transparent thread-safe access to a memcached client
core.cache.backends	BaseMemcachedCache	get_backend_timeout	timeout	memcached deals with long (> 30 days) timeouts in a special way
core.files	Storage	open	name mode	retrieves the specified file from storage
core.files	Storage	save	name content max_length	saves new content to the file specified by name the content should be
core.files	Storage	get_valid_name	name	returns a filename based on the provided filename that's suitable for use in the target storage system
core.files	Storage	get_available_name	name max_length	returns a filename that's free on the target storage system and available for new content to be written to
core.files	Storage	generate_filename	filename	validate the filename by calling get_valid_name() and return a filename to be passed to the save() method
core.files	Storage	path	name	returns a local filesystem path where the file can be retrieved using python's built-in open() function
core.files	Storage	delete	name	deletes the specified file from the storage system
core.files	Storage	exists	name	returns true if a file referenced by the given name already exists in the storage system or false if the name is available for a new file
core.files	Storage	listdir	path	lists the contents of the specified path returning a 2-tuple of lists the first item being directories the second item being files
core.files	Storage	size	name	returns the total size in bytes of the file specified by name
core.files	Storage	url	name	returns an absolute url where the file's contents can be accessed directly by a web browser
core.files	Storage	accessed_time	name	returns the last accessed time as datetime object of the file specified by name
core.files	Storage	created_time	name	returns the creation time as datetime object of the file specified by name
core.files	Storage	modified_time	name	returns the last modified time as datetime object of the file specified by name
core.files	Storage	get_accessed_time	name	return the last accessed time as a datetime of the file specified by name
core.files	Storage	get_created_time	name	return the creation time as a datetime of the file specified by name
core.files	Storage	get_modified_time	name	return the last modified time as a datetime of the file specified by name
core.files		_possibly_make_aware	dt	convert a datetime object in the local timezone to aware in utc if use_tz is true
core.files	FileSystemStorage	_clear_cached_properties	setting	reset setting based property values
core.files	FileSystemStorage	_datetime_from_timestamp	ts	if timezone support is enabled make an aware datetime object in utc otherwise make a naive one in the local timezone
core.files	TemporaryUploadedFile	temporary_file_path		returns the full path of this file
core.files	SimpleUploadedFile	from_dict	cls file_dict	creates a simpleuploadedfile object from
core.files	File	chunks	chunk_size	read the file and yield chunks of chunk_size bytes (defaults to uploadedfile
core.files	File	multiple_chunks	chunk_size	returns true if you can expect multiple chunks
core.files		endswith_cr	line	return true if line a text or byte string ends with ' '
core.files		endswith_lf	line	return true if line a text or byte string ends with ' '
core.files		equals_lf	line	return true if line a text or byte string equals ' '
core.files		file_move_safe	old_file_name new_file_name chunk_size allow_overwrite	moves a file from one location to another in the safest way possible
core.files		_fd	f	get a filedescriptor from something which could be a file or an fd
core.files	StopUpload	__init__	connection_reset	if connection_reset is true, django knows will halt the upload without consuming the rest of the upload
core.files	FileUploadHandler	handle_raw_input	input_data META content_length boundary	handle the raw input from the client
core.files	FileUploadHandler	new_file	field_name file_name content_type content_length	signal that a new file has been started
core.files	FileUploadHandler	receive_data_chunk	raw_data start	receive data from the streamed upload parser start is the position
core.files	FileUploadHandler	file_complete	file_size	signal that a file has completed file size corresponds to the actual
core.files	FileUploadHandler	upload_complete		signal that the upload is complete subclasses should perform cleanup
core.files	TemporaryFileUploadHandler	new_file		create the file object to append to as data is coming in
core.files	MemoryFileUploadHandler	handle_raw_input	input_data META content_length boundary	use the content_length to signal whether or not this handler should be in use
core.files	MemoryFileUploadHandler	receive_data_chunk	raw_data start	add the data to the bytesio file
core.files	MemoryFileUploadHandler	file_complete	file_size	return a file object if we're activated
core.files		load_handler	path	given a path to a handler return an instance of that handler
core.files		get_image_dimensions	file_or_path close	returns the width height of an image given an open file or a path set
core.management	TemplateCommand	handle_template	template subdir	determines where the app or project templates are
core.management	TemplateCommand	download	url	downloads the given url and returns the file name
core.management	TemplateCommand	splitext	the_path	like os path splitext but takes off tar too
core.management	TemplateCommand	extract	filename	extracts the given file to a temporarily and returns the path of the directory with the extracted content
core.management	TemplateCommand	is_url	template	returns true if the name looks like a url
core.management	TemplateCommand	make_writeable	filename	make sure that the file is writeable
core.management		supports_color		returns true if the running system's terminal supports color and false otherwise
core.management		make_style	config_string	create a style object from the given config_string
core.management		no_style		returns a style object with no color scheme
core.management		color_style		returns a style object from the django color scheme
core.management		handle_default_options	options	include any default options that all commands should accept here so that managementutility can handle them before searching for
core.management	BaseCommand	get_version		return the django version which should be correct for all built-in django commands
core.management	BaseCommand	create_parser	prog_name subcommand	create and return the argumentparser which will be used to parse the arguments to this command
core.management	BaseCommand	add_arguments	parser	entry point for subclassed commands to add custom arguments
core.management	BaseCommand	print_help	prog_name subcommand	print the help message for this command derived from self
core.management	BaseCommand	run_from_argv	argv	set up any environment changes requested (e g python path
core.management	BaseCommand	execute		try to execute this command performing system checks if needed (as controlled by the requires_system_checks attribute except if
core.management	BaseCommand	check	app_configs tags display_num_errors include_deployment_checks	uses the system check framework to validate entire django project
core.management	BaseCommand	check_migrations		print a warning if the set of migrations on disk don't match the migrations in the database
core.management	BaseCommand	handle		the actual logic of the command subclasses must implement
core.management	AppCommand	handle_app_config	app_config	perform the command's actions for app_config an appconfig instance corresponding to an application label given on the command line
core.management	LabelCommand	handle_label	label	perform the command's actions for label, which will be the string as given on the command line
core.management		find_commands	management_dir	given a path to a management directory returns a list of all the command names that are available
core.management		load_command_class	app_name name	given a command name and an application name returns the command class instance
core.management		get_commands		returns a dictionary mapping command names to their callback applications
core.management		call_command	command_name	calls the given command with the given options and args/kwargs
core.management	ManagementUtility	main_help_text	commands_only	returns the script's main help text as a string
core.management	ManagementUtility	fetch_command	subcommand	tries to fetch the given subcommand printing a message with the appropriate command called from the command line (usually
core.management	ManagementUtility	autocomplete		output completion suggestions for bash
core.management	ManagementUtility	execute		given the command-line arguments this figures out which subcommand is being run creates a parser appropriate to that command and runs it
core.management		execute_from_command_line	argv	a simple method that runs a managementutility
core.management		popen_wrapper	args os_err_exc_type stdout_encoding	friendly wrapper around popen
core.management		handle_extensions	extensions	organizes multiple extensions that are separated with commas or passed by using --extension/-e multiple times
core.management		get_random_secret_key		return a 50 character random string usable as a secret_key setting value
core.management		parse_apps_and_model_labels	labels	parse a list of "app_label modelname" or "app_label" strings into actual
core.management		sql_flush	style connection only_django reset_sequences	returns a list of the sql statements used to flush the database
core.management.commands	Command	write_migration_files	changes	takes a changes dict and writes them out as migration files
core.management.commands	Command	handle_merge	loader conflicts	handles merging together conflicted migrations interactively if it's safe otherwise advises on how to fix it
core.management.commands	Command	sync_apps	connection app_labels	run the old syncdb-style operation on a list of app_labels
core.management.commands	Command	normalize_col_name	col_name used_column_names is_relation	modify the column name to make it python-compatible as a field name
core.management.commands	Command	get_field_type	connection table_name row	given the database connection the table name and the cursor row description this routine will return the given field type name as
core.management.commands	Command	get_meta	table_name constraints column_to_field_name	return a sequence comprising the lines of code necessary to construct the inner meta class for the model corresponding
core.management.commands	Command	run_from_argv	argv	pre-parse the command line to extract the value of the --testrunner option
core.management.commands	BuildFile	work_path		path to a file which is being fed into gnu gettext pipeline this may
core.management.commands	BuildFile	preprocess		preprocess if necessary a translatable file before passing it to xgettext gnu gettext utility
core.management.commands	BuildFile	postprocess_messages	msgs	postprocess messages generated by xgettext gnu gettext utility
core.management.commands	BuildFile	cleanup		remove a preprocessed copy of a translatable file if any
core.management.commands		normalize_eols	raw_contents	take a block of raw text that will be passed through str splitlines() to
core.management.commands		write_pot_file	potfile msgs	write the :param potfile pot file with the :param msgs contents previously making sure its format is valid
core.management.commands	Command	build_potfiles		build pot files and apply msguniq to them
core.management.commands	Command	find_files	root	helper method to get all files in the given root also check that there
core.management.commands	Command	process_files	file_list	group translatable files by locale directory and run pot file build process for each group
core.management.commands	Command	process_locale_dir	locale_dir files	extract translatable literals from the specified files creating or updating the pot file for a given locale directory
core.management.commands	Command	write_po_file	potfile locale	creates or updates the po file for self domain and :param locale
core.management.commands	Command	copy_plural_forms	msgs locale	copies plural forms header contents from a django catalog of locale to the msgs string inserting it at the right place
core.management.commands	Command	load_label	fixture_label	loads fixtures files for a given label
core.management.commands	Command	find_fixtures	fixture_label	finds fixture files for a given label
core.management.commands	Command	fixture_dirs		return a list of fixture directories
core.management.commands	Command	parse_name	fixture_name	splits fixture name in name serialization format compression format
core.management.commands		module_to_dict	module omittable	converts a module namespace to a python dictionary
core.management.commands	Command	show_list	connection app_names	shows a list of all migrations on the system or only those of some named apps
core.management.commands	Command	show_plan	connection app_names	shows all known migrations (or only those of the specified app_names) in the order they will be applied
core.management.commands	Command	compile_messages	locations	locations is a list of tuples [ directory file ]
core.management.commands	Command	get_handler		returns the default wsgi handler for the runner
core.management.commands	Command	run		runs the server using the autoreloader if needed
core.mail		make_msgid	idstring domain	returns a string suitable for rfc 5322 compliant message-id e g
core.mail		forbid_multi_line_headers	name val encoding	forbids multi-line headers to prevent header injection
core.mail		split_addr	addr encoding	split the address into local part and domain properly encoded
core.mail		sanitize_address	addr encoding	format a pair of name address or an email address string
core.mail	MIMEMixin	as_string	unixfrom linesep	return the entire formatted message as a string
core.mail	EmailMessage	__init__	subject body from_email to	initialize a single email message which can be sent to multiple recipients
core.mail	EmailMessage	recipients		returns a list of all recipients of the email includes direct addressees as well as cc and bcc entries
core.mail	EmailMessage	send	fail_silently	sends the email message
core.mail	EmailMessage	attach	filename content mimetype	attaches a file with the given filename and content the filename can
core.mail	EmailMessage	attach_file	path mimetype	attaches a file from the filesystem
core.mail	EmailMessage	_create_mime_attachment	content mimetype	converts the content mimetype pair into a mime attachment object
core.mail	EmailMessage	_create_attachment	filename content mimetype	converts the filename content mimetype triple into a mime attachment object
core.mail	EmailMultiAlternatives	__init__	subject body from_email to	initialize a single email message which can be sent to multiple recipients
core.mail	EmailMultiAlternatives	attach_alternative	content mimetype	attach an alternative content representation
core.mail		get_connection	backend fail_silently	load an email backend and return an instance of it
core.mail		send_mail	subject message from_email recipient_list	easy wrapper for sending a single message to a recipient list all members
core.mail		send_mass_mail	datatuple fail_silently auth_user auth_password	given a datatuple of (subject message from_email recipient_list), sends each message to each recipient list
core.mail		mail_admins	subject message fail_silently connection	sends a message to the admins as defined by the admins setting
core.mail		mail_managers	subject message fail_silently connection	sends a message to the managers as defined by the managers setting
core.mail.backends	EmailBackend	send_messages	email_messages	write all messages to the stream in a thread-safe way
core.mail.backends	EmailBackend	_get_filename		return a unique file name
core.mail.backends	BaseEmailBackend	open		open a network connection
core.mail.backends	BaseEmailBackend	close		close a network connection
core.mail.backends	BaseEmailBackend	send_messages	email_messages	sends one or more emailmessage objects and returns the number of email messages sent
core.mail.backends	EmailBackend	send_messages	messages	redirect messages to the dummy outbox
core.mail.backends	EmailBackend	open		ensure an open connection to the email server return whether or not a
core.mail.backends	EmailBackend	close		closes the connection to the email server
core.mail.backends	EmailBackend	send_messages	email_messages	sends one or more emailmessage objects and returns the number of email messages sent
core.mail.backends	EmailBackend	_send	email_message	a helper method that does the actual sending
core.serializers		Deserializer	stream_or_string	deserialize a stream or string of json data
core.serializers		Deserializer	stream_or_string	deserialize a stream or string of yaml data
core.serializers		Deserializer	object_list	deserialize simple python objects back into django orm instances
core.serializers		_get_model	model_identifier	helper to look up a model from an "app_label model_name" string
core.serializers	DeserializationError	WithData	cls original_exc model fk	factory method for creating a deserialization error which has a more explanatory message
core.serializers	Serializer	serialize	queryset	serialize a queryset
core.serializers	Serializer	start_serialization		called when serializing of the queryset starts
core.serializers	Serializer	end_serialization		called when serializing of the queryset ends
core.serializers	Serializer	start_object	obj	called when serializing of an object starts
core.serializers	Serializer	end_object	obj	called when serializing of an object ends
core.serializers	Serializer	handle_field	obj field	called to handle each individual non-relational field on an object
core.serializers	Serializer	handle_fk_field	obj field	called to handle a foreignkey field
core.serializers	Serializer	handle_m2m_field	obj field	called to handle a manytomanyfield
core.serializers	Serializer	getvalue		return the fully serialized queryset or none if the output stream is not seekable
core.serializers	Deserializer	__init__	stream_or_string	init this serializer given a stream or a string
core.serializers	Deserializer	__next__		iteration iterface -- return the next item in the stream
core.serializers		build_instance	Model data db	build a model instance
core.serializers		register_serializer	format serializer_module serializers	register a new serializer
core.serializers		unregister_serializer	format	unregister a given serializer this is not a thread-safe operation
core.serializers		serialize	format queryset	serialize a queryset or any iterator that returns database objects using a certain serializer
core.serializers		deserialize	format stream_or_string	deserialize a stream or a string returns an iterator that yields (obj
core.serializers		_load_serializers		register built-in and settings-defined serializers this is done lazily so
core.serializers		sort_dependencies	app_list	sort a list of (app_config models) pairs into a single list of models
core.serializers	Serializer	start_serialization		start serialization -- open the xml document and the root element
core.serializers	Serializer	end_serialization		end serialization -- end the document
core.serializers	Serializer	start_object	obj	called as each object is handled
core.serializers	Serializer	end_object	obj	called after handling all fields for an object
core.serializers	Serializer	handle_field	obj field	called to handle each field on an object (except for foreignkeys and
core.serializers	Serializer	handle_fk_field	obj field	called to handle a foreignkey we need to treat them slightly differently from regular fields
core.serializers	Serializer	handle_m2m_field	obj field	called to handle a manytomanyfield related objects are only
core.serializers	Serializer	_start_relational_field	field	helper to output the <field> element for relational fields
core.serializers	Deserializer	_make_parser		create a hardened xml parser (no custom/external entities)
core.serializers	Deserializer	_handle_object	node	convert an <object> node to a deserializedobject
core.serializers	Deserializer	_handle_fk_field_node	node field	handle a <field> node for a foreignkey
core.serializers	Deserializer	_handle_m2m_field_node	node field	handle a <field> node for a manytomanyfield
core.serializers	Deserializer	_get_model_from_node	node attr	helper to look up a model from a <object model= > or a <field
core.serializers		getInnerText	node	get all the inner text of a dom node recursively
urls	LocaleRegexDescriptor	__get__	instance cls	return a compiled regular expression based on the active language
urls	LocaleRegexDescriptor	_compile	regex	compile and return the given regular expression
urls	LocaleRegexProvider	describe		format the url pattern for display in warning messages
urls	LocaleRegexProvider	_check_pattern_startswith_slash		check that the pattern does not begin with a forward slash
urls	RegexURLPattern	_check_pattern_name		check that the pattern name does not contain a colon
urls	RegexURLPattern	lookup_str		a string that identifies the view (e g 'path to view_function' or
urls	RegexURLResolver	_check_include_trailing_dollar		check that include is not used with a regex ending with a dollar
urls		set_script_prefix	prefix	set the script prefix for the current thread
urls		get_script_prefix		return the currently active script prefix useful for client code that
urls		clear_script_prefix		unset the script prefix for the current thread
urls		set_urlconf	urlconf_name	set the urlconf for the current thread overriding the default one in settings
urls		get_urlconf	default	return the root urlconf to use for the current thread if it has been changed from the default one
urls		is_valid_path	path urlconf	return true if the given path resolves against the default url resolver false otherwise
urls		translate_url	url lang_code	given a url absolute or relative try to get its translated version in the lang_code language (either by i18n_patterns or by translated regex)
urls		get_callable	lookup_view	return a callable corresponding to lookup_view
contrib.admindocs	XViewMiddleware	process_view	request view_func view_args view_kwargs	if the request method is head and either the ip is internal or the user is a logged-in staff member quickly return with an x-header
contrib.admindocs		get_return_data_type	func_name	return a somewhat-helpful data type given a function name
contrib.admindocs		get_readable_field_data_type	field	returns the description for a given field type if it exists fields' descriptions can contain format strings which will be interpolated
contrib.admindocs		extract_views_from_urlpatterns	urlpatterns base namespace	return a list of views from a list of urlpatterns
contrib.admindocs		simplify_regex	pattern	clean up urlpattern regexes into something more readable by humans for
contrib.admindocs		trim_docstring	docstring	uniformly trim leading/trailing whitespace from docstrings
contrib.admindocs		parse_docstring	docstring	parse out the parts of a docstring return title body metadata
contrib.admindocs		parse_rst	text default_reference_context thing_being_parsed	convert the string from rest to an xhtml fragment
contrib.admindocs		replace_named_groups	pattern	find named groups in pattern and replace them with the group name e g
contrib.admindocs		replace_unnamed_groups	pattern	find unnamed groups in pattern and replace them with '<var>' e g
contrib.auth	AccessMixin	get_login_url		override this method to override the login_url attribute
contrib.auth	AccessMixin	get_permission_denied_message		override this method to override the permission_denied_message attribute
contrib.auth	AccessMixin	get_redirect_field_name		override this method to override the redirect_field_name attribute
contrib.auth	PermissionRequiredMixin	get_permission_required		override this method to override the permission_required attribute
contrib.auth	PermissionRequiredMixin	has_permission		override this method to customize the way permissions are checked
contrib.auth	UserPassesTestMixin	get_test_func		override this method to use a different test_func method
contrib.auth	AuthenticationForm	__init__	request	the 'request' parameter is set for custom auth use by subclasses
contrib.auth	AuthenticationForm	confirm_login_allowed	user	controls whether the given user may log in this is a policy setting
contrib.auth	PasswordResetForm	send_mail	subject_template_name email_template_name context from_email	sends a django core mail emailmultialternatives to to_email
contrib.auth	PasswordResetForm	get_users	email	given an email return matching user s who should receive a reset
contrib.auth	PasswordResetForm	save	domain_override subject_template_name email_template_name use_https	generates a one-use only link for resetting password and sends to the user
contrib.auth	PasswordChangeForm	clean_old_password		validates that the old_password field is correct
contrib.auth	AdminPasswordChangeForm	save	commit	saves the new password
contrib.auth		validate_password	password user password_validators	validate whether the password meets all validator requirements
contrib.auth		password_changed	password user password_validators	inform all validators that have implemented a password_changed() method that the password has been changed
contrib.auth		password_validators_help_texts	password_validators	return a list of all help texts of all configured validators
contrib.auth		_password_validators_help_text_html	password_validators	return an html string with all help texts of all configured validators in an <ul>
contrib.auth	PasswordResetTokenGenerator	make_token	user	returns a token that can be used once to do a password reset for the given user
contrib.auth	PasswordResetTokenGenerator	check_token	user token	check that a password reset token is correct for a given user
contrib.auth		user_passes_test	test_func login_url redirect_field_name	decorator for views that checks that the user passes the given test redirecting to the log-in page if necessary
contrib.auth		login_required	function redirect_field_name login_url	decorator for views that checks that the user is logged in redirecting to the log-in page if necessary
contrib.auth		permission_required	perm login_url raise_exception	decorator for views that checks whether a user has a particular permission enabled redirecting to the log-in page if necessary
contrib.auth	RemoteUserMiddleware	clean_username	username request	allows the backend to clean the username if the backend defines a clean_username method
contrib.auth	RemoteUserMiddleware	_remove_invalid_user	request	removes the current authenticated user in the request which is invalid but only if the user is authenticated via the remoteuserbackend
contrib.auth		deprecate_current_app	func	handle deprecation of the current_app parameter of the views
contrib.auth	LoginView	get_success_url		ensure the user-originating redirection url is safe
contrib.auth	LoginView	form_valid	form	security check complete log the user in
contrib.auth		logout_then_login	request login_url extra_context	logs out the user if they are logged in then redirects to the log-in page
contrib.auth		redirect_to_login	next login_url redirect_field_name	redirects the user to the login page passing the given 'next' page
contrib.auth		password_reset_confirm	request uidb64 token template_name	view that checks the hash in a password reset link and presents a form for entering a new password
contrib.auth		check_password	password encoded setter preferred	returns a boolean of whether the raw password matches the three part encoded digest
contrib.auth		make_password	password salt hasher	turn a plain-text password into a hash for database storage same as encode() but generates a new random salt
contrib.auth		get_hasher	algorithm	returns an instance of a loaded password hasher
contrib.auth		identify_hasher	encoded	returns an instance of a loaded password hasher
contrib.auth		mask_hash	hash show char	returns the given hash with only the first show number shown the
contrib.auth	BasePasswordHasher	salt		generates a cryptographically secure nonce salt in ascii
contrib.auth	BasePasswordHasher	verify	password encoded	checks if the given password is correct
contrib.auth	BasePasswordHasher	encode	password salt	creates an encoded database value the result is normally formatted as "algorithm$salt$hash" and
contrib.auth	BasePasswordHasher	safe_summary	encoded	returns a summary of safe values the result is a dictionary and will be used where the password field
contrib.auth	BasePasswordHasher	harden_runtime	password encoded	bridge the runtime gap between the work factor supplied in encoded and the work factor suggested by this hasher
contrib.auth	Argon2PasswordHasher	_decode	encoded	split an encoded hash and return algorithm variety version time_cost memory_cost
contrib.auth		_clean_credentials	credentials	cleans a dictionary of credentials of potentially sensitive info before sending to less secure functions
contrib.auth		authenticate	request	if the given credentials are valid return a user object
contrib.auth		login	request user backend	persist a user id and a backend in the request this way a user doesn't
contrib.auth		logout	request	removes the authenticated user's id from the request and flushes their session data
contrib.auth		get_user_model		returns the user model that is active in this project
contrib.auth		get_user	request	returns the user model instance associated with the given request session
contrib.auth		get_permission_codename	action opts	returns the codename of the permission for the specified action
contrib.auth		update_session_auth_hash	request user	updating a user's password logs out all sessions for the user
contrib.auth	ModelBackend	user_can_authenticate	user	reject users with is_active=false custom user models that don't have
contrib.auth	ModelBackend	_get_permissions	user_obj obj from_name	returns the permissions of user_obj from from_name from_name can
contrib.auth	ModelBackend	get_user_permissions	user_obj obj	returns a set of permission strings the user user_obj has from their user_permissions
contrib.auth	ModelBackend	get_group_permissions	user_obj obj	returns a set of permission strings the user user_obj has from the groups they belong
contrib.auth	ModelBackend	has_module_perms	user_obj app_label	returns true if user_obj has any permissions in the given app_label
contrib.auth	RemoteUserBackend	authenticate	request remote_user	the username passed as remote_user is considered trusted this
contrib.auth	RemoteUserBackend	clean_username	username	performs any cleaning on the "username" prior to using it to get or create the user object
contrib.auth	RemoteUserBackend	configure_user	user	configures a user after creation and returns the updated user
contrib.auth	PermWrapper	__contains__	perm_name	lookup by "someapp" or "someapp someperm" in perms
contrib.auth		auth	request	returns context variables required by apps that use django's authentication system
contrib.auth	BaseUserManager	normalize_email	cls email	normalize the email address by lowercasing the domain part of it
contrib.auth	BaseUserManager	make_random_password	length allowed_chars	generate a random password with the given length and given allowed_chars
contrib.auth	AbstractBaseUser	get_username		return the identifying username for this user
contrib.auth	AbstractBaseUser	is_anonymous		always return false this is a way of comparing user objects to
contrib.auth	AbstractBaseUser	is_authenticated		always return true this is a way to tell if the user has been
contrib.auth	AbstractBaseUser	check_password	raw_password	return a boolean of whether the raw_password was correct handles
contrib.auth	AbstractBaseUser	get_session_auth_hash		return an hmac of the password field
contrib.auth		update_last_login	sender user	a signal receiver which updates the last_login date for the user logging in
contrib.auth	UserManager	_create_user	username email password	creates and saves a user with the given username email and password
contrib.auth		_user_has_perm	user perm obj	a backend can raise permissiondenied to short-circuit permission checking
contrib.auth		_user_has_module_perms	user app_label	a backend can raise permissiondenied to short-circuit permission checking
contrib.auth	PermissionsMixin	get_group_permissions	obj	returns a list of permission strings that this user has through their groups
contrib.auth	PermissionsMixin	has_perm	perm obj	returns true if the user has the specified permission this method
contrib.auth	PermissionsMixin	has_perms	perm_list obj	returns true if the user has each of the specified permissions if
contrib.auth	PermissionsMixin	has_module_perms	app_label	returns true if the user has any permissions in the given app label
contrib.auth	AbstractUser	get_full_name		returns the first_name plus the last_name with a space in between
contrib.auth	AbstractUser	get_short_name		returns the short name for the user
contrib.auth	AbstractUser	email_user	subject message from_email	sends an email to this user
contrib.auth	UserAdmin	get_form	request obj	use special form during user creation
contrib.auth	UserAdmin	response_add	request obj post_url_continue	determines the httpresponse for the add_view stage it mostly defers to
contrib.auth.handlers		check_password	environ username password	authenticates against django's auth database mod_wsgi docs specify none true false as return value depending
contrib.auth.handlers		groups_for_user	environ username	authorizes a user based on groups
contrib.auth.management		_get_all_permissions	opts	returns codename name for all permissions in the given opts
contrib.auth.management		_get_builtin_permissions	opts	returns codename name for all autogenerated permissions
contrib.auth.management		get_system_username		try to determine the current system user's username
contrib.auth.management		get_default_username	check_db	try to determine the current system user's username to use as a default
contrib.auth.management.commands	Command	get_input_data	field message default	override this method if you want to customize data inputs or validation exceptions
contrib.staticfiles	HashedFilesMixin	file_hash	name content	return a hash of the file with the given name and optional content
contrib.staticfiles	HashedFilesMixin	_url	hashed_name_func name force hashed_files	return the non-hashed url in debug mode
contrib.staticfiles	HashedFilesMixin	url	name force	return the non-hashed url in debug mode
contrib.staticfiles	HashedFilesMixin	url_converter	name hashed_files template	return the custom url converter for the given file name
contrib.staticfiles	HashedFilesMixin	post_process	paths dry_run	post process the given ordereddict of files called from collectstatic
contrib.staticfiles		staticfiles_urlpatterns	prefix	helper function to return a url pattern for serving static files
contrib.staticfiles	StaticFilesHandler	_should_handle	path	checks if the path should be handled ignores the path if
contrib.staticfiles	StaticFilesHandler	file_path	url	returns the relative path to the media file on disk for the given url
contrib.staticfiles	StaticFilesHandler	serve	request	actually serves the request path
contrib.staticfiles		serve	request path insecure	serve static files below a given point in the directory structure or from locations inferred from the staticfiles finders
contrib.staticfiles	BaseFinder	find	path all	given a relative file path this ought to find an absolute file path
contrib.staticfiles	BaseFinder	list	ignore_patterns	given an optional list of paths to ignore this should return a two item iterable consisting of the relative path and storage
contrib.staticfiles	FileSystemFinder	find	path all	looks for files in the extra locations as defined in staticfiles_dirs
contrib.staticfiles	FileSystemFinder	find_location	root path prefix	finds a requested static file in a location returning the found absolute path (or none if no match)
contrib.staticfiles	FileSystemFinder	list	ignore_patterns	list all files in all locations
contrib.staticfiles	AppDirectoriesFinder	list	ignore_patterns	list all files in all app storages
contrib.staticfiles	AppDirectoriesFinder	find	path all	looks for files in the app directories
contrib.staticfiles	AppDirectoriesFinder	find_in_app	app path	find a requested static file in an app's static locations
contrib.staticfiles	BaseStorageFinder	find	path all	looks for files in the default file storage if it's local
contrib.staticfiles	BaseStorageFinder	list	ignore_patterns	list all files of the storage
contrib.staticfiles		find	path all	find a static file with the given path using all enabled finders
contrib.staticfiles		get_finder	import_path	imports the staticfiles finder class described by import_path where import_path is the full python path to the class
contrib.staticfiles		matches_patterns	path patterns	return true or false depending on whether the path should be ignored (if it matches any pattern in ignore_patterns)
contrib.staticfiles		get_files	storage ignore_patterns location	recursively walk the storage directories yielding the paths of all files that should be copied
contrib.staticfiles		check_settings	base_url	checks if the staticfiles settings have sane values
contrib.staticfiles.management.commands	Command	set_options		set instance variables based on an options dict
contrib.staticfiles.management.commands	Command	collect		perform the bulk of the work of collectstatic
contrib.staticfiles.management.commands	Command	log	msg level	small log helper
contrib.staticfiles.management.commands	Command	clear_dir	path	deletes the given relative path using the destination storage backend
contrib.staticfiles.management.commands	Command	delete_file	path prefixed_path source_storage	checks if the target file should be deleted if it already exists
contrib.staticfiles.management.commands	Command	link_file	path prefixed_path source_storage	attempt to link path
contrib.staticfiles.management.commands	Command	copy_file	path prefixed_path source_storage	attempt to copy path with storage
contrib.staticfiles.management.commands	Command	get_handler		returns the static files serving handler wrapping the default handler if static files should be served
contrib.messages	MessageMiddleware	process_response	request response	updates the storage backend (i e saves the messages)
contrib.messages		add_message	request level message extra_tags	attempts to add a message to the request using the 'messages' app
contrib.messages		get_messages	request	returns the message storage on the request if it exists otherwise returns an empty list
contrib.messages		get_level	request	returns the minimum level of messages to be recorded
contrib.messages		set_level	request level	sets the minimum level of messages to be recorded returning true if the level was recorded successfully
contrib.messages		debug	request message extra_tags fail_silently	adds a message with the debug level
contrib.messages		info	request message extra_tags fail_silently	adds a message with the info level
contrib.messages		success	request message extra_tags fail_silently	adds a message with the success level
contrib.messages		warning	request message extra_tags fail_silently	adds a message with the warning level
contrib.messages		error	request message extra_tags fail_silently	adds a message with the error level
contrib.messages		get_level_tags		returns the message level tags
contrib.messages		messages	request	returns a lazy 'messages' context variable
contrib.messages.storage	SessionStorage	_get		retrieves a list of messages from the request's session this storage
contrib.messages.storage	SessionStorage	_store	messages response	stores a list of messages to the request's session
contrib.messages.storage	CookieStorage	_get		retrieves a list of messages from the messages cookie if the
contrib.messages.storage	CookieStorage	_update_cookie	encoded_data response	either sets the cookie with the encoded data if there is any data to store or deletes the cookie
contrib.messages.storage	CookieStorage	_store	messages response remove_oldest	stores the messages to a cookie returning a list of any messages which could not be stored
contrib.messages.storage	CookieStorage	_hash	value	creates an hmac/sha1 hash based on the value and the project setting's secret_key modified to make it unique for the present purpose
contrib.messages.storage	CookieStorage	_encode	messages encode_empty	returns an encoded version of the messages list which can be stored as plain text
contrib.messages.storage	CookieStorage	_decode	data	safely decodes an encoded text stream back into a list of messages
contrib.messages.storage	Message	_prepare		prepares the message for serialization by forcing the message and extra_tags to unicode in case they are lazy translations
contrib.messages.storage	BaseStorage	_loaded_messages		returns a list of loaded messages retrieving them first if they have not been loaded yet
contrib.messages.storage	BaseStorage	_get		retrieves a list of stored messages returns a tuple of the messages
contrib.messages.storage	BaseStorage	_store	messages response	stores a list of messages returning a list of any messages which could not be stored
contrib.messages.storage	BaseStorage	_prepare_messages	messages	prepares a list of messages for storage
contrib.messages.storage	BaseStorage	update	response	stores all unread messages
contrib.messages.storage	BaseStorage	add	level message extra_tags	queues a message to be stored
contrib.messages.storage	BaseStorage	_get_level		returns the minimum recorded level
contrib.messages.storage	BaseStorage	_set_level	value	sets a custom minimum recorded level
contrib.messages.storage	FallbackStorage	_get		gets a single list of messages from all storage backends
contrib.messages.storage	FallbackStorage	_store	messages response	stores the messages returning any unstored messages after trying all backends
contrib.messages.storage		default_storage	request	callable with the same interface as the storage classes
contrib.flatpages		flatpage	request url	public interface to the flat page view
contrib.flatpages		render_flatpage	request f	internal interface to the flat page view
contrib.flatpages.templatetags		get_flatpages	parser token	retrieves all flatpage objects available for the current site and visible to the specific user (or visible to all users if no user is
contrib.contenttypes		generic_inlineformset_factory	model form formset ct_field	returns a genericinlineformset for the given kwargs
contrib.contenttypes		shortcut	request content_type_id object_id	redirect to an object's page based on a content-type id and an object id
contrib.contenttypes	ContentTypeManager	get_for_model	model for_concrete_model	returns the contenttype object for a given model creating the contenttype if necessary
contrib.contenttypes	ContentTypeManager	get_for_models		given *models returns a dictionary mapping {model content_type}
contrib.contenttypes	ContentTypeManager	get_for_id	id	lookup a contenttype by id uses the same shared cache as get_for_model
contrib.contenttypes	ContentTypeManager	clear_cache		clear out the content-type cache
contrib.contenttypes	ContentTypeManager	_add_to_cache	using ct	insert a contenttype into the cache
contrib.contenttypes	ContentType	model_class		returns the python model class for this type of content
contrib.contenttypes	ContentType	get_object_for_this_type		returns an object of this type for the keyword arguments given
contrib.contenttypes	ContentType	get_all_objects_for_this_type		returns all objects of this type for the keyword arguments given
contrib.contenttypes	GenericForeignKey	get_filter_kwargs_for_object	obj	see corresponding method on field
contrib.contenttypes	GenericForeignKey	get_forward_related_filter	obj	see corresponding method on relatedfield
contrib.contenttypes	GenericForeignKey	_check_content_type_field		check if field named field_name in model model exists and is a valid content_type field is a foreignkey to contenttype
contrib.contenttypes	GenericRelation	_is_matching_generic_foreign_key	field	return true if field is a genericforeignkey whose content type and object id fields correspond to the equivalent attributes on this
contrib.contenttypes	GenericRelation	_get_path_info_with_parent		return the path that joins the current model through any parent models
contrib.contenttypes	GenericRelation	get_content_type		return the content type associated with this field's model
contrib.contenttypes	GenericRelation	bulk_related_objects	objs using	return all objects related to objs via this genericrelation
contrib.contenttypes		create_generic_related_manager	superclass rel	factory function to create a manager that subclasses another manager generally the default manager of a given model and adds behaviors
contrib.contenttypes.management		inject_rename_contenttypes_operations	plan apps using	insert a renamecontenttype operation after every planned renamemodel operation
contrib.contenttypes.management		create_contenttypes	app_config verbosity interactive using	creates content types for models in the given app
contrib.contenttypes.management.commands	NoFastDeleteCollector	can_fast_delete		always load related objects to display them when showing confirmation
contrib.humanize.templatetags		ordinal	value	converts an integer to its ordinal as a string 1 is '1st', 2 is '2nd',
contrib.humanize.templatetags		intcomma	value use_l10n	converts an integer to a string containing commas every three digits
contrib.humanize.templatetags		intword	value	converts a large integer to a friendly text representation works best
contrib.humanize.templatetags		apnumber	value	for numbers 1-9 returns the number spelled out otherwise returns the
contrib.humanize.templatetags		naturalday	value arg	for date values that are tomorrow today or yesterday compared to present day returns representing string
contrib.humanize.templatetags		naturaltime	value	for date and time values shows how many seconds minutes or hours ago compared to current timestamp returns representing string
contrib.sites		get_current_site	request	checks if contrib sites is installed and returns either the current
contrib.sites	CurrentSiteManager	_get_field_name		return self __field_name or 'site' or 'sites'
contrib.sites		_simple_domain_name_validator	value	validates that the given value contains no whitespaces to prevent common typos
contrib.sites	SiteManager	get_current	request	returns the current site based on the site_id in the project's settings
contrib.sites	SiteManager	clear_cache		clears the site object cache
contrib.sites		clear_site_cache	sender	clears the cache if primed each time a site is saved or deleted
contrib.admin	AdminSite	check	app_configs	run the system checks on all modeladmins except if they aren't customized at all
contrib.admin	AdminSite	register	model_or_iterable admin_class	registers the given model s with the given admin class
contrib.admin	AdminSite	unregister	model_or_iterable	unregisters the given model s
contrib.admin	AdminSite	is_registered	model	check if a model class is registered with this adminsite
contrib.admin	AdminSite	add_action	action name	register an action to be available globally
contrib.admin	AdminSite	disable_action	name	disable a globally-registered action raises keyerror for invalid names
contrib.admin	AdminSite	get_action	name	explicitly get a registered global action whether it's enabled or not
contrib.admin	AdminSite	actions		get all the enabled actions as an iterable of name func
contrib.admin	AdminSite	has_permission	request	returns true if the given httprequest has permission to view *at least one* page in the admin site
contrib.admin	AdminSite	admin_view	view cacheable	decorator to create an admin view attached to this adminsite this
contrib.admin	AdminSite	each_context	request	returns a dictionary of variables to put in the template context for *every* page in the admin site
contrib.admin	AdminSite	password_change	request extra_context	handles the "change password" task -- both form display and validation
contrib.admin	AdminSite	password_change_done	request extra_context	displays the "success" page after a password change
contrib.admin	AdminSite	i18n_javascript	request extra_context	displays the i18n javascript that the django admin requires
contrib.admin	AdminSite	logout	request extra_context	logs out the user for the given httprequest
contrib.admin	AdminSite	login	request extra_context	displays the login form for the given httprequest
contrib.admin	AdminSite	_build_app_dict	request label	builds the app dictionary takes an optional label parameters to filter
contrib.admin	AdminSite	get_app_list	request	returns a sorted list of all the installed apps that have been registered in this site
contrib.admin	AdminSite	index	request extra_context	displays the main admin index page which lists all of the installed apps that have been registered in this site
contrib.admin		register		registers the given model s classes and wrapped modeladmin class with admin site
contrib.admin	ListFilter	has_output		returns true if some choices would be output for this filter
contrib.admin	ListFilter	choices	changelist	returns choices ready to be output in the template
contrib.admin	ListFilter	queryset	request queryset	returns the filtered queryset
contrib.admin	ListFilter	expected_parameters		returns the list of parameter names that are expected from the request's query string and that will be used by this filter
contrib.admin	SimpleListFilter	value		returns the value in string format provided in the request's query string for this filter if any
contrib.admin	SimpleListFilter	lookups	request model_admin	must be overridden to return a list of tuples value verbose value
contrib.admin	RelatedFieldListFilter	include_empty_choice		return true if a " none " choice should be included which filters out everything except empty relationships
contrib.admin		check_dependencies		check that the admin's dependencies are correctly installed
contrib.admin	BaseModelAdminChecks	_check_raw_id_fields	obj	check that raw_id_fields only contains field names that are listed on the model
contrib.admin	BaseModelAdminChecks	_check_raw_id_fields_item	obj model field_name label	check an item of raw_id_fields, i e check that field named
contrib.admin	BaseModelAdminChecks	_check_fields	obj	check that fields only refer to existing fields doesn't contain duplicates
contrib.admin	BaseModelAdminChecks	_check_fieldsets	obj	check that fieldsets is properly formatted and doesn't contain duplicates
contrib.admin	BaseModelAdminChecks	_check_fieldsets_item	obj model fieldset label	check an item of fieldsets, i e check that this is a pair of a
contrib.admin	BaseModelAdminChecks	_check_field_spec	obj model fields label	fields should be an item of fields or an item of fieldset[1]['fields'] for any fieldset in fieldsets
contrib.admin	BaseModelAdminChecks	_check_exclude	obj	check that exclude is a sequence without duplicates
contrib.admin	BaseModelAdminChecks	_check_form	obj	check that form subclasses basemodelform
contrib.admin	BaseModelAdminChecks	_check_filter_vertical	obj	check that filter_vertical is a sequence of field names
contrib.admin	BaseModelAdminChecks	_check_filter_horizontal	obj	check that filter_horizontal is a sequence of field names
contrib.admin	BaseModelAdminChecks	_check_filter_item	obj model field_name label	check one item of filter_vertical or filter_horizontal, i e
contrib.admin	BaseModelAdminChecks	_check_radio_fields	obj	check that radio_fields is a dictionary
contrib.admin	BaseModelAdminChecks	_check_radio_fields_key	obj model field_name label	check that a key of radio_fields dictionary is name of existing field and that the field is a foreignkey or has choices defined
contrib.admin	BaseModelAdminChecks	_check_radio_fields_value	obj val label	check type of a value of radio_fields dictionary
contrib.admin	BaseModelAdminChecks	_check_prepopulated_fields	obj	check that prepopulated_fields is a dictionary containing allowed field types
contrib.admin	BaseModelAdminChecks	_check_prepopulated_fields_key	obj model field_name label	check a key of prepopulated_fields dictionary i e check that it
contrib.admin	BaseModelAdminChecks	_check_prepopulated_fields_value	obj model val label	check a value of prepopulated_fields dictionary i e it's an
contrib.admin	BaseModelAdminChecks	_check_prepopulated_fields_value_item	obj model field_name label	for prepopulated_fields equal to {"slug": ("title",)}, field_name is "title"
contrib.admin	BaseModelAdminChecks	_check_ordering	obj	check that ordering refers to existing fields or is random
contrib.admin	BaseModelAdminChecks	_check_ordering_item	obj model field_name label	check that ordering refers to existing fields
contrib.admin	BaseModelAdminChecks	_check_readonly_fields	obj	check that readonly_fields refers to proper attribute or field
contrib.admin	ModelAdminChecks	_check_save_as	obj	check save_as is a boolean
contrib.admin	ModelAdminChecks	_check_save_on_top	obj	check save_on_top is a boolean
contrib.admin	ModelAdminChecks	_check_inlines	obj	check all inline model admin classes
contrib.admin	ModelAdminChecks	_check_inlines_item	obj model inline label	check one inline model admin
contrib.admin	ModelAdminChecks	_check_list_display	obj	check that list_display only contains fields or usable attributes
contrib.admin	ModelAdminChecks	_check_list_display_links	obj	check that list_display_links is a unique subset of list_display
contrib.admin	ModelAdminChecks	_check_list_filter_item	obj model item label	check one item of list_filter, i e check if it is one of three options
contrib.admin	ModelAdminChecks	_check_list_select_related	obj	check that list_select_related is a boolean a list or a tuple
contrib.admin	ModelAdminChecks	_check_list_per_page	obj	check that list_per_page is an integer
contrib.admin	ModelAdminChecks	_check_list_max_show_all	obj	check that list_max_show_all is an integer
contrib.admin	ModelAdminChecks	_check_list_editable	obj	check that list_editable is a sequence of editable fields from list_display without first element
contrib.admin	ModelAdminChecks	_check_search_fields	obj	check search_fields is a sequence
contrib.admin	ModelAdminChecks	_check_date_hierarchy	obj	check that date_hierarchy refers to datefield or datetimefield
contrib.admin	InlineModelAdminChecks	_check_extra	obj	check that extra is an integer
contrib.admin	InlineModelAdminChecks	_check_max_num	obj	check that max_num is an integer
contrib.admin	InlineModelAdminChecks	_check_min_num	obj	check that min_num is an integer
contrib.admin	InlineModelAdminChecks	_check_formset	obj	check formset is a subclass of basemodelformset
contrib.admin	AdminSeleniumTestCase	wait_until	callback timeout	helper function that blocks the execution of the tests until the specified callback returns a value that is not falsy
contrib.admin	AdminSeleniumTestCase	wait_for_popup	num_windows timeout	block until num_windows are present usually 2 but can be overridden in the case of pop-ups opening other pop-ups
contrib.admin	AdminSeleniumTestCase	wait_for	css_selector timeout	helper function that blocks until a css selector is found on the page
contrib.admin	AdminSeleniumTestCase	wait_for_text	css_selector text timeout	helper function that blocks until the text is found in the css selector
contrib.admin	AdminSeleniumTestCase	wait_for_value	css_selector text timeout	helper function that blocks until the value is found in the css selector
contrib.admin	AdminSeleniumTestCase	wait_until_visible	css_selector timeout	block until the element described by the css selector is visible
contrib.admin	AdminSeleniumTestCase	wait_until_invisible	css_selector timeout	block until the element described by the css selector is invisible
contrib.admin	AdminSeleniumTestCase	wait_page_loaded		block until page has started to load
contrib.admin	AdminSeleniumTestCase	admin_login	username password login_url	helper function to log into the admin
contrib.admin	AdminSeleniumTestCase	get_css_value	selector attribute	helper function that returns the value for the css attribute of an dom element specified by the given selector
contrib.admin	AdminSeleniumTestCase	get_select_option	selector value	returns the <option> with the value value inside the <select> widget identified by the css selector selector
contrib.admin	AdminSeleniumTestCase	assertSelectOptions	selector values	asserts that the <select> widget identified by selector has the options with the given values
contrib.admin	AdminSeleniumTestCase	assertSelectedOptions	selector values	asserts that the <select> widget identified by selector has the selected options with the given values
contrib.admin	AdminSeleniumTestCase	has_css_class	selector klass	returns true if the element identified by selector has the css class klass
contrib.admin	BaseModelAdmin	formfield_for_dbfield	db_field request	hook for specifying the form field instance for a given database field instance
contrib.admin	BaseModelAdmin	formfield_for_choice_field	db_field request	get a form field for a database field that has declared choices
contrib.admin	BaseModelAdmin	get_field_queryset	db db_field request	if the modeladmin specifies ordering the queryset should respect that ordering
contrib.admin	BaseModelAdmin	formfield_for_foreignkey	db_field request	get a form field for a foreignkey
contrib.admin	BaseModelAdmin	formfield_for_manytomany	db_field request	get a form field for a manytomanyfield
contrib.admin	BaseModelAdmin	get_empty_value_display		return the empty_value_display set on modeladmin or adminsite
contrib.admin	BaseModelAdmin	get_exclude	request obj	hook for specifying exclude
contrib.admin	BaseModelAdmin	get_fields	request obj	hook for specifying fields
contrib.admin	BaseModelAdmin	get_fieldsets	request obj	hook for specifying fieldsets
contrib.admin	BaseModelAdmin	get_ordering	request	hook for specifying field ordering
contrib.admin	BaseModelAdmin	get_readonly_fields	request obj	hook for specifying custom readonly fields
contrib.admin	BaseModelAdmin	get_prepopulated_fields	request obj	hook for specifying custom prepopulated fields
contrib.admin	BaseModelAdmin	get_queryset	request	returns a queryset of all model instances that can be edited by the admin site
contrib.admin	BaseModelAdmin	to_field_allowed	request to_field	returns true if the model associated with this admin should be allowed to be referenced by the specified field
contrib.admin	BaseModelAdmin	has_add_permission	request	returns true if the given request has permission to add an object
contrib.admin	BaseModelAdmin	has_change_permission	request obj	returns true if the given request has permission to change the given django model instance the default implementation doesn't examine the
contrib.admin	BaseModelAdmin	has_delete_permission	request obj	returns true if the given request has permission to change the given django model instance the default implementation doesn't examine the
contrib.admin	BaseModelAdmin	has_module_permission	request	returns true if the given request has any permission in the given app label
contrib.admin	ModelAdmin	get_model_perms	request	returns a dict of all perms for this model this dict has the keys
contrib.admin	ModelAdmin	get_form	request obj	returns a form class for use in the admin add view this is used by
contrib.admin	ModelAdmin	get_changelist	request	returns the changelist class for use on the changelist page
contrib.admin	ModelAdmin	get_object	request object_id from_field	returns an instance matching the field and value provided the primary key is used if no field is provided
contrib.admin	ModelAdmin	get_changelist_form	request	returns a form class for use in the formset on the changelist page
contrib.admin	ModelAdmin	get_changelist_formset	request	returns a formset class for use on the changelist page if list_editable is used
contrib.admin	ModelAdmin	get_formsets_with_inlines	request obj	yields formsets and the corresponding inlines
contrib.admin	ModelAdmin	log_addition	request object message	log that an object has been successfully added
contrib.admin	ModelAdmin	log_change	request object message	log that an object has been successfully changed
contrib.admin	ModelAdmin	log_deletion	request object object_repr	log that an object will be deleted note that this method must be
contrib.admin	ModelAdmin	action_checkbox	obj	a list_display column containing a checkbox widget
contrib.admin	ModelAdmin	get_actions	request	return a dictionary mapping the names of all actions for this modeladmin to a tuple of callable name description for each action
contrib.admin	ModelAdmin	get_action_choices	request default_choices	return a list of choices for use in a form object each choice is a
contrib.admin	ModelAdmin	get_action	action	return a given action from a parameter which can either be a callable or the name of a method on the modeladmin
contrib.admin	ModelAdmin	get_list_display	request	return a sequence containing the fields to be displayed on the changelist
contrib.admin	ModelAdmin	get_list_display_links	request list_display	return a sequence containing the fields to be displayed as links on the changelist
contrib.admin	ModelAdmin	get_list_filter	request	returns a sequence containing the fields to be displayed as filters in the right sidebar of the changelist page
contrib.admin	ModelAdmin	get_list_select_related	request	returns a list of fields to add to the select_related() part of the changelist items query
contrib.admin	ModelAdmin	get_search_fields	request	returns a sequence containing the fields to be searched whenever somebody submits a search query
contrib.admin	ModelAdmin	get_search_results	request queryset search_term	returns a tuple containing a queryset to implement the search and a boolean indicating if the results may contain duplicates
contrib.admin	ModelAdmin	get_preserved_filters	request	returns the preserved filters querystring
contrib.admin	ModelAdmin	construct_change_message	request form formsets add	construct a json structure describing changes from a changed object
contrib.admin	ModelAdmin	message_user	request message level extra_tags	send a message to the user the default implementation
contrib.admin	ModelAdmin	save_form	request form change	given a modelform return an unsaved instance change is true if
contrib.admin	ModelAdmin	save_model	request obj form change	given a model instance save it to the database
contrib.admin	ModelAdmin	delete_model	request obj	given a model instance delete it from the database
contrib.admin	ModelAdmin	save_formset	request form formset change	given an inline formset save it to the database
contrib.admin	ModelAdmin	save_related	request form formsets change	given the httprequest, the parent modelform instance the list of inline formsets and a boolean value based on whether the
contrib.admin	ModelAdmin	response_add	request obj post_url_continue	determines the httpresponse for the add_view stage
contrib.admin	ModelAdmin	response_change	request obj	determines the httpresponse for the change_view stage
contrib.admin	ModelAdmin	response_post_save_add	request obj	figure out where to redirect after the 'save' button has been pressed when adding a new object
contrib.admin	ModelAdmin	response_post_save_change	request obj	figure out where to redirect after the 'save' button has been pressed when editing an existing object
contrib.admin	ModelAdmin	response_action	request queryset	handle an admin action this is called if a request is posted to the
contrib.admin	ModelAdmin	response_delete	request obj_display obj_id	determines the httpresponse for the delete_view stage
contrib.admin	ModelAdmin	get_changeform_initial_data	request	get the initial form data
contrib.admin	ModelAdmin	_get_obj_does_not_exist_redirect	request opts object_id	create a message informing the user that the object doesn't exist and return a redirect to the admin index page
contrib.admin	ModelAdmin	changelist_view	request extra_context	the 'change list' admin view for this model
contrib.admin	ModelAdmin	_delete_view	request object_id extra_context	the 'delete' admin view for this model
contrib.admin	ModelAdmin	history_view	request object_id extra_context	the 'history' admin view for this model
contrib.admin	ModelAdmin	_create_formsets	request obj change	helper function to generate formsets for add/change_view
contrib.admin	InlineModelAdmin	get_extra	request obj	hook for customizing the number of extra inline forms
contrib.admin	InlineModelAdmin	get_min_num	request obj	hook for customizing the min number of inline forms
contrib.admin	InlineModelAdmin	get_max_num	request obj	hook for customizing the max number of extra inline forms
contrib.admin	InlineModelAdmin	get_formset	request obj	returns a baseinlineformset class for use in admin add/change views
contrib.admin		lookup_needs_distinct	opts lookup_path	returns true if 'distinct()' should be used to query the given lookup path
contrib.admin		prepare_lookup_value	key value	returns a lookup value prepared to be used in queryset filtering
contrib.admin		quote	s	ensure that primary key values do not confuse the admin urls by escaping any '/', '_' and ':' and similarly problematic characters
contrib.admin		unquote	s	undo the effects of quote() based heavily on urllib unquote()
contrib.admin		flatten	fields	returns a list which is a single level of flattening of the original list
contrib.admin		flatten_fieldsets	fieldsets	returns a list of field names from an admin fieldsets structure
contrib.admin		get_deleted_objects	objs opts user admin_site	find all objects related to objs that should also be deleted objs
contrib.admin	NestedObjects	nested	format_callback	return the graph as a nested list
contrib.admin	NestedObjects	can_fast_delete		we always want to load the objects into memory so that we can display them to the user in confirm page
contrib.admin		model_format_dict	obj	return a dict with keys 'verbose_name' and 'verbose_name_plural', typically for use with string formatting
contrib.admin		model_ngettext	obj n	return the appropriate verbose_name or verbose_name_plural value for obj depending on the count n
contrib.admin		_get_non_gfk_field	opts name	for historical reasons the admin app relies on genericforeignkeys as being "not found" by get_field()
contrib.admin		label_for_field	name model model_admin return_attr	returns a sensible label for a field name the name can be a callable
contrib.admin		reverse_field_path	model path	create a reversed field path
contrib.admin		get_fields_from_path	model path	return list of fields given path relative to model
contrib.admin		construct_change_message	form formsets add	construct a json structure describing changes from a changed object
contrib.admin		delete_selected	modeladmin request queryset	default action which deletes the selected objects
contrib.admin	LogEntry	get_change_message		if self change_message is a json structure interpret it as a change
contrib.admin	LogEntry	get_edited_object		returns the edited object represented by this log entry
contrib.admin	LogEntry	get_admin_url		returns the admin url to edit the object represented by this log entry
contrib.admin		url_params_from_lookup_dict	lookups	converts the type of lookups specified in a foreignkey limit_choices_to
contrib.admin.templatetags		paginator_number	cl i	generates an individual page index link in a paginated list
contrib.admin.templatetags		pagination	cl	generates the series of links to the pages in a paginated list
contrib.admin.templatetags		result_headers	cl	generates the list column headers
contrib.admin.templatetags		_coerce_field_name	field_name field_index	coerce a field_name which may be a callable to a string
contrib.admin.templatetags		items_for_result	cl result form	generates the actual list of data
contrib.admin.templatetags		result_list	cl	displays the headers and data list together
contrib.admin.templatetags		date_hierarchy	cl	displays the date hierarchy for date drill-down functionality
contrib.admin.templatetags		search_form	cl	displays a search form for searching the list
contrib.admin.templatetags		admin_actions	context	track the number of times the action field has been rendered on the page so we know which value to use
contrib.admin.templatetags		prepopulated_fields_js	context	creates a list of prepopulated_fields that should render javascript for the prepopulated fields for both the admin form and inlines
contrib.admin.templatetags		submit_row	context	displays the row of buttons for delete and save
contrib.admin.templatetags		cell_count	inline_admin_form	returns the number of cells used in a tabular inline
contrib.admin.templatetags		get_admin_log	parser token	populates a template variable with the admin log for the given criteria
contrib.admin.views	ChangeList	get_filters_params	params	returns all params except ignored_params
contrib.admin.views	ChangeList	get_ordering_field	field_name	returns the proper model field name corresponding to the given field_name to use for ordering
contrib.admin.views	ChangeList	get_ordering	request queryset	returns the list of ordering fields for the change list
contrib.admin.views	ChangeList	get_ordering_field_columns		returns an ordereddict of ordering field column numbers and asc/desc
contrib.admin.views		staff_member_required	view_func redirect_field_name login_url	decorator for views that checks that the user is logged in and is a staff member redirecting to the login page if necessary
contrib.postgres		prefix_validation_error	error prefix code params	prefix a validation error message while maintaining the existing validation data structure
contrib.postgres.forms	HStoreField	has_changed	initial data	return true if data differs from initial
contrib.sessions	BaseSessionManager	encode	session_dict	return the given session dictionary serialized and encoded as a string
contrib.sessions	SessionMiddleware	process_response	request response	if request session was modified or if the configuration is to save the
contrib.sessions.backends	SessionStore	create_model_instance	data	return a new instance of the session model object which represents the current session state
contrib.sessions.backends	SessionStore	save	must_create	saves the current session data to the database if 'must_create' is
contrib.sessions.backends	SessionStore	load		we load the data from the key itself instead of fetching from some external data store
contrib.sessions.backends	SessionStore	create		to create a new key we simply make sure that the modified flag is set so that the cookie is set on the client for the current request
contrib.sessions.backends	SessionStore	save	must_create	to save we get the session key as a securely signed string and then set the modified flag so that the cookie is set on the client for the
contrib.sessions.backends	SessionStore	exists	session_key	this method makes sense when you're talking to a shared resource but it doesn't matter when you're storing the information in the client's
contrib.sessions.backends	SessionStore	delete	session_key	to delete we clear the session key and the underlying data structure and set the modified flag so that the cookie is set on the client for
contrib.sessions.backends	SessionStore	cycle_key		keeps the same data but with a new key to do this we just have to
contrib.sessions.backends	SessionStore	_get_session_key		most session backends don't need to override this method but we do because instead of generating a random string we want to actually
contrib.sessions.backends	SessionBase	encode	session_dict	returns the given session dictionary serialized and encoded as a string
contrib.sessions.backends	SessionBase	is_empty		returns true when there is no session_key and the session is empty
contrib.sessions.backends	SessionBase	_get_new_session_key		returns session key that isn't being used
contrib.sessions.backends	SessionBase	_validate_session_key	key	key must be truthy and at least 8 characters long 8 characters is an
contrib.sessions.backends	SessionBase	_set_session_key	value	validate session key on assignment invalid values will set to none
contrib.sessions.backends	SessionBase	_get_session	no_load	lazily loads session from storage (unless "no_load" is true when only an empty dict is stored) and stores it in the current instance
contrib.sessions.backends	SessionBase	get_expiry_age		get the number of seconds until the session expires
contrib.sessions.backends	SessionBase	get_expiry_date		get session the expiry date as a datetime object
contrib.sessions.backends	SessionBase	set_expiry	value	sets a custom expiration for the session value can be an integer
contrib.sessions.backends	SessionBase	get_expire_at_browser_close		returns true if the session is set to expire when the browser closes and false if there's an expiry date
contrib.sessions.backends	SessionBase	flush		removes the current session data from the database and regenerates the key
contrib.sessions.backends	SessionBase	cycle_key		creates a new session key while retaining the current session data
contrib.sessions.backends	SessionBase	exists	session_key	returns true if the given session_key already exists
contrib.sessions.backends	SessionBase	create		creates a new session instance guaranteed to create a new object with
contrib.sessions.backends	SessionBase	save	must_create	saves the session data if 'must_create' is true a new session object
contrib.sessions.backends	SessionBase	delete	session_key	deletes the session data under this key if the key is none the
contrib.sessions.backends	SessionBase	load		loads the session data and returns a dictionary
contrib.sessions.backends	SessionBase	clear_expired	cls	remove expired sessions from the session store
contrib.sessions.backends	SessionStore	flush		removes the current session data from the database and regenerates the key
contrib.sessions.backends	SessionStore	_key_to_file	session_key	get the file associated with this session key
contrib.sessions.backends	SessionStore	_last_modification		return the modification time of the file storing the session's content
contrib.sessions.backends	SessionStore	_expiry_date	session_data	return the expiry time of the file storing the session's content
contrib.sitemaps		ping_google	sitemap_url ping_url	alerts google that the sitemap for the current site has been updated
contrib.syndication	Feed	feed_extra_kwargs	obj	returns an extra keyword arguments dictionary that is used when initializing the feed generator
contrib.syndication	Feed	item_extra_kwargs	item	returns an extra keyword arguments dictionary that is used with the add_item call of the feed generator
contrib.syndication	Feed	get_context_data		returns a dictionary to use as extra context if either self
contrib.syndication	Feed	get_feed	obj request	returns a feedgenerator defaultfeed object fully populated for
contrib.gis	CPointerBase	__del__		free the memory used by the c++ object
contrib.gis	GeoFeedMixin	georss_coords	coords	in georss coordinate pairs are ordered by lat/lon and separated by a single white space
contrib.gis	GeoFeedMixin	add_georss_point	handler coords w3c_geo	adds a georss point with the given coords using the given handler
contrib.gis	GeoFeedMixin	add_georss_element	handler item w3c_geo	this routine adds a georss xml element using the given item and handler
contrib.gis	MeasureBase	default_units	kwargs	return the unit value and the default units specified from the given keyword arguments dictionary
contrib.gis	MeasureBase	unit_attname	cls unit_str	retrieves the unit attribute name for the given unit string
contrib.gis		feed	request url feed_dict	provided for backwards compatibility
contrib.gis		compress_kml	kml	returns compressed kmz from the given kml string
contrib.gis		render_to_kml		renders the response as kml using the correct mime type
contrib.gis		render_to_kmz		compresses the kml content and returns as kmz using the correct mime type
contrib.gis		render_to_text		renders the response using the mime type for plain text
contrib.gis.geoip2	GeoIP2	__init__	path cache country city	initialize the geoip object no parameters are required to use default
contrib.gis.geoip2	GeoIP2	_check_query	query country city city_or_country	helper routine for checking the query and database availability
contrib.gis.geoip2	GeoIP2	city	query	return a dictionary of city information for the given ip address or fully qualified domain name fqdn
contrib.gis.geoip2	GeoIP2	country_code	query	return the country code for the given ip address or fqdn
contrib.gis.geoip2	GeoIP2	country_name	query	return the country name for the given ip address or fqdn
contrib.gis.geoip2	GeoIP2	country	query	return a dictionary with the country code and name when given an ip address or a fully qualified domain name fqdn
contrib.gis.geoip2	GeoIP2	lon_lat	query	return a tuple of the longitude latitude for the given query
contrib.gis.geoip2	GeoIP2	lat_lon	query	return a tuple of the latitude longitude for the given query
contrib.gis.geoip2	GeoIP2	geos	query	return a geos point object for the given query
contrib.gis.geoip2	GeoIP2	info		return information about the geoip library and databases in use
contrib.gis.geoip	GeoIP	__init__	path cache country city	initializes the geoip object no parameters are required to use default settings
contrib.gis.geoip	GeoIP	_check_query	query country city city_or_country	helper routine for checking the query and database availability
contrib.gis.geoip	GeoIP	city	query	returns a dictionary of city information for the given ip address or fully qualified domain name fqdn
contrib.gis.geoip	GeoIP	country_code	query	returns the country code for the given ip address or fqdn
contrib.gis.geoip	GeoIP	country_name	query	returns the country name for the given ip address or fqdn
contrib.gis.geoip	GeoIP	country	query	returns a dictionary with the country code and name when given an ip address or a fully qualified domain name fqdn
contrib.gis.geoip	GeoIP	lon_lat	query	returns a tuple of the longitude latitude for the given query
contrib.gis.geoip	GeoIP	lat_lon	query	returns a tuple of the latitude longitude for the given query
contrib.gis.geoip	GeoIP	geos	query	returns a geos point object for the given query
contrib.gis.geoip	GeoIP	country_info		returns information about the geoip country database
contrib.gis.geoip	GeoIP	city_info		returns information about the geoip city database
contrib.gis.geoip	GeoIP	info		returns information about the geoip library and databases in use
contrib.gis.admin	GeoModelAdmin	media		injects openlayers javascript into the admin
contrib.gis.admin	GeoModelAdmin	formfield_for_dbfield	db_field request	overloaded from modeladmin so that an openlayerswidget is used for viewing/editing 2d geometryfields (openlayers 2 does not support
contrib.gis.admin	GeoModelAdmin	get_map_widget	db_field	returns a subclass of the openlayerswidget (or whatever was specified in the widget attribute) using the settings from the attributes set
contrib.gis.admin	OpenLayersWidget	map_options		builds the map options hash for the openlayers template
contrib.gis.gdal	Field	__init__	feat index	initializes on the feature object and the integer index of the field within the feature
contrib.gis.gdal	Field	__str__		returns the string representation of the field
contrib.gis.gdal	Field	as_double		retrieves the field's value as a double float
contrib.gis.gdal	Field	as_int	is_64	retrieves the field's value as an integer
contrib.gis.gdal	Field	as_string		retrieves the field's value as a string
contrib.gis.gdal	Field	as_datetime		retrieves the field's value as a tuple of date & time components
contrib.gis.gdal	Field	name		returns the name of this field
contrib.gis.gdal	Field	precision		returns the precision of this field
contrib.gis.gdal	Field	type		returns the ogr type of this field
contrib.gis.gdal	Field	type_name		return the ogr field type name for this field
contrib.gis.gdal	Field	value		returns the value of this field
contrib.gis.gdal	Field	width		returns the width of this field
contrib.gis.gdal	OFTInteger	value		returns an integer contained in this field
contrib.gis.gdal	OFTInteger	type		gdal uses oftreals to represent oftintegers in created shapefiles -- forcing the type here since the underlying field
contrib.gis.gdal	OFTReal	value		returns a float contained in this field
contrib.gis.gdal	OFTDate	value		returns a python date object for the oftdate field
contrib.gis.gdal	OFTDateTime	value		returns a python datetime object for this oftdatetime field
contrib.gis.gdal	OFTTime	value		returns a python time object for this ofttime field
contrib.gis.gdal	OGRGeometry	__init__	geom_input srs	initializes geometry on either wkt or an ogr pointer as input
contrib.gis.gdal	OGRGeometry	from_bbox	cls bbox	constructs a polygon from a bounding box 4-tuple
contrib.gis.gdal	OGRGeometry	__or__	other	returns the union of the two geometries
contrib.gis.gdal	OGRGeometry	__and__	other	returns the intersection of this geometry and the other
contrib.gis.gdal	OGRGeometry	__sub__	other	return the difference this geometry and the other
contrib.gis.gdal	OGRGeometry	__xor__	other	return the symmetric difference of this geometry and the other
contrib.gis.gdal	OGRGeometry	__eq__	other	is this geometry equal to the other?
contrib.gis.gdal	OGRGeometry	__ne__	other	tests for inequality
contrib.gis.gdal	OGRGeometry	__str__		wkt is used for the string representation
contrib.gis.gdal	OGRGeometry	dimension		returns 0 for points 1 for lines and 2 for surfaces
contrib.gis.gdal	OGRGeometry	_get_coord_dim		returns the coordinate dimension of the geometry
contrib.gis.gdal	OGRGeometry	_set_coord_dim	dim	sets the coordinate dimension of this geometry
contrib.gis.gdal	OGRGeometry	geom_count		the number of elements in this geometry
contrib.gis.gdal	OGRGeometry	point_count		returns the number of points in this geometry
contrib.gis.gdal	OGRGeometry	num_points		alias for point_count same name method in geos api
contrib.gis.gdal	OGRGeometry	num_coords		alais for point_count
contrib.gis.gdal	OGRGeometry	geom_type		returns the type for this geometry
contrib.gis.gdal	OGRGeometry	geom_name		returns the name of this geometry
contrib.gis.gdal	OGRGeometry	area		returns the area for a linearring polygon or multipolygon 0 otherwise
contrib.gis.gdal	OGRGeometry	envelope		returns the envelope for this geometry
contrib.gis.gdal	OGRGeometry	extent		returns the envelope as a 4-tuple instead of as an envelope object
contrib.gis.gdal	OGRGeometry	_get_srs		returns the spatial reference for this geometry
contrib.gis.gdal	OGRGeometry	_set_srs	srs	sets the spatialreference for this geometry
contrib.gis.gdal	OGRGeometry	geos		returns a geosgeometry object from this ogrgeometry
contrib.gis.gdal	OGRGeometry	gml		returns the gml representation of the geometry
contrib.gis.gdal	OGRGeometry	hex		returns the hexadecimal representation of the wkb a string
contrib.gis.gdal	OGRGeometry	json		returns the geojson representation of this geometry
contrib.gis.gdal	OGRGeometry	kml		returns the kml representation of the geometry
contrib.gis.gdal	OGRGeometry	wkb_size		returns the size of the wkb buffer
contrib.gis.gdal	OGRGeometry	wkb		returns the wkb representation of the geometry
contrib.gis.gdal	OGRGeometry	wkt		returns the wkt representation of the geometry
contrib.gis.gdal	OGRGeometry	ewkt		returns the ewkt representation of the geometry
contrib.gis.gdal	OGRGeometry	clone		clones this ogr geometry
contrib.gis.gdal	OGRGeometry	close_rings		if there are any rings within this geometry that have not been closed this routine will do so by adding the starting point at the
contrib.gis.gdal	OGRGeometry	transform	coord_trans clone	transforms this geometry to a different spatial reference system
contrib.gis.gdal	OGRGeometry	_topology	func other	a generalized function for topology operations takes a gdal function and the other geometry to perform the operation on
contrib.gis.gdal	OGRGeometry	intersects	other	returns true if this geometry intersects with the other
contrib.gis.gdal	OGRGeometry	equals	other	returns true if this geometry is equivalent to the other
contrib.gis.gdal	OGRGeometry	disjoint	other	returns true if this geometry and the other are spatially disjoint
contrib.gis.gdal	OGRGeometry	touches	other	returns true if this geometry touches the other
contrib.gis.gdal	OGRGeometry	crosses	other	returns true if this geometry crosses the other
contrib.gis.gdal	OGRGeometry	within	other	returns true if this geometry is within the other
contrib.gis.gdal	OGRGeometry	contains	other	returns true if this geometry contains the other
contrib.gis.gdal	OGRGeometry	overlaps	other	returns true if this geometry overlaps the other
contrib.gis.gdal	OGRGeometry	_geomgen	gen_func other	a helper routine for the ogr routines that generate geometries
contrib.gis.gdal	OGRGeometry	boundary		returns the boundary of this geometry
contrib.gis.gdal	OGRGeometry	convex_hull		returns the smallest convex polygon that contains all the points in this geometry
contrib.gis.gdal	OGRGeometry	difference	other	returns a new geometry consisting of the region which is the difference of this geometry and the other
contrib.gis.gdal	OGRGeometry	intersection	other	returns a new geometry consisting of the region of intersection of this geometry and the other
contrib.gis.gdal	OGRGeometry	sym_difference	other	returns a new geometry which is the symmetric difference of this geometry and the other
contrib.gis.gdal	OGRGeometry	union	other	returns a new geometry consisting of the region which is the union of this geometry and the other
contrib.gis.gdal	Point	x		returns the x coordinate for this point
contrib.gis.gdal	Point	y		returns the y coordinate for this point
contrib.gis.gdal	Point	z		returns the z coordinate for this point
contrib.gis.gdal	Point	tuple		returns the tuple of this point
contrib.gis.gdal	LineString	__getitem__	index	returns the point at the given index
contrib.gis.gdal	LineString	__iter__		iterates over each point in the linestring
contrib.gis.gdal	LineString	__len__		the length returns the number of points in the linestring
contrib.gis.gdal	LineString	tuple		returns the tuple representation of this linestring
contrib.gis.gdal	LineString	_listarr	func	internal routine that returns a sequence list corresponding with the given function
contrib.gis.gdal	LineString	x		returns the x coordinates in a list
contrib.gis.gdal	LineString	y		returns the y coordinates in a list
contrib.gis.gdal	LineString	z		returns the z coordinates in a list
contrib.gis.gdal	Polygon	__len__		the number of interior rings in this polygon
contrib.gis.gdal	Polygon	__iter__		iterates through each ring in the polygon
contrib.gis.gdal	Polygon	__getitem__	index	gets the ring at the specified index
contrib.gis.gdal	Polygon	shell		returns the shell of this polygon
contrib.gis.gdal	Polygon	tuple		returns a tuple of linearring coordinate tuples
contrib.gis.gdal	Polygon	point_count		the number of points in this polygon
contrib.gis.gdal	Polygon	centroid		returns the centroid a point of this polygon
contrib.gis.gdal	GeometryCollection	__getitem__	index	gets the geometry at the specified index
contrib.gis.gdal	GeometryCollection	__iter__		iterates over each geometry
contrib.gis.gdal	GeometryCollection	__len__		the number of geometries in this geometry collection
contrib.gis.gdal	GeometryCollection	add	geom	add the geometry to this geometry collection
contrib.gis.gdal	GeometryCollection	point_count		the number of points in this geometry collection
contrib.gis.gdal	GeometryCollection	tuple		returns a tuple representation of this geometry collection
contrib.gis.gdal	SpatialReference	__init__	srs_input srs_type	creates a gdal osr spatial reference object from the given input
contrib.gis.gdal	SpatialReference	__getitem__	target	returns the value of the given string attribute node none if the node doesn't exist
contrib.gis.gdal	SpatialReference	__str__		the string representation uses 'pretty' wkt
contrib.gis.gdal	SpatialReference	attr_value	target index	the attribute value for the given target node (e g 'projcs') the index
contrib.gis.gdal	SpatialReference	auth_name	target	returns the authority name for the given string target node
contrib.gis.gdal	SpatialReference	auth_code	target	returns the authority code for the given string target node
contrib.gis.gdal	SpatialReference	clone		returns a clone of this spatialreference object
contrib.gis.gdal	SpatialReference	from_esri		morphs this spatialreference from esri's format to epsg
contrib.gis.gdal	SpatialReference	identify_epsg		this method inspects the wkt of this spatialreference and will add epsg authority nodes where an epsg identifier is applicable
contrib.gis.gdal	SpatialReference	to_esri		morphs this spatialreference to esri's format
contrib.gis.gdal	SpatialReference	validate		checks to see if the given spatial reference is valid
contrib.gis.gdal	SpatialReference	name		returns the name of this spatial reference
contrib.gis.gdal	SpatialReference	srid		returns the srid of top-level authority or none if undefined
contrib.gis.gdal	SpatialReference	linear_name		returns the name of the linear units
contrib.gis.gdal	SpatialReference	linear_units		returns the value of the linear units
contrib.gis.gdal	SpatialReference	angular_name		returns the name of the angular units
contrib.gis.gdal	SpatialReference	angular_units		returns the value of the angular units
contrib.gis.gdal	SpatialReference	units		returns a 2-tuple of the units value and the units name and will automatically determines whether to return the linear
contrib.gis.gdal	SpatialReference	ellipsoid		returns a tuple of the ellipsoid parameters
contrib.gis.gdal	SpatialReference	semi_major		returns the semi major axis for this spatial reference
contrib.gis.gdal	SpatialReference	semi_minor		returns the semi minor axis for this spatial reference
contrib.gis.gdal	SpatialReference	inverse_flattening		returns the inverse flattening for this spatial reference
contrib.gis.gdal	SpatialReference	geographic		returns true if this spatialreference is geographic root node is geogcs
contrib.gis.gdal	SpatialReference	local		returns true if this spatialreference is local (root node is local_cs)
contrib.gis.gdal	SpatialReference	projected		returns true if this spatialreference is a projected coordinate system root node is projcs
contrib.gis.gdal	SpatialReference	import_epsg	epsg	imports the spatial reference from the epsg code an integer
contrib.gis.gdal	SpatialReference	import_proj	proj	imports the spatial reference from a proj 4 string
contrib.gis.gdal	SpatialReference	import_user_input	user_input	imports the spatial reference from the given user input string
contrib.gis.gdal	SpatialReference	import_wkt	wkt	imports the spatial reference from ogc wkt string
contrib.gis.gdal	SpatialReference	import_xml	xml	imports the spatial reference from an xml string
contrib.gis.gdal	SpatialReference	wkt		returns the wkt representation of this spatial reference
contrib.gis.gdal	SpatialReference	pretty_wkt	simplify	returns the 'pretty' representation of the wkt
contrib.gis.gdal	SpatialReference	proj		returns the proj 4 representation for this spatial reference
contrib.gis.gdal	SpatialReference	proj4		alias for proj()
contrib.gis.gdal	SpatialReference	xml	dialect	returns the xml representation of this spatial reference
contrib.gis.gdal	CoordTransform	__init__	source target	initializes on a source and target spatialreference objects
contrib.gis.gdal	Layer	__init__	layer_ptr ds	initializes on an ogr c pointer to the layer and the datasource object that owns this layer
contrib.gis.gdal	Layer	__getitem__	index	gets the feature at the specified index
contrib.gis.gdal	Layer	__iter__		iterates over each feature in the layer
contrib.gis.gdal	Layer	__len__		the length is the number of features
contrib.gis.gdal	Layer	__str__		the string name of the layer
contrib.gis.gdal	Layer	_make_feature	feat_id	helper routine for __getitem__ that constructs a feature from the given feature id
contrib.gis.gdal	Layer	extent		returns the extent an envelope of this layer
contrib.gis.gdal	Layer	name		returns the name of this layer in the data source
contrib.gis.gdal	Layer	num_feat	force	returns the number of features in the layer
contrib.gis.gdal	Layer	num_fields		returns the number of fields in the layer
contrib.gis.gdal	Layer	geom_type		returns the geometry type ogrgeomtype of the layer
contrib.gis.gdal	Layer	srs		returns the spatial reference used in this layer
contrib.gis.gdal	Layer	fields		returns a list of string names corresponding to each of the fields available in this layer
contrib.gis.gdal	Layer	field_types		returns a list of the types of fields in this layer for example
contrib.gis.gdal	Layer	field_widths		returns a list of the maximum field widths for the features
contrib.gis.gdal	Layer	field_precisions		returns the field precisions for the features
contrib.gis.gdal	Layer	get_fields	field_name	returns a list containing the given field name for every feature in the layer
contrib.gis.gdal	Layer	get_geoms	geos	returns a list containing the ogrgeometry for every feature in the layer
contrib.gis.gdal	Layer	test_capability	capability	returns a bool indicating whether the this layer supports the given capability a string
contrib.gis.gdal	Envelope	__init__		the initialization function may take an ogrenvelope structure 4-element tuple or list or 4 individual arguments
contrib.gis.gdal	Envelope	__eq__	other	returns true if the envelopes are equivalent can compare against other envelopes and 4-tuples
contrib.gis.gdal	Envelope	__str__		returns a string representation of the tuple
contrib.gis.gdal	Envelope	_from_sequence	seq	initializes the c ogr envelope structure from the given sequence
contrib.gis.gdal	Envelope	expand_to_include		modifies the envelope to expand to include the boundaries of the passed-in 2-tuple a point 4-tuple an extent or
contrib.gis.gdal	Envelope	min_x		returns the value of the minimum x coordinate
contrib.gis.gdal	Envelope	min_y		returns the value of the minimum y coordinate
contrib.gis.gdal	Envelope	max_x		returns the value of the maximum x coordinate
contrib.gis.gdal	Envelope	max_y		returns the value of the maximum y coordinate
contrib.gis.gdal	Envelope	ur		returns the upper-right coordinate
contrib.gis.gdal	Envelope	ll		returns the lower-left coordinate
contrib.gis.gdal	Envelope	tuple		returns a tuple representing the envelope
contrib.gis.gdal	Envelope	wkt		returns wkt representing a polygon for this envelope
contrib.gis.gdal		std_call	func	returns the correct stdcall function for certain osr routines on win32 platforms
contrib.gis.gdal		gdal_version		returns only the gdal version number information
contrib.gis.gdal		gdal_full_version		returns the full gdal version information
contrib.gis.gdal		check_err	code cpl	checks the given cpl/ogrerr and raises an exception where appropriate
contrib.gis.gdal	DataSource	__iter__		allows for iteration over the layers in a data source
contrib.gis.gdal	DataSource	__getitem__	index	allows use of the index [] operator to get a layer at the index
contrib.gis.gdal	DataSource	__len__		returns the number of layers within the data source
contrib.gis.gdal	DataSource	__str__		returns ogr getname and driver for the data source
contrib.gis.gdal	DataSource	layer_count		returns the number of layers in the data source
contrib.gis.gdal	DataSource	name		returns the name of the data source
contrib.gis.gdal	OGRGeomType	__init__	type_input	figures out the correct ogr type based upon the input
contrib.gis.gdal	OGRGeomType	__str__		returns the value of the name property
contrib.gis.gdal	OGRGeomType	__eq__	other	does an equivalence test on the ogr type with the given other ogrgeomtype the short-hand string or the integer
contrib.gis.gdal	OGRGeomType	name		returns a short-hand string form of the ogr geometry type
contrib.gis.gdal	OGRGeomType	django		returns the django geometryfield for this ogr type
contrib.gis.gdal	OGRGeomType	to_multi		transform point linestring polygon and their 25d equivalents to their multi
contrib.gis.gdal	Feature	__init__	feat layer	initializes feature from a pointer and its layer object
contrib.gis.gdal	Feature	__getitem__	index	gets the field object at the specified index which may be either an integer or the field's string label
contrib.gis.gdal	Feature	__iter__		iterates over each field in the feature
contrib.gis.gdal	Feature	__len__		returns the count of fields in this feature
contrib.gis.gdal	Feature	__str__		the string name of the feature
contrib.gis.gdal	Feature	__eq__	other	does equivalence testing on the features
contrib.gis.gdal	Feature	fid		returns the feature identifier
contrib.gis.gdal	Feature	layer_name		returns the name of the layer for the feature
contrib.gis.gdal	Feature	num_fields		returns the number of fields in the feature
contrib.gis.gdal	Feature	fields		returns a list of fields in the feature
contrib.gis.gdal	Feature	geom		returns the ogr geometry for this feature
contrib.gis.gdal	Feature	geom_type		returns the ogr geometry type for this feture
contrib.gis.gdal	Feature	get	field	returns the value of the field instead of an instance of the field object
contrib.gis.gdal	Feature	index	field_name	returns the index of the given field name
contrib.gis.gdal	Driver	__init__	dr_input	initializes an gdal/ogr driver on either a string or integer input
contrib.gis.gdal	Driver	ensure_registered	cls	attempts to register all the data source drivers
contrib.gis.gdal	Driver	driver_count	cls	returns the number of gdal/ogr data source drivers registered
contrib.gis.gdal	Driver	name		returns description/name string for this driver
contrib.gis.gdal.raster	GDALRaster	__repr__		short-hand representation because wkb may be very large
contrib.gis.gdal.raster	GDALRaster	_flush		flush all data from memory into the source file if it exists
contrib.gis.gdal.raster	GDALRaster	name		returns the name of this raster corresponds to filename
contrib.gis.gdal.raster	GDALRaster	driver		returns the gdal driver used for this raster
contrib.gis.gdal.raster	GDALRaster	width		width x axis in pixels
contrib.gis.gdal.raster	GDALRaster	height		height y axis in pixels
contrib.gis.gdal.raster	GDALRaster	srs		returns the spatialreference used in this gdalraster
contrib.gis.gdal.raster	GDALRaster	srs	value	sets the spatial reference used in this gdalraster the input can be
contrib.gis.gdal.raster	GDALRaster	srid		shortcut to access the srid of this gdalraster
contrib.gis.gdal.raster	GDALRaster	srid	value	shortcut to set this gdalraster's srs from an srid
contrib.gis.gdal.raster	GDALRaster	geotransform		returns the geotransform of the data source
contrib.gis.gdal.raster	GDALRaster	geotransform	values	sets the geotransform for the data source
contrib.gis.gdal.raster	GDALRaster	origin		coordinates of the raster origin
contrib.gis.gdal.raster	GDALRaster	scale		pixel scale in units of the raster projection
contrib.gis.gdal.raster	GDALRaster	skew		skew of pixels rotation parameters
contrib.gis.gdal.raster	GDALRaster	extent		returns the extent as a 4-tuple xmin ymin xmax ymax
contrib.gis.gdal.raster	GDALRaster	warp	ds_input resampling max_error	returns a warped gdalraster with the given input characteristics
contrib.gis.gdal.raster	GDALRaster	transform	srid driver name resampling	returns a copy of this raster reprojected into the given srid
contrib.gis.gdal.raster	GDALBand	_flush		call the flush method on the band's parent raster and force a refresh of the statistics attribute when requested the next time
contrib.gis.gdal.raster	GDALBand	description		returns the description string of the band
contrib.gis.gdal.raster	GDALBand	width		width x axis in pixels of the band
contrib.gis.gdal.raster	GDALBand	height		height y axis in pixels of the band
contrib.gis.gdal.raster	GDALBand	pixel_count		returns the total number of pixels in this band
contrib.gis.gdal.raster	GDALBand	statistics	refresh approximate	compute statistics on the pixel values of this band
contrib.gis.gdal.raster	GDALBand	min		return the minimum pixel value for this band
contrib.gis.gdal.raster	GDALBand	max		return the maximum pixel value for this band
contrib.gis.gdal.raster	GDALBand	mean		return the mean of all pixel values of this band
contrib.gis.gdal.raster	GDALBand	std		return the standard deviation of all pixel values of this band
contrib.gis.gdal.raster	GDALBand	nodata_value		returns the nodata value for this band or none if it isn't set
contrib.gis.gdal.raster	GDALBand	nodata_value	value	sets the nodata value for this band
contrib.gis.gdal.raster	GDALBand	datatype	as_string	returns the gdal pixel datatype for this band
contrib.gis.gdal.raster	GDALBand	data	data offset size shape	reads or writes pixel values for this band blocks of data can
contrib.gis.gdal.prototypes		srs_double	f	creates a function prototype for the osr routines that take
contrib.gis.gdal.prototypes		units_func	f	creates a ctypes function prototype for osr units functions e g
contrib.gis.gdal.prototypes		arg_byref	args offset	returns the pointer argument's by-reference value
contrib.gis.gdal.prototypes		ptr_byref	args offset	returns the pointer argument passed in by-reference
contrib.gis.gdal.prototypes		check_const_string	result func cargs offset	similar functionality to check_string, but does not free the pointer
contrib.gis.gdal.prototypes		check_string	result func cargs offset	checks the string output returned from the given function and frees the string pointer allocated by ogr
contrib.gis.gdal.prototypes		check_envelope	result func cargs offset	checks a function that returns an ogr envelope by reference
contrib.gis.gdal.prototypes		check_geom	result func cargs	checks a function that returns a geometry
contrib.gis.gdal.prototypes		check_geom_offset	result func cargs offset	chcks the geometry at the given offset in the c parameter list
contrib.gis.gdal.prototypes		check_arg_errcode	result func cargs cpl	the error code is returned in the last argument by reference
contrib.gis.gdal.prototypes		check_errcode	result func cargs cpl	check the error code returned (c_int)
contrib.gis.gdal.prototypes		check_pointer	result func cargs	makes sure the result pointer is valid
contrib.gis.gdal.prototypes		check_str_arg	result func cargs	this is for the osrget[angular|linear]units functions which require that the returned string pointer not be freed
contrib.gis.gdal.prototypes		double_output	func argtypes errcheck strarg	generates a ctypes function that returns a double value
contrib.gis.gdal.prototypes		geom_output	func argtypes offset	generates a function that returns a geometry either by reference or directly (if the return_geom keyword is set to true)
contrib.gis.gdal.prototypes		int_output	func argtypes errcheck	generates a ctypes function that returns an integer value
contrib.gis.gdal.prototypes		int64_output	func argtypes	generates a ctypes function that returns a 64-bit integer value
contrib.gis.gdal.prototypes		srs_output	func argtypes	generates a ctypes prototype for the given function with the given c arguments that returns a pointer to an ogr
contrib.gis.gdal.prototypes		string_output	func argtypes offset str_result	generates a ctypes prototype for the given function with the given argument types that returns a string from a gdal pointer
contrib.gis.gdal.prototypes		void_output	func argtypes errcheck cpl	for functions that don't only return an error code that needs to be examined
contrib.gis.gdal.prototypes		voidptr_output	func argtypes errcheck	for functions that return c_void_p
contrib.gis.gdal.prototypes		env_func	f argtypes	for getting ogrenvelopes
contrib.gis.gdal.prototypes		pnt_func	f	for accessing point information
contrib.gis.sitemaps		kml	request label model field_name	this view generates kml for the given app label model and field name
contrib.gis.sitemaps		kmz	request label model field_name	this view returns kmz for the given app label model and field name
contrib.gis.sitemaps	KMLSitemap	_build_kml_sources	sources	goes through the given sources and returns a 3-tuple of the application label module name and field name of every
contrib.gis.sitemaps	KMLSitemap	get_urls	page site protocol	this method is overridden so the appropriate geo_format attribute is placed on each url element
contrib.gis.forms	GeometryField	to_python	value	transforms the value to a geometry object
contrib.gis.forms	GeometryField	clean	value	validates that the input value can be converted to a geometry object which is returned
contrib.gis.forms	GeometryField	has_changed	initial data	compare geographic value of data with its initial value
contrib.gis.db.backends.postgis		pack	structure data	pack data into hex string with little endian format
contrib.gis.db.backends.postgis		unpack	structure data	unpack little endian hexlified binary string into a list
contrib.gis.db.backends.postgis		chunk	data index	split a string into two parts at the input index
contrib.gis.db.backends.postgis		get_pgraster_srid	data	extract the srid from a postgis raster string
contrib.gis.db.backends.postgis		from_pgraster	data	convert a postgis hex string into a dictionary
contrib.gis.db.backends.postgis		to_pgraster	rast	convert a gdalraster into postgis raster format
contrib.gis.db.backends.postgis	PostGISSchemaEditor	_alter_column_type_sql	table old_field new_field new_type	special case when dimension changed
contrib.gis.db.backends.postgis	PostGISOperations	spatial_version		determine the version of the postgis library
contrib.gis.db.backends.postgis	PostGISOperations	convert_extent	box srid	returns a 4-tuple extent for the extent aggregate by converting the bounding box text returned by postgis (box argument), for
contrib.gis.db.backends.postgis	PostGISOperations	convert_extent3d	box3d srid	returns a 6-tuple extent for the extent3d aggregate by converting the 3d bounding-box text returned by postgis (box3d argument), for
contrib.gis.db.backends.postgis	PostGISOperations	geo_db_type	f	return the database field type for the given spatial field
contrib.gis.db.backends.postgis	PostGISOperations	get_distance	f dist_val lookup_type handle_spheroid	retrieve the distance parameters for the given geometry field distance lookup value and the distance lookup type
contrib.gis.db.backends.postgis	PostGISOperations	get_geom_placeholder	f value compiler	provide a proper substitution value for geometries or rasters that are not in the srid of the field
contrib.gis.db.backends.postgis	PostGISOperations	_get_postgis_func	func	helper routine for calling postgis functions and returning their result
contrib.gis.db.backends.postgis	PostGISOperations	postgis_geos_version		returns the version of the geos library used with postgis
contrib.gis.db.backends.postgis	PostGISOperations	postgis_lib_version		returns the version number of the postgis library used with postgresql
contrib.gis.db.backends.postgis	PostGISOperations	postgis_proj_version		returns the version of the proj 4 library used with postgis
contrib.gis.db.backends.postgis	PostGISOperations	postgis_version		returns postgis version number and compile-time options
contrib.gis.db.backends.postgis	PostGISOperations	postgis_full_version		returns postgis version number and compile-time options
contrib.gis.db.backends.postgis	PostGISOperations	postgis_version_tuple		returns the postgis version as a tuple version string major minor subminor
contrib.gis.db.backends.postgis	PostGISOperations	proj_version_tuple		return the version of proj 4 used by postgis as a tuple of the
contrib.gis.db.backends.postgis	PostGISIntrospection	get_postgis_types		returns a dictionary with keys that are the postgresql object identification integers for the postgis geometry and/or
contrib.gis.db.backends.postgis	PostGISIntrospection	get_geometry_type	table_name geo_col	the geometry type oid used by postgis does not indicate the particular type of field that a geometry column is (e
contrib.gis.db.backends.postgis	PostGISAdapter	__init__	obj geography	initialize on the spatial object
contrib.gis.db.backends.postgis	PostGISAdapter	prepare	conn	this method allows escaping the binary in the style required by the server's standard_conforming_string setting
contrib.gis.db.backends.postgis	PostGISAdapter	getquoted		return a properly quoted string for use in postgresql/postgis
contrib.gis.db.backends.postgis	PostGISGeometryColumns	table_name_col	cls	returns the name of the metadata column used to store the feature table name
contrib.gis.db.backends.postgis	PostGISGeometryColumns	geom_col_name	cls	returns the name of the metadata column used to store the feature geometry column
contrib.gis.db.backends.oracle	OracleOperations	geo_db_type	f	returns the geometry database type for oracle unlike other spatial
contrib.gis.db.backends.oracle	OracleOperations	get_distance	f value lookup_type	returns the distance parameters given the value and the lookup type
contrib.gis.db.backends.oracle	OracleOperations	get_geom_placeholder	f value compiler	provides a proper substitution value for geometries that are not in the srid of the field
contrib.gis.db.backends.oracle	OracleOperations	spatial_aggregate_name	agg_name	returns the spatial aggregate sql name
contrib.gis.db.backends.oracle	OracleOperations	modify_insert_params	placeholder params	drop out insert parameters for null placeholder needed for oracle spatial
contrib.gis.db.backends.oracle	OracleSpatialAdapter	__init__	geom	oracle requires that polygon rings are in proper orientation this
contrib.gis.db.backends.oracle	OracleGeometryColumns	table_name_col	cls	returns the name of the metadata column used to store the feature table name
contrib.gis.db.backends.oracle	OracleGeometryColumns	geom_col_name	cls	returns the name of the metadata column used to store the feature geometry column
contrib.gis.db.backends.base	BaseSpatialOperations	geo_db_type	f	returns the database column type for the geometry field on the spatial backend
contrib.gis.db.backends.base	BaseSpatialOperations	get_distance	f value lookup_type	returns the distance parameters for the given geometry field lookup value and lookup type
contrib.gis.db.backends.base	BaseSpatialOperations	get_geom_placeholder	f value compiler	returns the placeholder for the given geometry field with the given value
contrib.gis.db.backends.base	SpatialRefSysMixin	srs		returns a gdal spatialreference object
contrib.gis.db.backends.base	SpatialRefSysMixin	ellipsoid		returns a tuple of the ellipsoid parameters semimajor axis semiminor axis and inverse flattening
contrib.gis.db.backends.base	SpatialRefSysMixin	name		returns the projection name
contrib.gis.db.backends.base	SpatialRefSysMixin	spheroid		returns the spheroid name for this spatial reference
contrib.gis.db.backends.base	SpatialRefSysMixin	datum		returns the datum for this spatial reference
contrib.gis.db.backends.base	SpatialRefSysMixin	projected		is this spatial reference projected?
contrib.gis.db.backends.base	SpatialRefSysMixin	local		is this spatial reference local?
contrib.gis.db.backends.base	SpatialRefSysMixin	geographic		is this spatial reference geographic?
contrib.gis.db.backends.base	SpatialRefSysMixin	linear_name		returns the linear units name
contrib.gis.db.backends.base	SpatialRefSysMixin	linear_units		returns the linear units
contrib.gis.db.backends.base	SpatialRefSysMixin	angular_name		returns the name of the angular units
contrib.gis.db.backends.base	SpatialRefSysMixin	angular_units		returns the angular units
contrib.gis.db.backends.base	SpatialRefSysMixin	units		returns a tuple of the units and the name
contrib.gis.db.backends.base	SpatialRefSysMixin	get_units	cls wkt	return a tuple of (unit_value unit_name) for the given wkt without using any of the database fields
contrib.gis.db.backends.base	SpatialRefSysMixin	get_spheroid	cls wkt string	class method used by geometryfield on initialization to retrieve the spheroid[
contrib.gis.db.backends.base	SpatialRefSysMixin	__str__		returns the string representation a 'pretty' ogc wkt
contrib.gis.db.backends.mysql	MySQLOperations	get_geom_placeholder	f value compiler	the placeholder here has to include mysql's wkt constructor because
contrib.gis.db.backends.spatialite	SpatiaLiteOperations	spatial_version		determine the version of the spatialite library
contrib.gis.db.backends.spatialite	SpatiaLiteOperations	convert_extent	box srid	convert the polygon data received from spatialite to min/max values
contrib.gis.db.backends.spatialite	SpatiaLiteOperations	geo_db_type	f	returns none because geometry columns are added via the addgeometrycolumn stored procedure on spatialite
contrib.gis.db.backends.spatialite	SpatiaLiteOperations	get_distance	f value lookup_type	returns the distance parameters for the given geometry field lookup value and lookup type
contrib.gis.db.backends.spatialite	SpatiaLiteOperations	get_geom_placeholder	f value compiler	provides a proper substitution value for geometries that are not in the srid of the field
contrib.gis.db.backends.spatialite	SpatiaLiteOperations	_get_spatialite_func	func	helper routine for calling spatialite functions and returning their result
contrib.gis.db.backends.spatialite	SpatiaLiteOperations	geos_version		returns the version of geos used by spatialite as a string
contrib.gis.db.backends.spatialite	SpatiaLiteOperations	proj4_version		returns the version of the proj 4 library used by spatialite
contrib.gis.db.backends.spatialite	SpatiaLiteOperations	lwgeom_version		return the version of lwgeom library used by spatialite
contrib.gis.db.backends.spatialite	SpatiaLiteOperations	spatialite_version		returns the spatialite library version as a string
contrib.gis.db.backends.spatialite	SpatiaLiteOperations	spatialite_version_tuple		returns the spatialite version as a tuple version string major minor subminor
contrib.gis.db.backends.spatialite	SpatiaLiteOperations	spatial_aggregate_name	agg_name	returns the spatial aggregate sql template and function for the given aggregate instance
contrib.gis.db.backends.spatialite	SpatialiteGeometryColumns	table_name_col	cls	returns the name of the metadata column used to store the feature table name
contrib.gis.db.backends.spatialite	SpatialiteGeometryColumns	geom_col_name	cls	returns the name of the metadata column used to store the feature geometry column
contrib.gis.db.models	GISLookup	_check_geo_field	cls opts lookup	utility for checking the given lookup with the given model options
contrib.gis.db.models	GISLookup	process_band_indices	only_lhs	extract the lhs band index from the band transform class and the rhs band index from the input tuple
contrib.gis.db.models	GeoQuerySet	area	tolerance	returns the area of the geographic field in an area attribute on each element of this geoqueryset
contrib.gis.db.models	GeoQuerySet	centroid		returns the centroid of the geographic field in a centroid attribute on each element of this geoqueryset
contrib.gis.db.models	GeoQuerySet	difference	geom	returns the spatial difference of the geographic field in a difference attribute on each element of this geoqueryset
contrib.gis.db.models	GeoQuerySet	distance	geom	returns the distance from the given geographic field name to the given geometry in a distance attribute on each element of the
contrib.gis.db.models	GeoQuerySet	envelope		returns a geometry representing the bounding box of the geometry field in an envelope attribute on each element of
contrib.gis.db.models	GeoQuerySet	force_rhr		returns a modified version of the polygon/multipolygon in which all of the vertices follow the right-hand-rule
contrib.gis.db.models	GeoQuerySet	geojson	precision crs bbox	returns a geojson representation of the geometry field in a geojson attribute on each element of the geoqueryset
contrib.gis.db.models	GeoQuerySet	geohash	precision	returns a geohash representation of the given field in a geohash attribute on each element of the geoqueryset
contrib.gis.db.models	GeoQuerySet	gml	precision version	returns gml representation of the given field in a gml attribute on each element of the geoqueryset
contrib.gis.db.models	GeoQuerySet	intersection	geom	returns the spatial intersection of the geometry field in an intersection attribute on each element of this
contrib.gis.db.models	GeoQuerySet	kml		returns kml representation of the geometry field in a kml attribute on each element of this geoqueryset
contrib.gis.db.models	GeoQuerySet	length		returns the length of the geometry field as a distance object stored in a length attribute on each element of this geoqueryset
contrib.gis.db.models	GeoQuerySet	mem_size		returns the memory size number of bytes that the geometry field takes in a mem_size attribute on each element of this geoqueryset
contrib.gis.db.models	GeoQuerySet	num_geom		returns the number of geometries if the field is a geometrycollection or multi* field in a num_geom
contrib.gis.db.models	GeoQuerySet	num_points		returns the number of points in the first linestring in the geometry field in a num_points attribute on each element of
contrib.gis.db.models	GeoQuerySet	perimeter		returns the perimeter of the geometry field as a distance object stored in a perimeter attribute on each element of this geoqueryset
contrib.gis.db.models	GeoQuerySet	point_on_surface		returns a point geometry guaranteed to lie on the surface of the geometry field in a point_on_surface attribute on each element
contrib.gis.db.models	GeoQuerySet	reverse_geom		reverses the coordinate order of the geometry and attaches as a reverse attribute on each element of this geoqueryset
contrib.gis.db.models	GeoQuerySet	scale	x y z	scales the geometry to a new size by multiplying the ordinates with the given x y z scale factors
contrib.gis.db.models	GeoQuerySet	snap_to_grid		snap all points of the input geometry to the grid how the
contrib.gis.db.models	GeoQuerySet	svg	relative precision	returns svg representation of the geographic field in a svg attribute on each element of this geoqueryset
contrib.gis.db.models	GeoQuerySet	sym_difference	geom	returns the symmetric difference of the geographic field in a sym_difference attribute on each element of this geoqueryset
contrib.gis.db.models	GeoQuerySet	translate	x y z	translates the geometry to a new location using the given numeric parameters as offsets
contrib.gis.db.models	GeoQuerySet	transform	srid	transforms the given geometry field to the given srid if no srid is
contrib.gis.db.models	GeoQuerySet	union	geom	returns the union of the geographic field with the given geometry in a union attribute on each element of this geoqueryset
contrib.gis.db.models	GeoQuerySet	_spatial_setup	att desc field_name geo_field_type	performs set up for executing the spatial function
contrib.gis.db.models	GeoQuerySet	_spatial_attribute	att settings field_name model_att	dry routine for calling a spatial stored procedure on a geometry column and attaching its output as an attribute of the model
contrib.gis.db.models	GeoQuerySet	_distance_attribute	func geom tolerance spheroid	dry routine for geoqueryset distance attribute routines
contrib.gis.db.models	GeoQuerySet	_geom_attribute	func tolerance	dry routine for setting up a geoqueryset method that attaches a geometry attribute (e
contrib.gis.db.models	GeoQuerySet	_geomset_attribute	func geom tolerance	dry routine for setting up a geoqueryset method that attaches a geometry attribute and takes a geoemtry parameter
contrib.gis.db.models	GeoQuerySet	_geocol_select	geo_field field_name	helper routine for constructing the sql to select the geographic column
contrib.gis.db.models	GeoQuerySet	_geo_field	field_name	returns the first geometry field encountered or the one specified via the field_name keyword
contrib.gis.db.models	GeoQuerySet	_field_column	compiler field table_alias column	helper function that returns the database column for the given field
contrib.gis.db.models	SpatialProxy	__init__	klass field	proxy initializes on the given geometry or raster class not an instance and the corresponding field
contrib.gis.db.models	SpatialProxy	__get__	instance cls	this accessor retrieves the geometry or raster initializing it using the corresponding class specified during initialization and the value
contrib.gis.db.models	SpatialProxy	__set__	instance value	this accessor sets the proxied geometry or raster with the corresponding class specified during initialization
contrib.gis.db.models		get_srid_info	srid connection	returns the units unit name and spheroid wkt associated with the given srid from the spatial_ref_sys or equivalent spatial database
contrib.gis.db.models	GeoSelectFormatMixin	select_format	compiler sql params	returns the selection format string depending on the requirements of the spatial backend
contrib.gis.db.models	BaseSpatialField	__init__	verbose_name srid spatial_index	the initialization function for base spatial fields takes the following
contrib.gis.db.models	BaseSpatialField	geodetic	connection	returns true if this field's srid corresponds with a coordinate system that uses non-projected units (e
contrib.gis.db.models	BaseSpatialField	get_placeholder	value compiler connection	returns the placeholder for the spatial column for the given value
contrib.gis.db.models	BaseSpatialField	get_srid	obj	return the default srid for the given geometry or raster taking into account the srid set for the field
contrib.gis.db.models	BaseSpatialField	get_db_prep_save	value connection	prepare the value for saving in the database
contrib.gis.db.models	BaseSpatialField	get_raster_prep_value	value is_candidate	return a gdalraster if conversion is successful otherwise return none
contrib.gis.db.models	BaseSpatialField	get_prep_value	value	spatial lookup values are either a parameter that is or may be converted to a geometry or raster or a sequence of lookup values
contrib.gis.db.models	GeometryField	__init__	verbose_name dim geography	the initialization function for geometry fields in addition to the
contrib.gis.db.models	GeometryField	get_distance	value lookup_type connection	returns a distance number in units of the field for example if
contrib.gis.db.models	GeometryField	_get_db_prep_lookup	lookup_type value connection	prepare for the database lookup and return any spatial parameters necessary for the query
contrib.gis.utils		add_srs_entry	srs auth_name auth_srid ref_sys_name	this function takes a gdal spatialreference system and adds its information to the spatial_ref_sys table of the spatial backend
contrib.gis.utils	LayerMapping	__init__	model data mapping layer	a layermapping object is initialized using the given model not an instance a datasource or string path to an ogr-supported data file and a mapping
contrib.gis.utils	LayerMapping	check_fid_range	fid_range	this checks the fid_range keyword
contrib.gis.utils	LayerMapping	check_layer		this checks the layer metadata and ensures that it is compatible with the mapping information and model
contrib.gis.utils	LayerMapping	check_srs	source_srs	checks the compatibility of the given spatial reference object
contrib.gis.utils	LayerMapping	check_unique	unique	checks the unique keyword parameter -- may be a sequence or string
contrib.gis.utils	LayerMapping	feature_kwargs	feat	given an ogr feature this will return a dictionary of keyword arguments for constructing the mapped model
contrib.gis.utils	LayerMapping	unique_kwargs	kwargs	given the feature keyword arguments (from feature_kwargs) this routine will construct and return the uniqueness keyword arguments -- a subset
contrib.gis.utils	LayerMapping	verify_ogr_field	ogr_field model_field	verifies if the ogr field contents are acceptable to the django model field
contrib.gis.utils	LayerMapping	verify_fk	feat rel_model rel_mapping	given an ogr feature the related model and its dictionary mapping this routine will retrieve the related model for the foreignkey
contrib.gis.utils	LayerMapping	verify_geom	geom model_field	verifies the geometry -- will construct and return a geometrycollection if necessary (for example if the model field is multipolygonfield while
contrib.gis.utils	LayerMapping	coord_transform		returns the coordinate transformation object
contrib.gis.utils	LayerMapping	geometry_field		returns the geometryfield instance associated with the geographic column
contrib.gis.utils	LayerMapping	make_multi	geom_type model_field	given the ogrgeomtype for a geometry and its associated geometryfield determine whether the geometry should be turned into a geometrycollection
contrib.gis.utils	LayerMapping	save	verbose fid_range step progress	saves the contents from the ogr datasource layer into the database according to the mapping dictionary given at initialization
contrib.gis.utils		precision_wkt	geom prec	returns wkt text of the geometry according to the given precision an integer or a string
contrib.gis.utils		ogrinfo	data_source num_features	walks the available layers in the supplied data_source, displaying the fields for the first num_features features
contrib.gis.utils		mapping	data_source geom_name layer_key multi_geom	given a datasource generates a dictionary that may be used for invoking the layermapping utility
contrib.gis.utils		ogrinspect		given a data source either a string or a datasource object and a string model name this function will generate a geodjango model
contrib.gis.utils		_ogrinspect	data_source model_name geom_name layer_key	helper routine for ogrinspect that generates geodjango models corresponding to the given data source
contrib.gis.geos		get_pointer_arr	n	gets a ctypes pointer array (of length n) for geosgeom_t opaque pointer
contrib.gis.geos		geos_version_info		returns a dictionary containing the various version metadata parsed from the geos version string including the version number whether the version
contrib.gis.geos		fromfile	file_h	given a string file name returns a geosgeometry the file may contain wkb
contrib.gis.geos		fromstr	string	given a string value returns a geosgeometry object
contrib.gis.geos	LineString	__init__		initializes on the given sequence -- may take lists tuples numpy arrays of x y pairs or point objects
contrib.gis.geos	LineString	__iter__		allows iteration over this linestring
contrib.gis.geos	LineString	__len__		returns the number of points in this linestring
contrib.gis.geos	LineString	tuple		returns a tuple version of the geometry from the coordinate sequence
contrib.gis.geos	LineString	_listarr	func	internal routine that returns a sequence list corresponding with the given function
contrib.gis.geos	LineString	array		returns a numpy array for the linestring
contrib.gis.geos	LineString	x		returns a list or numpy array of the x variable
contrib.gis.geos	LineString	y		returns a list or numpy array of the y variable
contrib.gis.geos	LineString	z		returns a list or numpy array of the z variable
contrib.gis.geos	GeometryCollection	__init__		initializes a geometry collection from a sequence of geometry objects
contrib.gis.geos	GeometryCollection	__iter__		iterates over each geometry in the collection
contrib.gis.geos	GeometryCollection	__len__		returns the number of geometries in this collection
contrib.gis.geos	GeometryCollection	_get_single_external	index	returns the geometry from this collection at the given index 0-based
contrib.gis.geos	GeometryCollection	_set_list	length items	create a new collection and destroy the contents of the previous pointer
contrib.gis.geos	GeometryCollection	kml		returns the kml for this geometry collection
contrib.gis.geos	GeometryCollection	tuple		returns a tuple of all the coordinates in this geometry collection
contrib.gis.geos	MultiPolygon	cascaded_union		returns a cascaded union of this multipolygon
contrib.gis.geos	Point	__init__	x y z srid	the point object may be initialized with either a tuple or individual parameters
contrib.gis.geos	Point	_create_point	cls ndim coords	create a coordinate sequence set x y [z], and create point
contrib.gis.geos	Point	__iter__		allows iteration over coordinates of this point
contrib.gis.geos	Point	__len__		returns the number of dimensions for this point either 0 2 or 3
contrib.gis.geos	Point	x		returns the x component of the point
contrib.gis.geos	Point	x	value	sets the x component of the point
contrib.gis.geos	Point	y		returns the y component of the point
contrib.gis.geos	Point	y	value	sets the y component of the point
contrib.gis.geos	Point	z		returns the z component of the point
contrib.gis.geos	Point	z	value	sets the z component of the point
contrib.gis.geos	Point	tuple		returns a tuple of the point
contrib.gis.geos	Point	tuple	tup	sets the coordinates of the point with the given tuple
contrib.gis.geos	Polygon	__init__		initializes on an exterior ring and a sequence of holes (both instances may be either linearring instances or a tuple/list
contrib.gis.geos	Polygon	__iter__		iterates over each ring in the polygon
contrib.gis.geos	Polygon	__len__		returns the number of rings in this polygon
contrib.gis.geos	Polygon	from_bbox	cls bbox	constructs a polygon from a bounding box 4-tuple
contrib.gis.geos	Polygon	_construct_ring	param msg	helper routine for trying to construct a ring from the given parameter
contrib.gis.geos	Polygon	_get_single_internal	index	returns the ring at the specified index the first index 0 will
contrib.gis.geos	Polygon	num_interior_rings		returns the number of interior rings
contrib.gis.geos	Polygon	_get_ext_ring		gets the exterior ring of the polygon
contrib.gis.geos	Polygon	_set_ext_ring	ring	sets the exterior ring of the polygon
contrib.gis.geos	Polygon	tuple		gets the tuple for each ring in this polygon
contrib.gis.geos	Polygon	kml		returns the kml representation of this polygon
contrib.gis.geos	ListMixin	__getitem__	index	get the item s at the specified index/slice
contrib.gis.geos	ListMixin	__delitem__	index	delete the item s at the specified index/slice
contrib.gis.geos	ListMixin	__setitem__	index val	set the item s at the specified index/slice
contrib.gis.geos	ListMixin	__add__	other	add another list-like object
contrib.gis.geos	ListMixin	__radd__	other	add to another list-like object
contrib.gis.geos	ListMixin	__iadd__	other	add another list-like object to self
contrib.gis.geos	ListMixin	count	val	standard list count method
contrib.gis.geos	ListMixin	index	val	standard list index method
contrib.gis.geos	ListMixin	append	val	standard list append method
contrib.gis.geos	ListMixin	extend	vals	standard list extend method
contrib.gis.geos	ListMixin	insert	index val	standard list insert method
contrib.gis.geos	ListMixin	pop	index	standard list pop method
contrib.gis.geos	ListMixin	remove	val	standard list remove method
contrib.gis.geos	ListMixin	reverse		standard list reverse method
contrib.gis.geos	ListMixin	sort	cmp key reverse	standard list sort method
contrib.gis.geos	ListMixin	_set_slice	index values	assign values to a slice of the object
contrib.gis.geos	ListMixin	_assign_extended_slice_rebuild	start stop step valueList	assign an extended slice by rebuilding entire list
contrib.gis.geos	ListMixin	_assign_extended_slice	start stop step valueList	assign an extended slice by re-assigning individual items
contrib.gis.geos	ListMixin	_assign_simple_slice	start stop valueList	assign a simple slice can assign slice of any length
contrib.gis.geos	WKBReader	read	wkb	returns a geosgeometry for the given wkb buffer
contrib.gis.geos	WKTReader	read	wkt	returns a geosgeometry for the given wkt string
contrib.gis.geos	GEOSCoordSeq	__init__	ptr z	initializes from a geos pointer
contrib.gis.geos	GEOSCoordSeq	__iter__		iterates over each point in the coordinate sequence
contrib.gis.geos	GEOSCoordSeq	__len__		returns the number of points in the coordinate sequence
contrib.gis.geos	GEOSCoordSeq	__str__		returns the string representation of the coordinate sequence
contrib.gis.geos	GEOSCoordSeq	__getitem__	index	returns the coordinate sequence value at the given index
contrib.gis.geos	GEOSCoordSeq	__setitem__	index value	sets the coordinate sequence value at the given index
contrib.gis.geos	GEOSCoordSeq	_checkindex	index	checks the given index
contrib.gis.geos	GEOSCoordSeq	_checkdim	dim	checks the given dimension
contrib.gis.geos	GEOSCoordSeq	getOrdinate	dimension index	returns the value for the given dimension and index
contrib.gis.geos	GEOSCoordSeq	setOrdinate	dimension index value	sets the value for the given dimension and index
contrib.gis.geos	GEOSCoordSeq	getX	index	get the x value at the index
contrib.gis.geos	GEOSCoordSeq	setX	index value	set x with the value at the given index
contrib.gis.geos	GEOSCoordSeq	getY	index	get the y value at the given index
contrib.gis.geos	GEOSCoordSeq	setY	index value	set y with the value at the given index
contrib.gis.geos	GEOSCoordSeq	getZ	index	get z with the value at the given index
contrib.gis.geos	GEOSCoordSeq	setZ	index value	set z with the value at the given index
contrib.gis.geos	GEOSCoordSeq	size		returns the size of this coordinate sequence
contrib.gis.geos	GEOSCoordSeq	dims		returns the dimensions of this coordinate sequence
contrib.gis.geos	GEOSCoordSeq	hasz		returns whether this coordinate sequence is 3d this property value is
contrib.gis.geos	GEOSCoordSeq	clone		clones this coordinate sequence
contrib.gis.geos	GEOSCoordSeq	kml		returns the kml representation for the coordinates
contrib.gis.geos	GEOSCoordSeq	tuple		returns a tuple version of this coordinate sequence
contrib.gis.geos	GEOSGeometry	__init__	geo_input srid	the base constructor for geos geometry objects and may take the following inputs
contrib.gis.geos	GEOSGeometry	_post_init	srid	helper routine for performing post-initialization setup
contrib.gis.geos	GEOSGeometry	__copy__		returns a clone because the copy of a geosgeometry may contain an invalid pointer location if the original is garbage collected
contrib.gis.geos	GEOSGeometry	__deepcopy__	memodict	the deepcopy routine is used by the node class of django utils tree
contrib.gis.geos	GEOSGeometry	__str__		ewkt is used for the string representation
contrib.gis.geos	GEOSGeometry	__repr__		short-hand representation because wkt may be very large
contrib.gis.geos	GEOSGeometry	__eq__	other	equivalence testing a geometry may be compared with another geometry or an ewkt representation
contrib.gis.geos	GEOSGeometry	__ne__	other	the not equals operator
contrib.gis.geos	GEOSGeometry	__or__	other	returns the union of this geometry and the other
contrib.gis.geos	GEOSGeometry	__and__	other	returns the intersection of this geometry and the other
contrib.gis.geos	GEOSGeometry	__sub__	other	return the difference this geometry and the other
contrib.gis.geos	GEOSGeometry	__xor__	other	return the symmetric difference of this geometry and the other
contrib.gis.geos	GEOSGeometry	_set_cs		sets the coordinate sequence for this geometry
contrib.gis.geos	GEOSGeometry	coord_seq		returns a clone of the coordinate sequence for this geometry
contrib.gis.geos	GEOSGeometry	geom_type		returns a string representing the geometry type e g 'polygon'
contrib.gis.geos	GEOSGeometry	geom_typeid		returns an integer representing the geometry type
contrib.gis.geos	GEOSGeometry	num_geom		returns the number of geometries in the geometry
contrib.gis.geos	GEOSGeometry	num_coords		returns the number of coordinates in the geometry
contrib.gis.geos	GEOSGeometry	num_points		returns the number points or coordinates in the geometry
contrib.gis.geos	GEOSGeometry	dims		returns the dimension of this geometry (0=point 1=line 2=surface)
contrib.gis.geos	GEOSGeometry	normalize		converts this geometry to normal form or canonical form
contrib.gis.geos	GEOSGeometry	empty		returns a boolean indicating whether the set of points in this geometry are empty
contrib.gis.geos	GEOSGeometry	hasz		returns whether the geometry has a 3d dimension
contrib.gis.geos	GEOSGeometry	ring		returns whether or not the geometry is a ring
contrib.gis.geos	GEOSGeometry	simple		returns false if the geometry not simple
contrib.gis.geos	GEOSGeometry	valid		this property tests the validity of this geometry
contrib.gis.geos	GEOSGeometry	valid_reason		returns a string containing the reason for any invalidity
contrib.gis.geos	GEOSGeometry	contains	other	returns true if other within this returns true
contrib.gis.geos	GEOSGeometry	covers	other	return true if the de-9im intersection matrix for the two geometries is t*****ff*, *t****ff*, ***t**ff*, or ****t*ff*
contrib.gis.geos	GEOSGeometry	crosses	other	returns true if the de-9im intersection matrix for the two geometries is t*t****** (for a point and a curve a point and an area or a line and
contrib.gis.geos	GEOSGeometry	disjoint	other	returns true if the de-9im intersection matrix for the two geometries is ff*ff****
contrib.gis.geos	GEOSGeometry	equals	other	returns true if the de-9im intersection matrix for the two geometries is t*f**fff*
contrib.gis.geos	GEOSGeometry	equals_exact	other tolerance	returns true if the two geometries are exactly equal up to a specified tolerance
contrib.gis.geos	GEOSGeometry	intersects	other	returns true if disjoint returns false
contrib.gis.geos	GEOSGeometry	overlaps	other	returns true if the de-9im intersection matrix for the two geometries is t*t***t** for two points or two surfaces 1*t***t** for two curves
contrib.gis.geos	GEOSGeometry	relate_pattern	other pattern	returns true if the elements in the de-9im intersection matrix for the two geometries match the elements in pattern
contrib.gis.geos	GEOSGeometry	touches	other	returns true if the de-9im intersection matrix for the two geometries is ft*******, f**t***** or f***t****
contrib.gis.geos	GEOSGeometry	within	other	returns true if the de-9im intersection matrix for the two geometries is t*f**f***
contrib.gis.geos	GEOSGeometry	srid		gets the srid for the geometry returns none if no srid is set
contrib.gis.geos	GEOSGeometry	srid	srid	sets the srid for the geometry
contrib.gis.geos	GEOSGeometry	ewkt		returns the ewkt srid + wkt of the geometry
contrib.gis.geos	GEOSGeometry	wkt		returns the wkt well-known text representation of this geometry
contrib.gis.geos	GEOSGeometry	hex		returns the wkb of this geometry in hexadecimal form please note
contrib.gis.geos	GEOSGeometry	hexewkb		returns the ewkb of this geometry in hexadecimal form this is an
contrib.gis.geos	GEOSGeometry	json		returns geojson representation of this geometry
contrib.gis.geos	GEOSGeometry	wkb		returns the wkb well-known binary representation of this geometry as a python buffer
contrib.gis.geos	GEOSGeometry	ewkb		return the ewkb representation of this geometry as a python buffer
contrib.gis.geos	GEOSGeometry	kml		returns the kml representation of this geometry
contrib.gis.geos	GEOSGeometry	prepared		returns a preparedgeometry corresponding to this geometry -- it is optimized for the contains intersects and covers operations
contrib.gis.geos	GEOSGeometry	ogr		returns the ogr geometry for this geometry
contrib.gis.geos	GEOSGeometry	srs		returns the osr spatialreference for srid of this geometry
contrib.gis.geos	GEOSGeometry	crs		alias for srs property
contrib.gis.geos	GEOSGeometry	transform	ct clone	requires gdal transforms the geometry according to the given
contrib.gis.geos	GEOSGeometry	_topology	gptr	helper routine to return geometry from the given pointer
contrib.gis.geos	GEOSGeometry	boundary		returns the boundary as a newly allocated geometry object
contrib.gis.geos	GEOSGeometry	buffer	width quadsegs	returns a geometry that represents all points whose distance from this geometry is less than or equal to distance
contrib.gis.geos	GEOSGeometry	centroid		the centroid is equal to the centroid of the set of component geometries of highest dimension (since the lower-dimension geometries contribute zero
contrib.gis.geos	GEOSGeometry	convex_hull		returns the smallest convex polygon that contains all the points in the geometry
contrib.gis.geos	GEOSGeometry	difference	other	returns a geometry representing the points making up this geometry that do not make up other
contrib.gis.geos	GEOSGeometry	envelope		return the envelope for this geometry a polygon
contrib.gis.geos	GEOSGeometry	intersection	other	returns a geometry representing the points shared by this geometry and other
contrib.gis.geos	GEOSGeometry	point_on_surface		computes an interior point of this geometry
contrib.gis.geos	GEOSGeometry	relate	other	returns the de-9im intersection matrix for this geometry and the other
contrib.gis.geos	GEOSGeometry	simplify	tolerance preserve_topology	returns the geometry simplified using the douglas-peucker algorithm to the specified tolerance (higher tolerance => less points)
contrib.gis.geos	GEOSGeometry	sym_difference	other	returns a set combining the points in this geometry not in other and the points in other not in this geometry
contrib.gis.geos	GEOSGeometry	unary_union		return the union of all the elements of this geometry
contrib.gis.geos	GEOSGeometry	union	other	returns a geometry representing all the points in this geometry and other
contrib.gis.geos	GEOSGeometry	area		returns the area of the geometry
contrib.gis.geos	GEOSGeometry	distance	other	returns the distance between the closest points on this geometry and the other
contrib.gis.geos	GEOSGeometry	extent		returns the extent of this geometry as a 4-tuple consisting of xmin ymin xmax ymax
contrib.gis.geos	GEOSGeometry	length		returns the length of this geometry (e g 0 for point or the
contrib.gis.geos	GEOSGeometry	clone		clones this geometry
contrib.gis.geos	LinearGeometryMixin	merged		return the line merge of this geometry
contrib.gis.geos	LinearGeometryMixin	closed		return whether or not this geometry is closed
contrib.gis.geos.prototypes		last_arg_byref	args	returns the last c argument's value by reference
contrib.gis.geos.prototypes		check_dbl	result func cargs	checks the status code and returns the double value passed in by reference
contrib.gis.geos.prototypes		check_geom	result func cargs	error checking on routines that return geometries
contrib.gis.geos.prototypes		check_minus_one	result func cargs	error checking on routines that should not return -1
contrib.gis.geos.prototypes		check_predicate	result func cargs	error checking for unary/binary predicate functions
contrib.gis.geos.prototypes		check_sized_string	result func cargs	error checking for routines that return explicitly sized strings
contrib.gis.geos.prototypes		check_string	result func cargs	error checking for routines that return strings
contrib.gis.geos.prototypes		check_zero	result func cargs	error checking on routines that should not return 0
contrib.gis.geos.prototypes	_WKBReader	read	wkb	returns a _pointer_ to c geos geometry object from the given wkb
contrib.gis.geos.prototypes	WKTWriter	write	geom	returns the wkt representation of the given geometry
contrib.gis.geos.prototypes	WKBWriter	write	geom	returns the wkb representation of the given geometry
contrib.gis.geos.prototypes	WKBWriter	write_hex	geom	returns the hexewkb representation of the given geometry
contrib.gis.geos.prototypes		check_cs_op	result func cargs	checks the status code of a coordinate sequence operation
contrib.gis.geos.prototypes		check_cs_get	result func cargs	checking the coordinate sequence retrieval
conf	LazySettings	_setup	name	load the settings module pointed to by the environment variable this
conf	LazySettings	__getattr__	name	return the value of a setting and cache it in self __dict__
conf	LazySettings	__setattr__	name value	set the value of setting clear all cached values if _wrapped changes
conf	LazySettings	__delattr__	name	delete a setting and clear it from cache if needed
conf	LazySettings	configure	default_settings	called to manually configure the settings the 'default_settings'
conf	LazySettings	configured		returns true if the settings have already been configured
conf	UserSettingsHolder	__init__	default_settings	requests for configuration variables not in this class are satisfied from the module specified in default_settings if possible
conf.urls		static	prefix view	helper function to return a url pattern for serving files in debug mode
conf.urls		i18n_patterns		adds the language code prefix to every url pattern within this function
conf.urls		is_language_prefix_patterns_used	urlconf	return a tuple of two booleans
middleware	ConditionalGetMiddleware	needs_etag	response	return true if an etag header should be added to response
middleware	CommonMiddleware	process_request	request	check for denied user-agents and rewrite the url based on settings
middleware	CommonMiddleware	should_redirect_with_slash	request	return true if settings append_slash is true and appending a slash to
middleware	CommonMiddleware	get_full_path_with_slash	request	return the full path of the request with a trailing slash appended
middleware	CommonMiddleware	process_response	request response	calculate the etag if needed
middleware	CommonMiddleware	needs_etag	response	return true if an etag header should be added to response
middleware	BrokenLinkEmailsMiddleware	process_response	request response	send broken link emails for relevant 404 not found responses
middleware	BrokenLinkEmailsMiddleware	is_internal_request	domain referer	returns true if the referring url is the same domain as the current request
middleware	BrokenLinkEmailsMiddleware	is_ignorable_request	request uri domain referer	return true if the given request *shouldn't* notify the site managers according to project settings or in situations outlined by the inline
middleware		_get_failure_view		returns the view to be used for csrf rejections
middleware		_salt_cipher_secret	secret	given a secret (assumed to be a string of csrf_allowed_chars), generate a token by adding a salt and using it to encrypt the secret
middleware		_unsalt_cipher_token	token	given a token (assumed to be a string of csrf_allowed_chars of length csrf_token_length and that its first half is a salt), use it to decrypt
middleware		get_token	request	returns the csrf token required for a post form the token is an
middleware		rotate_token	request	changes the csrf token in use for a request - should be done on login for security purposes
middleware	XFrameOptionsMiddleware	get_xframe_options_value	request response	gets the value to set for the x_frame_options header
middleware	UpdateCacheMiddleware	process_response	request response	sets the cache if needed
middleware	FetchFromCacheMiddleware	process_request	request	checks whether the page is already cached and returns the cached version if available
dispatch	Signal	__init__	providing_args use_caching	create a new signal
dispatch	Signal	connect	receiver sender weak dispatch_uid	connect receiver to sender for signal
dispatch	Signal	disconnect	receiver sender weak dispatch_uid	disconnect receiver from sender for signal
dispatch	Signal	send	sender	send signal from sender to all connected receivers
dispatch	Signal	send_robust	sender	send signal from sender to all connected receivers catching errors
dispatch	Signal	_live_receivers	sender	filter sequence of receivers to get resolved live receivers
dispatch		receiver	signal	a decorator for connecting receivers to signals used by passing in the
templatetags	PrefixNode	handle_token	cls parser token name	class method to parse prefix node and return a node
templatetags		get_static_prefix	parser token	populates a template variable with the static prefix settings
templatetags		get_media_prefix	parser token	populates a template variable with the media prefix settings
templatetags	StaticNode	handle_token	cls parser token	class method to parse prefix node and return a node
templatetags		do_static	parser token	joins the given path with the static_url setting
templatetags		static	path	given a relative path to a static asset return the absolute path to the asset
templatetags		do_get_available_languages	parser token	this will store a list of available languages in the context
templatetags		do_get_language_info	parser token	this will store the language information dictionary for the given language code in a context variable
templatetags		do_get_language_info_list	parser token	this will store a list of language information dictionaries for the given language codes in a context variable
templatetags		do_get_current_language	parser token	this will store the current language in the context
templatetags		do_get_current_language_bidi	parser token	this will store the current language layout in the context
templatetags		do_translate	parser token	this will mark a string for translation and will translate the string for the current language
templatetags		do_block_translate	parser token	this will translate a block of text with parameters
templatetags		language	parser token	this will enable the given language just for this block
templatetags		do_cache	parser token	this will cache the contents of a template fragment for a given amount of time
templatetags		localtime	value	converts a datetime to local time in the active time zone
templatetags		utc	value	converts a datetime to utc
templatetags		do_timezone	value arg	converts a datetime to local time in a given time zone
templatetags		localtime_tag	parser token	forces or prevents conversion of datetime objects to local time regardless of the value of settings
templatetags		timezone_tag	parser token	enables a given time zone just for this block
templatetags		get_current_timezone_tag	parser token	stores the name of the current time zone in the context
templatetags		localize	value	forces a value to be rendered as a localized value regardless of the value of settings
templatetags		unlocalize	value	forces a value to be rendered as a non-localized value regardless of the value of settings
templatetags		localize_tag	parser token	forces or prevents localization of values regardless of the value of settings
template	Engine	get_default		when only one djangotemplates backend is configured returns it
template	Engine	from_string	template_code	returns a compiled template object for the given template code handling template inheritance recursively
template	Engine	get_template	template_name	returns a compiled template object for the given template name handling template inheritance recursively
template	Engine	render_to_string	template_name context	render the template specified by template_name with the given context
template	Engine	select_template	template_name_list	given a list of template names returns the first that can be loaded
template		get_template	template_name using	loads and returns a template for the given name
template		select_template	template_name_list using	loads and returns a template for one of the given names
template		render_to_string	template_name context request using	loads a template and renders it with a context returns a string
template	ExtendsNode	find_template	template_name context	this is a wrapper around engine find_template() a history is kept in
template	IncludeNode	render	context	render the specified template and context cache the template object
template		do_block	parser token	define a block that can be overridden by child templates
template		construct_relative_path	current_template_name relative_name	convert a relative path (starting with ' /' or ' /') to the full template
template		do_extends	parser token	signal that this template extends a parent template
template		do_include	parser token	loads a template and renders it with the current context you can pass
template	Library	filter	name filter_func	register a callable as a template filter example
template	Library	simple_tag	func takes_context name	register a callable as a compiled template tag example
template	Library	inclusion_tag	filename func takes_context name	register a callable as an inclusion tag @register
template	InclusionNode	render	context	render the specified template and context cache the template object
template		parse_bits	parser bits params varargs	parse bits for template tag helpers simple_tag and inclusion_tag in particular by detecting syntax errors and by extracting positional and
template		import_library	name	load a library object from a template tag module
template	TokenBase	display		returns what to display in error messages for this node
template		infix	bp func	creates an infix operator given a binding power and a function that
template		prefix	bp func	creates a prefix operator given a binding power and a function that evaluates the node
template	Template	render	context	display stage -- can be called many times
template	Template	compile_nodelist		parse and compile the template source into a nodelist if debug
template	Template	get_exception_info	exception token	return a dictionary containing contextual line information of where the exception occurred in the template
template	Token	__init__	token_type contents position lineno	a token representing a string from the template
template	Lexer	tokenize		return a list of tokens from a given template_string
template	Lexer	create_token	token_string position lineno in_tag	convert the given token string into a new token object and return it
template	DebugLexer	tokenize		split a template string into tokens and annotates each token with its start and end position in the source
template	Parser	parse	parse_until	iterate through the parser tokens and compiles each one into a node
template	Parser	error	token e	return an exception annotated with the originating token since the
template	Parser	compile_filter	token	convenient wrapper for filterexpression
template	Variable	resolve	context	resolve this variable against a given context
template	Variable	_resolve_lookup	context	performs resolution of a real variable i e not a literal against the
template	Node	render	context	return the node rendered as a string
template	Node	render_annotated	context	render the node if debug is true and an exception occurs during
template	Node	get_nodes_by_type	nodetype	return a list of all nodes within this node and its nodelist
template	NodeList	get_nodes_by_type	nodetype	return a list of all nodes of the given type
template		render_value_in_context	value context	converts any value to a string to become part of a rendered template this
template		token_kwargs	bits parser support_legacy	a utility method for parsing token keyword arguments
template	EngineHandler	__init__	templates	templates is an optional list of template engine definitions (structured like settings
template		get_app_template_dirs	dirname	return an iterable of paths of directories to load app templates from
template		stringfilter	func	decorator for filters which should only receive unicode objects the object
template		addslashes	value	adds slashes before quotes useful for escaping strings in csv for
template		capfirst	value	capitalizes the first character of the value
template		escapejs_filter	value	hex encodes characters for use in javascript strings
template		floatformat	text arg	displays a float to a specified number of decimal places
template		iriencode	value	escapes an iri value for use in a url
template		linenumbers	value autoescape	displays text with line numbers
template		lower	value	converts a string into all lowercase
template		make_list	value	returns the value turned into a list
template		slugify	value	converts to ascii converts spaces to hyphens removes characters that
template		stringformat	value arg	formats the variable according to the arg a string formatting specifier
template		title	value	converts a string into titlecase
template		truncatechars	value arg	truncates a string after a certain number of characters
template		truncatechars_html	value arg	truncates html after a certain number of chars
template		truncatewords	value arg	truncates a string after a certain number of words
template		truncatewords_html	value arg	truncates html after a certain number of words
template		upper	value	converts a string into all uppercase
template		urlencode	value safe	escapes a value for use in a url
template		urlize	value autoescape	converts urls in plain text into clickable links
template		urlizetrunc	value limit autoescape	converts urls into clickable links truncating urls to the given character limit and adding 'rel=nofollow' attribute to discourage spamming
template		wordcount	value	returns the number of words
template		wordwrap	value arg	wraps words at specified line length
template		ljust	value arg	left-aligns the value in a field of a given width
template		rjust	value arg	right-aligns the value in a field of a given width
template		center	value arg	centers the value in a field of a given width
template		cut	value arg	removes all values of arg from the given string
template		escape_filter	value	marks the value as a string that should be auto-escaped
template		force_escape	value	escapes a string's html this returns a new string containing the escaped
template		linebreaks_filter	value autoescape	replaces line breaks in plain text with appropriate html a single newline becomes an html line break (<br />) and a new line
template		linebreaksbr	value autoescape	converts all newlines in a piece of plain text to html line breaks (<br />)
template		safe	value	marks the value as a string that should not be auto-escaped
template		safeseq	value	a "safe" filter for sequences marks each element in the sequence
template		striptags	value	strips all [x]html tags
template		_property_resolver	arg	when arg is convertible to float behave like operator itemgetter arg
template		dictsort	value arg	takes a list of dicts returns that list sorted by the property given in the argument
template		dictsortreversed	value arg	takes a list of dicts returns that list sorted in reverse order by the property given in the argument
template		first	value	returns the first item in a list
template		join	value arg autoescape	joins a list with a string like python's str join list
template		last	value	returns the last item in a list
template		length	value	returns the length of the value - useful for lists
template		length_is	value arg	returns a boolean of whether the value's length is the argument
template		random	value	returns a random item from the list
template		slice_filter	value arg	returns a slice of the list
template		unordered_list	value autoescape	recursively takes a self-nested list and returns an html unordered list -- without opening and closing <ul> tags
template		add	value arg	adds the arg to the value
template		get_digit	value arg	given a whole number returns the requested digit of it where 1 is the right-most digit 2 is the second-right-most digit etc
template		date	value arg	formats a date according to the given format
template		time	value arg	formats a time according to the given format
template		timesince_filter	value arg	formats a date as the time since that date (i e "4 days 6 hours")
template		timeuntil_filter	value arg	formats a date as the time until that date (i e "4 days 6 hours")
template		default	value arg	if value is unavailable use given default
template		default_if_none	value arg	if value is none use given default
template		divisibleby	value arg	returns true if the value is divisible by the argument
template		yesno	value arg	given a string mapping values for true false and optionally none returns one of those strings according to the value
template		filesizeformat	bytes_	formats the value like a 'human-readable' file size (i e 13 kb 4 1 mb
template		pluralize	value arg	returns a plural suffix if the value is not 1 by default 's' is used as
template		phone2numeric_filter	value	takes a phone number and converts it in to its numerical equivalent
template		pprint	value	a wrapper around pprint pprint -- for debugging really
template		csrf	request	context processor that provides a csrf token or the string 'notprovided' if
template		debug	request	returns context variables helpful for debugging
template		static	request	adds static-related context variables to the context
template		media	request	adds media-related context variables to the context
template	CycleNode	reset	context	reset the cycle iteration back to the beginning
template		autoescape	parser token	force autoescape behavior for this block
template		comment	parser token	ignores everything between {% comment %} and {% endcomment %}
template		cycle	parser token	cycles among the given strings each time this tag is encountered
template		debug	parser token	outputs a whole load of debugging information including the current context and imported modules
template		do_filter	parser token	filters the contents of the block through variable filters
template		firstof	parser token	outputs the first variable passed that is not false
template		do_for	parser token	loops over each item in an array
template		ifequal	parser token	outputs the contents of the block if the two arguments equal each other
template		ifnotequal	parser token	outputs the contents of the block if the two arguments are not equal
template		do_if	parser token	the {% if %} tag evaluates a variable and if that variable is "true" (i
template		ifchanged	parser token	checks if a value has changed from the last iteration of a loop
template		load_from_library	library label names	return a subset of tags and filters from a library
template		load	parser token	loads a custom template tag library into the parser
template		lorem	parser token	creates random latin text useful for providing test data in templates
template		now	parser token	displays the date formatted according to the given string
template		regroup	parser token	regroups a list of alike objects by a common attribute
template		resetcycle	parser token	resets a cycle tag
template		spaceless	parser token	removes whitespace between html tags including tab and newline characters
template		templatetag	parser token	outputs one of the bits used to compose template tags
template		url	parser token	return an absolute url matching the given view with its parameters
template		verbatim	parser token	stops the template engine from rendering the contents of this block tag
template		widthratio	parser token	for creating bar charts and such this tag calculates the ratio of a given value to a maximum value and then applies that ratio to a constant
template		do_with	parser token	adds one or more values to the context inside of this block for caching and easy access
template	SimpleTemplateResponse	__getstate__		raise an exception if trying to pickle an unrendered response pickle
template	SimpleTemplateResponse	resolve_template	template	accepts a template object path-to-template or list of paths
template	SimpleTemplateResponse	rendered_content		returns the freshly rendered content for the template and context described by the templateresponse
template	SimpleTemplateResponse	add_post_render_callback	callback	adds a new post-rendering callback
template	SimpleTemplateResponse	render		renders thereby finalizing the content of the response
template	SimpleTemplateResponse	content	value	sets the content for the response
template	BaseContext	__setitem__	key value	set a variable in the current context
template	BaseContext	set_upward	key value	set a variable in one of the higher contexts if it exists there otherwise in the current context
template	BaseContext	__getitem__	key	get a variable's value starting at the current context and going upward
template	BaseContext	__delitem__	key	delete a variable from the current context
template	BaseContext	new	values	returns a new context with the same properties but with only the values given in 'values' stored
template	BaseContext	flatten		returns self dicts as one dictionary
template	BaseContext	__eq__	other	compares two contexts by comparing theirs 'dicts' attributes
template	Context	update	other_dict	pushes other_dict to the stack of dictionaries in the context
template		make_context	context request	create a suitable context from a plain dict and optionally an httprequest
template.backends	BaseEngine	__init__	params	initializes the template engine
template.backends	BaseEngine	from_string	template_code	creates and returns a template for the given source code
template.backends	BaseEngine	get_template	template_name	loads and returns a template for the given name
template.backends	BaseEngine	template_dirs		returns a list of directories to search for templates
template.backends	BaseEngine	iter_template_filenames	template_name	iterates over candidate files for template_name
template.backends		get_exception_info	exception	formats exception information for display on the debug page using the structure described in the template api documentation
template.backends	DjangoTemplates	get_templatetag_libraries	custom_libraries	return a collation of template tag libraries from installed applications and the supplied custom_libraries argument
template.backends		copy_exception	exc backend	create a new templatedoesnotexist preserve its declared attributes and
template.backends		reraise	exc backend	reraise templatedoesnotexist while maintaining template debug information
template.backends		get_installed_libraries		return the built-in template tag libraries and those from installed applications
template.backends		get_package_libraries	pkg	recursively yield template tag libraries defined in submodules of a package
template.loaders	Loader	get_template_sources	template_name template_dirs	return an origin object pointing to an absolute path in each directory in template_dirs
template.loaders	Loader	load_template_source	template_name template_dirs	loads templates from python eggs via pkg_resource resource_string
template.loaders	Loader	get_template	template_name template_dirs skip	calls self get_template_sources() and returns a template object for
template.loaders	Loader	get_template_sources	template_name	an iterator that yields possible matching template paths for a template name
template.loaders	Loader	load_template_source	template_name template_dirs	removedindjango20warning returns a tuple containing the source and origin for the given template name
template.loaders	Loader	reset		resets any state maintained by the loader instance (e g cached
template.loaders	Loader	supports_recursion		removedindjango20warning this is an internal property used by the extendsnode during the deprecation of non-recursive loaders
template.loaders	Loader	get_template	template_name template_dirs skip	perform the caching that gives this loader its name often many of the
template.loaders	Loader	cache_key	template_name template_dirs skip	generate a cache key for the template name dirs and skip
template.loaders	Loader	supports_recursion		removedindjango20warning this is an internal property used by the extendsnode during the deprecation of non-recursive loaders
template.loaders	Loader	find_template	name dirs	removedindjango20warning an internal method to lookup the template name in all the configured loaders
template.loaders	Loader	reset		empty the template cache
views		serve	request path document_root show_indexes	serve static files below a given point in the directory structure
views		was_modified_since	header mtime size	was something modified since the user last downloaded it? header
views		cleanse_setting	key value	cleanse an individual setting key/value of sensitive content
views		get_safe_settings		returns a dictionary of the settings module with sensitive settings blurred out
views		technical_500_response	request exc_type exc_value tb	create a technical server error response the last three arguments are
views	SafeExceptionReporterFilter	is_active	request	this filter is to add safety in production environments (i e debug
views	SafeExceptionReporterFilter	get_cleansed_multivaluedict	request multivaluedict	replaces the keys in a multivaluedict marked as sensitive with stars
views	SafeExceptionReporterFilter	get_post_parameters	request	replaces the values of post parameters marked as sensitive with stars (*********)
views	SafeExceptionReporterFilter	get_traceback_frame_variables	request tb_frame	replaces the values of variables marked as sensitive with stars (*********)
views	ExceptionReporter	get_traceback_data		return a dictionary containing traceback information
views	ExceptionReporter	get_traceback_html		return html version of debug 500 http error page
views	ExceptionReporter	get_traceback_text		return plain text version of debug 500 http error page
views	ExceptionReporter	_get_lines_from_file	filename lineno context_lines loader	returns context_lines before and after lineno from file
views	ExceptionReporter	format_exception		return the same data as from traceback format_exception
views		technical_404_response	request exception	create a technical 404 error response the exception should be the http404
views		default_urlconf	request	create an empty urlconf 404 error response
views		set_language	request	redirect to a given url while setting the chosen language in the session or cookie
views		get_formats		returns all formats strings required for i18n to work
views		null_javascript_catalog	request domain packages	returns "identity" versions of the javascript i18n functions -- i e
views		javascript_catalog	request domain packages	returns the selected language catalog as a javascript library
views		json_catalog	request domain packages	return the selected language catalog as a json object
views		csrf_failure	request reason template_name	default view used when request fails csrf protection
views		page_not_found	request exception template_name	default 404 handler
views		server_error	request template_name	500 error handler
views		bad_request	request exception template_name	400 error handler
views		permission_denied	request exception template_name	permission denied 403 handler
views.decorators		require_http_methods	request_method_list	decorator to make a view only accept particular request methods usage :
views.decorators		condition	etag_func last_modified_func	decorator to support conditional retrieval or change for a view function
views.decorators		sensitive_variables		indicates which variables used in the decorated function are sensitive so that those variables can later be treated in a special way for example
views.decorators		sensitive_post_parameters		indicates which post parameters used in the decorated view are sensitive so that those parameters can later be treated in a special way for example
views.decorators		vary_on_headers		a view decorator that adds the specified headers to the vary header of the response
views.decorators		vary_on_cookie	func	a view decorator that adds "cookie" to the vary header of a response this
views.decorators		csrf_exempt	view_func	marks a view function as being exempt from the csrf view protection
views.decorators		xframe_options_deny	view_func	modifies a view function so its response has the x-frame-options http header set to 'deny' as long as the response doesn't already have that
views.decorators		xframe_options_sameorigin	view_func	modifies a view function so its response has the x-frame-options http header set to 'sameorigin' as long as the response doesn't already have
views.decorators		xframe_options_exempt	view_func	modifies a view function by setting a response variable that instructs xframeoptionsmiddleware to not set the x-frame-options http header
views.decorators		cache_page		decorator for views that tries getting the page from the cache and populates the cache if the page isn't in the cache yet
views.decorators		never_cache	view_func	decorator that adds headers to a response so that it will never be cached
views.generic	MultipleObjectMixin	get_queryset		return the list of items for this view
views.generic	MultipleObjectMixin	get_ordering		return the field or fields to use for ordering the queryset
views.generic	MultipleObjectMixin	paginate_queryset	queryset page_size	paginate the queryset if needed
views.generic	MultipleObjectMixin	get_paginate_by	queryset	get the number of items to paginate by or none for no pagination
views.generic	MultipleObjectMixin	get_paginator	queryset per_page orphans allow_empty_first_page	return an instance of the paginator for this view
views.generic	MultipleObjectMixin	get_paginate_orphans		returns the maximum number of orphans extend the last page by when paginating
views.generic	MultipleObjectMixin	get_allow_empty		returns true if the view should display empty lists and false if a 404 should be raised instead
views.generic	MultipleObjectMixin	get_context_object_name	object_list	get the name of the item to be used in the context
views.generic	MultipleObjectMixin	get_context_data		get the context for this view
views.generic	MultipleObjectTemplateResponseMixin	get_template_names		return a list of template names to be used for the request must return
views.generic	YearMixin	get_year_format		get a year format string in strptime syntax to be used to parse the year from url variables
views.generic	YearMixin	get_year		return the year for which this view should display data
views.generic	YearMixin	get_next_year	date	get the next valid year
views.generic	YearMixin	get_previous_year	date	get the previous valid year
views.generic	YearMixin	_get_next_year	date	return the start date of the next interval
views.generic	YearMixin	_get_current_year	date	return the start date of the current interval
views.generic	MonthMixin	get_month_format		get a month format string in strptime syntax to be used to parse the month from url variables
views.generic	MonthMixin	get_month		return the month for which this view should display data
views.generic	MonthMixin	get_next_month	date	get the next valid month
views.generic	MonthMixin	get_previous_month	date	get the previous valid month
views.generic	MonthMixin	_get_next_month	date	return the start date of the next interval
views.generic	MonthMixin	_get_current_month	date	return the start date of the previous interval
views.generic	DayMixin	get_day_format		get a day format string in strptime syntax to be used to parse the day from url variables
views.generic	DayMixin	get_day		return the day for which this view should display data
views.generic	DayMixin	get_next_day	date	get the next valid day
views.generic	DayMixin	get_previous_day	date	get the previous valid day
views.generic	DayMixin	_get_next_day	date	return the start date of the next interval
views.generic	DayMixin	_get_current_day	date	return the start date of the current interval
views.generic	WeekMixin	get_week_format		get a week format string in strptime syntax to be used to parse the week from url variables
views.generic	WeekMixin	get_week		return the week for which this view should display data
views.generic	WeekMixin	get_next_week	date	get the next valid week
views.generic	WeekMixin	get_previous_week	date	get the previous valid week
views.generic	WeekMixin	_get_next_week	date	return the start date of the next interval
views.generic	WeekMixin	_get_current_week	date	return the start date of the current interval
views.generic	WeekMixin	_get_weekday	date	return the weekday for a given date
views.generic	DateMixin	get_date_field		get the name of the date field to be used to filter by
views.generic	DateMixin	get_allow_future		returns true if the view should be allowed to display objects from the future
views.generic	DateMixin	uses_datetime_field		return true if the date field is a datetimefield and false if it's a datefield
views.generic	DateMixin	_make_date_lookup_arg	value	convert a date into a datetime when the date field is a datetimefield
views.generic	DateMixin	_make_single_date_lookup	date	get the lookup kwargs for filtering on a single date
views.generic	BaseDateListView	get_dated_items		obtain the list of dates and items
views.generic	BaseDateListView	get_ordering		returns the field or fields to use for ordering the queryset uses the date field by default
views.generic	BaseDateListView	get_dated_queryset		get a queryset properly filtered according to allow_future and any extra lookup kwargs
views.generic	BaseDateListView	get_date_list_period		get the aggregation period for the list of dates 'year', 'month', or 'day'
views.generic	BaseDateListView	get_date_list	queryset date_type ordering	get a date list by calling queryset dates/datetimes(), checking
views.generic	BaseArchiveIndexView	get_dated_items		return (date_list items extra_context) for this request
views.generic	BaseYearArchiveView	get_dated_items		return (date_list items extra_context) for this request
views.generic	BaseYearArchiveView	get_make_object_list		return true if this view should contain the full list of objects in the given year
views.generic	BaseMonthArchiveView	get_dated_items		return (date_list items extra_context) for this request
views.generic	BaseWeekArchiveView	get_dated_items		return (date_list items extra_context) for this request
views.generic	BaseDayArchiveView	get_dated_items		return (date_list items extra_context) for this request
views.generic	BaseDayArchiveView	_get_dated_items	date	do the actual heavy lifting of getting the dated items this accepts a date object so that todayarchiveview can be trivial
views.generic	BaseTodayArchiveView	get_dated_items		return (date_list items extra_context) for this request
views.generic	BaseDateDetailView	get_object	queryset	get the object this request displays
views.generic		_date_from_string	year year_format month month_format	helper get a datetime date object given a format string and a year
views.generic		_get_next_prev	generic_view date is_previous period	helper get the next or the previous valid date the idea is to allow
views.generic		timezone_today		return the current date in the current time zone
views.generic	View	__init__		constructor called in the urlconf can contain helpful extra
views.generic	View	as_view	cls	main entry point for a request-response process
views.generic	View	options	request	handles responding to requests for the options http verb
views.generic	TemplateResponseMixin	render_to_response	context	returns a response using the response_class for this view with a template rendered with the given context
views.generic	TemplateResponseMixin	get_template_names		returns a list of template names to be used for the request must return
views.generic	RedirectView	get_redirect_url		return the url redirect to keyword arguments from the
views.generic	SingleObjectMixin	get_object	queryset	returns the object the view is displaying
views.generic	SingleObjectMixin	get_queryset		return the queryset that will be used to look up the object
views.generic	SingleObjectMixin	get_slug_field		get the name of a slug field to be used to look up by slug
views.generic	SingleObjectMixin	get_context_object_name	obj	get the name to use for the object
views.generic	SingleObjectMixin	get_context_data		insert the single object into the context dict
views.generic	SingleObjectTemplateResponseMixin	get_template_names		return a list of template names to be used for the request may not be
views.generic	FormMixin	get_initial		returns the initial data to use for forms on this view
views.generic	FormMixin	get_prefix		returns the prefix to use for forms on this view
views.generic	FormMixin	get_form_class		returns the form class to use in this view
views.generic	FormMixin	get_form	form_class	returns an instance of the form to be used in this view
views.generic	FormMixin	get_form_kwargs		returns the keyword arguments for instantiating the form
views.generic	FormMixin	get_success_url		returns the supplied success url
views.generic	FormMixin	form_valid	form	if the form is valid redirect to the supplied url
views.generic	FormMixin	form_invalid	form	if the form is invalid re-render the context data with the data-filled form and errors
views.generic	FormMixin	get_context_data		insert the form into the context dict
views.generic	ModelFormMixin	get_form_class		returns the form class to use in this view
views.generic	ModelFormMixin	get_form_kwargs		returns the keyword arguments for instantiating the form
views.generic	ModelFormMixin	get_success_url		returns the supplied url
views.generic	ModelFormMixin	form_valid	form	if the form is valid save the associated model
views.generic	ProcessFormView	get	request	handles get requests and instantiates a blank version of the form
views.generic	ProcessFormView	post	request	handles post requests instantiating a form instance with the passed post variables and then checked for validity
views.generic	DeletionMixin	delete	request	calls the delete() method on the fetched object and then redirects to the success url
forms	BaseForm	order_fields	field_order	rearranges the fields according to field_order
forms	BaseForm	__getitem__	name	returns a boundfield with the given name
forms	BaseForm	errors		returns an errordict for the data provided for the form
forms	BaseForm	is_valid		returns true if the form has no errors otherwise false if errors are
forms	BaseForm	add_prefix	field_name	returns the field name with a prefix appended if this form has a prefix set
forms	BaseForm	add_initial_prefix	field_name	add a 'initial' prefix for checking dynamic initial values
forms	BaseForm	_html_output	normal_row error_row row_ender help_text_html	helper function for outputting html used by as_table(), as_ul(), as_p()
forms	BaseForm	as_table		returns this form rendered as html <tr>s -- excluding the <table></table>
forms	BaseForm	as_ul		returns this form rendered as html <li>s -- excluding the <ul></ul>
forms	BaseForm	as_p		returns this form rendered as html <p>s
forms	BaseForm	non_field_errors		returns an errorlist of errors that aren't associated with a particular field -- i
forms	BaseForm	add_error	field error	update the content of self _errors
forms	BaseForm	full_clean		cleans all of self data and populates self _errors and
forms	BaseForm	_post_clean		an internal hook for performing additional cleaning after form cleaning is complete
forms	BaseForm	clean		hook for doing any extra form-wide cleaning after field clean() has been
forms	BaseForm	has_changed		returns true if data differs from initial
forms	BaseForm	media		provide a description of all media required to render the widgets on this form
forms	BaseForm	is_multipart		returns true if the form needs to be multipart-encoded i e it has
forms	BaseForm	hidden_fields		returns a list of all the boundfield objects that are hidden fields
forms	BaseForm	visible_fields		returns a list of boundfield objects that aren't hidden fields
forms	BaseForm	get_initial_for_field	field field_name	return initial data for field on form use initial data from the form
forms	BoundField	__str__		renders this field as an html widget
forms	BoundField	subwidgets		most widgets yield a single subwidget but others like radioselect and checkboxselectmultiple produce one subwidget for each choice
forms	BoundField	errors		returns an errorlist for this field returns an empty errorlist
forms	BoundField	as_widget	widget attrs only_initial	renders the field by rendering the passed widget adding any html attributes passed as attrs
forms	BoundField	as_text	attrs	returns a string of html for representing this as an <input type="text">
forms	BoundField	as_textarea	attrs	returns a string of html for representing this as a <textarea>
forms	BoundField	as_hidden	attrs	returns a string of html for representing this as an <input type="hidden">
forms	BoundField	data		returns the data for this boundfield or none if it wasn't given
forms	BoundField	value		returns the value for this boundfield using the initial value if the form is not bound or the data otherwise
forms	BoundField	label_tag	contents attrs label_suffix	wraps the given contents in a <label>, if the field has an id attribute
forms	BoundField	css_classes	extra_classes	returns a string of space-separated css classes for this field
forms	BoundField	is_hidden		returns true if this boundfield's widget is hidden
forms	BoundField	auto_id		calculates and returns the id attribute for this boundfield if the associated form has specified auto_id
forms	BoundField	id_for_label		wrapper around the field widget's id_for_label method
forms		pretty_name	name	converts 'first_name' to 'first name'
forms		flatatt	attrs	convert a dictionary of attributes to a single string
forms		from_current_timezone	value	when time zone support is enabled convert naive datetimes entered in the current time zone to aware datetimes
forms		to_current_timezone	value	when time zone support is enabled convert aware datetimes to naive datetimes in the current time zone for display
forms		construct_instance	form instance fields exclude	constructs and returns a model instance from the bound form's cleaned_data, but does not save the returned instance to the
forms		model_to_dict	instance fields exclude	returns a dict containing the data in instance suitable for passing as a form's initial keyword argument
forms		fields_for_model	model fields exclude widgets	returns a ordereddict containing form fields for the given model
forms	BaseModelForm	_get_validation_exclusions		for backwards-compatibility several types of fields need to be excluded from model validation
forms	BaseModelForm	validate_unique		calls the instance's validate_unique() method and updates the form's validation errors if any were raised
forms	BaseModelForm	_save_m2m		save the many-to-many fields and generic relations for this form
forms	BaseModelForm	save	commit	save this form's self instance object if commit=true otherwise add
forms		modelform_factory	model form fields exclude	returns a modelform containing form fields for the given model
forms	BaseModelFormSet	initial_form_count		returns the number of forms that are required in this formset
forms	BaseModelFormSet	_get_to_python	field	if the field is a related field fetch the concrete field's (that is the ultimate pointed-to field's) to_python
forms	BaseModelFormSet	save_new	form commit	saves and returns a new model instance for the given form
forms	BaseModelFormSet	save_existing	form instance commit	saves and returns an existing model instance for the given form
forms	BaseModelFormSet	delete_existing	obj commit	deletes an existing model instance
forms	BaseModelFormSet	save	commit	saves model instances for every form adding and changing instances as necessary and returns the list of instances
forms	BaseModelFormSet	add_fields	form index	add a hidden field for the object's primary key
forms		modelformset_factory	model form formfield_callback formset	returns a formset class for the given django model class
forms		_get_foreign_key	parent_model model fk_name can_fail	finds and returns the foreignkey from model to parent if there is one (returns none if can_fail is true and no such field exists)
forms		inlineformset_factory	parent_model model form formset	returns an inlineformset for the given kwargs
forms	ModelChoiceField	get_limit_choices_to		returns limit_choices_to for this form field
forms	ModelChoiceField	label_from_instance	obj	this method is used to convert objects into strings it's used to generate the labels for the choices presented by this object
forms	ModelMultipleChoiceField	_check_values	value	given a list of possible pk values returns a queryset of the corresponding objects
forms	Field	clean	value	validates the given value and returns its "cleaned" value as an appropriate python object
forms	Field	bound_data	data initial	return the value that should be shown for this field on render of a bound form given the submitted post data for the field and the initial
forms	Field	widget_attrs	widget	given a widget instance (*not* a widget class), returns a dictionary of any html attributes that should be added to the widget based on this
forms	Field	has_changed	initial data	return true if data differs from initial
forms	Field	get_bound_field	form field_name	return a boundfield instance that will be used when accessing the form field in a template
forms	CharField	to_python	value	returns a unicode object
forms	IntegerField	to_python	value	validates that int() can be called on the input returns the result
forms	FloatField	to_python	value	validates that float() can be called on the input returns the result
forms	DecimalField	to_python	value	validates that the input is a decimal number returns a decimal
forms	DateField	to_python	value	validates that the input can be converted to a date returns a python
forms	TimeField	to_python	value	validates that the input can be converted to a time returns a python
forms	DateTimeField	to_python	value	validates that the input can be converted to a datetime returns a
forms	RegexField	__init__	regex max_length min_length	regex can be either a string or a compiled regular expression object
forms	ImageField	to_python	data	checks that the file-upload field data contains a valid image gif jpg png possibly others -- whatever the python imaging library supports
forms	BooleanField	to_python	value	returns a python boolean object
forms	NullBooleanField	to_python	value	explicitly checks for the string 'true' and 'false', which is what a hidden field will submit for true and false for 'true' and 'false',
forms	ChoiceField	to_python	value	returns a unicode object
forms	ChoiceField	validate	value	validates that the input is in self choices
forms	ChoiceField	valid_value	value	check to see if the provided value is a valid choice
forms	TypedChoiceField	_coerce	value	validate that the value can be coerced to the right type if not empty
forms	MultipleChoiceField	validate	value	validates that the input is a list or tuple
forms	TypedMultipleChoiceField	_coerce	value	validates that the values are in self choices and can be coerced to the
forms	ComboField	clean	value	validates the given value against all of self fields which is a
forms	MultiValueField	clean	value	validates every value in the given list a value is validated against
forms	MultiValueField	compress	data_list	returns a single value for the given list of values the values can be
forms	Media	absolute_path	path	given a relative or absolute path to a static asset return an absolute path
forms	Media	__getitem__	name	returns a media object that only contains media of the given type
forms	Widget	format_value	value	return a value as it should appear when rendered in a template
forms	Widget	render	name value attrs renderer	returns this widget rendered as html as a unicode string
forms	Widget	build_attrs	base_attrs extra_attrs	helper function for building an attribute dictionary
forms	Widget	value_from_datadict	data files name	given a dictionary of data and this widget's name returns the value of this widget
forms	Widget	id_for_label	id_	returns the html id attribute of this widget for use by a <label>, given the id of the field
forms	FileInput	format_value	value	file input never renders a value
forms	FileInput	value_from_datadict	data files name	file widgets take data from files not post
forms	ClearableFileInput	clear_checkbox_name	name	given the name of the file input return the name of the clear checkbox input
forms	ClearableFileInput	clear_checkbox_id	name	given the name of the clear checkbox input return the html id for it
forms	ClearableFileInput	is_initial	value	return whether value is considered to be initial value
forms	ClearableFileInput	format_value	value	return the file object if it has a defined url attribute
forms	CheckboxInput	format_value	value	only return the 'value' attribute if value isn't empty
forms	ChoiceWidget	subwidgets	name value attrs	yield all "subwidgets" of this widget used to enable iterating
forms	ChoiceWidget	options	name value attrs	yield a flat list of options for this widgets
forms	ChoiceWidget	optgroups	name value attrs	return a list of optgroups for this widget
forms	ChoiceWidget	id_for_label	id_ index	use an incremented id for each option where the main widget references the zero index
forms	ChoiceWidget	format_value	value	return selected values as a list
forms	Select	_choice_has_empty_value	choice	return true if the choice's value is empty string or none
forms	Select	use_required_attribute	initial	don't render 'required' if the first <option> has a value as that's invalid html
forms	CheckboxSelectMultiple	id_for_label	id_ index	" don't include for="field_0" in <label> because clicking such a label
forms	MultiWidget	decompress	value	returns a list of decompressed values for the given compressed value
forms	MultiWidget	_get_media		media for a multiwidget is the combination of all media of the subwidgets
forms	SelectDateWidget	format_value	value	return a dict containing the year month and day of the current value
forms	BaseFormSet	__iter__		yields the forms in the order they should be rendered
forms	BaseFormSet	__getitem__	index	returns the form at the given index based on the rendering order
forms	BaseFormSet	__bool__		all formsets have a management form which is not included in the length
forms	BaseFormSet	management_form		returns the managementform instance for this formset
forms	BaseFormSet	total_form_count		returns the total number of forms in this formset
forms	BaseFormSet	initial_form_count		returns the number of forms that are required in this formset
forms	BaseFormSet	forms		instantiate forms at first property access
forms	BaseFormSet	get_form_kwargs	index	return additional keyword arguments for each individual formset form
forms	BaseFormSet	_construct_form	i	instantiates and returns the i-th form instance in a formset
forms	BaseFormSet	initial_forms		return a list of all the initial forms in this formset
forms	BaseFormSet	extra_forms		return a list of all the extra forms in this formset
forms	BaseFormSet	cleaned_data		returns a list of form cleaned_data dicts for every form in self forms
forms	BaseFormSet	deleted_forms		returns a list of forms that have been marked for deletion
forms	BaseFormSet	ordered_forms		returns a list of form in the order specified by the incoming data
forms	BaseFormSet	non_form_errors		returns an errorlist of errors that aren't associated with a particular form -- i
forms	BaseFormSet	errors		returns a list of form errors for every form in self forms
forms	BaseFormSet	total_error_count		returns the number of errors across all forms in the formset
forms	BaseFormSet	_should_delete_form	form	returns whether or not the form was marked for deletion
forms	BaseFormSet	is_valid		returns true if every form in self forms is valid
forms	BaseFormSet	full_clean		cleans all of self data and populates self _errors and
forms	BaseFormSet	clean		hook for doing any extra formset-wide cleaning after form clean() has
forms	BaseFormSet	has_changed		returns true if data in any form differs from initial
forms	BaseFormSet	add_fields	form index	a hook for adding extra fields on to each form instance
forms	BaseFormSet	is_multipart		returns true if the formset needs to be multipart i e it
forms	BaseFormSet	as_table		returns this formset rendered as html <tr>s -- excluding the <table></table>
forms	BaseFormSet	as_p		returns this formset rendered as html <p>s
forms	BaseFormSet	as_ul		returns this formset rendered as html <li>s
forms		formset_factory	form formset extra can_order	return a formset for the given form class
forms		all_valid	formsets	returns true if every formset in formsets is valid
db		get_connection	using	get a database connection by name or the default database connection if no name is provided
db		get_autocommit	using	get the autocommit status of the connection
db		set_autocommit	autocommit using	set the autocommit status of the connection
db		commit	using	commits a transaction
db		rollback	using	rolls back a transaction
db		savepoint	using	creates a savepoint if supported and required by the backend inside the current transaction
db		savepoint_rollback	sid using	rolls back the most recent savepoint if one exists does nothing if
db		savepoint_commit	sid using	commits the most recent savepoint if one exists does nothing if
db		clean_savepoints	using	resets the counter used to generate unique savepoint ids in this thread
db		get_rollback	using	gets the "needs rollback" flag -- for *advanced use* only
db		set_rollback	rollback using	sets or unsets the "needs rollback" flag -- for *advanced use* only
db		on_commit	func using	register func to be called when the current transaction is committed
db	DatabaseErrorWrapper	__init__	wrapper	wrapper is a database wrapper
db		load_backend	backend_name	return a database backend's "base" module given a fully qualified database backend name or raise an error if it doesn't exist
db	ConnectionHandler	__init__	databases	databases is an optional dictionary of database definitions (structured like settings
db	ConnectionHandler	ensure_defaults	alias	puts the defaults into the settings dictionary for a given connection where no settings is provided
db	ConnectionHandler	prepare_test_settings	alias	makes sure the test settings are available in the 'test' sub-dictionary
db	ConnectionRouter	__init__	routers	if routers is not specified will default to settings database_routers
db	ConnectionRouter	get_migratable_models	app_config db include_auto_created	return app models allowed to be synchronized on provided db
db.backends		truncate_name	name length hash_len	shorten a string to a repeatable mangled version with the given length
db.backends		format_number	value max_digits decimal_places	formats a number into a string with the requisite number of digits and decimal places
db.backends		strip_quotes	table_name	strip quotes off of quoted table names to make them safe for use in index names sequence names etc
db.backends.sqlite3	DatabaseFeatures	supports_stddev		confirm support for stddev and related stats functions sqlite supports stddev as an extension package so
db.backends.sqlite3	DatabaseSchemaEditor	_remake_table	model create_field delete_field alter_field	shortcut to transform a model from old_model into new_model the essential steps are
db.backends.sqlite3	DatabaseSchemaEditor	add_field	model field	creates a field on a model
db.backends.sqlite3	DatabaseSchemaEditor	remove_field	model field	removes a field from a model usually involves deleting a column
db.backends.sqlite3	DatabaseSchemaEditor	_alter_field	model old_field new_field old_type	actually perform a "physical" non-manytomany field update
db.backends.sqlite3	DatabaseSchemaEditor	_alter_many_to_many	model old_field new_field strict	alters m2ms to repoint their to= endpoints
db.backends.sqlite3	DatabaseOperations	bulk_batch_size	fields objs	sqlite has a compile-time default (sqlite_limit_variable_number) of 999 variables per query
db.backends.sqlite3	DatabaseOperations	format_for_duration_arithmetic	sql	do nothing here we will handle it in the custom function
db.backends.sqlite3	DatabaseOperations	_quote_params_for_last_executed_query	params	only for last_executed_query! don't use this to execute sql queries!
db.backends.sqlite3		get_field_size	name	extract the size number from a "varchar 11 " type name
db.backends.sqlite3	DatabaseIntrospection	get_table_list	cursor	returns a list of table and view names in the current database
db.backends.sqlite3	DatabaseIntrospection	get_table_description	cursor table_name	returns a description of the table with the db-api cursor description interface
db.backends.sqlite3	DatabaseIntrospection	column_name_converter	name	sqlite will in some cases e g when returning columns from views and
db.backends.sqlite3	DatabaseIntrospection	get_relations	cursor table_name	return a dictionary of {field_name (field_name_other_table other_table)} representing all relationships to the given table
db.backends.sqlite3	DatabaseIntrospection	get_key_columns	cursor table_name	returns a list of (column_name referenced_table_name referenced_column_name) for all key columns in given table
db.backends.sqlite3	DatabaseIntrospection	get_primary_key_column	cursor table_name	get the column name of the primary key for the given table
db.backends.sqlite3	DatabaseIntrospection	get_constraints	cursor table_name	retrieves any constraints or keys unique pk fk check index across one or more columns
db.backends.sqlite3		decoder	conv_func	the python sqlite3 interface returns always byte strings
db.backends.sqlite3	DatabaseWrapper	check_constraints	table_names	checks each table name in table_names for rows with invalid foreign key references
db.backends.sqlite3	DatabaseWrapper	_start_transaction_under_autocommit		start a transaction explicitly in autocommit mode
db.backends.sqlite3		_sqlite_format_dtdelta	conn lhs rhs	lhs and rhs can be either
db.backends.sqlite3	DatabaseCreation	test_db_signature		returns a tuple that uniquely identifies a test database
db.backends.oracle	DatabaseFeatures	introspected_boolean_field_type	field created_separately	some versions of oracle -- we've seen this on 11 2 0 1 and suspect
db.backends.oracle	DatabaseSchemaEditor	_alter_field_type_workaround	model old_field new_field	oracle refuses to change from some type to other type
db.backends.oracle	DatabaseSchemaEditor	normalize_name	name	get the properly shortened and uppercased identifier as returned by quote_name(), but without the actual quotes
db.backends.oracle	DatabaseSchemaEditor	_generate_temp_name	for_name	generates temporary names for workarounds that need temp columns
db.backends.oracle	DatabaseOperations	date_interval_sql	timedelta	numtodsinterval converts number to interval day to second literal
db.backends.oracle	DatabaseOperations	adapt_datefield_value	value	transform a date value to an object compatible with what is expected by the backend driver for date columns
db.backends.oracle	DatabaseOperations	adapt_datetimefield_value	value	transform a datetime value to an object compatible with what is expected by the backend driver for datetime columns
db.backends.oracle	DatabaseIntrospection	get_table_list	cursor	returns a list of table and view names in the current database
db.backends.oracle	DatabaseIntrospection	get_table_description	cursor table_name	returns a description of the table with the db-api cursor description interface
db.backends.oracle	DatabaseIntrospection	table_name_converter	name	table name comparison is case insensitive under oracle
db.backends.oracle	DatabaseIntrospection	_name_to_index	cursor table_name	returns a dictionary of {field_name field_index} for the given table
db.backends.oracle	DatabaseIntrospection	get_relations	cursor table_name	returns a dictionary of {field_name (field_name_other_table other_table)} representing all relationships to the given table
db.backends.oracle	DatabaseIntrospection	get_constraints	cursor table_name	retrieves any constraints or keys unique pk fk check index across one or more columns
db.backends.oracle	SQLCompiler	as_sql	with_limits with_col_aliases	creates the sql for this query returns the sql string and list
db.backends.oracle	DatabaseWrapper	check_constraints	table_names	to check constraints we set constraints to immediate then when we're done we must ensure they
db.backends.oracle		to_unicode	s	convert strings to unicode objects and return all other data types unchanged
db.backends.oracle	DatabaseCreation	_maindb_connection		this is analogous to other backends' _nodb_connection property which allows access to an "administrative" connection which can
db.backends.oracle	DatabaseCreation	_switch_to_test_user	parameters	oracle doesn't have the concept of separate databases under the same user
db.backends.oracle	DatabaseCreation	set_as_test_mirror	primary_settings_dict	set this database up to be used in testing as a mirror of a primary database
db.backends.oracle	DatabaseCreation	_destroy_test_db	test_database_name verbosity	destroy a test database prompting the user for confirmation if the database already exists
db.backends.oracle	DatabaseCreation	_execute_allow_fail_statements	cursor statements parameters verbosity	execute statements which are allowed to fail silently if the oracle error code given by acceptable_ora_err is raised
db.backends.oracle	DatabaseCreation	_test_settings_get	key default prefixed	return a value from the test settings dict
db.backends.oracle	DatabaseCreation	_get_test_db_name		we need to return the 'production' db name to get the test db creation machinery to work
db.backends.postgresql	DatabaseSchemaEditor	_create_like_index_sql	model field	return the statement to create an index with varchar operator pattern when the column type is 'varchar' or 'text', otherwise return none
db.backends.postgresql	DatabaseSchemaEditor	_alter_column_type_sql	table old_field new_field new_type	makes alter type with serial make sense
db.backends.postgresql	DatabaseOperations	fetch_returned_insert_ids	cursor	given a cursor object that has just performed an insert returning
db.backends.postgresql	DatabaseOperations	max_name_length		returns the maximum length of an identifier
db.backends.postgresql	DatabaseIntrospection	get_table_list	cursor	returns a list of table and view names in the current database
db.backends.postgresql	DatabaseIntrospection	get_table_description	cursor table_name	returns a description of the table with the db-api cursor description interface
db.backends.postgresql	DatabaseIntrospection	get_relations	cursor table_name	returns a dictionary of {field_name (field_name_other_table other_table)} representing all relationships to the given table
db.backends.postgresql	DatabaseIntrospection	get_constraints	cursor table_name	retrieve any constraints or keys unique pk fk check index across one or more columns
db.backends.postgresql	DatabaseWrapper	check_constraints	table_names	to check constraints we set constraints to immediate then when we're done we must ensure they
db.backends.postgresql		_escape_pgpass	txt	escape a fragment of a postgresql pgpass file
db.backends.postgresql		_parse_version	text	internal parsing method factored out for testing purposes
db.backends.postgresql		get_version	connection	returns an integer representing the major minor and revision number of the server
db.backends.base	BaseDatabaseFeatures	supports_transactions		confirm support for transactions
db.backends.base	BaseDatabaseFeatures	supports_stddev		confirm support for stddev and related stats functions
db.backends.base	BaseDatabaseFeatures	introspected_boolean_field_type	field created_separately	what is the type returned when the backend introspects a booleanfield? the optional arguments may be used to give further details of the field to be
db.backends.base	BaseDatabaseSchemaEditor	execute	sql params	executes the given sql statement with optional parameters
db.backends.base	BaseDatabaseSchemaEditor	_digest	cls	generates a 32-bit digest of a set of arguments that can be used to shorten identifying names
db.backends.base	BaseDatabaseSchemaEditor	column_sql	model field include_default	takes a field and returns its column definition
db.backends.base	BaseDatabaseSchemaEditor	skip_default	field	some backends don't accept default values for certain columns types (i
db.backends.base	BaseDatabaseSchemaEditor	prepare_default	value	only used for backends which have requires_literal_defaults feature
db.backends.base	BaseDatabaseSchemaEditor	effective_default	field	returns a field's effective database default value
db.backends.base	BaseDatabaseSchemaEditor	quote_value	value	returns a quoted version of the value so it's safe to use in an sql string
db.backends.base	BaseDatabaseSchemaEditor	create_model	model	takes a model and creates a table for it in the database
db.backends.base	BaseDatabaseSchemaEditor	delete_model	model	deletes a model from the database
db.backends.base	BaseDatabaseSchemaEditor	add_index	model index	add an index on a model
db.backends.base	BaseDatabaseSchemaEditor	remove_index	model index	remove an index from a model
db.backends.base	BaseDatabaseSchemaEditor	alter_unique_together	model old_unique_together new_unique_together	deals with a model changing its unique_together
db.backends.base	BaseDatabaseSchemaEditor	alter_index_together	model old_index_together new_index_together	deals with a model changing its index_together
db.backends.base	BaseDatabaseSchemaEditor	alter_db_table	model old_db_table new_db_table	renames the table a model points to
db.backends.base	BaseDatabaseSchemaEditor	alter_db_tablespace	model old_db_tablespace new_db_tablespace	moves a model's table between tablespaces
db.backends.base	BaseDatabaseSchemaEditor	add_field	model field	creates a field on a model
db.backends.base	BaseDatabaseSchemaEditor	remove_field	model field	removes a field from a model usually involves deleting a column
db.backends.base	BaseDatabaseSchemaEditor	alter_field	model old_field new_field strict	allows a field's type uniqueness nullability default column constraints etc
db.backends.base	BaseDatabaseSchemaEditor	_alter_field	model old_field new_field old_type	actually perform a "physical" non-manytomany field update
db.backends.base	BaseDatabaseSchemaEditor	_alter_column_type_sql	table old_field new_field new_type	hook to specialize column type alteration for different backends for cases when a creation type is different to an alteration type
db.backends.base	BaseDatabaseSchemaEditor	_alter_many_to_many	model old_field new_field strict	alters m2ms to repoint their to= endpoints
db.backends.base	BaseDatabaseSchemaEditor	_create_index_name	model column_names suffix	generates a unique name for an index/unique constraint
db.backends.base	BaseDatabaseSchemaEditor	_create_index_sql	model fields suffix sql	return the sql statement to create the index for one or several fields
db.backends.base	BaseDatabaseSchemaEditor	_model_indexes_sql	model	return all index sql statements (field indexes index_together meta
db.backends.base	BaseDatabaseSchemaEditor	_field_indexes_sql	model field	return a list of all index sql statements for the specified field
db.backends.base	BaseDatabaseSchemaEditor	_constraint_names	model column_names unique primary_key	returns all constraint names matching the columns and conditions
db.backends.base	BaseDatabaseOperations	autoinc_sql	table column	returns any sql needed to support auto-incrementing primary keys or none if no sql is necessary
db.backends.base	BaseDatabaseOperations	bulk_batch_size	fields objs	returns the maximum allowed batch size for the backend the fields
db.backends.base	BaseDatabaseOperations	cache_key_culling_sql		returns an sql query that retrieves the first cache key greater than the n smallest
db.backends.base	BaseDatabaseOperations	unification_cast_sql	output_field	given a field instance returns the sql necessary to cast the result of a union to that type
db.backends.base	BaseDatabaseOperations	date_extract_sql	lookup_type field_name	given a lookup_type of 'year', 'month' or 'day', returns the sql that extracts a value from the given date field field_name
db.backends.base	BaseDatabaseOperations	date_interval_sql	timedelta	implements the date interval functionality for expressions
db.backends.base	BaseDatabaseOperations	date_trunc_sql	lookup_type field_name	given a lookup_type of 'year', 'month' or 'day', returns the sql that truncates the given date field field_name to a date object with only
db.backends.base	BaseDatabaseOperations	datetime_cast_date_sql	field_name tzname	returns the sql necessary to cast a datetime value to date value
db.backends.base	BaseDatabaseOperations	datetime_cast_time_sql	field_name tzname	returns the sql necessary to cast a datetime value to time value
db.backends.base	BaseDatabaseOperations	datetime_extract_sql	lookup_type field_name tzname	given a lookup_type of 'year', 'month', 'day', 'hour', 'minute' or 'second', returns the sql that extracts a value from the given
db.backends.base	BaseDatabaseOperations	datetime_trunc_sql	lookup_type field_name tzname	given a lookup_type of 'year', 'month', 'day', 'hour', 'minute' or 'second', returns the sql that truncates the given datetime field
db.backends.base	BaseDatabaseOperations	time_trunc_sql	lookup_type field_name	given a lookup_type of 'hour', 'minute' or 'second', returns the sql that truncates the given time field field_name to a time object with
db.backends.base	BaseDatabaseOperations	time_extract_sql	lookup_type field_name	given a lookup_type of 'hour', 'minute' or 'second', returns the sql that extracts a value from the given time field field_name
db.backends.base	BaseDatabaseOperations	deferrable_sql		returns the sql necessary to make a constraint "initially deferred" during a create table statement
db.backends.base	BaseDatabaseOperations	distinct_sql	fields	returns an sql distinct clause which removes duplicate rows from the result set
db.backends.base	BaseDatabaseOperations	fetch_returned_insert_id	cursor	given a cursor object that has just performed an insert returning
db.backends.base	BaseDatabaseOperations	field_cast_sql	db_type internal_type	given a column type (e g 'blob', 'varchar'), and an internal type
db.backends.base	BaseDatabaseOperations	force_no_ordering		returns a list used in the "order by" clause to force no ordering at all
db.backends.base	BaseDatabaseOperations	for_update_sql	nowait skip_locked	returns the for update sql clause to lock rows for an update operation
db.backends.base	BaseDatabaseOperations	fulltext_search_sql	field_name	returns the sql where clause to use in order to perform a full-text search of the given field_name
db.backends.base	BaseDatabaseOperations	last_executed_query	cursor sql params	returns a string of the query last executed by the given cursor with placeholders replaced with actual values
db.backends.base	BaseDatabaseOperations	last_insert_id	cursor table_name pk_name	given a cursor object that has just performed an insert statement into a table that has an auto-incrementing id returns the newly created id
db.backends.base	BaseDatabaseOperations	lookup_cast	lookup_type internal_type	returns the string to use in a query when performing lookups ("contains", "like", etc
db.backends.base	BaseDatabaseOperations	max_in_list_size		returns the maximum number of items that can be passed in a single 'in' list condition or none if the backend does not impose a limit
db.backends.base	BaseDatabaseOperations	max_name_length		returns the maximum length of table and column names or none if there is no limit
db.backends.base	BaseDatabaseOperations	no_limit_value		returns the value to use for the limit when we are wanting "limit infinity"
db.backends.base	BaseDatabaseOperations	pk_default_value		returns the value to use during an insert statement to specify that the field should use its default value
db.backends.base	BaseDatabaseOperations	prepare_sql_script	sql	takes an sql script that may contain multiple lines and returns a list of statements to feed to successive cursor
db.backends.base	BaseDatabaseOperations	process_clob	value	returns the value of a clob column for backends that return a locator object that requires additional processing
db.backends.base	BaseDatabaseOperations	return_insert_id		for backends that support returning the last insert id as part of an insert query this method returns the sql and params to
db.backends.base	BaseDatabaseOperations	compiler	compiler_name	returns the sqlcompiler class corresponding to the given name in the namespace corresponding to the compiler_module attribute
db.backends.base	BaseDatabaseOperations	quote_name	name	returns a quoted version of the given table index or column name does
db.backends.base	BaseDatabaseOperations	random_function_sql		returns an sql expression that returns a random value
db.backends.base	BaseDatabaseOperations	regex_lookup	lookup_type	returns the string to use in a query when performing regular expression lookups (using "regex" or "iregex")
db.backends.base	BaseDatabaseOperations	savepoint_create_sql	sid	returns the sql for starting a new savepoint only required if the
db.backends.base	BaseDatabaseOperations	savepoint_commit_sql	sid	returns the sql for committing the given savepoint
db.backends.base	BaseDatabaseOperations	savepoint_rollback_sql	sid	returns the sql for rolling back the given savepoint
db.backends.base	BaseDatabaseOperations	set_time_zone_sql		returns the sql that will set the connection's time zone
db.backends.base	BaseDatabaseOperations	sql_flush	style tables sequences allow_cascade	returns a list of sql statements required to remove all data from the given database tables (without actually removing the tables
db.backends.base	BaseDatabaseOperations	sequence_reset_by_name_sql	style sequences	returns a list of the sql statements required to reset sequences
db.backends.base	BaseDatabaseOperations	sequence_reset_sql	style model_list	returns a list of the sql statements required to reset sequences for the given models
db.backends.base	BaseDatabaseOperations	start_transaction_sql		returns the sql statement required to start a transaction
db.backends.base	BaseDatabaseOperations	end_transaction_sql	success	returns the sql statement required to end a transaction
db.backends.base	BaseDatabaseOperations	tablespace_sql	tablespace inline	returns the sql that will be used in a query to define the tablespace
db.backends.base	BaseDatabaseOperations	prep_for_like_query	x	prepares a value for use in a like query
db.backends.base	BaseDatabaseOperations	validate_autopk_value	value	certain backends do not accept some values for "serial" fields for example zero in mysql
db.backends.base	BaseDatabaseOperations	adapt_unknown_value	value	transforms a value to something compatible with the backend driver
db.backends.base	BaseDatabaseOperations	adapt_datefield_value	value	transforms a date value to an object compatible with what is expected by the backend driver for date columns
db.backends.base	BaseDatabaseOperations	adapt_datetimefield_value	value	transforms a datetime value to an object compatible with what is expected by the backend driver for datetime columns
db.backends.base	BaseDatabaseOperations	adapt_timefield_value	value	transforms a time value to an object compatible with what is expected by the backend driver for time columns
db.backends.base	BaseDatabaseOperations	adapt_decimalfield_value	value max_digits decimal_places	transforms a decimal decimal value to an object compatible with what is
db.backends.base	BaseDatabaseOperations	adapt_ipaddressfield_value	value	transforms a string representation of an ip address into the expected type for the backend driver
db.backends.base	BaseDatabaseOperations	year_lookup_bounds_for_date_field	value	returns a two-elements list with the lower and upper bound to be used with a between operator to query a datefield value using a year
db.backends.base	BaseDatabaseOperations	year_lookup_bounds_for_datetime_field	value	returns a two-elements list with the lower and upper bound to be used with a between operator to query a datetimefield value using a year
db.backends.base	BaseDatabaseOperations	get_db_converters	expression	get a list of functions needed to convert field data
db.backends.base	BaseDatabaseOperations	check_expression_support	expression	check that the backend supports the provided expression
db.backends.base	BaseDatabaseOperations	combine_expression	connector sub_expressions	combine a list of subexpressions into a single expression using the provided connecting operator
db.backends.base	BaseDatabaseOperations	binary_placeholder_sql	value	some backends require special syntax to insert binary content (mysql for example uses '_binary %s')
db.backends.base	BaseDatabaseOperations	modify_insert_params	placeholder params	allow modification of insert parameters needed for oracle spatial
db.backends.base	BaseDatabaseOperations	integer_field_range	internal_type	given an integer field internal type (e g 'positiveintegerfield'),
db.backends.base	BaseDatabaseIntrospection	get_field_type	data_type description	hook for a database backend to use the cursor description to match a django field type to a database column
db.backends.base	BaseDatabaseIntrospection	table_name_converter	name	apply a conversion to the name for the purposes of comparison
db.backends.base	BaseDatabaseIntrospection	column_name_converter	name	apply a conversion to the column name for the purposes of comparison
db.backends.base	BaseDatabaseIntrospection	table_names	cursor include_views	returns a list of names of all tables that exist in the database
db.backends.base	BaseDatabaseIntrospection	get_table_list	cursor	returns an unsorted list of tableinfo named tuples of all tables and views that exist in the database
db.backends.base	BaseDatabaseIntrospection	django_table_names	only_existing include_views	returns a list of all table names that have associated django models and are in installed_apps
db.backends.base	BaseDatabaseIntrospection	installed_models	tables	returns a set of all models represented by the provided list of table names
db.backends.base	BaseDatabaseIntrospection	sequence_list		returns a list of information about all db sequences for all models in all apps
db.backends.base	BaseDatabaseIntrospection	get_key_columns	cursor table_name	backends can override this to return a list of (column_name referenced_table_name referenced_column_name) for all key columns in given table
db.backends.base	BaseDatabaseIntrospection	get_primary_key_column	cursor table_name	returns the name of the primary key column for the given table
db.backends.base	BaseDatabaseIntrospection	get_indexes	cursor table_name	deprecated in django 1 11 use get_constraints instead
db.backends.base	BaseDatabaseIntrospection	get_constraints	cursor table_name	retrieves any constraints or keys unique pk fk check index across one or more columns
db.backends.base	BaseDatabaseWrapper	ensure_timezone		ensure the connection's timezone is set to self timezone_name and
db.backends.base	BaseDatabaseWrapper	timezone		time zone for datetimes stored as naive values in the database
db.backends.base	BaseDatabaseWrapper	timezone_name		name of the time zone of the database connection
db.backends.base	BaseDatabaseWrapper	get_connection_params		returns a dict of parameters suitable for get_new_connection
db.backends.base	BaseDatabaseWrapper	get_new_connection	conn_params	opens a connection to the database
db.backends.base	BaseDatabaseWrapper	init_connection_state		initializes the database connection settings
db.backends.base	BaseDatabaseWrapper	create_cursor	name	creates a cursor assumes that a connection is established
db.backends.base	BaseDatabaseWrapper	connect		connects to the database assumes that the connection is closed
db.backends.base	BaseDatabaseWrapper	ensure_connection		guarantees that a connection to the database is established
db.backends.base	BaseDatabaseWrapper	_prepare_cursor	cursor	validate the connection is usable and perform database cursor wrapping
db.backends.base	BaseDatabaseWrapper	cursor		creates a cursor opening a connection if necessary
db.backends.base	BaseDatabaseWrapper	commit		commits a transaction and resets the dirty flag
db.backends.base	BaseDatabaseWrapper	rollback		rolls back a transaction and resets the dirty flag
db.backends.base	BaseDatabaseWrapper	close		closes the connection to the database
db.backends.base	BaseDatabaseWrapper	savepoint		creates a savepoint inside the current transaction returns an
db.backends.base	BaseDatabaseWrapper	savepoint_rollback	sid	rolls back to a savepoint does nothing if savepoints are not supported
db.backends.base	BaseDatabaseWrapper	savepoint_commit	sid	releases a savepoint does nothing if savepoints are not supported
db.backends.base	BaseDatabaseWrapper	clean_savepoints		resets the counter used to generate unique savepoint ids in this thread
db.backends.base	BaseDatabaseWrapper	_set_autocommit	autocommit	backend-specific implementation to enable or disable autocommit
db.backends.base	BaseDatabaseWrapper	get_autocommit		check the autocommit state
db.backends.base	BaseDatabaseWrapper	set_autocommit	autocommit force_begin_transaction_with_broken_autocommit	enable or disable autocommit
db.backends.base	BaseDatabaseWrapper	get_rollback		get the "needs rollback" flag -- for *advanced use* only
db.backends.base	BaseDatabaseWrapper	set_rollback	rollback	set or unset the "needs rollback" flag -- for *advanced use* only
db.backends.base	BaseDatabaseWrapper	validate_no_atomic_block		raise an error if an atomic block is active
db.backends.base	BaseDatabaseWrapper	constraint_checks_disabled		context manager that disables foreign key constraint checking
db.backends.base	BaseDatabaseWrapper	disable_constraint_checking		backends can implement as needed to temporarily disable foreign key constraint checking
db.backends.base	BaseDatabaseWrapper	enable_constraint_checking		backends can implement as needed to re-enable foreign key constraint checking
db.backends.base	BaseDatabaseWrapper	check_constraints	table_names	backends can override this method if they can apply constraint checking (e
db.backends.base	BaseDatabaseWrapper	is_usable		tests if the database connection is usable
db.backends.base	BaseDatabaseWrapper	close_if_unusable_or_obsolete		closes the current connection if unrecoverable errors have occurred or if it outlived its maximum age
db.backends.base	BaseDatabaseWrapper	validate_thread_sharing		validates that the connection isn't accessed by another thread than the one which originally created it unless the connection was explicitly
db.backends.base	BaseDatabaseWrapper	prepare_database		hook to do any database check or preparation generally called before migrating a project or an app
db.backends.base	BaseDatabaseWrapper	wrap_database_errors		context manager and decorator that re-throws backend-specific database exceptions using django's common wrappers
db.backends.base	BaseDatabaseWrapper	chunked_cursor		return a cursor that tries to avoid caching in the database if supported by the database otherwise return a regular cursor
db.backends.base	BaseDatabaseWrapper	make_debug_cursor	cursor	creates a cursor that logs all queries in self queries_log
db.backends.base	BaseDatabaseWrapper	make_cursor	cursor	creates a cursor without debug logging
db.backends.base	BaseDatabaseWrapper	temporary_connection		context manager that ensures that a connection is established and if it opened one closes it to avoid leaving a dangling connection
db.backends.base	BaseDatabaseWrapper	_nodb_connection		return an alternative connection to be used when there is no need to access the main database specifically for test db creation/deletion
db.backends.base	BaseDatabaseWrapper	_start_transaction_under_autocommit		only required when autocommits_when_autocommit_is_off = true
db.backends.base	BaseDatabaseWrapper	schema_editor		returns a new instance of this backend's schemaeditor
db.backends.base	BaseDatabaseWrapper	copy	alias allow_thread_sharing	return a copy of this connection
db.backends.base	BaseDatabaseCreation	_nodb_connection		used to be defined here now moved to databasewrapper
db.backends.base	BaseDatabaseCreation	create_test_db	verbosity autoclobber serialize keepdb	creates a test database prompting the user for confirmation if the database already exists
db.backends.base	BaseDatabaseCreation	set_as_test_mirror	primary_settings_dict	set this database up to be used in testing as a mirror of a primary database
db.backends.base	BaseDatabaseCreation	serialize_db_to_string		serializes all data in the database into a json string
db.backends.base	BaseDatabaseCreation	deserialize_db_from_string	data	reloads the database with data from a string generated by the serialize_db_to_string method
db.backends.base	BaseDatabaseCreation	_get_database_display_str	verbosity database_name	return display string for a database for use in various actions
db.backends.base	BaseDatabaseCreation	_get_test_db_name		internal implementation - returns the name of the test db that will be created
db.backends.base	BaseDatabaseCreation	_create_test_db	verbosity autoclobber keepdb	internal implementation - creates the test db tables
db.backends.base	BaseDatabaseCreation	clone_test_db	number verbosity autoclobber keepdb	clone a test database
db.backends.base	BaseDatabaseCreation	get_test_db_clone_settings	number	return a modified connection settings dict for the n-th clone of a db
db.backends.base	BaseDatabaseCreation	_clone_test_db	number verbosity keepdb	internal implementation - duplicate the test db tables
db.backends.base	BaseDatabaseCreation	destroy_test_db	old_database_name verbosity keepdb number	destroy a test database prompting the user for confirmation if the database already exists
db.backends.base	BaseDatabaseCreation	_destroy_test_db	test_database_name verbosity	internal implementation - remove the test db tables
db.backends.base	BaseDatabaseCreation	sql_table_creation_suffix		sql to append to the end of the test table creation statements
db.backends.base	BaseDatabaseCreation	test_db_signature		returns a tuple with elements of self connection settings_dict (a
db.backends.mysql	DatabaseFeatures	_mysql_storage_engine		internal method used in django tests don't rely on this from your code
db.backends.mysql	DatabaseFeatures	can_introspect_foreign_keys		confirm support for introspected foreign keys
db.backends.mysql	DatabaseFeatures	supports_transactions		all storage engines except myisam support transactions
db.backends.mysql	DatabaseSchemaEditor	skip_default	field	mysql doesn't accept default values for some data types and implicitly treats these columns as nullable
db.backends.mysql	DatabaseSchemaEditor	_delete_composed_index	model fields	mysql can remove an implicit fk index on a field when that field is covered by another index like a unique_together
db.backends.mysql	DatabaseSchemaEditor	_set_field_new_type_null_status	field new_type	keep the null property of the old field if it has changed it will be
db.backends.mysql	DatabaseOperations	force_no_ordering		"order by null" prevents mysql from implicitly ordering by grouped columns
db.backends.mysql	DatabaseIntrospection	get_table_list	cursor	returns a list of table and view names in the current database
db.backends.mysql	DatabaseIntrospection	get_table_description	cursor table_name	returns a description of the table with the db-api cursor description interface "
db.backends.mysql	DatabaseIntrospection	get_relations	cursor table_name	returns a dictionary of {field_name (field_name_other_table other_table)} representing all relationships to the given table
db.backends.mysql	DatabaseIntrospection	get_key_columns	cursor table_name	returns a list of (column_name referenced_table_name referenced_column_name) for all key columns in given table
db.backends.mysql	DatabaseIntrospection	get_storage_engine	cursor table_name	retrieves the storage engine for a given table returns the default
db.backends.mysql	DatabaseIntrospection	get_constraints	cursor table_name	retrieves any constraints or keys unique pk fk check index across one or more columns
db.backends.mysql	DatabaseWrapper	disable_constraint_checking		disables foreign key checks primarily for use in adding rows with forward references always returns true
db.backends.mysql	DatabaseWrapper	enable_constraint_checking		re-enable foreign key checks after they have been disabled
db.backends.mysql	DatabaseWrapper	check_constraints	table_names	checks each table name in table_names for rows with invalid foreign key references
db.backends.mysql	DatabaseValidation	check_field	field	mysql has the following field length restriction no character varchar fields can have a length exceeding 255
db.models	BaseExpression	as_sql	compiler connection	responsible for returning a (sql [params]) tuple to be included in the current query
db.models	BaseExpression	resolve_expression	query allow_joins reuse summarize	provides the chance to do any preprocessing or validation before being added to the query
db.models	BaseExpression	_prepare	field	hook used by lookup get_prep_lookup() to do custom preparation
db.models	BaseExpression	output_field		returns the output type of this expressions
db.models	BaseExpression	_output_field_or_none		returns the output field of this expression or none if no output type can be resolved
db.models	BaseExpression	_resolve_output_field		attempts to infer the output type of the expression if the output
db.models	BaseExpression	convert_value	value expression connection context	expressions provide their own converters because users have the option of manually specifying the output_field which may be a different type
db.models	BaseExpression	get_source_fields		returns the underlying field types used by this aggregate
db.models	BaseExpression	flatten		recursively yield this expression and all subexpressions in depth-first order
db.models	Value	__init__	value output_field	arguments * value the value this expression represents
db.models		subclass_exception	name parents module attached_to	create exception subclass used by modelbase below
db.models	ModelBase	_prepare	cls	creates some methods once self _meta has been populated
db.models	Model	get_deferred_fields		returns a set containing names of deferred fields for this instance
db.models	Model	refresh_from_db	using fields	reloads field values from the database
db.models	Model	serializable_value	field_name	returns the value of the field name for this instance if the field is
db.models	Model	save	force_insert force_update using update_fields	saves the current instance override this in a subclass if you want to
db.models	Model	save_base	raw force_insert force_update using	handles the parts of saving which should be done only once per save yet need to be done in raw saves too
db.models	Model	_save_parents	cls using update_fields	saves all the parents of cls using values from self
db.models	Model	_save_table	raw cls force_insert force_update	does the heavy-lifting involved in saving updates or inserts the data
db.models	Model	_do_update	base_qs using pk_val values	this method will try to update the model if the model was updated (in
db.models	Model	_do_insert	manager using fields update_pk	do an insert if update_pk is defined then this method should return
db.models	Model	clean		hook for doing any extra model-wide validation after clean() has been called on every field by self
db.models	Model	validate_unique	exclude	checks unique constraints on the model and raises validationerror if any failed
db.models	Model	_get_unique_checks	exclude	gather a list of checks to perform since validate_unique could be
db.models	Model	full_clean	exclude validate_unique	calls clean_fields clean and validate_unique on the model and raises a validationerror for any errors that occurred
db.models	Model	clean_fields	exclude	cleans all fields and raises a validationerror containing a dict of all validation errors if any occur
db.models	Model	_check_swappable	cls	check if the swapped model exists
db.models	Model	_check_managers	cls	perform all manager checks
db.models	Model	_check_fields	cls	perform all field checks
db.models	Model	_check_m2m_through_same_relationship	cls	check if no relationship model is used by more than one m2m field
db.models	Model	_check_id_field	cls	check if id field is a primary key
db.models	Model	_check_index_together	cls	check the value of "index_together" option
db.models	Model	_check_unique_together	cls	check the value of "unique_together" option
db.models	Model	_check_ordering	cls	check "ordering" option -- is it a list of strings and do all fields
db.models	Model	_check_long_column_names	cls	check that any auto-generated column names are shorter than the limits for each database in which the model will be created
db.models		model_unpickle	model_id	used to unpickle model subclasses with deferred fields
db.models	Index	clone		create a copy of this index
db.models	Index	_hash_generator		generate a 32-bit digest of a set of arguments that can be used to shorten identifying names
db.models	Index	set_name_with_model	model	generate a unique name for the index
db.models		normalize_together	option_together	option_together can be either a tuple of tuples or a single tuple of two strings
db.models	Options	setup_proxy	target	does the internal setup so that the current model is a proxy for "target"
db.models	Options	can_migrate	connection	return true if the model can/should be migrated on the connection
db.models	Options	verbose_name_raw		there are a few places where the untranslated verbose name is needed (so that we get the same value regardless of currently active
db.models	Options	swapped		has this model been swapped out for another? if so return the model name of the replacement otherwise return none
db.models	Options	fields		returns a list of all forward fields on the model and its parents excluding manytomanyfields
db.models	Options	concrete_fields		returns a list of all concrete fields on the model and its parents
db.models	Options	local_concrete_fields		returns a list of all concrete fields on the model
db.models	Options	many_to_many		returns a list of all many to many fields on the model and its parents
db.models	Options	related_objects		returns all related objects pointing to the current model the related
db.models	Options	get_field	field_name	return a field instance given the name of a forward or reverse field
db.models	Options	get_base_chain	model	return a list of parent classes leading to model ordered from closest to most distant ancestor
db.models	Options	get_parent_list		returns all the ancestors of this model as a list ordered by mro
db.models	Options	get_ancestor_link	ancestor	returns the field on the current model which points to the given "ancestor"
db.models	Options	get_path_to_parent	parent	return a list of pathinfos containing the path from the current model to the parent model or an empty list if parent is not a
db.models	Options	get_path_from_parent	parent	return a list of pathinfos containing the path from the parent model to the current model or an empty list if parent is not a
db.models	Options	_populate_directed_relation_graph		this method is used by each model to find its reverse objects as this
db.models	Options	get_fields	include_parents include_hidden	returns a list of fields associated to the model by default includes
db.models	Options	_get_fields	forward reverse include_parents include_hidden	internal helper function to return fields of the model
db.models	Options	_property_names		return a set of the names of the properties defined on the model
db.models	DeferredAttribute	__get__	instance cls	retrieves and caches the value from the datastore on the first lookup
db.models	DeferredAttribute	_check_parent_chain	instance name	check if the field value can be fetched from a parent field already loaded in the instance
db.models	RegisterLookupMixin	merge_dicts	dicts	merge dicts in reverse to preference the order of the original list e g
db.models	RegisterLookupMixin	_unregister_lookup	cls lookup lookup_name	remove given lookup from cls lookups for use in tests only as it's
db.models		select_related_descend	field restricted requested load_fields	returns true if this field should be used to descend deeper for select_related() purposes
db.models		refs_expression	lookup_parts annotations	a helper method to check if the lookup_parts contains references to the given annotations set
db.models		check_rel_lookup_compatibility	model target_opts field	check that self model is compatible with target_opts compatibility
db.models	BaseManager	__str__		return "app_label model_label manager_name"
db.models	BaseManager	deconstruct		returns a 5-tuple of the form (as_manager true manager_class queryset_class args kwargs)
db.models	BaseManager	_set_creation_counter		sets the creation counter value for this instance and increments the class-level copy
db.models	BaseManager	get_queryset		returns a new queryset object subclasses can override this method to
db.models	Collector	add	objs source nullable reverse_dependency	adds 'objs' to the collection of objects to be deleted if the call is
db.models	Collector	add_field_update	field value objs	schedules a field update 'objs' must be a homogeneous iterable
db.models	Collector	can_fast_delete	objs from_field	determines if the objects in the given queryset-like can be fast-deleted
db.models	Collector	get_del_batches	objs field	returns the objs in suitably sized batches for the used connection
db.models	Collector	collect	objs source nullable collect_related	adds 'objs' to the collection of objects to be deleted as well as all parent instances
db.models	Collector	related_objects	related objs	gets a queryset of objects related to objs via the relation related
db.models		permalink	func	decorator that calls urls reverse() to return a url using parameters
db.models		make_model_tuple	model	takes a model or a string of the form "app_label modelname" and returns a
db.models	QuerySet	__deepcopy__	memo	deep copy of a queryset doesn't populate the cache
db.models	QuerySet	__iter__		the queryset iterator protocol uses three nested iterators in the default case
db.models	QuerySet	__getitem__	k	retrieves an item or slice from the set of results
db.models	QuerySet	iterator		an iterator over the results from applying this queryset to the database
db.models	QuerySet	aggregate		returns a dictionary containing the calculations aggregation over the current queryset
db.models	QuerySet	count		performs a select count() and returns the number of records as an integer
db.models	QuerySet	get		performs the query and returns a single object matching the given keyword arguments
db.models	QuerySet	create		creates a new object with the given kwargs saving it to the database and returning the created object
db.models	QuerySet	bulk_create	objs batch_size	inserts each of the instances into the database this does *not* call
db.models	QuerySet	get_or_create	defaults	looks up an object with the given kwargs creating one if necessary
db.models	QuerySet	update_or_create	defaults	looks up an object with the given kwargs updating one with defaults if it exists otherwise creates a new one
db.models	QuerySet	_create_object_from_params	lookup params	tries to create an object using passed params
db.models	QuerySet	_extract_model_params	defaults	prepares lookup kwargs that are valid model attributes params for creating a model instance based on given kwargs for use by
db.models	QuerySet	_earliest_or_latest	field_name direction	returns the latest object according to the model's 'get_latest_by' option or optional given field_name
db.models	QuerySet	first		returns the first object of a query returns none if no match is found
db.models	QuerySet	last		returns the last object of a query returns none if no match is found
db.models	QuerySet	in_bulk	id_list	returns a dictionary mapping each of the given ids to the object with that id
db.models	QuerySet	delete		deletes the records in the current queryset
db.models	QuerySet	_raw_delete	using	deletes objects found from the given queryset in single direct sql query
db.models	QuerySet	update		updates all elements in the current queryset setting all the given fields to the appropriate values
db.models	QuerySet	_update	values	a version of update that accepts field objects instead of field names
db.models	QuerySet	dates	field_name kind order	returns a list of date objects representing all available dates for the given field_name scoped to 'kind'
db.models	QuerySet	datetimes	field_name kind order tzinfo	returns a list of datetime objects representing all available datetimes for the given field_name scoped to 'kind'
db.models	QuerySet	none		returns an empty queryset
db.models	QuerySet	all		returns a new queryset that is a copy of the current one this allows a
db.models	QuerySet	filter		returns a new queryset instance with the args anded to the existing set
db.models	QuerySet	exclude		returns a new queryset instance with not args anded to the existing set
db.models	QuerySet	complex_filter	filter_obj	returns a new queryset instance with filter_obj added to the filters
db.models	QuerySet	select_for_update	nowait skip_locked	returns a new queryset instance that will select objects with a for update lock
db.models	QuerySet	select_related		returns a new queryset instance that will select related objects
db.models	QuerySet	prefetch_related		returns a new queryset instance that will prefetch the specified many-to-one and many-to-many related objects when the queryset is
db.models	QuerySet	annotate		return a query set in which the returned objects have been annotated with extra data or aggregations
db.models	QuerySet	order_by		returns a new queryset instance with the ordering changed
db.models	QuerySet	distinct		returns a new queryset instance that will select only distinct results
db.models	QuerySet	extra	select where params tables	adds extra sql fragments to the query
db.models	QuerySet	reverse		reverses the ordering of the queryset
db.models	QuerySet	defer		defers the loading of data for certain fields until they are accessed
db.models	QuerySet	only		essentially the opposite of defer only the fields passed into this
db.models	QuerySet	using	alias	selects which database this queryset should execute its query against
db.models	QuerySet	ordered		returns true if the queryset is ordered -- i e has an order_by()
db.models	QuerySet	db		return the database that will be used if this query is executed now
db.models	QuerySet	_insert	objs fields return_id raw	inserts a new record for the given model this provides an interface to
db.models	QuerySet	_batched_insert	objs fields batch_size	a little helper method for bulk_insert to insert the bulk one batch at a time
db.models	QuerySet	_next_is_sticky		indicates that the next filter call and the one following that should be treated as a single filter
db.models	QuerySet	_merge_sanity_check	other	checks that we are merging two comparable queryset classes
db.models	QuerySet	_merge_known_related_objects	other	keep track of all known related objects from either queryset instance
db.models	QuerySet	_add_hints		update hinting information for later use by routers
db.models	QuerySet	_has_filters		checks if this queryset has any filtering going on note that this
db.models	RawQuerySet	resolve_model_init_order		resolve the init field names and value positions
db.models	RawQuerySet	db		return the database that will be used if this query is executed now
db.models	RawQuerySet	using	alias	selects which database this raw queryset should execute its query against
db.models	RawQuerySet	columns		a list of model field names in the order they'll appear in the query results
db.models	RawQuerySet	model_fields		a dict mapping column names to model field names
db.models		normalize_prefetch_lookups	lookups prefix	helper function that normalize lookups into prefetch objects
db.models		prefetch_related_objects	model_instances	populate prefetched object caches for a list of model instances based on the lookups/prefetch instances given
db.models		get_prefetcher	instance through_attr to_attr	for the attribute 'through_attr' on the given instance finds an object that has a get_prefetch_queryset()
db.models		prefetch_one_level	instances prefetcher lookup level	helper function for prefetch_related_objects runs prefetches on all instances using the prefetcher object
db.models.fields	FileField	get_prep_value	value	returns field's value prepared for saving into a database
db.models.fields	FileField	pre_save	model_instance add	returns field's value just before saving
db.models.fields	FileField	generate_filename	instance filename	apply if callable or prepend if a string upload_to to the filename then delegate further processing of the name to the storage backend
db.models.fields	ImageField	update_dimension_fields	instance force	updates field's width and height fields if defined
db.models.fields	ForwardManyToOneDescriptor	__get__	instance cls	get the related instance through the forward relation
db.models.fields	ForwardManyToOneDescriptor	__set__	instance value	set the related instance through the forward relation
db.models.fields	ReverseOneToOneDescriptor	__get__	instance cls	get the related instance through the reverse relation
db.models.fields	ReverseOneToOneDescriptor	__set__	instance value	set the related instance through the reverse relation
db.models.fields	ReverseManyToOneDescriptor	__get__	instance cls	get the related objects through the reverse relation
db.models.fields	ReverseManyToOneDescriptor	__set__	instance value	set the related objects through the reverse relation
db.models.fields		create_reverse_many_to_one_manager	superclass rel	create a manager for the reverse side of a many-to-one relation
db.models.fields		create_forward_many_to_many_manager	superclass rel reverse	create a manager for the either side of a many-to-many relation
db.models.fields	Field	__str__		return "app_label model_label field_name" for fields attached to
db.models.fields	Field	__repr__		displays the module class and name of the field
db.models.fields	Field	_check_field_name		check if field name is valid i e 1) does not end with an
db.models.fields	Field	select_format	compiler sql params	custom format for select clauses for example gis columns need to be
db.models.fields	Field	deconstruct		returns enough information to recreate the field as a 4-tuple * the name of the field on the model if contribute_to_class has been run
db.models.fields	Field	clone		uses deconstruct() to clone a new copy of this field
db.models.fields	Field	__reduce__		pickling should return the model _meta fields instance of the field
db.models.fields	Field	get_pk_value_on_save	instance	hook to generate new pk values on save this method is called when
db.models.fields	Field	to_python	value	converts the input value into the expected python data type raising django
db.models.fields	Field	validators		some validators can't be created at field initialization time
db.models.fields	Field	validate	value model_instance	validates value and throws validationerror subclasses should override
db.models.fields	Field	clean	value model_instance	convert the value's type and run validation validation errors
db.models.fields	Field	db_check	connection	return the database column check constraint for this field for the provided connection
db.models.fields	Field	db_type	connection	return the database column data type for this field for the provided connection
db.models.fields	Field	rel_db_type	connection	return the data type that a related field pointing to this field should use
db.models.fields	Field	db_parameters	connection	extension of db_type(), providing a range of different return values type checks
db.models.fields	Field	contribute_to_class	cls name private_only virtual_only	register the field with the model class it belongs to
db.models.fields	Field	get_filter_kwargs_for_object	obj	return a dict that when passed as kwargs to self model filter(), would
db.models.fields	Field	pre_save	model_instance add	returns field's value just before saving
db.models.fields	Field	get_prep_value	value	perform preliminary non-db specific value checks and conversions
db.models.fields	Field	get_db_prep_value	value connection prepared	returns field's value prepared for interacting with the database backend
db.models.fields	Field	get_db_prep_save	value connection	returns field's value prepared for saving into a database
db.models.fields	Field	has_default		returns a boolean of whether this field has a default value
db.models.fields	Field	get_default		returns the default value for this field
db.models.fields	Field	get_choices	include_blank blank_choice limit_choices_to	returns choices with a default blank choices included for use as selectfield choices for this field
db.models.fields	Field	value_to_string	obj	returns a string value of this field from the passed obj
db.models.fields	Field	_get_flatchoices		flattened version of choices tuple
db.models.fields	Field	formfield	form_class choices_form_class	returns a django forms field instance for this database field
db.models.fields	Field	value_from_object	obj	returns the value of this field in the given model instance
db.models.fields	DateField	_check_fix_default_value		adds a warning to the checks framework stating that using an actual date or datetime value is probably wrong it's only being evaluated on
db.models.fields	DateTimeField	_check_fix_default_value		adds a warning to the checks framework stating that using an actual date or datetime value is probably wrong it's only being evaluated on
db.models.fields	DecimalField	format_number	value	formats a number into a string with the requisite number of digits and decimal places
db.models.fields	PositiveIntegerRelDbTypeMixin	rel_db_type	connection	return the data type that a related field pointing to this field should use
db.models.fields	TimeField	_check_fix_default_value		adds a warning to the checks framework stating that using an actual time or datetime value is probably wrong it's only being evaluated on
db.models.fields	BinaryField	value_to_string	obj	binary data is serialized as base64
db.models.fields	ForeignObjectRel	target_field		when filtering against this relation returns the field on the remote model against which the filtering should happen
db.models.fields	ForeignObjectRel	get_choices	include_blank blank_choice	return choices with a default blank choices included for use as selectfield choices for this field
db.models.fields	ForeignObjectRel	is_hidden		should the related object be hidden?
db.models.fields	ForeignObjectRel	set_field_name		set the related field's name this is not available until later stages
db.models.fields	ManyToOneRel	get_related_field		return the field in the 'to' object to which this relationship is tied
db.models.fields	ManyToManyRel	get_related_field		return the field in the 'to' object to which this relationship is tied
db.models.fields		resolve_relation	scope_model relation	transform relation into a model or fully-qualified model string of the form "app_label
db.models.fields		lazy_related_operation	function model	schedule function to be called once model and all related_models have been imported and registered with the app registry
db.models.fields	RelatedField	_check_clashes		check accessor and reverse query name clashes
db.models.fields	RelatedField	get_forward_related_filter	obj	return the keyword arguments that when supplied to self
db.models.fields	RelatedField	get_reverse_related_filter	obj	complement to get_forward_related_filter() return the keyword
db.models.fields	RelatedField	swappable_setting		get the setting that this is powered from for swapping or none if it's not swapped in / marked with swappable=false
db.models.fields	RelatedField	get_limit_choices_to		return limit_choices_to for this model field
db.models.fields	RelatedField	formfield		pass limit_choices_to to the field being constructed
db.models.fields	RelatedField	related_query_name		define the name that can be used to identify this related object in a table-spanning query
db.models.fields	RelatedField	target_field		when filtering against this relation returns the field on the remote model against which the filtering should happen
db.models.fields	ForeignObject	get_extra_descriptor_filter	instance	return an extra filter condition for related object fetching when user does 'instance
db.models.fields	ForeignObject	get_extra_restriction	where_class alias related_alias	return a pair condition used for joining and subquery pushdown the
db.models.fields	ForeignObject	get_path_info		get path from this field to the related model
db.models.fields	ForeignObject	get_reverse_path_info		get path from the related model to this field's model
db.models.fields	ForeignKey	get_reverse_path_info		get path from the related model to this field's model
db.models.fields	ForeignKey	get_default		here we check if the default value is an object and return the to_field if so
db.models.fields	ManyToManyField	_get_path_info	direct	called by both direct and indirect m2m traversal
db.models.fields	ManyToManyField	_get_m2m_db_table	opts	function that can be curried to provide the m2m table name for this relation
db.models.fields	ManyToManyField	_get_m2m_attr	related attr	function that can be curried to provide the source accessor or db column name for the m2m table
db.models.fields	ManyToManyField	_get_m2m_reverse_attr	related attr	function that can be curried to provide the related accessor or db column name for the m2m table
db.models.fields	ManyToManyField	value_from_object	obj	return the value of this field in the given model instance
db.models.functions	Greatest	as_sqlite	compiler connection	use the max function on sqlite
db.models.functions	Least	as_sqlite	compiler connection	use the min function on sqlite
db.models.functions	Substr	__init__	expression pos length	expression the name of a field or an expression returning a string
db.models.sql	Join	as_sql	compiler connection	generates the full left outer join sometable on sometable
db.models.sql	DeleteQuery	delete_batch	pk_list using	set up and execute delete queries for all the objects in pk_list
db.models.sql	DeleteQuery	delete_qs	query using	delete the queryset in one sql query if possible for simple queries
db.models.sql	UpdateQuery	_setup_query		runs on initialization and after cloning any attributes that would
db.models.sql	UpdateQuery	add_update_values	values	convert a dictionary of field name to value mappings into an update query
db.models.sql	UpdateQuery	add_update_fields	values_seq	append a sequence of field model value triples to the internal list that will be used to generate the update query
db.models.sql	UpdateQuery	add_related_update	model field value	adds name value to an update query for an ancestor model
db.models.sql	UpdateQuery	get_related_updates		returns a list of query objects one for each update required to an ancestor model
db.models.sql	InsertQuery	insert_values	fields objs raw	set up the insert query from the 'insert_values' dictionary the
db.models.sql	SQLCompiler	pre_sql_setup		does any necessary class setup immediately prior to producing sql this
db.models.sql	SQLCompiler	get_group_by	select order_by	returns a list of 2-tuples of form sql params
db.models.sql	SQLCompiler	get_select		returns three values - a list of 3-tuples of (expression sql params alias)
db.models.sql	SQLCompiler	get_order_by		returns a list of 2-tuples of form (expr (sql params is_ref)) for the order by clause
db.models.sql	SQLCompiler	quote_name_unless_alias	name	a wrapper around connection ops quote_name that doesn't quote aliases
db.models.sql	SQLCompiler	as_sql	with_limits with_col_aliases	creates the sql for this query returns the sql string and list of
db.models.sql	SQLCompiler	get_default_columns	start_alias opts from_parent	computes the default columns for selecting every field in the base model
db.models.sql	SQLCompiler	get_distinct		returns a quoted list of fields to use in distinct on part of the query
db.models.sql	SQLCompiler	find_ordering_name	name opts alias default_order	returns the table alias the name might be ambiguous the alias will not be and column name for ordering by the given 'name' parameter
db.models.sql	SQLCompiler	_setup_joins	pieces opts alias	a helper method for get_order_by and get_distinct
db.models.sql	SQLCompiler	get_from_clause		returns a list of strings that are joined together to go after the "from" part of the query as well as a list any extra parameters that
db.models.sql	SQLCompiler	get_related_selections	select opts root_alias cur_depth	fill in the information needed for a select_related query the current
db.models.sql	SQLCompiler	deferred_to_columns		converts the self deferred_loading data structure to mapping of table
db.models.sql	SQLCompiler	results_iter	results	returns an iterator over the results from executing this query
db.models.sql	SQLCompiler	has_results		backends e g nosql can override this in order to use optimized
db.models.sql	SQLCompiler	execute_sql	result_type chunked_fetch	run the query against the database and returns the result s the
db.models.sql	SQLInsertCompiler	field_as_sql	field val	take a field and a value intended to be saved on that field and return placeholder sql and accompanying params
db.models.sql	SQLInsertCompiler	prepare_value	field value	prepare a value to be used in a query by resolving it if it is an expression and otherwise calling the field's get_db_prep_save()
db.models.sql	SQLInsertCompiler	pre_save_val	field obj	get the given field's value off the given obj pre_save() is used for
db.models.sql	SQLInsertCompiler	assemble_as_sql	fields value_rows	take a sequence of n fields and a sequence of m rows of values generate placeholder sql and parameters for each field and value and
db.models.sql	SQLDeleteCompiler	as_sql		creates the sql for this query returns the sql string and list of
db.models.sql	SQLUpdateCompiler	as_sql		creates the sql for this query returns the sql string and list of
db.models.sql	SQLUpdateCompiler	execute_sql	result_type	execute the specified update returns the number of rows affected by
db.models.sql	SQLUpdateCompiler	pre_sql_setup		if the update depends on results from other tables we need to do some munging of the "where" conditions to match the format required for
db.models.sql	SQLAggregateCompiler	as_sql		creates the sql for this query returns the sql string and list of
db.models.sql		cursor_iter	cursor sentinel col_count	yields blocks of rows from a cursor and ensures the cursor is closed when done
db.models.sql	WhereNode	split_having	negated	returns two possibly none nodes one for those parts of self that should be included in the where clause and one for those parts of
db.models.sql	WhereNode	as_sql	compiler connection	returns the sql version of the where clause and the value to be substituted in
db.models.sql	WhereNode	relabel_aliases	change_map	relabels the alias values of any children 'change_map' is a dictionary
db.models.sql	WhereNode	clone		creates a clone of the tree must only be called on root nodes (nodes
db.models.sql	Query	__str__		returns the query as a string of sql with the parameter values substituted in (use sql_with_params() to see the unsubstituted string)
db.models.sql	Query	sql_with_params		returns the query as an sql string and the parameters that will be substituted into the query
db.models.sql	Query	get_meta		returns the options instance (the model _meta) from which to start
db.models.sql	Query	clone	klass memo	creates a copy of the current instance the 'kwargs' parameter can be
db.models.sql	Query	get_aggregation	using added_aggregate_names	returns the dictionary with the values of the existing aggregations
db.models.sql	Query	get_count	using	performs a count() query using the current filter constraints
db.models.sql	Query	combine	rhs connector	merge the 'rhs' query into the current one (with any 'rhs' effects being applied *after* (that is "to the right of") anything in the
db.models.sql	Query	deferred_to_data	target callback	converts the self deferred_loading data structure to an alternate data
db.models.sql	Query	table_alias	table_name create	returns a table alias for the given table_name and whether this is a new alias or not
db.models.sql	Query	ref_alias	alias	increases the reference count for this alias
db.models.sql	Query	unref_alias	alias amount	decreases the reference count for this alias
db.models.sql	Query	promote_joins	aliases	promotes recursively the join type of given aliases and its children to an outer join
db.models.sql	Query	demote_joins	aliases	change join type from louter to inner for all joins in aliases
db.models.sql	Query	reset_refcounts	to_counts	this method will reset reference counts for aliases so that they match
db.models.sql	Query	change_aliases	change_map	changes the aliases in change_map (which maps old-alias -> new-alias), relabelling any references to them in select columns and the where
db.models.sql	Query	bump_prefix	outer_query	changes the alias prefix to the next letter in the alphabet in a way that the outer query's aliases and this query's aliases will not
db.models.sql	Query	get_initial_alias		returns the first alias for this query after increasing its reference count
db.models.sql	Query	count_active_tables		returns the number of tables in this query with a non-zero reference count
db.models.sql	Query	join	join reuse	returns an alias for the join in 'connection', either reusing an existing alias for that join or creating a new one
db.models.sql	Query	join_parent_model	opts model alias seen	makes sure the given 'model' is joined in the query if 'model' isn't
db.models.sql	Query	add_annotation	annotation alias is_summary	adds a single annotation expression to the query
db.models.sql	Query	solve_lookup_type	lookup	solve the lookup type from the lookup (eg 'foobar__id__icontains')
db.models.sql	Query	check_query_object_type	value opts field	checks whether the object passed while querying is of the correct type
db.models.sql	Query	check_related_objects	field value opts	checks the type of object passed to query relations
db.models.sql	Query	build_lookup	lookups lhs rhs	tries to extract transforms and lookup from given lhs
db.models.sql	Query	try_transform	lhs name rest_of_lookups	helper method for build_lookup tries to fetch and initialize
db.models.sql	Query	build_filter	filter_expr branch_negated current_negated can_reuse	builds a wherenode for a single filter clause but doesn't add it to this query
db.models.sql	Query	add_q	q_object	a preprocessor for the internal _add_q() responsible for doing final
db.models.sql	Query	_add_q	q_object used_aliases branch_negated current_negated	adds a q-object to the current filter
db.models.sql	Query	names_to_path	names opts allow_many fail_on_missing	walks the list of names and turns them into pathinfo tuples note that
db.models.sql	Query	setup_joins	names opts alias can_reuse	compute the necessary table joins for the passage through the fields given in 'names'
db.models.sql	Query	trim_joins	targets joins path	the 'target' parameter is the final field being joined to 'joins' is the full list of join aliases
db.models.sql	Query	split_exclude	filter_expr prefix can_reuse names_with_path	when doing an exclude against any kind of n-to-many relation we need to use a subquery
db.models.sql	Query	set_limits	low high	adjusts the limits on the rows retrieved we use low/high to set these
db.models.sql	Query	clear_limits		clears any existing limits
db.models.sql	Query	can_filter		returns true if adding filters to this instance is still possible
db.models.sql	Query	clear_select_clause		removes all fields from select clause
db.models.sql	Query	clear_select_fields		clears the list of fields to select (but not extra_select columns)
db.models.sql	Query	add_distinct_fields		adds and resolves the given fields to the query's "distinct on" clause
db.models.sql	Query	add_fields	field_names allow_m2m	adds the given model fields to the select set the field names are
db.models.sql	Query	add_ordering		adds items from the 'ordering' sequence to the query's "order by" clause
db.models.sql	Query	clear_ordering	force_empty	removes any ordering settings if 'force_empty' is true there will be
db.models.sql	Query	set_group_by		expands the group by clause required by the query
db.models.sql	Query	add_select_related	fields	sets up the select_related data structure so that we only select certain related models (as opposed to all models when
db.models.sql	Query	add_extra	select select_params where params	adds data to the various extra_* attributes for user-created additions to the query
db.models.sql	Query	clear_deferred_loading		remove any fields from the deferred loading set
db.models.sql	Query	add_deferred_loading	field_names	add the given list of model field names to the set of fields to exclude from loading from the database when automatic column selection
db.models.sql	Query	add_immediate_loading	field_names	add the given list of model field names to the set of fields to retrieve when the sql is executed ("immediate loading" fields)
db.models.sql	Query	get_loaded_field_names		if any fields are marked to be deferred returns a dictionary mapping models to a set of names in those fields that will be loaded
db.models.sql	Query	get_loaded_field_names_cb	target model fields	callback used by get_deferred_field_names()
db.models.sql	Query	set_annotation_mask	names	set the mask of annotations that will actually be returned by the select
db.models.sql	Query	set_extra_mask	names	set the mask of extra select items that will be returned by select
db.models.sql	Query	annotation_select		the ordereddict of aggregate columns that are not masked and should be used in the select clause
db.models.sql	Query	trim_start	names_with_path	trims joins from the start of the join path the candidates for trim
db.models.sql	Query	is_nullable	field	a helper to check if the given field should be treated as nullable
db.models.sql		get_order_dir	field default	returns the field name and direction for an order specification for
db.models.sql		add_to_dict	data key value	a helper function to add "value" to the set of values for "key", whether or not "key" already exists
db.models.sql		is_reverse_o2o	field	a little helper to check if the given field is reverse-o2o the field is
db.models.sql	JoinPromoter	add_votes	votes	add single vote per item to self votes parameter can be any
db.models.sql	JoinPromoter	update_join_types	query	change join types so that the generated query is as efficient as possible but still correct
db.migrations	Migration	mutate_state	project_state preserve	takes a projectstate and returns a new one with the migration's operations applied to it
db.migrations	Migration	apply	project_state schema_editor collect_sql	takes a project_state representing all migrations prior to this one and a schema_editor for a live database and applies the migration
db.migrations	Migration	unapply	project_state schema_editor collect_sql	takes a project_state representing all migrations prior to this one and a schema_editor for a live database and applies the migration
db.migrations		swappable_dependency	value	turns a setting value into a dependency
db.migrations	MigrationLoader	migrations_module	cls app_label	return the path to the migrations module for the specified app_label and a boolean indicating if the module is specified in
db.migrations	MigrationLoader	load_disk		loads the migrations from all installed_apps from disk
db.migrations	MigrationLoader	get_migration	app_label name_prefix	gets the migration exactly named or raises graph nodenotfounderror
db.migrations	MigrationLoader	get_migration_by_prefix	app_label name_prefix	returns the migration s which match the given app label and name _prefix_
db.migrations	MigrationLoader	add_internal_dependencies	key migration	internal dependencies need to be added first to ensure __first__ dependencies find the correct root node
db.migrations	MigrationLoader	build_graph		builds a migration dependency graph using both the disk and database
db.migrations	MigrationLoader	check_consistent_history	connection	raise inconsistentmigrationhistory if any applied migrations have unapplied dependencies
db.migrations	MigrationLoader	detect_conflicts		looks through the loaded graph and detects any conflicts - apps with more than one leaf migration
db.migrations	MigrationLoader	project_state	nodes at_end	returns a projectstate object representing the most recent state that the migrations we loaded represent
db.migrations		_get_related_models	m	return all models that have a direct relationship to the given model
db.migrations		get_related_models_tuples	model	return a list of typical (app_label model_name) tuples for all related models for the given model
db.migrations		get_related_models_recursive	model	return all models that have a direct or indirect relationship to the given model
db.migrations	ProjectState	clone		returns an exact copy of this projectstate
db.migrations	ProjectState	from_apps	cls apps	takes in an apps and returns a projectstate matching it
db.migrations	StateApps	clone		return a clone of this registry mainly used by the migration framework
db.migrations	ModelState	from_model	cls model exclude_rels	feed me a model get a modelstate representing it out
db.migrations	ModelState	construct_managers		deep-clone the managers using deconstruction
db.migrations	ModelState	clone		returns an exact copy of this modelstate
db.migrations	ModelState	render	apps	creates a model object from our current state into the given apps
db.migrations	MigrationRecorder	ensure_schema		ensures the table exists and has the correct schema
db.migrations	MigrationRecorder	applied_migrations		returns a set of app name of applied migrations
db.migrations	MigrationRecorder	record_applied	app name	records that a migration was applied
db.migrations	MigrationRecorder	record_unapplied	app name	records that a migration was unapplied
db.migrations	MigrationRecorder	flush		deletes all migration records useful if you're testing migrations
db.migrations	MigrationAutodetector	changes	graph trim_to_apps convert_apps migration_name	main entry point to produce a list of applicable changes
db.migrations	MigrationAutodetector	deep_deconstruct	obj	recursive deconstruction for a field and its arguments
db.migrations	MigrationAutodetector	only_relation_agnostic_fields	fields	return a definition of the fields that ignores field names and what related fields actually relate to
db.migrations	MigrationAutodetector	_detect_changes	convert_apps graph	returns a dict of migration plans which will achieve the change from from_state to to_state
db.migrations	MigrationAutodetector	_prepare_field_lists		prepare field lists and prepare a list of the fields that used through models in the old state so we can make dependencies
db.migrations	MigrationAutodetector	_generate_through_model_map		through model map generation
db.migrations	MigrationAutodetector	_build_migration_list	graph	we need to chop the lists of operations up into migrations with dependencies on each other
db.migrations	MigrationAutodetector	_sort_migrations		reorder to make things possible the order we have already isn't bad
db.migrations	MigrationAutodetector	check_dependency	operation dependency	returns true if the given operation depends on the given dependency false otherwise
db.migrations	MigrationAutodetector	swappable_first_key	item	sorting key function that places potential swappable models first in
db.migrations	MigrationAutodetector	generate_renamed_models		finds any renamed models and generates the operations for them and removes the old entry from the model lists
db.migrations	MigrationAutodetector	generate_created_models		find all new models both managed and unmanaged and make create operations for them as well as separate operations to create any
db.migrations	MigrationAutodetector	generate_created_proxies		makes createmodel statements for proxy models
db.migrations	MigrationAutodetector	generate_deleted_models		find all deleted models managed and unmanaged and make delete operations for them as well as separate operations to delete any
db.migrations	MigrationAutodetector	generate_deleted_proxies		makes deletemodel statements for proxy models
db.migrations	MigrationAutodetector	generate_renamed_fields		works out renamed fields
db.migrations	MigrationAutodetector	generate_added_fields		fields that have been added
db.migrations	MigrationAutodetector	generate_removed_fields		fields that have been removed
db.migrations	MigrationAutodetector	generate_altered_fields		fields that have been altered
db.migrations	MigrationAutodetector	generate_altered_options		works out if any non-schema-affecting options have changed and
db.migrations	MigrationAutodetector	arrange_for_graph	changes graph migration_name	takes in a result from changes() and a migrationgraph and fixes the names and dependencies of the changes so they
db.migrations	MigrationAutodetector	_trim_to_apps	changes app_labels	takes changes from arrange_for_graph and set of app labels and returns a modified set of changes which trims out as many migrations
db.migrations	MigrationAutodetector	suggest_name	cls ops	given a set of operations suggests a name for the migration they might represent
db.migrations	MigrationAutodetector	parse_number	cls name	given a migration name tries to extract a number from the beginning of it
db.migrations	MigrationExecutor	migration_plan	targets clean_start	given a set of targets returns a list of (migration instance backwards?)
db.migrations	MigrationExecutor	_create_project_state	with_applied_migrations	create a project state including all the applications without migrations and applied migrations if with_applied_migrations=true
db.migrations	MigrationExecutor	migrate	targets plan state fake	migrates the database up to the given targets
db.migrations	MigrationExecutor	_migrate_all_forwards	state plan full_plan fake	take a list of 2-tuples of the form migration instance false and apply them in the order they occur in the full_plan
db.migrations	MigrationExecutor	_migrate_all_backwards	plan full_plan fake	take a list of 2-tuples of the form migration instance true and unapply them in reverse order they occur in the full_plan
db.migrations	MigrationExecutor	collect_sql	plan	takes a migration plan and returns a list of collected sql statements that represent the best-efforts version of that plan
db.migrations	MigrationExecutor	apply_migration	state migration fake fake_initial	runs a migration forwards
db.migrations	MigrationExecutor	unapply_migration	state migration fake	runs a migration backwards
db.migrations	MigrationExecutor	check_replacements		mark replacement migrations applied if their replaced set all are
db.migrations	MigrationExecutor	detect_soft_applied	project_state migration	tests whether a migration has been implicitly applied - that the tables or columns it would create exist
db.migrations	DummyNode	promote		transition dummy to a normal node and clean off excess attribs
db.migrations	MigrationGraph	add_dependency	migration child parent skip_validation	this may create dummy nodes if they don't yet exist
db.migrations	MigrationGraph	remove_replaced_nodes	replacement replaced	removes each of the replaced nodes when they exist any
db.migrations	MigrationGraph	remove_replacement_node	replacement replaced	the inverse operation to remove_replaced_nodes almost removes the
db.migrations	MigrationGraph	validate_consistency		ensure there are no dummy nodes remaining in the graph
db.migrations	MigrationGraph	forwards_plan	target	given a node returns a list of which previous nodes dependencies must be applied ending with the node itself
db.migrations	MigrationGraph	backwards_plan	target	given a node returns a list of which dependent nodes dependencies must be unapplied ending with the node itself
db.migrations	MigrationGraph	iterative_dfs	start forwards	iterative depth first search for finding dependencies
db.migrations	MigrationGraph	root_nodes	app	returns all root nodes - that is nodes with no dependencies inside their app
db.migrations	MigrationGraph	leaf_nodes	app	returns all leaf nodes - that is nodes with no dependents in their app
db.migrations	MigrationGraph	make_state	nodes at_end real_apps	given a migration node or nodes returns a complete projectstate for it
db.migrations	MigrationOptimizer	optimize	operations app_label	main optimization entry point pass in a list of operation instances
db.migrations	MigrationOptimizer	optimize_inner	operations app_label	inner optimization loop
db.migrations		topological_sort_as_sets	dependency_graph	variation of kahn's algorithm 1962 that returns sets
db.migrations	MigrationQuestioner	ask_initial	app_label	should we create an initial migration for the app?
db.migrations	MigrationQuestioner	ask_not_null_addition	field_name model_name	adding a not null field to a model
db.migrations	MigrationQuestioner	ask_not_null_alteration	field_name model_name	changing a null field to not null
db.migrations	MigrationQuestioner	ask_rename	model_name old_name new_name field_instance	was this field really renamed?
db.migrations	MigrationQuestioner	ask_rename_model	old_model_state new_model_state	was this model really renamed?
db.migrations	MigrationQuestioner	ask_merge	app_label	do you really want to merge these migrations?
db.migrations	MigrationQuestioner	ask_auto_now_add_addition	field_name model_name	adding an auto_now_add field to a model
db.migrations	InteractiveMigrationQuestioner	_ask_default	default	prompt for a default value
db.migrations	InteractiveMigrationQuestioner	ask_not_null_addition	field_name model_name	adding a not null field to a model
db.migrations	InteractiveMigrationQuestioner	ask_not_null_alteration	field_name model_name	changing a null field to not null
db.migrations	InteractiveMigrationQuestioner	ask_rename	model_name old_name new_name field_instance	was this field really renamed?
db.migrations	InteractiveMigrationQuestioner	ask_rename_model	old_model_state new_model_state	was this model really renamed?
db.migrations	InteractiveMigrationQuestioner	ask_auto_now_add_addition	field_name model_name	adding an auto_now_add field to a model
db.migrations	MigrationWriter	as_string		returns a string of the file contents
db.migrations.operations	Operation	deconstruct		returns a 3-tuple of class import path (or just name if it lives under django
db.migrations.operations	Operation	state_forwards	app_label state	takes the state from the previous migration and mutates it so that it matches what this migration would perform
db.migrations.operations	Operation	database_forwards	app_label schema_editor from_state to_state	performs the mutation on the database schema in the normal forwards direction
db.migrations.operations	Operation	database_backwards	app_label schema_editor from_state to_state	performs the mutation on the database schema in the reverse direction - e
db.migrations.operations	Operation	describe		outputs a brief summary of what the action does
db.migrations.operations	Operation	references_model	name app_label	returns true if there is a chance this operation references the given model name as a string with an optional app label for accuracy
db.migrations.operations	Operation	references_field	model_name name app_label	returns true if there is a chance this operation references the given field name with an optional app label for accuracy
db.migrations.operations	Operation	allow_migrate_model	connection_alias model	returns if we're allowed to migrate the model
db.migrations.operations	Operation	reduce	operation in_between app_label	return either a list of operations the actual operation should be replaced with or a boolean that indicates whether or not the specified
db.migrations.operations	CreateModel	model_to_key	model	take either a model class or an "app_label modelname" string
utils		get_func_full_args	func	return a list of argument name default value tuples if the argument
utils		func_accepts_var_args	func	return true if function 'func' accepts positional arguments *args
utils		get_fixed_timezone	offset	returns a tzinfo instance with a fixed offset from utc
utils		get_default_timezone		returns the default time zone as a tzinfo instance
utils		get_default_timezone_name		returns the name of the default time zone
utils		get_current_timezone		returns the currently active time zone as a tzinfo instance
utils		get_current_timezone_name		returns the name of the currently active time zone
utils		_get_timezone_name	timezone	returns the name of timezone
utils		activate	timezone	sets the time zone for the current thread
utils		deactivate		unsets the time zone for the current thread
utils		template_localtime	value use_tz	checks if value is a datetime and converts it to local time if necessary
utils		localtime	value timezone	converts an aware datetime datetime to local time
utils		localdate	value timezone	convert an aware datetime to local time and return the value's date
utils		now		returns an aware or naive datetime datetime depending on settings use_tz
utils		is_aware	value	determines if a given datetime datetime is aware
utils		is_naive	value	determines if a given datetime datetime is naive
utils		make_aware	value timezone is_dst	makes a naive datetime datetime in a given time zone aware
utils		make_naive	value timezone	makes an aware datetime datetime naive in a given time zone
utils		sentence		returns a randomly generated sentence of lorem ipsum text
utils		paragraph		returns a randomly generated paragraph of lorem ipsum text
utils		paragraphs	count common	returns a list of paragraphs as returned by paragraph()
utils		words	count common	returns a string of count lorem ipsum words separated by a single space
utils	TimeFormat	a		'a m ' or 'p m '
utils	TimeFormat	A		'am' or 'pm'
utils	TimeFormat	B		swatch internet time
utils	TimeFormat	f		time in 12-hour hours and minutes with minutes left off if they're zero
utils	TimeFormat	g		hour 12-hour format without leading zeros i e '1' to '12'
utils	TimeFormat	G		hour 24-hour format without leading zeros i e '0' to '23'
utils	TimeFormat	h		hour 12-hour format i e '01' to '12'
utils	TimeFormat	H		hour 24-hour format i e '00' to '23'
utils	TimeFormat	i		minutes i e '00' to '59'
utils	TimeFormat	O		difference to greenwich time in hours e g '+0200', '-0430'
utils	TimeFormat	P		time in 12-hour hours minutes and 'a m '/'p m ', with minutes left off
utils	TimeFormat	s		seconds i e '00' to '59'
utils	TimeFormat	T		time zone of this machine e g 'est' or 'mdt'
utils	TimeFormat	u		microseconds i e '000000' to '999999'
utils	TimeFormat	Z		time zone offset in seconds (i e '-43200' to '43200') the offset for
utils	DateFormat	b		month textual 3 letters lowercase e g 'jan'
utils	DateFormat	c		iso 8601 format example : '2008-01-02t10 30 00
utils	DateFormat	d		day of the month 2 digits with leading zeros i e '01' to '31'
utils	DateFormat	D		day of the week textual 3 letters e g 'fri'
utils	DateFormat	E		alternative month names as required by some locales proprietary extension
utils	DateFormat	F		month textual long e g 'january'
utils	DateFormat	I		'1' if daylight savings time '0' otherwise
utils	DateFormat	j		day of the month without leading zeros i e '1' to '31'
utils	DateFormat	l		day of the week textual long e g 'friday'
utils	DateFormat	L		boolean for whether it is a leap year i e true or false
utils	DateFormat	m		month i e '01' to '12'
utils	DateFormat	M		month textual 3 letters e g 'jan'
utils	DateFormat	n		month without leading zeros i e '1' to '12'
utils	DateFormat	N		month abbreviation in associated press style proprietary extension
utils	DateFormat	o		iso 8601 year number matching the iso week number w
utils	DateFormat	r		rfc 5322 formatted date e g 'thu 21 dec 2000 16 01 07 +0200'
utils	DateFormat	S		english ordinal suffix for the day of the month 2 characters i e 'st', 'nd', 'rd' or 'th'
utils	DateFormat	t		number of days in the given month i e '28' to '31'
utils	DateFormat	U		seconds since the unix epoch january 1 1970 00 00 00 gmt
utils	DateFormat	w		day of the week numeric i e '0' sunday to '6' saturday
utils	DateFormat	W		iso-8601 week number of year weeks starting on monday
utils	DateFormat	y		year 2 digits e g '99'
utils	DateFormat	Y		year 4 digits e g '1999'
utils	DateFormat	z		day of the year i e '0' to '365'
utils		salted_hmac	key_salt value secret	returns the hmac-sha1 of 'value', using a key generated from key_salt and a secret (which defaults to settings
utils		get_random_string	length allowed_chars	returns a securely generated random string
utils		_bin_to_long	x	convert a binary string into a long integer
utils		_long_to_bin	x hex_format_string	convert a long integer into a binary string
utils	MultiValueDict	__getitem__	key	returns the last data value for this key or [] if it's an empty list raises keyerror if not found
utils	MultiValueDict	get	key default	returns the last data value for the passed key if key doesn't exist
utils	MultiValueDict	_getlist	key default force_list	return a list of values for the key
utils	MultiValueDict	getlist	key default	return the list of values for the key if key doesn't exist return a
utils	MultiValueDict	appendlist	key value	appends an item to the internal list associated with key
utils	MultiValueDict	_iteritems		yields key value pairs where value is the last item in the list associated with the key
utils	MultiValueDict	_iterlists		yields key list pairs
utils	MultiValueDict	_itervalues		yield the last value on every key list
utils	MultiValueDict	copy		returns a shallow copy of this object
utils	MultiValueDict	update		update() extends rather than replaces existing key lists
utils	MultiValueDict	dict		returns current object as a dict with singular values
utils	DictWrapper	__getitem__	key	retrieves the real value after stripping the prefix string if present
utils		literals	choices prefix suffix	create a regex from a space-separated list of literal choices
utils	Lexer	lex	text	lexically analyze text
utils		prepare_js_for_gettext	js	convert the javascript source js into something resembling c for xgettext
utils		normalize	pattern	given a reg-exp pattern normalizes it to an iterable of forms that suffice for reverse matching
utils		next_char	input_iter	an iterator that yields the next character from "pattern_iter", respecting escape sequences
utils		walk_to_end	ch input_iter	the iterator is currently inside a capturing group we want to walk to the
utils		get_quantifier	ch input_iter	parse a quantifier from the input where "ch" is the first character in the quantifier
utils		contains	source inst	returns true if the "source" contains an instance of "inst" false
utils		flatten_result	source	turns the given source sequence into a list of reg-exp possibilities and their arguments
utils		urlquote	url safe	a version of python's urllib quote() function that can operate on unicode
utils		urlquote_plus	url safe	a version of python's urllib quote_plus() function that can operate on
utils		urlunquote	quoted_url	a wrapper for python's urllib unquote() function that can operate on
utils		urlunquote_plus	quoted_url	a wrapper for python's urllib unquote_plus() function that can operate on
utils		urlencode	query doseq	a version of python's urllib urlencode() function that can operate on
utils		cookie_date	epoch_seconds	formats the time to ensure compatibility with netscape's cookie standard
utils		http_date	epoch_seconds	formats the time to match the rfc1123 date format as specified by http rfc7231 section 7
utils		parse_http_date	date	parses a date format as specified by http rfc7231 section 7 1 1 1
utils		parse_http_date_safe	date	same as parse_http_date but returns none if the input is invalid
utils		base36_to_int	s	converts a base 36 string to an int raises valueerror if the
utils		int_to_base36	i	converts an integer to a base36 string
utils		urlsafe_base64_encode	s	encodes a bytestring in base64 for use in urls stripping any trailing equal signs
utils		urlsafe_base64_decode	s	decodes a base64 encoded string adding back any trailing equal signs that might have been stripped
utils		parse_etags	etag_str	parse a string of etags given in an if-none-match or if-match header as defined by rfc 7232
utils		quote_etag	etag_str	if the provided string is already a quoted etag return it otherwise wrap
utils		is_same_domain	host pattern	return true if the host is either an exact match or a match to the wildcard pattern
utils		is_safe_url	url host allowed_hosts require_https	return true if the url is a safe redirection (i e it doesn't point to
utils		_urlparse	url scheme allow_fragments	parse a url into 6 components <scheme>://<netloc>/<path>;<params>?<query>#<fragment>
utils		_urlsplit	url scheme allow_fragments	parse a url into 5 components <scheme>://<netloc>/<path>?<query>#<fragment>
utils		limited_parse_qsl	qs keep_blank_values encoding errors	return a list of key/value tuples parsed from query string
utils		colorize	text opts	returns your text enclosed in ansi graphics codes
utils		make_style	opts	returns a function with default parameters for colorize()
utils		parse_color_setting	config_string	parse a django_colors environment variable to produce the system palette the general form of a palette definition is
utils	SafeData	__html__		returns the html representation of a string for interoperability
utils	SafeBytes	__add__	rhs	concatenating a safe byte string with another safe byte string or safe unicode string is safe
utils	SafeBytes	_proxy_method		wrap a call to a normal unicode method up so that we return safe results
utils	SafeText	__add__	rhs	concatenating a safe unicode string with another safe byte string or safe unicode string is safe
utils	SafeText	_proxy_method		wrap a call to a normal unicode method up so that we return safe results
utils		mark_safe	s	explicitly mark a string as safe for html output purposes the returned
utils		mark_for_escaping	s	explicitly mark a string as requiring html escaping upon output has no
utils		parse_date	value	parses a string and return a datetime date
utils		parse_time	value	parses a string and return a datetime time
utils		parse_datetime	value	parses a string and return a datetime datetime
utils		parse_duration	value	parses a duration string and returns a datetime timedelta
utils		gen_filenames	only_new	returns a list of filenames referenced in sys modules and translation
utils		inotify_code_changed		checks for changed code using inotify after being called
utils		smart_text	s encoding strings_only errors	returns a text object representing 's' -- unicode on python 2 and str on python 3
utils		is_protected_type	obj	determine if the object instance is of a protected type
utils		force_text	s encoding strings_only errors	similar to smart_text except that lazy instances are resolved to strings rather than kept as lazy objects
utils		smart_bytes	s encoding strings_only errors	returns a bytestring version of 's', encoded as specified in 'encoding'
utils		force_bytes	s encoding strings_only errors	similar to smart_bytes except that lazy instances are resolved to strings rather than kept as lazy objects
utils		iri_to_uri	iri	convert an internationalized resource identifier iri portion to a uri portion that is suitable for inclusion in a url
utils		uri_to_iri	uri	converts a uniform resource identifier uri into an internationalized resource identifier iri
utils		escape_uri_path	path	escape the unsafe characters from the path portion of a uniform resource identifier uri
utils		repercent_broken_unicode	path	as per section 3 2 of rfc 3987 step three of converting a uri into an iri
utils		filepath_to_uri	path	convert a file system path to a uri portion that is suitable for inclusion in a url
utils		get_system_encoding		the encoding of the default system locale but falls back to the given fallback encoding if the encoding is unsupported by python or could
utils		escape	text	returns the given text with ampersands quotes and angle brackets encoded for use in html
utils		escapejs	value	hex encodes characters for use in javascript strings
utils		conditional_escape	text	similar to escape(), except that it doesn't operate on pre-escaped strings
utils		format_html	format_string	similar to str format but passes all arguments through conditional_escape
utils		format_html_join	sep format_string args_generator	a wrapper of format_html for the common case of a group of arguments that need to be formatted using the same format string and then joined using
utils		linebreaks	value autoescape	converts newlines into <p> and <br />s
utils		_strip_once	value	internal tag stripping utility used by strip_tags
utils		strip_tags	value	returns the given html with all tags stripped
utils		strip_spaces_between_tags	value	returns the given html with spaces between tags removed
utils		smart_urlquote	url	quotes a url if it isn't already quoted
utils		urlize	text trim_url_limit nofollow autoescape	converts any urls in text into clickable links
utils		avoid_wrapping	value	avoid text wrapping in the middle of a phrase by adding non-breaking spaces where there previously were normal spaces
utils		html_safe	klass	a decorator that defines the __html__ method this helps non-django
utils		import_string	dotted_path	import a dotted module path and return the attribute/class designated by the last name in the path
utils		autodiscover_modules		auto-discover installed_apps modules and fail silently when not present
utils		module_dir	module	find the name of the directory that contains a module if possible
utils		duration_string	duration	version of str timedelta which is not english specific
utils		method_decorator	decorator name	converts a function decorator into a method decorator
utils		decorator_from_middleware_with_args	middleware_class	like decorator_from_middleware but returns a function that accepts the arguments to be passed to the middleware_class
utils		decorator_from_middleware	middleware_class	given a middleware class not an instance returns a view decorator this
utils		available_attrs	fn	return the list of functools-wrappable attributes on a callable
utils		format	number decimal_sep decimal_pos grouping	gets a number as a number or string and returns it as a string using formats defined as arguments
utils		timesince	d now reversed	takes two datetime objects and returns the time between d and now as a nicely formatted string e
utils		timeuntil	d now	like timesince but returns a string measuring the time until the given time
utils	SimplerXMLGenerator	addQuickElement	name contents attrs	convenience method for adding an element with no children
utils		new_date	d	generate a safe date from a datetime date object
utils		new_datetime	d	generate a safe datetime from a datetime date or datetime datetime object
utils		upath	path	always return a unicode path
utils		npath	path	always return a native path that is unicode on python 3 and bytestring on python 2
utils		safe_join	base	joins one or more path components to the base path component intelligently
utils		symlinks_supported		a function to check if creating symlinks are supported in the host platform and/or if they are allowed to be created (e
utils		reset_format_cache		clear any cached formats
utils		iter_format_modules	lang format_module_path	does the heavy lifting of finding format modules
utils		get_format_modules	lang reverse	returns a list of the format modules found
utils		get_format	format_type lang use_l10n	for a specific format type returns the format for the current language locale defaults to the format in the settings
utils		date_format	value format use_l10n	formats a datetime date or datetime datetime object using a
utils		time_format	value format use_l10n	formats a datetime time object using a localizable format
utils		number_format	value decimal_pos use_l10n force_grouping	formats a numeric value using localization settings if use_l10n is provided and is not none that will force the value to
utils		localize	value use_l10n	checks if value is a localizable type date number and returns it
utils		localize_input	value default	checks if an input value is a localizable type and returns it formatted with the appropriate formatting string of the current locale
utils		sanitize_separators	value	sanitizes a value according to the current decimal and thousand separator setting
utils		get_version	version	returns a pep 440-compliant version number from version
utils		get_main_version	version	returns main version (x y[ z]) from version
utils		get_complete_version	version	returns a tuple of the django version if version argument is non-empty
utils		get_git_changeset		returns a numeric identifier of the latest git changeset
utils		capfirst	x	capitalize the first letter of a string
utils		wrap	text width	a word-wrap function that preserves existing line breaks expects that
utils	Truncator	chars	num truncate html	returns the text truncated to be no longer than the specified number of characters
utils	Truncator	_text_chars	length truncate text truncate_len	truncates a string after a certain number of chars
utils	Truncator	words	num truncate html	truncates a string after a certain number of words takes an optional
utils	Truncator	_text_words	length truncate	truncates a string after a certain number of words
utils	Truncator	_truncate_html	length truncate text truncate_len	truncates html to a certain number of chars not counting tags and comments or if words is true then to a certain number of words
utils		get_valid_filename	s	returns the given string converted to a string that can be used for a clean filename
utils		get_text_list	list_ last_word	>>> get_text_list(['a', 'b', 'c', 'd'])
utils		normalize_newlines	text	normalizes crlf and cr newlines to just lf
utils		phone2numeric	phone	converts a phone number with letters into its numeric equivalent
utils		smart_split	text	generator that splits a string by spaces leaving quoted phrases together
utils		unescape_string_literal	s	convert quoted string literals to unquoted strings with escaped quotes and
utils		slugify	value allow_unicode	convert to ascii if 'allow_unicode' is false convert spaces to hyphens
utils		camel_case_to_spaces	value	splits camelcase and converts to lower case also strips leading and
utils		_format_lazy	format_string	apply str format() on 'format_string' where format_string args
utils		is_iterable	x	a implementation independent way of checking for iterables
utils		get_tag_uri	url date	creates a taguri
utils	SyndicationFeed	add_item	title link description author_email	adds an item to the feed all args are expected to be python unicode
utils	SyndicationFeed	root_attributes		return extra attributes to place on the root (i e feed/channel) element
utils	SyndicationFeed	add_root_elements	handler	add elements in the root (i e feed/channel) element called
utils	SyndicationFeed	item_attributes	item	return extra attributes to place on each item (i e item/entry) element
utils	SyndicationFeed	add_item_elements	handler item	add elements on each item (i e item/entry) element
utils	SyndicationFeed	write	outfile encoding	outputs the feed in the given encoding to outfile which is a file-like object
utils	SyndicationFeed	writeString	encoding	returns the feed in the given encoding as a string
utils	SyndicationFeed	latest_post_date		returns the latest item's pubdate or updateddate if no items
utils	Enclosure	__init__	url length mime_type	all args are expected to be python unicode objects
utils		clean_ipv6_address	ip_str unpack_ipv4 error_message	cleans an ipv6 address string
utils		_sanitize_ipv4_mapping	ip_str	sanitize ipv4 mapping in an expanded ipv6 address
utils		_unpack_ipv4	ip_str	unpack an ipv4 address that was mapped in a compressed ipv6 address
utils		is_valid_ipv6_address	ip_str	ensure we have a valid ipv6 address
utils		_explode_shorthand_ip_string	ip_str	expand a shortened ipv6 address
utils		_is_shorthand_ip	ip_str	determine if the address is shortened
utils		patch_cache_control	response	this function patches the cache-control header by adding all keyword arguments to it
utils		get_max_age	response	returns the max-age from the response cache-control header as an integer (or none if it wasn't found or wasn't an integer
utils		_if_match_passes	target_etag etags	test the if-match comparison as defined in section 3 1 of rfc 7232
utils		_if_unmodified_since_passes	last_modified if_unmodified_since	test the if-unmodified-since comparison as defined in section 3 4 of
utils		_if_none_match_passes	target_etag etags	test the if-none-match comparison as defined in section 3 2 of rfc 7232
utils		_if_modified_since_passes	last_modified if_modified_since	test the if-modified-since comparison as defined in section 3 3 of rfc 7232
utils		patch_response_headers	response cache_timeout	add http caching headers to the given httpresponse expires and cache-control
utils		add_never_cache_headers	response	adds headers to a response to indicate that a page should never be cached
utils		patch_vary_headers	response newheaders	adds or updates the "vary" header in the given httpresponse object
utils		has_vary_header	response header_query	checks to see if the response has a given header name in its vary header
utils		_i18n_cache_key_suffix	request cache_key	if necessary adds the current locale or time zone to the cache key
utils		_generate_cache_key	request method headerlist key_prefix	returns a cache key from the headers given in the header list
utils		_generate_cache_header_key	key_prefix request	returns a cache key for the header cache
utils		get_cache_key	request key_prefix method cache	returns a cache key based on the request url and query it can be used
utils		learn_cache_key	request response cache_timeout key_prefix	learns what headers to take into account for some request url from the response object
utils	AdminEmailHandler	format_subject	subject	escape cr and lf characters
utils		_add_doc	func doc	add documentation to a function
utils		_import_module	name	import module returning the module after the last dot
utils	_SixMetaPathImporter	is_package	fullname	return true if the named module is a package
utils		add_move	move	add an item to six moves
utils		remove_move	name	remove item from six moves
utils		with_metaclass	meta	create a base class with a metaclass
utils		add_metaclass	metaclass	class decorator for creating a class with a metaclass
utils		python_2_unicode_compatible	klass	a decorator that defines __unicode__ and __str__ methods under python 2
utils		lazy	func	turns any callable into a lazy evaluated callable you need to give result
utils		lazystr	text	shortcut for the common case of a lazy callable that returns str
utils		keep_lazy		a decorator that allows a function to be called with one or more lazy arguments
utils		keep_lazy_text	func	a decorator for functions that accept lazy arguments and return text
utils	LazyObject	_setup		must be implemented by subclasses to initialize the wrapped object
utils	LazyObject	__getstate__		prevent older versions of pickle from trying to pickle the __dict__ which in the case of a simplelazyobject may contain a lambda
utils		unpickle_lazyobject	wrapped	used to unpickle lazy objects just return its argument which will be the
utils	SimpleLazyObject	__init__	func	pass in a callable that returns the object to be wrapped
utils		partition	predicate values	splits the values into two sets based on the return value of the function (true/false)
utils		extract	path to_path	unpack the tar or zip file at the specified path to the directory specified by to_path
utils	BaseArchive	_copy_permissions	mode filename	if the file in the archive has some permissions (this assumes a file won't be writable/executable without being readable), apply those
utils	BaseArchive	has_leading_dir	paths	returns true if all the paths have the same leading path name (i
utils	Node	__init__	children connector negated	constructs a new node if no connector is given the default will be
utils	Node	_new_instance	cls children connector negated	this is called to create a new instance of this class when we need new nodes or subclasses in the internal code in this class
utils	Node	__deepcopy__	memodict	utility method used by copy deepcopy()
utils	Node	__len__		the size of a node if the number of children it has
utils	Node	__bool__		for truth value testing
utils	Node	__contains__	other	returns true is 'other' is a direct child of this instance
utils	Node	add	data conn_type squash	combines this tree and the data represented by data using the connector conn_type
utils	Node	negate		negate the sense of the root connector
utils		deconstructible		class decorator that allow the decorated class to be serialized by the migrations subsystem
utils.translation		blankout	src char	change every non-whitespace character to the given char
utils.translation		templatize	src origin charset	turn a django template into something that is understood by xgettext it
utils.translation		reset_cache		reset global state when languages setting has been changed as some languages should no longer be accepted
utils.translation		to_locale	language to_lower	turns a language name en-us into a locale name (en_us) if 'to_lower' is
utils.translation		to_language	locale	turns a locale name (en_us) into a language name en-us
utils.translation	DjangoTranslation	__init__	language domain localedirs	create a gnutranslations() using many locale directories
utils.translation	DjangoTranslation	_new_gnu_trans	localedir use_null_fallback	returns a mergeable gettext gnutranslations instance
utils.translation	DjangoTranslation	_init_translation_catalog		creates a base catalog using global django translations
utils.translation	DjangoTranslation	_add_installed_apps_translations		merges translations from each installed app
utils.translation	DjangoTranslation	_add_local_translations		merges translations defined in locale_paths
utils.translation	DjangoTranslation	_add_fallback	localedirs	sets the gnutranslations() fallback with the default language
utils.translation	DjangoTranslation	merge	other	merge another translation into this catalog
utils.translation	DjangoTranslation	language		returns the translation language
utils.translation	DjangoTranslation	to_language		returns the translation language name
utils.translation		translation	language	returns a translation object in the default 'django' domain
utils.translation		activate	language	fetches the translation object for a given language and installs it as the current translation object for the current thread
utils.translation		deactivate		deinstalls the currently active translation object so that further _ calls will resolve against the default translation object again
utils.translation		deactivate_all		makes the active translation object a nulltranslations() instance this is
utils.translation		get_language		returns the currently selected language
utils.translation		get_language_bidi		returns selected language's bidi layout
utils.translation		catalog		returns the current active catalog for further processing
utils.translation		do_translate	message translation_function	translates 'message' using the given 'translation_function' name -- which will be either gettext or ugettext
utils.translation		gettext	message	returns a string of the translation of the message
utils.translation		gettext_noop	message	marks strings for translation but doesn't translate them now this can be
utils.translation		ngettext	singular plural number	returns a string of the translation of either the singular or plural based on the number
utils.translation		all_locale_paths		returns a list of paths to user-provides languages files
utils.translation		check_for_language	lang_code	checks whether there is a global language file for the given language code
utils.translation		get_languages		cache of settings languages in an ordereddict for easy lookups by key
utils.translation		get_supported_language_variant	lang_code strict	returns the language-code that's listed in supported languages possibly selecting a more generic variant
utils.translation		get_language_from_path	path strict	returns the language-code if there is a valid language-code found in the path
utils.translation		get_language_from_request	request check_path	analyzes the request to find what language the user wants the system to show
utils.translation		parse_accept_lang_header	lang_string	parses the lang_string which is the body of an http accept-language header and returns a list of lang q-value ordered by 'q' values
utils.translation		_string_concat		lazy variant of string concatenation needed for translations that are constructed from multiple parts
http	HttpRequest	_get_raw_host		return the http host using the environment or request headers skip
http	HttpRequest	get_host		return the http host using the environment or request headers
http	HttpRequest	get_port		return the port number for the request as a string
http	HttpRequest	get_signed_cookie	key default salt max_age	attempts to return a signed cookie if the signature fails or the
http	HttpRequest	get_raw_uri		return an absolute uri from variables available in this request skip
http	HttpRequest	build_absolute_uri	location	builds an absolute uri from the location and the variables available in this request
http	HttpRequest	_get_scheme		hook for subclasses like wsgirequest to implement returns 'http' by
http	HttpRequest	encoding	val	sets the encoding used for get/post accesses if the get or post
http	HttpRequest	parse_file_upload	META post_data	returns a tuple of post querydict files multivaluedict
http	HttpRequest	_load_post_and_files		populate self _post and self _files if the content-type is a form type
http	QueryDict	fromkeys	cls iterable value mutable	return a new querydict with keys may be repeated from an iterable and values from value
http	QueryDict	copy		returns a mutable copy of this object
http	QueryDict	urlencode	safe	returns an encoded string of all query string arguments
http		bytes_to_text	s encoding	converts basestring objects to unicode using the given encoding illegally
http		split_domain_port	host	return a domain port tuple from a given host
http		validate_host	host allowed_hosts	validate the given host for this site
http		parse_cookie	cookie	return a dictionary parsed from a cookie header string
http	MultiPartParser	__init__	META input_data upload_handlers encoding	initialize the multipartparser object
http	MultiPartParser	parse		parse the post data and break it into a files multivaluedict and a post multivaluedict
http	MultiPartParser	handle_file_complete	old_field_name counters	handle all the signaling that takes place when a file is complete
http	MultiPartParser	IE_sanitize	filename	cleanup filename from internet explorer full paths
http	LazyStream	__init__	producer length	every lazystream must have a producer when instantiated
http	LazyStream	__next__		used when the exact number of bytes to read is unimportant
http	LazyStream	close		used to invalidate/disable this lazy stream
http	LazyStream	unget	bytes	places bytes back onto the front of the lazy stream
http	LazyStream	_update_unget_history	num_bytes	updates the unget history as a sanity check to see if we've pushed back the same number of bytes in one chunk
http	BoundaryIter	_find_boundary	data eof	finds a multipart boundary in data
http		exhaust	stream_or_iterable	exhaust an iterator or stream
http		parse_boundary_stream	stream max_header_size	parses one and exactly one stream that encapsulates a boundary
http		parse_header	line	parse the header into a key-value
http	HttpResponseBase	serialize_headers		http headers as a bytestring
http	HttpResponseBase	_convert_to_charset	value charset mime_encode	converts headers key/value to ascii/latin-1 native strings
http	HttpResponseBase	has_header	header	case-insensitive check for a header
http	HttpResponseBase	set_cookie	key value max_age expires	sets a cookie
http	HttpResponseBase	setdefault	key value	sets a header unless it has already been set
http	HttpResponseBase	make_bytes	value	turn a value into a bytestring encoded in the output charset
http	HttpResponse	serialize		full http message including headers as a bytestring
apps	Apps	populate	installed_apps	loads application configurations and models
apps	Apps	check_apps_ready		raises an exception if all apps haven't been imported yet
apps	Apps	check_models_ready		raises an exception if all models haven't been imported yet
apps	Apps	get_app_configs		imports applications and returns an iterable of app configs
apps	Apps	get_app_config	app_label	imports applications and returns an app config for the given label
apps	Apps	get_models	include_auto_created include_swapped	returns a list of all installed models
apps	Apps	get_model	app_label model_name require_ready	returns the model matching the given app_label and model_name
apps	Apps	is_installed	app_name	checks whether an application with this name exists in the registry
apps	Apps	get_containing_app_config	object_name	look for an app config containing a given object
apps	Apps	get_registered_model	app_label model_name	similar to get_model(), but doesn't require that an app exists with the given app_label
apps	Apps	get_swappable_settings_name	to_string	for a given model string (e g "auth user"), return the name of the
apps	Apps	set_available_apps	available	restricts the set of installed apps used by get_app_config[s]
apps	Apps	unset_available_apps		cancels a previous call to set_available_apps()
apps	Apps	set_installed_apps	installed	enables a different set of installed apps for get_app_config[s]
apps	Apps	unset_installed_apps		cancels a previous call to set_installed_apps()
apps	Apps	clear_cache		clears all internal caches for methods that alter the app registry
apps	Apps	lazy_model_operation	function	take a function and a number of ("app_label", "modelname") tuples and when all the corresponding models have been imported and registered
apps	Apps	do_pending_operations	model	take a newly-prepared model and pass it to each function waiting for it
apps	AppConfig	_path_from_module	module	attempt to determine app's filesystem path from its module
apps	AppConfig	create	cls entry	factory that creates an app config from an entry in installed_apps
apps	AppConfig	get_model	model_name require_ready	returns the model with the given case-insensitive model_name
apps	AppConfig	get_models	include_auto_created include_swapped	returns an iterable of models
apps	AppConfig	ready		override this method in subclasses to run code when django starts
