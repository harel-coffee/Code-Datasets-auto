arg	placeholder needed ||| placeholder params	count=1
arg	cursor is ||| cursor	count=1
module	key ||| backends	count=1
function	decorator that ||| html safe	count=1
class	be converted to a ||| field	count=1
function	a manytomanyfield related objects ||| m2m field	count=1
function	attempts to add a ||| add	count=1
class	engine definitions (structured ||| engine	count=1
arg	name value ||| value	count=1
function	available datetimes ||| datetimes	count=1
arg	raises a validationerror containing ||| exclude	count=1
function	next interval ||| next year	count=1
module	a ||| backends	count=3
arg	with flags ||| flags	count=1
function	remove [function_2] ||| [function_1] [function_2]	count=1
function	select [function_2] ||| [function_1] [function_2]	count=2
class	the order ||| set	count=1
module	transaction ||| db backends base	count=2
arg	given ||| form	count=1
class	the results from ||| query set	count=1
function	modelform ||| save form	count=2
module	backends that support ||| backends	count=1
class	records useful if ||| recorder	count=1
module	returns a list of ||| translation	count=1
arg	specified path ||| path	count=1
arg	class method to parse ||| cls parser	count=1
class	a warning if ||| base	count=1
class	i e ||| format	count=3
module	for ||| utils	count=3
arg	databases is an ||| databases	count=1
function	creation ||| creation	count=1
module_class	[module_1] linestring ||| [class_2] [module_1]	count=5
function	debug ||| debug	count=1
function	a json string ||| string	count=1
arg	[arg_1] too ||| [arg_1] [arg_2]	count=2
class	this form ||| base form	count=1
module	number whether the ||| contrib	count=1
function	true if the given ||| is	count=1
arg	url and ||| url	count=1
module	in the urlconf ||| views	count=1
module	being files ||| files	count=1
function	null ||| type null	count=1
function	manager [function_2] ||| [function_2] [function_1]	count=1
class	check for a ||| response base	count=1
function	a cache ||| cache	count=2
function	filter clause but ||| filter	count=1
function	a token that ||| token	count=1
module	this accessor retrieves ||| gis db models	count=1
arg	a localizable [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] point ||| [function_2] [function_1]	count=5
function	admins ||| admins	count=1
arg	given django model ||| model	count=1
module	decorator ||| decorators	count=1
module	of 'year', 'month' or ||| db backends	count=1
module	of this ||| contrib gis geos	count=2
function	[function_1] [function_2] the database connection ||| [function_2] [function_1]	count=3
class	library used ||| gisoperations	count=1
class	form at ||| form	count=1
module	of ||| gis	count=20
module	so [module] geo_format attribute ||| [module] gis	count=1
class	an optional ||| connection	count=1
function	last insert [function] as part ||| return insert [function]	count=1
class	queryset uses the date ||| date list	count=1
module	code and returns the ||| contrib gis geos	count=1
function	flattening for ||| flattening	count=1
arg	given lookup ||| opts lookup	count=1
function	("app_label", "modelname") tuples and ||| lazy	count=1
function	a unique name ||| index name	count=1
function	aware [function_2] ||| [function_2] [function_1]	count=2
module	run the ||| contrib	count=1
function	handle [function_2] ||| [function_1] [function_2]	count=4
function	rolling [function] given ||| savepoint [function]	count=1
arg	encoded and ||| password encoded	count=1
class	for the ||| base model form	count=1
function_arg	[function_1] [arg_2] same leading path ||| [function_1] [arg_2]	count=4
function	items this accepts ||| items	count=1
function	check that [function_2] ||| [function_1] [function_2]	count=1
arg	all files ||| ignore_patterns	count=1
function	last accessed time as ||| accessed time	count=1
module	a transaction and resets ||| db backends	count=1
function	as [function_2] ||| [function_1] [function_2]	count=3
arg	x ||| x	count=1
function	writes them out as ||| write	count=1
class	form instance ||| form	count=1
module	backends ||| cache backends	count=1
arg	takes a project_state representing ||| project_state	count=1
function	allowed [function_2] ||| [function_2] [function_1]	count=3
module	be either a ||| db models	count=1
function	and adds its information ||| add srs entry	count=1
arg	an x-header ||| view_func view_args view_kwargs	count=1
arg	y ||| y	count=1
class	the order ||| form set	count=1
module	point at the ||| contrib	count=1
function	available dates for ||| dates	count=1
function	of the ||| get	count=1
function	httpresponse ||| patch vary	count=1
module	with long (> 30 ||| backends	count=1
function	http [function] ||| get [function]	count=3
arg	returns a securely generated ||| length allowed_chars	count=1
arg	single message ||| message from_email	count=1
function	have ||| operation	count=1
function	for the m2m table ||| get m2m	count=1
module	with elements ||| db backends	count=1
function	get the context for ||| get context data	count=1
function_arg	handle [arg_2] ||| [function_1] [arg_2]	count=3
function	httpresponse object ||| patch	count=1
function	header in the given ||| vary headers	count=1
arg	an ||| f	count=1
function	[function_1] this user ||| [function_1] [function_2]	count=2
module	and returns the ||| contrib gis geos	count=1
arg	given cursor ||| cursor	count=1
function	a list of choices ||| choices	count=1
function	sql [function_2] ||| [function_2] by name [function_1]	count=1
function_arg	[function_1] geometry according ||| [arg_2] [function_1]	count=1
function	[function_1] fields ||| [function_1] [function_2]	count=13
class	or not this handler ||| file upload handler	count=1
module_class	[module_1] datum ||| [module_1] base spatial ref [class_2]	count=1
function	and registered ||| operation	count=1
function	returns a ||| locale	count=1
arg	the error ||| result func cargs	count=1
arg	change is true if ||| form change	count=1
function	the app ||| template	count=1
module_class	[module_1] session store ||| [module_1] sessions backends [class_2]	count=2
function	range of pages ||| page range	count=1
function	not null field ||| ask not null	count=4
class	for ||| user settings holder	count=2
function	in the ||| patch	count=1
function	[function_1] [function_2] spatial parameters necessary for ||| [function_1] [function_2] prep	count=1
class	factor suggested [class] ||| [class]	count=1
function	names of all actions ||| actions	count=1
module_class	if this [class_2] ||| [module_1] [class_2]	count=5
module	migrations have ||| migrations	count=1
arg	from value ||| value	count=1
arg	if the request method ||| request	count=1
function_arg	filter_vertical is a ||| filter vertical obj	count=1
function	for ||| init	count=1
class	class are satisfied ||| settings holder	count=1
module	the return_geom ||| contrib gis gdal prototypes	count=1
class	engine ||| base engine	count=1
class	app or project ||| template	count=1
class	day of ||| date	count=3
arg	parameters given the value ||| value	count=1
module	or updates ||| utils	count=1
function	objects [function_2] ||| [function_1] [function_2]	count=1
arg	[arg_1] the cursor ||| [arg_2] [arg_1]	count=8
class	the module ||| user settings	count=1
function	new ||| create	count=1
arg	all members ||| recipient_list	count=1
arg	field [arg_2] ||| status [arg_1] [arg_2]	count=1
class	of this expression ||| base expression	count=1
function	paths to user-provides ||| all locale paths	count=1
module	the oracle error ||| db backends oracle	count=1
class	an ||| set	count=2
arg	given encoding as ||| encoding	count=1
arg	updates ||| response	count=1
module	files ||| files	count=1
arg	[arg] will ||| name opts [arg]	count=3
arg	is ||| request form	count=1
function	data to the ||| data	count=1
function	spatial reference for ||| get srs	count=1
function	file for self ||| file	count=1
function_arg	[function_1] update_pk is ||| [arg_2] [function_1]	count=1
arg	a changes dict ||| changes	count=1
function	[function_1] 2 ||| [function_1] [function_2]	count=1
module	via the remoteuserbackend ||| contrib auth	count=1
class	an ||| handler	count=1
arg	[arg] this layer ||| [arg]	count=3
function	history as ||| history	count=1
function_arg	disconnect [arg_2] ||| [function_1] [arg_2]	count=4
module	content and returns ||| gis	count=1
arg	object has been successfully ||| request object	count=2
class	sunday ||| date	count=1
function	range ||| page range	count=1
module	from an admin ||| contrib admin	count=1
module	guaranteed ||| sessions backends	count=1
function	hash of the file ||| file hash	count=1
module	the polygon ||| contrib gis db backends	count=1
module	the wkt ||| contrib gis	count=1
module	identifier ||| backends postgresql	count=1
class	this ||| set	count=2
arg	[arg_1] z ||| [arg_2] [arg_1]	count=3
module	dictionary mapping command names ||| core management	count=1
module	models to ||| models	count=1
arg	in the instance ||| instance	count=1
function	load all [function_2] ||| [function_2] [function_1]	count=3
arg	source sequence into a ||| source	count=1
module	by the ||| contrib gis geos	count=1
class	[class_1] spatial ||| [class_2] [class_1]	count=1
class	unsaved ||| admin	count=1
function	returns a list ||| get list	count=3
arg	checking on routines ||| func cargs	count=1
function	cache ||| cache	count=8
class	if possible ||| user	count=1
function	returns the [function_1] [function_2] ||| [function_2] [function_1]	count=8
class	are satisfied from ||| user settings holder	count=1
module	and ensures that it ||| utils	count=1
function_arg	[function_1] message ||| messages [function_1] request level [arg_2] extra_tags	count=2
arg	from key_salt ||| key_salt	count=1
module	this queryset ||| db	count=1
arg	the given character limit ||| limit	count=1
function	or ||| handle	count=1
module	returns only the ||| contrib gis	count=1
module	a list of ||| management commands	count=1
arg	handler ||| request exception template_name	count=1
module_class	[module_1] [class_2] they should be rendered ||| [module_1] [class_2] iter	count=2
function	sql version ||| sql	count=1
function	[function_1] save this ||| [function_1] [function_2]	count=6
function	[function_1] something modified ||| [function_1] [function_2]	count=1
function	permission enabled ||| permission	count=1
function_arg	prepopulated_fields is ||| prepopulated fields obj	count=1
class	when all ||| apps	count=1
module	a list ||| core management commands	count=1
class	module specified in ||| settings holder	count=1
module	and views that ||| backends base	count=1
function	return ||| get field name	count=1
class	and ||| database	count=1
module	fields instance of the ||| fields	count=1
module	other methods ||| cache	count=1
function	the union of all ||| union	count=1
function	[function_1] classes ||| [function_2] [function_1]	count=1
module	to [module] other ||| [module]	count=1
class	this query with a ||| query	count=1
function	updates ||| vary headers	count=2
class	the template and context ||| template response	count=1
module	template and renders it ||| template	count=1
function	tables ||| tables	count=1
function	attempts ||| ensure registered	count=2
module	returns none if no ||| db	count=2
function	ordering ||| ordering	count=5
function	injects openlayers javascript into ||| media	count=1
arg	[arg] that ||| password [arg]	count=3
class	given a ||| admin	count=1
module	that tries getting the ||| decorators	count=1
arg	is unavailable use ||| arg	count=1
module	the envelope ||| contrib	count=1
function	initial data to ||| initial	count=1
class	geometry is ||| geometry mixin	count=1
module	optional dictionary ||| db	count=1
function	a valid ipv6 ||| is valid ipv6	count=2
class	from the module ||| settings holder	count=1
module	[module_1] which can ||| [module_1] [module_2]	count=1
class	session key and the ||| session	count=1
function_arg	[function_1] given httpresponse ||| [function_1] [arg_2]	count=2
function	field in an envelope ||| envelope	count=1
function	helps non-django ||| safe	count=1
class	field ||| model choice field	count=1
function	decrypt ||| unsalt	count=1
function	checks whether the ||| check query	count=1
module	to all models when ||| models sql	count=1
class	removes ||| base database schema editor	count=1
arg	a datatuple ||| datatuple	count=1
function	parse a list of ||| parse apps	count=1
arg	model and all ||| model	count=1
class	for the ||| base model form set	count=1
function	and either the ||| process view	count=1
function	delete the queryset in ||| delete	count=1
module	some versions of oracle ||| db backends oracle	count=1
function	non-django ||| safe	count=1
arg	a queryset ||| format queryset	count=1
function	and returns an existing ||| existing	count=1
function	the expiry ||| expiry	count=1
class	the ||| model form set	count=1
class	decimal ||| decimal field	count=4
function	saves ||| save	count=4
module	admin ||| admin	count=2
arg	message to the admins ||| message fail_silently connection	count=1
function	its vary header ||| vary header	count=2
function	ft*******, f**t***** or f***t**** ||| touches	count=1
class	model ||| base model form set	count=1
module	the specified index/slice ||| contrib gis	count=1
arg	don't yet exist ||| child parent skip_validation	count=1
module	and views ||| db backends base	count=1
class	field's width ||| image field	count=1
module	for point_count ||| gdal	count=1
arg	a value in the ||| value timeout version	count=1
function_arg	passed obj ||| to string obj	count=1
class	raw [class_2] ||| [class_1] query [class_2] using alias	count=1
class	app or project templates ||| command	count=1
module	python sqlite3 [module_2] ||| [module_1] [module_2]	count=1
function	most recent savepoint ||| savepoint	count=1
module	routine [module] ||| [module]	count=1
function	blocks until the ||| wait for	count=2
function	a single expression using ||| expression	count=1
arg	[arg_1] <label>, if ||| [arg_2] [arg_1]	count=2
class	for configuration ||| holder	count=1
module	tuple with elements ||| db backends	count=1
function	over ||| results iter	count=1
arg	library into the parser ||| parser	count=1
arg	a message [arg_2] ||| [arg_2] level [arg_1] extra_tags	count=1
function	name of ||| timezone name	count=1
function	login page ||| to login	count=1
function	given httpresponse ||| patch vary	count=1
function	negate the sense ||| negate	count=1
class	applying this queryset ||| query	count=1
function_arg	compile [arg_2] ||| [arg_2] [function_1]	count=3
module	dictionary of ||| db backends oracle	count=1
arg	value in a field ||| value	count=1
function_arg	formset [arg_2] ||| [arg_2] [function_1]	count=4
module	converts an integer to ||| humanize templatetags	count=1
arg	confirmation if the ||| verbosity autoclobber serialize keepdb	count=1
function	sql string and ||| sql	count=4
function	value as [function_2] ||| [function_1] [function_2]	count=1
function	minimum pixel value for ||| min	count=1
module_class	of [class_2] ||| [module_1] [class_2]	count=12
arg	determines where the ||| subdir	count=1
module	from views and ||| sqlite3	count=1
module	this method ||| gis db	count=1
class	(structured ||| connection handler	count=2
module	the same ||| contrib	count=1
class	find ||| directories finder	count=1
function	the corresponding models have ||| lazy	count=1
class	[class_1] file ||| [class_2] [class_1]	count=1
function	search and ||| search	count=1
function_arg	filter_horizontal is ||| filter horizontal obj	count=1
module	and related ||| backends	count=1
module	blocks of rows from ||| models	count=1
arg	httpresponse [arg_2] ||| [arg_2] [arg_1]	count=1
function	adds or ||| vary headers	count=1
arg	the given case-insensitive model_name ||| model_name require_ready	count=1
module	the points in this ||| contrib gis gdal	count=1
function	a dict containing the ||| dict	count=1
function	[function_1] if field ||| [function_1] [function_2]	count=1
function	that attaches a geometry ||| geom	count=1
function	po [function_2] ||| [function_1] [function_2]	count=4
function	generates a unique name ||| index name	count=1
function	context ||| update	count=1
module	easy lookups ||| utils translation	count=1
arg	in template_dirs ||| template_name template_dirs	count=1
module	returns ||| contrib gis	count=3
module	dictionary mapping models to ||| db models	count=1
function	user's username ||| username	count=1
class	the upload ||| upload	count=1
function	[function_1] dimension of ||| [function_2] [function_1]	count=1
arg	that ||| text	count=1
class	opposite ||| query	count=1
arg	ensures [arg_2] ||| [arg_2] [arg_1]	count=6
arg	field is [arg_2] ||| [arg_2] [arg_1]	count=1
arg	extracting positional ||| params varargs	count=1
class	tuples ||| command	count=1
class	numeric i e '0' ||| date	count=1
module	geometry or raster ||| gis db	count=1
module	[module] a ||| template [module]	count=2
function	[function_1] [function_2] for the ||| [function_1] [function_2]	count=6
function	or project templates ||| handle	count=1
class	a cookie returning a ||| cookie	count=1
module	the found absolute ||| contrib	count=1
module	will be used to ||| db models	count=1
function	geometry type ogrgeomtype ||| geom type	count=2
function	number of points in ||| len	count=2
module	transaction and resets the ||| db backends base	count=1
module	a list of the ||| contrib	count=1
function	serializing of an object ||| object	count=1
function	this helps ||| html safe	count=1
arg	[arg_1] request ||| [arg_2] level [arg_1] extra_tags	count=2
module_class	field [class_2] ||| [module_1] [class_2]	count=4
function	number of points ||| points	count=1
function_arg	update [arg_2] ||| [function_1] [arg_2]	count=1
module	for backends that return ||| backends base	count=1
function	[function_1] [function_2] in strptime syntax to ||| [function_1] [function_2]	count=4
arg	message [arg_2] ||| [arg_2] [arg_1]	count=2
class	spatial column ||| spatial field	count=2
function	fields of the ||| fields	count=1
function	language ||| language	count=5
function	into [function] ||| [function]	count=3
arg	from an entry ||| entry	count=1
module	and ||| sessions backends	count=1
function	new instance [function_2] ||| [function_2] [function_1]	count=4
module_class	forms [class_2] ||| [module_1] [class_2] iter	count=3
class	in this site ||| site	count=1
function	[function_1] x ||| [function_2] [function_1]	count=1
class	the week numeric ||| date	count=1
class	value on every key ||| multi value	count=1
function	all ||| operation	count=1
function	foreign keys ||| foreign keys	count=2
module	fields in this ||| gdal	count=2
function	string and then joined ||| html	count=1
module	tests for ||| gis	count=1
arg	appropriate ||| protocol	count=1
function	or updates the po ||| po	count=1
function	language the user wants ||| get language	count=1
function	path to the migrations ||| migrations	count=1
function	[function_1] an ipv6 ||| [function_1] [function_2]	count=1
function	field's [function_2] ||| [function_1] [function_2]	count=4
function	[function] that joins ||| get [function] info with	count=1
function_arg	lookup from [arg_2] ||| [function_1] [arg_2]	count=1
arg	in table_names for ||| table_names	count=2
module	given a ||| contrib	count=1
module	list of ||| core management	count=1
function	style object with ||| style	count=1
module	class ||| conf	count=1
function	removes ||| remove	count=5
class	connection ||| database wrapper	count=2
module	and that the field ||| contrib admin	count=1
module	intersection of ||| gis	count=1
function	key while retaining ||| cycle key	count=2
function	edited object represented by ||| edited object	count=1
function	returns a [function_1] [function_2] name ||| [function_1] [function_2] name model model_admin return_attr	count=1
function	[function_1] the mask ||| [function_2] [function_1]	count=1
function	a name ||| suggest name	count=1
function	returns a response using ||| response	count=1
arg	this is used ||| obj	count=1
module	year i ||| utils	count=1
module	directory file ] ||| core management	count=1
module	of datetime ||| models	count=1
arg	each message to ||| fail_silently	count=1
module	helps ||| utils	count=1
module	view protection ||| views decorators	count=1
function	an app ||| app	count=1
function	ordering field [function_2] ||| [function_2] [function_1]	count=1
class	the given database tables ||| base database operations	count=1
module	some backends require ||| db backends base	count=1
function	to not null ||| not null	count=2
arg	is found in ||| css_selector	count=2
arg	instance to ||| instance	count=1
function	the given [function] depends ||| [function]	count=1
arg	space-separated ||| extra_classes	count=1
function	unordered [function] -- ||| unordered [function]	count=1
module	form sql ||| sql	count=1
module	directly (if the return_geom ||| contrib gis gdal prototypes	count=1
module	that [module] ||| [module]	count=1
class	is not bound or ||| bound field	count=1
class	migration instance false ||| migration executor	count=1
function_arg	radio_fields [arg_2] ||| [arg_2] [function_1]	count=3
function	when ||| lazy model	count=1
class	an optional ||| handler	count=1
arg	returns ||| arg	count=1
class	database ||| database	count=14
function	all objects [function_2] ||| [function_2] [function_1]	count=3
function	saving into ||| db prep save	count=1
function	to the stack ||| update	count=1
function	can ||| can	count=2
function_arg	[function_1] objs in ||| [function_1] del batches [arg_2]	count=1
function	[function_1] items this ||| [function_2] [function_1]	count=5
function	format string in strptime ||| format	count=2
function	adds ||| add srs	count=1
module	this method allows escaping ||| gis	count=1
module	that returns ||| gis	count=1
module	for the given criteria ||| contrib	count=1
function	parse and [function] the template ||| [function]	count=1
module_class	of this polygon ||| gdal polygon	count=1
class	template and context ||| simple template response	count=1
arg	flag so that the ||| session_key	count=1
arg	and a secret (which ||| secret	count=1
module	for customizing the number ||| contrib admin	count=1
module	decorator ||| views decorators	count=1
module	the ||| contrib sessions backends	count=4
module	quoted version [module] the ||| [module]	count=1
function	returns a dict ||| get	count=1
module	redirect after the ||| contrib admin	count=1
class	current database ||| database introspection	count=3
arg	bunch of keys from ||| keys version	count=1
function	uncaught exceptions those that ||| handle uncaught	count=1
module	mysql from ||| mysql	count=1
module	a string ||| utils	count=1
class	handler ||| handler	count=1
function	class to use in ||| class	count=2
class	clear the session ||| session	count=1
function	vary header of ||| vary on	count=1
module	may take the ||| contrib	count=1
class	instance ||| model	count=1
module	raster with ||| db	count=1
module	the urlconf ||| views	count=1
arg	function that returns ||| result func	count=1
class	sunday to ||| date	count=1
module	of (column_name referenced_table_name ||| db backends sqlite3	count=1
class	date ||| date	count=3
arg	http request's ||| environ	count=1
class	given connection where no ||| connection	count=1
class	postgresql object identification integers ||| post gisintrospection	count=1
module	returns true if ||| gis	count=1
function	[function_1] an object ||| [function_1] [function_2]	count=2
function	a dict containing ||| dict	count=1
function	name of [function_2] ||| [function_2] [function_1]	count=9
function	modelform return ||| save form	count=1
class	root connector ||| node	count=1
module	for this [module_2] ||| [module_2] [module_1]	count=4
class	up ||| geo query	count=1
class	spatial lookup values are ||| base spatial	count=1
arg	encoding to [arg_2] ||| [arg_2] [arg_1]	count=6
function	sorted [function_2] ||| [function_2] [function_1]	count=3
function	names of ||| names	count=1
module	backends require ||| backends	count=1
class	of the ||| node	count=1
class	entry ||| entry	count=2
module	identified by the css ||| contrib	count=1
function	given *models returns a ||| get for	count=1
arg	number of ||| num truncate	count=1
arg	exception ||| exception	count=2
module_class	[module_1] geometry ||| [class_2] [module_1]	count=50
function	same format string ||| format html join	count=2
function	[function_1] 404 error ||| [function_1] [function_2]	count=3
function	information for display ||| info	count=1
module	hook for customizing the ||| contrib admin	count=2
function	parse a ||| parse apps and	count=1
arg	a message to the ||| message fail_silently	count=2
function	list of ||| all locale	count=1
function	to model ||| model	count=1
function	help message for ||| help	count=1
module	the data ||| contrib	count=1
function	value if the ||| value	count=1
function	on save this method ||| on save	count=1
class	given [class] ||| [class]	count=2
module	does not end with ||| db models	count=1
arg	the name of ||| name	count=1
class	this query with ||| query	count=1
module	for customizing the ||| contrib admin	count=4
class	object ||| database operations	count=1
function	permission_denied_message ||| permission denied message	count=1
arg	named module ||| fullname	count=1
function_arg	a shortened [arg_2] ||| [function_1] [arg_2]	count=1
function	geometry type ogrgeomtype of ||| geom type	count=1
function	the po [function_2] ||| [function_1] [function_2]	count=4
module	this ||| geos	count=4
class	settings ||| settings	count=2
function	[function_1] modified since ||| [function_1] [function_2]	count=1
arg	when automatic column selection ||| field_names	count=1
function	symmetric ||| sym	count=1
class	definitions ||| connection	count=1
function	year [function] in strptime ||| get year [function]	count=1
function	as a string ||| string	count=1
class	geometry to ||| ogrgeometry	count=1
module	checks if the given ||| contrib auth	count=1
function	in the given ||| patch vary headers	count=1
function	get the context ||| get context data	count=2
class	helper routine for calling ||| gisoperations	count=1
module	into this ||| db models	count=1
module	the user is ||| contrib admindocs	count=1
module	the sense of ||| utils	count=1
arg	inline formsets and a ||| formsets	count=1
function	deserialize ||| deserialize	count=1
module	backends that support returning ||| db backends	count=1
class	from the ||| settings	count=1
module	true if the ||| db models	count=1
module	root connector ||| utils	count=1
class	is safe ||| safe	count=2
function	[function_1] union ||| [function_2] [function_1]	count=2
arg	a function that returns ||| result func cargs offset	count=1
module	that the field ||| contrib admin	count=1
module	and returns [module_2] ||| [module_1] [module_2]	count=1
arg	plural based ||| plural	count=1
arg	character in ||| ch input_iter	count=1
module	mapping command names to ||| management	count=1
module	converting [module] ||| [module] gis db backends	count=3
module	ordinates with the given ||| contrib	count=1
module	checks ||| gis gdal prototypes	count=1
module	management ||| core management	count=1
function	absolute url where the ||| url	count=1
function	a number of ||| lazy	count=1
module	user to the ||| auth	count=1
module	] ||| core	count=1
class	has ||| selenium test case	count=1
function	models have been ||| lazy model	count=1
function_arg	to add [arg_2] ||| [arg_2] [function_1]	count=5
function	raw input ||| raw input	count=1
module	is set on the ||| contrib	count=1
module	major minor [module] revision ||| [module]	count=1
class	tuples ||| apps	count=1
function	the untranslated verbose ||| verbose	count=1
function	creates a test database ||| create test db	count=1
class	list of dates ||| base date list view	count=1
arg	null placeholder ||| placeholder	count=1
function	the [function] of the ||| postgis proj [function]	count=1
module	whether a user has ||| auth	count=1
module	other methods ||| cache backends	count=1
function	base64 for use in ||| base64 encode	count=1
class	the file and ||| file	count=1
module	the given c arguments ||| contrib gis gdal prototypes	count=1
function	foreignkey ||| verify fk	count=1
arg	pushes other_dict to the ||| other_dict	count=1
function	releases a savepoint ||| savepoint	count=1
module	clause ||| db models sql	count=2
function	redirect to ||| redirect	count=1
function	[function_1] save ||| [function_2] [function_1]	count=6
arg	to the name ||| name	count=1
arg	attribute of an ||| attribute	count=1
function	returns sets ||| sort as sets	count=1
module	results from applying this ||| db models	count=1
function	css [function_2] ||| [function_2] [function_1]	count=2
function	and a number of ||| model operation	count=1
module	given a modelform ||| contrib admin	count=1
module	should be ||| staticfiles management	count=1
function	postgis ||| postgis types	count=1
module	in ||| template	count=1
function	the geometry ||| geom	count=1
function	directory file ||| messages	count=1
function	a dangling connection ||| temporary connection	count=2
module	of [module_2] ||| [module_1] [module_2]	count=36
function	[function_1] function to ||| [function_1] [function_2]	count=1
class	[class_1] [class_2] ||| [class_2] form [class_1]	count=1
function	week for ||| week	count=1
function	a valid ipv6 ||| valid ipv6	count=1
function	adds or ||| patch	count=1
function	a list of ||| compile	count=1
function	in a kml ||| kml	count=1
arg	returns context variables ||| request	count=1
module	a method on the ||| contrib	count=1
function	a list of template ||| template	count=1
function_arg	queryset or [arg_2] ||| [arg_2] [function_1]	count=1
module	units of [module_2] ||| [module_2] [module_1]	count=1
class	for this [class_2] ||| [class_1] [class_2]	count=3
function	future ||| future	count=1
function	the prefix to ||| get prefix	count=1
module	about the geoip ||| contrib gis geoip	count=1
function	of the names of ||| names	count=1
function_arg	[function_1] value to ||| models sql update query [function_1] related update model [arg_2]	count=1
class	we return safe ||| safe	count=2
function	[function_1] class ||| [function_2] [function_1]	count=10
class	data from the given ||| operations	count=1
function_arg	[function_1] exception should ||| [arg_2] [function_1]	count=6
function	a string representation of ||| str	count=1
function	filesystem path [function_2] ||| [function_2] [function_1]	count=2
module	pixel values for this ||| gis gdal	count=1
class	this queryset ||| query	count=1
module	the results from ||| models	count=1
class	helper function ||| selenium test	count=2
function	modelform return an ||| form	count=1
function_arg	dict containing [arg_2] ||| [function_1] [arg_2]	count=1
arg	wkb buffer ||| wkb	count=1
function	[function] should be ||| include empty [function]	count=3
arg	checks if ||| request	count=1
arg	given lhs ||| lookups lhs	count=1
module	list of tuples ||| core management commands	count=1
class	calling ||| gisoperations	count=1
function	a new ||| new	count=2
module_class	[module_1] geometry ||| [module_1] [class_2] eq other	count=2
function	current time zone to ||| from current timezone	count=1
arg	is a sequence without ||| obj	count=1
function_arg	to add [arg_2] ||| messages [function_1] [arg_2]	count=2
module	of 'year', 'month' or ||| db	count=1
class	[class] they should ||| [class]	count=2
arg	[arg_1] format ||| [arg_2] [arg_1]	count=8
class	or ||| geo	count=1
function	for trim ||| trim	count=1
function	object ||| headers	count=1
class	for the choices ||| choice field	count=1
function	union of all ||| union	count=1
module	an ||| db models	count=5
function	the statement to create ||| create	count=1
function	get the ||| get date	count=1
class	e '0' sunday ||| date	count=1
function	requisite number ||| format number	count=1
arg	a single ||| from_email	count=1
function	when all the corresponding ||| lazy model	count=1
function	paths ||| all locale paths	count=1
arg	of fields ||| fields	count=1
function	recent savepoint ||| savepoint	count=1
function	that returns a ||| output	count=3
function_arg	name [arg_2] ||| [arg_2] [function_1]	count=3
class	the geometry ||| geometry	count=1
module	of the geographic field ||| contrib	count=1
module	yields blocks of rows ||| db models sql	count=1
arg	according to ||| arg	count=1
arg	return ||| request form	count=1
arg	of fields or ||| fields	count=1
function	system [function_2] ||| [function_1] [function_2]	count=1
arg	and a secret ||| value secret	count=1
function	that returns a geometry ||| geom output	count=1
function	database schema in ||| database	count=2
arg	is a localizable type ||| use_l10n	count=1
module	matrix for [module] ||| [module]	count=3
module	(for example if the ||| contrib gis	count=1
module	and returns a ||| db backends base	count=1
module	the set of fields ||| db models sql	count=1
function	parent ||| parent	count=1
arg	in template_dirs ||| template_dirs	count=1
function	of the [function] ||| postgis [function]	count=1
function	string and ||| html join	count=1
function	version of [function_2] ||| [function_2] [function_1]	count=4
function	queryset that ||| queryset	count=1
arg	value prepared for ||| value connection	count=1
function	cleans a ||| clean	count=1
class	in the cache if ||| base cache	count=1
arg	type uniqueness nullability default ||| model old_field new_field strict	count=1
function	path to a ||| path	count=1
class	return a list of ||| list filter	count=1
class	to the database ||| base database	count=2
arg	email [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	return the [arg_2] ||| [function_1] next year [arg_2]	count=3
module	return the given ||| contrib sessions	count=1
function	length ||| name length	count=2
class	spatial fields ||| spatial field	count=1
module	opposite ||| models	count=1
function	static prefix settings ||| static prefix	count=2
arg	[arg_1] compatible with ||| [arg_2] [arg_1]	count=1
function_arg	since the [arg_2] ||| [function_1] [arg_2]	count=1
arg	given field ||| compiler field	count=1
function	a string representation ||| str	count=1
module	on results from ||| db models	count=1
module	to all models when ||| db models sql	count=1
function	[function_1] to time ||| [function_2] [function_1]	count=4
function	all [function_2] ||| [function_1] [function_2] email_messages	count=4
module	list of ||| db backends	count=3
module	postgis raster format ||| postgis	count=1
module	cookie ||| messages storage	count=1
class	objects into memory so ||| nested objects	count=1
module	checks whether a user ||| auth	count=1
function	for introspected [function_2] ||| [function_1] [function_2]	count=2
class	the list of dates ||| date list view	count=1
function	header ||| has header	count=1
function	[function_1] default value ||| [function_1] [function_2]	count=1
function	[function_1] georss point ||| [function_2] [function_1]	count=1
class	from the given ||| operations	count=1
module	[module] <ul> ||| [module]	count=1
arg	[arg] characters ||| [arg]	count=1
module	helpful extra ||| views	count=1
class	associated with ||| generic relation	count=1
arg	returns [arg_2] ||| [arg_2] [arg_1]	count=2
function	return the field ||| get	count=1
arg	of key/value pairs ||| data timeout version	count=1
class	requests for ||| settings holder	count=1
module	sessions ||| sessions	count=1
class	directory file ||| command	count=1
function	authorizes a user ||| user	count=1
function	executed by the ||| executed	count=1
function	allowed to [function_2] ||| [function_2] [function_1]	count=4
function	this model ||| model	count=2
function	a not ||| not	count=2
class	the given django model ||| base model	count=2
module	sense of the ||| utils	count=1
function_arg	[function_1] [arg_2] ||| [function_1] outfile [arg_2]	count=6
module	code and returns ||| gis geos	count=1
arg	the time zone for ||| timezone	count=1
arg	wherenode for a single ||| filter_expr branch_negated current_negated can_reuse	count=1
function	the initial value if ||| value	count=1
module	queryset ||| db models	count=4
function	the related field's ||| field	count=1
function	[function_1] shortened ||| [function_1] [function_2]	count=1
function	and ||| full	count=1
function	[function_1] log for ||| [function_2] [function_1]	count=4
function	extent of this geometry ||| extent	count=1
function_arg	form [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	settings [arg_2] ||| [arg_2] [function_1]	count=1
module	the given parameter ||| contrib gis geos	count=1
function	save this form's self ||| save	count=1
class	initialize a single email ||| email	count=1
function	name [function_2] ||| [function_2] [function_1]	count=7
class	subclasses [class] object ||| [class]	count=1
module	of values generate ||| db models sql	count=1
module	on the ||| models	count=2
module	and [module_2] ||| [module_2] gis [module_1]	count=3
function	use it to decrypt ||| unsalt	count=1
function	field in a gml ||| gml	count=1
function	to a ||| to	count=1
module	this user ||| contrib auth	count=1
module	or project ||| core management	count=1
arg	given time zone ||| timezone	count=2
function	adding a salt ||| salt	count=1
function	string model references ||| references	count=1
module	of database definitions ||| db	count=1
arg	form's initial keyword argument ||| fields exclude	count=1
module	which can ||| core	count=1
function	index with ||| index sql	count=1
function_arg	[function_1] cursor ||| [function_1] query [arg_2]	count=1
class	true if the settings ||| settings	count=1
function	[function_1] of annotations ||| [function_2] [function_1]	count=4
arg	string like python's str ||| value arg autoescape	count=1
function	[function_1] a warning ||| [function_2] [function_1]	count=1
module	a layer at the ||| contrib gis gdal	count=1
module	variation of ||| db	count=1
function_arg	name of [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] which lists ||| [function_1] [arg_2]	count=1
arg	is a dictionary containing ||| obj	count=1
arg	scoped to 'kind' ||| kind order	count=1
function	or project ||| template	count=1
function	checks each table name ||| check	count=2
function	list_max_show_all ||| list max show all	count=1
function	insert [function] as part ||| return insert [function]	count=1
class	a ||| wrapper	count=1
function	set [function_2] ||| [function_2] [function_1]	count=16
module	return an unsaved instance ||| contrib admin	count=1
arg	if ||| perm	count=1
arg	instance ||| form instance fields exclude	count=1
function_arg	namespaces [arg_2] ||| [function_1] resolver [arg_2]	count=1
arg	a year ||| year year_format month month_format	count=1
module	set on the client ||| contrib sessions	count=1
class	has ||| test case	count=1
arg	contents ||| contents	count=1
class	returns the last data ||| multi	count=1
function	topology operations takes a ||| topology	count=1
function_arg	matches any [arg_2] ||| [function_1] path [arg_2]	count=1
module	geometries in the ||| contrib	count=1
function	execute ||| execute	count=2
function	script ||| script	count=1
module	stddev and ||| backends sqlite3	count=1
function	is expected by ||| adapt	count=3
class	datum ||| sys mixin	count=1
module	based on the ||| models	count=1
module	in the urlconf ||| generic	count=1
module	the given geometry field ||| gis	count=1
module	the ||| contrib	count=388
arg	a modelform return ||| request form	count=1
class	linestring ||| line string	count=6
arg	using values from ||| using	count=1
class	new session ||| session	count=1
function	a search ||| search	count=1
arg	and a year ||| year year_format month	count=1
function	name ||| index name	count=1
function	[function_1] the y ||| [function_1] [function_2]	count=1
module	of [module_2] ||| [module_2] [module_1]	count=26
class	or datetime ||| time field	count=1
function	specifying custom readonly ||| readonly	count=1
arg	ignore_patterns) ||| patterns	count=1
function	a point geometry guaranteed ||| point on	count=1
function	[function] (i e ||| [function]	count=3
arg	if update_pk ||| using fields update_pk	count=1
class	settings the ||| settings	count=1
arg	by the given cursor ||| cursor sql params	count=1
arg	[arg_1] has changed ||| status [arg_1] [arg_2]	count=3
function	list of ||| messages	count=1
arg	arg [arg_2] ||| [arg_2] [arg_1]	count=2
function	create an [function_2] ||| [function_2] [function_1]	count=5
function	[function_1] of this ||| [function_1] for [function_2]	count=3
module	the dirty ||| db	count=1
function_arg	the css [arg_2] ||| [function_1] value selector [arg_2]	count=4
module	returns none because ||| gis	count=1
function	to time value ||| time	count=1
class	deep-clone ||| model	count=1
module	"modelname") ||| apps	count=1
function	makes alter ||| alter	count=1
class	any ||| migration autodetector	count=1
function	union ||| or	count=2
module	and ||| db backends oracle	count=5
function	be used to descend ||| related descend	count=1
function	coordinate dimension ||| coord dim	count=1
module	essentially the opposite ||| db models	count=1
module	easy lookups ||| utils	count=1
module	field's ||| db models fields	count=1
function	field of ||| field	count=1
module	a dictionary mapping models ||| db models	count=1
function	as an integer ||| as int	count=2
function	handle the ||| handle	count=1
class	where clause ||| where	count=1
class	every form in self ||| base form set	count=1
arg	in the ||| value	count=3
class	for the given ||| base	count=4
function_arg	[function_1] given lhs ||| [arg_2] [function_1]	count=3
function	list of paths ||| all locale paths	count=1
module	the given criteria ||| contrib admin	count=1
arg	the tables ||| tables	count=1
arg	[arg] that don't ||| [arg]	count=1
function	paths ||| paths	count=1
function	aware datetime object in ||| datetime from	count=1
module	return the ||| contrib gis geos	count=1
module	method to customize the ||| contrib auth	count=1
function	the primary [function_2] ||| [function_2] [function_1]	count=3
arg	the paths have the ||| paths	count=1
function	generate new pk values ||| get pk value	count=1
function	post process ||| post process	count=2
module	of the database ||| contrib gis db backends	count=1
module	[module_1] admin urls ||| [module_1] [module_2]	count=8
function	namespaces used in applications ||| namespaces	count=1
module	if the original ||| contrib gis geos	count=1
function	return the union of ||| union	count=1
function	that ||| html	count=1
class	return ||| database introspection	count=2
module	decorator that ||| decorators	count=1
class	engine definitions (structured ||| engine handler	count=1
arg	connection_reset is true, django ||| connection_reset	count=1
class	date field by default ||| date list	count=1
function	given httpresponse object ||| headers	count=1
module	other methods by default ||| core cache backends	count=1
module	models ||| models sql	count=4
class	"modelname") tuples and ||| apps	count=1
function	a model's ||| alter db	count=1
function	up a model from ||| get model	count=1
arg	model is [arg_2] ||| [arg_1] target_opts [arg_2]	count=1
function	inverse [function_2] ||| [function_2] [function_1]	count=2
function	field in the ||| field	count=2
class	geographic column ||| geo query set	count=1
module	returns a 3-tuple of ||| gis sitemaps	count=1
module_class	[module_1] point ||| [module_1] [class_2]	count=1
module	override this method if ||| contrib auth	count=1
class	date or datetime ||| date time field	count=1
class	associated with this field's ||| generic relation	count=1
arg	change is true if ||| change	count=1
class	dictionary mapping each ||| query set	count=1
module_class	of [class_2] ||| [module_1] [class_2] get	count=3
function	tuple version ||| tuple	count=1
module	returns ||| gis db backends postgis	count=6
function	of points in the ||| num points	count=1
function	root ||| root	count=1
function	[function_1] sequence ||| [function_2] [function_1]	count=1
class	this class are ||| user	count=1
function	tuples and ||| operation	count=1
function_arg	[function_1] wherenode for ||| [function_1] filter [arg_2]	count=1
function	[function_1] type ogrgeomtype ||| [function_2] [function_1]	count=3
function	data ||| data	count=4
class	inline forms ||| inline model admin	count=2
module	other methods by ||| core cache backends	count=2
arg	view this is used ||| obj	count=1
arg	email [arg_2] ||| [arg_1] [arg_2]	count=1
class	list of ||| list	count=2
function	the admin url ||| get admin url	count=2
function	this is [function] if ||| is [function]	count=1
module	fields instance of ||| db models fields	count=1
function	returns the [function] ||| [function]	count=2
module	get the ||| contrib	count=2
function	permission_required attribute ||| get permission required	count=1
module	migrations prior ||| migrations	count=1
function	an extended [function_2] ||| [function_1] [function_2]	count=2
function	load [function_2] ||| [function_2] [function_1]	count=4
function	the corresponding ||| operation	count=1
module	are satisfied ||| conf	count=1
function	check that the ||| check	count=2
arg	and :param locale ||| potfile locale	count=2
class	not bound or ||| bound field	count=1
module	sends ||| core mail	count=4
arg	key_salt and ||| key_salt value	count=1
function	url in ||| url	count=2
function	adds or ||| patch vary headers	count=1
class	within this node ||| node	count=1
function	languages files ||| locale	count=1
function	[function_1] queryset that ||| [function_1] [function_2]	count=1
arg	for routines that ||| result func cargs	count=1
class	not this handler ||| file upload handler	count=1
module	range of different ||| models fields	count=1
function	fail silently ||| fail	count=1
class	gives this loader ||| loader	count=1
module	(structured ||| db	count=1
arg	attribute of ||| attribute	count=1
module	urlconf can contain helpful ||| generic	count=1
module	query ||| models sql	count=6
function	[function] operator given ||| [function]	count=2
class	[class] and raises ||| [class]	count=1
function	test ||| prepare test	count=1
module	the dirty flag ||| backends base	count=1
class	the number of email ||| base email backend	count=1
module	of parent ||| models	count=1
function	a locale ||| locale	count=1
class	utility ||| gislookup	count=1
function	serialized ||| value to string	count=1
function	httpresponse ||| patch vary headers	count=2
function_arg	[function_1] sequence comprising ||| [function_1] meta [arg_2]	count=1
class	the email [class_2] ||| [class_2] [class_1]	count=1
module	the type ||| contrib admin	count=1
class	used ||| choice	count=1
module	set on the client ||| contrib sessions backends	count=1
function	of choices for ||| action choices	count=1
function	a list ||| messages	count=1
function	many-to-one ||| many	count=1
module	backends don't ||| backends	count=1
function	modification time ||| modification	count=1
class	if ||| user	count=1
module	get ||| views generic	count=1
arg	initialize the multipartparser object ||| meta input_data upload_handlers encoding	count=1
function	lookup from given ||| build lookup	count=1
module	authenticated via the ||| contrib auth	count=1
function	for easy lookups ||| get	count=1
module	dictionary mapping the ||| contrib admin	count=1
function	number [function_2] ||| [function_1] [function_2]	count=2
module	for the ||| base	count=1
class	variables not in this ||| settings	count=1
function	an ordereddict of ordering ||| ordering	count=1
function	the media ||| get media	count=2
function	technical ||| technical	count=1
function	new instance of ||| instance	count=1
function	related models ||| related	count=1
module	] ||| core management	count=1
arg	if needed ||| page_size	count=1
class	not in ||| user settings holder	count=1
module	and returns ||| db backends	count=1
arg	a field_name [arg_2] ||| [arg_1] [arg_2]	count=3
arg	if line a ||| line	count=1
function	class setup ||| setup	count=1
arg	paths have ||| paths	count=1
class	that fields only refer ||| model admin checks	count=1
module	bytes of the ||| core	count=1
module	deletes the ||| contrib	count=1
module	of geometries if ||| db models	count=1
arg	geoqueryset ||| precision version	count=1
function	of points [function_2] ||| [function_2] [function_1]	count=8
module	the model ||| contrib gis	count=1
function_arg	link [arg_2] ||| [arg_2] [function_1]	count=1
class	up ||| query	count=1
module	interface returns ||| backends	count=1
arg	sender for ||| sender weak	count=2
function_arg	[function_1] is ||| [function_1] [arg_2]	count=14
module	layers within the ||| contrib	count=1
function	define the name ||| name	count=1
module	some backends require special ||| backends base	count=1
arg	this field should be ||| field	count=1
module	of different ||| db models	count=1
module	but with a ||| backends	count=1
arg	string depending ||| compiler sql	count=1
module	for the given ||| backends base	count=1
class	the given django model ||| model admin	count=2
function	into a json string ||| to string	count=1
function	will be interpolated ||| get readable field data	count=1
arg	of keys [arg_2] ||| [arg_2] [arg_1]	count=2
function	region of intersection ||| intersection	count=1
module_class	[module_1] [class_2] ||| [module_1] generic [class_2]	count=9
module	string for this ||| gdal	count=1
function	fields to [function_2] ||| [function_2] [function_1]	count=1
class	a ||| data	count=1
arg	instance ||| instance commit	count=1
function	the [function_1] [function_2] ||| [function_2] [function_1]	count=14
module	in the context ||| template	count=1
class	into this ||| query	count=1
arg	to the arg ||| arg	count=1
arg	string with the requisite ||| max_digits decimal_places	count=1
function	return a list of ||| get action	count=1
module	authenticates against django's auth ||| auth	count=1
function	destroy a [function_2] ||| [function_1] [function_2]	count=4
class	from applying ||| query set	count=1
module	converts the type ||| contrib admin	count=1
function	with a non-zero reference ||| active	count=1
arg	which ||| parameters verbosity	count=1
class	for certain ||| base	count=1
module	all the points in ||| contrib gis	count=1
module	of ||| models	count=20
function	to the login page ||| login	count=1
function	config [function_2] ||| [function_2] [function_1]	count=4
module	the data ||| contrib gis gdal	count=1
function	the dated ||| get dated	count=1
function	to user-provides languages files ||| locale	count=1
module	routine for checking the ||| contrib gis geoip	count=1
class	zeros i e '1' ||| date	count=1
class	without leading ||| date format	count=1
function	locale name (en_us) if ||| to locale	count=1
module	the information in the ||| contrib sessions backends	count=1
function	number of layers within ||| len	count=1
module	for translation but ||| utils translation	count=2
function	the module ||| init	count=1
function	sql expression that ||| sql	count=1
function	been imported and ||| model	count=1
arg	attribute of an dom ||| attribute	count=1
arg	[arg] an ||| model [arg]	count=2
function	string value ||| value to string	count=1
function	of comparison ||| converter	count=1
class	leading zeros i ||| date format	count=1
module	[module_1] current instance ||| [module_1] [module_2]	count=8
function	certain number of chars ||| text chars	count=1
function_arg	keys [arg_2] ||| [arg_2] [function_1]	count=2
function	for a database field ||| field	count=1
function	a modelform return an ||| save	count=1
class	returns ||| database introspection	count=2
arg	the exception ||| exception	count=2
function	return an ||| form	count=1
function	given field [function_2] ||| [function_1] [function_2]	count=3
module	fields ||| fields	count=2
module	be ||| admin	count=1
function_arg	the passed [arg_2] ||| [function_1] string [arg_2]	count=1
module	the user in ||| contrib auth	count=2
function_arg	datetimes for [arg_2] ||| [function_1] [arg_2]	count=2
class	to the database is ||| database	count=1
function	type name ||| type name	count=2
module_class	[module_1] the order ||| [module_1] [class_2]	count=3
function	[function_1] current language ||| [function_1] [function_2]	count=2
module	with the ||| contrib gis geoip2	count=1
function	to update the ||| update	count=1
function	symlinks ||| symlinks	count=1
module	a sequence or string ||| utils	count=1
function	media required to ||| media	count=1
function_arg	[function_1] attribute ||| [arg_2] [function_1]	count=6
function	start [function_2] ||| [function_1] [function_2]	count=2
function	a preprocessed copy ||| cleanup	count=1
function	checks the status ||| check	count=1
class	a ||| base command	count=2
module_class	of this linestring ||| gdal line string	count=1
function_arg	[function_1] request displays ||| [arg_2] [function_1]	count=3
function	make an aware datetime ||| datetime	count=1
arg	have been resolved ||| apps ignore	count=1
module	a list ||| core	count=1
arg	"vary" header in ||| response newheaders	count=1
module	ogrinspect ||| gis utils	count=1
function	path from its ||| path from	count=2
module	true if the given ||| contrib admin	count=1
function	key greater than ||| key culling	count=2
function	related ||| related	count=2
module	some backends require special ||| db backends base	count=1
function	aware ||| make aware	count=2
function	georss point with the ||| georss point	count=1
arg	request url from the ||| request	count=1
module	the return_geom keyword is ||| contrib gis gdal prototypes	count=1
function	id for ||| id	count=1
class	given an ip address ||| ip	count=1
module	[module_1] api documentation ||| [module_1] [module_2]	count=8
function	fields on the ||| fields	count=1
function	range of ||| page range	count=1
module	oracle doesn't ||| db backends oracle	count=1
function	an ||| decode	count=1
class	a transaction and ||| base database wrapper	count=1
class	template rendered ||| template response	count=1
module	models when ||| models	count=1
module	rendered on the ||| contrib	count=1
arg	lookup ||| lookup	count=1
class	[class_1] error ||| [class_2] [class_1]	count=3
function	model_name) tuples [function] models ||| get [function] models	count=1
class	queryset to the ||| query set	count=1
arg	field field_name to a ||| field_name	count=1
function_arg	[function_1] in table_names ||| [function_1] [arg_2]	count=2
module	log the user in ||| contrib auth	count=1
arg	a source ||| source	count=1
class	major minor subminor ||| post gisoperations	count=1
function	a georss point ||| georss point	count=2
class	been imported and registered ||| apps	count=1
arg	field from a ||| field	count=2
function	have been imported and ||| model operation	count=1
function	lookup from ||| lookup	count=1
module	the login_url ||| contrib	count=1
function	form field for a ||| formfield for	count=2
arg	field ||| compiler field	count=1
function	latest git changeset ||| git changeset	count=1
class	helper function ||| selenium test case	count=2
function	in name ||| name	count=1
module	[module_1] view with ||| [module_2] [module_1]	count=2
function	keyword arguments for ||| kwargs	count=2
arg	given encoding to ||| encoding	count=1
arg	the given ||| plan	count=1
function	checks each table ||| check constraints	count=2
function	[function_1] [function_2] ||| [function_1] object [function_2]	count=4
arg	routines that return ||| result func cargs	count=1
arg	inline formsets ||| request form formsets change	count=1
function	key columns ||| key columns	count=6
arg	supplied key ||| key	count=1
function	attempts to add a ||| add message	count=1
module	transaction and ||| db backends	count=1
function	an iterable of app ||| app	count=1
arg	is a related field ||| field	count=1
module	be ||| models	count=3
function	field's name ||| field name	count=2
function	same format [function_2] ||| [function_2] [function_1]	count=4
function	interval [function_2] ||| [function_2] [function_1]	count=6
function	search form ||| search form	count=1
class	model ||| model	count=12
class	reverse relation ||| reverse one to one descriptor	count=1
arg	routines ||| result func cargs	count=2
class	database ||| database creation	count=4
function	name to use ||| name	count=1
module	date ||| db models fields	count=1
class	the where clause and ||| where	count=1
arg	checking for routines ||| result func cargs	count=1
class	feed in ||| syndication feed	count=1
function	makes sure the test ||| test	count=1
arg	returns true if ||| other	count=1
class	if this query ||| query	count=1
class	lazystream ||| lazy stream	count=1
arg	retrieves ||| mode	count=1
function	information dictionary ||| info	count=1
module	the equivalent attributes on ||| contrib contenttypes	count=1
class	column [class_2] ||| [class_2] spatial [class_1]	count=1
arg	lineno ||| lineno	count=1
class	and its dictionary mapping ||| layer mapping	count=1
function	deferred fields for this ||| deferred fields	count=1
arg	the field to ||| field	count=1
class	spatial ||| spatia lite operations	count=1
function	list ||| compile messages	count=1
function	use as a default ||| get default	count=1
arg	msgs contents previously making ||| msgs	count=1
function	the kml representation ||| kml	count=1
function	adds a [function_2] ||| [function_1] [function_2]	count=4
arg	attempt to ||| prefixed_path source_storage	count=2
function	checks ||| checkindex	count=1
arg	if signature ||| key salt	count=1
class	check ||| database wrapper	count=2
module	sql template and ||| db backends	count=1
arg	the mutation on the ||| app_label schema_editor from_state to_state	count=1
function	a cache [function_2] ||| [function_1] [function_2]	count=3
arg	[arg_1] [arg_2] ||| [arg_1] target_opts [arg_2]	count=3
function_arg	[function_1] receiver ||| [arg_2] [function_1]	count=2
function	list of all table ||| table	count=1
function	[function] files ||| list [function]	count=3
arg	boolean indicating [arg_2] ||| [arg_2] [arg_1]	count=1
module	all models when ||| models	count=1
function	length of ||| length	count=1
arg	given language ||| language	count=1
module	of the month without ||| utils	count=1
module_class	[module_1] [class_2] parser ||| [module_1] [class_2]	count=1
module	the [module_2] ||| [module_1] [module_2]	count=63
module	of the ||| utils	count=4
function	format ||| format	count=5
function	on [function_2] ||| [function_1] [function_2]	count=4
module	transaction and ||| db	count=1
class	decimal places ||| decimal field	count=1
function	a connection to the ||| connection	count=1
function_arg	native [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	[function_1] files not ||| [function_1] datadict data [arg_2]	count=1
class	of database ||| handler	count=1
class	given connection ||| connection	count=1
module_class	this polygon ||| geos polygon	count=1
arg	exception should be the ||| exception	count=1
class	or has ||| admin	count=1
function_arg	[function_1] exception ||| [arg_2] [function_1]	count=6
function	language the user ||| get language from	count=1
arg	and context cache ||| context	count=1
arg	messages after trying ||| messages	count=1
function	a number of ("app_label", ||| lazy	count=1
class	variables not ||| user settings	count=1
module	the geographic field in ||| contrib	count=1
function	layer metadata ||| layer	count=1
function	of tuples [ ||| compile messages	count=1
class	requests ||| settings holder	count=2
module	contain helpful ||| views generic	count=1
class	current session ||| session	count=1
class	a cache ||| cache	count=1
function	fail silently if ||| fail	count=1
function	contains ||| contains	count=1
function	escape ||| escape	count=1
function	the initial value ||| value	count=1
function	given a modelform ||| save form	count=1
arg	or ||| queryset	count=1
function	of the file ||| file	count=1
function	do custom preparation ||| prepare	count=1
function	test database prompting the ||| create test	count=1
module	postgresql ||| postgresql	count=1
class	errorlist for this field ||| bound field	count=1
arg	if update_pk is defined ||| manager using fields update_pk	count=1
function	datatuple ||| send mass mail	count=1
arg	cursor with ||| cursor sql	count=1
class	case-insensitive check for ||| response base	count=1
module	to user-provides ||| utils	count=1
function	current thread ||| activate	count=1
function_arg	connect receiver ||| connect receiver	count=1
arg	klass ||| klass	count=1
function	the symmetric [function_2] ||| [function_2] [function_1]	count=1
function	removes each ||| remove	count=1
function	contenttype object for ||| for	count=1
function	if the encoding ||| encoding	count=1
module	that returns ||| gis gdal prototypes	count=1
function	have been imported ||| model operation	count=1
function	[function_1] for ||| [function_2] [function_1]	count=13
function	content for the ||| content	count=2
module	a decorator that ||| utils	count=1
function	of the [function] ||| [function]	count=3
function	create a style ||| style	count=1
function	greater than the n ||| culling	count=1
class	app directories ||| app directories finder	count=2
module	instance ||| admin	count=1
function	internal setup ||| setup	count=1
class	without ||| format	count=1
function	the type ||| type	count=1
class	an ||| query set	count=2
function	in a perimeter ||| perimeter	count=1
function	changed code ||| code changed	count=2
arg	if update_pk is ||| manager using fields update_pk	count=1
class	a list ||| list filter	count=1
function	content [function_2] ||| [function_1] [function_2]	count=1
arg	for routines that return ||| result func cargs	count=1
class	connection was ||| base database wrapper	count=1
function	precision an integer ||| precision	count=1
module	in the ||| contrib staticfiles	count=2
class	form at the given ||| form	count=1
function	through model ||| through model	count=1
class	mapping this ||| mapping	count=1
function	test ||| create test	count=2
function	or ||| if unusable or	count=1
module	the current ||| views	count=1
class	definitions (structured ||| connection	count=1
function	[function_1] block ||| [function_2] [function_1]	count=2
module	for checking the ||| contrib gis	count=2
class	dirty ||| base	count=1
class	file object ||| file	count=1
function	to user-provides languages ||| locale	count=1
module_class	sends the email ||| core mail email	count=1
function	last modified time as ||| modified time	count=1
module_class	usually 2 but can [module_1] [class_2] pop-ups opening other pop-ups ||| [module_1] [class_2]	count=2
function	out as [function_2] ||| [function_2] [function_1]	count=2
function	given html with ||| strip	count=1
module_class	[module_1] [class_2] equal to ||| [module_1] [class_2]	count=2
function	to start a ||| start	count=1
module	parse ||| core management	count=1
function	an absolute url ||| url	count=1
class	before migrating a ||| base database wrapper	count=1
function	returns the relative path ||| path	count=1
arg	delta to value in ||| delta version	count=1
module	string for this ||| gis gdal	count=1
function	the query last executed ||| last executed query	count=1
module	rows of values generate ||| db models	count=1
function	primary key for the ||| primary key	count=1
function	of ("app_label", "modelname") ||| lazy	count=1
module	version [module] ||| [module] backends	count=1
arg	into clickable links ||| autoescape	count=1
module	a list of tuples ||| management	count=1
module	can ||| views	count=1
module	returns true ||| gis db models	count=1
function	with the passed post ||| post	count=1
class	deep-clone ||| model state	count=2
arg	datatuple ||| datatuple	count=1
class	of table ||| database operations	count=1
function	given type ||| type	count=1
class	associated with this ||| generic relation	count=1
function	updates the po file ||| write po file	count=1
module	whether the given ||| contrib auth	count=2
arg	[arg_1] is ||| [arg_2] [arg_1]	count=4
class	a number of ("app_label", ||| apps	count=1
arg	a function ||| func cargs	count=2
module	point in the ||| contrib gis gdal	count=1
module	returns a tuple ||| gis	count=3
function	stored in a length ||| length	count=1
function	combine a list ||| combine	count=1
function	return a signed ||| get signed	count=2
class	(structured like ||| handler	count=1
function	[function_1] foreign keys ||| [function_2] [function_1]	count=2
function	blocks until the value ||| wait for value	count=1
module	this will return ||| gis utils	count=1
class	the connection ||| wrapper	count=1
function	handler ||| handler	count=1
module	backends can ||| db backends base	count=3
module	the given ||| contrib gis geoip	count=1
arg	queryset or ||| format queryset	count=1
function	returns a dictionary mapping ||| get	count=1
module	the module specified ||| conf	count=1
module_class	spatial [class_2] ||| [module_1] spatial [class_2]	count=2
function	try to execute ||| execute	count=1
module	returns a dictionary of ||| db backends	count=1
function	sql statements [function_2] ||| [function_2] [function_1]	count=5
arg	request's ||| environ	count=1
function	[function] of the ||| [function]	count=3
class	week numeric ||| format	count=1
function	the next interval ||| next day	count=1
arg	path that ||| path	count=1
class	of this geometry ||| geometry	count=1
function	location returning ||| find location	count=1
arg	the mutation on ||| app_label schema_editor from_state to_state	count=1
function_arg	renders [arg_2] ||| [function_1] string template_name context [arg_2]	count=3
module	a number of ("app_label", ||| apps	count=1
function	[function_1] [function_2] ||| [function_1] cast [function_2]	count=10
class	definitions (structured like settings ||| handler	count=1
arg	given language and ||| language	count=1
module	returns true if this ||| gis db models	count=1
module	transaction ||| db	count=1
module	to perform the ||| contrib	count=1
class	the date field by ||| date	count=1
function	to override uncaught ||| uncaught	count=1
arg	alias ||| alias	count=1
arg	full_plan ||| state plan full_plan	count=1
function	[function_1] sorted ||| [function_1] [function_2]	count=1
module	a number of ||| apps	count=1
function_arg	encoding [arg_2] ||| [arg_2] [function_1]	count=1
module	and its nodelist ||| template	count=1
module_class	to this geometry ||| gis gdal geometry	count=1
class	model instance the ||| base model admin	count=2
function	backend ||| backend	count=1
class	file object if it ||| file input	count=1
function	locale name ||| to locale	count=1
class	queryset is ||| set	count=1
arg	is used ||| obj	count=1
module	customize the ||| contrib	count=1
module	this queryset to the ||| db	count=1
module	geosgeometry object from this ||| gdal	count=1
module	to c geos geometry ||| geos prototypes	count=1
class	of fieldset[1]['fields'] for ||| base model admin checks	count=1
function	relatedfield ||| forward related	count=1
module	the database ||| contrib gis db	count=1
arg	value is unavailable use ||| value arg	count=1
module	mapping command ||| management	count=1
class	year ||| date format	count=1
function	backend based upon ||| get backend	count=1
module	lines and returns a ||| db backends	count=1
function	intersection of this ||| intersection	count=1
module	for customizing [module_2] ||| [module_1] [module_2]	count=4
class	of the week ||| date format	count=1
function	in ||| write	count=1
arg	updates the "vary" header ||| newheaders	count=1
class	the cache [class_2] ||| [class_2] [class_1]	count=8
class	size of a node ||| node	count=1
function	name ||| col name	count=1
function	hash of ||| hash	count=1
class	an order_by() ||| query set	count=1
function	[function] rfc7231 ||| parse [function]	count=3
module	opening [module] ||| [module]	count=1
function	field's name this ||| field name	count=2
class	files called from collectstatic ||| hashed files	count=1
function_arg	template [arg_2] ||| [function_1] [arg_2]	count=4
function	union of this multipolygon ||| union	count=1
class	this geometry ||| linear geometry mixin	count=1
module	are ||| core management	count=2
function	max number of extra ||| max num	count=1
function	in a special way ||| backend	count=1
function	return a value ||| get	count=1
class	the file ||| file	count=2
class	model instance ||| model	count=4
module	override ||| auth	count=1
arg	it with ||| request using	count=1
function_arg	cache key [arg_2] ||| [function_1] [arg_2]	count=1
module	but can [module] ||| [module]	count=1
module	directly (if the ||| contrib	count=1
function	clears [function_1] [function_2] (but not extra_select columns) ||| [function_2] [function_1]	count=1
module	command names to ||| management	count=1
class	table names ||| base database introspection	count=1
function	a library ||| library	count=1
class	unit attribute name for ||| base	count=1
function	[function_1] date ||| [function_1] [function_2]	count=1
module	tuples [ ||| commands	count=1
class	this class ||| user settings	count=1
function	include ||| include	count=1
module	by the css ||| contrib admin	count=1
function	implement the search ||| search	count=1
class	form adding and ||| form	count=1
arg	header ||| response	count=1
function_arg	from [arg_2] ||| [function_1] datadict data [arg_2]	count=3
class	year i e ||| date format	count=1
class	urlconf can contain ||| view	count=1
arg	check one item ||| item	count=1
function	of the session model ||| model	count=1
module	the app ||| core management	count=1
module	if static files should ||| staticfiles	count=1
function	[function_1] map ||| [function_2] [function_1]	count=2
function	keys ||| get many	count=1
module	user-provides languages files ||| utils	count=1
class	the year i e ||| date format	count=1
class	the opposite of ||| set	count=1
class	list of tuples ||| simple list	count=1
arg	modelform return an unsaved ||| form	count=1
module	list of messages ||| contrib messages	count=2
arg	queryset or any iterator ||| format queryset	count=1
function	current language layout ||| current language bidi	count=3
module	project ||| core management	count=2
function	to be available ||| add	count=1
function	through [function_2] ||| [function_1] [function_2]	count=3
class	this ||| holder	count=1
arg	by extracting positional and ||| params varargs	count=1
module	but ||| utils	count=2
class	for base ||| base	count=1
class	imported ||| apps	count=1
function	[function_1] fail silently ||| [function_1] [function_2]	count=1
function	that need temp columns ||| temp	count=1
function	catching errors ||| robust	count=1
function_arg	[function_1] model ||| [function_1] connection_alias [arg_2]	count=2
arg	take a function and ||| function	count=1
function	when all the ||| operation	count=1
module	of operations ||| db	count=1
function	[function_1] given test ||| [function_1] [function_2]	count=1
module	the dirty ||| backends	count=1
function	the database ||| database	count=2
function	contribute_to_class has been run ||| deconstruct	count=1
function	[function_1] short name ||| [function_2] [function_1]	count=1
function	an optional dictionary of ||| init	count=1
class	from the module ||| user settings	count=1
function	random string ||| get random string	count=2
class	subminor ||| gisoperations	count=1
class	configuration variables not ||| settings	count=1
module	will be used ||| db models	count=1
arg	the cursor is ||| cursor	count=1
class	it unless [class] ||| [class]	count=3
function	geometry field ||| geom	count=1
module	in ||| admin	count=1
module	in the ||| utils	count=1
function	get a database ||| get	count=1
arg	multipolygonfield while ||| model_field	count=1
function	[function_1] languages in ||| templatetags [function_1] [function_2]	count=2
module	if there is ||| utils translation	count=1
function	bytes ||| get bytes	count=1
class	list of all the ||| base	count=2
function	tuples and when all ||| model	count=1
function	is a ||| is	count=3
function_arg	an encoded hash ||| decode encoded	count=1
arg	name the [arg_2] ||| [arg_1] [arg_2]	count=1
function	and a number ||| lazy	count=1
module	feature from the ||| contrib	count=1
class	is ||| six meta path importer	count=1
function	validators for the ||| validators	count=1
function	[function_1] [function_2] context ||| templatetags do [function_2] available [function_1]	count=1
function	a technical ||| technical	count=1
module	[module_1] database ||| [module_1] [module_2]	count=3
function	all [function_2] ||| [function_1] [function_2]	count=17
arg	in the full_plan ||| full_plan fake	count=1
function	has ||| has module	count=1
class	table names ||| database introspection	count=1
function	object this ||| object	count=1
function	context if either ||| context	count=1
class	configuration variables not in ||| settings	count=1
function	a time ||| timefield	count=1
function	as migration [function_2] ||| [function_1] [function_2]	count=1
class	transition dummy to ||| dummy	count=1
module	and return ||| db backends	count=1
class	string is safe ||| safe bytes	count=1
function	all key [function_2] ||| [function_1] [function_2]	count=12
function	[function_1] settings ||| [function_2] [function_1]	count=4
function_arg	[function_1] regex ||| [function_1] [arg_2]	count=1
function	since ||| since	count=1
module	cache of ||| utils translation	count=1
function	" choice ||| choice	count=1
function	modelform return ||| save	count=1
arg	retrieves the specified ||| mode	count=1
function	convert a relative ||| relative	count=1
class	and decimal places ||| decimal	count=1
module	by the node class ||| contrib gis geos	count=1
module	this ||| utils	count=1
function	that ||| safe	count=1
arg	a ||| model	count=1
class	a string ||| safe	count=1
function	this [function_1] [function_2] ||| templatetags [function_1] [function_2]	count=1
function	create a style ||| make style	count=1
class	app's ||| app	count=1
function	python ||| to python	count=2
function	changes ||| changes	count=1
module	models when ||| models sql	count=1
module_class	for [class_2] ||| [module_1] base [class_2]	count=1
class	model ||| base model form	count=1
class	the ||| user settings	count=1
function	admin ||| get admin	count=1
arg	return an ||| request form	count=1
function	what language the user ||| language	count=1
module	returns true if ||| contrib gis db	count=1
function	returns the number of ||| len	count=1
function	get all the inner ||| get inner	count=1
function	params for ||| params	count=1
function_arg	[function_1] the genericipaddressfield ||| [arg_2] [function_1]	count=1
class	numeric i e ||| format	count=1
arg	field if [arg_2] ||| status [arg_1] [arg_2]	count=2
function	a georss [function_2] ||| [function_1] [function_2]	count=3
arg	functions ||| func	count=2
arg	the [arg] ||| [arg]	count=9
module_class	given geometry field to [module_1] [class_2] ||| [module_1] [class_2] transform	count=2
function_arg	given date [arg_2] ||| [function_1] extract sql lookup_type [arg_2]	count=1
module	of different return ||| models	count=1
class	object ||| object	count=1
function	field update ||| field	count=2
arg	gdal spatialreference system ||| srs	count=1
class	the results ||| query set	count=1
function	[function] that ||| get [function] info with	count=1
module	resets the dirty flag ||| db backends base	count=1
module_class	_meta fields [class_2] ||| [module_1] [class_2]	count=2
function	have already been configured ||| configured	count=1
module	[module] for ||| conf [module]	count=3
function	in the given ||| write	count=1
function	locale name ||| locale	count=1
function_arg	the fields [arg_2] ||| [function_1] [arg_2]	count=1
module	does not indicate ||| backends	count=1
arg	if the given request ||| request	count=2
function	variable with the admin ||| admin	count=1
arg	a field [arg_2] ||| [arg_2] [arg_1]	count=8
class	name for ||| measure base	count=1
module	doesn't populate the ||| models	count=1
function	format string and then ||| format html join	count=1
function	given a format string ||| string	count=1
function	for all permissions ||| all permissions	count=1
module	essentially the opposite of ||| db models	count=1
function	this will store [function_1] [function_2] ||| [function_1] [function_2]	count=2
class	a list of ||| list filter	count=1
function_arg	fields [function_1] [arg_2] ||| [function_1] spec obj model [arg_2]	count=9
arg	source sequence into ||| source	count=1
function_arg	[function_1] attribute ||| [function_1] selector [arg_2]	count=3
function	get the previous valid ||| previous	count=3
arg	first character in ||| ch input_iter	count=1
module	when all ||| apps	count=1
module	with long (> 30 ||| cache backends	count=1
function	columns in ||| columns	count=3
class	this queryset ||| set	count=2
function	all objects of ||| all objects	count=2
function_arg	local [arg_2] ||| [arg_2] [function_1]	count=1
function	returns the initial ||| initial	count=1
class	combine ||| base database operations	count=1
function	a test database prompting ||| create test db	count=1
class	pathinfos containing ||| options	count=1
class	this handler ||| file upload handler	count=1
arg	inline formsets ||| form formsets change	count=1
class	obtain the list of ||| date list	count=1
class	day ||| date format	count=3
class	either queryset instance ||| query set	count=1
function	datetime value [function_2] ||| [function_1] cast [function_2]	count=2
function_arg	[function_1] node ||| [function_1] [arg_2]	count=3
function	have a valid ipv6 ||| is valid ipv6	count=1
function	weekday for a given ||| get weekday	count=1
function	in the given httpresponse ||| patch vary	count=1
function_arg	[function_1] lock rows ||| database operations for update [function_1] [arg_2]	count=1
module	a datetime of the ||| core	count=3
function	the given httpresponse ||| vary	count=1
class	for deletion ||| base form	count=2
module	the given ip address ||| contrib gis	count=2
module	is a copy of ||| db models	count=1
function	the current ||| today	count=1
class	or project ||| template	count=1
class	the cache if the ||| base cache	count=4
function	returns the [function] of ||| proj4 [function]	count=1
function	[function_1] layout ||| [function_1] [function_2]	count=3
module	for [module] query ||| [module]	count=2
class	the form at ||| form	count=1
class	that will ||| set	count=2
module	and a number of ||| apps	count=1
arg	makes ||| is_dst	count=1
arg	a hidden ||| form	count=1
class	is true ||| model	count=1
arg	value the value this ||| value	count=1
function	all lazy ||| lazy	count=1
arg	invalid values ||| value	count=1
class	if [class] ||| [class]	count=1
function	are required in this ||| initial	count=1
function	[function_1] [function_2] ||| [function_2] db [function_1]	count=5
function	language [function] for ||| do get language [function]	count=1
module	backends that return ||| backends base	count=1
function	init ||| model init	count=1
function	[function_1] this ||| [function_2] [function_1]	count=3
function	the creation counter value ||| set creation counter	count=1
function	the first object ||| first	count=1
function	standard deviation ||| std	count=1
module_class	[module_1] [class_2] ||| [module_1] base spatial ref [class_2]	count=1
function	__html__ method this helps ||| safe	count=1
module_class	returns a [module_1] [class_2] column ||| [module_1] [class_2] operations quote	count=2
module	without ||| utils	count=1
function	if ||| save	count=1
function	or 'second', [function_2] ||| [function_2] [function_1]	count=4
module	validates that [module] ||| [module]	count=1
arg	instance to the ||| form instance fields	count=1
function	queryset or ||| queryset	count=1
function	deserialize a ||| deserialize	count=1
module	the return_geom keyword is ||| contrib gis	count=1
function	[function] aggregation ||| [function] list	count=1
arg	of inline formsets and ||| form formsets	count=1
module	widget identified by the ||| contrib admin	count=1
module	certain backends (memcached ||| backends	count=1
module	[module_1] of the ||| [module_2] [module_1]	count=1
module	rows with invalid foreign ||| db backends	count=1
arg	to sender ||| sender	count=1
arg	the "vary" header ||| newheaders	count=1
function	[function_1] checkbox ||| [function_2] [function_1]	count=3
function	number of geometries in ||| num	count=1
module	list ||| translation	count=1
class	for ||| base model admin checks	count=2
function	a field name ||| col name	count=1
class	this class are ||| user settings holder	count=1
class	modelform ||| model	count=1
function	the short name ||| short name	count=1
function	set y ||| set y	count=1
function	[function_1] given model ||| [function_1] [function_2]	count=1
class	month without leading ||| format	count=1
module	[module] we ||| contrib [module]	count=3
function	[function_1] headers ||| [function_2] [function_1]	count=1
function	label ||| for label	count=1
module	testing migrations ||| migrations	count=1
arg	operation ||| operation	count=1
function	[function_1] given datetime ||| [function_2] [function_1]	count=5
function	in the given ||| vary headers	count=1
function_arg	be [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] expired ||| [function_1] [function_2]	count=1
module	attribute when requested the ||| contrib gis	count=1
function	fields to be searched ||| fields	count=1
module_class	[module_1] relation ||| [module_1] reverse [class_2]	count=3
class	to this query ||| query	count=1
function	type ||| column type sql	count=1
function	javascript i18n ||| javascript	count=1
module	customizing [module_2] ||| [module_1] [module_2]	count=4
function	locale name (en_us) ||| locale	count=1
class	the date ||| date list	count=1
function	form class to use ||| form class	count=2
function_arg	max_num [arg_2] ||| [arg_2] [function_1]	count=3
function	number of chars ||| chars	count=1
function	choice ||| choice	count=1
function	objects with a for ||| for	count=1
function_arg	[function_1] [arg_2] ||| [function_1] unique [arg_2]	count=12
class	the module specified in ||| settings holder	count=1
function	checks the type of ||| check	count=1
arg	string ||| compiler	count=1
function	for the limit ||| limit	count=1
arg	for functions ||| func argtypes errcheck	count=1
class	the database already ||| database	count=2
function	be interpolated ||| get readable field	count=1
module	languages ||| utils	count=1
module	template and function ||| db backends spatialite	count=1
function	secret (assumed ||| cipher	count=1
function	the sql [function_2] ||| [function_2] time zone [function_1]	count=2
function	a label ||| label	count=1
function	return ||| get filename	count=1
function	[function_1] m2m ||| [function_1] [function_2]	count=2
module	list ||| core	count=1
function	header ||| vary headers	count=2
arg	using the ||| using	count=1
function	dimensions of ||| dims	count=1
arg	given host ||| host	count=1
class	(structured like settings ||| connection handler	count=1
arg	in raw [arg_2] ||| [arg_2] [arg_1]	count=1
class	the app or ||| template command	count=1
class	connection where no ||| connection	count=1
arg	instance ||| form	count=1
arg	given value ||| value	count=1
function	a connection to ||| new connection	count=1
class	this user ||| user	count=1
function	update the model ||| update	count=1
module	any applied migrations have ||| migrations	count=1
module	the given criteria ||| contrib	count=1
function	[function_1] modules ||| [function_2] [function_1]	count=1
module	been [module] page ||| [module]	count=1
module	of the form ||| models	count=1
class	dirty flag ||| wrapper	count=1
function	database column data type ||| db type	count=1
module	of tuples [ ||| commands	count=1
function	[function_1] this ||| [function_1] for [function_2]	count=3
class	requests ||| user	count=1
arg	a modelform return an ||| form	count=1
function	necessary table joins ||| joins	count=1
function	of ordering fields ||| ordering	count=1
function_arg	[function_1] two ||| [function_1] sanity check [arg_2]	count=1
class	the feature ||| layer	count=1
function	forwards ||| forwards	count=1
function	of all known related ||| known related	count=1
function	and value positions ||| order	count=1
class	specified in ||| settings holder	count=1
class	of ||| date format	count=3
class	find ||| app directories finder	count=1
function	url to ||| url	count=1
module	true if the ||| models	count=1
arg	specified template and context ||| context	count=1
function	exception ||| exception	count=2
class	if the settings ||| settings	count=1
arg	retrieve ||| lookup_type handle_spheroid	count=1
class	are satisfied ||| user	count=1
arg	in raw saves too ||| raw force_insert force_update using	count=1
class	resets the dirty flag ||| database	count=1
module	the same data ||| contrib	count=1
module	if ||| models	count=2
function	objects pointing to ||| objects	count=1
class	spatial lookup values are ||| spatial	count=1
class	an order_by() ||| set	count=1
module	static files should ||| staticfiles	count=1
function	get ||| get	count=22
module	list of [module_2] ||| [module_1] [module_2]	count=4
function	[function_1] in ||| [function_1] [function_2]	count=3
module	[module_1] current ||| [module_1] [module_2]	count=12
function	load ||| load	count=1
module	loading of data ||| models	count=1
module	is this ||| gis gdal	count=1
module_class	for this [class_2] ||| [class_2] [module_1]	count=14
module	of different ||| models	count=1
function	[function_1] test ||| [function_2] db [function_1]	count=2
module_class	in the [class_2] ||| [module_1] gdal [class_2]	count=1
module	in the ||| template	count=1
module	[module] that ||| [module]	count=1
function	email to [function_2] ||| [function_1] [function_2]	count=1
function	for easy lookups by ||| get	count=1
arg	a value in the ||| value timeout	count=1
function	registered ||| model operation	count=1
function	the javascript i18n functions ||| null javascript	count=1
arg	a [arg] ||| [arg]	count=3
function	a manager for the ||| manager	count=2
function	[function] appropriate ||| resolve [function]	count=2
function	all ||| model	count=1
module	of the name ||| db models	count=1
function	date list ||| date list	count=2
function	[function_1] header into ||| [function_1] [function_2]	count=1
module	file ||| core management commands	count=2
function	[function_1] key on ||| [function_1] [function_2]	count=1
module	[module] envelopes are ||| [module]	count=3
function	of database definitions ||| init	count=1
function_arg	layout in ||| bidi parser token	count=1
function	value ||| number format	count=1
module	default implementation doesn't examine ||| admin	count=2
function	[function_1] static ||| [function_2] [function_1]	count=4
arg	the response ||| response	count=2
function_arg	[function_1] should respect ||| [arg_2] [function_1]	count=1
module	identified by the ||| contrib admin	count=1
class	a template ||| template	count=1
function	ordering the ||| get ordering	count=1
function	the test settings are ||| test settings	count=1
function	filters from a ||| from	count=1
module	directory file ] ||| management commands	count=1
class	the module specified ||| holder	count=1
class	'0' ||| date format	count=2
module	by the ||| contrib gis	count=2
module	supports the ||| contrib	count=1
function	httpresponse object ||| vary headers	count=1
module	be ||| models sql	count=2
function	existing fields ||| fields	count=1
module	geosgeometry the ||| contrib	count=1
class	essentially the opposite of ||| set	count=1
arg	given field ||| field	count=2
function	view ||| view	count=2
class	list of ||| simple list	count=1
module	[module_1] the given ||| [module_1] [module_2]	count=2
arg	error checking for routines ||| func cargs	count=1
module	on the client ||| contrib sessions backends	count=1
function	to the login ||| to login	count=1
class	from ||| holder	count=1
class	by this log entry ||| log entry	count=2
function	to copy ||| copy	count=1
module	depending on whether the ||| contrib	count=1
function	been imported and registered ||| model	count=1
module	current ||| sessions backends	count=4
class	return ||| base database introspection	count=1
arg	wraps the given contents ||| contents	count=1
module	languages files ||| translation	count=1
function	list of ordering fields ||| ordering	count=1
module	certain backends (memcached ||| core cache backends	count=1
arg	[arg_1] multipolygonfield while ||| [arg_2] [arg_1]	count=2
module	(if the return_geom ||| contrib gis	count=1
module_class	geos [class_2] ||| [class_2] [module_1]	count=4
function	translate a block of ||| block translate	count=1
function	layer metadata and ||| layer	count=1
function	attempts to return ||| get	count=1
function	range of pages for ||| page range	count=1
arg	one item ||| obj model item label	count=1
module	with invalid foreign ||| db backends	count=2
arg	view function as ||| view_func	count=1
module	necessary for [module] ||| [module]	count=1
function	the creation time as ||| created time	count=1
function	that [function_1] [function_2] ||| [function_1] [function_2]	count=6
function	validators in ||| password validators	count=1
arg	other ||| other	count=20
module	the properly shortened and ||| db backends	count=1
arg	the related instance through ||| instance value	count=2
module_class	[module_1] geometry collection ||| [module_1] [class_2]	count=15
function	destroy a [function_2] ||| [function_2] [function_1]	count=4
module	tuples and when all ||| apps	count=1
function	generate formsets ||| formsets	count=1
class	spatial lookup values ||| spatial	count=1
arg	receiver from sender for ||| receiver sender weak	count=1
function	contain [function] objects ||| get make [function]	count=1
function_arg	[function_1] name with ||| [arg_2] [function_1]	count=1
module	[module_1] the headers ||| [module_2] [module_1]	count=1
function_arg	an object [arg_2] ||| [function_1] [arg_2]	count=1
arg	field if ||| field	count=1
class	performs set up ||| query set	count=1
arg	the given lookup ||| opts lookup	count=1
module	applying this queryset to ||| models	count=1
function	[function_1] language ||| [function_1] [function_2]	count=4
arg	given x [arg_2] ||| [arg_2] [arg_1]	count=2
arg	single message to ||| subject message from_email	count=2
module	view decorator that ||| views decorators	count=1
class	model ||| model form set	count=3
arg	related instance ||| instance	count=2
class	in [class] ||| [class]	count=1
function	to create ||| create	count=2
class	coordinate sequence ||| geoscoord seq	count=4
class	a transaction and resets ||| base database wrapper	count=1
arg	specified in default_settings if ||| default_settings	count=1
function	get the name of ||| get	count=1
function	sql where ||| sql	count=1
class	cache for ||| base cache	count=2
class	django model ||| base model	count=2
module	the two geometries ||| contrib gis	count=1
function	technical 404 error response ||| technical 404 response	count=1
arg	if the value ||| value	count=2
function	items this ||| items	count=1
function	updates the ||| vary	count=1
function_arg	[function_1] [arg_2] cache-control header as an ||| [function_1] [arg_2]	count=3
module	fields to use ||| generic	count=1
function	a special way ||| get backend timeout	count=1
module	geometry or raster taking ||| gis db	count=1
function_arg	projectstate object [arg_2] ||| [function_1] state [arg_2]	count=1
class	[class_1] projected? ||| [class_1] [class_2]	count=1
function	an object starts ||| start object	count=2
function	actions for ||| actions	count=1
function	resolve ||| resolve	count=2
function	[function_1] point ||| [function_1] [function_2]	count=3
function	previous valid ||| previous	count=3
module	srid of the field ||| contrib gis db backends	count=2
arg	[arg] fetch ||| [arg]	count=3
class	or project ||| command	count=1
module	prevents mysql from implicitly ||| mysql	count=1
class	to the database ||| query set	count=1
function	deserialize a stream or ||| deserializer	count=1
module	the fields ||| db models	count=1
function	returns the latest object ||| latest	count=1
function	files by ||| files	count=1
class	from applying ||| query	count=1
arg	a ||| value	count=1
module_class	[module_1] [class_2] ||| [module_1] staticfiles base [class_2]	count=1
function	reverses the ||| reverse	count=1
arg	a module ||| module	count=1
function	rolls back the most ||| rollback	count=1
module	the field's ||| contrib gis gdal	count=1
class	if ||| holder	count=1
module	[module_1] coordinate ||| [module_1] [module_2]	count=6
function	sequence ||| seq	count=1
module	on ||| db	count=1
class	cache ||| base database operations	count=1
module	backends (memcached ||| core cache backends	count=1
function	true if ||| form	count=1
function	dated [function_2] ||| [function_1] [function_2]	count=4
function	object ||| vary	count=1
function	[function_1] database ||| [function_2] [function_1]	count=1
function	in the current ||| from current	count=1
module	returns a 6-tuple extent ||| gis	count=1
arg	form ||| request	count=1
module	to be ||| admin	count=1
module	backends can ||| db backends	count=3
function	migrations ||| migrations	count=2
arg	spatialreference ||| srs	count=1
module_class	[module_1] password ||| [module_1] [class_2]	count=2
class	month without leading zeros ||| date format	count=1
function	return a ||| get test	count=1
arg	of the changes so ||| changes	count=1
function	that re-throws [function] exceptions using ||| wrap [function]	count=1
module	migrations have unapplied dependencies ||| db migrations	count=1
arg	function that ||| func cargs	count=1
arg	the given django model ||| model	count=1
class	all ||| apps	count=2
function	returns the prefix to ||| prefix	count=1
function_arg	prepare [arg_2] ||| [function_1] [arg_2]	count=3
function	[function_1] converter ||| [function_1] [function_2]	count=4
module	version [module] the given ||| [module]	count=1
function	404 error [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] envelope [arg_2]	count=4
arg	the given ||| model_name	count=1
module	the given geometry ||| contrib	count=2
function	"pattern_iter", respecting escape sequences ||| char	count=1
class	this handler should be ||| handler	count=1
module	contain helpful extra ||| generic	count=1
class	an ||| model admin	count=2
module	current ||| sessions	count=3
function	user [function_2] ||| [function_2] [function_1]	count=2
module	which can be sent ||| core	count=1
class	the connection ||| database wrapper	count=1
arg	a ctypes [arg_2] ||| [arg_2] [arg_1]	count=6
module	to edit the ||| contrib	count=1
module	with the given model ||| contrib gis db models	count=1
arg	field on ||| field	count=2
function	returns the [function] of ||| postgis lib [function]	count=1
module	mysql ||| mysql	count=2
function	a date list ||| date list	count=2
function	[function_1] object for ||| [function_2] [function_1]	count=1
arg	given username ||| username	count=1
function	[function_1] a warning ||| [function_1] [function_2]	count=1
function	re-throws [function] exceptions ||| wrap [function]	count=1
function	fail silently if the ||| fail statements	count=1
module	list of (column_name referenced_table_name ||| db backends sqlite3	count=1
function	returns an instance ||| get	count=1
function	permission to change ||| change permission	count=3
arg	[arg_1] and skip ||| [arg_2] [arg_1]	count=1
function	the internal setup ||| setup	count=1
function	primary key for ||| primary key	count=2
module	alias for ||| contrib gis	count=2
function	new instance of the ||| instance	count=1
class	form field ||| choice field	count=1
module	the object represented ||| contrib admin	count=1
class	parameters ||| spatial operations	count=1
module	implementation doesn't examine the ||| contrib admin	count=2
module	list of tuples [ ||| core management commands	count=1
function	corresponding models have been ||| model	count=1
module	list of the ||| contrib gis	count=1
class	the dirty ||| base	count=1
function	model matching the ||| model	count=1
class	an ||| admin	count=1
function_arg	[function_1] files ||| [function_1] datadict data [arg_2]	count=1
arg	if the form ||| form	count=1
function	true if ||| save form	count=1
arg	an iterable [arg_2] ||| [arg_2] [arg_1]	count=6
module	ctypes ||| contrib gis gdal prototypes	count=1
function_arg	passed post variables ||| post request	count=1
arg	[arg_1] and target ||| [arg_1] [arg_2]	count=2
function	caching headers ||| headers	count=1
function	and a number of ||| model	count=1
function_arg	[function_1] in the ||| [function_1] [arg_2]	count=9
class	oftdate field ||| oftdate	count=1
function	[function_1] [function_2] ||| [function_2] date [function_1]	count=2
module	manager and ||| backends	count=1
function_arg	[function_1] delta ||| [arg_2] [function_1]	count=1
function	connection settings_dict (a ||| db signature	count=1
arg	checking on routines ||| cargs	count=1
function_arg	fields doesn't ||| fields obj	count=1
arg	start date ||| date	count=4
module	the original is garbage ||| contrib gis geos	count=1
function	database schema ||| database	count=2
module	the ||| backends	count=1
module	the original ||| contrib gis geos	count=1
function_arg	[function_1] the arg ||| [arg_2] [function_1]	count=1
module	update depends on ||| db models	count=1
function_arg	[function_1] setting ||| [function_1] [arg_2]	count=8
module	mapping the ||| contrib	count=1
class	set in ||| set	count=1
module	all the configured loaders ||| loaders	count=1
arg	after lineno ||| lineno	count=1
function	locale ||| locale	count=1
module	the ||| contrib gis	count=160
function	database ||| db	count=1
arg	a queryset or ||| queryset	count=1
module	and that the ||| contrib	count=1
class	this coordinate sequence ||| geoscoord seq	count=3
module	sql template and function ||| db backends	count=1
module	list of (column_name referenced_table_name ||| db backends	count=2
module	tuples ||| management	count=1
module	directory file ] ||| management	count=1
module	for stddev and ||| backends	count=1
function	create a manager ||| create	count=1
class	are ||| command	count=1
function	corresponding models have ||| lazy	count=1
module	this view with a ||| views generic	count=1
function	if any non-schema-affecting options ||| generate altered options	count=1
class	the dirty flag ||| wrapper	count=1
arg	[arg] that ||| [arg]	count=1
class	a chance this operation ||| operation	count=2
function	the current thread ||| activate	count=1
module	path to a management ||| core management	count=1
function_arg	[function_1] it ||| [function_1] string template_name context [arg_2]	count=1
function	[function_1] ordering fields ||| [function_1] [function_2]	count=1
function	a package ||| get package	count=1
class	e '1' to ||| format	count=1
module_class	for geos [class_2] ||| [module_1] [class_2]	count=4
arg	if update_pk ||| update_pk	count=1
class	spatial ||| lite operations	count=1
function	between tags removed ||| between tags	count=1
class	form is not bound ||| bound field	count=1
function	connection's time zone ||| time zone	count=1
class	by all ||| base cache	count=1
arg	objs via the ||| objs	count=1
arg	given source sequence ||| source	count=1
function_arg	since the [arg_2] ||| [function_1] header [arg_2]	count=1
function	something modified [function_2] ||| [function_1] [function_2]	count=4
class	requests for configuration variables ||| user settings holder	count=1
function	[function_1] field type ||| [function_1] [function_2]	count=2
class	through the reverse relation ||| reverse one to one descriptor	count=1
function	creates a test ||| create test db	count=1
module	files ||| utils translation	count=2
module	some backends require special ||| db backends	count=1
module	built-in [module_2] ||| [module_2] [module_1]	count=1
function	technical [function_2] ||| [function_1] [function_2]	count=4
function	plain text ||| text	count=1
module	should ||| staticfiles management	count=1
module	number of ("app_label", "modelname") ||| apps	count=1
function	over the ||| iter	count=1
function	something modified since the ||| modified since	count=1
function	if field name is ||| field name	count=1
arg	the changes so they ||| changes graph migration_name	count=1
module	instances based on ||| db models	count=1
function	a list ||| all	count=1
module	the database ||| db models	count=1
module	the original is garbage ||| contrib	count=1
class	boolean ||| boolean	count=1
function_arg	[function_1] attribute ||| [function_1] value selector [arg_2]	count=3
function	point geometry guaranteed ||| point on	count=1
module	tuples ||| core management commands	count=2
function	from storage (unless ||| get	count=1
function	name is needed (so ||| name	count=1
class	really ||| migration questioner	count=4
class	returns ||| query set	count=1
module	and return all other ||| backends oracle	count=1
module	to use ||| views generic	count=2
function_arg	[function_1] two ||| [arg_2] [function_1]	count=1
function_arg	[function_1] fields ||| [arg_2] [function_1]	count=3
class	the queryset ||| set	count=1
module	mysql has the following ||| mysql	count=1
function	javascript i18n functions -- ||| null javascript	count=1
class	variables ||| user settings	count=1
class	or project templates are ||| command	count=1
function	'31' ||| j	count=1
arg	time ||| timezone	count=1
function	to interval day to ||| date interval	count=1
module	of fields ||| models sql	count=1
module_class	this geometry ||| gis geos geosgeometry	count=1
function_arg	language layout [arg_2] ||| [function_1] [arg_2]	count=3
function	sort a list ||| sort	count=1
function	[function_1] fields for ||| [function_2] [function_1]	count=5
class	when [class] ||| [class]	count=1
module	datetime of the ||| core	count=3
module	is this ||| contrib gis db backends base	count=1
arg	secret (which defaults ||| secret	count=1
class	field has an id ||| bound field	count=1
arg	using values ||| using update_fields	count=1
module	geometry ||| gis db models	count=2
module	the view should ||| views generic	count=1
arg	the returned instance ||| form instance fields	count=1
module	saving in [module_1] [module_2] ||| [module_1] [module_2] models	count=1
module	day of the month ||| utils	count=1
class	sunday ||| format	count=1
arg	values ||| values	count=2
function	the year month ||| format	count=1
module	and ||| db backends spatialite	count=2
module	zeros i e ||| utils	count=1
arg	an iterable and ||| cls iterable	count=2
module	session [module_2] ||| [module_2] [module_1]	count=1
module	of the data ||| contrib gis gdal	count=1
arg	change is ||| form change	count=1
class	is an ||| handler	count=1
function_arg	[function_1] a year ||| [arg_2] [function_1]	count=3
arg	value ||| value lookup_type	count=3
class	that [class_2] ||| [class_2] [class_1]	count=8
function	and lookup from ||| build lookup	count=1
function	radio_fields dictionary is name ||| radio fields	count=1
arg	path (or none if ||| path	count=1
module	a gdal ||| gis gdal	count=1
function	backend based upon the ||| backend	count=1
function	returns the first object ||| first	count=1
function	[function] to ||| [function]	count=2
function_arg	[function_1] field ||| [function_1] model [arg_2]	count=2
arg	encoded ||| encoded	count=2
module	the return_geom ||| contrib	count=1
function	change the ||| change	count=1
module	in the ||| contrib	count=12
arg	of the changes ||| changes	count=1
function	sets ||| topological sort as sets	count=1
module	translation of either the ||| utils translation	count=1
function	to cast a ||| cast	count=1
class	day ||| database operations	count=1
class	the cache at ||| base cache	count=1
class	all formsets [class_2] ||| [class_1] [class_2]	count=1
class	a primary database ||| database creation	count=1
function	[function_1] file ||| [function_2] [function_1]	count=8
class	and ||| manager	count=1
arg	y [arg_2] ||| [arg_2] [arg_1]	count=1
class	queryset ||| multiple object mixin	count=1
arg	set a value in ||| value timeout version	count=1
arg	a function ||| result func cargs offset	count=1
module	to each of the ||| contrib	count=1
module	[module_1] the name ||| [module_2] gis [module_1]	count=1
module	properly shortened and ||| db backends	count=1
class	email server ||| email backend	count=1
module	the node class of ||| contrib gis	count=1
function	items ||| queryset	count=1
function	header ||| patch vary headers	count=2
function_arg	contents [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] text ||| [function_2] [function_1]	count=4
function	__html__ method this helps ||| html safe	count=1
class	from [class] version ||| base [class]	count=1
function	serialized as base64 ||| to string	count=1
function	containing a given ||| get containing	count=1
class	model instance the default ||| model admin	count=2
class	requests ||| settings	count=1
module	is of ||| db models sql	count=1
class	a warning ||| base	count=1
class	transaction and resets ||| database wrapper	count=1
function_arg	if [arg_2] ||| [arg_2] [function_1]	count=1
arg	the returned instance to ||| instance	count=1
function	to paginate [function_2] ||| [function_2] [function_1]	count=1
arg	connector is ||| connector negated	count=1
module	it in the current ||| contrib sessions	count=1
function	this [function_2] ||| [function_1] [function_2]	count=1
class	fieldset[1]['fields'] for ||| base model	count=1
module	sqlite3 [module_2] ||| [module_1] [module_2]	count=1
function	ordering by ||| ordering	count=1
function	saves the current ||| save	count=1
class	deep-clone the ||| model state	count=1
module	that joins [module] through ||| [module]	count=1
class	in this class ||| settings	count=1
function	if url [function_2] ||| [function_1] [function_2]	count=3
function	[function] dates 'year', ||| get [function]	count=3
module	returns true if this ||| contrib gis	count=1
module	if the [module_2] ||| [module_1] [module_2]	count=2
module	that ||| decorators	count=1
class	that ||| wrapper	count=1
function	is ||| check	count=2
arg	given username email ||| username email	count=2
module	or create the ||| contrib	count=1
arg	to model ||| model	count=2
module	for checking the ||| contrib gis geoip2	count=1
class	month i e ||| date format	count=1
function	postgresql ||| lib	count=1
module	with invalid ||| db backends	count=2
class	that we return safe ||| safe text	count=1
class	and when all the ||| apps	count=1
module	edit the object ||| contrib	count=1
function_arg	returns the for update [function_1] [arg_2] an update operation ||| database operations for update [function_1] [arg_2]	count=3
module	the ||| models	count=5
function_arg	[function_1] [arg_2] update query for an ||| [function_1] [arg_2]	count=2
module	side of ||| db models fields	count=2
module	for further ||| utils	count=1
arg	template_dirs ||| template_name template_dirs	count=1
module	modelform return an unsaved ||| contrib admin	count=1
function	time value ||| time	count=1
class	on the target storage ||| storage	count=1
module	to user-provides ||| utils translation	count=1
function	modified since the ||| modified since	count=2
module	does not end with ||| db	count=1
function	cleans an [function_2] ||| [function_1] [function_2]	count=1
function	database definitions (structured like ||| init	count=1
function_arg	post [arg_2] ||| [function_1] [arg_2]	count=4
arg	[arg_1] through ||| [arg_1] [arg_2]	count=1
function	the login form ||| login	count=1
arg	deeper for select_related() ||| restricted requested load_fields	count=1
class	given srid if ||| geo query	count=1
arg	functions ||| func argtypes	count=1
function	sql to select ||| select	count=1
module	confuse the [module_2] ||| [module_1] [module_2]	count=8
module_class	static [class_2] ||| [module_1] [class_2]	count=3
function	404 ||| 404	count=1
function_arg	[function_1] is an ||| [arg_2] [function_1]	count=5
function	last object of ||| last	count=1
arg	if ||| default	count=1
function_arg	text of [arg_2] ||| [arg_2] [function_1]	count=2
arg	the supplied key returns ||| key	count=1
class	of extra inline forms ||| inline	count=1
module	the datasource object that ||| contrib	count=1
function	generate new pk ||| get pk	count=1
function_arg	[function_1] [arg_2] ||| [function_1] model_name [arg_2]	count=4
function	templates are ||| handle	count=1
module	in the given ||| utils	count=1
class	a ||| base database wrapper	count=1
function	database ||| database	count=2
arg	to lock rows ||| nowait skip_locked	count=1
module	in pixels of the ||| contrib gis	count=1
function	of errors that ||| errors	count=1
module	[ directory file ||| core	count=1
class	and resets the dirty ||| base	count=1
module	a transaction and ||| db	count=1
module_class	[module_1] feature ||| [module_1] [class_2]	count=7
module	given datetime datetime ||| utils	count=2
class	the app or project ||| template command	count=1
function	the x ||| x	count=3
module	returns the description ||| contrib	count=1
arg	receiver from sender for ||| receiver sender	count=1
module	header in the given ||| utils	count=1
module	mysql has ||| db backends mysql	count=1
function	the aliases in ||| aliases	count=1
arg	if the value ||| value arg	count=1
module	when initializing the ||| contrib	count=1
arg	func to be called ||| func	count=1
function	envelope by reference ||| envelope	count=1
function	models that ||| models	count=2
module	the spatial_ref_sys or ||| contrib gis db models	count=1
module	file name ||| core	count=1
module	list of ||| commands	count=1
arg	path that is unicode ||| path	count=1
module	of all the coordinates ||| contrib	count=1
function	[function_1] time value ||| [function_1] [function_2]	count=2
function	serialized as base64 ||| value to string	count=1
function	for configuration variables not ||| init	count=1
module_class	[module_1] [class_2] equal to ||| [module_1] [class_2] eq other	count=2
function	given httpresponse object ||| vary	count=1
class	handler should be in ||| memory file upload handler	count=1
module	mapping the names ||| contrib admin	count=1
module	dirty ||| backends base	count=2
class	the ||| database introspection	count=2
class	for ||| base	count=33
function	untranslated verbose name ||| verbose name raw	count=2
arg	register func to ||| func	count=1
arg	templates are ||| template	count=1
function	language [function] ||| do get language [function]	count=1
class	the envelope ||| envelope	count=1
function	an sql query that ||| sql	count=1
arg	a cursor and ensures ||| sentinel col_count	count=1
module_class	[module_1] params ||| [class_2] [module_1]	count=2
module	backends require special ||| backends base	count=1
module	[module_1] the spatial ||| [module_2] [module_1]	count=1
function	centroid a ||| centroid	count=1
class	of the command ||| base command	count=1
function_arg	an [arg_2] ||| [function_1] [arg_2]	count=3
function	factory that creates ||| create	count=1
function	64-bit integer ||| int64	count=1
function	displays a search ||| search	count=1
arg	a value in ||| value timeout	count=1
arg	for functions ||| func argtypes	count=1
module	and related stats ||| backends	count=1
function	datatuple ||| mass mail	count=1
arg	aren't ||| app_configs	count=1
arg	more explanatory message ||| cls original_exc	count=1
class	the settings the ||| lazy settings	count=1
module_class	query [class_2] ||| [module_1] query [class_2] annotate	count=1
module	returns a tuple with ||| db backends base	count=1
class	true if the settings ||| lazy settings	count=1
module	[module] those ||| [module]	count=1
function	type ||| db type	count=1
class	specified permission this method ||| permissions mixin	count=1
module	tables and views ||| db backends base	count=1
module	used by the ||| contrib gis geos	count=1
function	when ||| lazy model operation	count=1
class	a compiled ||| library	count=1
arg	defines ||| klass	count=2
function	create exception ||| exception	count=1
arg	cls using values from ||| cls using update_fields	count=1
function	a manager ||| manager	count=2
function	[function_1] and ||| [function_2] [function_1]	count=3
class	the forward relation ||| forward many to one descriptor	count=1
function	list of all migrations ||| list	count=1
function	of the sql ||| sql	count=2
arg	[arg] middleware ||| [arg]	count=3
class	dirty flag ||| database wrapper	count=1
function	field in a geojson ||| geojson	count=1
module	given the name of ||| db models	count=1
module	given ||| utils	count=2
function	dependency [function] using both ||| build [function]	count=1
function	formats a datetime date ||| date	count=1
class	form has ||| form	count=1
module	can [module] ||| [module]	count=1
module	[module] field's value ||| [module]	count=1
module	returns a geosgeometry the ||| contrib gis geos	count=1
function	limit_choices_to for ||| limit choices to	count=2
function	passes the given test ||| passes test	count=1
module	date for [module] user logging ||| [module]	count=1
module	of rows ||| db models	count=1
function	a list of tuples ||| compile	count=1
class	an ||| connection	count=1
module	support for stddev and ||| backends	count=1
function	[function_1] foreignkey ||| [function_1] [function_2]	count=1
class	of the form migration ||| migration executor	count=1
function	and lookup from given ||| lookup	count=1
module	and view names ||| backends	count=3
function_arg	parses one [arg_2] ||| [function_1] boundary stream stream [arg_2]	count=1
function_arg	returns the for [function_1] [arg_2] update operation ||| [function_1] [arg_2]	count=2
function	or ||| format	count=1
function_arg	returns the for update [function_1] [arg_2] update operation ||| [function_1] [arg_2]	count=3
class	[class_1] reference ||| [class_1] [class_2]	count=11
arg	update_pk ||| using fields update_pk	count=1
module	should be deleted ||| staticfiles management commands	count=1
function_arg	[function_1] [arg_2] ||| [function_1] field [arg_2]	count=18
module	the queryset ||| db models	count=1
arg	returned instance to ||| form instance fields exclude	count=1
function	and either ||| process	count=1
module	to [module] other? ||| [module] gis	count=1
arg	form ||| form commit	count=1
class	path basically ||| based	count=1
function	need temp columns ||| generate temp	count=1
function	[function] output ||| output field [function]	count=1
module	is an optional ||| db	count=1
arg	x y [arg_2] ||| [arg_2] [arg_1]	count=1
function	adds ||| patch	count=1
arg	cursor with placeholders ||| cursor sql	count=1
function	options with ||| select options	count=2
class	all ||| base cache	count=1
class	and resets the dirty ||| database	count=1
module	with ||| sessions backends	count=1
function	meta class ||| meta	count=1
module	handler wrapping the ||| contrib	count=1
class	module specified ||| settings holder	count=1
function	the unget history as ||| unget history	count=1
function	tuples and when all ||| lazy model operation	count=1
function	object with the ||| get	count=1
module	shortened and uppercased identifier ||| db backends	count=1
function	the number of ||| len	count=1
function	main version ||| main	count=1
function	description string ||| description	count=1
class	stack ||| context	count=1
arg	is a sequence ||| obj	count=3
module	and that the field ||| contrib	count=1
function	allowed ||| get allow	count=1
function	receiver which updates the ||| update	count=1
module	routine will ||| gis	count=1
module	(if the ||| contrib	count=1
module	contain multiple lines and ||| db backends base	count=1
function	returns a cascaded union ||| cascaded union	count=1
module	of oracle ||| oracle	count=1
module	the effects of ||| contrib	count=1
class	has ||| admin selenium test case	count=1
function	to link ||| link	count=1
function	updates the unget history ||| update unget history	count=1
function	clob column for ||| clob	count=1
class	this geometry ||| geometry mixin	count=1
class	definitions (structured ||| handler	count=1
function	coordinate ||| coord	count=3
function	method ||| html safe	count=1
function	[function_1] list ||| [function_1] [function_2]	count=7
class	database ||| connection	count=1
function	a salt and ||| salt	count=1
function	to not [function_2] ||| [function_2] [function_1]	count=2
function	get a database connection ||| get	count=1
function_arg	[function_1] geometry ||| [function_1] [arg_2]	count=1
module	is authenticated via the ||| contrib auth	count=1
function	set ||| add	count=1
arg	saves too ||| force_insert force_update using	count=1
module	list of (column_name ||| db backends mysql	count=1
module	the lookup ||| contrib	count=1
class	for base spatial ||| base spatial	count=1
function	has a given header ||| has	count=1
function	[function_1] field is ||| [function_1] [function_2]	count=1
class	flag ||| database wrapper	count=1
class	file ||| files	count=1
module	methods by default it ||| core cache backends	count=1
arg	generated from key_salt ||| key_salt value	count=1
arg	given a ||| form	count=1
arg	is a subclass ||| obj	count=1
function	a file object if ||| file complete	count=1
function	and either the ip ||| process view	count=1
module_class	[module_1] way ||| [module_1] email [class_2]	count=3
function	a datetime ||| datetime	count=1
arg	is a unique subset ||| obj	count=1
class	dictionary ||| connection	count=1
module	with the given ||| contrib auth	count=2
function	items ||| dated items	count=1
function	[function_1] the raw ||| [function_2] [function_1]	count=1
function_arg	current language [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] downloaded it? ||| [arg_2] [function_1]	count=4
arg	cls using ||| cls using update_fields	count=2
module	dictionary mapping command ||| management	count=1
arg	a queryset ||| queryset	count=2
class	from the ||| holder	count=1
module	a transaction ||| backends base	count=1
module	of ("app_label", "modelname") tuples ||| apps	count=1
function	and items ||| get dated items	count=1
function	min_num ||| min num	count=1
function_arg	removes a [arg_2] ||| [function_1] model [arg_2]	count=6
function_arg	choices for [arg_2] ||| [function_1] [arg_2]	count=2
function	have been ||| lazy model	count=1
module	into a ||| db backends	count=1
function_arg	filter_vertical [arg_2] ||| [function_1] [arg_2]	count=4
arg	the backend the fields ||| fields objs	count=1
class	of the month ||| date format	count=1
module	and ||| db migrations	count=1
module	in units of ||| gdal	count=1
function	saving ||| save	count=2
module	returns a geosgeometry the ||| contrib gis	count=1
function	kmz using ||| to kmz	count=1
arg	the full_plan ||| plan full_plan	count=1
class	with a template ||| template response	count=1
arg	'year', 'month', 'day', 'hour', ||| field_name tzname	count=1
class	site object ||| site	count=1
arg	direct relationship to the ||| m	count=1
arg	if update_pk is defined ||| using fields update_pk	count=1
function	a slash ||| redirect with slash	count=1
function_arg	compile a regex ||| compile regex	count=2
function	has permission ||| has delete permission	count=1
class	configuration variables not in ||| settings holder	count=1
class	not ||| settings	count=1
class	coordinates in a ||| line string	count=2
class	dictionary mapping this ||| mapping	count=1
function	git ||| git	count=1
function	any filtering going ||| filters	count=1
class	execute its [class] ||| raw [class]	count=1
module	given a modelform return ||| admin	count=1
module	flag ||| db	count=1
module	geometry and the ||| contrib gis gdal	count=3
function	postgis version number and ||| postgis full version	count=1
module	to user-provides languages ||| utils	count=1
function	[function_1] [function_2] (but not extra_select columns) ||| models sql query clear [function_2] [function_1]	count=6
module	dictionary of database definitions ||| db	count=1
class	a foreignkey or has ||| base model admin	count=1
class	database is established ||| base database	count=1
module	a feature from the ||| contrib gis gdal	count=1
class	requests for configuration variables ||| settings holder	count=1
class	list of tuples value ||| simple list	count=1
function	a cache [function_2] ||| [function_2] [function_1]	count=3
function	tuple of all ||| tuple	count=1
function	[function_1] field ||| [function_1] [function_2]	count=9
arg	up to the given ||| plan state fake	count=1
function_arg	[function_1] most recent ||| [function_1] state [arg_2]	count=1
module	the [module_2] ||| [module_1] sessions [module_2]	count=1
arg	specified app_label and ||| cls app_label	count=1
function	the corresponding ||| model	count=1
module	day ||| utils	count=3
function	[function_1] a signed ||| [function_2] [function_1]	count=2
function	to not ||| ask not	count=2
arg	for routines ||| func cargs	count=1
module	sqlite3 interface returns ||| backends sqlite3	count=1
function	an extended slice ||| extended slice	count=4
function	to return a signed ||| get signed	count=1
function_arg	[function_1] encoding to ||| [arg_2] [function_1]	count=1
function	this backend based upon ||| get backend	count=1
class	in the current database ||| database	count=3
class	for this form field ||| model choice field	count=1
class	variables ||| settings	count=1
function	out as ||| write	count=1
arg	field on an object ||| obj field	count=1
module	("app_label", "modelname") ||| apps	count=1
class	return ||| base model admin	count=1
function	the static [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] a date ||| [arg_2] [function_1]	count=6
class	email ||| abstract user	count=1
function	create an object ||| create object from	count=1
function	checks to see ||| validate	count=1
function	point ||| point on	count=1
arg	[arg] action ||| [arg]	count=3
module	the spatial_ref_sys or ||| contrib	count=1
function	all ||| all	count=3
function	have associated django ||| django	count=1
function_arg	[function_1] choice's ||| [function_1] empty value [arg_2]	count=2
module	mysql from implicitly ||| db backends mysql	count=1
function	tuples and when all ||| lazy	count=1
module	the [module] cache ||| [module]	count=1
module	with long (> ||| backends	count=1
function	set or unset the ||| set	count=1
function	containing a warning that ||| warning for	count=1
function_arg	[function_1] it ||| [function_1] [arg_2]	count=4
function	[function_1] key that ||| [function_1] [function_2]	count=1
arg	message to ||| subject message	count=1
class	configuration variables not in ||| user settings	count=1
function	country code ||| country	count=1
function_arg	the sql [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] will set ||| [function_2] time zone [function_1]	count=3
class	time zone offset ||| time	count=1
class	template and context described ||| template	count=1
class	this ||| user settings holder	count=2
class	transaction and resets ||| base database wrapper	count=1
function	return a queryset or ||| get queryset	count=1
arg	[arg_1] and password ||| [arg_1] [arg_2]	count=3
module	dictionary of ||| db backends	count=1
arg	identified by selector ||| selector	count=1
function_arg	managers [arg_2] ||| [function_1] [arg_2]	count=1
arg	in instance suitable ||| instance	count=1
arg	the changes so ||| changes graph	count=1
module	the fields passed into ||| db models	count=1
class	django model instance ||| model	count=2
class	geometry is ||| geometry	count=1
function	"modelname") ||| operation	count=1
module	return a list of ||| db	count=1
module	will be ||| db models sql	count=1
module	applying this queryset ||| models	count=1
function	return list of fields ||| get fields	count=1
function	the mask of annotations ||| annotation mask	count=1
function	short name ||| short name	count=1
arg	power [arg] ||| bp [arg]	count=1
class	true if ||| query	count=1
function	number of ||| number	count=1
function	app or project templates ||| handle	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=382
function	filter_vertical ||| filter vertical	count=1
function_arg	admins setting ||| admins subject	count=1
function	with postgis ||| postgis	count=1
function	[function_1] namespaces from ||| [function_1] [function_2]	count=2
module	language-code if there is ||| utils	count=1
module	from the coordinate ||| contrib	count=1
function_arg	[function_1] receiver to ||| [function_1] [arg_2]	count=1
function	find what language the ||| language from	count=1
module	the wkt of this ||| contrib	count=1
arg	messages after trying all ||| messages response	count=1
class	handler should be in ||| file upload handler	count=1
module	[module] type of ||| [module] backends	count=3
module	in the [module_2] ||| [module_1] [module_2]	count=6
function	permission_required attribute ||| permission required	count=1
function	given httpresponse object ||| vary headers	count=1
function	for the given ||| factory	count=1
function	[function_1] any ||| [function_1] [function_2] prep	count=1
function	choices for this ||| get choices	count=1
module	the given geometry field ||| contrib gis	count=2
module	system's terminal ||| core management	count=1
function	latest object according to ||| latest	count=1
module	at the given ||| contrib gis	count=1
arg	instance change ||| change	count=1
class	not bound ||| bound	count=1
arg	field [arg_2] ||| [arg_2] [arg_1]	count=9
module	returns [module_2] ||| [module_2] [module_1] spatialite spatia lite operations	count=1
class	have been ||| apps	count=1
module	queryset ||| models	count=2
class	if it has a ||| input	count=1
function	returns an [function_2] ||| [function_2] [function_1]	count=3
class	register the field ||| field	count=1
arg	[arg_1] using ||| [arg_1] [arg_2]	count=4
function	was [function_2] ||| [function_1] [function_2]	count=5
function	modelform return ||| form	count=1
module	backends require ||| backends base	count=1
module	access the ||| contrib	count=1
function_arg	[function_1] each field ||| [arg_2] [function_1]	count=1
class	definitions (structured like settings ||| connection handler	count=1
module	backends ||| core cache backends	count=1
class	of ||| connection handler	count=2
module	to the database ||| db	count=1
arg	the first character ||| ch input_iter	count=1
class	current database ||| database	count=3
function	queryset ||| field queryset	count=2
module	of this geoqueryset ||| gis db models	count=1
module	that joins [module] ||| [module]	count=2
class	geometry that have not ||| ogrgeometry	count=1
function	[function_1] layer ||| [function_2] [function_1]	count=4
module	[module_1] of ||| [module_2] [module_1]	count=12
function	is the union ||| union	count=1
arg	[arg_1] and ||| [arg_2] [arg_1]	count=14
function	edited object represented ||| edited object	count=1
function	extra ||| extra	count=4
function	the string name ||| str	count=2
class	of the week ||| format	count=1
function	name is needed (so ||| name raw	count=1
function	the corresponding ||| lazy	count=1
arg	a date object ||| date	count=1
function	[function_1] override uncaught ||| [function_1] [function_2]	count=2
function	be an item of ||| check field	count=1
module	of date objects ||| models	count=1
class	for ||| response base	count=2
arg	given instance finds an ||| instance	count=1
function	the modification time ||| last modification	count=1
function	filter clause but doesn't ||| filter	count=1
function	ordering the queryset uses ||| ordering	count=1
function	if ||| init	count=1
module	for easy lookups ||| translation	count=1
arg	date object so ||| date	count=1
function	x ||| x	count=6
arg	to the given ||| plan state	count=1
class	optional dictionary of ||| connection handler	count=1
class	the module specified in ||| settings	count=1
function	tuples [ ||| compile	count=1
class	[class_1] value for ||| [class_2] [class_1]	count=3
module	3-tuple of ||| db	count=1
class	a template [class] ||| [class]	count=2
class	transaction and ||| wrapper	count=1
arg	a contenttype into ||| using ct	count=1
function	static [function_2] ||| [function_2] [function_1]	count=2
function	create an object ||| create object from params	count=1
function	[function_1] time zone ||| [function_2] [function_1]	count=16
class	in this class are ||| settings holder	count=1
module	of the ||| contrib gis db	count=4
function	otherwise uncaught ||| handle uncaught	count=1
arg	request if it ||| request	count=1
class	cache if the ||| cache	count=4
module	current ||| auth management	count=1
module	the input ||| contrib gis db backends	count=1
function	per save yet need ||| save base	count=1
function	the initial ||| get initial	count=1
function	[function_1] [function_2] ||| [function_1] like [function_2]	count=21
arg	the given model ||| model	count=2
class	and ||| apps	count=3
function	init this ||| init	count=1
class	[class_1] set in ||| [class_1] [class_2] annotate	count=2
class	expression ||| base expression	count=2
function_arg	code [arg_2] ||| [arg_2] [function_1]	count=1
function	need temp columns ||| temp	count=1
arg	in the middle of ||| value	count=1
module	this is for the ||| gis gdal	count=1
class	zeros i e '1' ||| date format	count=1
function_arg	y [arg_2] ||| [function_1] [arg_2]	count=1
module	leading zeros i e ||| utils	count=1
class	returns a decimal ||| decimal field	count=1
module	instance guaranteed to ||| sessions	count=1
class	a ||| database	count=1
arg	result ||| result func cargs	count=1
module	list [module_2] ||| [module_2] [module_1]	count=1
module	returns a 6-tuple ||| gis db	count=1
module	if ||| db models	count=3
function	[function] in ||| get year [function]	count=1
module	point_count ||| contrib	count=1
module	for ||| db backends base	count=13
module	the pixel [module_2] ||| [module_1] [module_2]	count=2
class	before migrating ||| wrapper	count=1
module	methods by default ||| core cache backends	count=2
module	key checks after ||| backends	count=1
function	[function_1] prefix ||| [function_1] [function_2] field_name	count=1
class	alters ||| schema editor	count=1
function	list of all migrations ||| show list	count=1
function	help text ||| help text	count=2
module	the node ||| contrib gis	count=1
function	re-enable ||| enable	count=1
module	this instance ||| db models	count=1
class	sets [class] header unless ||| http response [class]	count=1
function	y with ||| y	count=1
function	test settings are available ||| prepare test settings	count=1
function	[function] locale directory ||| process [function]	count=1
class	the last value ||| multi value	count=1
function	[function_1] forms ||| [function_1] [function_2]	count=2
module	the list [module_2] ||| [module_2] [module_1]	count=1
module	cache ||| utils translation	count=2
class	an ||| model	count=3
function	extent3d ||| convert extent3d	count=1
module	point_count ||| gis	count=1
function	[function] object from ||| import [function]	count=1
module	files in ||| staticfiles	count=1
function	search ||| search	count=3
function	passes [function_2] ||| [function_1] [function_2]	count=2
arg	given sql ||| sql	count=1
class	transaction ||| base	count=1
function	cast a datetime ||| datetime cast	count=2
function	[function_1] content for ||| [function_1] [function_2]	count=3
module	points in this ||| gis gdal	count=2
module	languages ||| translation	count=1
module	tuples [ directory file ||| core	count=1
class	this expression and ||| expression	count=1
arg	fields or an ||| fields	count=1
function_arg	items this [arg_2] ||| [function_1] [arg_2]	count=2
arg	dom node ||| node	count=1
module	standard ||| contrib gis geos	count=3
module	any applied migrations ||| db migrations	count=1
function	[function_1] short ||| [function_1] [function_2]	count=1
arg	function ||| result func	count=2
arg	a changes dict and ||| changes	count=1
class	reset ||| reset token	count=1
module	and returns a list ||| db backends	count=1
function	reverses the ordering ||| reverse	count=1
function	of fields ||| fields	count=4
module	returns ||| translation	count=2
arg	and by extracting positional ||| params varargs	count=1
function	contain [function] objects in ||| get make [function]	count=1
function	[function_1] point of ||| [function_2] [function_1]	count=2
function	statistics on ||| statistics	count=1
arg	[arg_1] request ||| [arg_2] [arg_1]	count=2
function	an ogr envelope ||| envelope	count=1
arg	modelform return ||| form	count=1
arg	function as ||| view_func	count=1
class	execute sql ||| database operations	count=1
class	creating a deserialization ||| deserialization	count=1
function	or ||| vary	count=1
function	of tuples [ directory ||| compile messages	count=1
module	with elements of self ||| db backends base	count=1
function	returns a dict containing ||| to dict	count=1
function	datetime ||| datetime	count=3
function	the template context for ||| context	count=1
arg	single message to a ||| subject message from_email	count=1
function	password change ||| password change	count=2
class	[class_1] error which ||| [class_2] [class_1]	count=3
function	list of ||| locale	count=1
arg	exception to the exception ||| exception	count=1
function	size ||| size	count=3
function	the primary ||| get primary	count=1
class	connector ||| node	count=1
function	out if any non-schema-affecting ||| generate altered	count=1
arg	object ||| response	count=1
function_arg	model name as ||| model name app_label	count=1
module	admin form ||| admin	count=1
module	layer and [module] ||| [module] gis	count=3
class	or datetime ||| time	count=1
module	deep-clone the ||| migrations	count=1
arg	system path to ||| path	count=1
module	all the coordinates ||| contrib	count=1
class	class are ||| settings	count=1
function	file ] ||| messages	count=1
arg	is a boolean ||| obj	count=1
arg	changes so they ||| changes	count=1
function	all objects [function_2] ||| [function_1] for [function_2]	count=2
function	return the next ||| next	count=1
module	pointer location if the ||| contrib gis	count=1
function	create exception subclass ||| subclass exception	count=1
class	if ||| user settings holder	count=2
function	returns a token ||| token	count=1
arg	for two ||| other	count=1
function	the test db ||| clone test db	count=2
function	language ||| get language from	count=1
function	the extra ||| extra	count=1
function	extra [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] response ||| [function_1] [function_2]	count=4
module	and returns a dictionary ||| backends	count=1
class	for geometry ||| geometry	count=1
function	the contenttype object for ||| for	count=1
function	a ||| locale	count=1
function	a new instance of ||| instance	count=1
function	way ||| backend timeout	count=2
class	[class_1] value ||| [class_2] [class_1]	count=3
arg	field_name which may ||| field_name field_index	count=1
arg	function to decide which ||| key_func	count=1
function	sort a ||| sort	count=1
function	value ||| name validator	count=1
module	postgis ||| postgis	count=1
module	guaranteed to ||| sessions	count=1
function_arg	adds headers [arg_2] ||| [arg_2] [function_1]	count=2
class	tuple ||| envelope	count=1
function	remove a preprocessed copy ||| cleanup	count=1
function	[function_1] forms ||| [function_2] [function_1]	count=2
function	fields and raises a ||| fields	count=1
function	html representation of a ||| html	count=1
module	order_by() ||| db	count=1
arg	[arg_1] password ||| [arg_2] [arg_1]	count=3
module	when ||| apps	count=1
function	[function_1] an integer ||| [function_1] [function_2]	count=3
function	columns ||| columns	count=3
module	the app or project ||| core management	count=1
module	contain ||| views	count=1
class	tuples [ directory ||| command	count=1
arg	format_html for the common ||| sep format_string args_generator	count=1
class	permission this method ||| permissions mixin	count=1
module	returns a clone of ||| gis	count=1
function	the corresponding models have ||| model operation	count=1
function	used to descend ||| descend	count=1
module	list of date ||| models	count=1
function	containing ||| containing	count=1
module	essentially ||| db	count=1
arg	patterns ||| parents	count=1
module	the results ||| db models	count=1
function_arg	[function_1] the value ||| [arg_2] [function_1]	count=4
function	spatialreference ||| srs entry	count=1
function	a not ||| ask not	count=2
module	memory used by the ||| contrib gis	count=1
function	enable the given language ||| language	count=1
function_arg	items [arg_2] ||| [arg_2] [function_1]	count=1
class	optional dictionary of ||| connection	count=1
function	migrate the ||| migrate model	count=1
function_arg	to descend [arg_2] ||| [function_1] field [arg_2]	count=4
function	x variable ||| x	count=1
arg	value for ||| value safe	count=1
function	returns a python ||| to python	count=1
function	closes the current connection ||| close if unusable	count=1
arg	user in the request ||| request	count=1
function	of ("app_label", ||| lazy model	count=1
function_arg	[function_1] [arg_2] ||| [function_1] sanity check [arg_2]	count=1
class	form adding ||| form	count=1
arg	a more explanatory message ||| original_exc model fk	count=1
class	and saves ||| manager	count=1
function	the type ||| field type	count=1
function	keyword arguments ||| kwargs	count=4
function	target file ||| file	count=1
module	configuration variables not ||| conf	count=1
arg	environ ||| environ key default	count=2
arg	with the value value ||| value	count=1
arg	the parser ||| parser	count=1
function_arg	extended slice [arg_2] ||| [function_1] [arg_2]	count=1
function	to user-provides languages ||| all	count=1
arg	statements which are ||| statements parameters	count=1
arg	of inline formsets and ||| request form formsets change	count=1
arg	name value ||| field value	count=1
module	units of [module_2] ||| [module_1] [module_2]	count=1
module	of geometries in the ||| contrib gis geos	count=1
function	[function] in ||| [function]	count=3
function	be interpolated ||| get readable field data	count=1
module	contains all the ||| contrib gis	count=1
function	of errors ||| errors	count=1
arg	recipient list all members ||| recipient_list	count=1
function	checks the string ||| check	count=1
function	[function_1] normal forwards ||| [function_2] [function_1]	count=1
class	true if [class] has ||| [class]	count=1
function	a number of ||| operation	count=1
module	sqlite3 interface returns ||| db backends sqlite3	count=2
function	[function_1] sql that ||| [function_2] [function_1]	count=4
function	test db ||| clone test db	count=2
class	[class_1] reset ||| [class_2] [class_1]	count=4
arg	parse ||| cls parser	count=1
arg	returned instance to ||| instance fields	count=1
module	and when ||| apps	count=1
function	all ||| send	count=1
class	optional dictionary ||| connection	count=1
function	media [function_2] ||| [function_2] [function_1]	count=2
function	url redirect to keyword ||| redirect url	count=1
arg	msgs contents previously ||| msgs	count=1
function	have been imported ||| lazy	count=1
function_arg	[function_1] given field_name ||| [function_1] latest [arg_2] direction	count=2
module	geometry or raster with ||| db models	count=1
module	tuples [ directory ||| management commands	count=1
function	the test ||| prepare test	count=1
class	the field and the ||| field	count=1
function	list_select_related ||| select related	count=1
class	[class_1] entry ||| [class_1] [class_2]	count=8
function_arg	[function_1] a manager ||| [arg_2] [function_1]	count=3
arg	the app or ||| template	count=1
module	the polygon ||| contrib gis db	count=1
function	cleans an ||| clean	count=1
function	a new [function_2] ||| [function_2] [function_1]	count=7
function	envelope for ||| envelope	count=1
function	expiry date as ||| expiry date	count=1
arg	statements which are ||| statements parameters verbosity	count=1
module	modelform ||| contrib admin	count=2
function	json string ||| string	count=1
class	of ("app_label", ||| apps	count=1
function_arg	[function_1] values ||| [function_1] [arg_2]	count=2
function	return the [function_2] ||| [function_2] [function_1]	count=26
function	ends ||| end serialization	count=1
function	all the ||| operation	count=1
module	pointer location if the ||| contrib gis geos	count=1
module	with optional ||| db backends	count=1
class	projected? ||| sys mixin	count=1
arg	backend the fields ||| fields	count=1
function	[function_1] non-schema-affecting ||| [function_2] [function_1]	count=3
function	[function_1] [function_2] functionality ||| [function_1] [function_2]	count=3
arg	a value in ||| value timeout version	count=2
module	module specified ||| conf	count=1
module	messages to be ||| messages	count=1
module	given ||| contrib admin	count=2
function_arg	[function_1] [arg_2] ||| [function_1] module [arg_2]	count=6
function	from the module specified ||| init	count=1
function	that returns sets ||| sort as sets	count=1
function	the ||| safe	count=1
module	[module] django utils ||| [module]	count=1
module	list of ||| management commands	count=1
function_arg	response [arg_2] ||| [function_1] [arg_2]	count=3
arg	instance to ||| instance fields exclude	count=1
module	the correct mime type ||| contrib	count=1
function	format string ||| from string	count=1
function	user-provides languages ||| all	count=1
function_arg	adds [arg_2] ||| [function_1] [arg_2]	count=1
class	database that will ||| set	count=2
function	optional dictionary of database ||| init	count=1
function	[function_1] current language ||| [function_2] [function_1]	count=2
arg	locations is a ||| locations	count=1
module	return ||| contrib	count=1
module	a dictionary mapping the ||| contrib	count=1
function	the template ||| find template	count=1
module	in the urlconf can ||| views generic	count=1
function	from the start ||| start	count=1
arg	msgs ||| msgs	count=1
function	[function_1] given test ||| [function_2] [function_1]	count=1
function	[function_1] signed ||| [function_2] [function_1]	count=3
module	encoded version of the ||| contrib	count=1
function_arg	insert if [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	to copy path ||| copy file path	count=1
class	settings the 'default_settings' ||| lazy settings	count=1
module	i e '0' ||| utils	count=2
class	cache at ||| base cache	count=1
function	validators in an ||| validators	count=1
arg	update_pk is defined ||| manager using fields update_pk	count=1
class	yield this expression ||| base expression	count=1
function	closes ||| close	count=4
class	in this ||| user settings holder	count=1
class	[class] which ||| [class]	count=2
function	unsaved instance ||| save	count=1
arg	domain and :param locale ||| potfile locale	count=1
module	a ||| commands	count=1
function	models that have ||| models	count=2
function	the __html__ ||| html	count=1
function	of fields to select ||| select fields	count=1
module	by ||| translation	count=1
function	a list of template ||| select template	count=1
class	if the form needs ||| form	count=1
function	an extra ||| item extra	count=1
arg	if ||| request form	count=1
function	handle them ||| handle	count=1
module	with invalid ||| db backends mysql	count=1
function	point with ||| point	count=1
function	permission [function_2] ||| [function_2] [function_1]	count=12
function	routine for ogrinspect that ||| ogrinspect	count=1
function_arg	deserialize a [arg_2] ||| [function_1] [arg_2]	count=2
function	containing ||| get containing	count=1
function_arg	string [arg_2] ||| [function_1] [arg_2]	count=1
class	for ||| user settings	count=1
class	satisfied from ||| user settings holder	count=1
module	instance ||| contrib	count=1
function	test settings are ||| test settings	count=1
function	number of geometries ||| num	count=1
module	and views ||| db backends	count=1
function	parses a string ||| parse	count=2
module	returns true ||| models	count=1
function	lookups by ||| get	count=1
function	been imported ||| model	count=1
arg	value contains no whitespaces ||| value	count=1
class	in the order ||| base form set	count=1
module	output in ||| admin	count=1
function_arg	the search [arg_2] ||| [function_1] results [arg_2]	count=1
arg	response to indicate that ||| response	count=1
arg	updates the "vary" ||| newheaders	count=1
function	permission to add an ||| add permission	count=1
function	time zone for ||| timezone	count=1
class	database ||| set	count=1
module	so [module] ||| [module] gis	count=1
function_arg	sql clause [arg_2] ||| database operations for update [function_1] [arg_2]	count=3
arg	of arg from ||| arg	count=1
function	cache key greater than ||| cache key culling	count=1
function	[function_1] password with ||| [function_1] [function_2]	count=3
module	of the form ||| db models	count=1
function	the country [function_2] ||| [function_1] [function_2]	count=2
module	and lookup ||| gis db backends	count=1
function	have a valid ||| valid	count=1
function	necessary table joins ||| setup joins	count=1
function	untranslated verbose name ||| verbose name	count=1
module	[module] page so ||| [module]	count=2
function	script that may contain ||| script	count=1
function	allow subclasses [function_2] ||| [function_1] [function_2]	count=2
class	associated with this ||| relation	count=1
arg	truncates a string ||| length truncate text truncate_len	count=1
module	the object ||| contrib gis	count=1
function	check that [function_2] ||| [function_2] [function_1]	count=1
arg	the full_plan ||| full_plan	count=1
function	join list ||| join	count=1
function	of database definitions (structured ||| init	count=1
function	alais ||| coords	count=1
class	this command performing system ||| base command	count=1
function	managers using deconstruction ||| managers	count=1
function_arg	return a [arg_2] ||| [function_1] meta [arg_2]	count=3
class	(unit_value unit_name) ||| spatial ref sys mixin	count=1
function_arg	local time ||| localtime value timezone	count=1
function	a dangling [function_2] ||| [function_1] [function_2]	count=1
function	the given httpresponse object ||| vary headers	count=1
module	backends that return a ||| backends	count=1
function	something modified since ||| modified since	count=2
arg	check one item ||| model item label	count=1
function	time zone to ||| timezone	count=1
module	in ||| conf	count=2
module	some backends require ||| db backends	count=1
module	applied migrations have unapplied ||| db migrations	count=1
function	validators in an <ul> ||| password validators	count=1
arg	from [arg] connected ||| [arg]	count=1
class	list ||| list filter	count=2
function	a time ||| time	count=1
function	[function_1] time zone ||| [function_1] [function_2]	count=7
function	descend ||| descend	count=1
function	datetime date ||| date format	count=1
module	views [module_2] ||| [module_1] [module_2]	count=8
arg	a given host ||| host	count=1
class	i e '0' to ||| format	count=1
arg	email and [arg_2] ||| [arg_1] [arg_2]	count=1
module	the number of ||| contrib	count=1
class	combine ||| database operations	count=1
function_arg	[function_1] in ||| [arg_2] [function_1]	count=9
class	resets the dirty flag ||| base database wrapper	count=1
module	or the ||| contrib	count=1
function	passes the [function_2] ||| [function_2] [function_1]	count=2
class	[class_1] entry ||| [class_2] [class_1]	count=8
function	format string and ||| from string	count=1
module	and uppercased identifier ||| db backends oracle	count=1
arg	secret ||| secret	count=1
function	[function_1] [function_2] ||| [function_2] time zone [function_1]	count=14
class	[class] any ||| [class]	count=3
module	geos geometry ||| geos	count=1
module	of the year i ||| utils	count=1
function	url to edit ||| url	count=1
function	to ||| db	count=1
module	raster and force a ||| raster	count=1
function	returns an integer ||| int	count=1
module	the this ||| gdal	count=1
module	from memory [module] source file ||| [module] gdal	count=1
module_class	[module_1] [class_2] opening other pop-ups ||| [module_1] [class_2]	count=6
module	for ||| conf	count=1
class	compiled regular expression ||| regex descriptor	count=1
arg	line a text ||| line	count=1
arg	field field_name to ||| field_name	count=1
arg	and ensures [arg_2] ||| [arg_2] [arg_1]	count=6
function	an ||| save	count=1
class	satisfied ||| settings holder	count=2
module	by default it ||| core	count=1
function	new pk values ||| get pk value	count=2
module	the node class ||| contrib gis	count=1
class	connection was explicitly ||| wrapper	count=1
class	updates ||| lazy stream	count=1
module	the corresponding models ||| apps	count=1
function_arg	[function_1] name ||| [function_1] model_name [arg_2]	count=1
arg	in ignore_patterns) ||| patterns	count=1
arg	number ||| num truncate html	count=1
function_arg	y with [arg_2] ||| [function_1] index [arg_2]	count=1
class	available until later stages ||| foreign object rel	count=1
module	geosgeometry ||| gis geos	count=1
module	matches the ||| contrib	count=1
module	with the ||| contrib	count=6
function	__html__ method this ||| html	count=1
function	topology operations takes ||| topology	count=1
module	given httpresponse ||| utils	count=1
function	a string [function_2] ||| [function_2] to [function_1]	count=1
function	field's (that [function] ultimate ||| [function]	count=1
arg	the genericipaddressfield ||| unpack_ipv4	count=1
class	[class_1] set in ||| [class_2] [class_1]	count=2
function	[function_1] content ||| [function_2] [function_1]	count=3
module	shortened and ||| db backends	count=1
class	for this field ||| bound field	count=4
function	for the ||| factory	count=1
class	[class] pop-ups opening ||| [class]	count=1
function	geos used ||| geos	count=1
module	change ||| admin views	count=1
function	checks for changed code ||| code changed	count=1
class	configuration variables ||| holder	count=1
function	popen ||| popen	count=1
arg	a source [arg_2] ||| [arg_2] [arg_1]	count=1
function	of sql statements required ||| sql	count=1
arg	is unavailable use given ||| arg	count=1
function	sure the test settings ||| prepare test settings	count=1
function	given httpresponse ||| patch vary headers	count=1
module	returns ||| db	count=3
module_class	template [class_2] ||| [module_1] [class_2]	count=12
module	this raster ||| gdal raster	count=2
function	not in this ||| init	count=1
function	[function_1] reset ||| [function_2] by name [function_1]	count=1
module	oracle error ||| oracle	count=1
function	clears ||| clear	count=1
module	the polygon data received ||| contrib gis db	count=1
arg	instance change is ||| request form change	count=1
arg	to the base ||| base	count=1
function	handle a ||| handle	count=5
module	certain backends (memcached ||| cache backends	count=1
class	passed into ||| query	count=1
function	headers [function_2] ||| [function_2] [function_1]	count=2
function	number ||| model operation	count=1
function	all models that have ||| related models	count=2
module	initializing the ||| contrib	count=1
function	an extra [function_2] ||| [function_2] [function_1]	count=3
function	migrate ||| migrate	count=1
module	message which ||| core mail	count=2
function	string and then joined ||| html join	count=1
arg	[arg] to ||| verbose_name [arg]	count=2
function	a helper function [function_1] [function_2] ||| [function_2] [function_1]	count=3
function_arg	sql [arg_2] ||| [arg_2] [function_1]	count=5
class	to return a list ||| list filter	count=1
function	total size ||| size	count=1
function	namespaces from ||| namespaces	count=1
arg	convert a key ||| key version	count=1
function	browser closes ||| browser close	count=1
function	of ||| update	count=1
function	specifying custom readonly fields ||| readonly fields	count=1
function	returns a string ||| string	count=2
function	value is empty ||| empty value	count=2
function	system and adds its ||| add srs entry	count=1
arg	given a datatuple of ||| datatuple	count=1
function_arg	[function_1] invalid values ||| [arg_2] [function_1]	count=2
function	check if [function_2] ||| [function_2] [function_1]	count=5
module	range of ||| db models fields	count=1
class	or fully ||| geo	count=1
module	this geometry and the ||| contrib gis geos	count=1
function	[function_1] unget ||| [function_2] [function_1]	count=1
arg	each message to each ||| fail_silently	count=1
arg	passed while querying is ||| opts field	count=1
function_arg	[function_1] given ||| [arg_2] [function_1]	count=1
module_class	return [module_1] [class_2] ||| [module_1] [class_2] get	count=2
arg	a model [arg_2] ||| [arg_1] [arg_2]	count=1
function	to this user ||| user	count=1
function	registered ||| model	count=1
arg	three part [arg_2] ||| [arg_2] [arg_1]	count=4
function	the expiry time of ||| expiry	count=1
function	through ||| through	count=1
module	returns a ||| gis	count=9
arg	single message to a ||| message from_email	count=1
function	sql [function_2] ||| [function_2] [function_1]	count=21
module	is ||| gdal prototypes	count=1
function	sorted [function_2] ||| [function_1] [function_2]	count=3
arg	if the response ||| response header_query	count=1
function	field is a primary ||| field	count=1
arg	update_pk is defined then ||| update_pk	count=1
module	of data ||| models	count=1
function	per save yet ||| save	count=1
function	field name is valid ||| field name	count=1
arg	little endian hexlified binary ||| structure data	count=1
module	returns the ||| core	count=1
arg	and the other geometry ||| other	count=1
arg	filename content ||| filename content	count=2
module_class	[module_1] storage ||| [module_1] [class_2]	count=1
module	either side ||| fields	count=1
arg	using values ||| using	count=1
module	should be deleted ||| staticfiles	count=1
function	interpolated ||| get readable	count=1
function	avoid ||| avoid	count=1
module	app ||| core management	count=2
function	override this to return ||| get	count=1
function	a [function_1] [function_2] ||| [function_1] [function_2]	count=2
class	order_by() ||| query set	count=1
class	directory file ] ||| command	count=1
function	generates a unique name ||| name	count=1
class	[class_1] database ||| [class_2] [class_1]	count=8
module	methods [module_2] ||| [module_2] [module_1]	count=3
function	a date [function_2] ||| [function_1] [function_2]	count=1
function	models have been ||| lazy model operation	count=1
function	namespaces used ||| namespaces	count=1
function	save yet ||| save	count=1
function	into a mime attachment ||| attachment	count=1
arg	path ||| root path	count=1
arg	retrieve the distance parameters ||| handle_spheroid	count=1
function_arg	[function_1] [arg_2] an update query for ||| [function_1] [arg_2]	count=2
function	sunday to '6' saturday ||| w	count=1
arg	a function that returns ||| func cargs	count=1
class	objects into memory so ||| objects	count=1
function	or updates ||| patch vary headers	count=1
class	a [class] ||| process [class]	count=3
class	of ||| query set	count=1
function	pk values ||| get pk value	count=2
function	not null field ||| not null	count=2
function	the given queryset-like can ||| can	count=1
function	list of choices for ||| choices	count=1
function	the units name ||| units	count=1
class	a modelform return an ||| model admin	count=1
arg	the values into ||| values	count=1
module_class	[module_1] session store ||| [module_1] [class_2]	count=4
function	parameters suitable ||| params	count=1
module	the fields ||| models	count=1
function	[function_1] objects of ||| [function_1] [function_2]	count=2
module	year ||| utils	count=1
function	iterates over ||| iter	count=1
function	ordering by the given ||| find ordering	count=1
class	django model ||| base model admin	count=2
function	returns the name ||| get timezone name	count=1
module_class	the new [class_2] ||| [module_1] [class_2]	count=2
class	'objs' to the ||| collector	count=1
arg	request [arg_2] ||| [arg_1] [arg_2]	count=1
class	[class] curried ||| many to many [class]	count=3
module	a [module] tag module ||| [module]	count=1
function	expected by the backend ||| adapt	count=3
arg	ensures ||| sentinel col_count	count=1
module	[module_1] template ||| [module_1] [module_2]	count=1
function	queryset or a ||| queryset	count=1
function	[function_1] the placeholder ||| [function_2] [function_1]	count=1
class	model instance ||| model form set	count=2
class	model instances for ||| base model	count=3
class	are satisfied ||| settings	count=1
function	as safe for ||| safe	count=1
function	setup ||| setup	count=2
class	attribute name for ||| measure base	count=1
arg	add delta to value ||| delta	count=1
function	of ("app_label", "modelname") tuples ||| model	count=1
class	or has choices ||| admin	count=1
function	names ||| names	count=1
function	convert a relative path ||| relative path	count=1
arg	the given cursor ||| cursor	count=1
arg	field ||| model field	count=1
arg	save the returned instance ||| instance fields	count=1
module	of m rows of ||| db models sql	count=1
function	[function_1] package ||| [function_2] [function_1]	count=1
arg	from a model usually ||| model	count=2
function	of a value ||| value	count=1
class	are ||| user settings holder	count=2
module	you're testing migrations ||| migrations	count=1
module	yields blocks of ||| db models	count=1
function_arg	formset is a ||| formset obj	count=1
function	set the related field's ||| set field	count=1
function	geometry database ||| geo db	count=2
module	urlconf ||| views generic	count=2
class	of extra inline ||| inline model admin	count=1
module	fields passed into this ||| models	count=1
class	database tables ||| base database	count=1
function	a sorted ||| app	count=1
module	transaction and resets ||| base	count=1
function	deletes ||| delete	count=2
function	for the current thread ||| activate	count=1
function	of the file with ||| file	count=1
class	model instance for ||| base model form	count=1
function	__html__ ||| html	count=1
function	is aware ||| is aware	count=2
function	the x-frame-options http header ||| xframe options	count=1
module	the list of ||| db models sql	count=2
function	overlaps ||| overlaps	count=1
function	options have changed ||| options	count=1
arg	of space-separated ||| extra_classes	count=1
arg	filename [arg_2] ||| [arg_2] [arg_1]	count=5
arg	the changes so ||| changes graph migration_name	count=1
function_arg	[function_1] given ||| [function_1] field [arg_2]	count=1
arg	and ensures the ||| sentinel col_count	count=1
function	httpresponse object ||| headers	count=1
function	when all the corresponding ||| lazy model operation	count=1
function_arg	[function_1] it with ||| [arg_2] [function_1]	count=1
arg	value of setting ||| value	count=1
arg	[arg_1] outfile which ||| [arg_2] [arg_1]	count=6
function_arg	[function_1] applications aren't ||| [arg_2] [function_1]	count=4
module	returns none ||| gis	count=1
arg	name with ||| name app_label	count=1
function_arg	initializes on [arg_2] ||| [function_1] [arg_2]	count=3
class	e '0' ||| date format	count=2
function	random ||| get random	count=1
arg	for the given table ||| cursor table_name	count=1
module	the same data but ||| contrib	count=1
function	later use by routers ||| add hints	count=1
function	that blocks until the ||| wait for	count=2
class	are ||| settings	count=1
class	page ||| page	count=1
function	returns a dictionary ||| get for	count=1
class	accessor ||| related field	count=1
module	for backends ||| backends base	count=1
class	of the ||| date format	count=3
function	extent ||| extent	count=1
function_arg	[function_1] a form ||| [arg_2] [function_1]	count=1
function	response ||| response	count=2
function	return the start ||| get	count=3
arg	[arg_1] given allowed_chars ||| [arg_1] [arg_2]	count=2
function	checking ||| checking	count=2
function	handled ||| start	count=1
module	the next ||| contrib gis	count=1
module	backends require special ||| backends	count=1
function	template ||| select template	count=1
function	headers as ||| serialize headers	count=1
function	test ||| test db	count=2
module	the passed-in 2-tuple ||| contrib gis	count=1
function	based on groups ||| groups for	count=1
function	checks the type ||| check	count=1
module	of tuples [ directory ||| management commands	count=1
function_arg	list_per_page [arg_2] ||| [function_1] [arg_2]	count=3
class	and resets ||| database wrapper	count=1
function	get ||| get date	count=1
arg	tests only as it's ||| lookup_name	count=1
module	codename name for ||| contrib auth management	count=1
function	has any ||| has module perms	count=1
module	the 3d bounding-box ||| contrib	count=1
arg	it [arg_2] ||| [arg_2] [arg_1]	count=4
function	a list of choices ||| action choices	count=1
module	point in the ||| contrib gis	count=1
class	the dirty flag ||| base	count=1
function	[function_1] language ||| [function_2] [function_1]	count=4
arg	mutation on ||| app_label schema_editor from_state to_state	count=1
function	returns the list of ||| get	count=1
function	object in ||| from	count=1
function	and ||| lazy model	count=3
class	handler ||| upload handler	count=1
function	returns a [function_1] [function_2] name ||| [function_1] [function_2]	count=1
module	the ||| db	count=7
module	with ||| db backends	count=9
function	the untranslated verbose name ||| verbose name raw	count=1
function	app or project ||| template	count=1
module	the object ||| contrib admin	count=1
function	[ ||| messages	count=1
function	is a package ||| is package	count=2
module_class	query [class_2] ||| [module_1] [class_2] annotate	count=2
function	[function_1] update ||| [function_2] [function_1]	count=10
module_class	[module_1] tuple ||| [module_1] gis gdal [class_2]	count=2
class	actual time or datetime ||| time	count=1
module	[module] an ||| [module]	count=3
function	context if ||| get context data	count=1
class	column for ||| base spatial field	count=1
function	host using ||| host	count=1
module	sqlite3 ||| sqlite3	count=1
arg	[arg_1] from sender ||| [arg_1] [arg_2]	count=1
arg	or [arg_2] ||| [arg_2] [arg_1]	count=1
class	models ||| apps	count=1
class	removes ||| database schema editor	count=2
module	a transaction and resets ||| base	count=1
function	of intersection of ||| intersection	count=1
module	implementation doesn't examine ||| admin	count=2
class	the email [class_2] ||| [class_1] [class_2]	count=1
function	script_name environment variable ||| get script name	count=1
arg	absolute path ||| path prefix	count=1
function	list of template ||| select template	count=1
module	lookup value and ||| db backends	count=1
arg	ensures the ||| sentinel col_count	count=1
function	a not null field ||| not null	count=2
arg	name in table_names ||| table_names	count=2
class	returns this formset ||| base form	count=1
function	all the ||| lazy	count=1
function	given httpresponse object ||| patch vary headers	count=1
arg	set to true) ||| offset	count=1
function	and available ||| available name	count=1
arg	specified app_label and a ||| cls app_label	count=1
function	ordering field [function_2] ||| [function_1] [function_2]	count=1
module	override this method ||| contrib auth	count=1
function	the module specified in ||| init	count=1
arg	[arg_1] expires ||| [arg_2] [arg_1]	count=4
class	a password ||| password	count=1
function	list of fields ||| list	count=1
function	check the ||| check	count=1
function	and ||| lazy model operation	count=3
function	wrapper around popen ||| popen wrapper	count=2
arg	fill in ||| opts root_alias cur_depth	count=1
arg	the database connection the ||| connection	count=1
function	from the database ||| from	count=1
arg	key_salt and ||| key_salt	count=1
arg	regex can be ||| regex max_length min_length	count=1
module_class	this linestring ||| geos line string	count=1
function	updates the ||| patch vary headers	count=1
arg	given ||| opts	count=1
arg	[arg] it ||| [arg]	count=2
module	blocks of rows from ||| db models sql	count=1
module	the field is a ||| contrib admin	count=1
function	backend based upon the ||| get backend	count=1
function_arg	[function_1] [arg_2] header as an integer ||| [function_1] age [arg_2]	count=2
class	a cookie ||| cookie	count=1
function	[function_1] models ||| [function_1] [function_2]	count=4
class	forward relation ||| forward many to one descriptor	count=1
function	[function_1] type name ||| [function_1] [function_2]	count=7
function	this type for ||| for this type	count=2
function	placeholder for ||| placeholder	count=1
function	migrations in ||| migrations	count=1
function	sql version of the ||| as sql	count=1
class	given session ||| base session	count=1
module	overridden so [module] geo_format ||| [module] gis	count=1
arg	the given targets ||| targets plan	count=1
module	for [module] user logging ||| [module]	count=1
function	given ||| form	count=1
function	yields formsets ||| get formsets with	count=1
arg	instance ||| instance fields	count=1
arg	ipv6 address ||| ip_str	count=1
module	configuration variables not in ||| conf	count=1
module	[module_1] by ||| [module_1] [module_2]	count=2
function	removes a ||| remove field	count=2
function	temp ||| temp	count=1
arg	[arg_1] flags ||| [arg_1] [arg_2]	count=2
function	for easy ||| get	count=1
function	adds or updates ||| vary	count=1
function	("app_label", ||| model	count=1
module	status code and returns ||| gis geos	count=1
function	the version of ||| version	count=1
function	the inner meta ||| meta	count=1
function	key columns in given ||| key columns	count=3
class	list of tuples ||| simple list filter	count=1
function	string and a ||| from string	count=1
module	the points in ||| contrib gis	count=1
function	or ||| get	count=3
class	returns true if the ||| query set	count=1
class	given django model ||| model	count=2
module	of what the ||| db migrations operations	count=1
function	checks each ||| check	count=2
arg	the number ||| number	count=1
class	safe ||| safe bytes	count=1
class	the reverse ||| reverse	count=2
module_class	the [class_2] ||| [module_1] gis utils [class_2]	count=4
class	of a primary database ||| database	count=1
arg	message to [arg_2] ||| [arg_2] [arg_1] extra_tags	count=1
arg	the number of times ||| context	count=1
arg	database and applies ||| collect_sql	count=1
arg	template and context cache ||| context	count=1
class	possible ||| user settings	count=1
arg	sequence comprising the lines ||| table_name constraints column_to_field_name	count=1
function	returns the distance between ||| distance	count=1
module	geos geometry ||| gis geos	count=1
function	returns the maximum length ||| max name length	count=1
function	an errorlist of errors ||| errors	count=1
module	shortcut to set this ||| gis gdal	count=1
module	this geoqueryset ||| gis	count=1
class	actual date ||| date	count=1
module	ordering the ||| contrib admin	count=1
function	a signed [function_2] ||| [function_2] [function_1]	count=4
function	[function_1] interior rings ||| [function_2] [function_1]	count=1
module	resets the dirty ||| base	count=1
function	uri ||| to uri	count=1
arg	callback returns a value ||| callback timeout	count=1
function	[function_1] checks ||| [function_2] [function_1]	count=2
function	last ||| last	count=2
function_arg	[function_1] from ||| [arg_2] [function_1]	count=1
arg	a regex ||| regex	count=1
module	transaction and resets the ||| db backends	count=1
module	transaction and resets ||| db backends	count=1
arg	key/value pairs ||| data timeout version	count=1
module_class	for [module_1] [class_2] ||| [module_1] gis gdal [class_2]	count=1
class	database definitions ||| connection handler	count=1
function	convex ||| convex	count=1
class	results from applying ||| query	count=1
module	[module] system ||| [module]	count=1
function	[function_1] messages to ||| [function_2] [function_1]	count=2
function	[function_1] language layout ||| [function_2] [function_1]	count=2
class	field on ||| field	count=1
function	[function_1] geos ||| [function_2] [function_1]	count=2
function	relative path ||| path	count=1
function	the po [function_2] ||| [function_2] [function_1]	count=4
function	return an origin object ||| get	count=1
function	valid ipv6 ||| is valid ipv6	count=2
function	return the url ||| get redirect url	count=1
class	cache ||| database operations	count=1
module	and returns ||| gis	count=1
function_arg	[function_1] date of ||| [function_1] next month [arg_2]	count=1
module_class	of this spatial ||| gdal spatial	count=3
function	the stack of ||| update	count=1
module	of all the installed ||| contrib	count=1
module	unpack ||| contrib gis db backends postgis	count=1
arg	set a value ||| value	count=1
function_arg	[function_1] function ||| [arg_2] [function_1]	count=2
arg	if it has changed ||| new_type	count=1
function	[function_1] errors ||| [function_2] [function_1]	count=6
module	silently if the oracle ||| db backends oracle	count=1
function	returns a tuple of ||| get	count=1
class	serializing of the queryset ||| serializer	count=1
arg	installed_apps ||| only_existing include_views	count=1
class	the template and ||| simple template response	count=1
function	not [function_2] ||| [function_1] [function_2]	count=10
function	class ||| factory	count=1
arg	to sender ||| sender weak	count=1
module_class	returns the [class_2] ||| [module_1] [class_2]	count=4
module	the type ||| contrib	count=1
arg	a message to ||| message	count=1
arg	a more explanatory message ||| cls original_exc model fk	count=1
module	used where the ||| contrib	count=1
module	the given model ||| contrib gis	count=1
module	[module_1] admin ||| [module_1] [module_2]	count=10
function	adds its ||| add	count=1
function	main help text ||| main help text	count=3
module	geos geometry object ||| geos	count=1
module_class	[module_1] [class_2] the returned objects have ||| [module_1] [class_2]	count=1
function_arg	[function_1] [arg_2] header as an integer ||| [function_1] [arg_2]	count=3
module	described by the ||| contrib	count=1
function	context if either self ||| context	count=1
function_arg	expression using [arg_2] ||| [arg_2] [function_1]	count=1
arg	the middleware_class ||| middleware_class	count=1
function	allowed [function_2] ||| [function_1] [function_2]	count=3
class	this loader ||| loader	count=1
module	'1' to ||| utils	count=1
class	or project templates are ||| template	count=1
function	save_on_top ||| save on top	count=1
function	date object given ||| date from	count=1
module	the attributes set ||| contrib gis admin	count=1
arg	each message ||| fail_silently	count=1
module_class	[module_1] reference projected? ||| [module_1] spatial [class_2]	count=1
class	given ||| geo query set	count=1
function	of choices ||| action choices	count=1
function	initial data to ||| get initial	count=1
function	with a for ||| for	count=1
function	directory file ] ||| compile	count=1
function	a locale name (en_us) ||| locale	count=1
function	value as ||| as	count=1
function	date object ||| new date	count=2
arg	check one item of ||| model item label	count=1
arg	with a context ||| context	count=1
module	that [module_2] ||| [module_1] [module_2]	count=2
arg	returns context [arg] helpful ||| [arg]	count=1
module	of this [module_2] ||| [module_1] [module_2]	count=1
function	in ||| from	count=1
function	file build process for ||| process	count=1
class	uses the date field ||| date	count=1
function	messages to the ||| messages	count=1
function	to return ||| get	count=3
arg	joins [arg] ||| [arg]	count=1
module	a sequence containing the ||| contrib	count=1
module	[ ||| core management	count=1
function	returns [function_1] [function_2] name ||| [function_1] [function_2] name model model_admin return_attr	count=1
function	reverses ||| reverse	count=1
class	the week numeric i ||| date format	count=1
arg	user last downloaded it? ||| mtime size	count=1
module	retrieve ||| postgresql	count=1
class	the form at ||| base form	count=1
function	ordering ||| clear ordering	count=1
class	adds 'objs' ||| collector	count=1
function	a format string and ||| from string	count=1
function	key function ||| key func	count=1
class	month i e ||| format	count=1
arg	source and [arg_2] ||| [arg_2] [arg_1]	count=1
function	kmz using ||| kmz	count=1
arg	to prevent ||| name val encoding	count=1
module	opening [module] <ul> tags ||| [module]	count=1
module	via the remoteuserbackend ||| contrib	count=1
module	in the urlconf ||| views generic	count=1
class	variables ||| user settings holder	count=2
module_class	the [class_2] ||| [module_1] gis gdal [class_2]	count=2
module	raster and ||| gdal raster	count=1
arg	and :param [arg_2] ||| [arg_1] [arg_2]	count=1
class	the [class] ||| simple template [class]	count=1
module	c [module_2] ||| [module_2] [module_1] wkbreader read	count=3
class	form clean() ||| form	count=1
arg	name in ||| name	count=1
module	contains all the points ||| contrib	count=1
function	geometry [function_2] ||| [function_2] [function_1]	count=7
function	the parameters ||| params	count=1
module	of operations up into ||| db	count=1
function	a duration ||| duration	count=1
module	from ||| conf	count=1
function	annotations that will ||| annotation	count=1
function	sql statements ||| sql flush	count=1
class	a string ||| data	count=1
arg	inline formsets ||| form formsets	count=1
function	start of ||| start	count=1
arg	if possible for ||| using	count=1
arg	according to field_order ||| field_order	count=1
arg	app ||| template	count=1
class	a deserialization [class_2] ||| [class_2] [class_1]	count=4
function	field name ||| field name	count=2
module	mapping models to ||| models	count=1
module	a list of ||| utils	count=2
function	combine a ||| combine	count=1
function	in the given httpresponse ||| headers	count=1
function	salt ||| salt	count=1
arg	for the specified app_label ||| cls app_label	count=1
function_arg	to descend [arg_2] ||| [arg_2] [function_1]	count=4
arg	name with an optional ||| name	count=1
function_arg	references [arg_2] ||| [arg_2] [function_1]	count=2
function	404 error [function_2] ||| [function_2] [function_1]	count=2
class	zeros ||| date	count=1
function	a new session key ||| key	count=1
function_arg	[function_1] a value ||| [arg_2] [function_1]	count=1
function	should be allowed to ||| allow	count=1
module	c ||| prototypes	count=1
module	the urlconf can ||| views generic	count=1
module	and returns a list ||| backends base	count=1
function	chars ||| text chars	count=1
function_arg	exclude [arg_2] ||| [function_1] [arg_2]	count=4
module	database ||| db backends	count=1
class	foreignkey or has choices ||| base model admin	count=1
arg	delta ||| delta version	count=1
class	form needs ||| base form	count=1
class	these are all the ||| based cache	count=1
function_arg	[function_1] [arg_2] ||| [function_1] leading dir [arg_2]	count=4
arg	make it python-compatible as ||| col_name used_column_names is_relation	count=1
function	of ||| model	count=1
function	all ||| model operation	count=1
function	dates and items ||| get dated items	count=1
module_class	this feature ||| gdal feature	count=1
function	or updates the ||| vary headers	count=1
function	to which this relationship ||| related	count=2
function	[function] select items ||| set [function]	count=1
arg	callback returns a value ||| callback	count=1
arg	occur in the full_plan ||| plan full_plan fake	count=1
module	the results ||| models	count=1
arg	found absolute path ||| root path	count=1
function	add http caching headers ||| response headers	count=1
arg	database availability ||| country city city_or_country	count=2
function	database definitions (structured ||| init	count=1
function	return ||| form	count=1
function	format string ||| format	count=4
module	recursively yield template ||| template backends	count=1
arg	after lineno ||| filename lineno	count=1
class	the connection was ||| database wrapper	count=1
module	geometry ||| contrib gis gdal	count=2
function	a ||| model operation	count=2
arg	cursor with ||| cursor	count=1
function	way to tell ||| authenticated	count=1
module_class	reverse [class_2] ||| [module_1] [class_2]	count=3
function	(assumed to be a ||| cipher	count=2
class	do a password ||| password	count=1
function	transaction is committed ||| on commit	count=1
arg	character ||| ch input_iter	count=1
module_class	if this geometry ||| gis gdal ogrgeometry	count=4
class	optional ||| connection handler	count=2
arg	power [arg] evaluates ||| bp [arg]	count=1
module	migrations with dependencies ||| migrations	count=1
module	retrieve ||| backends postgresql	count=2
module	will be ||| models	count=2
module	and the ||| contrib gis	count=7
function	alters m2ms ||| alter	count=1
module_class	[module_1] object ||| [module_1] [class_2]	count=2
class	all other ||| base	count=1
function	slash to ||| with slash	count=1
module	cache of ||| utils	count=1
class	variables not in ||| user settings holder	count=1
module	in this [module_2] ||| [module_2] [module_1]	count=2
class	secure nonce ||| password hasher	count=1
function	[function_1] count ||| [function_2] [function_1]	count=6
class	case-insensitive check for a ||| response base	count=1
module	the given parameter ||| contrib gis	count=1
function	json string ||| db to string	count=1
function	semi major axis ||| semi major	count=1
function	level of ||| set level	count=1
arg	is found in ||| css_selector text timeout	count=1
module	[module] particular ||| contrib [module]	count=2
function	special form ||| get form	count=1
class	the ||| node	count=2
function	initializes on ||| init	count=2
class	session is ||| session base	count=1
arg	response ||| response	count=4
class	class are satisfied from ||| settings	count=1
function	[function_1] code ||| [function_2] [function_1]	count=8
class	not this handler should ||| upload handler	count=1
function	the static [function_2] ||| [function_2] [function_1]	count=2
module	or directly (if the ||| contrib	count=1
class	return a list of ||| simple list	count=1
class	e '1' ||| format	count=1
function_arg	[function_1] [arg_2] ||| [function_1] next month [arg_2]	count=6
function_arg	[function_1] value ||| models sql update query [function_1] related update model [arg_2]	count=1
arg	connection_reset is true, ||| connection_reset	count=1
arg	a localizable format ||| format use_l10n	count=1
module	from applying ||| models	count=1
function_arg	lookup from [arg_2] ||| [arg_2] [function_1]	count=1
function	returns [function_2] ||| [function_1] [function_2]	count=29
function	database schema in the ||| database	count=2
function	checks ||| check query	count=1
module	a sequence or string ||| gis utils	count=1
class	to the email ||| email	count=2
arg	retrieve the distance parameters ||| lookup_type handle_spheroid	count=1
function	returns a response ||| response	count=1
module	checking the ||| contrib gis	count=2
module	the this ||| gis gdal	count=1
module	] ||| core management commands	count=2
function	satisfied from ||| init	count=1
class	is ||| query	count=1
class	cache if ||| base cache	count=4
arg	if signature fails ||| key salt	count=1
function	a decorator ||| html safe	count=1
function	in the ||| update	count=1
function	modified [function_2] ||| [function_2] [function_1]	count=4
function	extra forms in this ||| extra forms	count=1
class	tuple of (unit_value unit_name) ||| spatial ref sys mixin	count=1
function_arg	y [arg_2] ||| [function_1] index [arg_2]	count=1
function	log ||| log addition	count=2
arg	[arg_1] encoded ||| [arg_2] [arg_1]	count=2
arg	applies the ||| collect_sql	count=1
module	a ||| management	count=1
function	any non-schema-affecting [function_2] ||| [function_2] [function_1]	count=4
class	e '0' sunday to ||| format	count=1
function	a name for the ||| suggest name	count=1
arg	and applies ||| collect_sql	count=1
module	returns gml ||| gis	count=1
module	variables not ||| conf	count=1
class	the command line ||| command	count=2
function_arg	[function_1] [arg_2] query for an ancestor ||| models sql update query [function_1] related update [arg_2]	count=2
function	to ||| many to many	count=2
function	lookup kwargs ||| lookup	count=1
function	if the encoding is ||| encoding	count=1
function	configs ||| configs	count=1
function	the initial data to ||| initial	count=1
module	if the ||| contrib gis utils	count=1
class	a ||| safe data	count=1
module	specified index the ||| contrib gis	count=1
function	the [function] of ||| postgis lib [function]	count=1
function	that re-throws [function] ||| wrap [function]	count=1
module	the given httpresponse ||| utils	count=1
function	[function_1] of comparing ||| [function_2] [function_1]	count=1
function	configuration variables not in ||| init	count=1
arg	the value ||| value lookup_type	count=1
arg	the field ||| field created_separately	count=1
class	model instance ||| base model form	count=1
arg	from given lhs ||| lhs rhs	count=1
arg	genericipaddressfield ||| unpack_ipv4	count=1
class	[class_1] records useful ||| [class_2] [class_1]	count=3
class	this class are satisfied ||| user settings	count=1
arg	tests only as ||| lookup_name	count=1
function	the form [function_2] ||| [function_1] [function_2]	count=8
function	[function] in ||| [function] arg	count=1
module	parent raster ||| raster	count=1
module	is authenticated via the ||| contrib	count=1
function	clear ||| clear	count=3
function	fields to ||| fields	count=3
function	the corresponding models have ||| lazy model operation	count=1
function	string [function] ' ||| [function]	count=1
function_arg	[function_1] [arg_2] leading path ||| [function_1] [arg_2]	count=4
module	dictionary with the ||| contrib	count=1
function	be allowed to display ||| allow	count=1
arg	returned instance to the ||| instance fields exclude	count=1
module	in [module] given ||| [module] auth	count=1
module	forms in the ||| forms	count=2
class	django model instance ||| base model admin	count=2
module	for [module] given ip ||| [module]	count=1
function	paginate ||| paginate	count=1
module	and the ||| contrib gis geos	count=1
class	associated with ||| relation	count=1
class	the cache at once ||| cache	count=1
module	the dirty flag ||| base	count=1
function	all available dates for ||| dates	count=1
module	geometry field ||| gis	count=1
function	returns a sequence ||| get	count=1
class	minor subminor ||| post gisoperations	count=1
function	of ("app_label", ||| model operation	count=1
function	hash ||| hash	count=1
arg	filename ||| filename	count=2
arg	of inline formsets and ||| formsets	count=1
module	of the ||| contrib gis gdal	count=12
class	of ||| node	count=1
class	[class_1] field returns ||| [class_2] [class_1]	count=3
module	and returns ||| backends	count=3
function	unapplied ||| unapplied	count=1
function	a cascaded ||| cascaded	count=1
arg	this routine will retrieve ||| feat rel_model rel_mapping	count=1
function	[function_1] log ||| [function_2] [function_1]	count=4
module	checks if the ||| contrib	count=2
function	last executed by ||| last executed	count=1
function_arg	[function_1] [arg_2] path ||| [function_1] dir [arg_2]	count=2
function	primary [function_2] ||| [function_1] [function_2]	count=3
arg	placeholder ||| placeholder params	count=1
arg	app or project ||| template	count=1
module	[module_1] the ||| [module_2] gis [module_1]	count=12
class	field ||| bound field	count=2
function	[function_1] etags given ||| [function_2] [function_1]	count=1
module	the linear ||| contrib gis gdal	count=1
arg	message ||| message fail_silently	count=2
module	backends can implement as ||| db backends	count=2
module	[module_1] that ||| [module_1] [module_2]	count=2
function_arg	to local [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] select ||| models sql query clear [function_2] [function_1]	count=3
module	[module] converted ||| [module]	count=1
module	date for [module] user ||| [module]	count=1
module	transaction ||| base	count=1
module	of geometries in the ||| contrib	count=1
class	the date field ||| date	count=1
function	form [function_2] ||| [function_2] [function_1]	count=8
arg	of the http request's ||| environ	count=1
function	returning a 2-tuple of ||| listdir	count=1
function_arg	ogrinspect that [arg_2] ||| [arg_2] [function_1]	count=2
function	manytomanyfield related objects ||| m2m field	count=1
function	a cascaded union of ||| cascaded union	count=1
module	the view ||| views generic	count=2
function_arg	[function_1] from ||| [function_1] keys [arg_2]	count=1
function	write ||| write	count=1
module	shortened and uppercased ||| db backends	count=1
module	at [module] index ||| [module]	count=2
function	[function_1] objects ||| [function_1] [function_2]	count=4
class	a modelform return an ||| admin	count=1
function	new pk ||| pk	count=1
module	customizing ||| admin	count=2
function	related field's ||| field	count=1
module	this queryset to ||| models	count=1
arg	register func ||| func using	count=1
arg	provided connection ||| connection	count=1
function	when ||| lazy	count=1
function	leading path [function] ||| has leading [function]	count=1
function	test database ||| test db	count=2
function	modelform return an unsaved ||| save form	count=1
function	that returns an integer ||| int output	count=1
function	started to ||| loaded	count=1
function	is within ||| within	count=1
function	a name for the ||| name	count=1
function	[function_1] content ||| [function_1] [function_2]	count=3
function	[function_1] the raw ||| files file upload handler [function_1] [function_2]	count=1
function	last argument by reference ||| arg errcode	count=1
class	or project templates ||| template command	count=1
arg	if data ||| data	count=1
function_arg	a shortened [arg_2] ||| [arg_2] [function_1]	count=1
arg	of times ||| context	count=1
module	of ||| models sql	count=8
function	a model's ||| alter	count=1
arg	to the spatial_ref_sys table ||| auth_name auth_srid ref_sys_name	count=1
arg	force the value to ||| value	count=1
function	the command ||| load command	count=1
function	validators in an <ul> ||| validators	count=1
function	ordering refers to ||| ordering item	count=1
function	header into ||| header	count=1
arg	if commit=true otherwise add ||| commit	count=1
arg	name the [arg_2] ||| [arg_2] [arg_1]	count=1
function	local timezone to aware ||| aware	count=1
arg	a secret (which defaults ||| secret	count=1
function	[function_1] sorted ||| [function_2] [function_1]	count=1
class	get ||| year mixin	count=1
class	this queryset to the ||| set	count=1
class	reference [class_2] ||| [class_2] [class_1]	count=1
function	the data to ||| data	count=1
function	[function_1] a sorted ||| [function_1] [function_2]	count=1
arg	change is true if ||| request form change	count=1
function_arg	[function_1] lock rows ||| base base database operations [function_1] [arg_2]	count=2
arg	occur in the full_plan ||| plan full_plan	count=1
arg	databases is ||| databases	count=1
function	through model [function_2] ||| [function_1] [function_2]	count=2
module	all the ||| contrib	count=4
function	a relative [function_2] ||| [function_2] [function_1]	count=1
module	the set of fields ||| models	count=1
function	and when ||| operation	count=1
function	what is the type ||| type	count=1
function	__html__ method this ||| html safe	count=1
module	[module] geometry ||| [module]	count=1
function	alter type ||| alter column type sql	count=1
arg	repoint their to= endpoints ||| model old_field new_field strict	count=1
arg	return an unsaved ||| request form	count=1
class	this handler should ||| file upload handler	count=1
function	and items ||| items	count=1
function	models have been imported ||| operation	count=1
function	[function_1] form ||| [function_1] [function_2]	count=2
arg	an index from a ||| index	count=1
function	yields ||| with	count=1
function	otherwise uncaught ||| uncaught	count=1
function	of tuples ||| compile	count=1
module	backends ||| db backends base	count=8
class	app ||| template command	count=2
arg	username email [arg_2] ||| [arg_1] [arg_2]	count=1
function	actions ||| actions	count=1
arg	fields ||| fields	count=3
function	imported and ||| lazy	count=1
class	order ||| form set	count=1
function	contenttype object for a ||| for	count=1
module	and function ||| db backends spatialite	count=1
arg	path (or ||| root path	count=1
function	is a way ||| is	count=1
function	handle a manytomanyfield related ||| handle m2m field	count=1
function	[function_1] usable ||| [function_1] [function_2]	count=1
function_arg	[function_1] time zone ||| [arg_2] [function_1]	count=1
module	perform the operation ||| contrib gis	count=1
function	manager for [function_2] ||| [function_2] many to one [function_1]	count=1
function	deferred [function_2] ||| [function_1] [function_2]	count=4
function	any cleaning on ||| clean	count=1
module	output in the ||| contrib admin	count=2
function	return the union ||| union	count=1
function	relative [function_2] ||| [function_1] [function_2]	count=1
module	the given ||| utils	count=1
module	that it is compatible ||| utils	count=1
function	the previous valid week ||| get previous week	count=1
arg	[arg] middleware if ||| [arg]	count=3
function	[function] should ||| include empty [function]	count=3
module	template debug ||| template	count=1
class	tuples and ||| apps	count=1
class	of extra inline ||| inline model	count=1
function	random [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] django models ||| [function_2] [function_1]	count=9
module	the root ||| utils	count=1
function	changed [function_2] ||| [function_2] [function_1]	count=2
function	response as kml ||| to kml	count=1
class	list of ||| base date list view	count=1
arg	given a cursor ||| cursor	count=3
function_arg	queryset or [arg_2] ||| [function_1] [arg_2]	count=1
module	the dirty ||| backends base	count=1
class	for point_count ||| ogrgeometry	count=1
arg	modified flag so ||| session_key	count=1
module	values of this ||| gis gdal	count=3
module	directory file ] ||| core	count=1
arg	receiver to sender ||| receiver sender	count=1
function	find what language the ||| get language from	count=1
function_arg	fields should [function_1] [arg_2] ||| [function_1] spec obj model [arg_2]	count=10
arg	[arg_1] index/unique constraint ||| [arg_1] [arg_2]	count=1
function	returns the geometry ||| geom	count=1
function_arg	[function_1] exception should ||| [function_1] [arg_2]	count=6
arg	kahn's algorithm 1962 that ||| dependency_graph	count=1
function	class are satisfied ||| init	count=1
class	connection where no settings ||| connection	count=1
module	a transaction ||| db	count=1
arg	of lookups specified in ||| lookups	count=1
module_class	[module_1] checks ||| [module_1] [class_2]	count=3
module	method this helps ||| utils	count=1
function	destroy ||| destroy	count=1
function	[function_1] attribute (e ||| [function_1] [function_2]	count=3
function	to the login page ||| redirect to login	count=1
arg	schema_editor for ||| schema_editor	count=1
function	attaches as a reverse ||| reverse	count=1
arg	message to the managers ||| message fail_silently connection	count=1
class	i e '0' sunday ||| format	count=1
module	of ||| translation	count=2
module	database definitions (structured ||| db	count=1
arg	[arg] an update ||| model [arg]	count=2
module	for further ||| translation	count=1
function_arg	[function_1] source ||| [arg_2] [function_1]	count=1
arg	given the value ||| value	count=1
class	message and ||| message	count=1
class	deletes ||| form set	count=1
function	and available ||| available	count=1
function	the normal forwards direction ||| forwards	count=1
module	message which can ||| core mail	count=2
arg	truncates a string after ||| length truncate text truncate_len	count=1
function	handles merging together ||| merge	count=1
module	or project ||| management	count=1
class	module specified ||| user settings	count=1
function_arg	[function_1] [arg_2] leading path ||| [function_1] dir [arg_2]	count=2
arg	and are in installed_apps ||| only_existing include_views	count=1
function	otherwise uncaught exceptions those ||| handle uncaught	count=1
module	return the ||| contrib sessions	count=1
function	name ||| suggest name	count=1
class	the field on the ||| field	count=1
function	[function_1] string and ||| [function_1] [function_2]	count=4
module	the return_geom keyword ||| contrib	count=1
function_arg	name [arg_2] ||| [function_1] [arg_2]	count=3
function	[function_1] a ||| [function_1] [function_2]	count=1
class	a given connection ||| connection	count=1
function	loads templates from ||| load template source	count=2
function	name that ||| name	count=1
function	is true if ||| save	count=1
class	[class_1] collection ||| [class_2] [class_1]	count=4
function	create an object ||| create object	count=1
function	the null ||| field new type null	count=1
module	the value ||| contrib	count=1
function	prepared for saving into ||| prep	count=1
function	given datetime ||| datetime	count=1
module	walks the list of ||| models sql	count=1
function	points shared by ||| intersection	count=1
function	raw ||| raw	count=1
module	[ directory file ] ||| core management	count=1
function	the expiry time ||| expiry	count=1
arg	function that returns ||| result func cargs	count=1
class	a geosgeometry ||| geosgeometry	count=1
function	library ||| library	count=1
function	loads [function_2] ||| [function_1] [function_2]	count=2
function	[function] for the ||| do get language [function]	count=1
module_class	change [class_2] ||| [module_1] change [class_2]	count=1
function	object represented by this ||| object	count=1
arg	the full_plan ||| full_plan fake	count=1
function	match the migrations in ||| migrations	count=1
function	points [function_2] ||| [function_2] [function_1]	count=8
module	edit the object represented ||| contrib admin	count=1
class	time zone ||| time	count=2
arg	the given function ||| func	count=2
class	foreign ||| base database wrapper	count=2
class	dummy to ||| dummy	count=1
module	file ] ||| core management commands	count=1
function	string [function] ' ' ||| [function]	count=1
module_class	of this field ||| gdal field	count=3
module	loads a [module] ||| [module]	count=3
module	a geometry representing the ||| contrib gis	count=2
arg	routines that return ||| cargs	count=1
class	input ||| file input	count=1
function	new pk values on ||| pk value on	count=1
module	will be ||| models sql	count=1
function	from loading from the ||| deferred loading	count=1
function_arg	insert [arg_2] ||| [arg_2] [function_1]	count=3
arg	inline formsets and ||| request form formsets	count=1
module	[module_1] interface returns ||| [module_2] [module_1]	count=3
function	the country name ||| country name	count=1
function	[function_1] change ||| [function_2] [function_1]	count=4
class	if this form ||| base form	count=1
class	class are satisfied from ||| settings holder	count=1
function	[function_1] a datetime ||| [function_2] [function_1]	count=4
function_arg	[function_1] [arg_2] ||| [function_1] dir [arg_2]	count=4
module	in the current ||| contrib sessions	count=1
module_class	[module_1] form ||| [module_1] base [class_2]	count=1
arg	class not ||| middleware_class	count=1
module	band's parent raster and ||| raster	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2] get	count=6
function	as ||| filter	count=1
module	returns a list of ||| utils	count=1
function	used to descend ||| select related descend	count=1
arg	for a given language ||| language	count=1
arg	specified [arg] which may ||| [arg]	count=1
class	that we ||| text	count=1
function	with the [function_2] ||| [function_1] [function_2]	count=6
function_arg	[function_1] time ||| [function_1] [arg_2]	count=4
function	sqlite ||| sqlite	count=1
function	the media [function_2] ||| [function_1] [function_2]	count=2
class	instance for ||| base	count=1
module	day of the week ||| utils	count=1
function	[function_1] namespaces from ||| [function_2] [function_1]	count=2
function	handles merging together conflicted ||| handle merge	count=1
function	the header into ||| header	count=1
arg	callback ||| callback timeout	count=1
arg	value to be used ||| value	count=1
arg	assign [arg_2] ||| [arg_1] [arg_2]	count=3
arg	name ||| name	count=15
module	and encoded as a ||| backends	count=1
arg	parser [arg] ||| raw_data [arg]	count=3
module	the client for ||| contrib	count=1
class	the given [class] column ||| [class]	count=1
function	by another [function] than the ||| [function]	count=1
arg	it python-compatible as ||| col_name used_column_names is_relation	count=1
module	pixels of the ||| contrib gis gdal raster	count=1
function	sqlite supports stddev as ||| supports stddev	count=1
module	for further ||| utils translation	count=1
function	decodes a base64 encoded ||| base64 decode	count=1
module	features ||| gdal	count=1
class	the results from ||| set	count=1
function	metadata column used to ||| geom col	count=1
class	forms ||| form	count=1
arg	quotes a url ||| url	count=1
function	modification time of the ||| last modification	count=1
arg	given x y ||| x y	count=2
arg	used by ||| version	count=1
module	language-code if there ||| utils	count=1
arg	generates a ctypes ||| argtypes errcheck	count=2
module	the current ||| contrib sessions backends	count=6
module	templates ||| core	count=1
function	technical [function_2] ||| [function_2] [function_1]	count=4
function	value as [function_2] ||| [function_2] [function_1]	count=1
class	from the cache if ||| base cache	count=2
function	permission enabled redirecting ||| permission	count=1
function	translate a block ||| block translate	count=3
module	or project templates are ||| core	count=1
module	or ||| core	count=1
function	of the clear ||| clear	count=2
function	in depth-first order ||| flatten	count=1
class	dictionaries in ||| context	count=1
class	name of the file ||| clearable file	count=1
arg	check one item of ||| item label	count=1
arg	a value to ||| field value	count=1
function	the test [function_2] ||| [function_2] [function_1]	count=9
class	for base spatial ||| base spatial field	count=2
arg	wherenode for a ||| filter_expr branch_negated current_negated can_reuse	count=1
function_arg	[function_1] delta ||| [function_1] key [arg_2] version	count=1
module	all tables and views ||| db backends	count=1
arg	plural based on the ||| plural	count=1
module	dictionary mapping the ||| contrib	count=1
module	in the current ||| contrib sessions backends	count=2
function	the incoming ||| ordered forms	count=1
function	the number ||| len	count=1
function	the sql ||| as sql	count=2
function	comparing ||| anonymous	count=1
function	version [function_2] ||| [function_2] [function_1]	count=12
function	signed ||| signed	count=1
module	the current ||| contrib sessions	count=3
arg	one item ||| obj model item	count=1
class	[class] for ||| [class]	count=1
class	are ||| user	count=1
class	all migration [class_2] ||| [class_1] [class_2]	count=3
function	[function_1] version number ||| [function_2] [function_1]	count=2
function	of ("app_label", "modelname") ||| lazy model operation	count=1
arg	[arg_1] [arg_2] and ||| [arg_1] [arg_2]	count=8
function	file in ||| in	count=1
function	convert a relative ||| construct relative	count=1
function	[function] gap between ||| harden [function]	count=2
arg	given httpresponse [arg_2] ||| [arg_2] [arg_1]	count=1
function	return all models that ||| get related models	count=2
arg	secret ||| value secret	count=1
module	and resets the dirty ||| db	count=1
function	a tuple ||| tuple	count=6
function	datetime date object given ||| date from	count=1
module	names from an admin ||| contrib admin	count=1
function	models have ||| operation	count=1
module	after the ||| contrib admin	count=1
function	'365' ||| z	count=1
function	templates ||| template source	count=2
function	base64 for ||| base64 encode	count=1
module	resets the ||| db backends	count=1
arg	[arg_1] response object ||| [arg_2] [arg_1]	count=1
class	migration [class_2] ||| [class_2] [class_1]	count=3
function	absolute url ||| url	count=1
class	get ||| base date detail view	count=1
arg	response object ||| response	count=1
module	shortened and ||| db backends oracle	count=1
arg	for "target" ||| target	count=1
module	configured loaders ||| template loaders	count=1
module	a number ||| apps	count=1
function	all messages to ||| send messages email_messages	count=1
arg	a schema_editor for ||| schema_editor	count=1
class	leading zeros ||| date format	count=1
function	query ||| resolve expression	count=1
arg	a regex with ||| regex	count=1
function	already a quoted ||| quote	count=1
module	the user ||| contrib	count=2
class	for configuration variables not ||| settings holder	count=1
module	parent raster and ||| raster	count=1
function	to be available globally ||| add	count=1
function	and lookup from ||| lookup	count=1
function	postgis [function_2] ||| [function_1] full [function_2]	count=1
function	ids ||| in bulk	count=1
function	namespaces used in ||| namespaces	count=1
function	n-th clone of ||| test db clone	count=2
function	[function] bytesio file ||| receive [function]	count=2
arg	receiver from sender ||| receiver sender	count=1
module	returns true ||| gis	count=1
function	data type for this ||| db type	count=1
module	returns the ||| contrib gis db backends base	count=3
function	a savepoint ||| savepoint	count=2
class	this log ||| log	count=2
arg	found absolute path (or ||| path prefix	count=1
class	a query [class_2] ||| [class_1] [class_2] annotate	count=1
class	instances for ||| base	count=1
function	with the static ||| get static	count=2
class	of files ||| files mixin	count=1
function	tuples and when all ||| model operation	count=1
class	for ||| base model	count=3
function_arg	contents [arg_2] ||| [function_1] contents [arg_2]	count=1
function	queryset that will be ||| queryset	count=1
function	date object given a ||| date	count=1
function	the union ||| union	count=2
module	contain multiple lines and ||| backends	count=1
class	geometry ||| query set	count=1
module	creation and returns the ||| contrib auth	count=1
function	file object [function_2] ||| [function_2] [function_1]	count=1
module	for [module] ||| [module] gis	count=2
function	header in ||| headers	count=1
module	of the ||| contrib gis gdal raster	count=1
function	files ||| files	count=1
function_arg	[function_1] given lhs ||| [function_1] [arg_2]	count=3
function	the encoding ||| encoding	count=1
function	returns the static files ||| get	count=1
function	from the start of ||| start	count=1
function	is the ||| get to	count=1
module	the envelope as ||| contrib	count=1
function	__html__ method this helps ||| html	count=1
function	models ||| models	count=4
function	check a key of ||| key	count=1
function	return the path ||| get path	count=1
module	context manager and ||| backends base	count=1
arg	and a year ||| year year_format	count=1
class	and ||| base	count=1
function	clob column for ||| process clob	count=1
function	returns the value ||| value	count=3
module	guaranteed ||| contrib sessions	count=1
function	[function_1] objects ||| [function_2] [function_1]	count=4
function	destroy [function_2] ||| [function_1] [function_2]	count=3
function	to user-provides ||| locale	count=1
module_class	[module_1] pathinfos containing ||| [module_1] [class_2]	count=4
module	variation of ||| db migrations	count=1
arg	an [arg_2] ||| [arg_2] [arg_1]	count=1
function	corresponding models ||| lazy model operation	count=1
class	if the form needs ||| base form	count=1
function	[function_1] prefix ||| [function_2] [function_1]	count=11
function	layer metadata and ensures ||| layer	count=1
function	extended [function_2] ||| [function_2] [function_1]	count=2
arg	given contents [arg_2] ||| [arg_1] [arg_2]	count=1
arg	and [arg_2] ||| [arg_2] [arg_1]	count=1
module	dictionary mapping the names ||| contrib	count=1
module_class	from the [class_2] ||| [module_1] files [class_2] handler	count=1
module	to override ||| auth	count=1
function	returns a projectstate ||| project	count=1
function	modules ||| modules	count=1
module	user has a ||| auth	count=1
module	opposed to all models ||| models	count=1
class	actual date [class_2] ||| [class_1] [class_2] check fix default	count=1
function	objects pointing to the ||| objects	count=1
function	to execute ||| execute	count=1
arg	to the request ||| request	count=1
arg	statements which are ||| cursor statements parameters verbosity	count=1
function	media required ||| media	count=1
class	for configuration variables not ||| holder	count=1
module	integer to ||| humanize templatetags	count=1
arg	checking the given lookup ||| opts lookup	count=1
module	the field's string ||| contrib gis	count=1
function	keyword arguments dictionary ||| kwargs	count=2
function	[function] aggregate by ||| [function]	count=3
class	from the given database ||| base database operations	count=1
function	into a json string ||| string	count=1
module	inferred from the ||| contrib	count=1
function_arg	available dates [arg_2] ||| [function_1] [arg_2]	count=2
arg	an entry in ||| cls entry	count=1
function	[function] operator ||| [function]	count=2
module	tuple with elements of ||| db backends base	count=1
module	the translation of ||| utils translation	count=2
function	to generate new pk ||| get pk	count=1
arg	a validationerror containing ||| exclude	count=1
arg	given ||| cls opts	count=1
arg	a value to be ||| value	count=1
class	feature at ||| layer	count=1
function	by the managers ||| managers	count=1
arg	an <object> node ||| node	count=1
module	of different return values ||| db models	count=1
function	raster or a ||| get	count=1
arg	name returns the ||| name	count=1
module	and resets the ||| base	count=1
function	the javascript i18n ||| javascript	count=1
function	a mirror of a ||| mirror	count=1
arg	allowed_chars ||| allowed_chars	count=1
module	contrib [module] ||| contrib [module]	count=3
function_arg	extra [arg_2] ||| [arg_2] [function_1]	count=2
arg	using passed params ||| params	count=1
class	in staticfiles_dirs ||| file system	count=1
class	value ||| multi value	count=1
arg	given contents in ||| contents	count=1
arg	null placeholder needed ||| placeholder	count=1
module	returns a tuple of ||| gis gdal	count=1
function	next interval ||| next week	count=1
function	destroy [function_2] ||| [function_2] [function_1]	count=3
arg	oid used by ||| table_name geo_col	count=1
class	a password reset ||| password reset token	count=2
arg	[arg_1] targets ||| [arg_2] [arg_1]	count=8
class	the field with the ||| field	count=1
class	engine ||| engine	count=2
module	returns a list ||| translation	count=1
function	any non-schema-affecting [function_2] ||| [function_1] [function_2]	count=4
function	or ||| patch	count=1
function	or updates ||| vary	count=1
arg	save the returned instance ||| instance fields exclude	count=1
module	a list ||| management	count=1
arg	checking for routines that ||| cargs	count=1
class	validate_unique on [class] ||| [class]	count=1
function_arg	[function_1] value ||| [function_1] [arg_2]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] type value [arg_2]	count=2
function	available [function_2] ||| [function_1] [function_2]	count=1
module	tuples [ directory file ||| core management commands	count=1
module	key ||| db backends	count=1
module	"modelname") tuples and when ||| apps	count=1
function	returns a dict ||| model to dict	count=1
module	returns true ||| db	count=1
function	[function_1] input string ||| [function_1] [function_2]	count=2
function	uncaught [function_2] ||| [function_2] [function_1]	count=1
function	and ||| model	count=3
class	the database is ||| base database	count=1
module	for rows with ||| db backends	count=1
arg	finders ||| request path insecure	count=1
function	a warning ||| warning for	count=1
class	given ||| model admin	count=2
function_arg	[function_1] it's an ||| [function_1] [arg_2]	count=1
module	for this ||| base	count=2
function	should be allowed ||| allow	count=1
module	default view ||| views	count=1
arg	in table_names for rows ||| table_names	count=1
class	the form needs to ||| base form	count=1
function	references [function_2] ||| [function_1] [function_2]	count=1
function	normalizes it ||| normalize	count=1
function	deferred [function] ||| [function] loaded field	count=3
arg	regex can be either ||| regex	count=1
class	the module specified in ||| holder	count=1
function	a ||| base	count=1
module	of rows from ||| models sql	count=1
function	filesystem path from ||| path from	count=2
function_arg	[function_1] is ||| [arg_2] [function_1]	count=14
arg	using the current ||| using	count=1
function	to ||| update	count=1
arg	adds or updates the ||| response	count=1
module	false if the ||| contrib gis geos	count=1
function	the current time zone ||| to current timezone	count=1
module	when requested the ||| contrib gis gdal	count=1
class	if ||| settings holder	count=2
function	this backend based ||| get backend	count=1
module	[module] for ||| contrib gis [module]	count=3
function	[function_1] field in ||| [function_2] [function_1]	count=2
arg	test the if-modified-since ||| if_modified_since	count=1
arg	given ||| plan state fake	count=1
class	for ||| settings holder	count=2
arg	routine for constructing ||| geo_field field_name	count=1
class	if ||| base	count=2
module	all models when ||| models sql	count=1
arg	add delta to ||| delta version	count=1
class	[class_1] safe ||| [class_2] [class_1]	count=4
arg	get a modelstate representing ||| exclude_rels	count=1
arg	[arg_1] the request ||| [arg_2] level [arg_1] extra_tags	count=2
module	of the database fields ||| contrib gis db backends	count=1
function	media [function_2] ||| [function_1] [function_2]	count=2
arg	time field field_name ||| field_name	count=1
arg	given contents in a ||| contents	count=1
class	associated with this field's ||| relation	count=1
module	displays [module_2] ||| [module_1] [module_2]	count=3
function	javascript i18n functions ||| javascript	count=1
function	true if ||| is ignorable	count=1
module	the version [module] ||| [module] backends	count=1
class	the where clause ||| where node	count=1
function	was something [function_2] ||| [function_2] [function_1]	count=5
class	requests ||| user settings	count=1
class	are satisfied ||| holder	count=1
class	file ||| files handler	count=1
function	or ||| unusable or	count=1
class	the settings the 'default_settings' ||| lazy settings	count=1
class	opposite of ||| query	count=1
module	for the either side ||| fields	count=1
class	true ||| admin	count=1
module	the admin urls by ||| contrib admin	count=1
function	true if the ||| has	count=1
module	with ||| db	count=3
module	when all the corresponding ||| apps	count=1
class	about ||| geo ip	count=1
function	return the country code ||| country code	count=1
function_arg	object [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	text wrapping in ||| wrapping value	count=1
function	the test [function_2] ||| [function_1] [function_2]	count=9
function	handle the raw input ||| handle raw input	count=1
arg	unsaved instance change is ||| form change	count=1
function	sql that extracts ||| datetime extract sql	count=3
module	(sqlite_limit_variable_number) of ||| db	count=1
module	element described by the ||| contrib	count=1
module	the object represented ||| contrib	count=1
function	loads templates ||| load template source	count=2
arg	from_email recipient_list), sends ||| auth_user auth_password	count=1
module	location if the ||| contrib gis geos	count=1
module	string for interoperability ||| utils	count=1
function	string representation ||| str	count=2
module	to ||| utils translation	count=2
class	the forward [class_2] ||| [class_2] [class_1]	count=1
function	po [function_2] ||| [function_2] [function_1]	count=4
arg	[arg_1] values ||| [arg_1] [arg_2]	count=1
function_arg	datetimes for [arg_2] ||| [arg_2] [function_1]	count=2
function	cache key from ||| cache key	count=1
module	list ||| contrib gis geos	count=1
module	return [module_2] ||| [module_2] [module_1]	count=4
function	is empty string ||| empty	count=1
function	[function_1] uncaught ||| [function_2] [function_1]	count=2
function	as specified by http ||| http	count=2
module	will be used to ||| models	count=1
function	permission to change the ||| change permission	count=1
class	class are satisfied from ||| user	count=1
function	return a field ||| get	count=1
function	boundary ||| boundary	count=1
class	when ||| apps	count=1
class	class for ||| model	count=1
function	base64 for ||| base64	count=1
module	list that will be ||| models	count=1
class	load the objects into ||| objects	count=1
arg	[arg_1] [arg_2] ||| [arg_1] from_email [arg_2]	count=2
function	function to ||| generic	count=1
class	obtain the list of ||| date list view	count=1
function	necessary table joins for ||| joins	count=1
module	the ||| contrib messages	count=2
module	if the oracle ||| oracle	count=1
function	the url redirect ||| redirect url	count=2
arg	given x [arg_2] ||| [arg_1] [arg_2]	count=2
function	languages ||| all locale	count=1
function	imported ||| lazy model	count=1
module	location if the ||| contrib	count=1
module	for this ||| db backends base	count=2
module	of m rows of ||| db models	count=1
function	returns a list ||| get	count=4
class	is ||| connection	count=1
function	test [function_2] ||| [function_1] [function_2]	count=9
module	transaction and resets the ||| backends	count=1
arg	lookups specified in ||| lookups	count=1
arg	password is ||| password	count=1
arg	function that ||| func	count=3
class	exist in the database ||| base database introspection	count=1
function	python ||| python	count=1
function_arg	returns the for [function_1] [arg_2] for an update operation ||| base base database operations [function_1] [arg_2]	count=2
arg	inline formsets ||| formsets change	count=1
class	for configuration variables ||| holder	count=1
module	list of tuples [ ||| management commands	count=1
class	[class] initial ||| [class]	count=2
module_class	[module_1] feature ||| [class_2] [module_1]	count=4
function_arg	[function_1] necessary ||| [function_1] [arg_2]	count=3
function	[function_1] list of ||| [function_2] [function_1]	count=4
function	returns a sorted ||| get app	count=3
function	field to not null ||| ask not null	count=2
module	all the points ||| contrib	count=1
function	[function_1] all namespaces ||| [function_2] [function_1]	count=1
module	testing migrations ||| db migrations	count=1
class	have been imported ||| apps	count=1
function	a cascaded [function_2] ||| [function_2] [function_1]	count=4
function	is a [function_2] ||| [function_1] [function_2]	count=2
function	of forms ||| forms	count=1
function	signed cookie ||| signed cookie	count=2
class	a list ||| node list	count=1
class	function for outputting ||| base form	count=1
arg	value [arg_2] ||| [arg_2] [arg_1]	count=8
function	etag return ||| etag	count=1
module	null" prevents mysql ||| mysql	count=1
function	__html__ method this ||| safe	count=1
function	value to ||| value	count=1
function	x coordinate ||| x	count=1
module_class	the given [class_2] ||| [module_1] [class_2]	count=2
arg	when dimension changed ||| table old_field new_field new_type	count=1
function	update the ||| update	count=1
module	the next time ||| contrib gis	count=1
module	that a related ||| models fields	count=1
function	have a valid ipv6 ||| valid ipv6	count=1
class	in the order ||| form set	count=1
class	dictionaries in the ||| context	count=1
function	dictionary of database ||| init	count=1
class	date field ||| date list	count=1
function	entered in the current ||| from current	count=1
module	byte string [module] ' ||| [module]	count=1
function	[function_1] password ||| [function_1] [function_2]	count=3
function	an unsaved instance ||| save form	count=1
module	that the field ||| contrib	count=1
arg	model field is ||| geom	count=1
function	number [function] string ||| [function]	count=1
function	[function_1] [function_2] ||| [function_2] app [function_1]	count=4
module	is this ||| gis db backends base	count=1
module	returns a dictionary of ||| gis	count=1
function	new savepoint only required ||| savepoint create	count=1
module	[ directory file ] ||| commands	count=1
function	is an optional dictionary ||| init	count=1
class	permission this ||| permissions	count=1
arg	name the ||| name	count=1
module	'0' sunday ||| utils	count=1
function	numpy array ||| array	count=1
function	alais for ||| num coords	count=1
module	django's auth ||| auth	count=1
module	decorator for [module_1] [module_2] ||| [module_1] [module_2]	count=8
module	with forward references always ||| db backends	count=1
module	[module_1] raster ||| [module_2] [module_1]	count=3
class	the fields passed into ||| query set	count=1
class	the form migration ||| migration	count=1
arg	shows a ||| connection app_names	count=1
module	database and [module_2] ||| [module_2] [module_1]	count=1
arg	list of any messages ||| messages	count=1
function	an extra keyword arguments ||| item extra kwargs	count=1
module	directory ||| core management	count=1
class	dictionary of database definitions ||| connection	count=1
module	the return_geom keyword ||| contrib gis gdal	count=1
function	[function_1] given model ||| [function_2] [function_1]	count=1
function	[function_1] redirect ||| [function_2] [function_1]	count=4
arg	of format_html for the ||| sep format_string args_generator	count=1
function	sql ||| sql	count=23
function	ogrinspect that ||| ogrinspect	count=1
arg	field lookup value ||| value	count=2
function	all table ||| table	count=1
function	fail ||| fail statements	count=2
function	to update the model ||| update	count=1
function	as kml ||| to kml	count=1
module	sessions from the ||| contrib sessions backends	count=3
class	transaction and resets ||| database	count=1
function_arg	[function_1] the given ||| [function_1] field [arg_2]	count=1
class	for configuration ||| user	count=1
module	the module ||| conf	count=1
module	passed into ||| db models	count=1
module	for stddev and related ||| db backends	count=1
module_class	this [class_2] ||| [module_1] base [class_2]	count=1
module	kml representation of the ||| contrib	count=1
class	template [class] ||| [class]	count=2
arg	[arg_1] to sender ||| [arg_1] [arg_2]	count=1
class	dangling ||| database wrapper	count=1
function	returns ||| get for models	count=1
class	essentially the ||| query	count=1
function_arg	native [arg_2] ||| [arg_2] [function_1]	count=4
function	that returns ||| geom output	count=1
class	permissions ||| permissions	count=1
arg	a lookup_type of 'hour', ||| lookup_type	count=1
arg	given httpresponse object ||| response	count=1
module	of ||| db	count=28
function_arg	[function_1] exception ||| [function_1] [arg_2]	count=6
function	[function_1] [function_2] ||| [function_2] key culling [function_1]	count=3
function	crosses ||| crosses	count=1
class	resets the ||| base database	count=1
class	specified ||| settings holder	count=2
class	table index ||| database	count=1
function	session key ||| session key	count=2
function	to not [function_2] ||| [function_1] [function_2]	count=2
function	a date ||| date	count=2
function	permission to ||| delete permission	count=1
function	given a format string ||| from string	count=1
function	the ||| init	count=1
class	the module specified in ||| user settings	count=1
function	[function_1] permission ||| [function_2] [function_1]	count=1
function	test db tables ||| test db	count=2
module_class	[module_1] [class_2] ||| [module_1] mysql [class_2]	count=2
function	remove all ||| clear	count=1
arg	result ||| result func	count=1
function	prefix to the ||| prefix	count=1
module	[module_1] the spatial ||| [module_1] [module_2]	count=1
function	datetime date ||| date from	count=1
module_class	[module_1] decimal ||| [module_1] [class_2]	count=2
function	unique name ||| create index name	count=1
arg	is unavailable ||| arg	count=1
arg	convert an <object> node ||| node	count=1
module	with invalid foreign key ||| db backends mysql	count=1
function	[function] models ||| get [function] models	count=2
arg	of keys from ||| keys version	count=2
module	using the correct mime ||| contrib	count=1
arg	value of setting clear ||| value	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] fulltext [function_arg_2]	count=1
class	file object [class_2] ||| [class_1] [class_2]	count=4
arg	object has ||| request object	count=2
class	possible ||| user settings holder	count=2
function	of forms that ||| forms	count=1
module	the two geometries is ||| contrib gis geos	count=1
arg	[arg_1] and target ||| [arg_2] [arg_1]	count=2
module	the polygon data received ||| contrib gis	count=1
function_arg	[function_1] [arg_2] from ||| [function_1] key [arg_2] version	count=1
function	[function] placeholder ||| [function] geom	count=1
arg	field from ||| field	count=2
function	list of tuples ||| messages	count=1
function	object ||| new	count=1
module	geographic ||| db models	count=1
module	and encoded ||| sessions backends	count=1
class	mapping ||| layer mapping	count=3
module	[ directory file ||| management commands	count=1
module	set of ||| models sql	count=1
module	should be ||| staticfiles management commands	count=1
arg	wherenode for ||| filter_expr branch_negated current_negated can_reuse	count=1
class	the app or project ||| command	count=1
function	from ||| load from	count=1
module_class	[module_1] object be ||| [module_1] foreign [class_2]	count=1
arg	unsaved ||| request form	count=1
function	[function_1] map generation ||| [function_2] [function_1]	count=2
module	of different return ||| db models fields	count=1
arg	path with storage ||| path	count=1
function	perimeter ||| perimeter	count=1
function	an html [function_2] ||| [function_2] [function_1]	count=2
class	for configuration ||| user settings	count=1
function	ogr ||| ogr	count=1
function	for the object ||| object	count=1
function	permission to [function_2] ||| [function_2] [function_1]	count=8
function	of ||| locale	count=1
function	of available [function_2] ||| [function_1] [function_2]	count=1
class	for this command ||| base command	count=1
function	given ||| truncate name	count=1
function	an unsaved instance ||| form	count=1
class	mapping information ||| layer mapping	count=1
function	the names ||| names	count=1
module	to the database ||| db models	count=1
class	this operation ||| operation	count=2
class	contain ||| view	count=1
arg	candidates ||| names_with_path	count=1
function	in the normal forwards ||| forwards	count=1
module	tuples [ ||| core management	count=1
arg	the geometry according ||| geom prec	count=1
class	contain helpful extra ||| view	count=1
function_arg	slice [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] the number ||| [arg_2] [arg_1]	count=1
module	of any length ||| gis	count=1
class	for every form in ||| form set	count=2
function	the m2m ||| get m2m	count=1
function	nodes when ||| nodes	count=1
module_class	[module_1] linestring ||| [module_1] [class_2]	count=15
arg	message to a ||| message	count=1
class	in the target storage ||| storage	count=1
module	internal or the user ||| contrib	count=1
function	the date [function_2] ||| database operations [function_1] [function_2] sql timedelta	count=1
class	to load the objects ||| nested objects	count=1
class	satisfied ||| user settings	count=1
class	date or datetime ||| date	count=1
class	before migrating a project ||| database wrapper	count=1
function	parse a string of ||| parse	count=1
module	returns ||| contrib auth	count=1
function_arg	[function_1] [arg_2] same leading path ||| [function_1] dir [arg_2]	count=2
function	select certain related models ||| add select related	count=1
arg	one item of list_filter, ||| model item	count=1
module	data but with ||| backends	count=1
module	the points ||| contrib gis	count=1
function	or ||| earliest or	count=1
function	fields ||| get fields	count=2
module	a ctypes ||| gis gdal prototypes	count=1
function	uniquely identifies [function_2] ||| [function_2] [function_1]	count=1
function	[function] ' ||| [function]	count=1
class	if the ||| query set	count=1
function	to cast [function_2] ||| [function_2] [function_1]	count=6
function	email to this user ||| email user	count=1
module	[module_1] sql ||| [module_1] [module_2]	count=2
class	the stack of ||| context	count=1
class	the feed ||| syndication feed	count=2
module	of data ||| db models	count=1
function	passed post ||| post	count=1
module	mapping command names ||| management	count=1
module_class	[module_1] layer ||| [module_1] gdal [class_2]	count=1
arg	single message to ||| message from_email	count=1
module	multiple lines and ||| backends base	count=1
function	[function_1] [function_2] ||| [function_1] change [function_2]	count=2
class	the month ||| date	count=1
function	modified ||| modified	count=1
class	the week ||| date format	count=1
function	return the [function_2] ||| [function_1] [function_2]	count=16
module	backends can override this ||| backends	count=1
arg	retrieve the distance ||| handle_spheroid	count=1
class	to ||| set	count=1
module	false if the ||| contrib	count=1
function	default value ||| default value	count=2
function	errorlist of errors that ||| errors	count=1
class	are ||| holder	count=1
function	based on given kwargs ||| extract	count=1
module	and uppercased identifier ||| db backends	count=1
function	freshly rendered ||| rendered	count=1
class	band ||| gdalband	count=2
function	add a ||| add	count=2
module	of the installed apps ||| contrib	count=1
module_class	the object [class_2] ||| [module_1] [class_2]	count=4
function	returns a tuple containing ||| get	count=1
function	a model's ||| alter db tablespace	count=1
function	db_type(), providing a ||| db parameters	count=1
function	m2m ||| m2m	count=1
function	[function_1] data ||| [function_2] [function_1]	count=1
module_class	the [class_2] ||| [module_1] [class_2]	count=58
function	a format string and ||| string	count=1
function	to generate formsets for ||| formsets	count=1
arg	true if ||| form	count=1
function	the corresponding models have ||| model	count=1
module	the spatial ||| contrib gis	count=1
arg	performs the mutation on ||| app_label schema_editor from_state to_state	count=1
arg	objects ||| s	count=1
arg	object ||| object message	count=2
function_arg	language in the ||| language parser token	count=1
function	names that [function_2] ||| [function_2] [function_1]	count=2
function	cache key ||| generate cache key	count=2
function	sorted list of all ||| app list	count=1
function_arg	index [arg_2] ||| [arg_2] [function_1]	count=1
module	be ||| db models sql	count=2
function	escaped ||| force escape	count=1
function	[function_1] z with ||| [function_2] [function_1]	count=2
module	and resets ||| db	count=1
module	to be ||| contrib admin	count=1
module	of the field ||| contrib gis	count=2
arg	time zone for the ||| timezone	count=1
function	a cache key ||| generate cache key	count=2
function	true if ||| choice has	count=1
function	sql clause ||| sql	count=1
function_arg	[function_1] path that ||| [arg_2] [function_1]	count=4
arg	if the request ||| request	count=1
function	allowed to ||| allow	count=2
module	an ||| core serializers	count=1
module	converts an integer ||| humanize	count=1
function	permission ||| delete permission	count=1
function	select [function_2] ||| [function_2] [function_1]	count=2
module	directory file ||| management commands	count=1
function_arg	y with [arg_2] ||| [function_1] [arg_2]	count=1
module	for this ||| gdal	count=14
module	[module] spatialite ||| [module]	count=1
function	a list of all ||| list	count=1
function	displays the login form ||| login	count=1
class	in the database ||| base database introspection	count=1
module	a dictionary mapping models ||| models	count=1
function	metadata column used ||| geom col	count=1
function	moves a model's ||| alter	count=1
function	cookie ||| cookie	count=1
function	into clickable links ||| urlize	count=1
arg	character limit ||| value limit	count=1
function	the primary key for ||| get primary key	count=1
arg	cursor with placeholders replaced ||| cursor	count=1
function	is committed ||| on commit	count=1
function_arg	template [arg_2] ||| [arg_2] [function_1]	count=4
function	languages ||| all	count=1
arg	[arg_1] changed it ||| status [arg_1] [arg_2]	count=3
arg	an entry ||| entry	count=1
function	cache ||| generate cache	count=1
function	that isn't being used ||| new	count=1
function	block until ||| wait	count=1
function_arg	[function_1] a wherenode ||| [arg_2] [function_1]	count=1
class	template and context ||| simple template	count=1
module_class	this geometry ||| gis gdal geometry	count=3
class	configuration variables ||| user settings holder	count=1
function	using the initial value ||| value	count=1
module	helper get ||| views generic	count=1
module	takes the ||| contrib gis db	count=1
function_arg	returns the for [function_1] [arg_2] update operation ||| base base database operations [function_1] [arg_2]	count=2
class	files called from ||| hashed files mixin	count=1
class	email ||| base email backend	count=2
module	the fields ||| db	count=1
function	creation time as a ||| created time	count=1
function	all table [function_2] ||| [function_2] [function_1]	count=3
function	close ||| close	count=1
function	its vary [function_2] ||| [function_1] [function_2]	count=1
arg	return an unsaved instance ||| request form	count=1
function	save this method is ||| save	count=1
class	decimal places ||| decimal	count=1
module	for [module] ||| [module] db backends	count=3
module	srid of the ||| contrib gis	count=2
arg	entry ||| cls entry	count=1
class	for the object's ||| base model form set	count=1
module	fields instance ||| fields	count=1
arg	[arg_1] locale ||| [arg_2] [arg_1]	count=4
function	sort ||| sort	count=1
module	for the ||| contrib auth	count=1
class	list ||| simple list	count=1
function	any non-schema-affecting ||| generate altered	count=1
module	to edit the object ||| contrib admin	count=1
function_arg	existing fields [arg_2] ||| [function_1] [arg_2]	count=3
module	with the given ||| contrib gis db	count=2
module	to the set of ||| db models sql	count=1
class	this log [class_2] ||| [class_1] [class_2]	count=2
class	inline forms ||| inline	count=2
function	[function_1] uncaught exception ||| [function_2] [function_1]	count=2
module	tuples [ ||| management commands	count=1
class	e '0' to ||| date format	count=1
module	[module_1] the passed-in ||| [module_1] [module_2]	count=3
function	modelform return an ||| save	count=1
function	to not null ||| ask not null	count=4
class	field has an ||| field	count=1
class	connection ||| database creation	count=1
module	doesn't examine ||| admin	count=2
function	references the ||| references	count=2
module	name of ||| db	count=2
function	"modelname") tuples ||| model operation	count=1
module	from the ||| contrib gis gdal	count=1
function	the object ||| object	count=2
class	where clause and ||| where node	count=1
class	for a ||| base	count=1
arg	field lookup value ||| value lookup_type	count=2
function	[function_1] history ||| [function_2] [function_1]	count=3
function	the output [function] ||| output [function] or	count=2
class	stores ||| storage	count=2
arg	for routines that return ||| cargs	count=1
arg	return ||| form	count=1
function	otherwise uncaught exceptions ||| uncaught	count=1
function	tuples ||| operation	count=1
function	of ||| model operation	count=1
module	results from ||| models	count=1
arg	using a localizable format ||| value format use_l10n	count=1
function_arg	[function_1] [arg_2] from ||| [function_1] [arg_2]	count=1
class	for configuration variables ||| user	count=1
class	of this coordinate sequence ||| geoscoord seq	count=2
module	the full template ||| template	count=1
class	of files called from ||| hashed files	count=1
arg	each directory in template_dirs ||| template_dirs	count=1
class	all the cache ||| cache	count=1
class	are ||| template command	count=2
class	value for this ||| value	count=1
module	deep-clone the ||| db migrations	count=1
module	and returns a list ||| db backends base	count=1
class	[ directory ||| command	count=1
module	returns the ||| contrib admin	count=1
function	user"), [function] name ||| [function] swappable settings	count=1
rep	of the [function_arg_2] ||| [module_class_1] [function_arg_2]	count=1
module	cache of ||| translation	count=1
class	to the database ||| database	count=2
module	the client ||| contrib sessions backends	count=1
function	all permissions ||| all permissions	count=1
class	resets the dirty ||| database	count=1
function	list of ||| compile messages	count=1
function	related field's name this ||| field name	count=1
function	a number of ("app_label", ||| lazy model	count=1
function	are ||| template	count=1
class	leading zeros i e ||| format	count=1
function_arg	[function_1] regex ||| [arg_2] [function_1]	count=1
arg	urls into clickable links ||| autoescape	count=1
function	models have been ||| operation	count=1
class	case of ||| case	count=1
module	a transaction ||| base	count=1
class	foreignkey or has ||| model admin	count=1
function	[function_1] options have ||| [function_1] [function_2]	count=5
arg	given request ||| request obj	count=2
function	[function_1] items ||| [function_2] [function_1]	count=5
class	the year ||| format	count=1
module	ensure the ||| contrib	count=1
arg	routines that should ||| cargs	count=1
class	file object [class_2] ||| [class_2] [class_1]	count=4
arg	for routines ||| cargs	count=1
module	the given geometry ||| contrib gis	count=2
module	whether the this ||| gis gdal	count=1
function_arg	typical (app_label model_name) tuples [function_1] [arg_2] ||| [function_1] models tuples [arg_2]	count=1
module	imported and registered ||| apps	count=1
function	slash ||| with slash	count=2
function	lazy i [function_2] ||| [function_1] [function_2]	count=1
module	save the ||| contrib	count=1
arg	source and [arg_2] ||| [arg_1] [arg_2]	count=1
class	for ||| data	count=1
arg	lookup_type of 'hour', 'minute' ||| lookup_type	count=1
class	leading zeros ||| date	count=1
function	all the corresponding ||| operation	count=1
class	the month ||| format	count=1
module	_pointer_ [module] ||| contrib [module]	count=1
module	the list ||| contrib admin templatetags	count=1
function	configuration ||| init	count=1
arg	fields and a sequence ||| fields	count=1
module	a modelform return an ||| contrib admin	count=1
class	a ||| safe	count=1
function	slash to ||| redirect with slash	count=1
module	queryset in one sql ||| sql	count=1
arg	the request [arg_2] ||| [arg_2] [arg_1]	count=1
module	given c arguments ||| gis gdal prototypes	count=1
class	[class_1] up ||| [class_2] [class_1]	count=4
class	return an unsaved ||| model	count=1
function	ordering field ||| ordering field	count=2
class	corresponds ||| gdalraster	count=1
module	property [module] the ||| [module]	count=1
function	("app_label", "modelname") ||| lazy model	count=1
function	set [function_2] ||| geos geoscoord seq [function_1] [function_2] index	count=5
function	is expected by the ||| adapt	count=3
function	to the stack of ||| update	count=1
function	return a sequence containing ||| get	count=2
arg	the given targets ||| targets plan state fake	count=1
function	file build process ||| process	count=1
function	stddev ||| supports stddev	count=1
module	on the client ||| contrib sessions	count=1
function_arg	the fields [arg_2] ||| [arg_2] [function_1]	count=1
module	for ||| template backends	count=1
arg	of timezone ||| timezone	count=1
arg	the request [arg_2] ||| [arg_1] [arg_2]	count=1
function	a value from the ||| from	count=2
function_arg	[function_1] given field_name ||| [function_1] [arg_2]	count=4
module	directly (if the ||| contrib gis gdal	count=1
arg	connector is given ||| connector	count=1
arg	"vary" header in the ||| newheaders	count=1
function	union of ||| union	count=3
module	backends that ||| backends base	count=1
class	set ||| set	count=3
function	returns the [function_2] ||| [function_2] [function_1]	count=23
function	[function_1] [function_2] database connection ||| [function_2] [function_1]	count=3
function	persist a ||| login	count=1
module	been ||| apps	count=1
class	not this handler ||| handler	count=1
function	handle a foreignkey ||| handle	count=1
function	implements the date interval ||| date interval	count=1
class	this queryset to ||| query set	count=1
function	user"), [function] ||| [function] swappable settings	count=1
function	post [function_2] ||| [function_2] [function_1]	count=1
module	backends can override ||| backends base	count=1
class	interoperability ||| safe	count=1
function	pk values on ||| get pk value on	count=1
function	base64 for use ||| base64 encode	count=1
function_arg	language layout [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	migrate [arg_2] ||| [function_1] connection_alias [arg_2]	count=1
class	connection to the database ||| database	count=1
function	a modelform return ||| save	count=1
function	is the symmetric ||| sym	count=1
arg	a form [arg_2] ||| [arg_1] [arg_2]	count=1
class	a decimal ||| decimal field	count=1
arg	a field on ||| field	count=1
class	geometry fields in ||| geometry	count=1
class	given ||| operations	count=2
arg	routine will retrieve the ||| feat rel_model rel_mapping	count=1
arg	the requisite ||| max_digits decimal_places	count=1
module	object from the ||| contrib	count=1
arg	using ||| using	count=2
module	list of ||| utils	count=2
function	the country [function] for the ||| country [function]	count=1
class	the opposite ||| set	count=1
function	a clone of the ||| clone	count=1
function	random password with ||| random password	count=1
function	string and ||| from string	count=1
class	form migration instance ||| migration executor	count=1
module	view decorator that adds ||| views decorators	count=1
class	server ||| backend	count=1
function	associated django ||| django	count=1
function_arg	all namespaces [arg_2] ||| [arg_2] [function_1]	count=1
class	the month without leading ||| date	count=1
module	determine the ||| contrib auth management	count=2
function_arg	[function_1] node ||| [arg_2] [function_1]	count=3
module	the coordinate ||| contrib gis geos	count=1
module	of fields in this ||| gdal	count=2
class	list of ||| base date list	count=1
function	html [function_2] ||| [function_2] [function_1]	count=2
function	ordering the ||| ordering	count=2
function	objects [function_2] ||| [function_1] for [function_2]	count=2
function	alters m2ms ||| alter many	count=1
module	the next ||| contrib gis gdal	count=1
module	by key ||| utils translation	count=1
class	of the week numeric ||| date format	count=1
module	perform the ||| contrib	count=1
arg	the geometry [arg_2] ||| [arg_2] [arg_1]	count=1
function	a not [function_2] ||| [function_2] [function_1]	count=8
module	shortened and uppercased ||| db backends oracle	count=1
function	same format ||| format	count=1
function	[function] each group ||| [function]	count=3
module	further ||| translation	count=1
module	on results from other ||| db models	count=1
module	results ||| db	count=1
function	available for new ||| available	count=1
function	inverse [function_2] ||| [function_1] [function_2]	count=2
class	node ||| node	count=5
class	(structured like ||| connection handler	count=1
function	a single expression ||| expression	count=1
class	we [class_2] ||| [class_2] [class_1]	count=4
function	build process for ||| process	count=1
function	reset sequences ||| sequence reset	count=1
arg	an apps and ||| apps	count=1
function	a geometry ||| geom	count=2
function	purposes of comparison ||| name converter	count=1
module	the configured loaders ||| template loaders	count=1
module	messages ||| messages	count=3
module	fields passed ||| db	count=1
function	load all namespaces from ||| load all namespaces	count=1
class	and implicitly ||| database	count=1
arg	when dimension changed ||| old_field new_field new_type	count=1
class	and resets the dirty ||| wrapper	count=1
arg	key does not exist ||| key default version	count=1
function	set the ||| set	count=7
arg	internal implementation - remove ||| test_database_name verbosity	count=1
function	list of ||| date list	count=1
function	not [function_2] ||| [function_2] [function_1]	count=10
function	meta ||| meta	count=1
module	this method allows ||| gis	count=1
function	context if ||| get context	count=1
function	http ||| http	count=2
arg	change is true ||| form change	count=1
arg	a function ||| func	count=4
arg	up to the given ||| plan	count=1
class	genericforeignkey whose content type ||| generic relation	count=1
function	clears [function_1] [function_2] extra_select columns) ||| [function_2] [function_1]	count=1
function	files ||| all	count=1
function	returns true if the ||| get	count=1
arg	subclass if you want ||| force_insert force_update using update_fields	count=1
module	a layer at the ||| contrib gis	count=1
module	email ||| mail backends	count=1
class	asserts ||| admin selenium test case	count=1
class	given session ||| session base	count=1
arg	instance [arg_2] ||| [arg_2] [arg_1]	count=2
function	random ||| make random	count=1
class	major minor subminor ||| gisoperations	count=1
function_arg	[function_1] it's an ||| [function_1] value [arg_2]	count=1
function	to create an object ||| create object	count=1
function	attempts to return a ||| get	count=1
arg	used ||| version	count=1
function	getting the dated ||| get dated	count=2
function	[function_1] any ||| [function_2] [function_1]	count=1
function	'get_latest_by' option [function] optional ||| [function]	count=1
module	of what ||| db	count=1
function	database type for ||| db type	count=2
function	of ||| test db	count=1
arg	or updates the "vary" ||| newheaders	count=1
module	returns a python ||| gis gdal	count=1
function	something modified [function_2] ||| [function_2] [function_1]	count=4
module	it is [module_2] ||| [module_2] gis [module_1]	count=1
class	the database already ||| database creation	count=2
module	a [module] ||| [module]	count=6
class	any permissions ||| permissions	count=1
class	dictionary mapping ||| mapping	count=1
function	lazy i [function_2] ||| [function_2] [function_1]	count=1
function	subclasses to [function_2] ||| [function_1] [function_2]	count=2
function	any otherwise uncaught exceptions ||| uncaught	count=1
module_class	[module_1] [class_2] returned objects have been ||| [module_1] [class_2] annotate	count=1
class	a string for interoperability ||| data	count=1
function	that extracts a ||| extract	count=2
class	chance this operation ||| operation	count=2
arg	[arg_1] which may ||| [arg_1] [arg_2]	count=1
class	'31' ||| date format	count=1
function_arg	[function_1] field field_name ||| [function_1] sql lookup_type [arg_2]	count=2
arg	the given field ||| field	count=1
function	the type returned when ||| type	count=1
arg	a django forms field ||| form_class choices_form_class	count=1
class	data types and implicitly ||| database	count=1
function	information ||| info	count=3
function	take a ||| lazy	count=1
function	the latest ||| latest	count=1
function	the total [function] of ||| [function]	count=1
function	and when all the ||| model	count=1
module	this user has ||| contrib auth	count=1
function	function ||| srs output	count=1
function	choices for use ||| action choices	count=1
module	boundaries of [module_2] ||| [module_1] [module_2]	count=4
class	are satisfied from ||| holder	count=1
module	of the form "app_label ||| models	count=1
module	helpful ||| generic	count=1
arg	ascii/latin-1 native strings ||| value charset mime_encode	count=1
function	available for ||| available name	count=1
class	database definitions ||| connection	count=1
function	latest object ||| latest	count=1
function	dictionaries in ||| update	count=1
arg	from an entry in ||| entry	count=1
arg	context [arg] helpful ||| [arg]	count=1
function	the ||| lazy model operation	count=1
function_arg	z with [arg_2] ||| [function_1] [arg_2]	count=1
class	true if the queryset ||| query	count=1
arg	iterable and [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	if we're activated ||| complete file_size	count=1
function	change the given ||| change	count=1
class	digits and decimal places ||| decimal	count=1
module	use on the ||| contrib	count=1
arg	regex can be either ||| regex max_length min_length	count=1
function	type ||| lookup type	count=1
module	from the module specified ||| conf	count=1
function	ordereddict of ordering ||| ordering	count=1
function	to create an ||| create	count=2
function	fetch the given ||| fetch	count=1
function_arg	adds [arg_2] ||| models sql update query [function_1] related update model [arg_2]	count=2
function	through model [function_2] ||| [function_2] [function_1]	count=2
module	from ||| db backends sqlite3	count=1
function	[function_1] raw ||| files file upload handler [function_1] [function_2]	count=1
class	'0' sunday to ||| format	count=1
class	engine definitions (structured like ||| engine handler	count=1
module	and resets the ||| db backends base	count=1
function	return a ||| get base	count=2
function	id for it ||| id	count=1
module	and views that exist ||| db backends	count=1
function	the latest object according ||| latest	count=1
function	given user input string ||| user input	count=1
arg	a value [arg_2] ||| [arg_2] [arg_1]	count=2
function	as ||| render to	count=1
arg	field to ||| field created_separately	count=1
function	a number ||| lazy	count=1
function	[function_1] closes ||| at [function_1] [function_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] state [arg_2]	count=6
class	for interoperability ||| safe	count=1
module	provided for ||| contrib gis	count=1
class	returns this [class] rendered as ||| [class]	count=2
arg	[arg_1] a function ||| [arg_2] [arg_1]	count=2
class	project templates are ||| template	count=1
class	of files called from ||| hashed files mixin	count=1
function	the template context ||| context	count=1
module	for ||| gis gdal	count=2
module	the pointer ||| contrib gis gdal prototypes	count=1
arg	module specified in default_settings ||| default_settings	count=1
module	database and ||| backends	count=1
module	the returned string ||| contrib	count=1
module	values [module] the ||| [module]	count=1
module	the set ||| contrib	count=1
function	find a requested ||| find	count=1
arg	[arg_1] code ||| [arg_1] [arg_2]	count=2
class	database ||| base database introspection	count=1
arg	given app_label and model_name ||| app_label model_name require_ready	count=1
function	removes each of the ||| remove	count=1
function	period [function] dates ||| get [function]	count=1
function	models have been imported ||| model	count=1
function	containing a given object ||| get containing	count=1
module	a range of different ||| db models fields	count=1
arg	using passed params ||| lookup params	count=1
class	given connection where ||| connection	count=1
function	http caching headers to ||| headers	count=1
function	path from ||| path info	count=2
function	a signed cookie if ||| signed cookie	count=1
arg	value contains no ||| value	count=1
module	of ||| utils	count=13
function	returns ||| get connection	count=1
function	unique name ||| name	count=1
module	variables ||| conf	count=1
function_arg	[function_1] [arg_2] ||| [function_1] protocol [arg_2]	count=3
module_class	[module_1] a template ||| [module_1] [class_2]	count=5
class	form migration instance false ||| migration	count=1
class	widgets on this form ||| form	count=1
module	whether the set of ||| contrib	count=1
function	[function_1] input string ||| [function_2] [function_1]	count=2
function_arg	given [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] encoding ||| [arg_2] [function_1]	count=1
function	dictionary containing traceback information ||| traceback data	count=1
class	register the field with ||| field	count=1
function	to a slice of ||| set slice	count=1
function_arg	[function_1] is a ||| [function_1] [arg_2]	count=8
class	list of tuples value ||| simple list filter	count=1
arg	django forms field ||| form_class choices_form_class	count=1
module_class	to '31' ||| utils date format	count=1
function	the header into a ||| header	count=1
function	a dict containing the ||| to dict	count=1
module	the fields passed into ||| db	count=1
function	sql clause to ||| sql	count=1
class	requests for ||| user	count=1
function	unicode method up so ||| proxy method	count=2
function	types of ||| field types	count=1
class	given [class_2] ||| [class_1] [class_2]	count=1
module	[module] query ||| [module]	count=2
arg	receiver to sender for ||| receiver sender weak	count=1
arg	sent to ||| to	count=1
function	purposes of comparison ||| converter	count=1
class	value for the ||| value	count=2
function	template context [function_2] ||| [function_2] [function_1]	count=2
arg	handling ||| request resolver exc_info	count=1
function	return the ||| get	count=18
function	of safe ||| safe	count=1
function_arg	set the [arg_2] ||| [function_1] [arg_2]	count=6
class	remove ||| schema editor	count=1
function	been imported and ||| lazy	count=1
function	returns the csrf token ||| get	count=1
module	directly (if the return_geom ||| contrib gis	count=1
function	m2m table ||| m2m reverse	count=1
arg	from sender for ||| sender	count=1
module	urlconf ||| views	count=1
function	[function_1] ordering ||| [function_1] [function_2]	count=1
function_arg	format [arg_2] ||| [function_1] [arg_2]	count=4
class	the objects into ||| objects	count=1
arg	absolute path (or none ||| path prefix	count=1
class	resets ||| base database	count=1
function	variable with the static ||| get static	count=1
function	the app or project ||| handle template	count=1
arg	table between tablespaces ||| model old_db_tablespace new_db_tablespace	count=1
arg	in the ||| timeout	count=1
class	the object ||| object mixin	count=1
module	and when all the ||| apps	count=1
function	project ||| template	count=1
function	should not return 0 ||| zero	count=1
class	returns the ring at ||| polygon	count=1
module	the attributes set ||| contrib gis	count=1
function	a string [function_2] ||| [function_2] [function_1]	count=1
module	helps non-django ||| utils	count=1
function	introspected ||| can introspect	count=1
class	specified ||| user settings holder	count=2
arg	the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=9
function	remove [function_2] ||| [function_2] [function_1]	count=1
function	to paginate ||| paginate	count=1
class	registered ||| apps	count=1
module	about the ||| contrib	count=1
arg	key ||| key version	count=1
module	[module_1] the geometry ||| [module_2] [module_1]	count=1
module	month ||| utils	count=1
function	current time zone for ||| current timezone	count=1
class	configuration variables ||| user settings	count=1
class	start ||| base database operations	count=1
function	corresponding models have ||| model operation	count=1
arg	each field on ||| field	count=1
arg	paths ||| paths	count=1
function	available languages in the ||| get available languages	count=1
arg	for specifying ||| request obj	count=1
module	backends require special syntax ||| db backends	count=1
class	django model instance the ||| base model admin	count=2
arg	value [arg_2] ||| [arg_1] [arg_2]	count=8
class	in this class are ||| user settings holder	count=1
class	transition dummy to a ||| dummy	count=1
module_class	for [module_1] [class_2] ||| [module_1] [class_2]	count=14
function_arg	exception [arg_2] ||| [function_1] [arg_2]	count=1
arg	ambiguous the alias ||| alias	count=1
arg	creates ||| with_limits with_col_aliases	count=1
function	[function_1] string ||| [function_1] [function_2]	count=5
class	in the current database ||| database introspection	count=3
class	hasher ||| hasher	count=1
function	the ||| headers	count=2
arg	values ||| value	count=1
class	value on ||| multi value	count=1
function	and the parameters ||| params	count=1
function	for ogrinspect that ||| ogrinspect	count=1
function	next interval ||| get next week	count=1
function_arg	model's [function_1] [arg_2] ||| [function_1] latest [arg_2] direction	count=1
function	creates a cursor ||| cursor	count=1
function	as [function] ||| spatialite version [function]	count=1
function_arg	be [arg_2] ||| [function_1] spec obj model [arg_2]	count=1
arg	[arg_1] from ||| [arg_1] [arg_2]	count=3
module	satisfied from ||| conf	count=1
function	[function] dates ||| get [function]	count=3
class	this session ||| session store	count=1
arg	accepts a date ||| date	count=1
arg	single [arg_2] ||| [arg_2] [arg_1]	count=8
function	imported and ||| model operation	count=1
module	template api documentation ||| template backends	count=2
function	load all namespaces ||| load all namespaces	count=3
module	modelform ||| admin	count=1
class	for ||| ogrgeometry	count=1
module	backends can implement ||| backends	count=2
function	the javascript ||| null javascript	count=1
module	the input ||| contrib	count=1
function	envelope ||| envelope	count=3
function	[function_1] current ||| [function_1] [function_2]	count=2
class	single email ||| email	count=1
module	construct and return the ||| contrib	count=1
module	be either ||| models	count=1
function	main ||| main	count=2
function	__html__ method ||| html safe	count=1
function	valid redirect ||| valid	count=1
class	objects into memory ||| objects	count=1
module	used by the ||| contrib gis	count=2
arg	using the given encoding ||| encoding	count=1
rep	a full-text [function_arg_2] ||| [module_class_1] fulltext [function_arg_2]	count=1
module	in [module] given opts ||| [module] auth	count=1
function	asserts that the ||| assert	count=1
module	templates are ||| management	count=1
module	a geosgeometry the ||| contrib gis	count=1
function	a decorator that ||| html safe	count=1
module	list of tuples ||| management	count=1
function_arg	available datetimes [arg_2] ||| [arg_2] [function_1]	count=2
arg	full_plan ||| full_plan	count=1
module	feature from the ||| contrib gis	count=1
function_arg	prepare [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] a new ||| [function_1] [function_2]	count=1
module	module ||| conf	count=1
module	models ||| apps	count=1
function	references the [function_2] ||| [function_2] [function_1]	count=1
class	object ||| inclusion	count=1
function	uniquely identifies ||| signature	count=1
function	an unsaved ||| save	count=1
function	a list of paths ||| paths	count=1
function	date object given ||| date	count=1
module	of the field ||| contrib gis db backends	count=2
function	custom prepopulated [function_2] ||| [function_1] [function_2]	count=1
module	field ||| db models	count=2
arg	to the given httpresponse ||| response	count=1
function	have ||| model operation	count=1
class	outputs the feed ||| syndication feed	count=1
function	returns the static ||| get	count=1
arg	of times the ||| context	count=1
arg	updates the "vary" header ||| response newheaders	count=1
function	values [function_2] ||| [function_1] [function_2]	count=5
class	last data value for ||| multi value dict	count=2
function	information for ||| info	count=1
function	set ||| set many	count=1
module	the intersection of ||| gis	count=1
function	current active catalog for ||| catalog	count=1
module	return the uniqueness keyword ||| contrib gis	count=1
class	given ip address or ||| geo ip	count=1
class	time or datetime ||| time field	count=1
class	and decimal places ||| decimal field	count=1
function	[function] 'to_lower' is ||| [function]	count=1
function	return the queryset that ||| get queryset	count=1
function	count of ||| len	count=1
function	reset ||| reset	count=3
arg	according [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] a regex ||| [function_1] [arg_2]	count=1
function	[function_1] foreignkey ||| [function_2] [function_1]	count=1
function	method ||| html	count=1
function	header ||| vary	count=1
module	sensitive [module] ||| [module]	count=1
class	a list of ||| list	count=1
function	the current active catalog ||| catalog	count=1
class	corresponding ||| apps	count=1
module	authenticated via the remoteuserbackend ||| contrib	count=1
function	an ogr envelope by ||| envelope	count=1
class	connection to the database ||| base database wrapper	count=1
module	containing the ||| contrib	count=1
function	[function_1] [function_2] to the ||| [function_1] [function_2]	count=6
module_class	[module_1] projection ||| [module_1] [class_2]	count=2
function	css [function_2] ||| [function_1] [function_2]	count=2
module	files in the extra ||| contrib staticfiles	count=1
function	fieldsets ||| get fieldsets	count=1
module	requests for ||| conf	count=1
module	in the srid of ||| gis	count=2
arg	datatuple of (subject message ||| datatuple	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] get [function_arg_2]	count=2
function	all actions for this ||| actions	count=1
function_arg	[function_1] in the ||| [arg_2] [function_1]	count=9
function	sql version of the ||| sql	count=1
function	a dict containing the ||| model to dict	count=1
class	of the upload ||| upload	count=1
class	of the week numeric ||| date	count=1
function	date object ||| date	count=1
function	engine for ||| engine	count=1
function_arg	query [arg_2] ||| [function_1] query [arg_2]	count=2
arg	key returns ||| key	count=1
module	essentially the ||| models	count=1
function	instance [function_2] ||| [function_2] [function_1]	count=4
function	given fields ||| fields	count=1
module	resets the dirty flag ||| base	count=1
function	[function_1] index ||| [function_2] [function_1]	count=3
function	same format string and ||| format html	count=1
function	quoted [function_2] ||| [function_2] [function_1]	count=1
function	a datetime date ||| date format	count=1
module	not free the pointer ||| contrib gis gdal prototypes	count=1
function	the ||| update	count=2
function	[function] line ||| fetch [function]	count=3
class	this formset ||| form	count=1
function	checks on ||| check	count=1
class	form at the ||| form	count=1
module	create the ||| contrib	count=1
module	routine ||| gis	count=1
function	special way ||| get backend timeout	count=1
function	fields [function_2] ||| [function_2] [function_1]	count=3
class	satisfied from the ||| holder	count=1
function	set instance variables ||| set	count=1
class	for the response ||| template response	count=1
module	to [module] ||| [module] gis	count=1
module	[module_1] messages ||| [module_1] [module_2]	count=6
class	is not bound or ||| bound	count=1
module	code and returns the ||| contrib gis geos prototypes	count=1
function	[function_1] url ||| [function_1] redirect [function_2]	count=1
function	on the root ||| root	count=1
module	decorator that ||| utils	count=1
arg	backend and ||| backend	count=1
function	the given date ||| date	count=1
module	path to a management ||| management	count=1
module	joins [module] ||| [module]	count=2
function	list of choices for ||| action choices	count=1
class	an unsaved ||| admin	count=1
function	sets the creation ||| creation	count=1
function	signal that a new ||| new	count=1
function	form class ||| form class	count=2
module	whether to return the ||| contrib gis gdal	count=1
function	the unget [function_2] ||| [function_1] [function_2]	count=4
function	for relational fields ||| start relational	count=1
class	for the choices ||| model choice field	count=1
function	all messages ||| send messages	count=1
class	for ||| base form	count=4
module	sequence containing the ||| contrib	count=1
class	model ||| model form	count=5
module	null" prevents mysql from ||| db backends mysql	count=1
class	true if ||| query set	count=1
class	a ||| base database	count=1
arg	add_item call ||| item	count=1
module	in the css ||| contrib	count=2
function	returns limit_choices_to for ||| get limit choices to	count=1
class	[class_1] value ||| [class_1] [class_2]	count=3
module	all the coordinates in ||| contrib gis	count=1
module	the information in the ||| contrib sessions	count=1
class	a list of tuples ||| command	count=1
function	used to descend ||| related descend	count=1
module	of the name to ||| models	count=1
module	the given data ||| contrib gis utils	count=1
function	get [function_2] ||| [function_1] [function_2]	count=4
function	which will be interpolated ||| get readable field	count=1
function_arg	[function_1] [arg_2] ||| [function_1] meta [arg_2]	count=5
class	query set in ||| query set	count=1
function	point geometry ||| point on	count=1
class	configuration variables not in ||| user settings holder	count=1
class	of dictionaries ||| context	count=1
function	("app_label", "modelname") tuples ||| lazy	count=1
class	widget [class_2] ||| [class_2] [class_1]	count=8
module	for backends ||| backends	count=1
arg	instance ||| instance fields exclude	count=1
module	certain backends ||| backends	count=2
module	from the ||| contrib	count=5
function	rolls back to a ||| rollback	count=1
module	in the css ||| contrib admin	count=2
function	generate formsets ||| create formsets	count=1
function	the given httpresponse object ||| vary	count=1
module	and column ||| db backends base	count=1
function	set the [function_2] ||| [function_1] annotation [function_2]	count=2
module	on results ||| models	count=1
function	returns the y ||| y	count=1
module	of this ||| gdal	count=16
function	migrate ||| migrate model	count=1
arg	suffix if the value ||| value	count=1
module	second item being files ||| core files	count=1
module	for easy ||| utils translation	count=1
function	[function_1] current ||| [function_2] [function_1]	count=2
function	date ||| date	count=9
function	removes the current ||| remove	count=1
module	get the ||| contrib sessions	count=1
module	returns ||| contrib gis gdal	count=1
function	[function_1] field name ||| [function_1] [function_2]	count=1
function	context if either self ||| get context data	count=1
function	a style object with ||| style	count=1
function	safe ||| safe	count=1
module	queryset to the database ||| db models	count=1
function	returns the sql ||| sql	count=16
arg	function and frees ||| result func	count=2
module	at [module] ||| [module]	count=2
function	command ||| command	count=2
function	admin url ||| get admin url	count=2
function	po ||| po	count=1
class	unsaved ||| model admin	count=2
module	of the ||| contrib gis utils	count=1
class	the response ||| response	count=2
function	header in the given ||| patch vary headers	count=1
arg	those strings according ||| arg	count=1
function	a cursor ||| cursor	count=1
class	current context ||| base context	count=1
module	the sense ||| utils	count=1
class	[class] input ||| [class]	count=3
module	class are satisfied ||| conf	count=1
function	[function_1] [function_2] ||| [function_2] [function_1]	count=974
class	app directories ||| app directories	count=1
class	for deletion ||| base	count=2
function	area for ||| area	count=1
arg	an index/unique constraint ||| model column_names suffix	count=2
module	tuple of the messages ||| contrib messages storage	count=1
function	id field is ||| id field	count=2
module	and resets the dirty ||| base	count=1
function	[function_1] model map ||| [function_1] [function_2]	count=1
arg	is an ||| obj	count=5
function	out as migration ||| write migration	count=2
arg	the geometry [arg_2] ||| [arg_1] [arg_2]	count=1
function	the queryset that will ||| queryset	count=1
module	the corresponding models have ||| apps	count=1
function	maximum allowed batch ||| bulk batch	count=1
module	the ||| generic	count=1
class	[class_1] [class_2] which the returned objects ||| [class_1] [class_2]	count=2
function	language ||| get language	count=1
arg	doesn't contain duplicates ||| obj	count=1
class	time ||| time	count=3
function	[function_1] dated ||| [function_2] [function_1]	count=3
class	new password ||| admin password	count=1
class	satisfied ||| holder	count=1
arg	generated from key_salt and ||| key_salt	count=1
arg	field should ||| field	count=1
arg	[arg_1] with flags ||| [arg_2] [arg_1]	count=2
function	set to expire ||| expire	count=1
function	freshly rendered content ||| rendered content	count=2
function	when all the corresponding ||| lazy	count=1
arg	a django forms ||| form_class choices_form_class	count=1
function	mutates ||| state forwards	count=1
function	start serialization -- open ||| start serialization	count=1
arg	is a sequence of ||| obj	count=2
module	and uppercased ||| db backends	count=1
arg	[arg_1] with ||| [arg_1] target_opts [arg_2]	count=1
function	satisfied from the module ||| init	count=1
class	last value on every ||| multi value	count=1
function	to add an ||| add	count=1
module	models to ||| db models sql	count=1
class	resets ||| database	count=1
arg	the full_plan ||| plan full_plan fake	count=1
function	null ||| field new type null	count=1
module	number ||| apps	count=1
module	of fields to ||| models	count=1
function	the next ||| next	count=3
class	satisfied from the module ||| settings	count=1
function	[function_1] georss ||| [function_2] [function_1]	count=1
function	[function_1] flattening for ||| [function_2] [function_1]	count=1
class	opposite of ||| set	count=1
function	object ||| object from	count=1
function	the file is writeable ||| writeable	count=1
function_arg	string and [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] related instance ||| [function_1] [arg_2]	count=2
function	internal ||| add internal	count=1
class	to the database ||| database wrapper	count=1
module	an optional ||| db	count=1
class	handler should be ||| upload handler	count=1
function	of annotations ||| annotation	count=1
function	this class are satisfied ||| init	count=1
arg	than max_age seconds ago ||| max_age	count=1
function	the modification time of ||| last modification	count=1
class	the sense ||| node	count=1
class	the app or ||| template	count=1
function	imported ||| operation	count=1
class	labels for the choices ||| choice field	count=1
function	[function_1] name to ||| [function_1] object [function_2]	count=1
arg	a localizable format ||| value format use_l10n	count=2
module_class	yields [module_1] [class_2] be rendered ||| [module_1] [class_2]	count=1
module	as ||| core	count=1
module	intersection of this ||| gis gdal	count=1
arg	the error code ||| result func cargs cpl	count=1
function	return all [function_2] ||| [function_1] [function_2]	count=9
class	for ||| base model form	count=1
module	into ||| db models	count=2
module	that the ||| contrib admin	count=1
function_arg	set y [arg_2] ||| [function_1] [arg_2]	count=1
class	[class_1] [class_2] ||| [class_2] [class_1]	count=146
function	write all [function_2] ||| [function_2] [function_1]	count=4
function	admin url to edit ||| admin url	count=1
arg	passed while querying ||| opts field	count=1
function	long integer into a ||| long	count=1
module	of values ||| models sql	count=1
arg	locations is ||| locations	count=1
function	"modelname") tuples and ||| model operation	count=1
function	asserts ||| assert	count=1
function_arg	[function_1] time zone ||| [function_1] naive value [arg_2]	count=1
module	which database [module_2] ||| [module_1] [module_2]	count=2
class	adds ||| simple template response	count=1
arg	receiver from sender for ||| receiver sender weak dispatch_uid	count=1
module	into this ||| db	count=1
arg	the returned instance ||| form instance fields exclude	count=1
function	a salt ||| salt	count=1
module	that it [module_2] ||| [module_2] gis [module_1]	count=1
function	return ||| save form	count=2
module	returns the ||| contrib gis db	count=10
function	handles get ||| get	count=1
function	of ("app_label", "modelname") ||| lazy model	count=1
module	opening [module] <ul> ||| [module]	count=1
class	requests for configuration ||| user settings holder	count=1
module	mapping models to ||| db models sql	count=1
class	the week ||| format	count=1
function	reverse ||| reverse geom	count=1
module_class	this geometry ||| gis gdal ogrgeometry	count=5
class	create ||| database schema editor	count=1
function	tuples [function] models ||| get [function] models	count=1
function	[function_1] a ||| [function_2] [function_1]	count=1
class	defers ||| query set	count=1
function	pointing [function] this ||| rel [function]	count=1
module	yields blocks of rows ||| models sql	count=1
function	double ||| dbl	count=1
class	flag ||| database	count=1
function	a way to tell ||| authenticated	count=1
function	string including the version ||| info	count=1
function	of a value of ||| value	count=1
function	validators for ||| ip address validators	count=1
function	an app config containing ||| containing app config	count=1
function	data type for ||| type	count=1
class	a list ||| command	count=1
function	fields on ||| fields	count=1
function	default handler ||| handler	count=1
arg	is ||| form	count=1
arg	the given cursor with ||| cursor sql params	count=1
arg	to transform a model ||| model	count=1
function	[function_1] settings ||| [function_1] [function_2]	count=4
function	a point ||| point on	count=1
class	[class_1] instance for ||| [class_2] [class_1]	count=2
function	the managers ||| managers	count=1
arg	app_label ||| app_label	count=2
class	session data ||| session base	count=2
function	postgis geometry ||| postgis types	count=1
function_arg	[function_1] wherenode ||| [function_1] filter [arg_2]	count=1
function	iterates over each point ||| iter	count=2
class	that ||| text	count=1
function	extended ||| extended	count=2
class	for interoperability ||| data	count=1
class	add ||| syndication feed	count=1
function	prepared for saving into ||| db prep save	count=1
module	[module_1] raster ||| [module_1] [module_2]	count=3
class	project ||| template command	count=2
function_arg	text of [arg_2] ||| [function_1] [arg_2]	count=2
function	datetime object ||| datetime	count=1
arg	a string of space-separated ||| extra_classes	count=1
class	that we return ||| text	count=1
module	and uppercased identifier as ||| db backends	count=1
function	in the template context ||| context	count=1
function	sql and parameters for ||| assemble as sql	count=1
function	instance ||| instance	count=2
function	a slash ||| with slash	count=1
arg	a key ||| key	count=1
module	location if the original ||| contrib gis geos	count=1
class	[class] the ||| [class]	count=1
function	returns a tuple version ||| tuple	count=1
arg	check one item of ||| item	count=1
function	sql [function] ||| sql with [function]	count=1
module	model ||| db models	count=2
class	resets the dirty ||| base	count=1
class	the ||| date	count=3
function	of db_type(), providing a ||| parameters	count=1
arg	true ||| form	count=1
function	an index with varchar ||| index	count=1
arg	[arg] at ||| index [arg]	count=3
module	band ||| gis gdal raster	count=2
function	list of sql ||| sql	count=1
arg	commit=true otherwise add ||| commit	count=1
class	are satisfied ||| user settings holder	count=1
module	the stack of ||| template	count=1
class	requests for configuration variables ||| user	count=1
module	view with ||| views	count=1
function	imported and ||| lazy model	count=1
function	given a modelform ||| form	count=1
module	[module_1] the number ||| [module_2] [module_1]	count=3
function	the custom url ||| url	count=1
module	all tables and views ||| backends base	count=1
arg	block through variable ||| parser token	count=1
function	placeholder for the ||| placeholder	count=1
arg	given encoding ||| encoding	count=3
function	merging together conflicted ||| merge	count=1
arg	the given cursor ||| cursor sql	count=1
function	update [function] ||| for update [function]	count=2
module	if there ||| utils translation	count=1
function	wsgi handler ||| handler	count=1
function	z with ||| z	count=2
function	migrations in the ||| migrations	count=1
arg	it python-compatible as a ||| col_name used_column_names is_relation	count=1
arg	an unsaved instance change ||| request form change	count=1
arg	[arg_1] email ||| [arg_1] [arg_2]	count=2
function	[function_1] test database ||| [function_1] [function_2]	count=1
class	model's ||| database schema editor	count=1
class	and resets ||| base	count=1
module	if ||| admin	count=1
function_arg	[function_1] string adding ||| [function_1] [arg_2]	count=1
module	the attributes ||| contrib gis admin	count=1
function	all ||| lazy model operation	count=1
function	geometry database type for ||| geo db type	count=1
function_arg	an [arg_2] ||| [arg_2] [function_1]	count=3
module	a transaction and ||| backends base	count=1
class	queryset to the ||| set	count=1
function	the object ||| context object	count=1
function	the [function] of ||| proj4 [function]	count=1
function	edited object ||| get edited object	count=2
module	string for this ||| contrib gis gdal	count=1
arg	outfile which ||| outfile	count=1
class	table ||| oracle geometry columns	count=1
function	[function_1] the ||| templatetags do [function_2] available [function_1]	count=1
module	returns true ||| contrib gis db models	count=1
function	number of [function_2] ||| [function_2] [function_1]	count=4
class	module ||| user settings holder	count=2
function	expand a shortened ||| explode shorthand ip string	count=1
class	project templates ||| template	count=1
function	precision an ||| precision	count=1
module	e ||| utils	count=3
function	the ||| vary headers	count=4
class	memcached deals ||| base memcached cache	count=1
module	the coordinate sequence ||| contrib gis geos	count=1
module	datetime object for this ||| gis gdal	count=1
function	test ||| create test db	count=1
module	[module_1] the current ||| [module_1] [module_2]	count=1
module	the coordinates ||| contrib gis	count=1
class	has choices ||| model admin	count=1
module	is found on the ||| contrib	count=1
module	applying ||| db	count=1
arg	has a get_prefetch_queryset() ||| through_attr to_attr	count=1
arg	routines that return ||| func cargs	count=1
arg	item of fields ||| fields	count=1
module	svg representation of the ||| contrib	count=1
function	to link ||| link file	count=1
function	a clone of ||| clone	count=1
module	returns the ||| translation	count=1
function	and many-to-many [function] objects when ||| prefetch [function]	count=1
module	mysql from implicitly ||| mysql	count=1
module	results ||| models	count=1
class	do a password reset ||| password reset	count=1
module	of operation ||| db migrations	count=2
function	[function_1] all ||| [function_2] [function_1]	count=2
function	returns choices ||| choices	count=1
class	command line ||| app command	count=1
module	sends the ||| core mail	count=1
function	of ("app_label", "modelname") tuples ||| lazy	count=1
module	which database ||| db	count=1
function	model with ||| model	count=1
function	get a [function_2] ||| [function_2] [function_1]	count=2
class	all other ||| base cache	count=1
function	and when all ||| model	count=1
class	the app ||| template command	count=1
class	passed ||| set	count=1
module	dirty flag ||| base	count=1
class	[class_1] file ||| [class_1] [class_2]	count=1
function	"auth user"), [function] name of ||| [function] swappable settings	count=1
arg	column ||| column	count=1
function	username ||| username	count=1
module	list of date objects ||| models	count=1
function	creates ||| create	count=2
module	fields takes the ||| contrib gis	count=1
class	session ||| session	count=9
module	the given data ||| contrib gis	count=1
module	serving ||| conf	count=1
arg	of the geometry according ||| geom prec	count=1
module_class	forward [class_2] ||| [module_1] forward [class_2]	count=1
function	of intersection of this ||| intersection	count=1
function	to temporarily disable ||| disable	count=1
class	given file ||| hashed files mixin	count=2
module	object from this ||| gdal	count=1
function	helper function [function] ||| [function]	count=3
function	feature table ||| table	count=1
function	returns all [function_2] ||| [function_2] [function_1]	count=5
arg	takes a changes dict ||| changes	count=1
module	on the spatial object ||| contrib gis db	count=1
class	list of ||| list view	count=1
function	remove expired ||| clear expired	count=2
function	stddev as an extension ||| stddev	count=1
class	an optional dictionary of ||| connection	count=1
class	check for a ||| base	count=1
function	lookup the template ||| find template	count=1
function_arg	to copy [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	adds the [arg_2] ||| [function_1] [arg_2]	count=1
module	distance lookup value and ||| db backends	count=1
function_arg	handle each [arg_2] ||| [arg_2] [function_1]	count=4
module	[module_1] the envelope ||| [module_2] [module_1]	count=1
function	return an ||| get connection	count=1
module	project templates are ||| management	count=1
function	test ||| clone test	count=1
arg	given character limit and ||| limit	count=1
class	day of the month ||| format	count=1
function	non-hashed [function] ||| [function]	count=3
class	file ||| file system finder	count=2
function	list of paths ||| locale paths	count=1
function_arg	adds name [arg_2] ||| models sql update query [function_1] related update model [arg_2]	count=2
function	[function] in ||| get month [function]	count=1
arg	entry ||| entry	count=1
module	byte string [module] ' ' ||| [module]	count=1
function	[function_1] list ||| [function_2] [function_1]	count=7
function	return an instance ||| get	count=1
function	a modelform ||| save form	count=1
class	the objects into memory ||| nested objects	count=1
arg	context [arg] helpful for ||| [arg]	count=1
function	updates the po file ||| po file	count=1
arg	reads or writes pixel ||| offset size shape	count=1
arg	an apps and ||| cls apps	count=1
function	of choices for use ||| action choices	count=1
function	appending a slash ||| with slash	count=1
function	returns true if ||| is	count=1
module	tuples [ directory file ||| commands	count=1
arg	occur in the full_plan ||| state plan full_plan	count=1
function	managers using deconstruction ||| construct managers	count=1
arg	this field ||| field	count=1
arg	from given lhs ||| lookups lhs	count=1
module_class	geos geometry objects ||| gis geos geosgeometry	count=1
function	that extracts a value ||| datetime extract	count=1
function	be an item ||| check field	count=1
function	field name ||| name	count=1
module_class	[module_1] driver ||| [module_1] [class_2]	count=8
arg	values into ||| values	count=1
module	if the ||| contrib	count=9
arg	exception should ||| exception	count=1
class	[class_1] message ||| [class_2] [class_1]	count=1
class	relation ||| many to one	count=2
function	objects from either ||| objects	count=1
function	the [function] from the ||| get [function] to	count=1
function	the n-th clone ||| clone	count=1
module	controls whether the given ||| contrib auth	count=1
module	stack of dictionaries ||| template	count=1
class	resets the ||| database wrapper	count=1
function	templates are ||| handle template	count=1
class	to return a list ||| list	count=1
arg	arg a string ||| arg	count=1
arg	applications aren't ||| app_configs	count=1
module	indicate the ||| contrib gis db	count=1
arg	the database [arg] ||| compiler field table_alias [arg]	count=1
function	relatedfield ||| forward related filter	count=2
class	queryset that ||| query set	count=1
arg	using values from ||| using update_fields	count=1
function	the symmetric difference ||| sym difference	count=2
function	removes ||| remove field	count=2
arg	update_pk ||| fields update_pk	count=1
function	the [function] ||| check query object [function]	count=1
class	session ||| session base	count=4
function	number of ("app_label", "modelname") ||| model operation	count=1
function	[function_1] by ||| [function_2] [function_1]	count=5
function	prepare ||| prepare value	count=2
function	allow subclasses ||| handle	count=1
arg	to sender ||| sender weak dispatch_uid	count=1
class	assign ||| list mixin	count=1
arg	[arg_1] from value ||| [arg_1] [arg_2]	count=3
function	convert a relative path ||| construct relative path	count=1
arg	newly created ||| table_name pk_name	count=1
class	before migrating a project ||| base database wrapper	count=1
class	feed in the given ||| syndication feed	count=1
function	the [function] ||| postgis lib [function]	count=1
module	if the ||| db	count=1
module	geometry from the coordinate ||| contrib gis	count=1
class	deep-clone the ||| model	count=1
module	the particular ||| contrib	count=1
arg	regex can be either ||| regex max_length	count=1
arg	in the full_plan ||| full_plan	count=1
module	lines and returns ||| backends	count=1
module	fields in this ||| gis gdal	count=1
function	[function_1] the y ||| [function_2] [function_1]	count=1
function	the sql statements required ||| sql	count=2
function	is [function] ||| is [function]	count=1
function_arg	fields doesn't contain ||| fields obj	count=1
class	the ||| view	count=1
function_arg	set [arg_2] ||| [arg_2] [function_1]	count=4
function	to change the given ||| change	count=1
function	returns an empty errorlist ||| errors	count=1
class	[class] which the ||| query [class]	count=1
function	in ||| init	count=2
function	all known related ||| merge known related	count=1
arg	parameters ||| params	count=1
class	the wrapped ||| lazy	count=1
function	have ||| lazy model	count=1
class	of a queryset ||| query set	count=1
function_arg	[function_1] encoding to ||| [function_1] outfile [arg_2]	count=1
module	'0' sunday to ||| utils	count=1
function	mask of [function_2] ||| [function_2] [function_1]	count=8
module	the loading of data ||| db models	count=1
module	given a ||| contrib admin	count=1
class	the given [class] ||| [class]	count=2
function	number of digits ||| number	count=1
arg	the database [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=2
function	a json string ||| db to string	count=1
module	on the client for ||| contrib sessions backends	count=1
function	minimum level of ||| set level	count=1
module	in a list of ||| db	count=1
function_arg	search of [arg_2] ||| [function_1] sql [arg_2]	count=1
class	transaction and ||| database	count=1
function	get z with ||| get z	count=2
function_arg	[function_1] a date ||| [function_1] [arg_2]	count=6
function	handle a manytomanyfield ||| handle m2m field	count=3
class	or not this handler ||| handler	count=1
function	test redirecting ||| test	count=1
class	true if ||| model	count=1
arg	the given name ||| name	count=1
class	model field ||| field	count=1
function	alter ||| alter column	count=1
module	for [module] user ||| [module]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] lookup_type [arg_2]	count=7
module	method this ||| utils	count=1
function	settings_dict (a ||| test db signature	count=1
arg	if possible ||| using	count=1
arg	in installed_apps ||| only_existing include_views	count=1
function	latest object according ||| latest	count=1
arg	one item of ||| obj model item	count=1
function	a random password ||| make random password	count=2
arg	last downloaded it? ||| mtime size	count=1
function	[function_1] wsgi handler ||| [function_1] [function_2]	count=1
class	form migration ||| migration	count=1
class	results from ||| query	count=1
module	the list ||| contrib admin	count=1
arg	on routines that should ||| result func cargs	count=1
function	number ||| num geom	count=1
module	perform the operation on ||| contrib gis	count=1
function	handle them before ||| handle	count=1
module_class	[module_1] [class_2] ||| [module_1] base [class_2]	count=4
module	to edit the object ||| contrib	count=1
function	merging together conflicted ||| handle merge	count=1
module	of the installed ||| contrib	count=1
module	not indicate the particular ||| contrib gis	count=1
module	migrations have unapplied ||| db migrations	count=1
arg	given ||| model_name	count=1
class	in this class ||| user	count=1
function	the inner meta class ||| meta	count=1
arg	than max_age ||| max_age	count=1
module	of rows ||| models	count=1
function_arg	text [arg_2] ||| [function_1] [arg_2]	count=1
function	width x axis in ||| width	count=1
function	descend ||| related descend	count=1
function	in a gml ||| gml	count=1
module	a tuple with ||| db backends	count=1
class	country ||| geo ip2	count=2
module	handles the ||| contrib admin	count=1
module	e '1' to ||| utils	count=1
function	will select objects with ||| select	count=1
module	for further processing ||| utils	count=1
function	[function_1] all objects ||| [function_1] [function_2]	count=1
function	multiple ||| multiple	count=1
function	non-zero reference count ||| count active	count=2
module	views that ||| views decorators	count=1
function	[function_1] expired ||| [function_2] [function_1]	count=1
function	the storage ||| get storage	count=1
module	indicating whether the this ||| gis gdal	count=1
module	methods by default ||| core cache	count=1
class	if it ||| input	count=1
class	return ||| day mixin	count=1
module	parse [module] ||| [module]	count=1
class	safe ||| safe	count=4
function	of ||| all	count=1
module	the point at the ||| contrib	count=1
function	to a savepoint ||| savepoint	count=1
function	configuration variables not ||| init	count=1
function	db tables ||| db	count=2
module	so that ||| decorators	count=1
function	a search [function_2] ||| [function_2] [function_1]	count=2
function	system and adds ||| add srs	count=1
function	returns a list ||| list	count=4
function	returns a list of ||| locale	count=1
arg	given source sequence into ||| source	count=1
function	[function_1] y ||| geos geoscoord seq [function_1] [function_2] index	count=1
class	get ||| month mixin	count=2
module	of ||| gis gdal	count=2
arg	lookup_type ||| lookup_type	count=4
class	year i ||| format	count=1
class	runs a ||| executor	count=2
arg	marks the value ||| value	count=1
arg	a message [arg_2] ||| [arg_2] [arg_1] extra_tags	count=1
module	the wkt of ||| contrib gis	count=1
function_arg	tag libraries [arg_2] ||| [arg_2] [function_1]	count=2
function	uncaught exceptions ||| uncaught	count=1
module	set of fields ||| db models	count=1
arg	model and all related_models ||| model	count=1
module_class	[module_1] layer for ||| [module_1] [class_2]	count=4
function	any default ||| default	count=1
module_class	raster [class_2] ||| [class_2] [module_1]	count=3
arg	returned instance to the ||| instance fields	count=1
function	app [function_2] ||| [function_2] [function_1]	count=1
class	return ||| model	count=1
function_arg	migrate [arg_2] ||| [arg_2] [function_1]	count=1
module	of this ||| gis gdal	count=9
arg	value in ||| value timeout	count=1
function	instantiating the form ||| form	count=1
function	generate placeholder sql ||| assemble as sql	count=1
module	this ||| models	count=5
function	an empty ||| none	count=1
function	url redirect to ||| redirect url	count=2
function	list of tuples [ ||| compile	count=1
function	(assumed ||| cipher	count=2
function_arg	[function_1] each field ||| [function_1] [arg_2]	count=1
arg	to objs via the ||| objs	count=1
function	fields associated ||| fields	count=1
function	returns a list of ||| get list	count=1
arg	from [arg] ||| [arg]	count=3
class	for this model field ||| field	count=1
arg	ctypes ||| argtypes errcheck strarg	count=1
module	opposite of ||| db	count=1
module	queryset ||| core serializers	count=1
module_class	[module_1] [class_2] ||| [module_1] forward [class_2]	count=1
module	can contain ||| views	count=1
module	rows of ||| db models sql	count=1
arg	from key_salt ||| key_salt value	count=1
module	of values ||| db models sql	count=1
class	the geometry at ||| geometry	count=1
module	the given ||| contrib auth	count=8
class	variables not in this ||| holder	count=1
function	[function_1] language layout ||| [function_1] [function_2]	count=2
class	for the template and ||| template response	count=1
module	the user in ||| contrib	count=1
arg	or updates ||| response	count=1
arg	returns a ||| value arg	count=2
arg	the given coords using ||| coords w3c_geo	count=1
function	applied ||| applied	count=1
module	on the pixel ||| contrib	count=1
function	a key [function_2] ||| [function_2] [function_1]	count=4
function	number of ||| model	count=1
module	in the urlconf can ||| generic	count=1
class	the queryset ||| query set	count=3
module	rows of ||| db models	count=1
function	return true ||| get make object	count=1
arg	in the full_plan ||| state plan full_plan	count=1
class	form has ||| base form	count=1
class	query with ||| query	count=1
module	migrations have ||| db migrations	count=1
class	the ||| safe data	count=1
module	ordinates with the ||| contrib gis	count=1
module_class	[module_1] [class_2] the ||| [module_1] [class_2]	count=3
function	the javascript i18n functions ||| javascript	count=1
function	of this type ||| this type	count=2
arg	this field should ||| field	count=1
function	current time zone ||| from current timezone	count=2
arg	if this field ||| field	count=1
function	date [function_2] ||| database operations [function_1] [function_2] sql timedelta	count=1
function	geometry ||| geo	count=1
module	indicating whether the set ||| contrib gis	count=1
module	[module_1] user ||| [module_1] [module_2]	count=10
function	centroid a point ||| centroid	count=1
arg	d ||| d	count=1
function	easy lookups by key ||| get	count=1
function	context if either ||| get context data	count=1
function	paths to ||| locale paths	count=1
function	[function_1] fail ||| [function_1] [function_2]	count=1
function_arg	code [arg_2] ||| [function_1] [arg_2]	count=1
class	of (unit_value unit_name) ||| spatial ref sys mixin	count=1
arg	is ||| request	count=1
module	user-provides languages files ||| translation	count=1
module	versions of oracle ||| backends oracle	count=1
class	this session ||| session	count=1
class	[class_1] if ||| [class_2] [class_1]	count=3
function	return a native ||| npath	count=1
class	a deserialization [class_2] ||| [class_1] [class_2]	count=4
function	from the command ||| command	count=1
function	and a number ||| model	count=1
function	("app_label", "modelname") ||| lazy model operation	count=1
arg	return an ||| request	count=1
class	dates ||| query set	count=1
function	the name to ||| name	count=1
module_class	[module_1] relation ||| [module_1] forward [class_2]	count=1
module	raster and force a ||| gdal raster	count=1
function	non-schema-affecting [function_2] ||| [function_2] [function_1]	count=4
class	the fields passed into ||| query	count=1
module	the set of points ||| contrib	count=1
function	build ||| build	count=1
function	supports stddev as ||| supports stddev	count=1
module	creating [module] contenttype ||| [module]	count=1
module_class	[module_1] spatial reference ||| [module_1] [class_2]	count=13
module	the return_geom keyword ||| contrib gis gdal prototypes	count=1
function	settings dict ||| settings	count=1
module	the data ||| contrib gis	count=2
function	returns a compiled template ||| get	count=1
module	modelform ||| contrib	count=1
function	objects from the future ||| future	count=1
module	from applying this queryset ||| db	count=1
module	the app or project ||| management	count=1
arg	the value of setting ||| value	count=1
function	over ||| iter	count=2
class	modelform return ||| admin	count=1
function	or updates the ||| patch	count=1
function_arg	removes a [arg_2] ||| [arg_2] [function_1]	count=14
arg	a wherenode for ||| filter_expr branch_negated current_negated can_reuse	count=1
module	so that ||| views decorators	count=1
module	of datetime objects ||| models	count=1
class	not bound or the ||| bound field	count=1
arg	and [arg_2] ||| [arg_1] iterable [arg_2]	count=1
function	iteration over ||| iter	count=1
module	but doesn't ||| utils	count=1
function	system [function] all ||| [function]	count=1
module	is this ||| gis db	count=1
arg	value prepared for ||| value	count=1
arg	found absolute path (or ||| root path	count=1
function	to the ||| update	count=1
class	removes the current session ||| session base	count=1
function	value to [function_2] ||| [function_2] [function_1]	count=2
module	on the [module_2] ||| [module_1] [module_2]	count=2
function	to aware ||| aware	count=1
class	all formsets have ||| base	count=1
arg	[arg_1] number ||| [arg_2] [arg_1]	count=1
function	[function_1] namespaces ||| [function_1] [function_2]	count=2
module	a transaction ||| db backends	count=1
function	the region of intersection ||| intersection	count=1
function_arg	copy path ||| copy file path	count=1
class	genericforeignkey ||| generic relation	count=1
class	confirm support ||| features	count=1
arg	exception ||| exception request	count=1
function_arg	[function_1] name in ||| [arg_2] [function_1]	count=4
function	prepopulated fields ||| prepopulated fields	count=2
function	a list ||| list	count=8
function_arg	[function_1] from the ||| [arg_2] [function_1]	count=1
function	app or ||| handle	count=1
arg	character limit and adding ||| value limit	count=1
module	this accessor sets ||| gis	count=1
class	fields passed ||| query	count=1
module	queryset to the database ||| models	count=1
class	expression and all ||| expression	count=1
function	the corresponding models have ||| operation	count=1
arg	func to ||| func using	count=1
function	[function_1] objects from ||| [function_2] [function_1]	count=2
module	tuples [ ||| management	count=1
function	[function_1] to time ||| [function_1] cast [function_2]	count=2
class	list of tuples [ ||| command	count=1
function	key of ||| key	count=2
function	makes alter type ||| alter column type	count=1
function	under the same user ||| user	count=1
function	of the javascript i18n ||| null javascript	count=1
module	this ||| conf	count=1
function	coordinate sequence ||| coord seq	count=2
function	the m2m table ||| get m2m reverse attr	count=1
function	been changed ||| changed	count=1
module	whether the ||| contrib staticfiles	count=1
module	value and [module_2] ||| [module_2] gis [module_1]	count=1
arg	object using a localizable ||| use_l10n	count=1
function_arg	list_max_show_all [arg_2] ||| [arg_2] [function_1]	count=3
arg	in ||| value	count=4
arg	ctypes ||| argtypes	count=1
function	cascaded union ||| cascaded union	count=1
function	look up a model ||| model	count=1
class	a ||| apps	count=2
arg	[arg_1] mimetype triple ||| [arg_2] [arg_1]	count=4
function	[function_1] the value ||| [function_1] [function_2]	count=3
arg	message to ||| fail_silently	count=1
module	to determine the ||| contrib	count=2
function	inner meta class for ||| meta	count=1
arg	object has been ||| object	count=2
module_class	[module_1] set in ||| [module_1] [class_2]	count=1
function	[function_1] an existing ||| [function_1] [function_2]	count=1
module	[module] a template ||| template [module]	count=2
function	[function_1] messages to ||| [function_1] [function_2] email_messages	count=2
function	file ] ||| compile messages	count=1
function	range of ||| range	count=1
function	a tuple representation ||| tuple	count=1
function	to user-provides languages files ||| all	count=1
arg	in addition ||| dim geography	count=1
module	user-provides ||| translation	count=1
function	models have ||| lazy model	count=1
function	quantifier ||| quantifier	count=1
function_arg	[function_1] instance through ||| [function_1] [arg_2]	count=2
module	of tuples ||| core	count=1
function	form ||| form	count=5
module	for stddev and ||| backends sqlite3	count=1
arg	have implemented a password_changed() ||| user password_validators	count=1
function	day to ||| date	count=1
module	the fields passed ||| db models	count=1
class	[class_1] field returns ||| [class_1] [class_2]	count=3
class	this class are ||| settings holder	count=1
function	find what language the ||| language	count=1
function	to ||| to	count=6
module	or string ||| gis utils	count=1
function	point_count ||| num	count=1
function_arg	[function_1] obj ||| [arg_2] [function_1]	count=3
function	sessions ||| session auth	count=1
function	value from the ||| get	count=1
module	helpful extra ||| generic	count=1
function	returns main version ||| get main	count=2
function	of an object ||| object	count=1
module	returns the ||| contrib gis db backends	count=10
function	a hash ||| hash	count=1
module	blocks of rows ||| models sql	count=1
arg	the value value ||| value	count=1
class	the form migration ||| migration executor	count=1
function_arg	items [arg_2] ||| [function_1] [arg_2]	count=1
module_class	[module_1] corresponds to ||| [module_1] [class_2]	count=2
function	returns an instance of ||| get	count=1
arg	the specified field ||| model field	count=1
function	cleans [function_2] ||| [function_1] [function_2]	count=1
function	valid ||| is valid	count=1
class	description of all ||| base	count=1
function	templates ||| handle template	count=2
module	all the ||| contrib gis	count=3
function	[function_1] this type ||| [function_2] [function_1]	count=3
class	from the module specified ||| settings	count=1
function	receive ||| receive	count=1
module	geometries in this ||| gis gdal	count=1
function	explicitly mark ||| mark	count=1
module_class	[module_1] field ||| [class_2] [module_1]	count=3
arg	sensitive with stars (*********) ||| tb_frame	count=1
class	not in this class ||| user settings holder	count=1
arg	character ||| input_iter	count=1
function	django models and are ||| django	count=1
function	when all the ||| lazy model	count=1
module	like ||| db	count=1
function	format string and ||| format html	count=1
arg	localizable ||| use_l10n	count=1
function	dict containing the ||| to dict	count=1
class	session data from ||| session	count=1
module	at the ||| contrib gis	count=5
class	possible ||| holder	count=1
function	clean_fields [function] and validate_unique ||| full [function]	count=1
function	a long integer into ||| long to bin	count=1
module	app name of ||| db	count=1
function	return ||| get field	count=1
arg	[arg_1] header ||| [arg_2] [arg_1]	count=6
function	column data type for ||| db type	count=1
module	decorator that ||| views decorators	count=1
function	migrations in the ||| check migrations	count=1
module	in one sql ||| sql	count=1
module	instance guaranteed to ||| sessions backends	count=1
function	be excluded from ||| exclusions	count=1
module	database ||| db models	count=2
arg	and a schema_editor for ||| schema_editor	count=1
function	and when ||| lazy model operation	count=1
arg	model by default includes ||| include_parents include_hidden	count=1
arg	generates a ctypes function ||| func argtypes errcheck	count=2
arg	and values from ||| cls	count=1
function	and [function] the ||| [function]	count=1
function	and registered ||| model	count=1
module	[module_1] [module_2] ||| [module_2] [module_1] wkbreader read	count=3
module	checking the ||| contrib	count=2
function	in ||| update	count=1
function	quoted etag return ||| quote etag	count=2
arg	boolean indicating ||| search_term	count=1
function	save ||| save base	count=1
module	whether the set of ||| contrib gis	count=1
module	returns a ||| contrib gis geos	count=1
function	fields associated to the ||| get fields	count=1
class	requests for ||| user settings holder	count=1
module	geometry field distance lookup ||| gis	count=1
function	the week for which ||| get week	count=1
arg	message to a recipient ||| subject message	count=1
function_arg	typical (app_label model_name) tuples [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	hash [function_2] ||| [function_2] [function_1]	count=4
module	the app ||| management	count=1
arg	allocated by ogr ||| cargs offset	count=1
module	the spatial_ref_sys ||| contrib gis db models	count=1
arg	cls using values ||| cls using	count=1
arg	a function that ||| func cargs offset	count=1
module	finds a requested static ||| staticfiles	count=1
arg	field ||| field	count=13
class	modified connection ||| database creation	count=1
function	difference of this ||| difference	count=1
function	type name for ||| type name	count=2
class	of ||| handler	count=1
arg	a secret ||| secret	count=1
function	routine will return ||| get	count=1
function	kml for ||| kml	count=1
function	*every* page in ||| each	count=1
function_arg	subtracts [arg_2] ||| [function_1] key [arg_2] version	count=1
function	url redirect ||| redirect url	count=2
class	all the cache files ||| file based cache	count=1
arg	automatic column selection ||| field_names	count=1
function_arg	adds [arg_2] ||| [arg_2] [function_1]	count=8
arg	app or ||| template	count=1
function	postgis version number ||| postgis full version	count=1
function	been imported and registered ||| model operation	count=1
function	dictionary of ||| init	count=1
class	can contain helpful ||| view	count=1
module	passed ||| models	count=1
arg	given other ogrgeomtype the ||| other	count=1
function	the list of ||| date list	count=1
function	actions for this ||| actions	count=1
module	a ||| db backends base	count=3
function	signed [function_2] ||| [function_2] [function_1]	count=4
function	fields associated to ||| get fields	count=1
class	file from storage ||| storage	count=1
function	connection to the ||| get new connection	count=1
arg	from key_salt and ||| key_salt	count=1
class	requests for configuration variables ||| holder	count=1
function	dates for ||| dates	count=1
class	of table ||| database	count=1
module	lines and returns ||| db backends base	count=1
function	iterator over the ||| iterator	count=1
module_class	[module_1] given file ||| [module_1] [class_2]	count=2
function	of app configs ||| get app configs	count=2
function_arg	be an [arg_2] ||| [function_1] spec obj model [arg_2]	count=2
arg	from sender for ||| sender weak dispatch_uid	count=1
function	bytestring in [function] ||| urlsafe [function]	count=3
function	[function_1] [function_2] ||| [function_1] [function_2] email_messages	count=8
module	unsaved instance ||| contrib	count=1
module	system and ||| core files	count=1
class	numeric i e ||| date	count=1
arg	regex can be ||| regex max_length	count=1
function	value from the ||| from	count=2
function	language the ||| language	count=1
function	flattening ||| flattening	count=1
module	and ||| backends base	count=8
arg	a securely generated ||| length allowed_chars	count=1
function	be interpolated ||| readable field data	count=1
class	in the query ||| query	count=1
arg	name ||| name hashed_files template	count=1
module	the geometry field in ||| contrib	count=3
module_class	for [class_2] ||| [class_2] [module_1]	count=5
module	returns ||| contrib gis geos	count=1
function	returns an empty ||| none	count=1
class	or has choices defined ||| base model admin	count=1
function	dictionaries ||| update	count=1
module	other methods by default ||| core cache	count=1
module	the month without ||| utils	count=1
function	optional ||| init	count=1
module	the ||| utils	count=10
function	model's ||| alter db	count=1
function	receiver which updates ||| update	count=1
class	transaction and resets the ||| base	count=1
class	form needs ||| form	count=1
function	by adding a salt ||| salt	count=1
arg	if the given field ||| field	count=1
function	the name [function_2] ||| [function_2] [function_1]	count=4
module	locations inferred from the ||| contrib	count=1
function_arg	[function_1] response to ||| [function_1] [arg_2]	count=2
class	connection ||| wrapper	count=1
function	of ("app_label", "modelname") ||| model	count=1
function	the last object of ||| last	count=1
class	cache if the ||| base cache	count=4
function	[function_1] media prefix ||| [function_1] [function_2]	count=4
class	insert the form ||| form	count=1
function	as safe for html ||| safe	count=1
function_arg	[function_1] name ||| [function_1] [arg_2]	count=8
function	untranslated verbose [function_2] ||| [function_1] [function_2]	count=4
module	queryset to the ||| db	count=1
module	codename name ||| contrib auth management	count=1
function	(structured like settings ||| init	count=1
function	unget ||| unget	count=1
class	to initialize the wrapped ||| lazy	count=1
module	a range of ||| models	count=1
function	the list of items ||| queryset	count=1
function	convert strings to unicode ||| to unicode	count=1
class	spatial fields ||| spatial	count=1
class	the ||| archive view	count=1
class	geometry fields ||| geometry	count=1
arg	source and ||| source	count=1
function	exception subclass ||| subclass exception	count=1
function	datetime date object given ||| date	count=1
class	the list of ||| date list	count=1
module	views ||| views	count=1
function	system and adds its ||| add srs	count=1
module	the field ||| contrib	count=3
function	to a uri ||| to uri	count=1
class	cache ||| cache	count=11
module	returns a [module_2] ||| [module_1] [module_2]	count=2
class	a new session instance ||| session	count=1
class	module specified ||| user	count=1
module	template tag library into ||| template	count=1
function	[function_1] for ||| contenttypes content type manager [function_1] [function_2]	count=1
function	return a domain ||| split domain	count=1
arg	in instance suitable for ||| instance	count=1
arg	is the first character ||| input_iter	count=1
function	the z ||| z	count=2
arg	shows ||| connection app_names	count=1
module	the app ||| core	count=1
function	spatialreference ||| srs	count=1
module	models when ||| db models sql	count=1
function	serialized ||| string	count=1
module	the month ||| utils	count=1
function	name is valid ||| name	count=1
module	a gdal ||| gdal	count=1
function	by ||| get	count=3
arg	the supplied key ||| key	count=1
module	the field is ||| contrib	count=1
arg	if this field should ||| field	count=1
function	in a special way ||| get backend timeout	count=1
function	associated django models and ||| django	count=1
arg	[arg_1] value ||| [arg_2] [arg_1]	count=12
class	form has a ||| form	count=1
function	queryset of objects ||| related objects	count=1
arg	the "vary" header in ||| newheaders	count=1
function	the encoding is unsupported ||| encoding	count=1
module_class	deserialization [class_2] ||| [module_1] deserialization [class_2]	count=4
function_arg	[function_1] in ||| [function_1] [arg_2]	count=9
function	fields ||| fields	count=25
module	which ||| core	count=1
function	of tuples ||| compile messages	count=1
module	the stack ||| template	count=1
function	mirror of a primary ||| mirror	count=1
function	of fields [function_2] ||| [function_2] [function_1]	count=3
function	to existing fields ||| fields	count=1
class	value for ||| value	count=3
module	__html__ method this ||| utils	count=1
function	by the user ||| get	count=1
arg	[arg] is ||| obj [arg]	count=1
module	and return ||| backends oracle	count=1
function	adds or updates ||| patch	count=1
class	numeric ||| format	count=1
function	needed to temporarily disable ||| disable	count=1
arg	any pattern in ignore_patterns) ||| patterns	count=1
module	the dirty ||| db backends	count=1
function	of template ||| select template	count=1
class	the values can be ||| field	count=1
function	minimum pixel ||| min	count=1
arg	three part encoded ||| encoded setter preferred	count=2
arg	an iterable ||| iterable	count=1
module	from applying this queryset ||| models	count=1
function	admin url to ||| get admin url	count=2
module	it is ||| utils	count=1
function	[function_1] templates from ||| [function_2] [function_1]	count=1
function	a ||| form	count=1
arg	sequence comprising ||| table_name constraints column_to_field_name	count=1
class	date or datetime ||| date time	count=1
function	table joins for ||| setup joins	count=1
arg	model class or ||| model	count=1
module	if the ||| contrib gis	count=5
class	each ||| form set	count=1
arg	the specified field ||| field	count=1
function	ogr envelope by ||| envelope	count=1
function	be allowed to ||| get allow	count=1
function	untranslated verbose ||| verbose	count=1
class	requests for configuration variables ||| settings	count=1
function	requests ||| init	count=1
module	checks ||| contrib gis gdal prototypes	count=1
function	is an optional ||| init	count=1
function	max number ||| get max num	count=2
class	i e ||| date format	count=3
class	the [class] ||| [class]	count=1
function	key on ||| key	count=1
module_class	[module_1] template ||| [module_1] generic [class_2]	count=1
function	paths ||| locale paths	count=1
arg	lock ||| nowait skip_locked	count=1
function	[function_1] quantifier ||| [function_1] [function_2]	count=2
class	this class are ||| user settings	count=1
function	and when all the ||| operation	count=1
class	i e '1' to ||| date	count=1
function	of ordering field ||| ordering field	count=2
module	fields ||| db models	count=2
module	(sqlite_limit_variable_number) of ||| db backends	count=1
arg	[arg_1] backend and ||| [arg_2] [arg_1]	count=2
function	[function_1] class ||| [function_1] [function_2]	count=10
arg	starting a ||| sid	count=1
function	manually configure the ||| configure	count=1
module	returns a 6-tuple extent ||| gis db backends	count=1
function	the app or ||| handle	count=1
function	returns the language-code ||| get language from	count=1
module	an integer to ||| humanize templatetags	count=1
arg	[arg_1] content mimetype ||| [arg_2] [arg_1]	count=3
function	for the m2m ||| get m2m reverse attr	count=1
function	string including the ||| info	count=1
function	imported ||| model	count=1
module	on the spatial object ||| contrib gis db backends	count=1
function	key [function_2] ||| [function_2] [function_1]	count=25
class	the response ||| template response	count=1
function	admin url to edit ||| get admin url	count=1
arg	in tests only ||| lookup_name	count=1
function	delete the ||| delete qs	count=1
function_arg	post variables ||| post request	count=1
arg	transform a model ||| model	count=1
class	return ||| month mixin	count=2
function	a number ||| operation	count=1
class	node ||| static node	count=1
function	a field name ||| normalize col name	count=1
module	returns ||| core handlers	count=1
function	return an unsaved ||| save	count=1
function	[function_1] this formset ||| [function_1] [function_2]	count=1
function	will select [function_2] ||| [function_1] [function_2]	count=2
function	number of chars ||| text chars	count=1
module	a set of ||| db	count=1
function_arg	to local time ||| localtime value timezone	count=1
module	applied migrations ||| db migrations	count=1
arg	an ||| form	count=1
arg	validationerror containing ||| exclude	count=1
class	last value on ||| multi value	count=1
function	postgis version number and ||| postgis version	count=1
arg	callback returns a ||| callback	count=1
arg	should respect that ||| db db_field request	count=1
module	not end with ||| db	count=1
function	fields to be ||| fields	count=1
function	returns the sql that ||| sql	count=5
class	returns ||| query	count=1
function_arg	[function_1] num_windows ||| [function_1] for popup [arg_2]	count=1
class	for base [class_2] ||| [class_1] [class_2]	count=3
function	"modelname") tuples and ||| lazy model operation	count=1
arg	single ||| from_email	count=1
module	all the ||| apps	count=1
function	been imported ||| lazy model	count=1
function	[function_1] path ||| [function_1] [function_2]	count=3
class	not ||| settings holder	count=2
module	is an optional dictionary ||| db	count=1
function	[function] of ||| postgis lib [function]	count=1
function	key constraint ||| constraint	count=2
function	decorator ||| html	count=1
function	save this method ||| save	count=1
module	returns true if this ||| gis gdal	count=5
function	[function_1] on save ||| [function_2] [function_1]	count=5
module	results ||| db models	count=2
arg	and a year ||| year year_format month month_format	count=1
function	in a distance ||| distance	count=1
function	models have ||| lazy model operation	count=1
arg	set the value ||| value	count=1
function	all permissions in ||| all permissions opts	count=1
function	get [function_2] ||| [function_2] [function_1]	count=4
arg	hidden ||| form	count=1
class	and ||| database wrapper	count=1
class	corresponding models have ||| apps	count=1
class	of files called ||| files mixin	count=1
function	creation [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] from ||| [arg_2] [arg_1]	count=3
function	a modelform return ||| form	count=1
arg	a gdal spatialreference system ||| srs	count=1
function	should display [function] lists ||| get allow [function]	count=1
module	this will return a ||| gis	count=1
class	to return a list ||| simple list	count=1
arg	target node ||| target	count=2
arg	receiver [arg_2] ||| [arg_2] [arg_1]	count=4
class	fields ||| query set	count=1
function	all the corresponding ||| lazy model operation	count=1
function	[function_1] override uncaught ||| [function_2] [function_1]	count=2
class	for geometry fields in ||| geometry	count=1
function	given ||| patch vary headers	count=2
module	the messages ||| contrib messages storage	count=2
arg	two geometries ||| other	count=2
class	set [class_2] ||| [class_2] [class_1]	count=4
arg	cursor ||| cursor	count=8
arg	a validationerror containing a ||| exclude	count=1
module	the field's string ||| contrib	count=1
function	a key ||| key	count=2
class	all the cache ||| based cache	count=1
module	python sqlite3 [module_2] ||| [module_2] [module_1]	count=1
module	or project ||| core	count=1
class	or project ||| template command	count=1
function_arg	validators for [arg_2] ||| [function_1] protocol [arg_2]	count=1
module	a ||| management commands	count=2
function	be an item of ||| field	count=1
class	asserts ||| test case	count=1
module	queryset to ||| models	count=1
module	[ directory file ] ||| core	count=1
arg	or [arg_2] ||| [arg_1] [arg_2]	count=1
module_class	[module_1] for the ||| [module_1] [class_2]	count=2
function	when all the ||| lazy model operation	count=1
arg	a url ||| url	count=1
function	for the m2m table ||| get m2m reverse attr	count=1
function	of ("app_label", "modelname") tuples ||| lazy model	count=1
module	requested the next ||| contrib gis	count=1
module	and resets the dirty ||| db backends	count=1
function	dictionary ||| init	count=1
module	integer to ||| contrib humanize templatetags	count=2
class	a single [class] ||| multi [class]	count=3
arg	[arg_1] if ||| [arg_2] queryset [arg_1]	count=3
function	a queryset of objects ||| objects	count=1
function	[function_1] value ||| [function_2] [function_1]	count=6
module	directory ||| management commands	count=2
module	the application ||| contrib	count=1
function	blocks until ||| wait for	count=2
class	of files ||| files	count=1
module	forward ||| db models fields	count=1
class	numeric i e '0' ||| format	count=1
function	factory function to ||| generic related	count=1
function	calls clean_fields [function] and ||| full [function]	count=1
function	that returns sets ||| sets	count=1
function	returns an extra ||| extra	count=1
module	like settings ||| db	count=1
arg	[arg_1] locale ||| [arg_1] [arg_2]	count=4
module	a list ||| commands	count=1
class	last ||| base database operations	count=1
module	app or project ||| core management	count=1
class	django model instance ||| base model	count=2
module_class	[module_1] coordinates ||| [module_1] [class_2]	count=2
function	of app [function_2] ||| [function_1] [function_2]	count=1
arg	(without actually removing the ||| sequences allow_cascade	count=1
module	the extra locations ||| contrib	count=1
class	optional dictionary ||| handler	count=1
module	the session's ||| contrib	count=1
module	lookups by key ||| utils	count=1
arg	from an iterable and ||| cls iterable	count=1
function	available ||| available	count=2
arg	serialization format compression format ||| fixture_name	count=1
class	number of email ||| email backend	count=2
function	settings are available ||| settings	count=1
function	to expire ||| expire	count=1
function	delete ||| delete	count=3
module	box of the ||| contrib	count=1
class	formset ||| base form set	count=1
module	of the given ||| models	count=1
class	helper function ||| selenium	count=2
function	[function_1] tags ||| [function_1] [function_2]	count=1
function	given httpresponse ||| headers	count=1
module_class	[module_1] decimal places ||| [module_1] [class_2]	count=2
function	unsaved ||| save form	count=2
module	srid of ||| gis db backends	count=2
function	needed to re-enable ||| enable	count=1
function	returns a [function_2] ||| [function_1] [function_2]	count=9
class	of this geometry ||| geometry mixin	count=1
function	[function_1] given field ||| [function_1] [function_2]	count=3
arg	[arg_1] the tables ||| [arg_2] [arg_1]	count=4
function	media ||| media	count=1
class	the database ||| base database	count=4
function	the given ||| patch vary headers	count=1
arg	time field field_name to ||| field_name	count=1
arg	the value of ||| value	count=1
function_arg	initializes on [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	search of [arg_2] ||| [arg_2] [function_1]	count=1
module	is an ||| db	count=1
arg	request ||| request	count=9
module	the description for a ||| contrib	count=1
module_class	[module_1] coordinate sequence ||| [module_1] geos [class_2]	count=1
module	method to override ||| auth	count=1
class	are satisfied from the ||| settings	count=1
function	the dated items ||| get dated items	count=2
arg	makes a ||| is_dst	count=1
class	settings ||| handler	count=1
module	true if the view ||| views generic	count=2
class	django model ||| model	count=2
arg	name value to ||| field value	count=1
module	return the given ||| contrib	count=1
class	engine definitions ||| engine	count=1
module	week numeric i ||| utils	count=1
module	postgis ||| db backends postgis	count=2
class	every lazystream must ||| lazy stream	count=1
class	modelform ||| model admin	count=2
module	the ||| template	count=2
class	] ||| command	count=1
function	registered ||| lazy	count=1
module	is this ||| gis	count=1
class	the last data ||| multi	count=1
function	to add "value" ||| add to	count=1
function	available languages in ||| available languages	count=2
function	[function_1] [function_2] input ||| [function_1] [function_2]	count=3
function	in the given httpresponse ||| vary headers	count=1
function	saving into a database ||| db prep save	count=1
function	returns a double value ||| double	count=1
function	the next interval ||| next month	count=1
function	find a ||| find	count=1
function	this ||| this	count=1
function	what language the ||| get language from	count=1
function	for any otherwise uncaught ||| handle uncaught	count=1
module	method this helps non-django ||| utils	count=1
function	the test db tables ||| test db	count=2
class	migration instance false ||| migration	count=1
module	[module_1] view ||| [module_2] [module_1]	count=10
module_class	sql [class_2] ||| [module_1] [class_2]	count=1
function	project templates ||| template	count=1
function	an iterable of app ||| get app	count=1
class	read the file and ||| file	count=1
class	not ||| user settings holder	count=2
arg	[arg_1] context returns ||| [arg_2] [arg_1]	count=2
function	that doesn't quote ||| quote	count=1
function	[function_1] 404 ||| [function_2] [function_1]	count=3
module	used by the node ||| contrib	count=1
module_class	deserialization [class_2] ||| [module_1] [class_2]	count=4
module	it ||| utils	count=1
function	given feature id ||| make feature feat_id	count=1
module	given a modelform ||| admin	count=1
module	sessions [module_2] ||| [module_2] [module_1]	count=1
module	non-django ||| utils	count=1
arg	sending a single message ||| message from_email	count=1
module	the given [module] ||| contrib [module]	count=3
function	returning a 2-tuple ||| listdir	count=1
function	adds or updates ||| vary headers	count=1
module_class	form sql [class_2] ||| [class_2] [module_1]	count=1
class	that we [class_2] ||| [class_2] [class_1]	count=8
module	returns ||| contrib gis db backends postgis	count=4
class	module ||| settings holder	count=2
function	fieldsets ||| fieldsets	count=1
function	saving updates or inserts ||| save	count=1
function	number [function] string and ||| [function]	count=1
module_class	in this layer ||| gis gdal layer	count=1
module	raster with [module_2] ||| [module_1] [module_2]	count=4
arg	content ||| content mimetype	count=1
function	y coordinate ||| y	count=1
class	[class] pop-ups ||| [class]	count=1
function	null ||| new type null	count=1
function	[function_1] a list ||| [function_1] [function_2]	count=1
function	header in ||| patch	count=1
function	the m2m ||| get m2m reverse	count=1
class	this spatial [class_2] ||| [class_1] [class_2]	count=2
class	returns true if ||| query	count=1
module	given c ||| gdal prototypes	count=1
arg	[arg_1] content ||| [arg_1] [arg_2]	count=3
module	a user has ||| auth	count=1
module	the addgeometrycolumn stored ||| contrib	count=1
class	clear the session key ||| session	count=1
function	a slice of ||| set slice	count=1
module	try to determine the ||| contrib auth	count=2
class	date field by ||| date list	count=1
function_arg	split an encoded ||| decode encoded	count=1
arg	model from old_model into ||| model	count=1
function	[function_1] [function_2] ||| at [function_1] [function_2]	count=1
module	[module_1] the application ||| [module_2] [module_1]	count=1
function_arg	return the [arg_2] ||| [function_1] next month [arg_2]	count=3
function_arg	[function_1] handling ||| [function_1] [arg_2]	count=6
function	dictionaries in the ||| update	count=1
function	site ||| site	count=1
class	into ||| set	count=1
arg	of the field ||| field created_separately	count=1
function	the given test ||| test	count=1
function	or 'second', [function_2] ||| [function_1] [function_2]	count=4
module	a geos [module_2] ||| [module_2] [module_1]	count=1
function	serialized as ||| string	count=1
function_arg	[function_1] [arg_2] leading path ||| [function_1] leading dir [arg_2]	count=2
arg	the related instance through ||| instance	count=2
class	has choices ||| base model admin	count=1
function	the __html__ ||| html safe	count=1
function	for the ||| get	count=1
arg	returned instance to ||| form instance fields	count=1
module	of fields to exclude ||| db models sql	count=1
function	extracts a value ||| extract	count=2
module	for this ||| backends base	count=2
module	is true ||| contrib	count=1
module	processing ||| utils	count=1
function	[function_1] type ||| [function_2] [function_1]	count=16
module	returns a list of ||| models	count=3
function	[function_1] namespaces used ||| [function_2] [function_1]	count=3
function	parse and [function] the ||| [function]	count=1
arg	makes a naive ||| is_dst	count=1
module	returns the ||| contrib auth	count=1
arg	given geometry in ||| geom	count=1
arg	field should be used ||| field	count=1
arg	one item ||| item	count=1
function_arg	[function_1] a queryset ||| [arg_2] [function_1]	count=1
arg	delta to value in ||| delta	count=1
module	set of fields ||| models	count=1
arg	list of inline formsets ||| formsets	count=1
function	back ||| rollback	count=1
module	[module] a ||| [module]	count=9
function_arg	new file [arg_2] ||| [arg_2] [function_1]	count=1
class	to execute sql ||| database operations	count=1
function	of points in ||| num points	count=2
function	parses one and ||| parse	count=1
arg	a single [arg_2] ||| [arg_2] [arg_1]	count=8
module	be used where the ||| contrib	count=1
function	name to ||| name	count=1
class	a list of ||| simple list	count=1
module	[module] source file ||| [module] gdal	count=1
module	from ||| db models	count=2
function	shortened ||| explode shorthand ip string	count=1
module	of table ||| models	count=1
function	results may ||| results	count=1
function	[function] 'initial' ||| [function] initial	count=1
function	select_related() part ||| select related	count=1
class	given ||| geo	count=2
class	not ||| user	count=1
function	[function_1] context for ||| [function_2] [function_1]	count=1
class	opposite of ||| query set	count=1
class	ring at the specified ||| polygon	count=1
module	to the ||| contrib	count=1
module_class	in this [class_2] ||| [module_1] [class_2]	count=9
class	given django model instance ||| model admin	count=2
function	osr spatialreference for ||| srs	count=1
module	urlconf can contain helpful ||| views generic	count=1
module	helpful ||| views	count=1
class	if this form ||| form	count=1
arg	be ||| response	count=1
function	[function_1] dated items ||| [function_2] [function_1]	count=3
function	list ||| list	count=16
arg	the returned instance ||| instance fields	count=1
function	will set to ||| set	count=1
arg	containing a queryset ||| queryset	count=1
module	that a related ||| db models fields	count=1
arg	of the field ||| field	count=1
function	the name of the ||| name	count=1
function	containing a ||| get containing	count=1
module	are sensitive [module] those ||| [module]	count=1
module	the geometry ||| contrib	count=6
class	is ||| path importer	count=1
function	return ||| get template	count=1
arg	given a stream or ||| stream_or_string	count=1
function	the current ||| get current	count=7
function_arg	[function_1] receiver from ||| [function_1] [arg_2]	count=1
class	a modelform return ||| model	count=1
module	if the queryset is ||| db models	count=1
function	are required [function_2] ||| [function_2] [function_1]	count=1
class	true if the ||| query set	count=1
function	[function_1] ordering field ||| [function_2] [function_1]	count=1
function	adds ||| patch vary headers	count=2
function	variables ||| frame variables	count=1
function	name in name ||| parse name	count=1
module	week numeric ||| utils	count=1
class	not in this ||| settings	count=1
function	model references ||| references	count=1
function	tuples and ||| model	count=1
module	on ||| models	count=4
arg	to objs via ||| objs	count=2
module	of tuples [ directory ||| core management	count=1
module	and return all other ||| db backends oracle	count=1
module_class	this [class_2] ||| [module_1] [class_2] eq other	count=1
function	validators ||| password validators	count=2
function	[function_1] attribute (e ||| [function_2] [function_1]	count=3
function	the short [function_2] ||| [function_1] [function_2]	count=1
class	week ||| date	count=1
class	for the response ||| simple template response	count=1
function	adds the specified headers ||| headers	count=1
module	is used by the ||| contrib	count=1
function	on [function_2] ||| [function_2] [function_1]	count=4
arg	or updates the "vary" ||| response newheaders	count=1
function	for a manytomanyfield ||| m2m	count=1
function	'0' to '365' ||| z	count=1
module	not end with ||| db models fields	count=1
function	a connection ||| connection	count=2
module	dictionary mapping the names ||| contrib admin	count=1
function	the sql [function_2] ||| [function_2] [function_1]	count=21
class	not ||| user settings	count=1
function	returns a cache ||| cache	count=1
module	the current model ||| contrib	count=1
module	migrations ||| migrations	count=4
module_class	the [class_2] ||| [module_1] sites [class_2]	count=1
function	create an [function_2] ||| [function_1] [function_2]	count=1
function	lookup kwargs for ||| lookup	count=1
function_arg	expression using [arg_2] ||| [function_1] [arg_2]	count=1
arg	in the active time ||| value	count=1
class	case-insensitive check for a ||| base	count=1
function	data type for this ||| type	count=1
function	checks whether the ||| check	count=1
arg	a date ||| date	count=1
function	updates the [function_2] ||| [function_1] [function_2]	count=5
function	[function_1] file for ||| [function_1] [function_2]	count=4
module	all models ||| models	count=1
class	from applying this queryset ||| set	count=1
function	that ||| html safe	count=1
function	number ||| model	count=1
function	prefix to the ||| bump prefix	count=1
module	if [module] user ||| [module]	count=1
arg	one item of ||| obj model item label	count=1
arg	a function ||| result func cargs	count=2
arg	number of times ||| context	count=1
arg	the cursor row description ||| table_name row	count=1
class	file in ||| file	count=1
function	saves the ||| save	count=1
module	resets the dirty ||| db	count=1
function	context ||| context	count=1
module	on the ||| contrib admin	count=2
function	comparison ||| table name converter	count=1
function_arg	[function_1] the exception ||| [arg_2] [function_1]	count=6
module	boolean indicating whether the ||| contrib	count=1
module	and the ||| contrib	count=13
function	a list or a ||| list	count=1
function	a decorator ||| safe	count=1
function	type [function_2] ||| [function_2] this [function_1]	count=1
class	the database is ||| database	count=1
module	tables and views that ||| db backends	count=1
module	and resets the ||| db backends	count=1
function	filtering on a single ||| make single	count=1
class	for the [class] or ||| [class]	count=1
arg	entry in ||| entry	count=1
module	instance ||| contrib admin	count=2
class	model instance for the ||| base model form set	count=1
class	without leading ||| date	count=1
function	edited ||| get edited	count=1
module	this request ||| views generic	count=3
function	namespaces ||| namespaces	count=1
module_class	[module_1] [class_2] ||| template [module_1] [class_2] engine	count=4
function	greater than the ||| culling	count=1
function	user"), [function] name of ||| [function] swappable settings	count=1
function	tags and filters from ||| load from	count=1
function_arg	[function_1] boolean indicating ||| [arg_2] [function_1]	count=2
arg	for the provided connection ||| connection	count=1
class	model's ||| schema editor	count=1
function	while retaining ||| cycle	count=1
module	and view ||| backends	count=3
module	the input ||| contrib gis db	count=1
class	in the cache if ||| cache	count=1
class	modelform return an unsaved ||| admin	count=1
module	into the ||| contrib gis	count=1
class	"modelname") tuples ||| apps	count=1
function	allowed to fail ||| allow fail	count=1
arg	to naive datetimes in ||| value	count=1
function	base64 ||| base64	count=2
function_arg	language in ||| language parser token	count=1
function	country code and ||| country	count=1
arg	formats [arg] ||| number [arg]	count=1
function	a long integer into ||| long to	count=1
function	[ directory ||| compile messages	count=1
module_class	[module_1] session data ||| [class_2] [module_1]	count=1
function_arg	references [arg_2] ||| [function_1] [arg_2]	count=1
class	the choices ||| choice field	count=1
function_arg	true if [arg_2] ||| [arg_2] [function_1]	count=6
arg	value ||| value safe	count=1
module	method to override the ||| contrib auth	count=1
function	the start of the ||| start	count=1
function	table name ||| table name	count=1
arg	path (or none ||| path prefix	count=1
function	the distance between ||| distance	count=1
module	the geometry to this ||| contrib gis gdal	count=1
module	from this ||| contrib gis gdal	count=1
function	queryset ||| queryset	count=2
arg	given instance ||| instance	count=1
class	inline forms ||| inline model	count=2
function	georss ||| georss	count=1
function_arg	given [arg_2] ||| [function_1] name [arg_2]	count=1
function	the ||| template	count=1
module	the translation [module_2] ||| [module_1] [module_2]	count=3
function	of getting the dated ||| get dated	count=1
function_arg	exclude [arg_2] ||| [arg_2] [function_1]	count=4
module	user in ||| auth	count=1
arg	string ||| compiler sql params	count=1
function	email ||| email	count=1
function	the name that ||| name	count=1
function	the ||| operation	count=1
function	format string ||| format html join	count=2
function	[function_1] foreign ||| [function_2] [function_1]	count=2
function	foreign [function_2] ||| [function_1] [function_2]	count=1
function_arg	to migrate [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] feature ||| [function_2] [function_1]	count=1
module	requested the next time ||| contrib gis gdal	count=1
function	checks that ||| check	count=1
class	to a cookie returning ||| cookie	count=1
module	returns true if the ||| db models	count=1
class	e '0' sunday to ||| date format	count=1
module	to ||| utils	count=4
function	e string model references ||| references	count=1
module	the datasource object ||| contrib	count=1
module	dictionary with the ||| contrib gis	count=1
function	[function] false if ||| get expire at [function]	count=1
function_arg	[function_1] klass ||| [arg_2] [function_1]	count=2
function	maximum length ||| max name length	count=1
module	a user has a ||| auth	count=1
function	of radio_fields dictionary is ||| radio fields	count=1
function	core mail emailmultialternatives to ||| mail	count=1
module	geometry representing the ||| contrib gis	count=2
function	the storage engine for ||| get storage engine	count=1
function	case ||| case to	count=1
class	alters ||| database schema editor	count=1
arg	[arg_1] through the ||| [arg_1] [arg_2]	count=1
function_arg	returns the [function_1] [arg_2] update operation ||| [function_1] [arg_2]	count=2
arg	absolute path ||| path	count=1
function	for [function_2] ||| [function_2] [function_1]	count=1
arg	those strings according to ||| arg	count=1
function_arg	[function_1] field on ||| [function_1] [arg_2]	count=1
function_arg	[function_1] obj ||| [function_1] string [arg_2]	count=3
function	ordering by the given ||| ordering	count=1
function	cache [function_2] ||| [function_1] [function_2]	count=3
function	sql statements required to ||| sql	count=3
class	obtain the list of ||| base date list view	count=1
arg	form [arg_2] ||| [arg_2] [arg_1]	count=1
class	not in this ||| holder	count=1
module	whether to return the ||| contrib	count=1
function	delete ||| delete qs	count=1
function	normal unicode method up ||| method	count=2
function	on the surface ||| on surface	count=1
function	easy ||| get	count=1
function	models ||| lazy model	count=1
function	geometry type for ||| geom type	count=2
arg	[arg_1] in the ||| [arg_1] [arg_2]	count=3
class	string for ||| data	count=1
module	[module_1] returns a ||| [module_2] [module_1]	count=1
arg	that defines ||| klass	count=2
arg	live database and applies ||| collect_sql	count=1
function	moves a model's ||| alter db tablespace	count=1
class	without leading zeros i ||| date	count=1
function	as [function_2] ||| [function_2] [function_1]	count=3
function	description string of ||| description	count=1
function	pattern ||| pattern	count=1
function	("app_label", "modelname") tuples and ||| lazy model operation	count=1
module	_meta fields instance of ||| models fields	count=1
function	with a for update ||| for update	count=1
function	csrf ||| csrf	count=2
module	of form sql ||| db models sql	count=3
function	specified headers to ||| headers	count=1
module	the dirty flag ||| db	count=1
module	to the set of ||| models	count=1
class	names and ||| raw query set	count=1
arg	[arg] for ||| [arg]	count=4
function	list ||| all	count=1
function	country [function] for the ||| country [function]	count=1
module	in this [module_2] ||| [module_1] [module_2]	count=2
function_arg	fields should [function_1] [arg_2] ||| [function_1] [arg_2]	count=10
arg	object ||| object	count=2
module	error ||| geos prototypes	count=1
class	staticfiles_dirs ||| file system	count=1
module	_meta fields ||| fields	count=1
function	set ||| set	count=12
arg	a context returns a ||| context	count=1
module	[module_1] message ||| [module_1] [module_2]	count=2
arg	analyzes ||| check_path	count=1
function	non-schema-affecting options have changed ||| altered options	count=1
arg	is a ||| obj	count=8
function	deferred fields for ||| deferred fields	count=2
module	a transaction and resets ||| backends base	count=1
arg	the [arg_1] [arg_2] ||| status [arg_1] [arg_2]	count=9
arg	:param [arg_2] ||| [arg_2] [arg_1]	count=1
function	the widget ||| widget	count=1
arg	on routines that should ||| func cargs	count=1
function	clears [function_1] [function_2] not extra_select columns) ||| [function_2] [function_1]	count=1
function	tuples [ directory file ||| compile	count=1
module	the given ||| contrib gis geoip2	count=3
function	constructs the ||| make	count=1
function	imported ||| lazy model operation	count=1
function	[function_1] date list ||| [function_2] [function_1]	count=1
function	option [function] optional ||| [function]	count=1
function	[function_1] form ||| [function_2] [function_1]	count=2
function	[function_1] name is ||| [function_1] [function_2]	count=6
module	the uniqueness ||| contrib gis	count=1
function	slice ||| slice	count=3
arg	the specified path ||| path	count=1
class	for outputting ||| base	count=1
function	[function_1] for ||| [function_2] this [function_1]	count=1
function	extended [function_2] ||| [function_1] [function_2]	count=2
function	subexpressions in depth-first order ||| flatten	count=1
arg	from_name from_name can ||| obj from_name	count=1
class	database ||| query set	count=1
function	requests for ||| init	count=1
function	in the given ||| patch vary	count=1
function	"modelname") tuples and ||| model	count=1
module	the dirty ||| db backends base	count=1
function	permission to ||| permission	count=2
module	optional dictionary of database ||| db	count=1
function	clean ||| clean	count=1
module	essentially ||| db models	count=2
class	permission ||| permissions mixin	count=1
module_class	yields [module_1] [class_2] they should be rendered ||| [module_1] [class_2]	count=2
module	corresponding ||| apps	count=1
function	slash to ||| slash	count=1
function	send ||| send	count=2
arg	email and ||| email	count=1
function	technical 404 [function_2] ||| [function_1] [function_2]	count=2
arg	the related instance ||| instance value	count=2
function	instance ||| from	count=1
class	choices ||| model choice field	count=1
module	return the ||| contrib admin	count=1
function	live ||| live	count=1
module	not confuse the admin ||| contrib admin	count=1
module	examine [module_2] ||| [module_2] [module_1]	count=2
class	type ||| type	count=3
function	if url namespaces used ||| check url namespaces	count=1
function	a test database ||| create test db	count=1
module_class	is this [class_2] ||| [module_1] [class_2] eq other	count=1
arg	function that ||| result func cargs offset	count=1
function	will set ||| set	count=2
class	the form ||| base form	count=3
function	data type ||| type	count=1
function	computes an interior point ||| point on surface	count=1
module_class	[module_1] given srid ||| [module_1] [class_2] transform	count=1
function	executed by ||| executed	count=1
function	unget history as a ||| unget history	count=1
module	blocks of ||| db models sql	count=1
module_class	[module_1] [class_2] ||| [module_1] foreign [class_2]	count=1
arg	messages ||| messages response	count=1
arg	a ctypes function ||| func argtypes errcheck strarg	count=1
arg	app ||| app	count=1
module	examine [module_2] ||| [module_1] [module_2]	count=2
class	deep-clone ||| state	count=1
function	path to ||| path	count=1
function	[function_1] migration files ||| [function_2] [function_1]	count=4
class	if ||| set	count=1
function	[function_1] input ||| [function_1] [function_2] input_data meta content_length boundary	count=3
function	returns a tuple of ||| tuple	count=1
module	the boundaries of the ||| contrib gis gdal	count=1
function	help [function_2] ||| [function_1] [function_2]	count=1
function	object for ||| for	count=1
function	return the custom url ||| url	count=1
module	walks the list of ||| db models sql	count=1
arg	[arg_1] context ||| [arg_2] [arg_1]	count=2
function	[function_1] templates ||| [function_1] [function_2]	count=1
arg	objs via the relation ||| objs	count=1
class	zeros i ||| format	count=1
module	blocks of ||| db models	count=1
module_class	[module_1] [class_2] ||| [module_1] base base spatial [class_2]	count=2
arg	table name in table_names ||| table_names	count=2
function	returns a ||| get for models	count=1
class	of this geometry ||| linear geometry mixin	count=1
module	checks ||| utils translation	count=1
module	backends can override this ||| backends base	count=1
class	be ||| field	count=6
function_arg	[function_1] [arg_2] ||| [function_1] next year [arg_2]	count=6
function_arg	[function_1] start date ||| [function_1] next day [arg_2]	count=1
class	dictionary of database ||| handler	count=1
arg	path should be ignored ||| path	count=1
function	from a ||| load from	count=1
module	been [module] ||| [module]	count=1
function	the ||| handle template	count=2
module	a list ||| core management	count=1
function	a ||| lazy model operation	count=2
function	point geometry guaranteed to ||| point on	count=1
arg	me a model ||| cls model	count=1
arg	to ascii/latin-1 native strings ||| charset mime_encode	count=1
function	select objects with ||| select	count=1
function	was [function_2] ||| [function_2] [function_1]	count=5
function	[function_1] is empty ||| [function_2] [function_1]	count=2
class	values in the cache ||| base cache	count=1
module	deep-clone the ||| db	count=1
module	the encoding of ||| utils	count=1
class	from the set ||| set	count=1
function	[function_1] attribute ||| [function_2] [function_1]	count=3
function	queryset-like can ||| can	count=1
module	"modelname") tuples ||| apps	count=1
class	the forward [class_2] ||| [class_1] [class_2]	count=1
arg	string adding ||| s	count=1
arg	instance through the ||| instance cls	count=2
module	a given datetime datetime ||| utils	count=2
class	password reset for ||| password reset	count=1
function	field in the 'to' ||| field	count=2
arg	is found in ||| css_selector text	count=1
arg	in the instance ||| instance name	count=1
arg	key into a ||| key version	count=1
class	value for the given ||| value	count=1
function	the command [function_2] ||| [function_1] [function_2]	count=1
module	extra ||| views	count=1
function	module ||| init	count=1
module	the lookup type ||| contrib	count=1
function	a format string ||| from string	count=1
class	resets the dirty flag ||| base database	count=1
function	remove ||| remove	count=2
function	if possible ||| init	count=1
class	represented by this log ||| log	count=2
module	file ||| management commands	count=2
function	[function_1] db tables ||| [function_2] [function_1]	count=4
function	prepopulated_fields ||| prepopulated fields	count=1
arg	retrieve ||| feat rel_model rel_mapping	count=1
function	wkb representation of ||| wkb	count=1
module	[module] the current ||| [module]	count=3
class	for the template and ||| simple template response	count=1
function	for update ||| for update	count=2
module	does ||| gis db backends	count=1
arg	[arg_1] has changed ||| [arg_2] [arg_1]	count=3
arg	message to a recipient ||| message	count=1
module	contain multiple lines and ||| db backends	count=1
arg	value to ||| field value	count=2
arg	name with an optional ||| name app_label	count=1
module	by ||| core	count=1
arg	makes a naive datetime ||| is_dst	count=1
class	key from the cache ||| cache	count=2
class	the cache if the ||| cache	count=4
function	should be replaced with ||| reduce	count=1
function	[function] fragment ||| [function]	count=1
function	0-based ||| single external	count=1
module	stddev and ||| db backends	count=1
module	attribute when requested the ||| contrib gis gdal	count=1
module	the appropriate ||| contrib	count=1
function	list of sql ||| sql flush	count=1
module	given ||| contrib	count=1
function	manager [function_2] ||| [function_2] many to one [function_1]	count=1
module	this ||| forms	count=2
function	long integer into ||| long	count=1
module_class	[module_1] a ||| [module_1] [class_2]	count=2
function	[function_1] add "value" ||| [function_2] [function_1] dict data key value	count=1
module	all models ||| db models sql	count=1
function	as [function] ||| set as test [function]	count=3
function	the short ||| short	count=1
function	true ||| form	count=1
function	generate a random password ||| make random password	count=1
module	a geometry representing the ||| contrib	count=2
module	this accessor ||| gis db models	count=1
function	adds or updates the ||| vary	count=1
arg	fields given in 'names' ||| names opts alias can_reuse	count=1
function	set [function_2] ||| [function_1] annotation [function_2]	count=2
class	can contain ||| view	count=1
module	a geosgeometry the ||| contrib	count=1
function	the maximum allowed batch ||| bulk batch	count=1
class	new [class] ||| [class]	count=3
function_arg	add a [arg_2] ||| [arg_2] [function_1]	count=1
arg	to a response so ||| view_func	count=1
function	[function] to ||| user passes [function]	count=3
class	[class] column ||| [class]	count=1
module	location if the original ||| contrib gis	count=1
class	i ||| format	count=3
arg	dependencies of the changes ||| changes graph	count=1
module	instance guaranteed ||| contrib sessions backends	count=1
module	names from an admin ||| admin	count=1
class	flag ||| base	count=1
class	creates a new session ||| session	count=1
function	the n-th clone of ||| db clone	count=1
class	of the ||| format	count=3
class	through the forward relation ||| forward many to one descriptor	count=1
function	prefix to the next ||| prefix	count=1
module_class	with this [class_2] ||| [class_2] [module_1]	count=1
module	returns true ||| contrib gis	count=1
function	the help ||| help	count=1
function	log ||| log deletion	count=2
function	only once per save ||| save base	count=1
class	obtain the list of ||| list	count=1
function	[function] aggregate ||| [function]	count=3
function_arg	migrate the [arg_2] ||| [arg_2] [function_1]	count=1
function	class to use ||| class	count=2
module	to access the ||| contrib	count=1
function	tuples [ directory file ||| compile messages	count=1
function	list of choices ||| action choices	count=1
module_class	[module_1] band ||| [module_1] [class_2]	count=1
function	creates a prefix ||| prefix	count=1
function	to reset sequences ||| sequence reset	count=1
module	of (column_name referenced_table_name ||| db backends mysql	count=1
class	the list of dates ||| base date list	count=1
module	a dictionary mapping command ||| management	count=1
function	inverse ||| inverse	count=1
function	returns the form class ||| form class	count=2
arg	the form is ||| form	count=1
arg	a dom node ||| node	count=1
function	all known related objects ||| merge known related objects	count=1
module	tuple with elements ||| db backends base	count=1
function	introspected foreign keys ||| can introspect foreign keys	count=1
function	implement the search and ||| search	count=1
arg	me a model ||| model	count=1
arg	see if the response ||| response header_query	count=1
class	month ||| date format	count=1
class	the current session ||| session	count=1
module	on results ||| db models	count=1
class	for each ||| base form set	count=1
function	rolls back a transaction ||| rollback	count=1
function	imported and registered ||| model	count=1
class	for ||| safe	count=1
class	to the ||| query	count=1
arg	run ||| result_type chunked_fetch	count=1
module	email ||| core mail backends	count=1
function	destroy a ||| destroy	count=1
arg	given ordereddict of ||| paths dry_run	count=1
function_arg	disconnect [arg_2] ||| [arg_2] [function_1]	count=4
function	corresponding models have been ||| lazy	count=1
class	migration ||| migration autodetector	count=2
function	[function_1] keyword arguments ||| [function_1] [function_2]	count=2
class	passed into ||| query set	count=1
class	if it has ||| input	count=1
module	log the user ||| contrib auth	count=2
arg	the name of the ||| name	count=1
function	[function_1] object this ||| [function_2] [function_1]	count=1
module	there will be ||| models sql	count=1
function	expiry ||| expiry	count=1
module	messages ||| messages storage	count=2
module	index the ||| contrib gis geos	count=1
function	non-django ||| html	count=1
function_arg	[function_1] source ||| [function_1] [arg_2]	count=1
class	the migration ||| migration autodetector	count=1
function	have ||| lazy model operation	count=1
class	of the root ||| node	count=1
function	the same user ||| user	count=1
module	the area of the ||| contrib	count=1
function	and when ||| lazy model	count=1
class	the where clause ||| where	count=1
module	for the given geometry ||| gis	count=1
function_arg	models that [arg_2] ||| [arg_2] [function_1]	count=1
class	the response ||| simple template response	count=1
module	decorator to ||| views decorators	count=1
class	the fields ||| set	count=1
module	[module] source ||| [module] gdal	count=1
function	select certain related ||| add select related	count=2
arg	username email and ||| username email	count=2
function	save_as ||| save as	count=1
module	query ||| db models sql	count=5
class	in the cache ||| cache	count=2
function	path [function_2] ||| [function_2] [function_1]	count=2
module	whether a user ||| auth	count=1
function	last object of a ||| last	count=1
function	a new instance ||| instance	count=1
class	number of email ||| base email backend	count=1
module	in the ||| contrib sessions backends	count=1
function	what is the type ||| field type	count=1
function	connection ||| new connection	count=1
function	field checks ||| check fields	count=2
function	have a valid ||| is valid	count=1
class	true if ||| admin	count=1
function	pk [function_2] ||| [function_2] [function_1]	count=6
function	string ||| to string	count=1
module	return ||| generic	count=1
function	function to create a ||| create generic	count=1
module	methods by default it ||| core cache	count=1
function	'second', returns the ||| trunc	count=2
function	return the country ||| country	count=2
function	parse [function_2] ||| [function_1] [function_2]	count=2
class	either queryset ||| query set	count=1
module	the pixel values ||| contrib	count=1
class	initialize the wrapped ||| lazy	count=1
class	expression and all subexpressions ||| expression	count=1
module	the default translation ||| translation	count=1
class	of database definitions ||| handler	count=1
arg	receiver ||| receiver	count=2
arg	field on [arg_2] ||| [arg_2] [arg_1]	count=2
class	the results from ||| query	count=1
class	urlconf can contain helpful ||| view	count=1
module	a list of tuples ||| core	count=1
function	and appending a slash ||| redirect with slash	count=1
function	log for ||| log	count=1
module	dictionaries in the ||| template	count=1
arg	the given cursor ||| cursor sql params	count=1
function_arg	[function_1] deeper for ||| [arg_2] [function_1]	count=4
class	from ||| uploaded file	count=1
class	for creating a deserialization ||| deserialization	count=1
module	given a modelform return ||| contrib admin	count=1
function_arg	value [arg_2] ||| [function_1] [arg_2]	count=2
module	or the user ||| contrib	count=1
function	them out as ||| write	count=1
class	date field by default ||| date list view	count=1
module	of fields in this ||| gis gdal	count=1
class	raw ||| raw	count=1
module	tuple with elements of ||| db backends	count=1
module	models ||| db models sql	count=4
function	adds its information to ||| add srs entry	count=1
module	will be used ||| models	count=1
function	a point geometry ||| point	count=1
class	of ||| connection	count=1
arg	the full_plan ||| state plan full_plan	count=1
module	migrations prior to ||| migrations	count=1
function	"modelname") tuples and ||| lazy model	count=1
class	e ||| date	count=3
module	a dictionary with the ||| contrib gis geoip2	count=1
arg	is ||| value	count=1
module	doesn't populate the cache ||| models	count=1
function	the static prefix settings ||| get static prefix	count=1
class	on the command ||| command	count=2
class	day of the ||| date	count=3
module	of 'year', ||| db backends	count=1
class	module specified in ||| user	count=1
class	item of fieldset[1]['fields'] for ||| base model admin checks	count=1
module	app or ||| core	count=1
class	form ||| base form	count=8
function_arg	form for [arg_2] ||| [arg_2] [function_1]	count=1
function	passes the [function_2] ||| [function_1] [function_2]	count=2
function	[function] object ||| import [function]	count=1
arg	in default_settings if ||| default_settings	count=1
module	and returns the ||| contrib	count=1
arg	format_html for the ||| sep format_string args_generator	count=1
function	distance between the closest ||| distance	count=1
arg	receiver to sender for ||| receiver sender weak dispatch_uid	count=1
class	case ||| admin selenium test case	count=1
function	return the default ||| get	count=1
function	the sql to select ||| select	count=1
function	necessary class setup ||| setup	count=1
function	based on ||| extract	count=1
arg	initialized with ||| x y z srid	count=1
function	attempts to add ||| add	count=1
function	a template ||| template	count=1
module	in the given httpresponse ||| utils	count=1
arg	register func to be ||| func using	count=1
function	to expand to include ||| expand to include	count=1
function	through model map generation ||| generate through model map	count=1
function	values generate placeholder sql ||| as sql	count=1
function	"modelname") ||| lazy model operation	count=1
class	template ||| template response	count=1
module	lines and returns ||| db backends	count=1
module	the contains ||| contrib gis	count=1
function	unique name ||| index name	count=1
class	day of the ||| format	count=3
function	the same format ||| format	count=1
class	the spatial column for ||| base spatial field	count=1
module	on the ||| contrib sessions	count=1
arg	update_pk is defined ||| using fields update_pk	count=1
class	associated ||| generic relation	count=1
function_arg	prepopulated_fields [arg_2] ||| [arg_2] [function_1]	count=4
module	are ||| management	count=1
function_arg	[function_1] value ||| [function_1] index [arg_2]	count=2
class	definitions (structured like ||| connection	count=1
class	corresponding models ||| apps	count=1
arg	to sender for ||| sender	count=1
arg	one item of list_filter, ||| item label	count=1
module	geometry to perform the ||| contrib gis	count=1
module	in a ||| backends	count=1
module	if [module] user has ||| [module]	count=1
function	a new savepoint only ||| savepoint create	count=1
module	in pixels of the ||| contrib gis gdal raster	count=1
function	should contain [function] objects in ||| get make [function]	count=1
module	layer at the ||| contrib gis gdal	count=1
class	performs set up for ||| query set	count=1
class	the input can be ||| field	count=1
function	settings are available in ||| settings	count=1
function	for update [function] ||| for update [function]	count=2
class	is an optional ||| connection	count=1
function	fields if ||| fields	count=1
arg	app label ||| app_label	count=1
arg	request displays ||| queryset	count=1
function	a for ||| for	count=1
class	to ||| date	count=3
module	for further processing ||| utils translation	count=1
module	output in [module_2] ||| [module_1] [module_2]	count=2
module	the message ||| contrib messages	count=2
module	returns the ||| contrib gis gdal	count=14
function_arg	[function_1] invalid values ||| [function_1] [arg_2]	count=2
arg	z ||| z	count=1
class	management form ||| form	count=1
function	extracts the given file ||| extract	count=1
module	lines and returns a ||| db backends base	count=1
arg	the given character limit ||| value limit	count=1
arg	save the returned instance ||| instance	count=1
function	element for relational fields ||| relational field	count=1
arg	[arg] short-hand string ||| [arg]	count=2
function	is valid redirect ||| valid	count=1
module_class	a [class_2] ||| [module_1] base [class_2]	count=1
function	tuple that uniquely identifies ||| signature	count=1
module	example if the model ||| contrib gis	count=1
function	specified by the incoming ||| ordered forms	count=1
class	configuration ||| user settings	count=1
function	split an ||| decode	count=1
module_class	to this [class_2] ||| [class_2] [module_1]	count=2
function	georss [function_2] ||| [function_1] [function_2]	count=3
module	field ||| models fields	count=5
arg	and skip ||| skip	count=1
function	function to generate formsets ||| create formsets	count=1
class	reference ||| reference	count=7
arg	generates a ctypes function ||| func argtypes	count=1
function	corresponding models have ||| lazy model	count=1
function	returns the hexewkb ||| hex	count=1
arg	if request ||| request response	count=1
function	the [function] ||| [function] name	count=1
module	the two geometries is ||| contrib gis	count=1
function	[function_1] model ||| [function_2] [function_1]	count=6
function	custom url ||| url	count=1
class	for [class] ||| [class]	count=3
function	[function_1] model references ||| [function_2] [function_1]	count=1
module	from the coordinate sequence ||| contrib gis geos	count=1
function	of ||| all locale	count=1
module	oracle error code ||| oracle	count=1
arg	if field ||| field	count=1
arg	one item of ||| model item label	count=1
module	the year i ||| utils	count=1
arg	[arg_1] value ||| [arg_1] iterable [arg_2]	count=1
function	given httpresponse ||| vary headers	count=1
function	table joins ||| setup joins	count=1
function	type [function_2] ||| [function_2] [function_1]	count=3
module	the srid of ||| gis	count=2
module	the set of ||| models	count=1
module	overridden in the ||| contrib admin	count=1
function	login page ||| login	count=1
arg	sender ||| sender weak	count=2
arg	url patterns ||| parents	count=1
function	fail silently if ||| fail statements	count=1
module	mysql has ||| backends mysql	count=1
class	this model ||| model	count=2
function	number of points ||| len	count=2
function	sql that [function_2] ||| [function_2] [function_1]	count=23
module	of oracle ||| backends oracle	count=1
function	text ||| text	count=3
module	this ||| gis	count=10
arg	it ||| request	count=1
module_class	the template object ||| template inclusion	count=1
module	the given data source ||| contrib gis	count=1
class	add ||| model form set	count=1
arg	[arg_1] changed it ||| [arg_2] [arg_1]	count=3
function	choices for ||| action choices	count=1
function	variable with the media ||| get media	count=1
function	defer only the ||| only	count=1
module	data type [module] field pointing ||| [module]	count=1
class	of this [class] (e g ||| [class]	count=1
function	add the given ||| add	count=1
arg	messages after trying all ||| messages	count=1
module	in this ||| gdal raster	count=2
class	from the ||| settings holder	count=1
function_arg	[function_1] files not ||| [arg_2] [function_1]	count=1
arg	returns the newly created ||| table_name pk_name	count=1
arg	updates the ||| response	count=1
function	closes the current connection ||| close if	count=1
function	take ||| lazy	count=1
function_arg	language [arg_2] ||| [function_1] [arg_2]	count=3
arg	the tables ||| style tables	count=1
function	[function_1] [function_2] ||| [function_1] distinct [function_2]	count=6
class	the database ||| set	count=1
class	fields passed into this ||| query	count=1
function	search and a ||| search	count=1
arg	an entry in ||| entry	count=1
function	[function_1] columns in ||| [function_2] [function_1]	count=12
function	given ||| save form	count=2
class	a modelform return ||| admin	count=1
module	with this ||| backends	count=1
function	when all ||| operation	count=1
arg	unsaved instance change is ||| request form change	count=1
function_arg	[function_1] [arg_2] ||| [function_1] value selector [arg_2]	count=12
function	the prepopulated [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] ignore_patterns) ||| [arg_2] [function_1]	count=1
module	an optional dictionary ||| db	count=1
function	will be interpolated ||| get readable field	count=1
module	directory ||| core management commands	count=2
arg	a function that ||| func cargs	count=1
arg	up to the given ||| plan state	count=1
function	savepoint only required ||| savepoint	count=1
function	values generate placeholder sql ||| assemble as sql	count=1
class	and ||| loader	count=1
function	geometry database type ||| geo db type	count=3
class	if the settings ||| lazy settings	count=1
module	minor [module] revision number ||| [module]	count=1
arg	field field_name ||| field_name	count=2
arg	accepts a date object ||| date	count=1
arg	and database availability ||| country city city_or_country	count=2
class	to the ||| set	count=1
module	for easy ||| utils	count=1
arg	if possible for simple ||| using	count=1
module	that the field is ||| contrib	count=1
function	adds or ||| patch vary	count=1
module	pointer ||| gdal prototypes	count=1
arg	project_state representing ||| project_state	count=1
function	unsaved instance ||| save form	count=1
function	match the migrations ||| check migrations	count=1
function_arg	[function_1] [arg_2] ||| [function_1] naive value [arg_2]	count=3
arg	changes so ||| changes graph	count=1
arg	[arg_1] y z ||| [arg_2] [arg_1]	count=2
function	key for ||| key	count=1
module	resets the dirty ||| backends base	count=1
function	languages in [function_2] ||| [function_2] [function_1]	count=1
arg	direct relationship ||| m	count=1
function	the runtime ||| runtime	count=1
function	login page passing ||| redirect to login	count=1
function_arg	radio_fields is a ||| radio fields obj	count=1
function	the description string of ||| description	count=1
module	the data source ||| contrib gis	count=2
module	does not indicate the ||| contrib gis db backends	count=1
function	check if field ||| check field	count=3
class	this form has ||| form	count=1
function	vary header of the ||| vary on	count=1
function	add "value" to the ||| add	count=1
function	or updates ||| patch vary	count=1
module	be overridden in the ||| contrib	count=1
function	the help message for ||| help	count=1
function	has ||| admin	count=1
module	property [module] the old ||| [module]	count=1
function	of geos ||| geos	count=1
function	style ||| make style	count=1
module	[module_1] with a ||| [module_1] sessions [module_2]	count=1
arg	callback returns ||| callback timeout	count=1
module	] ||| commands	count=1
function	the response as kml ||| to kml	count=1
arg	for checking the given ||| cls opts	count=1
module	the contains intersects ||| contrib	count=1
function_arg	returns a [arg_2] ||| [arg_2] [function_1]	count=1
module	with forward ||| db backends	count=1
function_arg	[function_1] value ||| [arg_2] [function_1]	count=6
function_arg	[function_1] in ignore_patterns) ||| [arg_2] [function_1]	count=2
arg	to true) ||| offset	count=1
function	a georss [function_2] ||| [function_2] [function_1]	count=3
function	timezone to aware ||| aware	count=1
function	uncaught exceptions ||| handle uncaught	count=1
function	[function] false ||| get expire at [function]	count=1
function_arg	by or none ||| by queryset	count=1
module	field with the ||| contrib gis db backends	count=1
class	this class ||| settings	count=1
module	mysql from ||| db backends mysql	count=1
class	password reset for ||| password reset token	count=2
function	[function_1] to time ||| [function_1] [function_2]	count=2
function_arg	post [arg_2] ||| [arg_2] [function_1]	count=4
arg	[arg_1] [arg_2] ||| status [arg_1] [arg_2]	count=9
module	] ||| management	count=1
function	aren't hidden fields ||| visible fields	count=2
function_arg	[function_1] it's an ||| [arg_2] [function_1]	count=2
arg	return with an x-header ||| view_func view_args view_kwargs	count=1
arg	addition ||| dim geography	count=1
function	[function] list of ||| [function] related models	count=1
function	extracts a value from ||| extract	count=2
function	first object of ||| first	count=1
function	given a ||| form	count=1
class	coerced to ||| typed multiple choice	count=1
function_arg	paginate by [arg_2] ||| [function_1] [arg_2]	count=4
class	the module specified ||| user settings	count=1
arg	value to be ||| value	count=1
module	returns the ||| contrib gis db backends postgis	count=1
function	coordinate sequence for ||| coord seq	count=2
arg	from sender ||| sender weak	count=1
arg	database connection the table ||| connection	count=1
class	minor subminor ||| gisoperations	count=1
module	guaranteed to ||| contrib sessions backends	count=1
module	dirty ||| db backends base	count=2
class	class are satisfied ||| user settings holder	count=1
function	available ||| available name	count=2
module	integer ||| humanize	count=1
function_arg	compile a [arg_2] ||| [arg_2] [function_1]	count=3
class	[class] treats these ||| [class] schema	count=3
module	user to ||| auth	count=1
arg	geometries ||| other	count=1
arg	number ||| number	count=1
module	zeros ||| utils	count=1
function	error response ||| response	count=1
module	of the relative ||| contrib staticfiles	count=1
arg	prevent ||| name val encoding	count=1
function_arg	[function_1] [arg_2] at ||| [function_1] [arg_2]	count=15
module	[module_1] geos geometry ||| [module_2] [module_1]	count=2
function	[function_1] manytomanyfield related ||| [function_1] [function_2]	count=1
module	geometry from the ||| contrib gis	count=1
module	i ||| utils	count=3
module	an integer ||| humanize	count=1
function	previous valid [function_2] ||| [function_2] [function_1]	count=1
module	easy lookups by key ||| translation	count=1
module	of the ||| models	count=3
function	of the sql statements ||| sql	count=2
class	optional dictionary ||| connection handler	count=1
module	the login_url attribute ||| contrib	count=1
module	from applying this ||| db models	count=1
arg	return ||| request	count=1
function	renders ||| render	count=1
function	a valid [function_2] ||| [function_1] [function_2]	count=1
class	ring at the ||| polygon	count=1
function	exclude from loading from ||| deferred loading	count=1
module	can contain helpful extra ||| views	count=1
arg	representing the most recent ||| nodes at_end	count=1
module	quoted version [module] the given ||| [module]	count=1
function	tuples and ||| lazy	count=1
module	of the relative path ||| contrib staticfiles	count=1
function	attempts to register ||| ensure registered	count=1
module	sequence or string ||| gis utils	count=1
class	a ||| model	count=1
module_class	selects [module_1] [class_2] ||| [module_1] [class_2]	count=4
module	the dirty flag ||| backends	count=1
function	alias ||| ref alias	count=1
function	many-to-many relation ||| forward many to many	count=1
function	items to paginate by ||| paginate by	count=1
module	migrations prior to this ||| migrations	count=1
class	time zone offset in ||| time	count=1
class	not ||| holder	count=1
arg	a ctypes ||| argtypes	count=1
arg	number ||| num	count=2
function	the value [function_2] ||| [function_2] [function_1]	count=2
module	c ||| geos prototypes	count=1
function_arg	the admins [arg_2] ||| [arg_2] [function_1]	count=1
class	[class_1] for ||| [class_2] form [class_1]	count=1
function	a shortened ||| explode shorthand ip string	count=1
function	corresponding inlines ||| inlines	count=1
function	[function_1] greater than ||| [function_2] [function_1]	count=5
class	get ||| date list view	count=3
function	[function_1] configs ||| [function_2] [function_1]	count=4
class	[class] or ||| [class]	count=1
function	to the login ||| redirect to login	count=1
module	will be ||| db models	count=2
function	mean of ||| mean	count=1
function	for saving into ||| db prep save	count=1
function	sorted ||| app	count=1
function_arg	[function_1] choice's ||| [arg_2] [function_1]	count=2
module	m rows of ||| models	count=1
module	i e '1' to ||| utils	count=1
arg	dimension changed ||| old_field new_field new_type	count=1
arg	checks if value ||| value	count=1
function	interior rings ||| interior rings	count=2
module	the intersection of this ||| gdal	count=1
function	valid redirect to the ||| valid	count=1
function	number of features ||| len	count=1
function	or ||| vary headers	count=2
function_arg	[function_1] the paths ||| [arg_2] [function_1]	count=2
module	geoip ||| geoip	count=1
function	a decorator that ||| html	count=1
module	and related stats functions ||| backends sqlite3	count=1
function	[function_1] layer metadata ||| [function_2] [function_1]	count=1
arg	model from ||| model	count=1
function	to manually configure the ||| configure	count=1
function	current time zone ||| timezone today	count=2
function_arg	[function_1] values ||| [arg_2] [function_1]	count=2
class	template and context ||| template response	count=1
class	into this ||| set	count=1
function_arg	layout [arg_2] ||| [arg_2] [function_1]	count=3
module	is true if ||| admin	count=1
function	returns ||| get for	count=1
module	sessions [module_2] ||| [module_1] [module_2]	count=1
function	[function] all ||| [function]	count=1
function	the country [function] for ||| country [function]	count=1
class	zeros i e ||| date format	count=1
class	table ||| base database operations	count=1
arg	fields or ||| fields label	count=1
module	transaction ||| backends base	count=2
class	specified permission this ||| permissions	count=1
class	[class_1] management form ||| [class_1] [class_2]	count=1
module	e '1' ||| utils	count=1
module	end with ||| db models	count=1
function	polygon from a ||| from	count=1
function	return a modified ||| get test	count=1
module	[module_1] geos geometry ||| [module_2] [module_1] wkbreader read	count=2
module	[module_1] to ||| [module_1] [module_2]	count=6
function	and items ||| dated items	count=1
arg	stream or a string ||| stream_or_string	count=1
class	[class] of ||| content [class]	count=2
function	should not return 0 ||| check zero	count=1
function	form ||| get form	count=4
class	field with the ||| field	count=1
module	fields passed into ||| db	count=1
function	create and ||| create parser	count=2
function	as a default ||| get default	count=1
function	number ||| lazy model	count=1
module	so that ||| admin	count=1
module	whether the ||| contrib	count=6
arg	in the full_plan ||| plan full_plan	count=1
function	delete the queryset ||| delete	count=1
function	unicode method up ||| method	count=2
module	resets the ||| backends	count=1
class	'0' ||| date	count=2
arg	generates ||| argtypes	count=1
class	fieldset[1]['fields'] for ||| base model admin	count=1
class	hook for ||| base	count=4
function	the purposes of comparison ||| name converter	count=1
module	lookups ||| utils	count=1
module	with long (> 30 ||| core cache backends	count=1
module	list that will be ||| db models	count=1
class	files called ||| files	count=1
module	backends can implement as ||| db backends base	count=2
class	of ("app_label", "modelname") tuples ||| apps	count=1
function	the ||| handle	count=1
class	returns true ||| query	count=1
class	definitions (structured like ||| handler	count=1
function	get the column ||| column	count=1
arg	return the start date ||| date	count=1
arg	path ||| root path prefix	count=1
arg	the given [arg_2] ||| [arg_1] [arg_2]	count=2
module	geometry ||| gis db	count=1
function	search query ||| search	count=1
module	requested static ||| staticfiles	count=1
module	this ||| db models	count=6
function	a dict ||| dict	count=1
class	this type ||| type	count=1
module	geometry ||| gis	count=2
module_class	this band ||| gdal raster gdalband	count=1
function	an envelope ||| envelope	count=1
module	this view should display ||| views generic	count=1
function	adds or updates the ||| headers	count=1
module	that returns ||| gis db models	count=1
module	the __html__ method this ||| utils	count=1
function	filename ||| filename	count=1
module_class	[module_1] [class_2] ||| contrib [module_1] db backends spatialite [class_2]	count=1
function	("app_label", "modelname") ||| operation	count=1
module	the features ||| contrib gis gdal	count=3
function	the current time zone ||| current timezone	count=2
class	given django model ||| model admin	count=2
module	day of the ||| utils	count=3
function	app or ||| handle template	count=1
class	the app ||| command	count=1
function	to fail ||| fail	count=1
function	a test database ||| create test	count=1
module	day of the year ||| utils	count=1
function	name is ||| name raw	count=1
class	satisfied from ||| holder	count=1
module	the contains intersects and ||| contrib	count=1
function	single ||| single	count=1
module	takes the ||| contrib gis db models	count=1
function	[function_1] from ||| [function_1] [function_2]	count=2
function	this helps non-django ||| html safe	count=1
function	to ||| all locale	count=1
module	point_count ||| gdal	count=1
function	an extra [function_2] ||| [function_1] [function_2]	count=3
arg	dimension changed ||| table old_field new_field new_type	count=1
function	create ||| create	count=7
module	number of ("app_label", ||| apps	count=1
function	field pointing [function] this ||| rel [function]	count=1
class	last data [class_2] ||| [class_1] [class_2]	count=3
function	interpolated ||| get readable field	count=1
function	easy lookups by ||| get	count=1
module	the given c ||| contrib gis gdal prototypes	count=1
class	[class] version ||| base [class]	count=1
module	tuples ||| management commands	count=2
function_arg	[function_1] timezone ||| [function_1] [arg_2]	count=2
arg	returned instance to the ||| form instance	count=1
arg	string [arg] ||| obj [arg]	count=1
function	get the ||| get	count=10
class	cascaded ||| multi polygon	count=1
module	of what the ||| db	count=1
class	[class_1] for the ||| [class_2] [class_1]	count=2
module_class	returns a quoted version [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	and a number ||| operation	count=1
arg	object has been ||| request object	count=2
function	ordering refers to ||| ordering	count=1
class	spatial lookup ||| spatial	count=1
module	staticfiles ||| staticfiles	count=1
function	connection settings_dict (a ||| signature	count=1
function	path ||| language from path	count=1
function	fallback with ||| add fallback	count=1
module	view with a ||| views	count=1
function	receive data ||| receive data	count=1
function	[function_1] media ||| [function_1] [function_2]	count=4
function_arg	response the exception ||| response request exception	count=2
function_arg	max_num is an ||| max num obj	count=1
function	uncaught ||| handle uncaught	count=1
function_arg	adds the arg ||| add value arg	count=2
function	[function_1] annotations ||| [function_2] [function_1]	count=4
function	from ||| init	count=1
module	field and that the ||| contrib admin	count=1
function	returns a numeric ||| get	count=1
function	be ||| check field	count=1
function	function that blocks until ||| wait for	count=2
module	raster ||| raster	count=3
class	creating a deserialization error ||| deserialization error	count=1
arg	message to ||| message fail_silently connection	count=2
module	a modelform ||| contrib	count=1
class	return ||| object mixin	count=1
function	proj 4 representation ||| proj	count=1
module	string [module] ' ' ||| [module]	count=1
function	find a requested static ||| find	count=1
arg	the value ||| value arg	count=1
arg	a key ||| key version	count=1
module	and the ||| contrib gis db backends oracle	count=1
module	essentially ||| models	count=1
arg	a ctypes function ||| func argtypes	count=2
function	return the week for ||| week	count=1
arg	error checking on routines ||| func cargs	count=2
class	like settings ||| connection handler	count=1
module	of tuples [ ||| core	count=1
class	on [class] ||| [class]	count=1
arg	token ||| token	count=1
module	[module_1] pointer ||| [module_1] gis gdal [module_2]	count=1
class	the where clause and ||| where node	count=1
arg	line a text or ||| line	count=1
function	vary [function_2] ||| [function_1] [function_2]	count=1
function	random string ||| random string	count=1
function	many-to-one [function_2] ||| [function_1] [function_2]	count=1
arg	returned instance to ||| form instance	count=1
arg	cursor is closed ||| cursor	count=1
function	to find what language ||| get language from	count=1
module	__html__ method this helps ||| utils	count=1
function	[function_1] data ||| handler [function_1] [function_2] chunk raw_data	count=1
arg	sends ||| subject message from_email	count=1
function	in the quantifier ||| get quantifier	count=2
module	mysql has the ||| db backends mysql	count=1
function	type returned when ||| type	count=1
function	are required in ||| initial	count=1
function	header in the ||| headers	count=1
class	date field by default ||| date	count=1
arg	function that ||| result func	count=1
function	[function_1] dimension ||| [function_2] [function_1]	count=1
module_class	[module_1] template rendered ||| [module_1] generic [class_2]	count=1
class	if ||| model	count=1
function	update ||| update	count=3
class	a description of all ||| base	count=1
function	[function_1] all namespaces ||| [function_1] [function_2]	count=1
function	[function_1] [function_2] ||| [function_2] by name [function_1]	count=10
function	initial value ||| value	count=1
function	mean of all pixel ||| mean	count=1
module	the linear ||| contrib gis	count=1
class	time in ||| time	count=1
arg	date of the ||| date	count=6
function	base64 for use in ||| base64	count=1
function	time [function] saved ||| clear [function]	count=1
module	messages to be recorded ||| messages	count=1
function	[function_1] cookie if ||| [function_1] [function_2]	count=5
function	help message ||| help	count=1
function	closes the ||| close	count=3
arg	the requisite ||| value max_digits decimal_places	count=1
module	of the ||| contrib staticfiles	count=1
function	value if ||| value	count=1
class	related ||| descriptor	count=1
class	item of fieldset[1]['fields'] for ||| base model	count=1
function	this type [function_2] ||| [function_2] [function_1]	count=2
module_class	form sql params ||| sql sqlcompiler	count=1
function	in the [function_2] ||| [function_1] [function_2]	count=1
class	a transaction and resets ||| wrapper	count=1
class	or ||| template	count=1
module	not in this class ||| conf	count=1
module_class	for [class_2] ||| [module_1] [class_2]	count=4
function	transforms and lookup ||| build lookup	count=1
function	iterable of app ||| get app	count=1
function	a manager [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] the geometry ||| [arg_2] [function_1]	count=1
function	clean_fields [function] and ||| full [function]	count=1
function	the flush method ||| flush	count=1
module_class	sql [class_2] ||| [class_2] [module_1]	count=1
arg	a manager ||| klass	count=1
function_arg	adds [arg_2] ||| models sql update query [function_1] related update [arg_2]	count=2
class	the given django model ||| base model admin	count=2
class	flag ||| base database wrapper	count=1
module	the given data ||| contrib	count=1
module	a modelform return an ||| contrib	count=1
function	that encapsulates a boundary ||| boundary	count=1
function	transforms a time ||| timefield	count=1
function_arg	[function_1] source and ||| [function_1] [arg_2]	count=1
module	mysql ||| backends mysql	count=3
module_class	change [class_2] ||| [class_2] [module_1]	count=1
module	the messages to ||| contrib messages storage	count=1
arg	repoint their to= endpoints ||| old_field new_field strict	count=1
function_arg	[function_1] doesn't ||| [function_1] [arg_2]	count=3
function	of available ||| available	count=1
arg	[arg_1] a ||| [arg_2] [arg_1]	count=2
class	given ||| geo query	count=1
function	a datetime date ||| date	count=1
arg	context variables to the ||| request	count=2
class	for the template and ||| simple template	count=1
arg	functions ||| func argtypes errcheck cpl	count=1
function	definitions ||| init	count=1
arg	objs ||| objs	count=1
class	form at ||| base form	count=1
function	project templates ||| handle	count=1
module	get or create the ||| contrib	count=1
function	filters from ||| load from	count=1
module	values for this ||| contrib gis gdal	count=1
class	of form in the ||| form set	count=1
module	resets the dirty flag ||| backends base	count=1
function	a ||| messages	count=1
module	displays the headers ||| contrib admin	count=2
function	type [function_2] ||| [function_1] [function_2]	count=2
function	distance between the ||| distance	count=1
class	date field ||| date list view	count=1
function	required to reset ||| reset	count=2
module	for the ||| backends base	count=1
function	current time zone ||| to current timezone	count=2
function_arg	[function_1] function that ||| [arg_2] [function_1]	count=1
class	streamed [class] parser ||| file [class]	count=1
function	[function_1] that extracts ||| [function_2] [function_1]	count=16
module	transaction and ||| backends	count=1
arg	this accepts a date ||| date	count=1
class	the file object ||| file	count=1
arg	name in table_names for ||| table_names	count=2
class	take ||| apps	count=1
module	backends can override ||| db backends base	count=1
class	query with a ||| query	count=1
function	been imported and registered ||| lazy	count=1
class	a given connection where ||| connection	count=1
module	the ||| contrib staticfiles	count=6
arg	limit and adding 'rel=nofollow' ||| value limit	count=1
function	key of [function_2] ||| [function_2] [function_1]	count=8
function	init this serializer given ||| init	count=1
module	at the ||| contrib gis gdal	count=4
function	name ||| parse name	count=1
module	override this method ||| contrib auth management	count=1
function	deserialize ||| deserializer	count=3
module	fields takes the ||| contrib gis db models	count=1
class	the ||| template	count=1
function	given a model ||| model	count=1
class	this class are satisfied ||| settings	count=1
function_arg	[function_1] [arg_2] ||| [function_1] results request queryset [arg_2]	count=9
class	list of ||| date list	count=1
function_arg	[function_1] a wherenode ||| [function_1] filter [arg_2]	count=1
class	specified ||| user settings	count=1
class	cookie ||| cookie	count=1
class	creates ||| sqlaggregate compiler	count=1
function	[function_1] m2m table ||| [function_1] [function_2]	count=2
function	[function_1] file for ||| [function_2] [function_1]	count=4
function	query [function_2] ||| [function_2] [function_1]	count=6
function	self connection settings_dict (a ||| test db signature	count=1
arg	[arg] fetch the ||| [arg]	count=3
function	[function_1] to add ||| [function_2] [function_1]	count=2
arg	a single message ||| message from_email	count=1
function	select certain related models ||| select related	count=1
function	as a ||| filter	count=1
class	a foreignkey or has ||| admin	count=1
function	units name ||| units	count=1
function_arg	list_display_links [arg_2] ||| [function_1] [arg_2]	count=4
arg	regex [arg_2] ||| [arg_1] [arg_2]	count=1
function	of ("app_label", ||| operation	count=1
module	this is ||| gis gdal	count=1
function	list or ||| list	count=1
arg	[arg] evaluates the ||| bp [arg]	count=3
class	satisfied from ||| user settings	count=1
function_arg	the template [arg_2] ||| [arg_2] [function_1]	count=4
arg	check one [arg] model admin ||| obj model [arg]	count=1
class	in the database ||| database	count=2
function	of geos used ||| geos	count=1
arg	path (or none ||| root path prefix	count=1
function	"modelname") tuples and when ||| model operation	count=1
class	for the template and ||| template	count=1
module	for translation [module_2] ||| [module_2] [module_1]	count=4
module	into migrations with dependencies ||| db migrations	count=1
function	deep-clone ||| construct	count=1
class	deserialization error which has ||| deserialization error	count=1
function_arg	class [arg_2] ||| [arg_2] [function_1]	count=2
module	oracle ||| backends oracle	count=9
class	the settings ||| lazy settings	count=2
module	[module] for ||| [module]	count=3
class	[class] or ||| geo [class]	count=3
arg	of inline formsets and ||| request form formsets	count=1
function	been imported and registered ||| lazy model	count=1
function	like a url ||| url	count=1
module	the oracle ||| backends oracle	count=1
function	should be allowed ||| get allow	count=1
module	if ||| utils	count=5
function	language the user ||| language from	count=1
arg	index/unique constraint ||| column_names suffix	count=1
function	and when ||| model	count=1
class	template rendered with ||| template response	count=1
module	value ||| gdal prototypes	count=1
arg	are in installed_apps ||| only_existing include_views	count=1
function	sql that truncates ||| sql	count=2
function	that re-throws [function] exceptions ||| wrap [function]	count=1
class	form needs to ||| form	count=1
function	instance ||| from object	count=2
function	computes an interior ||| on surface	count=1
function	generate placeholder sql and ||| assemble as sql	count=1
module	the particular ||| contrib gis	count=1
arg	the given httpresponse expires ||| response cache_timeout	count=1
class	in the database into ||| database	count=1
module	object from the ||| contrib gis	count=1
arg	it with a context ||| context request using	count=1
arg	a message to ||| message fail_silently connection	count=2
arg	this request displays ||| queryset	count=1
arg	django forms ||| form_class choices_form_class	count=1
function	tuples and when ||| lazy	count=1
function	interior ||| interior	count=1
arg	pointer allocated by ogr ||| cargs offset	count=1
class	have a management form ||| form	count=1
function	templates ||| handle	count=1
function	postgis [function_2] ||| [function_2] [function_1]	count=4
arg	entry in ||| cls entry	count=1
class	for base spatial fields ||| base spatial field	count=1
function	the prepopulated ||| prepopulated	count=1
function	of all table ||| table	count=1
function	default ||| default	count=5
class	the app ||| template	count=1
class	given a modelform return ||| admin	count=1
function	all namespaces from ||| all namespaces	count=2
module	this ||| gis db	count=5
class	a list ||| simple list	count=1
function	[function_1] signed cookie ||| [function_2] [function_1]	count=3
module	a transaction and ||| backends	count=1
class	removes the current session ||| session	count=1
arg	returned instance ||| instance fields exclude	count=1
arg	true if the value ||| value	count=1
function	a datetime value ||| datetime	count=1
function	a georss ||| georss	count=1
module	should be deleted if ||| staticfiles	count=1
function	that extracts a value ||| extract	count=2
class	if ||| model admin	count=2
module	the srid of ||| gis db	count=2
function	[function_1] ordering ||| [function_2] [function_1]	count=1
module	if the model ||| contrib gis	count=1
module	a [module] tag ||| [module]	count=1
function_arg	executed by [arg_2] ||| [arg_2] [function_1]	count=2
module	[ directory file ] ||| management commands	count=1
arg	the returned instance ||| instance fields exclude	count=1
function	[function_1] unget ||| [function_1] [function_2]	count=1
module	this view ||| views generic	count=7
function	any ||| db	count=1
function	password [function_2] ||| [function_1] [function_2]	count=1
arg	max_age seconds ago ||| max_age	count=1
class	item of fieldset[1]['fields'] for ||| base model admin	count=1
module	some versions of oracle ||| oracle	count=1
arg	that defines the ||| klass	count=1
function	[function_1] [function_2] ||| [function_1] annotation [function_2]	count=4
module	of the messages ||| contrib messages	count=1
module	return a url pattern ||| urls	count=1
function	'second', [function_2] ||| [function_1] [function_2]	count=4
module	sql template and function ||| db backends spatialite	count=1
module	parent raster and force ||| gdal raster	count=1
class	admin ||| admin	count=2
function_arg	given date [arg_2] ||| [arg_2] [function_1]	count=1
function	session ||| session	count=1
function	admin [function_2] ||| [function_2] [function_1]	count=5
module	the ||| migrations	count=1
arg	generates a ctypes function ||| func argtypes errcheck strarg	count=1
module	backends ||| db backends	count=6
function	number of ||| lazy model operation	count=1
arg	in the middle ||| value	count=1
class	this widget [class_2] ||| [class_2] [class_1]	count=8
module	in [module_2] ||| [module_1] [module_2]	count=2
class	savepoint ||| database wrapper	count=2
module	month without leading ||| utils	count=1
function_arg	[function_1] applications aren't ||| [function_1] unique [arg_2]	count=4
function	returns a tuple representation ||| tuple	count=1
module	take ||| apps	count=1
class	for this type ||| type	count=1
function	field name ||| normalize col name	count=1
function	[function_1] for ||| [function_1] [function_2]	count=7
module	be output in the ||| contrib admin	count=1
function	corresponding models have been ||| model operation	count=1
function	been ||| model	count=1
function	a mime attachment object ||| create attachment	count=1
function_arg	[function_1] string ||| [arg_2] [function_1]	count=3
function	[function] output type ||| output field [function]	count=1
class	all formsets [class_2] ||| [class_2] [class_1]	count=1
function	fields for ||| fields	count=2
arg	value for use ||| value	count=2
module	[ ||| core management commands	count=2
class	or has choices defined ||| model admin	count=1
class	app or project ||| command	count=1
function	uncaught [function_2] ||| [function_1] [function_2]	count=1
class	have been imported and ||| apps	count=1
function	database definitions ||| init	count=1
function_arg	[function_1] receiver ||| [function_1] [arg_2]	count=2
function	the number ||| count	count=2
function	filesystem path [function_2] ||| [function_1] [function_2]	count=2
module	messages ||| contrib messages	count=1
function	outputting html ||| html	count=1
function	return a [function_2] ||| [function_1] [function_2]	count=11
class	e ||| format	count=4
arg	level was recorded successfully ||| request level	count=1
function	field of this ||| field	count=1
class	this queryset to the ||| query	count=1
arg	model ||| model data	count=1
function	and a ||| lazy model operation	count=1
function	[function_1] options ||| [function_2] [function_1]	count=5
module	model _meta fields ||| fields	count=1
module_class	present usually 2 but [module_1] [class_2] other pop-ups ||| [module_1] [class_2]	count=2
function	return a list containing ||| get	count=1
function	block of text with ||| block	count=1
function	[function_1] input ||| [function_1] [function_2]	count=2
function	kmz ||| to kmz	count=1
function	of items for ||| queryset	count=1
function	values ||| value	count=1
function	all known related ||| known related	count=1
arg	of yaml data ||| stream_or_string	count=1
function	given httpresponse object ||| patch vary	count=1
function	kml ||| kml	count=3
function	test db ||| test db	count=3
function	return true if the ||| has	count=1
function_arg	format string [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] length ||| [arg_1] [arg_2]	count=1
function	get the previous valid ||| get previous	count=3
module	it is [module_2] ||| [module_1] [module_2]	count=1
function	[function] mask ||| [function] extra	count=1
class	a template rendered ||| template	count=1
arg	paths have the ||| paths	count=1
class	i e '1' to ||| format	count=1
class	the year ||| date format	count=1
class	function that can be ||| field	count=1
arg	a wrapper of format_html ||| sep format_string args_generator	count=1
function	[function_1] queryset ||| [function_1] [function_2]	count=1
arg	[arg_1] and skip ||| [arg_1] [arg_2]	count=1
function	[function_1] string and ||| [function_2] [function_1]	count=4
function	uncaught ||| uncaught	count=2
module	the configured loaders ||| loaders	count=1
class	we return safe results ||| safe	count=2
module	list of ||| db backends sqlite3	count=1
function	to delete ||| delete	count=1
function	names that have ||| names	count=1
arg	changed ||| new_field new_type	count=1
function_arg	[function_1] cursor ||| [arg_2] [function_1]	count=1
arg	returned instance ||| instance	count=1
arg	and values [arg_2] ||| [arg_1] iterable [arg_2]	count=1
class	of a node ||| node	count=1
arg	internal implementation - duplicate ||| number verbosity keepdb	count=1
module	for ||| contrib gis gdal	count=2
function	[function_1] y with ||| geos geoscoord seq [function_1] [function_2] index	count=1
class	this hasher ||| hasher	count=1
function	create [function_2] ||| [function_2] [function_1]	count=2
module	geos [module_2] ||| [module_2] [module_1]	count=1
class	database definitions (structured like ||| handler	count=1
arg	[arg] action field ||| [arg]	count=3
function	in a geojson ||| geojson	count=1
function	the ||| html safe	count=1
function	has ||| has module perms	count=1
arg	regex with flags ||| regex flags	count=3
module	this instance and ||| models	count=1
function	of this [function_2] ||| [function_1] [function_2]	count=1
module_class	in the [class_2] ||| [module_1] [class_2]	count=15
class	corresponds to ||| gdalraster	count=1
arg	the filename [arg_2] ||| [arg_2] [arg_1]	count=5
arg	regex [arg_2] ||| [arg_2] [arg_1]	count=1
arg	given username [arg_2] ||| [arg_2] [arg_1]	count=3
function	tries to fetch ||| fetch	count=1
module	name [module] name ||| [module]	count=1
arg	username ||| username	count=1
class	for ||| settings	count=1
class	string is safe ||| safe	count=2
arg	from cls ||| cls	count=1
module	the geometry from the ||| contrib	count=1
arg	statements which are ||| cursor statements parameters	count=1
function	javascript for the prepopulated ||| prepopulated	count=1
function	slash ||| should redirect with slash	count=2
function	first cache ||| cache	count=1
class	project ||| template	count=1
function	[function_1] [function_2] ||| year archive view [function_1] [function_2]	count=1
class	resolve ||| query set	count=1
function	json string ||| to string	count=1
arg	if connection_reset is ||| connection_reset	count=1
module	"modelname") tuples and ||| apps	count=1
module	returns a warped ||| gis gdal	count=1
class	fields passed into ||| set	count=1
arg	[arg_1] saves too ||| [arg_1] [arg_2]	count=3
module	multiple lines and ||| backends	count=1
module	[module] selector ||| [module]	count=3
function	a ||| html	count=1
arg	mimetype triple into ||| mimetype	count=1
arg	is found ||| css_selector text	count=1
module	the [module_2] ||| [module_1] gis [module_2]	count=4
function	decorator that ||| safe	count=1
class	the form needs to ||| form	count=1
class	possible ||| settings holder	count=2
arg	given field_name ||| field_name	count=4
function	take ||| model	count=1
module	against the default translation ||| translation	count=1
class	number ||| geo query set	count=1
function	passes the given ||| passes	count=1
arg	in an apps and ||| cls apps	count=1
class	by all ||| base	count=1
function	url ||| check url	count=1
function	string of etags given ||| etags	count=1
function_arg	[function_1] response to ||| [arg_2] [function_1]	count=2
function	[function_1] lists ||| [function_2] [function_1]	count=1
function	migrations in the database ||| migrations	count=1
function	time zone as ||| timezone	count=1
arg	[arg_1] values to ||| [arg_1] [arg_2]	count=1
function	clear [function_2] ||| input [function_1] [function_2]	count=1
function	the [function] of the ||| postgis lib [function]	count=1
class	in the urlconf ||| view	count=1
function	to create ||| create generic related	count=2
class	definitions (structured like settings ||| connection	count=1
class	the [class] or fqdn ||| [class]	count=1
class	files called from collectstatic ||| hashed files mixin	count=1
function	when all the ||| model operation	count=1
function	with the model class ||| class	count=1
function	the migrations in ||| migrations	count=1
module	a tuple with ||| db backends base	count=1
class	that gives this loader ||| loader	count=1
function_arg	returns a [arg_2] ||| [function_1] search results request [arg_2]	count=1
class	is true if ||| model admin	count=1
module	a dictionary with the ||| contrib gis	count=1
class	if the model ||| model	count=1
function	the layer metadata and ||| layer	count=1
function	sql [function_2] ||| [function_2] time zone [function_1]	count=2
module	for configuration variables ||| conf	count=1
function	[function_1] items ||| [function_1] [function_2]	count=5
arg	unsaved instance change ||| request form change	count=1
module	processing ||| translation	count=1
module	and resets the dirty ||| backends base	count=1
function	id ||| id	count=4
function	default handler if ||| handler	count=1
module_class	[module_1] the ||| [module_1] [class_2]	count=4
function	lazy i e string ||| check lazy	count=1
function	check framework ||| check	count=1
class	transaction and ||| base database	count=1
function	returns a list ||| all	count=1
module	of the ||| contrib	count=20
function	dictionary of city information ||| city	count=1
function	tuples [ directory ||| compile messages	count=1
module_class	[module_1] [class_2] is ||| [module_1] [class_2]	count=8
function	that need temp ||| temp	count=1
module	of ||| db backends	count=13
module	a list of ||| core management commands	count=1
module	in this ||| gis gdal	count=6
class	list of dates ||| date list view	count=1
module	have been ||| apps	count=1
function	the file ||| file	count=2
function	a random value ||| random function	count=1
module	does ||| db backends	count=1
module	of fields ||| db models sql	count=1
class	zeros i ||| date	count=1
function	project ||| handle	count=1
class	geometry [class_2] ||| [class_2] [class_1]	count=4
function	parse a ||| parse	count=2
function	[function] subcommand ||| [function]	count=2
arg	model usually involves deleting ||| model	count=2
function	and appending a slash ||| slash	count=1
module	corresponding models ||| apps	count=1
function	tuple representation ||| tuple	count=2
function	semi major axis for ||| semi major	count=1
module	zeros i ||| utils	count=1
function	postgis ||| postgis	count=3
function	return the given field ||| get field	count=1
function_arg	z with [arg_2] ||| [arg_2] [function_1]	count=2
function	sql string ||| sql	count=4
function	be allowed ||| allow	count=1
class	a string for interoperability ||| safe	count=1
module_class	forms in [class_2] ||| [module_1] [class_2]	count=3
function	that returns [function_2] ||| [function_2] [function_1]	count=8
function	of comparing ||| anonymous	count=1
arg	lookup value ||| value lookup_type	count=2
function	has permission to change ||| has change permission	count=1
function	in this class are ||| init	count=1
module	from views and ||| db backends sqlite3	count=1
function	string of the query ||| query	count=1
class	the ||| apps	count=1
class	and when ||| apps	count=1
module	the list [module_2] ||| [module_1] [module_2]	count=1
function	sql and parameters for ||| as sql	count=1
function	extracts a ||| datetime extract	count=1
function_arg	model [arg_2] ||| [arg_2] [function_1]	count=4
function	template context ||| context	count=1
arg	the changes ||| changes graph	count=1
arg	given cursor with ||| cursor	count=1
function	context ||| get context data	count=1
module	of all tables and ||| db backends	count=1
module	[module] the database ||| contrib [module]	count=1
arg	unsaved instance ||| form	count=1
arg	field to ||| field	count=1
module	memory [module] source ||| [module] gdal	count=1
class	the dirty ||| wrapper	count=1
class	an unsaved instance ||| model admin	count=1
arg	related instance through the ||| instance value	count=2
module	of either ||| utils	count=1
module	template ||| template backends	count=4
class	this [class] rendered ||| [class]	count=2
function_arg	subtracts [arg_2] ||| [arg_2] [function_1]	count=1
module	list of datetime objects ||| db models	count=1
module	this class are satisfied ||| conf	count=1
function	context if either self ||| context data	count=1
module	into [module_2] ||| [module_1] [module_2]	count=8
function	encoding is ||| encoding	count=1
arg	helper routine for trying ||| param msg	count=1
module	or directly (if the ||| contrib gis gdal	count=1
function	the options with ||| select options	count=2
function	the names of ||| names	count=1
function	y ||| y	count=7
arg	ensures the cursor ||| cursor sentinel col_count	count=2
arg	for the given function ||| func	count=1
function	tuple version of this ||| tuple	count=1
module	flag ||| backends	count=1
function	dependency [function] using ||| build [function]	count=1
arg	request ||| request obj	count=2
function	[function_1] etag return ||| [function_1] [function_2]	count=4
module	to the set of ||| models sql	count=1
module	the type of ||| contrib	count=1
function_arg	[function_1] path with ||| [function_1] [arg_2]	count=2
module	wrapping the ||| contrib	count=1
class	a modelform ||| admin	count=1
function	the queryset ||| queryset	count=1
module	of tuples ||| core management commands	count=1
module	the given ||| contrib sessions	count=1
module	tuples [ directory file ||| management	count=1
class	the session key and ||| session	count=1
module	of ||| template	count=1
function	renamed ||| renamed	count=1
class	specified ||| settings	count=1
module	be used to generate ||| db models	count=1
module	dirty ||| base	count=1
function	returns the admin url ||| admin url	count=1
class	satisfied from the module ||| holder	count=1
function	filename ||| generate filename	count=1
function_arg	[function_1] or ||| [function_1] [arg_2]	count=10
arg	type of lookups specified ||| lookups	count=1
arg	a function that returns ||| result func cargs	count=1
class	their ||| permissions mixin	count=1
class	i e '0' to ||| date	count=1
function	set or ||| set	count=1
function	variables not ||| init	count=1
function_arg	[function_1] ignore_patterns) ||| [function_1] path [arg_2]	count=1
function	of the javascript ||| javascript	count=1
arg	function and the other ||| func other	count=1
arg	timezone ||| timezone	count=1
class	for the [class] or fqdn ||| [class]	count=1
function_arg	it matches [arg_2] ||| [function_1] path [arg_2]	count=1
arg	tests only ||| lookup_name	count=1
arg	pushes other_dict to ||| other_dict	count=1
function	where the untranslated verbose ||| verbose	count=1
class	for the ||| base model	count=1
arg	sender to ||| sender	count=2
arg	a function that returns ||| func cargs offset	count=1
class	not in this class ||| settings	count=1
function	main help ||| main help	count=2
function	specified in ||| init	count=1
module_class	of [module_1] [class_2] ||| [module_1] [class_2]	count=8
arg	[arg_1] [arg_2] ||| [arg_2] length [arg_1]	count=1
function_arg	dated items [arg_2] ||| [function_1] [arg_2]	count=1
module	the set of fields ||| db models	count=1
class	the database ||| database wrapper	count=1
module_class	if this [class_2] ||| [class_2] [module_1]	count=5
function	checks the [function_2] ||| [function_1] [function_2]	count=3
class	geometry ||| geo query set	count=1
function	[function_1] queryset or ||| [function_1] [function_2]	count=1
function_arg	search form [arg_2] ||| [function_1] [arg_2]	count=1
function	(assumed to be ||| cipher	count=2
arg	add delta to ||| delta	count=1
module	containing names of ||| db models	count=1
class	if ||| admin	count=1
module	of values ||| db models	count=1
class	geometry or raster initializing ||| spatial proxy	count=1
module_class	[module_1] field ||| [module_1] [class_2]	count=5
module	mapping the names of ||| contrib	count=1
class	queryset to ||| query	count=1
arg	instance to the ||| instance fields	count=1
function	object ||| create	count=2
arg	instance [arg_2] ||| [arg_1] [arg_2]	count=2
module	_meta fields ||| db models fields	count=1
module	of different ||| models fields	count=1
function	re-enable ||| enable constraint checking	count=1
module	a transaction and ||| base	count=1
module	returns true ||| gis db	count=1
function	adds or ||| headers	count=1
class	specified permission this method ||| permissions	count=1
module	serving files in debug ||| conf	count=1
module	the update depends on ||| db models	count=1
function	to a python dictionary ||| module to	count=1
function	to a ||| module to	count=1
function	this [function_1] [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] ipv6 ||| [function_1] [function_2]	count=5
function	test database prompting the ||| test db	count=2
module	returns true if ||| contrib gis db models	count=1
module	helper function [module] ||| contrib [module]	count=1
function	of errors ||| error	count=1
arg	files ||| files name	count=1
function_arg	[function_1] path ||| [function_1] [arg_2]	count=8
class	full-text ||| database operations	count=1
function	up a model ||| model	count=1
function	connection to ||| new connection	count=1
module	backends can override ||| db backends	count=1
arg	the query ||| query	count=1
function	get a [function_2] ||| [function_1] [function_2]	count=2
function	runtime ||| runtime	count=1
class	of tuples [ ||| command	count=1
module	and resets ||| backends	count=1
module	and views that ||| db backends	count=1
class	geometry [class_2] ||| [class_1] [class_2]	count=4
class	queryset classes ||| query set	count=1
function	z with the ||| z	count=2
arg	locations is a list ||| locations	count=1
arg	the modified flag so ||| session_key	count=1
function	field to not ||| not	count=2
class	returns ||| set	count=1
function	("app_label", "modelname") tuples and ||| operation	count=1
arg	which may ||| field_index	count=1
module	command ||| core management	count=1
function	the normal forwards ||| forwards	count=1
module	e saves the ||| contrib	count=1
function	or if ||| unusable or	count=1
class	mapping information ||| mapping	count=1
function	updates the po ||| po	count=1
module_class	returns a [module_1] [class_2] ||| [module_1] [class_2] operations quote	count=5
arg	queryset or any iterator ||| queryset	count=1
module	a geos ||| geos	count=1
class	case ||| case	count=1
class	database into ||| database	count=1
function	point of ||| point	count=1
function	rolls back ||| rollback	count=3
function	'day', returns the sql ||| sql	count=1
module	ring ||| gis geos	count=1
module	[module_1] by ||| [module_2] [module_1]	count=2
arg	a response to ||| response	count=1
function	in the ||| vary headers	count=1
function_arg	min_num [arg_2] ||| [arg_2] [function_1]	count=3
function	instance of ||| instance	count=1
function	resets ||| clean savepoints	count=1
function_arg	z with [arg_2] ||| [function_1] index [arg_2]	count=1
function	with the media prefix ||| get media prefix	count=1
function	m2m ||| m2m reverse	count=1
class	form at the given ||| base form	count=1
function	prefix settings ||| prefix	count=2
arg	[arg_1] target ||| [arg_2] [arg_1]	count=2
function	("app_label", ||| lazy model operation	count=1
function	[function] for ||| [function]	count=21
function	session model object ||| create model	count=2
arg	datasource object that owns ||| layer_ptr ds	count=1
arg	regex can ||| regex max_length min_length	count=1
function	coordinate ||| set coord	count=1
class	the field has ||| field	count=1
module_class	fields [class_2] ||| [module_1] [class_2]	count=2
module	model_label field_name" for fields ||| fields	count=1
function	generate a random ||| make random	count=1
function	the same format string ||| format html join	count=1
class	this queryset to ||| set	count=1
arg	with [arg] ||| [arg]	count=2
module	indicate the ||| contrib gis	count=1
arg	(without actually removing ||| sequences allow_cascade	count=1
class	the database ||| query	count=1
module	[module_1] with the ||| [module_2] gis [module_1]	count=2
class	sets the ||| http request	count=1
module	settings ||| templatetags	count=1
class	given a modelform ||| model admin	count=1
function	to find what language ||| language	count=1
module	this instance ||| models	count=1
class	of the tree ||| node	count=1
arg	found absolute path (or ||| path	count=1
function	add "value" ||| add	count=1
class	this model field ||| related field	count=1
module	results from applying ||| db	count=1
module	of fields to ||| db models sql	count=1
module	geometry and the ||| contrib gis geos	count=1
class	message and extra_tags ||| message	count=1
module	memory [module] ||| [module] gdal	count=1
module	initializes [module] on ||| [module]	count=1
class	set up ||| geo query set	count=2
module	from this ||| gis gdal	count=1
module	with the given ||| contrib gis db models	count=1
class	rfc 5322 formatted date ||| date	count=1
function	a base64 ||| base64	count=1
module	the correct mime ||| contrib	count=1
function_arg	[function_1] httpresponse ||| [arg_2] [function_1]	count=1
module	list of (column_name ||| db	count=2
module	that returns a ||| gis gdal prototypes	count=1
function	when all ||| lazy model	count=1
function	number of ||| format number	count=1
function_arg	error response [arg_2] ||| [function_1] [arg_2]	count=3
function	returns the short ||| get short	count=3
arg	time zone ||| timezone	count=3
arg	power [arg] evaluates the ||| bp [arg]	count=1
function	updates the [function_2] ||| [function_2] [function_1]	count=5
module	[module] updated ||| [module]	count=3
function	a geometry [function_2] ||| [function_1] [function_2]	count=2
function	return fields of ||| get fields	count=2
function_arg	[function_1] date object ||| [arg_2] [function_1]	count=6
arg	message to the ||| message	count=1
function	surface ||| on surface	count=1
class	password reset ||| password reset	count=1
class	[class_1] instances for ||| [class_2] [class_1]	count=2
function_arg	[function_1] update_pk is ||| [function_1] [arg_2]	count=1
function	comparison ||| converter	count=1
function	search form for ||| search form	count=1
arg	for the specified field ||| field	count=1
arg	the "vary" ||| response newheaders	count=1
function	file ||| compile	count=1
module	sqlite3 [module_2] ||| [module_2] [module_1]	count=1
module	the messages to a ||| contrib messages	count=1
function	related models (as ||| related	count=1
function	specified by http ||| http	count=2
function	operation ||| check dependency	count=1
function	the number of geometries ||| num	count=1
class	the object ||| object	count=1
function	lookup kwargs for filtering ||| lookup	count=1
function	files ||| all locale	count=1
function	[function] all ||| [function] leading	count=2
function	header ||| headers	count=1
module	default translation ||| utils translation	count=1
function_arg	[function_1] path with ||| [arg_2] [function_1]	count=2
module	prevents mysql from ||| mysql	count=1
arg	from key_salt and a ||| key_salt value	count=1
module	key ||| translation	count=1
function	'text', otherwise return none ||| like	count=1
module	custom [module] subclasses ||| contrib [module]	count=1
arg	response to ||| response	count=1
function	a search [function_2] ||| [function_1] [function_2]	count=2
module	does not end with ||| db models fields	count=1
function	same user ||| user	count=1
function_arg	search [arg_2] ||| [function_1] results request queryset [arg_2]	count=1
module	a dictionary of ||| db backends oracle	count=1
module	returns a geometry representing ||| gis	count=1
function	handle the raw ||| handle raw	count=1
function_arg	[function_1] the given ||| [arg_2] [function_1]	count=1
function	for changed [function_2] ||| [function_2] [function_1]	count=2
module	user-provides ||| utils translation	count=2
module	or project templates ||| core	count=1
arg	[arg_1] multipolygonfield while ||| [arg_1] [arg_2]	count=2
arg	path to a ||| path	count=1
function	through model map ||| generate through model map	count=1
module_class	returns a quoted [module_1] [class_2] ||| [module_1] [class_2]	count=5
function	[function_1] slice ||| [function_2] [function_1]	count=4
module	user ||| auth	count=8
function	[function_1] values ||| [function_2] [function_1]	count=4
module	a string for ||| utils	count=1
function	byte string [function] ' ||| [function]	count=1
arg	add delta ||| delta	count=1
arg	changes so they ||| changes graph migration_name	count=1
function	freshly rendered content for ||| rendered content	count=1
module	the context ||| template	count=1
arg	text ||| text opts	count=1
function	return ||| get connection	count=1
arg	name of ||| name	count=1
function	number of ("app_label", ||| lazy	count=1
function	factory function to create ||| create generic related	count=1
module	construct and return the ||| contrib gis	count=1
arg	httpresponse object ||| response	count=1
class	feed in the ||| syndication feed	count=1
module	the sense of the ||| utils	count=1
module	transaction ||| db backends	count=1
module	[module_1] the headers ||| [module_1] [module_2]	count=1
module	against django's auth ||| auth	count=1
arg	the specified app_label and ||| app_label	count=1
module	the dimension ||| contrib	count=1
arg	for functions ||| func argtypes errcheck cpl	count=1
module	of 'year', 'month' ||| db backends	count=1
module	for interoperability ||| utils	count=1
function	method this ||| html	count=1
function	returns the initial data ||| get initial	count=1
function	adds or updates ||| headers	count=1
function	been imported ||| operation	count=1
class	the year ||| date	count=1
arg	value in a ||| value	count=1
function	[function_1] key from ||| [function_2] [function_1]	count=3
function	function ||| model operation	count=1
function	a string value ||| value to string	count=1
module	the database ||| contrib admin	count=2
function	main help [function_2] ||| [function_2] [function_1]	count=1
class	the context ||| context	count=1
function	in a location returning ||| location	count=1
module	aggregate [module] ||| contrib gis [module]	count=2
module	object for this ||| contrib gis gdal	count=1
module	and returns a ||| backends base	count=1
arg	instance change is true ||| request form change	count=1
module	use ||| views generic	count=1
function	from installed ||| installed	count=1
function_arg	[function_1] lock ||| [arg_2] [function_1]	count=9
arg	when dimension changed ||| new_type	count=1
function	[function_1] name for ||| [function_1] [function_2]	count=1
function	points in the ||| num points	count=2
arg	to the given targets ||| targets plan state	count=1
module	the operation on ||| contrib gis	count=1
function	the freshly rendered ||| rendered	count=1
arg	start date of ||| date	count=4
arg	a response ||| response	count=1
function	ogr feature ||| feature	count=1
module	admin form and inlines ||| admin templatetags	count=1
class	utility for checking the ||| gislookup	count=1
arg	model class ||| model	count=1
module	the geoip ||| contrib gis geoip	count=1
module	via the addgeometrycolumn stored ||| contrib	count=1
class	relation ||| one to one descriptor	count=1
function	response using the ||| response	count=1
function	edited ||| edited	count=1
function	asset return an absolute ||| absolute	count=1
module	take the following inputs ||| contrib	count=1
function	get the y ||| get y	count=3
class	requests for configuration ||| settings	count=1
function	create a manager that ||| create	count=1
module	update depends on ||| models	count=1
class	[class_1] safe results ||| [class_2] [class_1]	count=4
function	returns the default value ||| get default	count=1
class	this form field ||| choice field	count=1
function	[function_1] an int ||| [function_1] [function_2]	count=1
class	a new [class] ||| [class]	count=3
arg	from [arg] connected receivers ||| [arg]	count=1
module	of app name of ||| db	count=1
arg	the given [arg_2] ||| [arg_2] [arg_1]	count=4
class	layer ||| layer	count=5
module_class	[module_1] layer ||| [class_2] [module_1]	count=9
function_arg	[function_1] [arg_2] ||| [function_1] extract sql lookup_type [arg_2]	count=3
function	a locale name (en_us) ||| to locale	count=1
module	pointer ||| contrib gis	count=1
function	mask ||| mask	count=1
function	an ipv6 ||| ipv6	count=1
module	when all the ||| apps	count=1
function	url [function_2] ||| [function_1] [function_2]	count=4
class	point either ||| point	count=1
function	subclasses to ||| handle	count=1
arg	following ||| srid spatial_index	count=1
function_arg	string [arg_2] ||| [function_1] result func [arg_2]	count=1
function	select certain ||| add select	count=1
function	otherwise uncaught exceptions ||| handle uncaught	count=1
module	week ||| utils	count=1
module	and column ||| db backends	count=1
function	login page ||| redirect to login	count=1
function	the sql string and ||| sql	count=4
function	performs any cleaning on ||| clean	count=1
class	numeric ||| date	count=1
class	execute ||| database creation	count=1
module	project ||| core	count=1
class	of database definitions ||| connection	count=1
class	the command ||| command	count=3
function	a queryset or ||| queryset	count=1
function	any trailing equal signs ||| urlsafe	count=1
arg	inline formsets and ||| formsets change	count=1
module	from this ||| gdal	count=1
function_arg	compile [arg_2] ||| [function_1] [arg_2]	count=3
module	the ||| utils translation	count=1
function_arg	projectstate object [arg_2] ||| [arg_2] [function_1]	count=1
function	string and then ||| html	count=1
class	exist in the database ||| database	count=1
function	an aware datetime object ||| datetime	count=1
arg	by data using the ||| data	count=1
arg	on assignment invalid values ||| value	count=1
function	depth-first order ||| flatten	count=1
arg	each directory in template_dirs ||| template_name template_dirs	count=1
module	of tuples [ directory ||| core management commands	count=1
arg	dict of key/value pairs ||| data timeout	count=1
function	key function to use ||| get key func	count=1
function	the start ||| start	count=1
class	appended if this form ||| form	count=1
module	[module_1] pointer ||| [module_2] [module_1]	count=2
function	templates are ||| template	count=1
function	to return fields ||| get fields	count=2
class	node and ||| node	count=1
class	spatial ||| base spatial	count=1
module	a list of ||| core	count=1
function	[function_1] key from ||| [function_1] [function_2]	count=3
class	from the cache ||| base cache	count=2
function	semi minor axis ||| semi minor	count=1
arg	is true if ||| request form	count=1
function	id [function_2] ||| [function_1] [function_2]	count=4
function	to return [function_2] ||| [function_2] [function_1]	count=9
function	from the passed ||| to	count=1
function	deferred fields ||| deferred fields	count=2
module	that the field is ||| contrib admin	count=1
arg	encoding [arg_2] ||| [arg_2] [arg_1]	count=4
module	the band's parent raster ||| raster	count=1
arg	a function that ||| result func	count=1
function_arg	[function_1] a queryset ||| [function_1] search results request [arg_2]	count=1
function	options [function_2] ||| [function_2] [function_1]	count=2
module	returns only the ||| contrib	count=1
function	a list or ||| list	count=1
module	on whether the ||| contrib staticfiles	count=1
module	on a content-type ||| contenttypes	count=1
class	the list of dates ||| base date list view	count=1
module	list of ||| models sql	count=1
module	dictionary mapping models ||| models sql	count=1
arg	the given form ||| form	count=2
module	either side of ||| db models fields	count=1
function	extracts the ||| extract	count=1
class	field has ||| bound field	count=1
module	the current ||| contrib	count=1
class	for backwards-compatibility ||| base	count=1
module	return an ||| contrib admin	count=1
function	construct a ||| construct	count=2
module	the opposite of ||| db	count=1
module	interoperability ||| utils	count=1
class	for forms ||| form mixin	count=1
class	return ||| model admin	count=6
class	takes an open cache ||| cache	count=1
function	and a number of ||| lazy model	count=1
function	that returns sets ||| as sets	count=1
module	or ||| core management	count=2
function	we have a valid ||| valid	count=1
function	type ogrgeomtype of ||| type	count=1
arg	in the given httpresponse ||| response	count=1
arg	non-relational ||| obj	count=1
function	or project templates are ||| template	count=1
function	languages in [function_2] ||| templatetags do [function_2] available [function_1]	count=1
function	the command class ||| command class	count=1
class	of the ||| date	count=3
class	list of form in ||| base form set	count=1
class	table ||| database introspection	count=1
function	content for ||| content	count=2
class	for ||| safe data	count=1
arg	decorator for functions ||| func	count=1
arg	the system ||| app_configs	count=1
class	reverse relation ||| reverse many to one	count=1
function	options have changed and ||| options	count=1
function	validate session key ||| session key	count=2
module	sequence containing the ||| contrib admin	count=1
class	day of the year ||| date format	count=1
class	be converted to ||| field	count=1
function	a model [function_2] ||| [function_2] [function_1]	count=2
module	the equivalent ||| contrib	count=1
function_arg	[function_1] string depending ||| [function_1] [arg_2]	count=1
function	[function_1] [function_2] that joins ||| [function_1] [function_2] info with	count=1
function	login ||| to login	count=1
arg	update_pk is ||| manager using fields update_pk	count=1
function	config [function_2] ||| [function_2] app [function_1]	count=4
arg	message to each ||| fail_silently	count=1
class	the form migration instance ||| migration	count=1
class	and decimal ||| decimal	count=1
class	the set ||| set	count=1
class	appended if this form ||| base form	count=1
module	of the relative path ||| contrib	count=1
function	on a single ||| make single	count=1
module	c geos geometry ||| geos prototypes	count=1
function_arg	[function_1] date ||| [function_1] [arg_2]	count=7
arg	user_obj from [arg_2] ||| [arg_1] [arg_2]	count=1
arg	using values from self ||| using	count=1
module	httpresponse object ||| utils	count=1
arg	reset [arg] based property ||| [arg]	count=1
function	transform a date ||| datefield	count=1
arg	secret (which ||| value secret	count=1
class	week numeric i e ||| format	count=1
class	new session instance ||| session	count=1
function	wkt representation ||| wkt	count=1
module	the opposite ||| db models	count=1
class	numeric i e '0' ||| date format	count=1
function	quote ||| quote	count=1
function	parse ||| parse apps	count=1
function	[function_1] the css ||| [function_2] [function_1]	count=6
arg	length and given allowed_chars ||| length allowed_chars	count=1
function	path from ||| path from	count=2
class	ogr [class] with ||| ogrgeom [class]	count=1
class	return a list ||| list	count=1
class	the database ||| base database wrapper	count=1
module	all ||| backends base	count=3
function	permission ||| permission	count=5
function	the given datetime ||| datetime	count=1
module	spatial ||| db backends base	count=1
module	true there will be ||| models sql	count=1
function	[function_1] [function_2] ||| [function_2] to [function_1]	count=3
module	is internal or the ||| contrib admindocs	count=1
function	by the admins ||| admins	count=1
arg	sender for ||| sender weak dispatch_uid	count=2
function	visible ||| visible	count=1
function	map generation ||| map	count=1
function	[function_1] etag return ||| [function_2] [function_1]	count=4
module	a ||| apps	count=2
module	the application label module ||| contrib	count=1
module_class	[module_1] the field ||| [module_1] [class_2]	count=4
arg	determines where the app ||| template subdir	count=1
arg	is ||| obj	count=15
module	the remoteuserbackend ||| contrib auth	count=1
function_arg	[function_1] [arg_2] at ||| [function_1] index [arg_2]	count=5
class	attribute on each element ||| geo query set	count=11
function	to create an object ||| create object from params	count=1
module	and a number ||| apps	count=1
function_arg	[function_1] [arg_2] ||| [function_1] geom [arg_2]	count=2
arg	form the ||| request	count=1
function	converter ||| converter	count=1
module	range of different return ||| models fields	count=1
function	[function_1] lists and ||| [function_2] [function_1]	count=1
function	a location returning ||| find location	count=1
arg	or updates the ||| response	count=1
module	oracle error code given ||| backends oracle	count=1
function	returns a dict ||| get connection	count=1
module	the ewkb ||| contrib	count=1
arg	full_plan ||| plan full_plan fake	count=1
function	etags given in an ||| etags	count=1
arg	instance finds ||| instance	count=1
class	the command ||| base command	count=1
module_class	and returns [class_2] ||| [class_2] [module_1]	count=2
arg	a gdal spatialreference ||| srs	count=1
module	template tag helpers ||| template	count=1
module	a ||| contrib	count=1
module	(if the return_geom keyword ||| contrib	count=1
module	stack of ||| template	count=1
module	using the ||| contrib	count=1
function	an integer ||| int	count=3
function	the html id for ||| id	count=1
arg	the add_item call ||| item	count=1
module	try to determine the ||| contrib	count=2
arg	to the request using ||| request level	count=1
module	[ directory file ||| management	count=1
class	this class ||| user settings holder	count=1
function	presented by this object ||| label from instance	count=1
module	customizing the number ||| contrib admin	count=2
function	of ("app_label", "modelname") tuples ||| model operation	count=1
arg	implemented a password_changed() method ||| user password_validators	count=1
arg	true) ||| offset	count=1
arg	value for use in ||| value	count=2
function	a cascaded [function_2] ||| [function_1] [function_2]	count=4
function	for all ||| all	count=1
function	joins ||| setup joins	count=1
function	migration dependency [function] using both ||| build [function]	count=1
class	the results ||| query	count=1
function	the given geometry field ||| geom	count=1
module	results from applying ||| models	count=1
module	mapping command ||| core management	count=1
module_class	to use [class_2] ||| [module_1] [class_2]	count=2
function	corresponding models have been ||| lazy model operation	count=1
function	ordering [function_2] ||| [function_1] [function_2]	count=2
class	returns the ||| safe data	count=1
module	of what the action ||| db migrations operations	count=1
module	the model ||| contrib gis utils	count=1
module	field and that the ||| contrib	count=1
function	signed cookie if the ||| signed cookie	count=1
function	extra [function_2] ||| [function_2] [function_1]	count=3
function	package ||| package	count=2
class	performs set [class_2] ||| [class_2] [class_1]	count=4
arg	a datatuple of ||| datatuple	count=1
function	in ||| headers	count=1
function	[function] saved ||| clear [function]	count=2
function_arg	[function_1] start date ||| [function_1] next month [arg_2]	count=1
function	save this form's ||| save	count=1
module	routine for checking the ||| contrib gis geoip2	count=1
module	with this ||| sessions backends	count=1
module	band's parent raster ||| raster	count=1
class	oftdatetime field ||| oftdate time	count=1
function	table [function_2] ||| [function_2] [function_1]	count=3
function	envelope by ||| envelope	count=1
class	of the file ||| clearable file	count=1
function	stats functions sqlite supports ||| supports	count=1
arg	given a modelform return ||| request form	count=1
arg	from_email recipient_list), ||| auth_user auth_password	count=1
function	extent3d ||| extent3d	count=1
function_arg	[function_1] httpresponse expires ||| [arg_2] [function_1]	count=1
function	[function_1] placeholder for ||| [function_1] [function_2]	count=1
class	files ||| files	count=1
module	[module_1] the current ||| [module_2] [module_1]	count=1
arg	friendly ||| args os_err_exc_type stdout_encoding	count=1
function	true ||| save form	count=2
arg	the arg a ||| arg	count=1
class	from [class] ||| base [class]	count=1
function	given a modelform return ||| save	count=1
class	i ||| date	count=3
module	of ||| apps	count=1
module	geometry from the coordinate ||| contrib	count=1
function	makes alter type ||| alter column type sql	count=1
function	day to second literal ||| date	count=1
class	yield this expression and ||| base expression	count=1
class	'0' to ||| format	count=1
module	[module_1] pointer ||| [module_1] [module_2]	count=11
class	a template ||| template response	count=1
function	naive ||| naive	count=1
function	and a number of ||| operation	count=1
function_arg	return the [arg_2] ||| [arg_2] [function_1]	count=9
class	config from an ||| config	count=1
module	the name ||| contrib	count=1
class	new ||| upload handler	count=1
function	django ||| django	count=2
arg	[arg] connected ||| [arg]	count=1
arg	deeper for ||| restricted requested load_fields	count=1
module	returns ||| gis geos prototypes	count=1
function	[function_1] lists and ||| [function_1] [function_2]	count=1
arg	ctypes function ||| func argtypes errcheck strarg	count=1
function	the next interval ||| next week	count=1
class	from the cache ||| cache	count=2
function	has any ||| has module	count=1
module	backends require special syntax ||| backends base	count=1
arg	[arg_1] from_email recipient_list), ||| [arg_2] [arg_1]	count=1
module	the __html__ ||| utils	count=1
module	[module_1] of the ||| [module_1] [module_2]	count=1
class	[class_1] or datetime ||| [class_1] [class_2] check fix default	count=2
module	list of ||| core management commands	count=1
arg	fields ||| fields label	count=1
class	resets the ||| base	count=1
module	if the ||| contrib admin	count=1
function	return a dictionary ||| get	count=2
function	from [function_2] ||| [function_1] [function_2]	count=1
function	po file ||| write po file	count=2
function	tuples ||| lazy model operation	count=1
function	postgis version number ||| postgis version	count=2
module	recursively yield template ||| template	count=1
class	on the command line ||| label command	count=1
module	of database ||| db	count=1
class	by this hasher ||| hasher	count=1
module	a list of tuples ||| core management	count=1
class	the ||| day archive view	count=1
function	sql statements ||| sql	count=3
class	field ||| spatial field	count=1
arg	message to [arg_2] ||| [arg_2] level [arg_1] extra_tags	count=1
class	all the corresponding models ||| apps	count=1
class	migrations ||| migration loader	count=1
function	[function_1] save this ||| [function_2] [function_1]	count=6
class	connection was explicitly ||| base database wrapper	count=1
class	applying this ||| query	count=1
function	from a bounding ||| from	count=2
function_arg	[function_1] a source ||| [arg_2] [function_1]	count=1
function	the name of ||| name	count=2
module	translation ||| translation	count=3
function	should be ||| reduce	count=1
function	in ||| vary headers	count=2
function	[function_1] stddev as ||| [function_1] [function_2]	count=3
arg	if connection_reset is true, ||| connection_reset	count=1
function_arg	[function_1] validationerror containing ||| [function_1] [arg_2]	count=1
class	for ||| http response base	count=2
arg	name with ||| name	count=1
function	[function_1] formset ||| [function_1] [function_2]	count=1
module	used when initializing the ||| contrib	count=1
module	the week numeric i ||| utils	count=1
arg	loaded in the instance ||| instance	count=1
module	given ||| auth	count=2
class	the database ||| query set	count=1
function	storage [function_2] ||| [function_1] [function_2]	count=4
function	to a python ||| to	count=1
function	field type name as ||| field type	count=1
module	key ||| utils translation	count=2
function	bridge the runtime ||| runtime	count=1
function	"modelname") ||| lazy model	count=1
class	'0' sunday to ||| date format	count=1
module	[module] geo_format attribute ||| [module] gis	count=1
function	intersection of ||| intersection	count=1
function_arg	[function_1] a string ||| [arg_2] [function_1]	count=1
class	cookie if ||| cookie	count=1
function_arg	[function_1] update_pk ||| [function_1] [arg_2]	count=1
module	item being files ||| core files	count=1
function	creation [function_2] ||| [function_1] [function_2]	count=1
function	number of ||| operation	count=1
function	solve the ||| solve lookup	count=1
function	truncates the given datetime ||| datetime	count=1
function	[function] year ||| [function] year	count=1
arg	func ||| func using	count=1
function	[function_1] names that ||| [function_2] [function_1]	count=4
arg	sequence comprising the ||| table_name constraints column_to_field_name	count=1
function	the corresponding ||| lazy model	count=1
function	[function_1] text ||| [function_1] [function_2]	count=4
class	queryset ||| query set	count=10
module	object from this ||| contrib gis gdal	count=1
module	number of ||| apps	count=1
arg	[arg_1] allowed_chars ||| [arg_2] [arg_1]	count=2
module	on ||| db models	count=4
function	permission_denied_message attribute ||| permission denied message	count=1
function	[function_1] name for ||| [function_2] [function_1]	count=1
class	files called from collectstatic ||| files mixin	count=1
module	queryset to the ||| db models	count=1
class	django ||| base database introspection	count=1
arg	the "vary" ||| newheaders	count=1
module	of class import ||| db	count=1
class	results ||| query	count=1
function	placeholder sql and ||| assemble as sql	count=1
module	srid of the ||| contrib gis db	count=2
arg	"vary" header ||| response newheaders	count=1
module	the field ||| contrib admin	count=1
function	to the migrations ||| migrations	count=1
arg	reads or ||| offset size shape	count=1
function	to go after the ||| get	count=1
function	extent for the extent3d ||| extent3d	count=1
function	we have a valid ||| is valid	count=1
function	session key ||| key	count=1
function	[function_1] response the ||| [function_2] [function_1]	count=4
module	tables and views that ||| backends	count=1
function	given feature ||| make feature	count=1
function_arg	the template name ||| find template name	count=1
class	variables not in ||| holder	count=1
function	for all key columns ||| key columns	count=3
function	column data type ||| db type	count=1
class	return ||| connection router	count=1
function	test db ||| destroy test db	count=2
arg	given value contains no ||| value	count=1
function	header in ||| patch vary headers	count=1
class	a transaction and ||| database	count=1
arg	determines where ||| subdir	count=1
function_arg	connect [arg_2] ||| [arg_2] [function_1]	count=4
arg	too ||| force_insert force_update using	count=1
class	true if the form ||| form	count=1
module	this ||| gdal	count=27
module_class	[module_1] file ||| [module_1] [class_2]	count=4
function	sets the spatial reference ||| srs	count=1
function	the value to ||| value	count=1
function	the value for ||| value	count=1
function	coordinate sequence for ||| cs	count=1
function	adds and [function_2] ||| [function_2] [function_1]	count=1
function	by http rfc7231 ||| http	count=1
function	context if either ||| context data	count=1
arg	classes leading to model ||| model	count=1
function	the corresponding ||| lazy model operation	count=1
class	passed into this ||| query set	count=1
module	returns true if this ||| contrib gis db models	count=1
function	related field's [function_2] ||| [function_1] [function_2]	count=4
class	target storage ||| storage	count=2
function	dictionary of keyword arguments ||| kwargs	count=1
function	a perimeter ||| perimeter	count=1
module	by the css ||| contrib	count=1
class	for this model field ||| related field	count=1
class	active language ||| locale	count=1
class	this ||| settings	count=1
class	this class are ||| holder	count=1
arg	set a value in ||| value timeout	count=1
module	in pixels ||| raster	count=2
function	of ||| get	count=1
function	correct type ||| type	count=1
class	deletes ||| schema editor	count=1
module	this ||| contrib gis db backends base	count=1
function_arg	update lock ||| update nowait skip_locked	count=1
arg	should respect that ordering ||| db_field request	count=1
module	and ||| gis db backends	count=3
module	returns a dictionary of ||| db	count=1
function	a projectstate object representing ||| project	count=1
function	linear ||| linear	count=1
module	of the name ||| models fields	count=1
function	flush method ||| flush	count=1
module	[module_1] the template ||| [module_1] [module_2]	count=4
arg	[arg_1] code ||| [arg_2] [arg_1]	count=2
function	be deferred [function] ||| [function] loaded field	count=3
arg	given a modelform ||| request form	count=1
class	mapping information and model ||| mapping	count=1
arg	"target" ||| target	count=1
function_arg	file [arg_2] ||| [arg_2] [function_1]	count=1
module	list of ||| db backends mysql	count=1
function	interval day ||| date interval	count=1
class	model instance the ||| model	count=2
module	rows with invalid foreign ||| db backends mysql	count=1
class	applying this queryset to ||| query	count=1
module	backends can implement ||| backends base	count=2
module	in the css selector ||| contrib admin	count=2
function	[function_1] [function_2] ||| [function_1] redirect [function_2]	count=1
module	[module_1] identifier ||| [module_1] [module_2]	count=2
function_arg	text [arg_2] ||| [arg_2] [function_1]	count=1
function	on save ||| on save	count=2
module	of any ||| gis	count=1
function	settings_dict (a ||| db signature	count=1
function	returns the union ||| or	count=1
arg	given cursor ||| cursor sql	count=1
arg	keys from the ||| keys version	count=1
function	to override uncaught exception ||| uncaught exception	count=1
module_class	raster corresponds to ||| raster gdalraster	count=1
class	[class] queries! ||| [class]	count=3
function_arg	search and [arg_2] ||| [arg_2] [function_1]	count=2
function	http rfc7231 section ||| http	count=1
function	[function_1] include the ||| [function_2] [function_1]	count=1
module	true if the ||| contrib gis	count=2
function	joins from the start ||| start	count=1
class	field's ||| field	count=2
arg	two ||| other	count=3
class	[ ||| command	count=1
function_arg	[function_1] files ||| [arg_2] [function_1]	count=1
function	and adds ||| add	count=1
module	all the installed ||| contrib	count=1
module	initializes [module] on either ||| [module]	count=1
arg	to the given targets ||| targets plan state fake	count=1
module	its ||| template	count=1
function	url in debug ||| url	count=2
function_arg	[function_1] [arg_2] ||| [function_1] app_configs [arg_2]	count=1
function	objects of ||| objects	count=1
module	for rows with ||| db backends mysql	count=1
function	[function] information about ||| sequence [function]	count=3
module	of (column_name referenced_table_name referenced_column_name) ||| db backends	count=2
class	a node ||| node	count=1
function	and lookup ||| lookup	count=1
function	we only select certain ||| select	count=1
module	an unsaved instance ||| contrib	count=1
function	the url ||| url	count=1
module_class	[module_1] email ||| [module_1] [class_2]	count=2
function	a kml ||| kml	count=1
module	for custom [module] ||| contrib [module]	count=1
function	and adds its information ||| add	count=1
function	take ||| operation	count=1
module	returns true if ||| models	count=1
function	set of the names ||| names	count=1
class	compiled regular expression based ||| regex descriptor	count=1
module	from views ||| sqlite3	count=1
function	number of tables ||| tables	count=1
function	choices for ||| choices	count=2
class	of fieldset[1]['fields'] for ||| base model	count=1
module	of the ||| db models	count=3
class	and ||| wrapper	count=1
class	saves ||| form set	count=2
arg	transform a model from ||| model	count=1
class	has choices defined ||| model admin	count=1
class	we clear ||| store	count=1
function	[function] bytesio ||| receive [function]	count=2
function	[function] subcommand printing ||| [function]	count=2
class	possible ||| user	count=1
function	matches any pattern ||| matches	count=1
function	interpolated ||| readable field	count=1
module	but with ||| backends	count=1
arg	value for ||| value	count=2
module	whether to return the ||| contrib gis	count=1
module	model instances based on ||| db models	count=1
arg	[arg] of ||| srs [arg]	count=3
class	we clear the session ||| session store	count=1
function_arg	[function_1] year ||| [arg_2] [function_1]	count=2
class	template rendered with the ||| template	count=1
function	returns an ordereddict of ||| get	count=1
function	return a new instance ||| instance	count=1
function	"modelname") ||| model operation	count=1
module	they ||| migrations	count=1
module	serving handler wrapping the ||| contrib	count=1
module	[module_1] migrations ||| [module_1] [module_2]	count=8
arg	related instance through the ||| instance	count=2
class	session is set ||| session base	count=1
function	imported ||| model operation	count=1
function	or ||| headers	count=1
function	given field [function_2] ||| [function_2] [function_1]	count=3
module	is true ||| contrib admin	count=1
function	the week for which ||| week	count=1
module	of date objects representing ||| models	count=1
function	data to ||| data	count=1
class	for backwards-compatibility several types ||| base	count=1
function	max [function_2] ||| [function_1] [function_2]	count=3
class	load the objects ||| nested objects	count=1
module	urlconf ||| generic	count=1
function	untranslated verbose [function_2] ||| [function_2] [function_1]	count=4
module	(for example if the ||| contrib	count=1
function	of fields [function_2] ||| models sql query clear [function_2] [function_1]	count=1
module	or the integer ||| contrib gis	count=1
class	of all ||| base	count=3
function	to select ||| select	count=2
function	"modelname") ||| model	count=1
function	that aren't hidden ||| visible	count=1
module	to the ||| db	count=1
arg	changes dict ||| changes	count=1
function_arg	it matches [arg_2] ||| [arg_2] [function_1]	count=1
function	or updates the ||| headers	count=1
arg	value is ||| value arg	count=2
function	help ||| help	count=2
module	for checking the ||| contrib	count=2
module	app or ||| management	count=1
arg	error code ||| result func cargs cpl	count=1
module	the given kwargs ||| contrib	count=1
function	serialization -- open ||| serialization	count=1
module	[module] feature ||| [module]	count=1
module	queryset to ||| db	count=1
class	or project templates ||| template	count=1
function	a name ||| name	count=1
module	returns ||| models	count=1
function	related model to this ||| reverse	count=1
class	for each choice ||| bound	count=1
function	warn if url ||| check url	count=1
module	set on the ||| contrib	count=1
arg	encoding to outfile which ||| outfile encoding	count=1
function	is t*f**f*** ||| within	count=1
function_arg	all related [arg_2] ||| [arg_2] [function_1]	count=1
module_class	yields [module_1] [class_2] should be rendered ||| [module_1] [class_2]	count=1
module	of dictionaries ||| template	count=1
module	of the messages ||| contrib messages storage	count=2
function_arg	[function_1] direct relationship ||| [arg_2] [function_1]	count=3
function	as migration ||| write migration	count=2
function	value for the ||| value	count=2
arg	each field on ||| obj field	count=1
module	of the year ||| utils	count=1
module_class	present usually 2 but [module_1] [class_2] opening other pop-ups ||| [module_1] [class_2]	count=2
class	class ||| holder	count=1
function	a random password with ||| random password	count=1
function	the same format string ||| format html	count=1
arg	request [arg_2] ||| [arg_2] [arg_1]	count=1
module	within the ||| contrib	count=1
arg	setting ||| subject	count=2
module	into a dictionary ||| db backends	count=1
class	dictionaries in the context ||| context	count=1
class	removes ||| schema editor	count=2
function	been imported and ||| operation	count=1
arg	[arg_1] mimetype ||| [arg_1] [arg_2]	count=4
function	lookups by key ||| get	count=1
module	of datetime ||| db models	count=1
function	of radio_fields dictionary ||| radio fields	count=1
class	variables ||| holder	count=1
class	settings ||| connection	count=1
function	project templates are ||| handle	count=1
arg	a model ||| model	count=8
arg	the given cursor with ||| cursor sql	count=1
module	may take the following ||| contrib gis	count=1
function	header in the ||| vary	count=1
function	a hash [function_2] ||| [function_2] [function_1]	count=4
function	to the login ||| login	count=1
class	through the reverse relation ||| reverse one to one	count=1
function	return the version of ||| version	count=1
module	of ||| db migrations operations	count=1
function	as a tuple ||| tuple	count=1
arg	ctypes [arg_2] ||| [arg_2] [arg_1]	count=6
module	tuples [ directory ||| management	count=1
module	corresponding models have ||| apps	count=1
module	a user ||| auth	count=1
module_class	[module_1] table index ||| [module_1] [class_2] operations quote	count=2
arg	an unsaved instance ||| form	count=1
arg	doesn't contain ||| obj	count=1
module	to all models when ||| models	count=1
module	on whether the ||| contrib	count=2
function	and [function] the template ||| [function]	count=1
function	parse a list of ||| parse	count=1
module	methods ||| cache	count=1
module	user-provides languages ||| translation	count=1
module	file ||| core management	count=1
module	template tag ||| template	count=2
function	[function_1] quantifier ||| [function_2] [function_1]	count=2
module	for stddev and related ||| db backends sqlite3	count=1
class	of fieldset[1]['fields'] for ||| base	count=1
function	backwards ||| unapply	count=1
function	or ||| template	count=1
function	this ||| safe	count=1
function	of defer only the ||| only	count=1
arg	run the query against ||| result_type chunked_fetch	count=1
function	[function_1] key for ||| [function_2] [function_1]	count=2
function	the value from the ||| get	count=1
function	not in this class ||| init	count=1
arg	we've pushed back ||| num_bytes	count=1
function	in the ||| headers	count=1
function	return ||| get test	count=1
class	permissions in ||| permissions	count=1
function_arg	[function_1] date of ||| [function_1] next year [arg_2]	count=1
module	returns none ||| gis db	count=1
class	utility for ||| gislookup	count=1
arg	a form ||| request	count=1
function	[function_1] size ||| [function_2] [function_1]	count=2
function	the corresponding models ||| model operation	count=1
function	or 'second', ||| trunc	count=2
module	app or project ||| core	count=1
class	session ||| base session	count=1
function	from ||| get	count=4
function	the purposes of comparison ||| converter	count=1
module	that will be ||| db models	count=1
module	[module_1] the template ||| [module_2] [module_1]	count=4
function	except ignored_params ||| filters	count=1
function	add ||| add	count=7
module	of tuples ||| core management	count=1
module_class	[module_1] band ||| [class_2] [module_1]	count=1
arg	a more explanatory message ||| original_exc model	count=1
class	using [class] ||| [class] time	count=1
function	[function_1] type name ||| [function_2] [function_1]	count=7
arg	templatedoesnotexist ||| exc backend	count=1
function	to add ||| add to	count=1
function	number of dimensions for ||| len	count=1
function	[function_1] ipv6 ||| [function_2] [function_1]	count=5
module	of ||| gdal	count=6
class	asserts ||| selenium test case	count=1
function_arg	list_max_show_all [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	[function_1] [arg_2] of ||| [function_1] srs [arg_2]	count=3
class	are satisfied ||| settings holder	count=1
class	satisfied ||| user settings holder	count=2
module	the oracle error code ||| oracle	count=1
function	return the default srid ||| get	count=1
function	to a slice ||| slice	count=1
module	and view names in ||| backends	count=3
function	the given httpresponse ||| headers	count=1
class	settings ||| connection handler	count=2
function	number of points in ||| point count	count=1
function	by ||| by	count=2
function	adds data to the ||| add	count=1
function	token is ||| token	count=1
arg	checking the given ||| opts	count=1
module	of ("app_label", ||| apps	count=1
arg	changes so ||| changes graph migration_name	count=1
function_arg	the object [arg_2] ||| [function_1] [arg_2]	count=1
function	to add an object ||| add	count=1
function	of paths to user-provides ||| all locale paths	count=1
module	passed into this ||| db models	count=1
class	to this command ||| command	count=1
function	translate the ||| translate	count=1
class	to the stack ||| context	count=1
function	of annotations that ||| annotation	count=1
arg	and ||| cls	count=1
arg	of fields ||| fields label	count=1
module_class	[module_1] upload ||| [module_1] files file [class_2] handler	count=1
function	cleans an ipv6 ||| clean ipv6	count=3
class	session store ||| session	count=1
function	is ||| to	count=2
function	true ||| make	count=1
function	type name ||| type	count=1
module_class	[module_1] layer ||| [module_1] [class_2]	count=12
function	[function_1] and ||| [function_1] [function_2]	count=1
function	the sql version of ||| sql	count=1
arg	with the given context ||| context	count=1
class	e '0' ||| format	count=2
class	the migration ||| migration	count=1
module	operation ||| migrations operations	count=2
module	of fields ||| models	count=1
function	n-th clone of ||| db clone	count=1
function_arg	[function_1] instance through ||| [arg_2] [function_1]	count=2
module	oracle error code given ||| oracle	count=1
function	fields to [function_2] ||| models sql query clear [function_2] [function_1]	count=1
module	all ||| db backends base	count=2
class	config ||| config	count=1
module	sunday to ||| utils	count=1
function	being exempt from ||| exempt	count=1
function	a not null field ||| ask not null	count=2
arg	the paths ||| paths	count=1
arg	a given language ||| language	count=1
arg	string adding back ||| s	count=1
module	end with ||| db models fields	count=1
module	the queryset ||| models	count=1
module	the view should be ||| views generic	count=1
function	the __html__ method ||| safe	count=1
module	spatial ||| backends base	count=1
class	connection was explicitly ||| database wrapper	count=1
module	for stddev and related ||| backends	count=1
arg	[arg_1] from sender ||| [arg_2] [arg_1]	count=1
class	not in this class ||| settings holder	count=1
arg	x [arg_2] ||| [arg_2] [arg_1]	count=2
function	specified in the widget ||| widget	count=1
class	connection to the email ||| email	count=2
function	shortcut for the ||| lazystr	count=1
module_class	form sql [class_2] ||| [module_1] [class_2]	count=1
function	mask of annotations that ||| annotation mask	count=1
function	is a way of ||| is	count=1
function	the content for the ||| content	count=1
class	the [class] or ||| [class]	count=1
module	[module] geo_format ||| [module] gis	count=1
module	the set of points ||| contrib gis	count=1
module_class	for this spatial ||| gdal spatial	count=4
module	[module_1] value and ||| [module_1] [module_2]	count=1
function	[function_1] difference ||| [function_1] [function_2]	count=4
function	return an ||| get template	count=1
class	hasher ||| base password hasher	count=1
function	edited object represented by ||| get edited object	count=1
function	or db column name [function_1] [function_2] ||| [function_1] [function_2]	count=4
function	of etags given ||| etags	count=1
module	you're testing migrations ||| db migrations	count=1
module	polygon ||| contrib gis geos	count=1
function	[function_1] reset sequences ||| [function_2] [function_1]	count=2
arg	defines the ||| klass	count=1
function	for *every* page in ||| each	count=1
arg	using a localizable format ||| format use_l10n	count=1
function_arg	link [arg_2] ||| [function_1] [arg_2]	count=1
module	or project templates are ||| core management	count=1
function	displays a search form ||| search form	count=1
module_class	[module_1] [class_2] ||| [module_1] sites [class_2]	count=1
function	filter ||| filter	count=2
arg	variables ||| request	count=2
function	email to ||| email	count=1
module	complete log the user ||| contrib auth	count=1
function_arg	key [arg_2] ||| [function_1] [arg_2]	count=2
arg	for the given field_name ||| field_name	count=2
function	time [function] saved or ||| clear [function]	count=1
function	all key columns ||| key columns	count=6
class	a ||| field	count=1
function	the number of ||| num	count=1
function	set or unset ||| set	count=1
module	with ||| gis db backends	count=1
module	returns a ||| gis db	count=2
function	a key of ||| key	count=2
class	returns the feed in ||| syndication feed	count=1
function	test settings are available ||| test settings	count=1
function	will return [function_2] ||| [function_1] [function_2]	count=4
function	interpolated ||| readable	count=1
module	not free the ||| contrib gis	count=1
function	the freshly rendered content ||| rendered content	count=1
arg	year ||| year year_format month month_format	count=1
arg	no srid ||| srid	count=1
class	return an ||| admin	count=1
arg	the app ||| template	count=1
class	results from applying this ||| set	count=1
module	view ||| views	count=6
function	the extra forms in ||| extra forms	count=1
module_class	in this feature ||| gdal feature	count=1
arg	the exception should ||| exception	count=1
function	[function_1] set the ||| [function_2] time zone [function_1]	count=2
function	corresponding models ||| operation	count=1
module	[module] not be ||| [module] gis gdal	count=1
module	_meta fields instance ||| models fields	count=1
function	tables in this ||| tables	count=1
arg	valid language-code found ||| strict	count=1
class	not bound or ||| bound	count=1
module	the ||| db backends	count=1
module	with [module_2] ||| [module_1] [module_2]	count=8
function	into a single expression ||| expression	count=1
module	this property tests the ||| contrib	count=1
function	an object [function_2] ||| [function_2] [function_1]	count=2
class	of this [class] (e ||| [class]	count=1
function	a tuple version of ||| tuple	count=1
class	django model ||| model admin	count=2
function	updates the unget ||| update unget	count=2
arg	a value to ||| value	count=1
function	since the user ||| since	count=1
module_class	raster corresponds ||| raster gdalraster	count=1
function	[function_1] set ||| [function_2] [function_1]	count=6
function	[function_1] around popen ||| [function_2] [function_1]	count=2
function	[function_1] file with ||| [function_2] [function_1]	count=4
arg	choice's ||| choice	count=1
function	tries to create an ||| create	count=1
module_class	[module_1] and decimal ||| [module_1] [class_2]	count=2
arg	mapped ||| feat	count=1
module	and registered ||| apps	count=1
function_arg	sql clause [arg_2] ||| [arg_2] [function_1]	count=3
arg	databases is an optional ||| databases	count=1
arg	an index on ||| index	count=1
module	override [module_2] ||| [module_2] [module_1]	count=1
function	a value ||| value	count=1
function	byte string [function] ||| [function]	count=1
function	formset form ||| form	count=1
function	returns a dict ||| to dict	count=1
function	an ||| save form	count=2
function	a quoted ||| quote	count=1
class	day of the ||| date format	count=3
function_arg	[function_1] the model ||| [arg_2] [function_1]	count=2
function	in the ||| get	count=1
arg	filename content mimetype triple ||| filename content mimetype	count=1
module	applying this ||| db models	count=1
module	changelist ||| admin	count=2
arg	key ||| key	count=4
module	saves the ||| contrib	count=1
function_arg	[function_1] wherenode ||| [arg_2] [function_1]	count=1
arg	an ||| model	count=1
function	size of ||| size	count=2
class	applying this ||| set	count=1
function_arg	[function_1] request displays ||| [function_1] [arg_2]	count=3
function	[function_1] database type ||| [function_1] [function_2]	count=1
function	handle them before searching ||| handle	count=1
function	response as kml ||| kml	count=1
class	the form at the ||| form	count=1
function	get the [function_2] ||| [function_1] object [function_2]	count=4
function	checks [function_2] ||| [function_1] [function_2]	count=2
arg	check one item ||| obj model item	count=1
arg	content mimetype triple into ||| content mimetype	count=1
arg	[arg] connector ||| [arg] conn_type	count=2
function	dangling connection ||| temporary connection	count=1
class	order ||| set	count=2
function	maximum field widths ||| field widths	count=1
function	[function_1] savepoint only ||| [function_2] [function_1]	count=4
arg	httpresponse expires and ||| response cache_timeout	count=1
function	[function_1] response ||| [function_2] [function_1]	count=4
function	name is valid i ||| name	count=1
module	week numeric i e ||| utils	count=1
arg	[arg_1] too ||| [arg_2] [arg_1]	count=2
module_class	for this geometry ||| geos geosgeometry	count=1
function	m2ms to ||| many to many	count=1
function	as [function] version ||| spatialite version [function]	count=1
module	file ] ||| management commands	count=1
function	allowed to [function_2] ||| [function_1] [function_2]	count=4
function	pot file with the ||| pot file	count=1
module	template and function ||| db backends	count=1
arg	string ||| s	count=2
class	optional dictionary of database ||| connection	count=1
class	not in this class ||| user	count=1
arg	given ||| name	count=1
function	the form class to ||| get form class	count=2
class	is an optional dictionary ||| connection handler	count=1
module	layers within the ||| contrib gis	count=1
module	of values generate placeholder ||| models sql	count=1
module	unsaved ||| contrib	count=1
class	spatial column [class_2] ||| [class_2] [class_1]	count=2
function	valid redirect to the ||| form valid	count=1
function	default value for ||| default	count=1
class	from the module ||| holder	count=1
module	instances based on the ||| db models	count=1
function	model ||| remake table	count=1
function	none " choice ||| choice	count=1
module	mapping models to ||| models sql	count=1
arg	messages ||| messages	count=2
function	[function] spatial ||| [function] prep	count=2
function	in the first linestring ||| num	count=1
class	the target storage ||| storage	count=2
function	the alias [function] ||| [function]	count=3
class	this form field ||| model choice field	count=1
function	signal receiver which updates ||| update	count=1
module	directory ||| core	count=1
arg	the specified app_label ||| app_label	count=1
function	[function_1] main ||| [function_2] [function_1]	count=1
function	admin log ||| admin log	count=2
class	the cache ||| base cache	count=5
function	all the corresponding models ||| lazy model	count=1
module	methods [module_2] ||| [module_1] [module_2]	count=3
arg	creates ||| autoclobber	count=1
class	to the database ||| base database wrapper	count=1
class	coerced ||| typed multiple choice	count=1
class	for each ||| bound	count=1
function	app ||| template	count=1
module	returns none because ||| gis db backends	count=1
function_arg	[function_1] name ||| [arg_2] [function_1]	count=9
function	the po ||| po	count=1
class	may be ||| field	count=1
function	from the given date ||| date	count=1
module_class	in this geometry ||| gis gdal geometry	count=2
function	language the user wants ||| language from	count=1
function	field lists ||| field lists	count=2
arg	two geometries is ||| other	count=3
module	to override the ||| contrib auth	count=2
function	of the javascript i18n ||| javascript	count=1
function	of ||| db	count=1
arg	decorator that defines the ||| klass	count=1
arg	checking on routines ||| result func cargs	count=1
arg	item of fields or ||| fields label	count=1
function	be allowed to ||| allow	count=1
module	for rows with invalid ||| db backends	count=1
function_arg	[function_1] given encoding ||| [arg_2] [function_1]	count=1
class	of ||| context	count=1
class	on the command line ||| command	count=2
arg	fields or an item ||| fields	count=1
module	imported and ||| apps	count=1
arg	clause to lock rows ||| nowait skip_locked	count=1
class	not in ||| settings holder	count=1
class	raw [class_2] ||| [class_2] [class_1]	count=1
module	user-provides languages ||| utils translation	count=1
arg	downloaded it? header ||| header mtime size	count=2
function	link ||| link	count=1
function	(that [function] ||| [function]	count=1
function	a technical 404 error ||| technical 404	count=1
function_arg	datetime date [arg_2] ||| [function_1] [arg_2]	count=2
class	response ||| simple template response	count=1
module	of an identifier ||| db backends postgresql	count=1
class	or project templates ||| command	count=1
function	[function_1] fields for ||| [function_1] [function_2]	count=5
module	set on the ||| contrib sessions backends	count=1
function	query ||| query	count=2
function	if ||| close	count=1
function	a dict ||| to dict	count=1
class	foreignkey or has ||| base model admin	count=1
arg	leading to model ||| model	count=1
function	if field ||| field	count=1
function	of all known related ||| merge known related	count=1
function	the prepopulated fields for ||| prepopulated fields	count=1
arg	connector is given the ||| connector	count=1
class	get ||| week mixin	count=1
module	and column names ||| db backends	count=1
module	the oracle error code ||| db backends oracle	count=1
function	the area ||| area	count=1
function	pk ||| pk	count=1
class	(structured ||| connection	count=1
module_class	[module_1] site object ||| [module_1] [class_2]	count=1
arg	is an integer ||| obj	count=4
class	number of ("app_label", "modelname") ||| apps	count=1
class	variables not in ||| user	count=1
class	log [class_2] ||| [class_2] [class_1]	count=2
module	output in [module_2] ||| [module_2] [module_1]	count=2
function	the select_related() part ||| select related	count=1
module	the wkt ||| contrib	count=1
module	further ||| utils translation	count=1
module	the wkt of ||| contrib	count=1
arg	data represented by data ||| data	count=1
function	log ||| log	count=5
arg	httpresponse expires ||| response cache_timeout	count=1
class	to the ||| context	count=1
class	zeros i ||| date format	count=1
module	file ] ||| core	count=1
function	format [function_2] ||| [function_2] [function_1]	count=5
function	the sql that extracts ||| datetime extract sql	count=1
function	[function_1] history as ||| [function_1] [function_2]	count=3
module	the user is a ||| contrib	count=1
function	set a ||| set	count=1
module	are sensitive [module] ||| [module]	count=1
class	[class] to ||| [class] reset	count=1
function	package ||| get package	count=1
module	optional ||| db	count=1
arg	the given ||| name	count=1
module	[ ||| management	count=1
function	hash of the ||| hash	count=1
function	and when ||| model operation	count=1
function	path from this field ||| path info	count=1
arg	path to ||| path	count=2
module	applying ||| db models	count=2
class	modelform return an unsaved ||| model admin	count=1
function	which updates the ||| update	count=1
function	validates the given ||| validate	count=1
function	the prepopulated fields ||| prepopulated fields	count=2
function	alters m2ms to ||| alter many to many	count=1
arg	if we've pushed back ||| num_bytes	count=1
function	ensure all lazy ||| check lazy	count=1
module	module specified in ||| conf	count=1
module_class	view [class_2] ||| [module_1] [class_2]	count=2
function	select certain [function_2] ||| [function_1] [function_2]	count=4
module_class	[module_1] session data ||| [module_1] [class_2]	count=3
class	model instance for the ||| base model form	count=1
function	the total size in ||| size	count=1
module_class	view [class_2] ||| [module_1] generic [class_2]	count=2
function	[function_1] media file ||| [function_2] [function_1]	count=2
arg	is a unique ||| obj	count=1
class	by all other ||| base cache	count=1
function	returns the description string ||| description	count=1
class	session data from the ||| session	count=1
module	the following ||| contrib	count=1
module	set on the ||| contrib sessions	count=1
class	'1' ||| date	count=1
module_class	[module_1] polygon ||| [module_1] [class_2]	count=6
class	class are ||| settings holder	count=1
function	passes ||| passes	count=1
function	is ||| is	count=9
module_class	[module_1] a template ||| [module_1] generic [class_2]	count=1
class	the month without leading ||| format	count=1
class	the template and ||| simple template	count=1
function	version as [function] version string ||| spatialite version [function]	count=1
function	number of ("app_label", "modelname") ||| operation	count=1
function	which will be interpolated ||| readable	count=1
function	'6' saturday ||| w	count=1
module	template and ||| template	count=2
function	httpresponse ||| patch	count=1
module	and the lookup ||| contrib gis db backends	count=1
function	returns an integer value ||| int	count=1
class	instance for the ||| base	count=1
module	of ||| management commands	count=2
module	set containing names of ||| db models	count=1
function	actions for this modeladmin ||| actions	count=1
arg	given a reg-exp pattern ||| pattern	count=1
class	variables not in ||| user settings	count=1
module	which require [module] ||| [module] gis gdal	count=3
module	added via the ||| contrib	count=1
arg	name ||| name app_label	count=2
function	dated items ||| dated items	count=2
function	[function_1] block of ||| [function_2] [function_1]	count=2
function	ogr envelope by reference ||| envelope	count=1
arg	[arg_1] [arg_2] to ||| [arg_1] [arg_2]	count=6
class	to provide ||| to	count=1
function_arg	[function_1] message to ||| messages [function_1] request level [arg_2] extra_tags	count=2
function	checks whether ||| check query	count=1
module	the two geometries is ||| contrib	count=1
module	year i e '0' ||| utils	count=1
class	[class] files ||| [class]	count=1
function	it matches any ||| matches	count=1
arg	a direct relationship to ||| m	count=1
arg	to ascii/latin-1 native strings ||| value charset mime_encode	count=1
module	box of the geometry ||| contrib	count=1
arg	returned instance to the ||| form instance fields	count=1
arg	from_email recipient_list), [arg_2] ||| [arg_2] [arg_1]	count=4
module	queryset to the database ||| db	count=1
function_arg	the value [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] in installed_apps ||| [function_1] table names [arg_2]	count=1
function_arg	[function_1] ipv6 address ||| [arg_2] [function_1]	count=3
module_class	[module_1] relation ||| [module_1] [class_2]	count=4
module	files ||| translation	count=1
class	if possible ||| settings holder	count=1
module_class	static [class_2] ||| [class_2] [module_1]	count=3
function_arg	[function_1] variables and ||| [arg_2] [function_1]	count=4
module	the effects ||| contrib	count=1
arg	given httpresponse [arg_2] ||| [arg_1] [arg_2]	count=1
function	of the time zone ||| timezone	count=1
function	key function to ||| key func	count=1
function	with the admin ||| admin	count=1
function	this will [function_1] [function_2] ||| templatetags [function_1] [function_2]	count=1
module	prevents mysql from ||| db backends mysql	count=1
module	is true ||| admin	count=1
function	string including ||| info	count=1
function	returns an ordereddict ||| get	count=1
function	[function_1] create a ||| [function_2] [function_1]	count=6
function	returns a list ||| all locale	count=1
class	of tuples ||| command	count=1
arg	containing a queryset to ||| queryset	count=1
class	current session ||| session base	count=1
class	not this geometry is ||| geometry mixin	count=1
arg	list of inline formsets ||| request form formsets change	count=1
function	return the [function_2] ||| [function_1] [function_2] info with	count=1
module	returns ||| utils	count=3
module	views that tries getting ||| views decorators	count=1
class	if ||| user settings	count=1
class	will ||| set	count=2
function	html id for ||| id	count=1
class	if possible ||| user settings	count=1
function	[function_1] all ||| [function_1] [function_2]	count=2
module	[module_1] [module_2] ||| [module_2] [module_1]	count=539
arg	lock rows ||| nowait skip_locked	count=1
function	serve static files ||| serve	count=1
class	subclasses [class] ||| [class]	count=1
module	stream in a ||| backends	count=1
function	an html ||| html	count=1
arg	cursor row description this ||| table_name row	count=1
class	like ||| handler	count=1
class	this expression and ||| base expression	count=1
function	a modelform ||| save	count=1
module	leading ||| utils	count=1
function	[function_1] test ||| [function_1] [function_2]	count=2
module	for ||| cache backends	count=1
function	override uncaught exception ||| uncaught exception	count=2
class	("app_label", "modelname") tuples and ||| apps	count=1
function	formsets ||| formsets	count=1
function	the next interval ||| next year	count=1
function	authorizes a user ||| for user	count=1
module	of the geometry field ||| contrib	count=3
class	dictionary of database ||| connection handler	count=1
module	supports the ||| contrib gis	count=1
function	imported and registered ||| operation	count=1
function	as a default ||| default	count=1
arg	lookups specified ||| lookups	count=1
function	allows iteration over ||| iter	count=1
class	that we return ||| bytes	count=1
function	a number ||| lazy model operation	count=1
arg	the headers given in ||| request method headerlist key_prefix	count=1
module	[module] envelopes ||| [module]	count=3
class	the year i ||| date	count=1
function	day to second ||| date	count=1
function	modified since the user ||| modified since	count=1
function	month [function] ||| get month [function]	count=1
arg	a model from old_model ||| model	count=1
arg	default_settings if ||| default_settings	count=1
module	a range of ||| db models	count=1
arg	receiver to [arg_2] ||| [arg_2] [arg_1]	count=2
function	closes the current connection ||| close	count=1
module	of rows from ||| models	count=1
arg	retrieve the ||| lookup_type handle_spheroid	count=1
class	fieldset[1]['fields'] for ||| base model admin checks	count=1
arg	reg-exp pattern ||| pattern	count=1
function	of objects ||| related objects	count=1
class	session ||| session store	count=1
module	certain backends ||| core cache backends	count=1
function	srid ||| srid	count=1
arg	"vary" header in ||| newheaders	count=1
function	the __html__ ||| safe	count=1
module	rows of ||| models sql	count=1
function	spatial reference ||| get srs	count=1
module	the data source ||| contrib	count=1
module	update depends on results ||| models	count=1
function	sql that extracts a ||| datetime extract sql	count=1
function	'second', returns the sql ||| sql	count=1
function	app configs ||| app configs	count=1
function	an object ||| object from	count=1
class	last ||| database operations	count=1
module	tuples and ||| apps	count=1
function	value as an integer ||| as int	count=1
class	joined in the query ||| query	count=1
function_arg	checks a [arg_2] ||| [function_1] geom [arg_2]	count=1
arg	supplied key returns ||| key	count=1
module	property tests the ||| contrib	count=1
function	map ||| map	count=1
function	a ||| all	count=1
module	this will ||| gis	count=1
class	database definitions (structured ||| connection	count=1
module	user has through ||| auth	count=1
module	the queryset is ||| db models	count=1
module	of the name ||| db models fields	count=1
class	used if this query ||| query	count=1
function	browser [function_2] ||| [function_2] [function_1]	count=2
function	requisite number ||| number	count=1
function_arg	cache key [arg_2] ||| [arg_2] [function_1]	count=1
module	does not ||| gis db backends	count=1
module	of geometries in this ||| gis gdal	count=1
class	spatial column for ||| base spatial field	count=2
module	build ||| core serializers	count=1
class	applying this queryset to ||| set	count=1
class	every lazystream ||| lazy stream	count=1
class	of the year i ||| date format	count=1
module	band's parent raster ||| gdal raster	count=1
function	[function_1] field's name ||| [function_1] [function_2]	count=1
function	imported and ||| operation	count=1
function	all available dates ||| dates	count=1
function	for all related ||| related	count=1
arg	tables (without actually removing ||| sequences allow_cascade	count=1
function	http rfc7231 ||| http	count=1
class	number returns a decimal ||| decimal field	count=1
class	numeric i e ||| date format	count=1
module	language-code if there ||| utils translation	count=1
function	defer only the fields ||| only	count=1
module	by ||| utils	count=1
function	to migrate ||| migrate	count=1
function	paths to user-provides languages ||| locale paths	count=1
function	set the related ||| set	count=3
module	the template [module_2] ||| [module_1] [module_2]	count=4
arg	routines that should not ||| func cargs	count=1
function	[function_1] given field ||| [function_2] [function_1]	count=3
module	models ||| db models	count=2
function	are ||| handle	count=1
function	[function] select ||| set [function]	count=1
arg	retrieves the ||| name mode	count=1
function_arg	[function_1] of fields ||| [arg_2] [function_1]	count=3
module	the client ||| contrib	count=1
function	version as [function] version ||| spatialite version [function]	count=1
function	url namespaces used ||| url namespaces	count=1
class	configuration variables ||| settings	count=1
arg	username [arg_2] ||| [arg_1] [arg_2]	count=3
function	detects any [function] - apps ||| detect [function]	count=1
function_arg	namespaces from [arg_2] ||| [function_1] resolver [arg_2]	count=1
function	return fields ||| get fields	count=2
module_class	[module_1] corresponds ||| [class_2] [module_1]	count=2
module	the opposite of ||| models	count=1
module	be ||| db models	count=5
function	try to update the ||| update	count=1
function	iterable of app configs ||| app configs	count=1
function	or ||| patch vary	count=1
function	type ogrgeomtype ||| type	count=1
function_arg	references the [arg_2] ||| [function_1] field [arg_2]	count=1
class	raster initializing ||| spatial proxy	count=1
function	class setup immediately prior ||| setup	count=1
function	dimensions of this ||| dims	count=1
class	foreignkey or has choices ||| model admin	count=1
function	[function_1] function ||| [function_1] [function_2]	count=1
class	template rendered with ||| template	count=1
arg	model [arg_2] ||| [arg_2] [arg_1]	count=2
class	the week numeric ||| format	count=1
arg	routines ||| cargs	count=2
function	m2m table ||| m2m reverse attr	count=1
arg	plural based [arg_2] ||| [arg_2] [arg_1]	count=1
arg	returned instance to the ||| instance	count=1
class	its dictionary mapping this ||| mapping	count=1
function	[function] property ||| [function]	count=1
function_arg	native path that ||| npath path	count=1
class	objects ||| nested objects	count=1
function	delete the queryset ||| delete qs	count=1
module	dictionary mapping command names ||| management	count=1
function	key for the ||| key	count=1
function	include the ||| include	count=1
module	parent raster and ||| gdal raster	count=1
arg	checking on routines that ||| result func cargs	count=1
arg	name as ||| name app_label	count=1
arg	contents in [arg_2] ||| [arg_2] [arg_1]	count=2
function	the reverse ||| reverse	count=1
function	through model map ||| through model map	count=1
function	them out as migration ||| write migration	count=1
function	version number information ||| version	count=1
function	reverse query name clashes ||| clashes	count=1
class	the field ||| field	count=7
function	was something modified since ||| was modified since	count=1
function	override uncaught [function_2] ||| [function_1] [function_2]	count=1
function	will [function_2] ||| [function_1] [function_2]	count=2
arg	either a model class ||| model	count=1
class	formatted date ||| date	count=1
arg	given length and given ||| length	count=1
arg	is a localizable ||| use_l10n	count=1
class	binary data ||| binary field	count=1
function	use as a default ||| default	count=1
arg	if line a text ||| line	count=1
function	a list of fields ||| fields	count=1
arg	integer [arg] ||| feat [arg]	count=2
class	geographic ||| geo	count=1
arg	message from_email recipient_list), ||| auth_user auth_password	count=1
function	[function_1] list of ||| [function_1] [function_2]	count=4
module	of the given ||| contrib gis utils	count=1
module	single list of messages ||| contrib messages	count=1
class	to ||| to	count=1
module	built-in template ||| template backends	count=2
module	storage on the ||| contrib	count=1
module	class are satisfied from ||| conf	count=1
module	not indicate the particular ||| contrib gis db	count=1
module	user-provides languages files ||| utils translation	count=1
arg	placeholder needed for ||| placeholder params	count=1
function	cache ||| get	count=1
module	definitions (structured ||| db	count=1
module	by key ||| utils	count=1
function	media prefix settings ||| media prefix	count=2
function	a single filter clause ||| filter	count=1
function	of ||| operation	count=1
function	adds or updates ||| patch vary	count=1
function	output [function] ||| output [function] or	count=2
class	recursively yield this expression ||| base expression	count=1
class	in the database ||| database introspection	count=1
function	current system ||| get system	count=1
module	file ||| management	count=1
arg	assignment invalid values ||| value	count=1
module	undo the ||| contrib	count=1
function_arg	queryset [arg_2] ||| [arg_2] [function_1]	count=3
class	given database tables ||| base database operations	count=2
module	doesn't examine [module_2] ||| [module_1] [module_2]	count=2
function	updates the ||| patch vary	count=1
module	list of datetime ||| db models	count=1
function	po file for ||| po file	count=1
arg	the fields ||| fields objs	count=1
function	when ||| operation	count=1
function	what language the user ||| language from	count=1
function	get ||| get context	count=1
function	an unsaved ||| save form	count=1
module	the datasource ||| contrib	count=1
function	[function_1] key ||| [function_1] [function_2]	count=13
function	values on [function_2] ||| [function_1] [function_2]	count=4
function	a site is ||| site	count=1
module	the ||| contrib messages storage	count=2
arg	given lhs ||| lhs	count=1
module	dictionary mapping models ||| db models sql	count=1
function	uncaught exceptions those ||| handle uncaught	count=1
module	[ directory ||| core management	count=1
class	input can be ||| field	count=1
module	is ||| db models	count=3
function_arg	[function_1] [arg_2] ||| [function_1] model [arg_2]	count=6
module_class	[module_1] [class_2] should be rendered ||| [module_1] [class_2] iter	count=1
class	a template rendered with ||| template	count=1
function	the __html__ method ||| html safe	count=1
function	keyword arguments [function_2] ||| [function_2] [function_1]	count=2
class	the model ||| model	count=2
module	blocks of rows ||| db models sql	count=1
class	helper function for outputting ||| base form	count=1
function	version as [function] ||| spatialite version [function]	count=1
function	it matches ||| matches	count=1
function	the unget history ||| unget history	count=2
arg	max_age seconds ||| max_age	count=1
class	the last data value ||| multi value	count=1
module	on the client for ||| contrib	count=1
function	field pointing [function] this field ||| rel [function]	count=1
function	pointing [function] this field ||| rel [function]	count=1
module	set of ||| db	count=1
arg	model [arg_2] ||| [arg_1] target_opts [arg_2]	count=1
function	checks the string output ||| check	count=1
function	for representing this as ||| as	count=1
arg	name with an ||| name app_label	count=1
function	models have ||| model	count=1
function	[function_1] checking ||| [function_1] [function_2]	count=2
function	namespaces from url ||| namespaces	count=1
class	module specified ||| holder	count=1
function	redirect ||| redirect	count=1
class	for a ||| response base	count=1
arg	has been started ||| field_name file_name content_type content_length	count=1
module	and the ||| contrib gis db backends	count=1
class	given a modelform ||| model	count=1
function	manager for the either ||| manager	count=1
module	sessions from [module_2] ||| [module_1] [module_2]	count=1
class	and decimal ||| decimal field	count=1
class	month without ||| date	count=1
function	has permission ||| has change permission	count=1
function	relative path ||| relative path	count=1
function	for specifying custom readonly ||| get readonly	count=1
module	files ||| core files	count=2
module	return the linear ||| contrib gis	count=1
module_class	[module_1] list ||| [module_1] change [class_2]	count=2
module	the translation ||| translation	count=1
function	block of ||| block	count=1
class	are satisfied from the ||| user settings holder	count=1
function	corresponding ||| model	count=1
module	true if ||| contrib	count=1
arg	the "vary" header ||| response newheaders	count=1
function	[function_1] on ||| [function_1] [function_2]	count=5
arg	one [arg] model ||| obj model [arg]	count=1
class	password [class_2] ||| [class_1] [class_2]	count=2
function_arg	split an [arg_2] ||| [arg_2] [function_1]	count=3
module	queryset to ||| db models	count=1
arg	confirmation if ||| verbosity autoclobber serialize keepdb	count=1
function	its vary ||| vary	count=1
function	file ||| delete file	count=1
module	resets the dirty ||| backends	count=1
module_class	yields [module_1] [class_2] should be rendered ||| [module_1] [class_2] iter	count=1
class	queryset to the database ||| query set	count=1
function	an optional ||| init	count=1
function	datetime field ||| datetime	count=1
module	contain ||| views generic	count=2
function	the [function] ||| [function]	count=8
arg	value in a field ||| value arg	count=1
class	uses the date ||| date list	count=1
function	"modelname") tuples and when ||| lazy model operation	count=1
arg	string depending on ||| compiler	count=1
arg	path to the ||| path	count=1
arg	gdalraster ||| rast	count=1
class	by this log ||| log	count=2
class	the feature at ||| layer	count=1
arg	the field to be ||| field	count=1
module	the installed ||| contrib	count=1
module	string [module] ' ||| [module]	count=1
function	the type returned ||| type	count=1
function	to the login page ||| to login	count=1
arg	it's an ||| val label	count=1
arg	geometry in a ||| geom	count=1
arg	httpresponse [arg_2] ||| [arg_1] [arg_2]	count=1
function	constructs ||| make	count=1
module	returns gml representation ||| gis	count=1
module	ordinates with the given ||| contrib gis	count=1
module	a range of ||| models fields	count=1
module	blocks of ||| models sql	count=1
module	if the oracle ||| db backends oracle	count=1
function_arg	caching headers [arg_2] ||| [arg_2] [function_1]	count=2
module	true if the queryset ||| db models	count=1
class	results ||| query set	count=1
arg	on routines ||| func cargs	count=1
module	a dictionary mapping the ||| contrib admin	count=1
module	search ||| admin templatetags	count=1
function	a [function] ||| [function]	count=5
function	a non-zero reference count ||| count active	count=1
function	related ||| reverse	count=1
arg	a dom node recursively ||| node	count=1
function	in the given ||| patch	count=1
function	[function_1] a block ||| [function_2] [function_1]	count=2
class	and compile-time options ||| post gisoperations	count=1
module	to user-provides languages ||| translation	count=1
function	returns the admin url ||| get admin url	count=1
class	has ||| base model admin	count=2
function	the mask of ||| mask	count=1
arg	splits the values into ||| values	count=1
function_arg	[function_1] receiver from ||| [arg_2] [function_1]	count=1
function	[function_1] the short ||| [function_2] [function_1]	count=1
function_arg	returns the for update [function_1] [arg_2] an update operation ||| [function_1] [arg_2]	count=3
class	for calling ||| gisoperations	count=1
arg	headers [arg] ||| [arg]	count=1
function	which will be interpolated ||| readable field	count=1
function	an int ||| int	count=1
function	representing all available dates ||| dates	count=1
class	specified ||| holder	count=1
class	'0' sunday ||| date format	count=1
arg	the key does not ||| key	count=3
function	parse a list ||| parse apps and model	count=1
class	field within ||| field	count=1
arg	generated from key_salt and ||| key_salt value	count=1
function	type returned ||| field type	count=1
class	of form in ||| form set	count=1
module	being files ||| core files	count=1
function	[function_1] [function_2] and ||| [function_2] [function_1]	count=2
function	lazy i e ||| lazy	count=1
function	back the ||| rollback	count=1
module	examine the ||| contrib admin	count=4
module	for translation ||| translation	count=1
class	of the form migration ||| migration	count=1
function	signed [function_2] ||| [function_1] [function_2]	count=4
function	will try to update ||| do update	count=1
class	'999999' ||| time format	count=1
class	resets the dirty flag ||| base	count=1
function	[function_1] model references ||| [function_1] [function_2]	count=1
function	saves new ||| save	count=1
function	[function_1] columns ||| [function_2] [function_1]	count=12
function	the column name ||| column	count=1
function	value for [function_2] ||| [function_2] [function_1]	count=2
function	that returns a ||| geom output	count=1
class	extra inline forms ||| inline model	count=1
module	on the ||| contrib admin templatetags	count=1
function	po file for self ||| write po file	count=1
module	urlconf can contain helpful ||| views	count=1
function	that creates ||| create	count=1
module	checking the ||| contrib gis geoip	count=1
function	returns the default ||| get	count=1
function	file for self domain ||| file	count=1
arg	for null placeholder needed ||| placeholder params	count=1
function_arg	[function_1] [arg_2] ||| messages [function_1] request level [arg_2] extra_tags	count=12
class	essentially ||| query set	count=1
class	an open cache ||| cache	count=1
function	byte string [function] ' ' ||| [function]	count=1
arg	[arg] accessor or ||| [arg]	count=2
function	of the next interval ||| next year	count=1
module	[module] subclasses ||| contrib [module]	count=1
module	the ||| contrib sites	count=1
function	translate ||| translate	count=2
function	models have been ||| model	count=1
module	oracle doesn't ||| backends oracle	count=1
module	database ||| db backends oracle	count=1
function	the ||| lazy model	count=1
class	sets the ||| request	count=1
function_arg	[function_1] in instance ||| [function_1] [arg_2]	count=1
arg	module [arg] ||| [arg]	count=1
arg	one item of ||| item label	count=1
function	returns the [function] of the ||| proj4 [function]	count=1
function	[function_1] index with ||| [function_2] [function_1]	count=3
arg	perform all ||| cls	count=1
function	all [function_2] ||| [function_2] [function_1]	count=22
module	the return_geom ||| contrib gis	count=1
function_arg	[function_1] the exception ||| [function_1] [arg_2]	count=6
module	is used by the ||| contrib gis geos	count=1
class	file in ||| file system	count=1
function	returns all objects of ||| get all objects	count=1
function	of ("app_label", ||| lazy model operation	count=1
arg	or ||| format	count=1
class	names and ||| raw	count=1
arg	more explanatory message ||| original_exc	count=1
arg	a modelform return ||| form	count=1
function	a single filter ||| filter	count=1
class	requests ||| holder	count=1
function	header in the given ||| patch	count=1
function	null field to not ||| ask not	count=2
class	way ||| backend	count=1
arg	done in raw saves ||| raw	count=1
module	a range of ||| db models fields	count=1
module	if the queryset is ||| models	count=1
function	prefix to ||| prefix	count=2
function_arg	[function_1] instance ||| [arg_2] [function_1]	count=2
function	greater than ||| culling	count=1
arg	inline formsets and ||| form formsets	count=1
arg	content should be ||| content max_length	count=1
module	project ||| management	count=1
arg	for null placeholder ||| placeholder	count=1
function	flush method on ||| flush	count=1
arg	be sent to ||| to	count=1
arg	a field ||| field	count=2
function	with the [function_2] ||| [function_2] [function_1]	count=6
arg	key into ||| key version	count=1
function	null field ||| null	count=2
function	from the database ||| from db	count=1
module_class	[module_1] spatial ||| [class_2] [module_1]	count=13
function	has any filtering going ||| has filters	count=1
function	[function_1] week ||| [function_2] [function_1]	count=3
function	[function_1] [function_2] ||| [function_1] form [function_2]	count=3
function	link ||| link file	count=1
function_arg	return a [arg_2] ||| [arg_2] [function_1]	count=3
arg	flag so ||| session_key	count=1
arg	an unsaved ||| request form	count=1
function	header in the given ||| vary	count=1
module	with long ||| cache backends	count=1
arg	expires ||| cache_timeout	count=1
module	set of fields to ||| models	count=1
function	paths to user-provides languages ||| paths	count=1
arg	max_age ||| max_age	count=1
module	lookups by ||| translation	count=1
arg	an ||| request	count=1
module	for this view with ||| views generic	count=1
class	these are all the ||| file based	count=1
module	resets ||| db	count=1
arg	name in all the ||| name	count=1
module	for easy lookups by ||| utils	count=1
function	clears [function_1] [function_2] extra_select columns) ||| db models sql query [function_2] [function_1]	count=1
module	geometry and the ||| contrib gis	count=6
module	return an ||| admin	count=1
module	this ||| gis utils	count=4
function	the previous valid ||| get previous	count=3
function	resolve the ||| resolve	count=1
module	manager and ||| backends base	count=1
function	url in debug mode ||| url	count=2
function	time [function] ||| clear [function]	count=2
function	a number of ||| lazy model	count=1
function_arg	renders [arg_2] ||| [arg_2] [function_1]	count=6
class	of files ||| hashed files mixin	count=1
function	[function_1] this formset ||| [function_2] [function_1]	count=1
function	of getting the ||| get	count=1
function	the corresponding models ||| lazy model	count=1
class	the current session data ||| session base	count=1
module	copy [module] this ||| [module] backends	count=1
class	[class] and ||| [class]	count=1
class	class for use ||| model	count=1
function	empty_value_display set on modeladmin ||| empty value display	count=1
arg	inline formsets and ||| formsets	count=1
class	list of form in ||| form set	count=1
class	fields passed into this ||| set	count=1
module	try to determine the ||| contrib auth management	count=2
function	string representation of ||| str	count=1
function	a python ||| to python	count=1
class	the spatial [class_2] ||| [class_1] [class_2]	count=1
function	[function_1] reset ||| [function_2] [function_1]	count=3
class	[class_1] message ||| [class_1] [class_2]	count=1
arg	regex can ||| regex	count=1
class	for this model ||| model	count=2
class	retrieves ||| base database introspection	count=1
module	session ||| sessions backends	count=2
function	("app_label", "modelname") tuples ||| lazy model operation	count=1
class	for configuration variables not ||| user	count=1
arg	of inline formsets ||| form formsets	count=1
class	in this ||| settings holder	count=1
class	database already ||| database creation	count=2
class	of ||| paginator	count=1
module_class	returns a quoted version [module_1] [class_2] ||| [module_1] [class_2] operations quote	count=2
function	quote aliases ||| quote	count=1
module	the running system's terminal ||| core management	count=1
function_arg	[function_1] should respect ||| [function_1] [arg_2]	count=1
module_class	[module_1] layer supports ||| [class_2] [module_1]	count=4
function	localizable type and returns ||| localize	count=1
function	strip ||| strip	count=1
function	[function_1] since ||| [function_1] [function_2]	count=3
module	return an unsaved ||| admin	count=1
function_arg	search and [arg_2] ||| [function_1] results [arg_2]	count=1
module	contain helpful extra ||| views	count=1
function	[function_1] comparing ||| [function_1] [function_2]	count=1
arg	if no srid ||| srid	count=1
module	if this ||| gdal	count=5
function	this type ||| this type	count=2
function	and adds ||| add srs	count=1
function	return the field ||| get related field	count=2
function_arg	[function_1] field on ||| [arg_2] [function_1]	count=1
function	sets the x ||| x	count=1
arg	a message to ||| message fail_silently	count=2
class	compile-time options ||| post gisoperations	count=2
arg	one item of ||| item	count=1
function	key constraint [function_2] ||| [function_1] [function_2]	count=2
class	like settings ||| handler	count=1
module	in the srid of ||| gis db	count=2
function_arg	[function_1] [arg_2] same leading path ||| [function_1] leading dir [arg_2]	count=2
function	managers ||| managers	count=1
function	next interval ||| next day	count=1
module	the correct ||| contrib gis	count=1
class	[class] which ||| build [class]	count=2
class	password and sends ||| password	count=1
class	log [class_2] ||| [class_1] [class_2]	count=2
function	parameters suitable ||| connection params	count=1
function	a helper function [function_1] [function_2] ||| [function_2] [function_1] dict data key value	count=3
arg	the appropriate ||| protocol	count=1
function	that will select ||| select	count=1
arg	a wherenode for a ||| filter_expr branch_negated current_negated can_reuse	count=1
function	last insert [function] as ||| return insert [function]	count=1
module	of m rows of ||| models	count=1
module	of rows from a ||| models	count=1
function	validate ||| validate	count=1
function	paginate [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] containing a ||| [function_2] app [function_1]	count=1
arg	of a dom node ||| node	count=1
function	browser ||| browser	count=1
module_class	[module_1] mapping information ||| [module_1] gis utils [class_2]	count=4
module	the data source ||| contrib gis gdal	count=1
arg	(subject message from_email recipient_list), ||| auth_user auth_password	count=1
arg	securely generated ||| length allowed_chars	count=1
function	[function_1] models ||| [function_2] [function_1]	count=4
class	[class_1] for ||| [class_2] spatial [class_1]	count=1
arg	a context returns ||| context	count=1
arg	the returned instance ||| form instance	count=1
function	raw [function_2] ||| [function_1] [function_2] input_data meta content_length boundary	count=1
arg	changes ||| changes	count=1
class	get ||| list view	count=3
class	files called ||| hashed files	count=1
arg	given encoding [arg_2] ||| [arg_2] [arg_1]	count=4
module	[module_1] but ||| [module_1] [module_2]	count=2
module	translation ||| utils translation	count=2
function	settings ||| settings	count=3
arg	the given httpresponse ||| response	count=2
module	slice [module] ||| [module]	count=2
arg	a queryset or any ||| format queryset	count=1
class	satisfied from ||| settings holder	count=1
class	this formset ||| base form	count=1
function	a dict containing ||| model to dict	count=1
class	from the module specified ||| user settings	count=1
module	a connection is ||| db	count=1
module	[module_1] backends ||| [module_1] [module_2]	count=2
module	from the database and ||| backends	count=1
module	backends require special ||| db backends base	count=1
module	not indicate the ||| contrib gis	count=1
module	or raster with ||| db	count=1
function	each time [function] ||| clear [function]	count=2
module	models when ||| db models	count=1
class	that has ||| base model admin	count=1
class	of the response ||| response	count=1
class	requests for ||| user settings	count=1
function	value positions ||| order	count=1
module	app or project templates ||| management	count=1
class	to the stack of ||| context	count=1
arg	retrieve the ||| handle_spheroid	count=1
function	type returned when the ||| type	count=1
arg	boolean indicating if ||| request queryset search_term	count=1
function_arg	[function_1] a message ||| messages [function_1] request level [arg_2] extra_tags	count=2
module	a copy of ||| db models	count=1
module	of the database ||| contrib gis db	count=1
class	return an unsaved ||| admin	count=1
arg	if the named module ||| fullname	count=1
function	returns the total size ||| size	count=1
function_arg	returns the for update [function_1] [arg_2] for an update operation ||| [function_1] [arg_2]	count=3
module	in the extra ||| contrib	count=1
class	[class_1] spatial fields ||| [class_1] [class_2]	count=1
class	session instance ||| session	count=1
function	is [function] if ||| is [function]	count=1
class	for the object's primary ||| base model	count=1
module	properly shortened and uppercased ||| db backends oracle	count=1
module	resets the ||| db backends base	count=1
class	runs a ||| migration executor	count=2
function	given spatial reference ||| srs	count=1
module	true ||| models	count=1
function	geojson ||| geojson	count=1
function	class ||| init	count=1
function	m2ms to ||| to	count=1
function	number ||| lazy model operation	count=1
function	[function_1] [function_2] in ||| [function_1] [function_2] opts	count=3
function	[function_1] sequence ||| [function_1] [function_2]	count=1
class	dictionary mapping this routine ||| layer mapping	count=1
class	of extra inline ||| inline	count=1
arg	check one item of ||| obj model item	count=1
function	join ||| join	count=1
class	password reset ||| password reset token	count=2
module_class	of the [class_2] ||| [module_1] staticfiles base [class_2]	count=1
function	all known related objects ||| known related objects	count=1
module	and related ||| db backends	count=2
module	length returns ||| gis gdal	count=1
module	the value of the ||| contrib	count=5
function	transforms and lookup from ||| lookup	count=1
class	[class_1] [class_2] ||| db models fields [class_2] [class_1]	count=8
module	yield template ||| template backends	count=1
module	essentially the ||| db	count=1
arg	[arg_1] function ||| [arg_2] [arg_1]	count=20
module_class	[module_1] mapping ||| [module_1] gis utils [class_2]	count=4
module	prepares ||| messages storage	count=1
arg	directory in template_dirs ||| template_dirs	count=1
arg	retrieve the distance ||| dist_val lookup_type handle_spheroid	count=1
function	the test settings are ||| prepare test settings	count=1
module	[module_1] value and ||| [module_2] [module_1]	count=1
function	expiry date as a ||| expiry date	count=1
module	on [module_2] ||| [module_2] [module_1]	count=3
module	of the week ||| utils	count=1
function	in the current ||| current	count=1
module	of ||| core	count=1
class	django ||| database introspection	count=1
module	if the given ||| contrib	count=1
function	[function_1] exception ||| [function_2] [function_1]	count=5
class	the current session data ||| session	count=1
function	a new savepoint ||| savepoint create	count=1
function	[function_1] sql that ||| [function_1] [function_2]	count=4
module	models to a set ||| models sql	count=1
function	a list of all ||| show list	count=1
class	form migration instance ||| migration	count=1
function	the session model ||| model	count=1
function	the encoding is ||| encoding	count=1
function	given field type ||| field type	count=2
function	field type name ||| field type	count=2
class	and resets the ||| base database wrapper	count=1
arg	individual non-relational ||| obj	count=1
arg	key ||| key value	count=1
class	in the order ||| set	count=1
function	max number of extra ||| get max num	count=1
function	number of ("app_label", ||| lazy model operation	count=1
function	return the [function_2] ||| [function_1] redirect [function_2]	count=1
function_arg	test redirecting [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	renders [arg_2] ||| [function_1] string template_name [arg_2]	count=3
module	tests until [module] specified ||| [module]	count=1
function	the current language layout ||| get current language bidi	count=1
module	and ||| base	count=1
arg	retrieves ||| name mode	count=1
function	to migrate ||| migrate model	count=1
class	remove ||| database schema editor	count=1
module	[module] staticfiles ||| [module]	count=3
module_class	[module_1] '365' ||| [module_1] [class_2]	count=8
module	decorator ||| utils	count=1
arg	<object> node ||| node	count=1
arg	[arg] name en-us ||| [arg]	count=2
module	given c arguments ||| prototypes	count=1
function	the union of ||| union	count=2
arg	generates [arg_2] ||| [arg_2] [arg_1]	count=2
arg	cursor ||| cursor sql params	count=1
function	a cache ||| generate cache	count=1
function_arg	field_name [arg_2] ||| [function_1] field_name [arg_2]	count=3
module	[module_1] the corresponding ||| [module_2] gis [module_1]	count=4
module	[module_1] change ||| [module_1] [module_2]	count=2
module	against the default translation ||| utils translation	count=1
function	cache key from ||| generate cache key	count=2
function	dates for the ||| dates	count=1
function	the requisite number ||| format number	count=1
arg	message from_email recipient_list), sends ||| auth_user auth_password	count=1
module	tables and ||| db backends	count=1
class	month without leading ||| date	count=1
arg	according to the value ||| value arg	count=1
arg	that defines the __html__ ||| klass	count=1
function	of the next interval ||| next month	count=1
class	returns true if ||| query set	count=1
module	compile-time default (sqlite_limit_variable_number) of ||| db	count=1
function	[function_1] modified since ||| [function_2] [function_1]	count=1
arg	check one item ||| obj model item label	count=1
class	for ||| base model form set	count=1
module_class	[module_1] reference ||| [module_1] spatial [class_2]	count=1
function_arg	model with [arg_2] ||| [function_1] [arg_2]	count=1
arg	content [arg_2] ||| [arg_2] [arg_1]	count=4
arg	the given form ||| form commit	count=1
class	test ||| database creation	count=1
arg	or project templates are ||| template	count=1
function	db_type(), providing a range ||| parameters	count=1
function	history as a ||| history	count=1
function	ipv6 ||| ipv6	count=2
function	[function_1] mask of ||| [function_2] [function_1]	count=1
class	from the database ||| base database	count=1
function	prefix set ||| add prefix	count=2
arg	a project_state ||| project_state	count=1
class	coordinate sequence ||| seq	count=1
arg	constructing the sql to ||| geo_field field_name	count=1
arg	oid used ||| table_name geo_col	count=1
function_arg	[function_1] deeper ||| [function_1] field [arg_2]	count=4
class	function for outputting ||| base	count=1
class	app ||| command	count=1
class	method ||| mixin	count=5
class	file in a ||| file system finder	count=1
module	based on the ||| db models	count=1
arg	given table ||| cursor table_name	count=1
function	return a ||| get	count=19
function	list of template ||| template	count=1
function	if field name ||| field name	count=2
class	leading ||| date format	count=1
function	form class ||| get form class	count=4
module	string of the translation ||| translation	count=1
function	the object this ||| object	count=1
class	imported and registered ||| apps	count=1
function	statistics ||| statistics	count=1
class	of the command ||| command	count=1
function	a dangling ||| temporary	count=1
module	modelform return an ||| contrib admin	count=1
function	text wrapping ||| wrapping	count=1
arg	entry in installed_apps ||| cls entry	count=1
arg	template and context ||| context	count=1
function	city information ||| city	count=1
class	from the module specified ||| user settings holder	count=1
module	fields ||| db models fields	count=1
module	the month without leading ||| utils	count=1
class	fields ||| query	count=1
class	limit_choices_to to the field ||| field	count=1
module	feature ||| gis gdal	count=3
arg	key_salt ||| key_salt	count=1
function	to create a manager ||| create generic related	count=1
class	for configuration ||| settings	count=1
class	week ||| date format	count=1
function	have been ||| model	count=1
module	and related stats functions ||| db backends sqlite3	count=1
module	serving files in ||| conf	count=1
function	[function_1] fail ||| [function_2] [function_1]	count=1
module	by the node ||| contrib	count=1
arg	model ||| cls model	count=1
function	a cache key from ||| generate cache key	count=1
arg	oid ||| table_name geo_col	count=1
arg	geometry field lookup value ||| value lookup_type	count=2
function	to create a ||| create generic related	count=2
function	method this helps ||| html safe	count=1
function	adds or updates the ||| patch	count=1
module_class	this [class_2] ||| [class_2] [module_1]	count=38
function	to aware in ||| make aware	count=2
module	postgis ||| backends postgis	count=2
class	error which has a ||| error	count=1
module	__html__ ||| utils	count=1
function	sql to select ||| geocol select	count=1
module	is this ||| contrib gis	count=1
module	methods by ||| core cache	count=1
function	to ||| to many	count=2
arg	a value ||| field value	count=1
function	[function_1] since the ||| [function_1] [function_2]	count=3
function	in its vary ||| vary	count=1
arg	is found ||| css_selector text timeout	count=1
arg	[arg_1] the given ||| [arg_2] length [arg_1]	count=1
arg	string ||| string	count=1
function	a queryset of objects ||| related objects	count=1
arg	table between tablespaces ||| old_db_tablespace new_db_tablespace	count=1
class	with a template rendered ||| template response	count=1
module	customizing the ||| contrib admin	count=4
module	the return_geom keyword is ||| contrib	count=1
function	elements ||| unary	count=1
arg	generates a ctypes ||| argtypes	count=1
module	into migrations with ||| db migrations	count=2
module_class	[module_1] case of ||| [module_1] [class_2]	count=12
class	or not this handler ||| memory file upload handler	count=1
function	current ||| current	count=5
arg	if it already exists ||| path prefixed_path source_storage	count=1
function	geometry type ||| geom type	count=2
function	the difference of ||| difference	count=1
class	a transaction and ||| wrapper	count=1
arg	values into two sets ||| values	count=1
module	returns ||| gis geos	count=8
module_class	returns a quoted [module_1] [class_2] column ||| [module_1] [class_2] operations quote	count=2
function_arg	[function_1] cursor with ||| [function_1] query [arg_2]	count=1
arg	update_pk is defined then ||| manager using fields update_pk	count=1
module	this ||| gis gdal	count=24
arg	length [arg_2] ||| [arg_1] [arg_2]	count=1
class	string ||| safe data	count=1
arg	an item of fields ||| fields label	count=1
class	satisfied from the ||| settings holder	count=1
function	given user ||| user	count=1
module	and the lookup type ||| contrib gis db backends oracle	count=1
arg	cursor with placeholders ||| cursor sql params	count=1
function	custom prepopulated fields ||| prepopulated fields	count=1
module	via the ||| contrib auth	count=1
function_arg	by or ||| by queryset	count=1
arg	contents in ||| contents	count=1
function	list of sql statements ||| sql flush	count=1
function	have been imported ||| lazy model operation	count=1
class	the field ||| related field	count=1
module	this will return ||| gis	count=1
module	ensures that it is ||| utils	count=1
function	set the mask ||| set annotation mask	count=2
function	the stack ||| update	count=1
function	mean of all ||| mean	count=1
class	files [class] ||| [class]	count=2
function	[function_1] x ||| [function_1] [function_2]	count=1
module	the 3d bounding-box text ||| contrib	count=1
function_arg	[function_1] field ||| [function_1] [arg_2]	count=1
module_class	[module_1] geometry objects ||| [module_1] [class_2]	count=2
function	[function_1] cookie if ||| [function_2] [function_1]	count=5
function	email to [function_2] ||| [function_2] [function_1]	count=1
function	and filters from ||| load from	count=1
module	of table ||| db models	count=1
arg	callback returns a ||| callback timeout	count=1
function	usable by this backend ||| get backend	count=1
module	modelform return an ||| contrib	count=1
function	getting the [function_2] ||| [function_2] [function_1]	count=5
module	specified by the given ||| contrib	count=1
class	the ||| database	count=1
function	the context ||| update	count=1
module_class	requested static [class_2] ||| [module_1] [class_2]	count=3
module	translation but doesn't translate ||| utils translation	count=1
function	[function_1] last executed ||| [function_2] [function_1]	count=8
arg	according to [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] namespaces used ||| [function_1] [function_2]	count=3
function	find what language ||| language from	count=1
function	token ||| token	count=2
class	field has an id ||| field	count=1
class	not in ||| user	count=1
module	python sqlite3 interface returns ||| db backends sqlite3	count=1
arg	[arg_1] using values ||| [arg_1] [arg_2]	count=1
function	a geometry attribute ||| geom attribute	count=2
arg	[arg_1] values ||| [arg_2] [arg_1]	count=1
module	geometry to perform the ||| contrib	count=1
function_arg	in [arg_2] ||| [function_1] outfile [arg_2]	count=2
function	path [function] ||| has leading [function]	count=1
class	not in ||| settings	count=1
module	[module_1] api ||| [module_1] [module_2]	count=8
class	for the migration ||| migration autodetector	count=1
module	for ||| gdal	count=1
module_class	within the [class_2] ||| [module_1] gdal [class_2]	count=1
module	helpful extra ||| views generic	count=1
module	on the ||| db models	count=2
class	requests for configuration ||| holder	count=1
function	call the flush method ||| flush	count=1
function	for the reverse ||| reverse	count=1
class	to this command ||| base command	count=1
function	helps ||| html safe	count=1
function	field lists and ||| field lists	count=2
function	[function_1] model matching ||| [function_2] [function_1]	count=1
module	this method allows ||| gis db	count=1
arg	specified tolerance ||| tolerance	count=1
module	model _meta fields ||| db models fields	count=1
arg	context returns a ||| context	count=1
function_arg	[function_1] given encoding ||| [function_1] outfile [arg_2]	count=1
function	returns the area ||| area	count=1
class	with a template rendered ||| template	count=1
module	dictionary mapping models to ||| models sql	count=1
function	user-provides languages ||| locale	count=1
function	[function_1] the pattern ||| [function_2] [function_1]	count=1
function	construct ||| construct	count=2
function	a secret (assumed to ||| cipher	count=1
arg	mimetype ||| mimetype	count=1
arg	manager ||| klass	count=1
arg	a field from a ||| field	count=2
module	lookups by ||| utils	count=1
function	migration [function_2] ||| [function_1] [function_2]	count=1
arg	initial ||| initial	count=1
function	level [function_2] ||| [function_2] [function_1]	count=1
class	of ||| set	count=1
arg	downloaded it? [arg_2] ||| [arg_2] [arg_1]	count=2
class	check ||| base command	count=1
module	from ||| models	count=1
function	list of tuples [ ||| messages	count=1
function_arg	value [arg_2] ||| [arg_2] [function_1]	count=2
function	a test ||| create test db	count=1
module	given a ||| admin	count=1
function	all concrete fields on ||| concrete fields	count=1
class	inline ||| inline model admin	count=4
module	a dictionary mapping command ||| core management	count=1
function	of extra ||| extra	count=2
arg	"vary" header in the ||| response newheaders	count=1
function_arg	[function_1] lhs ||| [function_1] [arg_2]	count=2
class	cache files ||| file based cache	count=1
class	and resets ||| wrapper	count=1
function	returns the form ||| form	count=2
function	tuples [ directory ||| compile	count=1
function	specifying custom readonly ||| get readonly	count=1
class	sense of the ||| node	count=1
class	given a modelform return ||| model admin	count=1
class	it to this query ||| query	count=1
function	dictionaries in the context ||| update	count=1
arg	function and a number ||| function	count=1
function	errorlist of errors ||| errors	count=1
function	for relational fields ||| relational field	count=1
function	alias [function] ||| [function]	count=3
module	the database ||| contrib	count=2
class	app or project ||| template command	count=1
class	results from ||| query set	count=1
function	not ||| not	count=4
function	the value to use ||| value	count=1
function_arg	form for [arg_2] ||| [function_1] [arg_2]	count=1
function	long integer into a ||| long to bin	count=1
function	element for relational fields ||| relational	count=1
module	passed into ||| models	count=1
function	which is the union ||| union	count=1
module	the description for a ||| contrib admindocs	count=1
class	this handler should be ||| upload handler	count=1
module	returns ||| gis db backends spatialite	count=2
class	all migration ||| migration	count=1
arg	absolute path (or none ||| root path prefix	count=1
arg	given targets ||| targets plan state	count=1
function	new file ||| new file	count=1
function	manager ||| manager	count=2
class	year i e ||| date	count=1
module	forward ||| models fields	count=1
function	non-schema-affecting ||| altered	count=1
class	configuration variables ||| user	count=1
function	given ||| vary	count=1
class	records useful ||| recorder	count=1
function	set the [function_2] ||| [function_2] [function_1]	count=12
function	year [function] in ||| get year [function]	count=1
arg	a source and ||| source	count=1
function	index with varchar operator ||| index sql	count=1
module	parent raster and force ||| raster	count=1
class	by this hasher ||| base password hasher	count=1
class	for configuration variables not ||| settings	count=1
function	httpresponse ||| vary headers	count=2
function	handle the [function_2] ||| [function_2] [function_1]	count=2
module	message ||| messages	count=1
function	[function_1] [function_2] for ||| [function_2] [function_1]	count=16
arg	objs via ||| objs	count=2
function	a prefix set ||| add prefix	count=2
function	[function_1] context ||| [function_2] [function_1]	count=1
arg	tables ||| tables	count=1
class	callable as a compiled ||| library	count=1
arg	path (or none if ||| root path	count=1
module	in the srid of ||| gis db backends	count=2
arg	if ||| key salt	count=1
function	postgis geometry ||| postgis	count=1
function	line merge ||| merged	count=1
module	creates and ||| backends	count=1
class	returns ||| form mixin	count=1
class	this expression and all ||| base expression	count=1
function	and when all ||| operation	count=1
module_class	are present usually 2 [module_1] [class_2] other pop-ups ||| [module_1] [class_2]	count=2
function	"modelname") tuples ||| lazy model operation	count=1
function	in ||| patch vary headers	count=2
module	deep-clone ||| migrations	count=1
module	of either the ||| utils	count=1
function	[function_1] object ||| [function_1] [function_2]	count=5
function	model_name) tuples [function] ||| get [function] models	count=1
class	and when all ||| apps	count=1
function	string ||| string	count=7
class	from either queryset ||| query set	count=1
module	numeric i e ||| utils	count=1
function	particular [function] to ||| [function]	count=1
function	been ||| model operation	count=1
module	migration ||| db migrations	count=4
module	returns ||| gis db models	count=6
module	'0' to ||| utils	count=1
module	stddev and related stats ||| backends sqlite3	count=1
function	and appending a slash ||| with slash	count=1
function	dimensions ||| dims	count=1
function	pickling should return the ||| reduce	count=1
module	yields the [module] ||| [module]	count=2
class	migration records useful if ||| migration recorder	count=1
module	displays [module_2] ||| [module_2] [module_1]	count=3
function	joins for the passage ||| joins	count=1
module	geometry or raster taking ||| gis	count=1
module	generally the ||| contrib contenttypes	count=1
function	returns a cache key ||| generate cache key	count=1
function	name ||| timezone name	count=1
class	the last value on ||| multi value	count=1
module	mysql has ||| mysql	count=1
class	[ directory file ] ||| command	count=1
function_arg	[function_1] response ||| [arg_2] [function_1]	count=2
arg	from key_salt and ||| key_salt value	count=1
module	doesn't populate the ||| db models	count=1
function	the root ||| root	count=1
class	list of table names ||| database introspection	count=1
module_class	current [class_2] ||| [module_1] [class_2]	count=3
class	a cookie returning ||| cookie	count=1
module	on the first lookup ||| db models	count=1
function	[function_1] sequence for ||| [function_2] [function_1]	count=1
arg	in a list ||| value	count=1
function	checks each table name ||| check constraints	count=2
class	the queryset is ||| set	count=1
function	[function_1] django models ||| [function_2] table [function_1]	count=1
module	for this [module_2] ||| [module_1] [module_2]	count=4
arg	signals ||| signal	count=1
arg	modelform return an unsaved ||| request form	count=1
function	true if the given ||| is ignorable	count=1
class	not in this ||| settings holder	count=1
module	if the original is ||| contrib gis geos	count=1
class	confirm support for ||| features	count=1
function	modification time of the ||| modification	count=1
function	always return a native ||| npath	count=1
class	for ||| base manager	count=2
class	migration instance ||| migration	count=1
function	[function] to the ||| user passes [function]	count=3
class	mapping this routine ||| layer mapping	count=1
function	stored in a perimeter ||| perimeter	count=1
module	and returns a ||| backends	count=2
arg	now ||| now	count=1
module	second item being files ||| files	count=1
function	[function_1] a for ||| [function_1] [function_2]	count=2
function	given httpresponse ||| patch	count=1
module_class	[module_1] [class_2] ||| [module_1] deserialization [class_2]	count=4
class	any permissions in ||| permissions mixin	count=1
function	names ||| to path	count=1
function	adds and resolves ||| add	count=1
class	geometry objects and ||| geosgeometry	count=1
function	return the field or ||| get	count=1
function	ordering fields ||| ordering	count=1
function_arg	model class it ||| class cls name	count=1
class	queryset to ||| set	count=1
class	[class_1] reset for ||| [class_2] [class_1]	count=4
class	table ||| base database	count=2
function	foreignkey ||| fk	count=2
class	for [class] initial ||| [class]	count=1
function	return an origin object ||| get template sources	count=1
arg	assign values ||| index values	count=2
module_class	this raw ||| models raw	count=1
module	app or project templates ||| core management	count=1
class	greenwich time in ||| time	count=1
function	spatial reference ||| srs	count=3
arg	members ||| recipient_list	count=1
class	files ||| file	count=1
function	that will set the ||| set	count=1
function	[function_1] select ||| [function_2] [function_1]	count=3
class	or has ||| model admin	count=1
module	and ||| db	count=1
module	example if the model ||| contrib gis utils	count=1
function	validates ||| to python	count=1
module	with ||| backends	count=4
function_arg	index [arg_2] ||| [function_1] [arg_2] extra_context	count=1
arg	naive datetimes in the ||| value	count=1
function	[function_1] [function_2] id ||| [function_1] [function_2]	count=1
function_arg	[function_1] fields or ||| [arg_2] [function_1]	count=3
function	attempts to register all ||| ensure registered	count=1
function	stack of dictionaries ||| update	count=1
class	handler should ||| handler	count=1
function	string ||| write string	count=1
function	test database ||| test	count=2
function	dated items this ||| dated items	count=2
function	[function_1] a savepoint ||| [function_2] [function_1]	count=2
class	reverse relation ||| reverse one to one	count=2
function	the extent3d ||| extent3d	count=1
function	a name for ||| suggest name	count=1
arg	and ||| result	count=1
class	corresponds to filename ||| gdalraster	count=1
function	[function_1] containing ||| [function_2] app [function_1]	count=1
class	day ||| format	count=3
function	returns the number of ||| count	count=2
arg	model is compatible ||| model	count=1
class	check ||| base model admin checks	count=1
function	a datetime [function_2] ||| [function_1] cast [function_2]	count=2
function	[function_1] rings ||| [function_1] [function_2]	count=3
module	using the correct ||| contrib	count=1
function	connection to ||| connection	count=2
module	is set on the ||| contrib sessions	count=1
function	a slash to ||| with slash	count=1
module	language-code if ||| utils	count=1
module	ctypes ||| gis gdal prototypes	count=1
function	that aren't hidden fields ||| visible fields	count=1
class	coerced to the ||| typed multiple choice	count=1
function	random ||| random	count=2
function	fields for this instance ||| fields	count=1
function_arg	parses [arg_2] ||| [arg_2] [function_1]	count=1
module	the returned ||| contrib	count=1
function	keyword arguments for constructing ||| kwargs	count=1
class	helper function for outputting ||| base	count=1
function	the creation ||| set creation	count=1
module	edit the object ||| contrib admin	count=1
function	returns a dictionary with ||| get	count=1
function	instance's validate_unique() method ||| validate unique	count=1
class	in this class are ||| user	count=1
module	the queryset is ||| db	count=1
function	type ||| type	count=13
module	context ||| template	count=1
function	[function_1] url to ||| [function_2] [function_1]	count=3
function	all objects related to ||| related objects	count=1
module	of fields ||| db models	count=1
function	projectstate object representing ||| project	count=1
arg	key/value pairs ||| data timeout	count=1
module	of the work of ||| contrib	count=1
class	of ||| date	count=3
function	value is empty string ||| empty value	count=1
function	[function] last_login date ||| [function] last	count=3
module	list of the ||| contrib	count=1
arg	instance finds an ||| instance	count=1
module	for checking the ||| contrib gis geoip	count=1
function_arg	exclude is ||| exclude obj	count=1
module	depends on results from ||| db models	count=1
module	of rows from ||| db models sql	count=1
arg	get_prefetch_queryset() ||| through_attr to_attr	count=1
module	urlconf can contain ||| views	count=1
class	for each ||| set	count=1
module	any applied migrations ||| migrations	count=1
function	the sql to select ||| geocol select	count=1
function	been imported and registered ||| operation	count=1
arg	number of times the ||| context	count=1
function	a boolean a list ||| list	count=1
module	returns a ||| utils translation	count=1
function	returns a ||| get	count=21
module	year i e ||| utils	count=1
module	from views ||| backends sqlite3	count=1
module	template tag helpers simple_tag ||| template	count=1
function_arg	model name ||| model name app_label	count=1
class	message for this command ||| command	count=1
function	have been imported and ||| lazy	count=1
function	init this serializer ||| init	count=1
function	rolls back the ||| rollback	count=1
function	last executed ||| last executed	count=1
arg	[arg_1] message ||| [arg_2] [arg_1]	count=10
arg	stream or a ||| stream_or_string	count=1
module	lines and returns a ||| backends	count=1
module	joins [module] through ||| [module]	count=1
module	of rows from ||| db models	count=1
class	if the queryset is ||| query	count=1
function	an app config containing ||| get containing app config	count=1
function	resolves the given fields ||| fields	count=1
function	the previous valid ||| previous	count=3
module	the operation ||| contrib	count=1
arg	instance change is true ||| change	count=1
module	the admin form ||| contrib admin	count=1
function	something modified ||| modified	count=1
arg	returns context [arg] helpful for ||| [arg]	count=1
function	a quoted [function_2] ||| [function_2] [function_1]	count=1
class	session is set to ||| session	count=1
function	an email [function_2] ||| [function_1] [function_2]	count=1
arg	given source ||| source	count=1
module	requests for configuration variables ||| conf	count=1
function	the admin url to ||| admin url	count=1
class	if the ||| set	count=1
module	indicating whether the this ||| gdal	count=1
arg	num_windows ||| num_windows timeout	count=1
arg	app or project templates ||| template	count=1
function	and when all the ||| lazy	count=1
module	can contain ||| views generic	count=1
function	savepoint ||| savepoint commit	count=1
function	single filter clause but ||| filter	count=1
arg	receiver to sender for ||| receiver sender	count=1
function	[function_1] interior ||| [function_1] [function_2]	count=1
arg	given app_label ||| app_label	count=1
function	returns a new ||| new	count=1
module	of digits and ||| db models	count=1
class	obtain the list of ||| base date list	count=1
function_arg	[function_1] objs via ||| [function_1] [arg_2]	count=1
function	this helps non-django ||| safe	count=1
module	returns a [module_2] ||| [module_2] [module_1]	count=2
function	and ||| lazy	count=3
module	or the ||| contrib admindocs	count=1
function	[function_1] the mask ||| [function_1] annotation [function_2]	count=1
class	command ||| command	count=6
module_class	[module_1] [class_2] which the returned objects ||| [module_1] [class_2]	count=1
function	mean ||| mean	count=1
function	[function] appropriate for ||| resolve [function]	count=2
module_class	are present usually 2 [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	[function_1] m2m table ||| [function_2] [function_1]	count=2
class	template and context ||| template	count=1
arg	truncates a ||| length truncate text truncate_len	count=1
function	a gml ||| gml	count=1
class	in this ||| user	count=1
module	directly (if the return_geom ||| contrib gis gdal	count=1
function	pk [function_2] ||| [function_1] [function_2]	count=6
module	of this raster ||| gdal raster	count=2
function	requests for configuration variables ||| init	count=1
function	file ||| messages	count=1
function	[function_1] manytomanyfield ||| [function_1] [function_2]	count=1
function	*models returns a dictionary ||| get	count=1
function	[function] module ||| [function]	count=3
function	token that ||| token	count=1
function	been imported ||| lazy	count=1
class	dummy ||| dummy	count=1
function_arg	etag return [arg_2] ||| [arg_2] [function_1]	count=1
module	the oracle ||| oracle	count=1
function	[function_1] the x ||| [function_1] [function_2]	count=1
module	tuple of the ||| contrib	count=2
module	bounding box of the ||| contrib	count=1
function	generate a cache ||| cache	count=1
function	see ||| validate	count=1
function	[function] max-age ||| [function] max	count=1
arg	specifying ||| request obj	count=1
module_class	[module_1] raw ||| [class_2] [module_1]	count=1
arg	lhs ||| lhs rhs	count=1
module	with elements of self ||| db backends	count=1
arg	parameters given the value ||| value lookup_type	count=1
function	for a single filter ||| filter	count=1
module	name of ||| db backends	count=1
function_arg	[function_1] [arg_2] ||| [function_1] column [arg_2]	count=9
arg	confirmation if the ||| old_database_name verbosity keepdb number	count=1
function	use for the object ||| object	count=1
arg	in ||| parser	count=2
function	widget ||| widget	count=1
class	adds 'objs' to ||| collector	count=1
module	[module_1] with a ||| [module_1] [module_2]	count=1
module	of tuples [ directory ||| management	count=1
function	by this backend based ||| get backend	count=1
module	if the view should ||| views generic	count=1
function	adds or updates the ||| patch vary headers	count=1
module_class	returns the [class_2] ||| [module_1] base spatial ref [class_2]	count=1
function	language the user ||| language	count=1
function	for the prepopulated ||| prepopulated	count=1
class	a transaction ||| wrapper	count=1
arg	values from value ||| value	count=1
function	[function_1] ordering field ||| [function_1] [function_2]	count=1
module	directory ||| commands	count=1
module	log the [module_2] ||| [module_1] [module_2]	count=4
arg	the old [arg] ||| [arg]	count=3
function	projectstate ||| project	count=1
function	for saving into a ||| db prep save	count=1
arg	geometry according ||| geom prec	count=1
function_arg	descend [arg_2] ||| [function_1] field [arg_2]	count=4
function	a form field ||| formfield	count=2
function	feature table [function_2] ||| [function_2] [function_1]	count=1
function	alais for point_count ||| num coords	count=1
arg	[arg_1] [arg_2] ||| [arg_1] iterable [arg_2]	count=3
function	that a new ||| new	count=1
module	[module_1] database ||| [module_1] [module_2] models	count=1
module_class	[module_1] '31' ||| [module_1] [class_2]	count=8
module	rows of values generate ||| models	count=1
module_class	[module_1] error which ||| [module_1] [class_2]	count=1
function	extra forms ||| extra forms	count=2
class	executes ||| schema editor	count=1
function	from ||| from	count=11
function	[function_1] text of ||| [function_2] [function_1]	count=2
function	for the extent3d ||| extent3d	count=1
function	of errors that aren't ||| errors	count=1
module	of geometries in the ||| contrib gis	count=1
module	can contain helpful ||| generic	count=1
module	yields blocks of ||| db models sql	count=1
function	file ||| file	count=10
module	list of ||| db models	count=4
function	locale name (en_us) ||| to locale	count=1
function	instance of the ||| instance	count=1
module	a list of (column_name ||| db backends	count=2
module	an integer to ||| contrib humanize templatetags	count=2
function	once per save yet ||| save	count=1
arg	the provided connection ||| connection	count=1
function	have been imported and ||| model	count=1
function	relative path to the ||| path	count=1
function	class setup immediately ||| setup	count=1
function	out as migration files ||| write migration files	count=1
module	m rows of values ||| db models	count=1
module	returns a geometry ||| gis	count=1
function	get a date ||| get date	count=2
arg	[arg] the ||| compiler field table_alias [arg]	count=1
class	without leading zeros ||| format	count=1
function	string and the parameters ||| params	count=1
function	georss point with ||| georss point	count=2
arg	[arg] same ||| [arg]	count=2
function	name for all ||| all	count=1
arg	found absolute path ||| root path prefix	count=1
function	model map ||| model map	count=2
class	object ||| operations	count=1
function	httpresponse object ||| vary	count=1
function	all the corresponding models ||| lazy model operation	count=1
function	method this helps ||| safe	count=1
function	the srid set ||| srid	count=1
arg	downloaded it? ||| mtime size	count=1
arg	inline formsets and a ||| form formsets change	count=1
function	trim ||| trim	count=1
function_arg	[function_1] url patterns ||| [arg_2] [function_1]	count=3
function	introspected foreign [function_2] ||| [function_2] [function_1]	count=1
function	changes the aliases in ||| aliases	count=1
function	create [function_2] ||| [function_1] [function_2]	count=2
module	determine the ||| contrib auth	count=2
module	the year i e ||| utils	count=1
module	oracle error code ||| backends oracle	count=1
class	sense of ||| node	count=1
function	of sql ||| sql flush	count=1
class	any permissions in ||| permissions	count=1
function	associated django models ||| django	count=1
arg	objs via ||| objs using	count=1
class	[class] file ||| file [class]	count=3
module	geometry from the ||| contrib	count=1
arg	request method ||| request	count=1
class	for ||| holder	count=1
module	it is compatible ||| utils	count=1
module	the ||| contrib gis geoip2	count=12
function	[function_1] normal forwards ||| [function_1] [function_2]	count=1
function	list or a tuple ||| list	count=1
function	returns ||| all locale	count=1
arg	modelform ||| request form	count=1
function	long integer into ||| long to	count=1
class	in ||| user settings	count=2
module	returns a list ||| utils	count=1
function	returns the number ||| num	count=1
function	srid set ||| srid	count=1
arg	python-compatible as ||| col_name used_column_names is_relation	count=1
function	relational fields ||| start relational	count=1
function	[function_1] chunks ||| [function_1] [function_2]	count=1
function	to see ||| validate	count=1
arg	files ||| files	count=1
function_arg	[function_1] field from ||| [function_1] model [arg_2]	count=2
module	returns a _pointer_ [module_1] [module_2] ||| [module_2] [module_1]	count=3
class	this class are satisfied ||| holder	count=1
class	a token ||| token	count=1
arg	update_pk is ||| update_pk	count=1
module	for files in the ||| contrib staticfiles	count=2
class	into a cache ||| cache	count=1
class	datetime ||| database operations	count=2
module	models to a ||| models sql	count=1
function	since the user last ||| since	count=1
arg	given httpresponse ||| response	count=2
function	[function] aggregation period ||| [function] list	count=1
class	of tuples [ directory ||| command	count=1
function	will set to none ||| set	count=1
class	return an unsaved instance ||| model	count=1
module	matches the ||| contrib auth	count=1
module	this queryset to the ||| models	count=1
function_arg	disconnect receiver ||| disconnect receiver	count=1
function_arg	y [arg_2] ||| [arg_2] [function_1]	count=2
module	the geoip library ||| contrib gis geoip	count=1
class	mapping this routine will ||| layer mapping	count=1
arg	app_label and ||| app_label	count=1
module	dirty flag ||| db backends	count=1
arg	year ||| year year_format	count=1
function	quoted [function_2] ||| [function_1] [function_2]	count=1
module	[module_1] geoip ||| [module_1] [module_2]	count=2
module	in this class are ||| conf	count=1
function	form field [function_2] ||| [function_1] [function_2]	count=4
function_arg	prepopulated_fields is a ||| prepopulated fields obj	count=1
function	a sorted [function_2] ||| [function_1] [function_2]	count=3
class	this class ||| settings holder	count=1
function	domain ||| split domain	count=1
class	queryset to the database ||| set	count=1
function	variables not in this ||| init	count=1
module	from the coordinate ||| contrib gis	count=1
module	that will be used ||| db models	count=1
function	current [function_2] ||| [function_1] [function_2]	count=9
arg	the model ||| model	count=1
function	a ||| lazy	count=2
function	class ||| formset factory	count=1
module	all models ||| models sql	count=1
function	empty ||| none	count=1
function	n-th clone ||| clone	count=1
module	template and ||| db backends spatialite	count=1
function	return ||| get action	count=1
module	the given ||| contrib gis db models	count=1
arg	in a form ||| request	count=1
module	returns the envelope as ||| contrib gis gdal	count=1
function	[function_1] this type ||| [function_1] for [function_2]	count=3
module	fields ||| db	count=1
arg	owns ||| layer_ptr ds	count=1
class	[class] individual ||| [class]	count=1
function	count of fields in ||| len	count=1
function_arg	wkt text [arg_2] ||| [arg_2] [function_1]	count=3
function	format string ||| format html	count=1
arg	and frees ||| result	count=1
function	checks the layer metadata ||| check layer	count=1
function	key from ||| key	count=1
function_arg	passed post [arg_2] ||| [function_1] [arg_2]	count=4
function	forwards direction ||| forwards	count=1
class	unsaved instance ||| model admin	count=1
function	parameters ||| params	count=1
class	email ||| email backend	count=4
arg	pushes other_dict ||| other_dict	count=1
arg	join path the candidates ||| names_with_path	count=1
function	clob column ||| clob	count=1
function	[function_1] pattern ||| [function_2] [function_1]	count=1
module	if there is a ||| utils translation	count=1
class	extra inline forms ||| inline	count=1
function	the test db ||| create test db	count=2
class	this [class] (e ||| [class]	count=1
class	field's ||| image field	count=1
function	[function] if ||| is [function]	count=3
function	str ||| get str	count=1
module	the field's ||| contrib gis	count=2
arg	model from old_model ||| model	count=1
arg	a context ||| context	count=1
class	password and ||| password	count=1
function	[function_1] annotations that ||| [function_2] [function_1]	count=4
function	the media prefix settings ||| get media prefix	count=1
class	the dirty flag ||| database	count=1
module	processing ||| utils translation	count=1
arg	the given function and ||| result func	count=1
function	cache key ||| cache key	count=3
function	a file object ||| file	count=1
module	any ||| db models sql	count=1
arg	content [arg_2] ||| [arg_1] [arg_2]	count=4
arg	found absolute path (or ||| root path prefix	count=1
function	count ||| count	count=2
module	shortcut to set this ||| contrib gis gdal	count=1
module	list ||| gis geos	count=1
module	function [module] the database ||| contrib [module]	count=1
function	"modelname") ||| lazy	count=1
function	of keyword arguments for ||| kwargs	count=1
arg	the backend the fields ||| fields	count=1
class	return ||| geometry field	count=1
arg	name dirs [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] help text ||| [function_2] [function_1]	count=1
arg	requisite ||| max_digits decimal_places	count=1
function	app or ||| template	count=1
arg	<label>, if the ||| attrs label_suffix	count=1
arg	if the form is ||| form	count=1
module	the [module_2] ||| [module_1] [module_2] models	count=1
function	fields for this ||| fields	count=1
module	sites is installed and ||| sites	count=1
function	("app_label", ||| operation	count=1
function	to create [function_2] ||| [function_1] like [function_2]	count=3
function	self connection settings_dict (a ||| signature	count=1
function	return the queryset ||| get queryset	count=3
class	for this field returns ||| bound field	count=1
function	and lookup ||| build lookup	count=1
function	number of ("app_label", "modelname") ||| lazy model operation	count=1
function	is shortened ||| is shorthand ip	count=2
function	the sql [function_2] ||| [function_2] by name [function_1]	count=1
arg	instance to ||| instance fields	count=1
function	the sql where clause ||| sql	count=1
function	the minimum level of ||| set	count=1
module	subclass ||| db models	count=1
module	and view names ||| db backends	count=3
function	translation [function] ||| to [function]	count=1
function	css ||| get css	count=1
class	this widget used to ||| choice widget	count=1
function	[function] slice ||| assign [function]	count=2
arg	field if it ||| field	count=1
arg	a sequence comprising the ||| table_name constraints column_to_field_name	count=1
arg	value and check it ||| value	count=1
function	models ||| operation	count=1
arg	object ||| request object message	count=2
function_arg	[function_1] [arg_2] ||| [function_1] safe [arg_2]	count=2
function	the number ||| num	count=1
class	in this class are ||| user settings	count=1
arg	will retrieve the ||| feat rel_model rel_mapping	count=1
arg	inline formsets and a ||| request form formsets change	count=1
function	system and adds ||| add srs entry	count=1
module	the ||| views	count=2
arg	message [arg_2] ||| [arg_2] level [arg_1] extra_tags	count=1
function	[function_1] something modified ||| [function_2] [function_1]	count=1
module	that will be ||| models	count=1
class	template rendered ||| template	count=1
function	treat them slightly differently ||| fk field	count=1
function	that yields the next ||| next	count=1
arg	user ||| user	count=2
function	edited object ||| edited object	count=1
arg	more than max_age seconds ||| max_age	count=1
module	updates the ||| utils	count=1
arg	string depending ||| compiler	count=1
class	by subclasses [class] object ||| [class]	count=1
module	a list of ||| utils translation	count=1
function_arg	[function_1] doesn't ||| [arg_2] [function_1]	count=3
function	all messages to ||| send messages	count=1
module	instances based on ||| models	count=1
module	i e '0' sunday ||| utils	count=1
function	string and ||| string	count=1
module	versions of oracle ||| oracle	count=1
arg	post form the ||| request	count=1
function_arg	[function_1] the value ||| [function_1] [arg_2]	count=2
function	use for the limit ||| limit	count=1
function	a connection to the ||| get new connection	count=1
module	to user-provides languages files ||| utils translation	count=1
function	[function] exterior ||| [function]	count=1
function	extracts a value from ||| datetime extract	count=1
class	messages to a cookie ||| cookie	count=1
arg	key does not exist ||| key default timeout version	count=1
module	displays ||| admin	count=1
function	representing this as ||| as	count=1
module	the node ||| contrib	count=1
class	that we ||| bytes	count=1
function	that need temp ||| generate temp	count=1
function	makes sure the test ||| prepare test	count=1
function	updates ||| update	count=2
arg	given field_name [arg_2] ||| [arg_2] [arg_1]	count=2
class	a list of ||| simple list filter	count=1
function	lazy ||| lazy	count=1
function	languages files ||| all locale	count=1
class	the fields ||| query	count=1
module	admin urls by escaping ||| admin	count=1
class	for this [class_2] ||| [class_2] [class_1]	count=3
function	extract transforms and lookup ||| build lookup	count=1
function	ensure all lazy i ||| lazy	count=1
module	the ||| backends base	count=2
function	from loading from ||| deferred loading	count=1
class	node ||| reference	count=1
function	path from this ||| path info	count=1
function	if ||| save form	count=2
function	localizable type and ||| localize	count=1
function	headers to a ||| headers	count=1
function	[function] of the ||| postgis lib [function]	count=1
class	class ||| model	count=1
function	group translatable [function] locale ||| process [function]	count=1
module	name of ||| db backends sqlite3	count=1
function	the login page ||| redirect to login	count=1
function	fields associated ||| get fields	count=1
module	requests ||| conf	count=1
class	this [class] rendered as ||| [class]	count=2
function	write all [function_2] ||| [function_1] [function_2] email_messages	count=4
arg	a [arg] ||| [arg] old_unique_together	count=3
function	only select certain ||| select	count=1
function	key ||| get key	count=1
class	exist in the database ||| database introspection	count=1
module	mysql has the following ||| db backends mysql	count=1
function	non-zero reference ||| active	count=1
function	date ||| date format	count=2
function	of dictionaries ||| update	count=1
function	year month and ||| format	count=1
function	declared choices ||| formfield for choice	count=1
function	[function_1] reverse ||| [function_2] [function_1]	count=2
arg	in a <label>, if ||| attrs label_suffix	count=1
module	is true if ||| contrib admin	count=1
class	list of all ||| base	count=2
class	table index ||| base database	count=1
arg	unsaved ||| request	count=1
module	coerce ||| admin templatetags	count=1
module	and lookup type ||| db backends	count=1
module	for ||| backends base	count=16
arg	of the changes so ||| changes graph	count=1
function	block ||| block	count=1
module	override [module_2] ||| [module_1] [module_2]	count=1
function	are satisfied from ||| init	count=1
function	keep [function] property ||| [function]	count=1
function_arg	[function_1] in table_names ||| [arg_2] [function_1]	count=2
function	we only select certain ||| add select	count=1
module	yields blocks of ||| models sql	count=1
function	a response using ||| response	count=1
module_class	the this [class_2] ||| [class_2] [module_1]	count=2
function	invalid but only ||| invalid	count=1
module	of data for ||| models	count=1
function	[function] 'name' ||| [function]	count=1
function	key on assignment ||| key	count=1
function	single ||| make single	count=1
function	prepare a ||| prepare value	count=1
function	last argument by ||| arg errcode	count=1
function_arg	class [arg_2] ||| [function_1] [arg_2]	count=1
function	table names that ||| table names	count=2
function	for relational fields ||| start relational field	count=1
function	results ||| results	count=1
arg	retrieves ||| cursor table_name	count=1
function_arg	headers [arg_2] ||| [function_1] [arg_2]	count=4
arg	path ||| path prefix	count=1
function	subclasses ||| handle	count=1
function	that [function] ||| [function] form	count=3
class	foreignkey or has choices ||| admin	count=1
function_arg	response [arg_2] ||| [arg_2] [function_1]	count=3
function	pk values [function_2] ||| [function_2] [function_1]	count=5
class	string for interoperability ||| safe data	count=1
module	resets ||| backends base	count=2
module	returns a 6-tuple ||| gis db backends	count=1
arg	instance to ||| form instance	count=1
function	in the given httpresponse ||| vary	count=1
module	via the ||| contrib	count=2
class	where clause and ||| where	count=1
function	[function_1] the layer ||| [function_2] [function_1]	count=6
arg	a lookup_type ||| lookup_type	count=4
function	adds a georss ||| add georss	count=2
function	minimum ||| min	count=1
function	non-schema-affecting options ||| altered options	count=2
function	host using the ||| host	count=1
class	class are ||| user settings holder	count=1
function	bytes ||| bytes	count=1
class	or project templates are ||| template command	count=1
function_arg	[function_1] [arg_2] and ||| [function_1] [arg_2]	count=12
function	search of ||| search	count=1
arg	the error [arg_2] ||| [arg_2] [arg_1]	count=1
module	backends can override ||| backends	count=1
arg	a boolean indicating ||| search_term	count=1
class	all ||| list	count=1
module_class	yields [module_1] [class_2] be rendered ||| [module_1] [class_2] iter	count=1
arg	in applications aren't ||| app_configs	count=1
module	and encoded ||| backends	count=1
arg	update_pk ||| update_pk	count=1
arg	or reverse ||| field_name	count=1
function	x-frame-options http header set ||| xframe options	count=1
function	[function_1] the queryset ||| [function_1] [function_2]	count=1
module	creates a ctypes ||| gdal prototypes	count=1
module	cache ||| translation	count=1
arg	in the request ||| request	count=1
function	adds and [function_2] ||| [function_1] distinct [function_2]	count=1
module	with the ||| contrib gis	count=3
function	field name is ||| field name	count=2
function	[function_1] [function_2] ||| [function_1] [function_2] field_name	count=1
function	to paginate by ||| paginate by	count=2
module	null" prevents mysql ||| backends mysql	count=1
class	a list of tuples ||| simple list filter	count=1
function	the storage engine ||| get storage engine	count=2
function	been imported and ||| model operation	count=1
module	flag ||| db backends	count=1
module	in this class ||| conf	count=1
module	the oracle error ||| backends oracle	count=1
arg	a ctypes function ||| func argtypes errcheck	count=3
function	the init ||| model init	count=1
function	path ||| path	count=6
class	associated ||| relation	count=1
arg	log-in page if necessary ||| test_func login_url redirect_field_name	count=1
class	closes ||| database wrapper	count=1
function	to fail silently ||| fail statements	count=1
function	options ||| options	count=2
module	the ||| contrib auth	count=29
function_arg	[function_1] attribute of ||| [function_1] selector [arg_2]	count=3
module	clone of ||| gis	count=1
function_arg	radio_fields is ||| radio fields obj	count=1
function_arg	of typical (app_label model_name) [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
class	transaction ||| database	count=1
module	list of tuples ||| management commands	count=1
module	dict of ||| db	count=1
class	confirm support for ||| database features	count=1
function	host using the environment ||| host	count=1
function	by the ||| get	count=1
module	a related ||| db models fields	count=1
module	add ||| db models sql	count=1
class	an actual date ||| date	count=1
function	it to decrypt ||| unsalt	count=1
function_arg	[function_1] in installed_apps ||| [function_1] [arg_2]	count=5
function	[function_1] user's username ||| [function_1] [function_2]	count=2
function	double value passed in ||| dbl	count=1
class	a migrationgraph and ||| migration	count=1
arg	fields or an item ||| fields label	count=1
arg	item of fields or ||| fields	count=1
function	been ||| operation	count=1
function	tuples and when ||| operation	count=1
function	the test ||| test	count=4
arg	connector is given the ||| connector negated	count=1
function	precision an integer or ||| precision	count=1
function_arg	[function_1] string ||| [function_1] [arg_2]	count=2
arg	retrieve the ||| feat rel_model rel_mapping	count=1
function	[function] exceptions ||| wrap [function]	count=1
function	dates and items ||| dated items	count=1
function	[function_1] add "value" ||| [function_2] [function_1]	count=1
module	pixel value for this ||| gis gdal	count=1
function	to generate new pk ||| pk	count=1
function_arg	returns the [function_1] [arg_2] for an update operation ||| [function_1] [arg_2]	count=2
arg	is a boolean a ||| obj	count=1
function	to fetch the ||| fetch	count=1
function	edited [function_2] ||| [function_1] [function_2]	count=4
class	from the module ||| settings	count=1
class	the objects into memory ||| objects	count=1
class	applying ||| set	count=1
class	a warning if the ||| base	count=1
module	satisfied from the ||| conf	count=1
function	[function_1] update the ||| [function_1] [function_2]	count=2
function	browser [function_2] ||| at [function_1] [function_2]	count=2
module	the ||| conf	count=1
function	country code and name ||| country	count=1
module	of (column_name ||| db	count=2
class	django model instance the ||| model admin	count=2
function	[function_1] [function_2] that joins ||| [function_1] [function_2]	count=1
function_arg	[function_1] a message ||| [arg_2] [function_1]	count=2
class	leading ||| date	count=1
function	returns a numpy array ||| array	count=1
class	password [class_2] ||| [class_2] [class_1]	count=2
function	static ||| static	count=1
class	the fields passed ||| query set	count=1
module	[module_1] of either ||| [module_1] [module_2]	count=4
class	we ||| store	count=1
function	in ||| vary	count=1
function	of paths to ||| paths	count=1
function	unique ||| unique	count=1
arg	keys from ||| keys version	count=1
module	[ ||| management commands	count=2
module	the specified ||| contrib gis	count=1
arg	given time field field_name ||| field_name	count=1
function	serve static ||| serve	count=1
module	return ||| admin	count=1
function	extracts a ||| extract	count=2
class	this form field ||| field	count=1
function	path ||| from path	count=1
module	and related stats functions ||| backends	count=1
arg	context cache ||| context	count=1
arg	[arg_1] with ||| [arg_2] [arg_1]	count=1
function	test db tables ||| destroy test db	count=2
function	a default ||| get default	count=1
class	for ||| base model admin	count=1
function	[ directory file ] ||| messages	count=1
module	be used to ||| models	count=1
function	http caching headers to ||| response headers	count=1
module	returns a ||| gis geos	count=1
module_class	on the [class_2] ||| [module_1] [class_2]	count=2
function	[function_1] db ||| [function_1] [function_2]	count=6
class	an unsaved instance ||| model	count=1
function	ordering by the ||| find ordering	count=1
class	the ||| query set	count=6
function	when all ||| lazy model operation	count=1
class	name of the file ||| file	count=1
module	makes sure the ||| contrib gis	count=1
class	[class] which the ||| [class]	count=2
function	[function_1] if field ||| [function_2] [function_1]	count=1
function	of choices for use ||| choices	count=1
function	[function_1] form for ||| [function_1] [function_2]	count=2
class	are satisfied from the ||| user	count=1
function	prefix ||| get prefix	count=1
class	this ||| user	count=1
function	all the parents ||| parents	count=1
function	[function_1] permission to ||| [function_1] change [function_2]	count=1
class	from the cache if ||| cache	count=2
function	wkb representation ||| wkb	count=1
function	given field ||| field	count=1
function	[function] in strptime ||| get year [function]	count=1
function	any otherwise uncaught ||| handle uncaught	count=1
function	[function] lookup ||| [function] prep	count=1
module	returns ||| contrib gis db	count=3
module	of the name to ||| models fields	count=1
function	of comparison ||| name converter	count=1
module	e '0' sunday to ||| utils	count=1
module	returns the ||| utils translation	count=1
class	column ||| field	count=1
module	that contains all the ||| contrib gis	count=1
arg	should respect that ordering ||| db db_field request	count=1
module_class	'0' to '365' ||| utils date format	count=1
module	and related ||| db backends sqlite3	count=1
module	if ||| contrib	count=1
module	multiple lines and returns ||| db backends base	count=1
class	instance ||| set	count=1
function	[function_1] field in ||| [function_1] related [function_2]	count=2
class	and a ||| apps	count=1
function	returns sets ||| as sets	count=1
module_class	of this geometry ||| gis gdal ogrgeometry	count=4
arg	the given encoding as ||| encoding	count=1
class	files [class] files ||| [class]	count=1
arg	path (or none if ||| root path prefix	count=1
module	print ||| core management	count=1
function	to user-provides ||| all locale	count=1
class	list ||| node list	count=1
function	[function_1] [function_2] ||| [function_1] for [function_2]	count=12
module	tables and views that ||| backends base	count=1
class	geometry ||| linear geometry mixin	count=1
module	within the ||| contrib gis	count=2
function	subtracts ||| decr version	count=1
function	[function_1] include ||| [function_2] [function_1]	count=1
function	number of ("app_label", ||| model operation	count=1
function	the creation [function_2] ||| [function_2] [function_1]	count=1
class	a query ||| query	count=1
function	when ||| model operation	count=1
function	(if it matches any ||| matches	count=1
module	(if the return_geom ||| contrib gis gdal	count=1
function	conflicts ||| conflicts	count=1
function	to [function_2] ||| [function_1] [function_2]	count=1
function	returns the form class ||| get form class	count=2
module	converts the ||| contrib admin	count=1
function	returns true if ||| has	count=1
module	[module_1] [module_2] ||| [module_1] [module_2]	count=257
function	*models returns ||| get	count=1
function	and a number ||| model operation	count=1
function	include any default ||| default	count=1
module	geometry or ||| gis db models	count=1
function	has [function_2] ||| [function_2] [function_1]	count=7
function	[function] 'name' parameter ||| [function]	count=1
class	the list of dates ||| date list	count=1
class	layer for example ||| layer	count=1
function	[function] objects ||| get make [function]	count=3
class	the form needs ||| base form	count=1
arg	add delta to value ||| delta version	count=1
function	placeholder sql and parameters ||| as sql	count=1
module	of 'year', ||| db backends base	count=1
function	number ||| count	count=5
function	slice of the list ||| slice filter	count=1
module	resets the dirty ||| db backends base	count=1
class	object ||| email message	count=1
arg	receiver from sender ||| receiver sender weak dispatch_uid	count=1
class	or ||| command	count=1
function	like settings ||| init	count=1
module	models to a set ||| db models sql	count=1
function	[function_1] non-schema-affecting options ||| [function_2] [function_1]	count=3
function	to add a ||| add message	count=1
function	name in its vary ||| vary	count=1
function	a number of ("app_label", ||| model	count=1
arg	and a function that ||| func	count=2
function	dimension ||| dim	count=1
function	table joins for the ||| joins	count=1
module	numeric i e '0' ||| utils	count=1
function	level ||| level	count=1
class	migration [class_2] ||| [class_1] [class_2]	count=3
function	related models (as opposed ||| related	count=1
function	the dated items this ||| get dated items	count=1
class	zeros i e ||| format	count=1
function	test db ||| create test db	count=2
module	that [module_2] ||| [module_2] [module_1]	count=2
function	expiry time of ||| expiry	count=1
function	function to [function_2] ||| [function_2] [function_1]	count=8
class	if the form ||| form	count=1
module	templates ||| management	count=1
function	app ||| app	count=1
function	max [function_2] ||| [function_2] [function_1]	count=3
arg	should respect ||| db_field request	count=1
module	expression the name of ||| db models	count=1
class	are satisfied from the ||| user settings	count=1
function	the module specified ||| init	count=1
module	and resets ||| db backends base	count=1
arg	css selector is ||| css_selector timeout	count=1
class	list of ||| date list view	count=1
module	database and [module_2] ||| [module_1] [module_2]	count=1
class	and compile-time options ||| gisoperations	count=1
function	add the ||| add	count=1
function	permission to change the ||| permission	count=1
function	lie on the surface ||| on surface	count=1
class	the database ||| database	count=7
function	if any non-schema-affecting ||| generate altered	count=2
class	specified in ||| user settings holder	count=1
function	[function_1] files ||| [function_2] [function_1]	count=5
module	if the queryset ||| db	count=1
function	a relative ||| relative	count=1
function	file ] ||| compile	count=1
module	true there will be ||| models	count=1
function_arg	[function_1] if update_pk ||| [arg_2] [function_1]	count=1
module	(structured like settings ||| db	count=1
arg	turns the given source ||| source	count=1
function	alter type ||| alter column type	count=1
function	django models ||| django	count=1
module	and resets the ||| backends base	count=1
arg	from given lhs ||| lookups lhs rhs	count=1
function	[function_1] name this ||| [function_1] [function_2]	count=4
module	routine for checking the ||| contrib gis	count=2
module	transaction ||| backends	count=1
function_arg	managers setting ||| managers subject	count=1
function	given an ogr feature ||| feature	count=1
arg	to outfile which is ||| outfile	count=1
arg	provide the related ||| related	count=1
module	description/name string for this ||| contrib gis gdal	count=1
function	name ||| name	count=28
module	object ||| utils	count=1
module	translation but ||| utils translation	count=2
module	based on whether the ||| contrib admin	count=1
arg	check if a model ||| model	count=1
module_class	returns the [class_2] ||| [module_1] backends [class_2]	count=1
function	postgis [function_2] ||| [function_1] [function_2]	count=3
class	for the index ||| index	count=1
module	operation ||| migrations	count=1
module	sessions from ||| sessions backends	count=1
module	to customize the ||| contrib auth	count=1
function	null ||| null	count=5
function	fields associated to the ||| fields	count=1
function	returns the ||| get language	count=1
function_arg	filter_horizontal [arg_2] ||| [arg_2] [function_1]	count=4
function	of ("app_label", "modelname") tuples ||| operation	count=1
function_arg	lookup [arg_2] ||| [function_1] [arg_2]	count=1
function	http caching headers ||| headers	count=1
module	to override [module_2] ||| [module_2] [module_1]	count=1
function	[function_1] a new ||| [function_2] [function_1]	count=1
module	undo the effects ||| contrib	count=1
module	command names ||| management	count=1
arg	the argument ||| arg	count=1
function	keyword arguments dictionary that ||| kwargs	count=2
module	easy lookups by key ||| utils translation	count=1
arg	given other ogrgeomtype ||| other	count=1
class	urlconf can ||| view	count=1
class	is not bound ||| bound field	count=1
arg	null placeholder needed for ||| placeholder	count=1
function	has a prefix ||| prefix	count=1
arg	all files in all ||| ignore_patterns	count=1
module	of tuples [ ||| management	count=1
function	dictionary of database definitions ||| init	count=1
function	placeholder sql ||| assemble as sql	count=1
function	[function_1] next ||| [function_1] [function_2]	count=1
module_class	[module_1] cookie returning ||| [module_1] [class_2]	count=2
module	on whether the ||| contrib admin	count=1
arg	true ||| request	count=1
class	the active language ||| locale	count=1
module	this ||| gdal raster	count=1
module	aggregate [module] for the ||| contrib gis [module]	count=1
module	the two ||| contrib gis	count=1
function	a signed cookie ||| signed cookie	count=2
function	tuples ||| messages	count=1
function	the date [function_2] ||| [function_2] [function_1]	count=1
function	adds or updates the ||| vary headers	count=1
module	of different return values ||| models fields	count=1
class	greenwich time ||| time	count=1
module	the geometry and ||| contrib	count=1
function	return an instance of ||| get	count=1
function	[function_1] greater than ||| [function_1] [function_2]	count=5
class	check ||| model admin checks	count=2
function	of paths to user-provides ||| locale paths	count=1
function	fields associated to ||| fields	count=1
module	a transaction ||| backends	count=1
arg	[arg_1] y ||| [arg_1] [arg_2]	count=2
function	which is the symmetric ||| sym	count=1
function	middleware ||| middleware	count=1
class	the connection was explicitly ||| base database wrapper	count=1
function	ogr type ||| type	count=1
function	or updates the ||| patch vary	count=1
function	limit_choices_to for this form ||| limit choices to	count=1
arg	is a dictionary ||| obj	count=2
module	m rows of ||| db models sql	count=1
module	if the ||| models	count=1
function	isn't being used ||| new	count=1
module_class	with the [class_2] ||| [module_1] base base spatial [class_2]	count=1
function	[function_1] placeholder ||| [function_1] [function_2]	count=1
module	key checks after they ||| backends	count=1
class	number ||| query set	count=1
module	tuples [ directory ||| core	count=1
function	manytomanyfield ||| m2m field	count=2
module	this queryset ||| db models	count=1
function	meta class for the ||| meta	count=1
class	this expression ||| expression	count=2
arg	times the ||| context	count=1
function	field to not ||| ask not	count=2
function	the app or project ||| template	count=1
module	forms in the formset ||| forms	count=1
class	instance ||| model admin	count=2
function	[function_1] model with ||| [function_2] [function_1]	count=1
function	all the ||| model operation	count=1
module	(if the return_geom keyword ||| contrib gis	count=1
function	relation ||| to one	count=1
function	have been imported and ||| lazy model	count=1
arg	requires gdal ||| ct	count=1
function_arg	list_per_page [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	checks a [arg_2] ||| [arg_2] [function_1]	count=5
arg	using formats [arg] ||| number [arg]	count=1
class	the form migration instance ||| migration executor	count=1
class	chop ||| migration autodetector	count=1
class	[class_1] used to ||| [class_2] [class_1]	count=6
class	the month without ||| date format	count=1
function	login page passing ||| to login	count=1
class	is head ||| xview middleware	count=1
function	the null ||| new type null	count=1
function_arg	dated items [arg_2] ||| [arg_2] [function_1]	count=1
function	modelform return an unsaved ||| save	count=1
function	or project templates ||| template	count=1
function	[function_1] for a ||| [function_2] [function_1]	count=7
function	satisfied from the ||| init	count=1
function	load [function] object from ||| import [function]	count=1
function	updates the po ||| write po	count=1
function	that extracts ||| extract	count=2
function	of extra ||| get extra	count=1
function	the limit ||| limit	count=1
function	is invalid but only ||| invalid	count=1
arg	returned instance ||| form instance	count=1
arg	source sequence ||| source	count=1
function	all available datetimes ||| datetimes	count=1
module	units of the ||| contrib gis gdal	count=2
arg	the time zone ||| timezone	count=1
function	defaults ||| defaults	count=1
function	string [function] ||| [function]	count=1
function	session [function] ||| [function]	count=3
module	mapping the ||| contrib admin	count=1
module	custom [module] ||| contrib [module]	count=1
module	returns none because ||| gis db	count=1
class	order ||| base form set	count=1
function	(if it matches ||| matches	count=1
module	flag ||| base	count=1
function	datetime value [function_2] ||| [function_2] [function_1]	count=2
function	as kmz using ||| render to kmz	count=1
function	smallest [function] polygon ||| [function]	count=1
module	database [module_2] ||| [module_1] [module_2]	count=2
module	returns false if the ||| contrib gis geos	count=1
function	are satisfied from the ||| init	count=1
class	point ||| point	count=2
class	configuration variables not in ||| user	count=1
function	the null ||| type null	count=1
function	initializes on the feature ||| init	count=1
arg	from the ||| version	count=1
function_arg	[function_1] the model ||| [function_1] connection_alias [arg_2]	count=2
class	the ||| state	count=1
arg	an unsaved instance ||| request form	count=1
module	(if the ||| contrib gis gdal prototypes	count=1
module	a geos [module_2] ||| [module_1] [module_2]	count=1
class	migrationgraph and ||| migration	count=1
function	shortcut for the common ||| lazystr	count=1
arg	instance to ||| form instance fields exclude	count=1
module	configuration ||| conf	count=1
function	model map generation ||| model map	count=2
class	of the queryset ||| query set	count=1
function	of the query ||| query	count=1
function_arg	layout in the ||| bidi parser token	count=1
function	object ||| patch	count=1
class	a genericforeignkey whose ||| generic relation	count=1
module	(for example if the ||| contrib gis utils	count=1
function	feature ||| feature	count=1
function	special way ||| get backend	count=1
class	applying this queryset ||| query set	count=1
class	form instance with the ||| form	count=1
function	[function_1] main version ||| [function_2] [function_1]	count=1
arg	into strings ||| obj	count=1
module	can contain helpful extra ||| views generic	count=1
class	return a list of ||| simple list filter	count=1
arg	to a specified tolerance ||| tolerance	count=1
function	[function_1] formsets ||| [function_2] [function_1]	count=2
class	are satisfied from ||| settings	count=1
arg	to the arg a ||| arg	count=1
arg	system ||| app_configs	count=1
class	day of the month ||| date format	count=1
module	backends (memcached ||| backends	count=1
arg	the database [arg] the ||| compiler field table_alias [arg]	count=1
class	feature ||| layer	count=1
function	of template ||| template	count=1
class	true ||| model admin	count=2
function	or updates ||| patch	count=1
function	[function_1] counter value ||| [function_1] [function_2]	count=3
class	from applying this ||| query	count=1
function	maximum length of ||| max name length	count=1
function	etags given in ||| etags	count=1
function_arg	min_num [arg_2] ||| [function_1] [arg_2]	count=3
class	for base [class_2] ||| [class_2] [class_1]	count=3
module	has ||| admin templatetags	count=1
module_class	related [class_2] ||| [module_1] foreign [class_2]	count=1
function	the test ||| destroy test	count=1
function	nodelist if debug ||| nodelist	count=1
class	this handler ||| handler	count=1
function	is empty string or ||| empty	count=1
function	sql expression ||| sql	count=1
function	[function_1] rings ||| [function_2] [function_1]	count=3
module	file ||| core	count=2
arg	inline formsets and a ||| form formsets	count=1
class	essentially the opposite ||| set	count=1
module	for this ||| gis gdal	count=5
module	return the linear ||| contrib gis gdal	count=1
function	errors that ||| errors	count=1
arg	password ||| password	count=1
arg	other ogrgeomtype the ||| other	count=1
module_class	[module_1] geometry to ||| [module_1] [class_2]	count=2
function	the future ||| future	count=1
function	returns a list of ||| all	count=1
function	[function_1] model map ||| [function_2] [function_1]	count=1
class	the database ||| database introspection	count=1
function	function to create a ||| create generic related	count=1
module_class	[module_1] [class_2] the returned objects have ||| [module_1] [class_2] annotate	count=1
class	of dictionaries in the ||| context	count=1
arg	given a datatuple ||| datatuple	count=1
module	applying ||| models	count=1
module	or the user ||| contrib admindocs	count=1
function	iterator over ||| iterator	count=1
module	numeric ||| utils	count=1
class	a ||| base	count=5
class	the corresponding ||| apps	count=1
class	to ||| query	count=1
module	model _meta fields ||| models fields	count=1
function	[function_1] non-schema-affecting options ||| [function_1] [function_2]	count=3
module	of the geometry and ||| contrib	count=1
class	module specified ||| settings	count=1
class	'1' ||| date format	count=1
class	a deserialization error ||| deserialization error	count=2
module	compatible with the ||| contrib	count=1
class	raster initializing it using ||| spatial proxy	count=1
function	tuples and when ||| lazy model	count=1
arg	a ctypes ||| argtypes errcheck	count=2
function	are required ||| initial	count=1
module	multiple lines and ||| db backends	count=1
module	for point_count ||| gis	count=1
class	is ||| meta path importer	count=1
function	to add "value" to ||| add to	count=1
function	union ||| union	count=3
function_arg	[function_1] [arg_2] ||| [function_1] handler [arg_2]	count=8
class	the field has an ||| bound field	count=1
module	a list of ||| db	count=4
function	prepopulated [function_2] ||| [function_1] [function_2]	count=2
function	what language the user ||| get language from	count=1
module	the database ||| models	count=1
function	[function_1] function to ||| [function_2] [function_1]	count=1
class	this [class] relative ||| [class]	count=1
function_arg	key on [arg_2] ||| [function_1] [arg_2]	count=1
function	deserialize a stream or ||| deserialize	count=1
function	of the next interval ||| get next week	count=1
module	consisting [module] ||| [module]	count=3
module	the client for ||| contrib sessions backends	count=1
module	the object represented by ||| contrib	count=1
function	tuples ||| compile messages	count=1
class	the opposite ||| query	count=1
function_arg	list of typical (app_label [function_1] [arg_2] ||| [function_1] tuples [arg_2]	count=2
module	optimized for [module] ||| [module]	count=3
function	return the expiry ||| expiry	count=1
module	and [module] ||| [module] gis	count=3
class	given django model ||| base model	count=2
module	are added via the ||| contrib	count=1
module	list of ||| db	count=4
module	a list of ||| commands	count=1
module_class	raster [class_2] ||| [module_1] [class_2]	count=3
function	column names to model ||| model	count=1
module	codename name for ||| auth management	count=2
function	table joins for the ||| setup joins	count=1
module	list of ||| utils translation	count=1
class	before migrating a ||| database wrapper	count=1
function_arg	[function_1] name value ||| [arg_2] [function_1]	count=1
function	index sql statements ||| field indexes sql	count=1
class	("app_label", "modelname") ||| apps	count=1
module	the model _meta fields ||| models fields	count=1
module_class	the this [class_2] ||| [module_1] [class_2]	count=2
class	handler ||| file upload handler	count=1
class	used to enable ||| choice	count=1
function	a projectstate ||| project	count=1
function	header in ||| vary	count=1
function	chunks ||| chunks	count=2
class	cache at once ||| cache	count=1
function	app ||| get app	count=1
function	current language [function_2] ||| [function_2] [function_1]	count=1
arg	a schema_editor for a ||| schema_editor	count=1
module	_meta fields instance of ||| db models fields	count=1
function	for the m2m ||| get m2m	count=1
function_arg	[function_1] manager ||| [arg_2] [function_1]	count=3
class	check ||| admin checks	count=1
function	usable by this backend ||| backend	count=1
module	pixels of the ||| contrib gis	count=1
class	not in this ||| user settings holder	count=1
class	[class_1] for certain ||| [class_2] [class_1]	count=4
function	model [function_2] ||| [function_1] [function_2]	count=2
function	'second', ||| trunc	count=2
module	sql ||| db models sql	count=1
function	[function_1] [function_2] false if there's an ||| [function_1] [function_2]	count=1
function	string ||| from string	count=1
module	the admin form ||| contrib admin templatetags	count=2
function	proj 4 library used ||| proj4	count=1
function	override uncaught ||| uncaught	count=1
function	to return fields of ||| get fields	count=1
function	objects of [function_2] ||| [function_2] [function_1]	count=3
module	the names ||| contrib admin	count=1
class	the date field by ||| date list	count=1
class	any permissions ||| permissions mixin	count=1
arg	or project ||| template	count=1
class	a query [class_2] ||| [class_2] [class_1]	count=1
module_class	usually 2 but can [module_1] [class_2] ||| [module_1] [class_2]	count=2
class	resets the dirty ||| wrapper	count=1
class	not this handler ||| upload handler	count=1
function_arg	css class [arg_2] ||| [function_1] selector [arg_2]	count=1
arg	decorator that defines ||| klass	count=2
module	rows of values ||| models sql	count=1
function	delete the ||| delete	count=1
function	setup immediately ||| setup	count=1
module	return the uniqueness ||| contrib	count=1
arg	creates the ||| autoclobber	count=1
class	the current context ||| context	count=1
function	data type ||| db type	count=1
module	rows of values generate ||| db models sql	count=1
function	user-provides ||| locale	count=1
function	the command class ||| load command class	count=2
function	[function_1] templates from ||| [function_1] [function_2]	count=1
arg	python-compatible as a ||| col_name used_column_names is_relation	count=1
module	context manager and ||| backends	count=1
module	with ||| db backends base	count=4
module	yields blocks of ||| models	count=1
function	extracts a value ||| datetime extract	count=1
class	to a cookie ||| cookie	count=1
arg	the filename content mimetype ||| filename content mimetype	count=1
function	list of ||| list	count=11
function	by this backend based ||| backend	count=1
function	[function] change_map ||| [function]	count=3
function	a field ||| field	count=1
function	a nested ||| nested	count=1
function	this class ||| init	count=1
arg	given function and frees ||| result func	count=1
class	this class are satisfied ||| settings holder	count=1
module	and encoded as ||| sessions backends	count=1
function	true if the name ||| is	count=1
class	the opposite of ||| query set	count=1
function	set a bunch ||| set many	count=1
function_arg	[function_1] lock ||| [function_1] [arg_2]	count=9
function	[function] can ||| related query [function]	count=3
arg	arg to the ||| arg	count=1
function	tries to create ||| create	count=1
function	a for [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] by ||| [function_1] [function_2]	count=5
function	parse a ||| parse apps	count=1
class	load the objects ||| objects	count=1
class	the database into a ||| database	count=1
module	true if ||| contrib admin	count=1
function	handles merging together ||| handle merge	count=1
function	way of comparing ||| anonymous	count=1
function	header should be added ||| needs	count=2
class	a password [class_2] ||| [class_2] [class_1]	count=2
arg	and a schema_editor ||| schema_editor	count=1
function	[function_1] all objects ||| [function_2] [function_1]	count=1
function	prepopulated fields for ||| prepopulated fields	count=2
arg	using values from self ||| using update_fields	count=1
function	from the module ||| init	count=1
class	true if the queryset ||| set	count=1
arg	parameters for null placeholder ||| placeholder params	count=1
function	mask [function] select items ||| set [function]	count=1
function	[function_1] [function_2] input ||| input [function_1] [function_2]	count=3
function	a ||| model	count=2
function	method this helps non-django ||| safe	count=1
function	the time zone ||| timezone	count=1
function	header in the ||| patch	count=1
arg	converts a module ||| module	count=1
function	cache ||| add to cache	count=1
function	place on the root ||| root	count=1
function	performs any cleaning ||| clean	count=1
function	test db tables ||| clone test db	count=2
class	sunday to ||| format	count=1
function	generate a random password ||| random password	count=1
module	in this ||| conf	count=1
class	the year i e ||| date	count=1
arg	[arg_1] response object ||| [arg_1] [arg_2]	count=1
class	string for ||| safe	count=1
function	[function_1] for a ||| contenttypes content type manager [function_1] [function_2]	count=1
arg	[arg] contrib ||| [arg]	count=1
arg	[arg_1] the given ||| [arg_2] [arg_1]	count=1
function	url is safe ||| url	count=1
function	range ||| range	count=1
function	number of interior rings ||| num interior rings	count=1
function	tuples ||| lazy	count=1
function	through any [function] models ||| path info with [function]	count=1
class	'1' ||| format	count=1
module	tuples [ ||| core	count=1
function	helps ||| html	count=1
function_arg	[function_1] message ||| [arg_2] [function_1]	count=2
function	command class ||| load command class	count=2
arg	the returned instance to ||| instance fields exclude	count=1
function	group translatable [function] ||| process [function]	count=1
function	app ||| handle template	count=2
module	given geometry ||| gis	count=1
arg	instance ||| instance value	count=2
function	null field to a ||| null	count=2
module	the description ||| contrib admindocs	count=1
arg	path ||| path	count=10
arg	instance ||| instance	count=8
module	("app_label", "modelname") tuples ||| apps	count=1
function	name for the ||| name	count=2
function_arg	[function_1] the response ||| [arg_2] [function_1]	count=1
arg	index of ||| index	count=1
class	the queryset is ||| query	count=1
function	what language the ||| get language	count=1
function	lie on the surface ||| surface	count=1
function	[function_1] key ||| [function_2] [function_1]	count=13
function	as safe ||| safe	count=1
function	that ||| output	count=4
module	this [module_2] ||| [module_1] [module_2]	count=12
class	of form in ||| base form set	count=1
function	and either the ||| process	count=1
function	list of paths to ||| list	count=2
function	checks each table ||| check	count=2
arg	take a function ||| function	count=1
function	for configuration variables ||| init	count=1
function	the given fields to ||| fields	count=1
class	list of dates and ||| base date list view	count=1
function	extra ||| get extra	count=2
function	when all ||| model	count=1
class	in this class are ||| holder	count=1
arg	a function and ||| function	count=1
module	django's auth ||| contrib auth	count=1
module	zeros i e '1' ||| utils	count=1
module	an admin ||| admin	count=1
module	of layers within the ||| contrib gis	count=1
arg	receiver from sender ||| receiver sender weak	count=1
arg	it's ||| obj model val label	count=1
arg	func to be called ||| func using	count=1
function	form field [function_2] ||| [function_2] [function_1]	count=4
function	to fail silently ||| fail	count=1
function	stddev as ||| stddev	count=1
function	leaving a dangling connection ||| temporary connection	count=1
function	returns the [function] of ||| postgis proj [function]	count=1
module	this geoqueryset ||| gis db	count=1
module	value and ||| db backends postgis	count=1
function	based on given ||| extract	count=1
function	returns sets ||| topological sort as sets	count=1
module	coordinate order of the ||| contrib	count=1
class	the given database tables ||| database operations	count=1
arg	filename content [arg_2] ||| [arg_2] [arg_1]	count=4
function	system user's username ||| system username	count=2
module	[module_1] postgresql ||| [module_1] [module_2]	count=2
module	widget identified by the ||| contrib	count=1
module	the spatial_ref_sys ||| contrib	count=1
function	[function_1] config ||| [function_2] [function_1]	count=2
function	return a list ||| get	count=3
arg	hidden ||| form index	count=1
module	models have been imported ||| apps	count=1
function	need temp ||| generate temp	count=1
class	a dictionary mapping each ||| query set	count=1
arg	given other ||| other	count=1
arg	schema_editor for a live ||| schema_editor	count=1
function_arg	[function_1] string depending ||| [arg_2] [function_1]	count=1
module	of (column_name ||| db backends sqlite3	count=1
function	session key that ||| session key	count=2
function	modelform ||| form	count=1
arg	one item of list_filter, ||| obj model item label	count=1
module	from a [module] tag ||| [module]	count=1
module	deserialize ||| core serializers	count=4
module	user-provides languages ||| utils	count=1
function	only select certain ||| add select	count=1
function	[function] spatial parameters ||| [function] prep	count=2
function	[function_1] static prefix ||| [function_2] [function_1]	count=4
function	object represented ||| object	count=1
class	list of ||| command	count=1
module	backends can override this ||| db backends base	count=1
arg	error [arg_2] ||| [arg_1] [arg_2]	count=1
function	or raster or a ||| get	count=1
function	[function_1] attribute ||| [function_1] [function_2]	count=3
module	passed ||| db	count=1
class	the results from applying ||| query set	count=1
module	can ||| generic	count=1
module	a list of ||| translation	count=1
function	a slash to ||| slash	count=1
class	names ||| raw query set	count=2
module	list of operation ||| db migrations	count=2
arg	file system path ||| path	count=1
arg	[arg_1] index/unique constraint ||| [arg_2] [arg_1]	count=1
function	returns an empty list ||| get	count=1
module	returns [module] ||| [module] gis db	count=5
function	adds or updates ||| patch vary headers	count=1
arg	in aliases ||| aliases	count=1
module	[module_1] that tries ||| [module_1] [module_2]	count=2
arg	change is true ||| request form change	count=1
arg	[arg_1] password ||| [arg_1] [arg_2]	count=3
arg	use in a form ||| request	count=1
module	lookups by key ||| utils translation	count=1
function	the migrations in the ||| migrations	count=1
function	return a dictionary of ||| get	count=1
function	[function_1] names that ||| [function_1] [function_2]	count=4
arg	on routines that ||| cargs	count=1
arg	error checking for routines ||| result func cargs	count=1
class	defined in staticfiles_dirs ||| file system	count=1
arg	returned instance ||| instance fields	count=1
arg	provided connecting operator ||| connector sub_expressions	count=1
module_class	return [module_1] [class_2] the ||| [module_1] [class_2] get	count=1
module	controls whether the ||| contrib	count=1
module	(if the ||| contrib gis	count=1
module	[module] default ||| [module]	count=3
function	the given test redirecting ||| test	count=1
arg	an unsaved instance change ||| form change	count=1
module	of digits and ||| models fields	count=1
function	limit_choices_to for this model ||| limit choices to	count=1
arg	limit ||| value limit	count=1
function	the purposes of comparison ||| table name converter	count=1
function	tag ||| tag	count=1
function_arg	[function_1] doesn't contain ||| [arg_2] [function_1]	count=3
module	given string ||| utils	count=1
module	of what the action ||| db migrations	count=1
module	[module] cookie ||| [module] messages	count=3
arg	a regex with flags ||| regex flags	count=1
arg	checking for routines ||| cargs	count=1
function	prefix [function_2] ||| [function_2] [function_1]	count=2
class	list of dates ||| date list	count=1
module	of values generate ||| db models	count=1
arg	in default_settings if possible ||| default_settings	count=1
module	database fields ||| db backends	count=1
module	[module_1] [module_2] ||| [module_1] gis gdal [module_2]	count=1
function	clone of the ||| clone	count=1
function	current time zone to ||| current timezone	count=1
function	[function_1] columns in ||| [function_1] [function_2]	count=12
class	reference [class_2] ||| [class_1] [class_2]	count=1
module	geometry to this ||| gis gdal	count=1
class	each ||| base form set	count=1
class	the field has ||| bound field	count=1
class	module specified in ||| user settings holder	count=1
function	validators ||| validators	count=3
module	[module] client ||| [module]	count=1
arg	start is the position ||| start	count=1
function	by this backend ||| backend	count=1
function	objects of [function_2] ||| [function_1] [function_2]	count=1
function	[function] max-age from ||| [function] max	count=1
class	or has choices ||| base model admin	count=1
function	the data ||| data	count=1
module	of ||| gis db backends	count=2
function	[ directory file ||| compile messages	count=1
function	displayed as links on ||| list display links	count=1
function	of sql ||| sql	count=1
arg	which ||| parameters	count=1
function	select certain related ||| select related	count=1
module	returns a dictionary of ||| gis geoip	count=1
class	numeric i ||| format	count=1
class	given database ||| database operations	count=1
module	[ directory ||| core management commands	count=1
arg	to ||| to	count=1
module	and ||| db backends	count=19
module	deep-clone ||| db	count=1
function	it matches any ||| matches patterns	count=1
arg	[arg_1] message to ||| [arg_2] [arg_1]	count=10
arg	dimension changed ||| new_type	count=1
module	the fields passed ||| db	count=1
function	initializes ||| init	count=2
module	and view names in ||| db backends	count=3
function	a model from ||| get model	count=2
module	the translation [module_2] ||| [module_2] [module_1]	count=3
function	the database schema ||| database	count=2
function	number [function_2] ||| [function_2] [function_1]	count=4
class	memcached deals ||| memcached	count=1
module	indicating whether the set ||| contrib	count=1
function	[function_1] prefix ||| [function_1] [function_2]	count=10
function_arg	[function_1] httpresponse expires ||| [function_1] [arg_2]	count=1
module	or directly (if the ||| contrib gis	count=1
class	collection ||| geometry collection	count=3
class	is or may be ||| field	count=1
function	the passed ||| to	count=1
module	the ||| apps	count=1
module	returns a tuple with ||| db backends	count=1
function	models have been imported ||| model operation	count=1
module	true ||| db	count=1
arg	string of space-separated ||| extra_classes	count=1
class	a number ||| apps	count=1
module	is ||| core checks	count=1
module	if the queryset ||| models	count=1
arg	assign [arg_2] ||| [arg_2] [arg_1]	count=3
function	[function_1] 2 ||| [function_2] [function_1]	count=1
function	of fields to ||| fields	count=1
function_arg	[function_1] [arg_2] ||| [function_1] resolver [arg_2]	count=9
arg	[arg_1] content mimetype ||| [arg_1] [arg_2]	count=3
module	is set on the ||| contrib sessions backends	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1] extra_tags	count=6
function	[function_1] object for ||| contenttypes content type manager [function_1] [function_2]	count=1
function	geometry [function_2] ||| [function_1] [function_2]	count=7
arg	header in the given ||| response	count=1
function	the layer ||| layer	count=1
module	the extra ||| contrib	count=1
function	project ||| handle template	count=2
module	return an ||| contrib	count=1
module	if you're testing migrations ||| db migrations	count=1
module	alias for ||| gis	count=2
module	hook for customizing ||| admin	count=2
class	dictionary of ||| connection	count=1
function	[function_1] null field ||| [function_2] [function_1]	count=4
class	of files called ||| files	count=1
module	a feature from the ||| contrib gis	count=1
class	this widget used ||| choice widget	count=2
class	returns ||| safe data	count=1
function	modelform return an unsaved ||| form	count=1
function_arg	and lookup [arg_2] ||| [arg_2] [function_1]	count=1
module	all tables and views ||| backends	count=1
function_arg	validators for [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] klass ||| [function_1] selector [arg_2]	count=2
module	if the view ||| views generic	count=2
class	essentially ||| set	count=1
class	through the forward relation ||| forward many to one	count=1
class	wrapped ||| lazy	count=1
class	database ||| connection handler	count=2
function	have associated django models ||| django	count=1
function	mask [function] select ||| set [function]	count=1
module	for further processing ||| translation	count=1
class	can be ||| field	count=3
arg	update_pk is ||| using fields update_pk	count=1
class	interoperability ||| safe data	count=1
function_arg	[function_1] a source ||| [function_1] [arg_2]	count=1
arg	and password ||| password	count=1
module	sense ||| utils	count=1
function	to aware [function_2] ||| [function_2] [function_1]	count=2
class	safe results ||| safe	count=2
function	a reverse ||| reverse geom	count=1
arg	instance to the ||| instance	count=1
module	given c ||| prototypes	count=1
class	the last value ||| value	count=1
class	this command performing ||| base command	count=1
class	construct ||| model admin	count=1
class	if the queryset ||| set	count=1
class	log ||| log	count=2
function_arg	[function_1] validationerror containing ||| [arg_2] [function_1]	count=1
function	date [function_2] ||| [function_2] [function_1]	count=4
function	the test db ||| destroy test db	count=2
function_arg	fields and [arg_2] ||| [function_1] [arg_2]	count=1
function	the first cache key ||| cache key	count=1
arg	a regex [arg_2] ||| [arg_1] [arg_2]	count=1
function	a date ||| datefield	count=1
function	adds name ||| add	count=1
class	project templates are ||| command	count=1
module	on results from ||| models	count=1
function_arg	[function_1] update_pk ||| [arg_2] [function_1]	count=1
function_arg	[function_1] function that ||| [function_1] envelope [arg_2]	count=1
function	of db_type(), providing ||| parameters	count=1
arg	a year ||| year year_format month	count=1
arg	be ambiguous the alias ||| alias	count=1
module	a list of operation ||| db migrations	count=1
arg	given ||| response	count=1
function	warning that the ||| warning for	count=1
function	start of the join ||| start	count=1
class	from the module specified ||| holder	count=1
module	loaders ||| template loaders	count=2
arg	a password_changed() ||| user password_validators	count=1
module	lines and returns a ||| backends base	count=1
function	the prefix to ||| prefix	count=1
module	this will ||| gis utils	count=1
function	adds a [function_2] ||| [function_2] [function_1]	count=4
arg	operations suggests a ||| cls ops	count=1
function	or project templates are ||| handle	count=1
module	the fields passed into ||| models	count=1
module	[module] given ||| [module] geos	count=2
class	applying ||| query set	count=1
function	date ||| date from	count=1
function	an index ||| index sql	count=1
function	avoid text wrapping ||| avoid wrapping	count=2
function	select certain ||| select	count=1
function	proj 4 ||| proj4	count=1
module	copy of ||| db models	count=1
function	[function_1] lists ||| [function_1] [function_2]	count=1
class	an errorlist for this ||| bound	count=1
function	their callback applications ||| get commands	count=1
function	items ||| get dated items	count=1
function_arg	for update [arg_2] ||| [function_1] [arg_2]	count=1
module	list of ||| models	count=4
function	[function_1] languages in ||| [function_2] [function_1]	count=6
arg	a hidden ||| form index	count=1
function	[function_1] given fields ||| [function_1] distinct [function_2]	count=1
arg	an index on a ||| index	count=1
arg	strings according to the ||| arg	count=1
module	contain ||| generic	count=1
function	httpresponse ||| headers	count=1
function	returns the csrf ||| get	count=1
class	deserialization error which ||| deserialization error	count=1
function	the type returned ||| field type	count=1
module	all models when ||| db models	count=1
module	in the template api ||| template backends	count=1
function_arg	adds name [arg_2] ||| models sql update query [function_1] related update [arg_2]	count=2
module	of what ||| db migrations	count=1
class	template and ||| simple template	count=1
module	there will be ||| db models	count=1
class	last value on ||| value	count=1
function	parse the header into ||| parse header	count=1
function	serialized as base64 ||| string	count=1
module	'1' ||| utils	count=1
module	for ||| contrib	count=1
function	current time zone for ||| to current timezone	count=1
function_arg	uncaught exception [arg_2] ||| [function_1] [arg_2]	count=1
function	only once per save ||| save	count=1
function	a new ||| create	count=1
function_arg	[function_1] date ||| [function_1] next day [arg_2]	count=1
function	that extracts ||| datetime extract	count=1
module	[module_1] template ||| [module_2] [module_1]	count=1
function	types of fields ||| field types	count=1
function	new instance ||| instance	count=1
function	return a list ||| get action	count=1
function_arg	[function_1] the response ||| [function_1] age [arg_2]	count=1
arg	object ||| request object	count=2
arg	the value ||| value	count=12
function	joins for the ||| setup joins	count=1
class	e '1' to ||| date format	count=1
function	warning ||| warning for	count=1
function	and return [function_2] ||| [function_1] [function_2] prep	count=1
class	of the upload ||| stop upload	count=1
arg	a model [arg_2] ||| [arg_2] [arg_1]	count=1
function	random password with ||| make random password	count=2
function	definitions (structured like settings ||| init	count=1
function	boolean a list or ||| list	count=1
arg	ensures the cursor is ||| cursor sentinel col_count	count=1
function	number of extra ||| extra	count=1
function	password ||| password	count=2
class	returns this formset ||| form	count=1
class	adds ||| feed mixin	count=1
function	hyphens ||| slugify	count=1
function	get the object ||| get object	count=2
module	of 'year', ||| db	count=1
function	curves ||| overlaps	count=1
function	a label ||| id for label	count=1
class	the corresponding models ||| apps	count=1
class	routine for calling ||| gisoperations	count=1
function_arg	file [arg_2] ||| [function_1] [arg_2]	count=1
function	table ||| table	count=6
class	is ||| handler	count=1
function_arg	insert [arg_2] ||| [function_1] [arg_2]	count=3
function	subclasses to override ||| handle	count=1
function_arg	[function_1] given cursor ||| [arg_2] [function_1]	count=6
function	random password ||| random password	count=1
class	through the forward ||| forward	count=1
function	symmetric difference ||| xor	count=2
function	choices ||| get choices	count=1
class	field on the ||| field	count=1
class	modelform return an ||| model	count=1
module	rows of ||| models	count=1
module	null" prevents mysql ||| db backends mysql	count=1
class	permission ||| permissions	count=1
function	osr spatialreference ||| srs	count=1
function	previous valid week ||| get previous week	count=2
arg	from ||| version	count=1
function	feature table [function_2] ||| [function_1] [function_2]	count=1
arg	sql ||| sql	count=1
function	a valid ||| valid	count=1
module	guaranteed to ||| sessions backends	count=1
class	every form in ||| form set	count=3
class	this log [class_2] ||| [class_2] [class_1]	count=2
module	point_count ||| contrib gis	count=1
function	a style ||| make style	count=1
class	like ||| connection handler	count=2
function_arg	return [arg_2] ||| [function_1] meta [arg_2]	count=2
arg	conversion to the name ||| name	count=1
arg	[arg] for an ||| [arg]	count=3
module	of tuples ||| management	count=1
module	data type [module] field ||| [module]	count=1
function	[function_1] input ||| [function_2] [function_1]	count=5
module	and function ||| db backends	count=1
module	a dictionary of ||| db backends	count=1
module	of ||| db models fields	count=5
function	name for all permissions ||| all permissions	count=1
module	essentially the opposite ||| models	count=1
function	url ||| url	count=9
arg	field on ||| obj field	count=1
arg	a function ||| func cargs offset	count=1
function	time ||| timefield	count=1
arg	[arg] connected receivers ||| [arg]	count=1
module	lookups by ||| utils translation	count=1
function_arg	the admins setting ||| admins subject	count=1
function	given geometry ||| geom	count=1
module	return the ||| contrib gis	count=3
arg	deeper ||| restricted requested load_fields	count=1
function	parents ||| parents	count=1
function	return a tuple of ||| get units	count=1
module	stddev and related ||| backends sqlite3	count=1
function	a manager [function_2] ||| [function_2] many to one [function_1]	count=1
function	permission to change the ||| delete permission	count=1
module	[module_1] the ||| [module_2] [module_1]	count=126
function	the ||| html	count=1
function	tables in ||| tables	count=1
function	[function_1] object represented ||| [function_1] [function_2]	count=1
class	this field ||| field	count=1
arg	checking the given lookup ||| cls opts lookup	count=1
function_arg	[function_1] we're activated ||| [arg_2] [function_1]	count=4
class	modelform ||| admin	count=1
function	any non-schema-affecting options ||| generate altered options	count=2
function	should be handled ||| should	count=1
function	settings middleware ||| middleware	count=1
module_class	the messages [class_2] ||| [module_1] [class_2]	count=4
class	of the file ||| file	count=1
function	as needed to re-enable ||| enable	count=1
class	this handler should be ||| file upload handler	count=1
module	or the ||| contrib gis	count=1
module	and return all ||| db backends	count=1
module	boolean of whether the ||| contrib	count=1
function	names of the ||| names	count=1
function	write all messages ||| send messages email_messages	count=1
function	[function_1] dated items ||| [function_1] [function_2]	count=3
function	[function_1] a template ||| [function_2] [function_1]	count=1
function	a dict containing ||| to dict	count=1
function	geometry database [function_2] ||| [function_1] [function_2]	count=2
class	we clear the ||| store	count=1
module_class	returns [class_2] ||| contrib [module_1] db backends spatialite [class_2]	count=1
function	ordering [function_2] ||| [function_2] [function_1]	count=2
arg	the values into two ||| values	count=1
module	oracle error code given ||| db backends oracle	count=1
module	template debug information ||| template	count=1
function	point geometry guaranteed ||| point	count=1
module	[module_1] by default ||| [module_2] [module_1]	count=2
module	for easy ||| translation	count=1
function	or 'second', returns ||| trunc	count=2
arg	object [arg] ||| value [arg]	count=2
class	[class_1] reference ||| [class_2] [class_1]	count=11
function	of all models ||| models	count=1
function_arg	passed [arg_2] ||| [arg_2] [function_1]	count=1
function	to add ||| add message	count=1
class	this class are satisfied ||| user	count=1
module	of this ||| gis geos	count=2
module	backends can implement as ||| backends	count=2
arg	first character ||| input_iter	count=1
function	object for a given ||| for	count=1
function	return the week ||| week	count=1
function	[function_1] uncaught ||| [function_1] [function_2]	count=2
module	this ||| gis geos	count=2
function	a domain ||| split domain	count=1
function	should ||| reduce	count=1
function	a non-zero reference ||| active	count=1
function	checkbox widget ||| action checkbox	count=1
module	of the passed-in 2-tuple ||| contrib gis gdal	count=1
module	representation of the geographic ||| contrib	count=1
module	tuples [ directory ||| core management commands	count=1
function	be interpolated ||| readable field	count=1
arg	of keys [arg_2] ||| [arg_1] [arg_2]	count=2
function	parse ||| parse apps and	count=1
module	transaction and ||| db backends base	count=1
function	from [function_2] ||| [function_2] [function_1]	count=1
function	script that ||| script	count=1
function	current ||| to current	count=1
module	further processing ||| utils	count=1
module	mapping models to a ||| models	count=1
class	modelform return an unsaved ||| model	count=1
arg	json string [arg] ||| obj [arg]	count=1
arg	object has been ||| object message	count=2
module	not indicate the ||| contrib	count=1
class	before migrating ||| base database wrapper	count=1
function	returns the [function_2] ||| [function_1] [function_2]	count=18
module	to all models ||| models sql	count=1
function	the sql version ||| sql	count=1
function	per save ||| save base	count=1
module	a list of ||| management	count=1
function_arg	[function_1] direct relationship ||| [function_1] [arg_2]	count=3
arg	in a ||| value	count=1
class	a template rendered ||| template response	count=1
class	this query ||| query	count=3
module	the given ||| contrib	count=28
module	that it [module_2] ||| [module_1] [module_2]	count=1
arg	:param ||| potfile	count=1
function	element for relational fields ||| start relational field	count=1
class	this class are ||| settings	count=1
function	validate session ||| session	count=1
module	[module_1] this ||| [module_2] [module_1]	count=2
function	form class to ||| form class	count=2
function	[function_1] object represented ||| [function_2] [function_1]	count=1
function_arg	extra is an ||| extra obj	count=1
module	shortcut to access the ||| contrib	count=1
function	label ||| id for label	count=1
module	root ||| utils	count=1
class	is ||| admin site	count=1
module	short-hand string [module] ||| [module]	count=2
arg	datetimes in the ||| value	count=1
function	this ||| init	count=1
module	do not confuse the ||| contrib	count=1
class	configuration ||| holder	count=1
module	returns true if the ||| contrib admin	count=1
function_arg	[function_1] genericipaddressfield ||| [function_1] protocol [arg_2]	count=1
function	return an ||| get	count=2
arg	into clickable links truncating ||| autoescape	count=1
function	wkt text of the ||| wkt	count=1
module	the srid of the ||| contrib gis	count=2
class	geometry ||| geosgeometry	count=7
arg	'year', 'month', 'day', ||| field_name tzname	count=1
function	javascript i18n ||| null javascript	count=1
function	a new [function_2] ||| [function_1] [function_2]	count=1
function	modified [function_2] ||| [function_1] [function_2]	count=4
class	in the ||| context	count=1
function	deleted models managed and ||| generate deleted models	count=1
function	all [function] for ||| update [function]	count=1
module	which can be ||| core	count=1
module	index the ||| contrib	count=1
arg	placeholder needed for ||| placeholder	count=1
class	compile-time options ||| gisoperations	count=2
function	returns the [function_2] ||| [function_1] form [function_2]	count=3
module	the corresponding class specified ||| contrib	count=1
module	that returns a ||| contrib gis gdal prototypes	count=1
module_class	this [class_2] ||| [module_1] [class_2]	count=52
function_arg	max_num [arg_2] ||| [function_1] [arg_2]	count=3
function	current time zone ||| current timezone	count=2
function	[function_1] while retaining ||| [function_2] [function_1]	count=8
function	called from the command ||| command	count=1
arg	1*t***t** for two ||| other	count=1
function	migration dependency [function] using ||| build [function]	count=1
function	a slash ||| slash	count=1
class	add ||| form set	count=1
function	return ||| save	count=1
class	given ||| geo feed mixin	count=1
function	"modelname") tuples ||| model	count=1
class	reset ||| reset	count=1
class	projection ||| spatial ref sys mixin	count=1
arg	sender ||| sender	count=4
module_class	[module_1] full-text ||| [module_1] base [class_2]	count=1
function	help [function_2] ||| [function_2] [function_1]	count=1
module	integer ||| contrib admin	count=1
function	will try to ||| do	count=1
function	of the layer ||| layer	count=1
module_class	of the [class_2] ||| [module_1] gis gdal [class_2]	count=1
module	and returns [module_2] ||| [module_2] [module_1]	count=1
function	returns the command class ||| load command class	count=1
module	if the target ||| contrib	count=1
module	tuples and when ||| apps	count=1
module	a 3-tuple of ||| db	count=1
module	the messages ||| contrib	count=2
arg	limit and adding 'rel=nofollow' ||| limit	count=1
function	matches any pattern ||| matches patterns	count=1
function	[function] all modeladmins ||| [function]	count=1
function	transforms and lookup from ||| build lookup	count=1
arg	applies ||| collect_sql	count=1
module	returns false if the ||| contrib	count=1
arg	truncates ||| length truncate text truncate_len	count=1
arg	cursor with placeholders replaced ||| cursor sql params	count=1
module	a list of ||| db backends	count=3
function	name ||| set name	count=1
function	in the ||| vary	count=1
module	mysql has the ||| mysql	count=1
function	for the extent3d ||| convert extent3d	count=1
function	number of ("app_label", "modelname") ||| lazy model	count=1
function	items ||| items	count=2
class	returns true ||| set	count=1
function	return an unsaved instance ||| form	count=1
class	model ||| base model	count=4
function	generate a random ||| random	count=1
module	or raster with ||| db models	count=1
arg	feed me a model ||| cls model	count=1
arg	of inline formsets and ||| formsets change	count=1
class	the module ||| holder	count=1
class	or has ||| base model admin	count=1
function	factory function to create ||| create generic	count=1
module	all of the installed ||| contrib	count=1
function	save yet ||| save base	count=1
module	true if ||| db models	count=1
function	settings_dict (a ||| signature	count=1
module	of ||| utils translation	count=4
arg	datetimes in ||| value	count=1
module	list of tuples [ ||| core management	count=1
function_arg	extra [arg_2] ||| [function_1] [arg_2]	count=2
function	the csrf ||| csrf	count=1
module	geometry or raster with ||| db	count=1
arg	receiver [arg_2] ||| [arg_1] [arg_2]	count=4
module	an unsaved instance ||| contrib admin	count=1
arg	convert a key into ||| key version	count=1
function	to add ||| add	count=3
arg	the value is ||| value arg	count=2
function	given fields to the ||| fields	count=1
module	if the oracle error ||| oracle	count=1
module	to save the ||| contrib	count=1
module	override this method if ||| contrib auth management commands	count=1
arg	model ||| model data db	count=1
function	tuple version of ||| tuple	count=1
arg	binding power [arg] evaluates ||| bp [arg]	count=1
arg	the given ||| cls opts	count=1
function	saves and returns ||| save	count=2
function	of template names ||| template names	count=1
module_class	standard [class_2] ||| [module_1] [class_2]	count=6
function	registered ||| lazy model operation	count=1
function	generate placeholder sql and ||| as sql	count=1
function	the layer metadata ||| layer	count=1
class	and a number ||| apps	count=1
function	has permission to ||| has change permission	count=1
function	filters from ||| from	count=1
function	a search query ||| search	count=1
module	python sqlite3 interface returns ||| backends sqlite3	count=1
arg	function that returns ||| result func cargs offset	count=1
function	returns the [function_2] ||| contenttypes content type manager [function_1] [function_2]	count=2
arg	the exception should be ||| request exception	count=1
arg	exists does nothing ||| sid	count=1
arg	[arg_1] [arg_2] ||| [arg_2] level [arg_1] extra_tags	count=6
module	transaction and resets ||| db backends base	count=1
arg	and the other ||| other	count=1
module	have been imported ||| apps	count=1
module	not ||| conf	count=1
function	in a ||| make	count=1
arg	value prepared ||| value	count=1
function	[function_1] true ||| [function_2] [function_1]	count=1
class	resets ||| base database wrapper	count=1
function	allow subclasses [function_2] ||| [function_2] [function_1]	count=2
function	was something modified ||| was modified	count=3
class	has ||| admin	count=1
module_class	view with [class_2] ||| [module_1] [class_2]	count=3
arg	message to ||| message fail_silently	count=2
module	out the parts of ||| contrib admindocs	count=1
class	of a geosgeometry ||| geosgeometry	count=1
class	essentially the opposite ||| query	count=1
function	explicitly sized strings ||| sized string	count=1
function	is true ||| form	count=1
function	difference of ||| difference	count=1
function_arg	[function_1] [arg_2] update query for an ||| models sql update query [function_1] related update [arg_2]	count=2
module	oracle doesn't have the ||| backends oracle	count=1
arg	checking on routines that ||| cargs	count=1
function	surface of ||| on surface	count=1
function	the number of layers ||| len	count=1
arg	cursor and ensures the ||| sentinel col_count	count=1
arg	if value [arg_2] ||| [arg_2] [arg_1]	count=2
arg	instance ||| instance name	count=1
arg	given time zone ||| value timezone	count=1
function	an extended [function_2] ||| [function_2] [function_1]	count=2
function_arg	key [arg_2] ||| [arg_2] [function_1]	count=3
module_class	in this [class_2] ||| [class_2] [module_1]	count=9
function	the search and a ||| search	count=1
module_class	this view [class_2] ||| [module_1] [class_2]	count=4
module	a geos pointer ||| gis geos	count=1
module	pixel values of this ||| gis gdal	count=3
function	list ||| locale	count=1
function	boolean a list ||| list	count=1
module	templates are ||| core management	count=1
arg	attribute ||| attribute	count=1
module	set of ||| models	count=1
function_arg	references the given ||| references field model_name	count=2
function	model as a list ||| list	count=1
function	[function_1] to update ||| [function_2] [function_1]	count=3
arg	one item ||| model item	count=1
module	models to a set ||| db models	count=1
arg	backend the fields ||| fields objs	count=1
class	not in this ||| user settings	count=1
class	number of email ||| email	count=2
class	templates ||| template command	count=2
class	runs ||| executor	count=2
function	history as a sanity ||| history	count=1
module	or directly (if the ||| contrib gis gdal prototypes	count=1
function	checking ||| check	count=1
module	srid of the field ||| contrib gis db	count=2
module	the ||| contrib gis gdal	count=40
function	given ||| save	count=1
function	the untranslated verbose name ||| verbose name	count=1
function_arg	[function_1] [arg_2] are present usually 2 ||| [function_1] [arg_2]	count=1
function	interior [function_2] ||| [function_2] [function_1]	count=1
function	as a reverse ||| reverse geom	count=1
function	value to use for ||| value	count=1
module	and related stats ||| db backends sqlite3	count=1
function	current [function_2] ||| [function_2] [function_1]	count=11
arg	and values ||| cls	count=1
function	[function_1] templates ||| [function_2] [function_1]	count=1
function	validators for the ||| address validators	count=1
arg	and :param ||| potfile	count=1
class	are ||| settings holder	count=2
module	a transaction and resets ||| db backends base	count=1
function	will set the ||| set	count=1
function	[function_1] test redirecting ||| [function_1] [function_2]	count=1
function	admin ||| admin	count=2
function	resolve the ||| resolve model	count=1
module	true ||| contrib admin	count=2
function	of chars ||| text chars	count=1
function	set the [function_2] ||| [function_1] [function_2]	count=10
module_class	[module_1] corresponds to ||| [class_2] [module_1]	count=2
module	returns the number of ||| contrib	count=1
module_class	for this geometry ||| gdal ogrgeometry	count=1
module	[module] geometry ||| contrib [module]	count=2
class	for the spatial ||| spatial	count=1
function_arg	model class [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	in [arg_2] ||| [function_1] [arg_2]	count=3
module	returns ||| gis db backends oracle	count=2
function_arg	[function_1] objects ||| [arg_2] [function_1]	count=1
function	return any ||| get db	count=1
function	hex ||| from pgraster	count=2
function	find what language the ||| get language	count=1
function	returns limit_choices_to for this ||| get limit choices to	count=1
module	ogr ||| gdal	count=1
function	for all [function_2] ||| [function_1] [function_2] opts	count=1
class	i e '0' sunday ||| date	count=1
function	[function_1] on save ||| [function_1] [function_2]	count=5
function	admin log for ||| admin log	count=2
function_arg	passed post [arg_2] ||| [arg_2] [function_1]	count=4
module	the list ||| contrib	count=1
function	app or project ||| handle	count=1
function	started to load ||| loaded	count=1
function	major ||| major	count=1
arg	secret (which defaults to ||| value secret	count=1
module	given ||| gis db models	count=1
arg	direct relationship to ||| m	count=1
module	to c [module_2] ||| [module_2] [module_1] wkbreader read	count=3
module	list ||| management	count=1
arg	mapped model ||| feat	count=1
class	template and context described ||| template response	count=1
module	geometries in the ||| contrib gis geos	count=1
module	creates ||| backends	count=1
function	model from ||| get model	count=2
function	to '365' ||| z	count=1
module	set of fields to ||| db models sql	count=1
function	database type ||| db type	count=2
function	[function_1] null ||| [function_2] [function_1]	count=12
class	the results from applying ||| set	count=1
arg	template_name ||| template_name	count=1
function	extended slice ||| extended slice	count=4
function	create an ||| create	count=2
function	cascaded ||| cascaded	count=1
function	method will ||| do	count=1
class	digits and decimal ||| decimal	count=1
function	the column ||| column	count=1
class	command ||| label command	count=2
class	year i ||| date	count=1
class	of the month without ||| format	count=1
arg	date of ||| date	count=6
module	contain helpful extra ||| views generic	count=1
module	in pixels of the ||| contrib gis gdal	count=1
module	results from applying this ||| db	count=1
function	from implicitly ordering ||| ordering	count=1
function_arg	[function_1] string adding ||| [arg_2] [function_1]	count=1
function	be used to descend ||| descend	count=1
class	modified connection ||| database	count=1
module	with elements of ||| db backends base	count=1
module	not in this ||| conf	count=1
class	project templates are ||| template command	count=1
function_arg	[function_1] given table ||| [arg_2] [function_1]	count=3
arg	ensures the [arg_2] ||| [arg_2] [arg_1]	count=6
function_arg	[function_1] [arg_2] query for an ancestor ||| [function_1] [arg_2]	count=2
module_class	[module_1] object be ||| [module_1] [class_2]	count=1
arg	name as a string ||| name	count=1
function	signed cookie if ||| signed cookie	count=2
module_class	the [class_2] ||| [module_1] gis geos [class_2]	count=1
function_arg	shortened [arg_2] ||| [function_1] [arg_2]	count=1
module	to return the ||| contrib gis	count=1
function	[function_1] interior ||| [function_2] [function_1]	count=1
module	run the ||| contrib admin	count=1
function	check if [function_2] ||| [function_1] [function_2]	count=5
class	of ("app_label", "modelname") ||| apps	count=1
function	ogrinspect ||| ogrinspect	count=1
arg	the choice's ||| choice	count=1
function	adds ||| add srs entry	count=1
class	file ] ||| command	count=1
module	of [module] ||| [module] gis	count=2
module	returns a 6-tuple ||| gis	count=1
module	in [module] ||| [module]	count=1
arg	[arg_1] expires ||| [arg_1] [arg_2]	count=4
class	is true if ||| model	count=1
class	modelform return an ||| model admin	count=1
arg	wherenode ||| filter_expr branch_negated current_negated can_reuse	count=1
arg	[arg_1] and values ||| [arg_2] [arg_1]	count=6
module	an integer ||| contrib humanize	count=1
arg	validationerror containing a ||| exclude	count=1
function	fields should [function] ||| [function]	count=3
function	a random [function_2] ||| [function_2] [function_1]	count=2
class	token ||| token	count=1
function	dict ||| to dict	count=1
function	of tuples [ directory ||| compile	count=1
function_arg	css [arg_2] ||| [arg_2] [function_1]	count=4
function	to return a ||| get	count=2
function	and ||| unicode	count=1
module	returns the envelope ||| contrib gis gdal	count=2
class	month without ||| format	count=1
class	a string for ||| safe	count=1
module	of database definitions (structured ||| db	count=1
module	raster and force ||| raster	count=1
module	the points in ||| contrib	count=1
class	geometry at ||| geometry	count=1
function	or ||| patch vary headers	count=2
class	satisfied from the ||| user settings holder	count=1
class	week numeric i e ||| date format	count=1
function	method will try ||| do	count=1
class	the root ||| node	count=1
module	to all models ||| models	count=1
function	sure the test settings ||| test settings	count=1
module	customizing the number of ||| contrib admin	count=1
class	a management form ||| form	count=1
function	available for new ||| available name	count=1
class	tree ||| node	count=1
function	the year month and ||| format	count=1
class	model instances [class_2] ||| [class_2] [class_1]	count=2
function	containing a given object ||| containing	count=1
function	available for ||| available	count=1
class	class are satisfied from ||| user settings holder	count=1
arg	name dirs and ||| template_name template_dirs	count=1
class	without leading ||| format	count=1
class	return a list ||| simple list filter	count=1
function	the week ||| week	count=1
module_class	yields [module_1] [class_2] they should be rendered ||| [module_1] [class_2] iter	count=2
class	a transaction ||| database wrapper	count=1
module_class	with the [class_2] ||| [module_1] [class_2]	count=5
arg	if ||| form	count=1
module_class	this geometry and ||| gis gdal ogrgeometry	count=1
function	the ||| construct	count=1
arg	string ||| compiler sql	count=1
class	geometry ||| ogrgeometry	count=18
function	fields on the model ||| fields	count=1
function	aware datetime [function_2] ||| [function_1] [function_2]	count=1
arg	returned instance to ||| instance	count=1
class	command line ||| command	count=2
function_arg	[function_1] [arg_2] ||| [function_1] sql lookup_type [arg_2]	count=2
arg	context variables to ||| request	count=2
function	models have been ||| model operation	count=1
module_class	[module_1] a warning ||| [module_1] [class_2]	count=2
function	fail silently if the ||| fail	count=1
arg	given function and ||| result func	count=2
function	osr spatialreference for srid ||| srs	count=1
function	when all the corresponding ||| model operation	count=1
class	the upload ||| stop upload	count=1
class	database definitions (structured like ||| connection	count=1
module	from a [module] tag module ||| [module]	count=1
class	response ||| response	count=3
function	return all ||| get related	count=2
arg	a function that ||| result func cargs offset	count=1
function_arg	[function_1] objs via ||| [arg_2] [function_1]	count=1
function	return 0 ||| check zero	count=1
module	against ||| models	count=1
module	for point_count ||| contrib gis	count=1
function	sql string and list ||| as sql	count=1
function	for changed ||| changed	count=1
arg	name returns ||| name	count=1
arg	argument ||| arg	count=1
function	by key ||| get	count=1
module_class	present usually 2 but [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	statements required to reset ||| reset	count=2
function	slice ||| slice filter	count=1
function	method up so ||| proxy method	count=4
function	of ||| lazy model	count=1
class	the current database ||| database introspection	count=3
module	mapping models to a ||| db models	count=1
function	manager for the ||| manager	count=2
class	given a ||| model admin	count=1
module	order_by() ||| models	count=1
module	given ||| db models	count=1
arg	generated from key_salt ||| key_salt	count=1
class	the ||| date format	count=3
module	and returns the ||| contrib gis geos prototypes	count=1
function_arg	prepare a [arg_2] ||| [arg_2] [function_1]	count=4
class	mapping information and ||| mapping	count=1
function_arg	to link path ||| link file path	count=1
function	number of ("app_label", ||| operation	count=1
module	raster and force ||| gdal raster	count=1
module	of tuples [ directory ||| commands	count=1
arg	encoded hash ||| encoded	count=1
function_arg	response the [arg_2] ||| [function_1] [arg_2]	count=4
module	codename ||| auth management	count=2
class	form ||| form	count=18
function	page ||| page	count=2
module_class	for geos [class_2] ||| [class_2] [module_1]	count=4
function	aware in ||| make aware	count=2
function	an index with varchar ||| index sql	count=1
class	true if [class] has no ||| [class]	count=1
arg	datatuple of (subject ||| datatuple	count=1
arg	[arg_1] sender for ||| [arg_2] [arg_1]	count=2
function	points ||| points	count=1
module_class	[module_1] model ||| [module_1] [class_2]	count=4
arg	necessary to ||| field_name tzname	count=1
module	method on the ||| contrib	count=1
module	admin form ||| admin templatetags	count=1
function_arg	[function_1] date of ||| [arg_2] [function_1]	count=3
function	define the name that ||| name	count=1
function	is the type returned ||| type	count=1
module	list of tuples ||| core	count=1
class	form migration ||| migration executor	count=1
function	updates the ||| patch	count=1
module	true if this ||| gis gdal	count=5
class	[class_1] field ||| [class_2] [class_1]	count=4
module	geosgeometry the ||| contrib gis geos	count=1
module	the spatial_ref_sys ||| contrib gis	count=1
function	the extra forms ||| extra forms	count=2
module	indicating whether the ||| contrib	count=1
function	field's name this is ||| field name	count=1
class	e ||| time format	count=1
function	directory file ] ||| messages	count=1
class	if the ||| query	count=1
module	tables and ||| db backends base	count=1
module	tuples ||| commands	count=1
module	multiple lines and ||| db backends base	count=1
class	or fully qualified domain ||| geo	count=1
module	operations up into migrations ||| db migrations	count=1
function	any ||| generate	count=1
function_arg	slice [arg_2] ||| [arg_2] [function_1]	count=1
module	backends require special syntax ||| db backends base	count=1
module	oracle ||| oracle	count=3
class	the session is set ||| session base	count=1
function_arg	[function_1] ipv6 address ||| [function_1] [arg_2]	count=3
function	to descend ||| select related descend	count=1
function_arg	[function_1] variables and ||| [function_1] [arg_2]	count=4
function	prepare ||| prepare	count=1
function_arg	model's [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	field's (that [function] ||| [function]	count=1
arg	if value ||| value	count=1
function_arg	explicitly mark [arg_2] ||| [function_1] safe [arg_2]	count=1
arg	for constructing the ||| geo_field field_name	count=1
class	leading zeros i e ||| date	count=1
function	returns a dictionary ||| get	count=3
function	given geometry field ||| geom	count=1
function	week [function] ||| get week [function]	count=3
function_arg	[function_1] for searching ||| [function_1] [arg_2]	count=4
class	this ||| query	count=2
function	loading ||| loading	count=2
arg	a get_prefetch_queryset() ||| through_attr to_attr	count=1
class	[class_1] management form ||| [class_2] [class_1]	count=1
function	[function_1] main ||| [function_1] [function_2]	count=1
function_arg	formset is ||| formset obj	count=1
function	[function_1] an object ||| [function_2] [function_1]	count=2
function	login ||| redirect to login	count=1
module	fields instance of ||| models fields	count=1
module	of this ||| gis	count=1
class	the settings the 'default_settings' ||| settings	count=1
function	return an origin ||| get	count=1
module	the results from applying ||| db models	count=1
class	the template and context ||| simple template response	count=1
module	admin urls ||| admin	count=1
function_arg	copy [arg_2] ||| [function_1] [arg_2]	count=3
module	set this ||| gis gdal	count=1
module	to the database ||| models	count=1
function	type ||| type sql	count=1
module	of date objects representing ||| db models	count=1
module	if ||| utils translation	count=1
function	index ||| index sql	count=2
arg	it ||| cls	count=1
class	form clean() has ||| form	count=1
module_class	'0' to [class_2] ||| [module_1] [class_2]	count=2
function	login ||| login	count=1
arg	ascii/latin-1 native strings ||| charset mime_encode	count=1
module	the values [module] the ||| [module]	count=1
class	of this widget used ||| choice widget	count=1
function	of items to paginate ||| paginate	count=1
module	geos geometry object from ||| geos	count=1
function	returns the number ||| len	count=1
module	override this method ||| contrib auth management commands	count=1
function	all key columns in ||| key columns	count=3
module	of (column_name referenced_table_name ||| db backends	count=2
class	resets ||| database wrapper	count=1
class	i e '0' sunday ||| date format	count=1
module	from memory [module] source ||| [module] gdal	count=1
module	the input can be ||| contrib	count=1
function	list of available ||| available	count=1
function	the number of errors ||| error count	count=1
function	dict containing the data ||| model to dict	count=1
arg	username email ||| username email	count=2
function	distance ||| distance	count=1
class	error ||| error	count=1
function	lists ||| lists	count=1
class	this hasher ||| base password hasher	count=1
function	ordering by the ||| ordering	count=1
arg	wkt ||| wkt	count=1
function	[function_1] database type ||| [function_2] [function_1]	count=1
function	returns all [function_2] ||| [function_1] [function_2]	count=5
class	checks ||| database wrapper	count=1
class	this ||| settings holder	count=2
function	[function_1] [function_2] ||| [function_2] trunc [function_1]	count=9
module	given ||| admin	count=1
module	the model _meta fields ||| db models fields	count=1
class	expression and ||| base expression	count=1
arg	to the given model ||| model	count=1
function	mail emailmultialternatives to ||| send mail	count=1
arg	or none for ||| queryset	count=1
function_arg	the passed obj ||| to string obj	count=1
module_class	date [class_2] ||| [module_1] [class_2]	count=1
function_arg	[function_1] path that ||| [function_1] [arg_2]	count=4
module	the user ||| contrib admindocs	count=1
module	translation of ||| utils translation	count=2
class	instance ||| admin	count=1
function	[function_1] the ||| templatetags do [function_2] [function_1]	count=3
module	applying this queryset ||| db	count=1
function	[function_1] permissions ||| [function_1] [function_2] opts	count=3
function	2 ||| 2	count=1
function_arg	y with [arg_2] ||| [arg_2] [function_1]	count=2
module	if there is ||| utils	count=1
module	field with ||| gis db backends	count=1
module	boundaries of ||| gdal	count=1
function	and filters from ||| from	count=1
function	[function_1] etags given ||| [function_1] [function_2]	count=1
arg	wrapper of format_html for ||| sep format_string args_generator	count=1
module_class	return the [class_2] ||| [module_1] [class_2]	count=2
function	primary [function_2] ||| [function_2] [function_1]	count=3
module	this ||| contrib gis db backends	count=2
class	form field ||| model choice field	count=1
module	[ directory file ||| core management	count=1
function	en-us into [function] ||| [function]	count=3
function	an sql query ||| sql	count=1
module	free the [module_2] ||| [module_1] [module_2]	count=2
function	[function] false ||| expire at browser [function]	count=1
class	of the year i ||| format	count=1
arg	wkt without using any ||| cls wkt	count=1
function	model [function_2] ||| [function_2] [function_1]	count=6
class	an open [class] ||| [class]	count=1
function	in ||| patch	count=1
module	srid of [module_2] ||| [module_1] [module_2]	count=4
function	when all the corresponding ||| model	count=1
class	engine definitions (structured like ||| engine	count=1
module	context manager and ||| db backends base	count=1
module	for translation but doesn't ||| utils translation	count=1
function_arg	django models [arg_2] ||| [arg_2] [function_1]	count=1
class	forward ||| options	count=1
function_arg	[function_1] [arg_2] as an integer (or ||| [function_1] [arg_2]	count=3
module_class	[module_1] oftdate field ||| [module_1] [class_2]	count=1
function	[function_1] static ||| [function_1] [function_2]	count=4
function	form [function_2] ||| [function_1] [function_2]	count=8
function	choices ||| choices	count=3
module	e '0' to ||| utils	count=1
class	satisfied from the module ||| user	count=1
arg	a localizable ||| use_l10n	count=1
arg	one item ||| model item label	count=1
module	the extra locations as ||| contrib staticfiles	count=1
arg	"vary" ||| response newheaders	count=1
class	date ||| database operations	count=1
module	files in the extra ||| contrib	count=1
class	("app_label", "modelname") tuples ||| apps	count=1
module	for rows with invalid ||| db backends mysql	count=1
class	of database definitions (structured ||| connection handler	count=1
module	of ||| core management	count=1
function	type for ||| type	count=4
function	the specified headers to ||| headers	count=1
function_arg	[function_1] length ||| [arg_2] [function_1]	count=1
module	been imported ||| apps	count=1
class	the given [class_2] ||| [class_2] [class_1]	count=4
function	[function_1] raw input ||| files file upload handler [function_1] [function_2]	count=1
class	order_by() ||| query	count=1
module	into ||| db	count=2
class	field ||| choice field	count=1
module	the messages returning ||| contrib messages storage	count=1
function	[function_1] extracts ||| [function_2] [function_1]	count=12
module	of points in this ||| geos	count=1
function	inner meta ||| meta	count=1
class	from the ||| user	count=1
function	[function_1] of comparing ||| [function_1] [function_2]	count=1
function	[function_1] [function_2] of the database connection ||| base base database wrapper [function_2] [function_1]	count=3
class	month ||| date	count=1
class	the choices ||| model choice field	count=1
function	routine will return the ||| get	count=1
function	dict containing the data ||| to dict	count=1
function_arg	existing fields [arg_2] ||| [arg_2] [function_1]	count=3
module	from the ||| contrib gis	count=3
module	operations up into ||| db	count=1
class	form migration instance false ||| migration executor	count=1
arg	for routines that return ||| func cargs	count=1
module	the css ||| contrib	count=3
arg	geoqueryset ||| precision crs	count=1
function	[function_1] if ||| [function_2] [function_1]	count=3
module	or fields to use ||| generic	count=1
module	returns ||| contrib gis db models	count=2
arg	it with a ||| request	count=1
function	length of ||| name length	count=1
module_class	[module_1] file in ||| [class_2] [module_1]	count=4
class	essentially the opposite of ||| query set	count=1
module	the queryset ||| db	count=1
function	use special form ||| form	count=1
class	of dictionaries in ||| context	count=1
class	the spatial [class_2] ||| [class_2] [class_1]	count=1
arg	three part encoded digest ||| encoded setter preferred	count=1
function	[function_1] y with ||| [function_2] [function_1]	count=1
function	have been imported and ||| lazy model operation	count=1
function	type from the ||| type	count=1
function	day [function] ||| get day [function]	count=3
function	given httpresponse ||| vary	count=1
function	deserialize a stream ||| deserialize	count=1
function	[function_1] of errors ||| [function_2] [function_1]	count=6
module_class	the [class_2] ||| [module_1] gdal [class_2]	count=7
function	given date ||| date	count=1
function	set y with the ||| set y	count=1
module	parts ||| admindocs	count=1
class	form at the ||| base form	count=1
module	examine ||| admin	count=2
module	[module] regenerates ||| contrib sessions [module]	count=3
module	this accessor retrieves ||| gis db	count=1
module	returns true if ||| db models	count=1
function	po file for self ||| po file	count=1
function_arg	[function_1] the choice's ||| [function_1] empty value [arg_2]	count=2
module	rows of values ||| db models sql	count=1
function	normalizes it to an ||| normalize	count=1
function	return explicitly sized strings ||| sized string	count=1
class	list of dates ||| list view	count=1
module	the dirty flag ||| db backends base	count=1
module_class	[module_1] [class_2] ||| [module_1] gdal [class_2]	count=14
arg	of the given field_name ||| field_name	count=1
module	the properly shortened and ||| db backends oracle	count=1
module	for the given ||| contrib admin	count=1
module	returns a geojson representation ||| gis	count=1
function	and when all the ||| lazy model operation	count=1
function	action ||| action	count=1
class	list of table names ||| base database introspection	count=1
module	configured loaders ||| loaders	count=1
module	returns true if the ||| models	count=1
function	the deepcopy ||| deepcopy	count=1
function	of the current ||| get current	count=1
module	requested the ||| contrib gis gdal	count=1
class	extra inline ||| inline	count=1
class	order_by() ||| set	count=1
module	this view should ||| views generic	count=1
function	closes the connection ||| close	count=2
function	"modelname") tuples ||| lazy	count=1
class	satisfied from the module ||| user settings holder	count=1
function	be allowed to display ||| get allow	count=1
module	use in the ||| contrib	count=1
class	the session is set ||| session	count=1
arg	removedindjango20warning an internal method ||| dirs	count=1
function	the symmetric [function_2] ||| [function_1] [function_2]	count=1
module	method inspects [module] ||| [module]	count=3
function	time zone for display ||| timezone	count=1
function	form field ||| formfield	count=2
function	loads ||| load	count=2
arg	in encoded and ||| encoded	count=1
module	an ||| contrib	count=1
function	return true if the ||| choice has	count=1
arg	iterable and [arg_2] ||| [arg_2] [arg_1]	count=1
module	list of ||| core	count=1
module	override the ||| contrib auth	count=2
arg	[arg_1] email and ||| [arg_2] [arg_1]	count=2
function	all the corresponding models ||| model operation	count=1
module	this ||| contrib gis geos	count=1
module	an integer [module_2] ||| [module_1] [module_2]	count=2
arg	in the full_plan ||| plan full_plan fake	count=1
function	driver ||| driver	count=1
function	for plain text ||| text	count=1
class	runs ||| migration executor	count=2
module	all the corresponding ||| apps	count=1
class	if possible ||| settings	count=1
function	[ ||| compile	count=1
function	rearranges the fields ||| fields	count=1
function	index sql statements for ||| indexes sql	count=1
arg	the given encoding ||| encoding	count=3
class	files called from ||| files	count=1
function	allow subclasses to ||| handle	count=1
class	returns ||| safe	count=1
function	sql statements [function_2] ||| [function_2] by name [function_1]	count=1
function	to descend ||| descend	count=1
class	not bound or the ||| bound	count=1
arg	mimetype triple into a ||| mimetype	count=1
function_arg	[function_1] [arg_2] ||| [function_1] query [arg_2]	count=18
arg	character in ||| input_iter	count=1
module	a list of ||| db backends mysql	count=1
function	return an instance of ||| get connection	count=1
class	the [class] aggregate ||| [class]	count=1
module	into memory so that ||| admin	count=1
class	[class_1] or fully ||| [class_2] [class_1]	count=2
module_class	[module_1] pathinfos ||| [module_1] [class_2] get	count=4
module	all the points ||| contrib gis	count=1
function	models have been imported ||| lazy model operation	count=1
function	of defer only ||| only	count=1
function_arg	model's 'get_latest_by' [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	what language the user ||| get language	count=1
function_arg	[function_1] [arg_2] ||| [function_1] name [arg_2]	count=1
arg	fill in the information ||| opts root_alias cur_depth	count=1
function	this backend ||| get backend	count=1
function	objects from ||| objects	count=1
class	of the field on ||| field	count=1
module	key checks ||| backends	count=1
function_arg	[function_1] name value ||| models sql update query [function_1] related update model [arg_2]	count=1
function_arg	returns the for update [function_1] [arg_2] for an update operation ||| database operations for update [function_1] [arg_2]	count=3
function	validators ||| ip address validators	count=1
function	getting the ||| get	count=1
class	in the cache at ||| base cache	count=1
class	of the month without ||| date	count=1
arg	the named module ||| fullname	count=1
class	the sense of the ||| node	count=1
function	list containing a warning ||| warning for	count=1
class	specified in ||| holder	count=1
class	file in ||| file system finder	count=1
function	a modelform ||| form	count=1
module	backends can implement ||| db backends	count=2
arg	given length ||| length	count=1
module	list of (column_name referenced_table_name ||| db	count=2
function	a valid [function_2] ||| [function_2] [function_1]	count=1
arg	on routines ||| cargs	count=1
class	email [class_2] ||| [class_1] [class_2]	count=1
function	long integer into a ||| long to	count=1
function	caching headers to ||| headers	count=1
function	adds its information to ||| add srs	count=1
arg	connection_reset ||| connection_reset	count=1
arg	context variables ||| request	count=3
module	file ||| core files	count=4
arg	format_html ||| sep format_string args_generator	count=1
function	the form class ||| get form class	count=4
function	country [function] for ||| country [function]	count=1
function	iterates over each ||| iter	count=2
module	range of ||| models	count=1
function	available for new content ||| available	count=1
module_class	spatial [class_2] ||| [class_2] [module_1]	count=2
function	has the options ||| options	count=1
class	day of the month ||| date	count=1
class	results from applying ||| set	count=1
arg	queryset or any ||| queryset	count=1
module	translation [module_2] ||| [module_1] [module_2]	count=7
function	or a path set ||| get	count=1
function	the admin [function_2] ||| [function_1] [function_2]	count=5
module	are sensitive [module] those parameters ||| [module]	count=1
module	easy ||| utils	count=1
module	(i e saves the ||| contrib	count=1
function	id fields correspond to ||| matching generic foreign key	count=1
module	yield template ||| template	count=1
function	given *models returns a ||| get	count=1
module	[ directory ||| management	count=1
arg	httpresponse ||| response	count=2
module	edit the object represented ||| contrib	count=1
module	terminal ||| core management	count=1
module	of rows from a ||| db models sql	count=1
class	geographic ||| geo query	count=1
module	multiple lines and returns ||| backends base	count=1
class	the feed in ||| syndication feed	count=1
function	an object with the ||| get	count=1
function	test database prompting the ||| create test db	count=1
module	compatibility [module] ||| [module]	count=2
arg	it with a ||| request using	count=1
function	the prefix ||| prefix	count=1
function	area ||| area	count=2
function	otherwise uncaught exceptions those ||| uncaught	count=1
function	an absolute ||| absolute	count=1
module	silently if the oracle ||| oracle	count=1
class	i e ||| date	count=3
module	generally the ||| contrib	count=1
function	get the number of ||| get	count=1
function	filters from a ||| load from	count=1
module	codename name ||| auth management	count=2
function	paginate by ||| paginate by	count=2
class	is ||| query set	count=1
function_arg	[function_1] [arg_2] path ||| [function_1] [arg_2]	count=4
arg	y [arg_2] ||| [arg_1] [arg_2]	count=1
function	a package ||| package	count=2
class	this geometry is ||| geometry mixin	count=1
module	in the ||| views	count=1
function	[function_1] model object ||| [function_2] [function_1]	count=2
class	passed into ||| set	count=1
module	and column names or ||| db backends	count=1
function	year month ||| format	count=1
function	a response using the ||| response	count=1
function	command class ||| command class	count=1
function	given a modelform return ||| form	count=1
module_class	from the [class_2] ||| [module_1] [class_2]	count=3
module	does not ||| db backends	count=1
class	the list of ||| date list view	count=1
function	[function_1] to fail ||| [function_1] [function_2]	count=1
function	lazy i e ||| check lazy	count=1
class	sunday ||| date format	count=1
function	name this ||| name	count=1
class	returns this [class] rendered ||| [class]	count=2
class	session is ||| session	count=1
module	point_count ||| contrib gis gdal	count=2
function	exclude ||| exclude	count=1
arg	model usually involves ||| model	count=2
class	errorlist for this ||| bound	count=1
arg	name dirs ||| template_name template_dirs	count=1
module	of what the ||| db migrations	count=1
function_arg	return [arg_2] ||| [arg_2] [function_1]	count=2
function	handles merging ||| handle merge	count=1
function	ff*ff**** ||| disjoint	count=1
arg	sending a single ||| from_email	count=1
class	case of ||| selenium test case	count=1
module	models to a ||| models	count=1
module	and return the ||| contrib	count=1
function	gml ||| gml	count=1
module	for easy lookups by ||| utils translation	count=1
module	of ||| db models	count=47
function	[function] version ||| spatialite version [function]	count=1
module	boundaries of the ||| contrib gis gdal	count=2
arg	query ||| query	count=5
arg	path (or ||| path	count=1
class	a decimal ||| decimal	count=1
class	if the session is ||| session	count=1
arg	queryset to implement ||| queryset	count=1
arg	of inline formsets ||| request form formsets	count=1
function	aware datetime object ||| datetime	count=1
class	the connection was ||| wrapper	count=1
arg	in the ||| response	count=1
function	remove ||| clear	count=3
module	parse [module] a ||| [module]	count=1
function	get a list of ||| list	count=1
class	of the field within ||| field	count=1
class	returns ||| data	count=1
function	admin [function_2] ||| [function_1] [function_2]	count=5
class	returns the ring ||| polygon	count=1
function	directory ||| find commands	count=1
function_arg	[function_1] downloaded it? ||| [function_1] header [arg_2]	count=4
function	return an absolute ||| absolute	count=1
module_class	[module_1] geometry and ||| [class_2] [module_1]	count=3
arg	defined as arguments ||| decimal_sep decimal_pos grouping	count=1
arg	data in instance suitable ||| instance	count=1
module	method ||| utils	count=1
arg	wkb ||| wkb	count=1
function_arg	[function_1] model ||| [arg_2] [function_1]	count=2
arg	for constructing the sql ||| geo_field field_name	count=1
function	returns the latest ||| latest	count=1
function_arg	given model [arg_2] ||| [function_1] [arg_2]	count=4
function	containing the year month ||| format	count=1
module	returns a dictionary ||| gis	count=2
function	[function_1] mask of ||| [function_1] annotation [function_2]	count=1
function_arg	[function_1] instance ||| [function_1] [arg_2]	count=2
function	to implement the search ||| search	count=1
function	header in the given ||| patch vary	count=1
module	the attributes set ||| contrib	count=1
class	unicode string is safe ||| safe	count=2
function_arg	file for [arg_2] ||| [function_1] [arg_2]	count=2
arg	compatible with ||| field	count=1
module	of all tables and ||| backends base	count=1
function	references [function_2] ||| [function_2] [function_1]	count=1
class	for configuration variables ||| settings holder	count=1
module	leading zeros i ||| utils	count=1
class	e '1' to ||| date	count=1
function	string [function_2] ||| [function_2] [function_1]	count=1
function	total [function] of ||| [function]	count=1
function	errors ||| error	count=1
arg	the given sql ||| sql	count=1
function	the relative path ||| path	count=1
function	the [function_2] ||| [function_1] [function_2]	count=14
arg	a value [arg_2] ||| [arg_1] [arg_2]	count=2
function	of annotations that will ||| annotation	count=1
arg	httprequest ||| request extra_context	count=1
function	session [function_2] ||| [function_2] [function_1]	count=2
module	fragment [module] a ||| [module] backends	count=1
module	returns the number ||| contrib	count=1
class	this form has ||| base form	count=1
module	if the model ||| contrib gis utils	count=1
arg	a reg-exp pattern ||| pattern	count=1
class	resets the ||| base database wrapper	count=1
module	gdal ||| gis gdal	count=3
function	[function_1] the limit ||| [function_2] [function_1]	count=2
module	on the spatial ||| contrib gis db backends	count=1
class	handler should be in ||| upload handler	count=1
module	of tuples [ ||| management commands	count=1
module	of the ||| contrib gis geos	count=1
class	from ||| session base	count=1
module	depending on whether the ||| contrib staticfiles	count=1
module_class	related [class_2] ||| [module_1] [class_2]	count=1
module	loading of data ||| db models	count=1
function	[function_1] [function_2] not extra_select columns) ||| [function_2] [function_1]	count=3
function	returns the current ||| get current	count=1
function	a format string ||| string	count=1
function	list of tuples [ ||| compile messages	count=1
class	values in the cache ||| cache	count=1
class	if the queryset is ||| set	count=1
function	relative ||| relative	count=1
class	in ||| holder	count=2
arg	the old [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=10
function	number of ||| lazy	count=1
arg	changes ||| changes graph	count=1
module	all tables and ||| db backends	count=1
function_arg	[function_1] deeper for ||| [function_1] field [arg_2]	count=4
function	changes the aliases in ||| change aliases	count=1
module	rows with invalid ||| db backends mysql	count=1
function	each time [function] saved or ||| clear [function]	count=1
function	[function_1] help ||| [function_2] [function_1]	count=1
module	models to a set ||| models	count=1
function	sort a list of ||| sort	count=1
function	file is writeable ||| writeable	count=1
module	return the ||| contrib gis gdal	count=1
class	where clause and the ||| where	count=1
function	mask of ||| mask	count=1
module	identified by the css ||| contrib admin	count=1
function	form class to ||| get form class	count=4
class	transaction and resets the ||| base database	count=1
class	leading zeros ||| format	count=1
function	tries to fetch the ||| fetch	count=1
module	corresponding models have been ||| apps	count=1
class	model instance the default ||| base model admin	count=2
function	related field's [function_2] ||| [function_2] [function_1]	count=4
module	representation of the geometry ||| contrib	count=1
module	the input ||| contrib gis	count=1
module_class	the app ||| contrib staticfiles app	count=1
module	operation instances ||| migrations	count=1
arg	binding power [arg] ||| bp [arg]	count=1
arg	given ||| request form	count=1
function	("app_label", ||| lazy	count=1
arg	instance through the ||| instance	count=2
module	minor [module] revision ||| [module]	count=1
module	the opposite of ||| db models	count=1
function	dimension of ||| dim	count=1
module_class	a [class_2] ||| [module_1] [class_2]	count=1
function	the managers using deconstruction ||| managers	count=1
function	matches any pattern in ||| matches	count=1
function	[function_1] save ||| [function_1] [function_2]	count=6
arg	dry routine for setting ||| func tolerance	count=1
function_arg	to link [arg_2] ||| [arg_2] [function_1]	count=1
module	applied migrations have unapplied ||| migrations	count=1
module	backends can implement as ||| backends base	count=2
class	loader ||| loader	count=1
arg	target ||| target	count=1
function	attempts to add ||| add message	count=1
class	the ||| safe	count=1
function	the app or ||| handle template	count=1
class	given a modelform return ||| model	count=1
function	placeholder sql ||| as sql	count=1
module	in the extra locations ||| contrib	count=1
arg	the field to ||| field created_separately	count=1
function	save this ||| save	count=2
module	sequence or string ||| utils	count=1
module_class	[module_1] the order ||| [module_1] [class_2] iter	count=3
class	module ||| settings	count=1
function	[function_1] time value ||| [function_2] [function_1]	count=4
module	names of ||| db models	count=1
function	of a db ||| db	count=1
class	[class_1] column ||| [class_1] [class_2]	count=3
arg	given contents [arg_2] ||| [arg_2] [arg_1]	count=1
arg	single message ||| subject message from_email	count=2
function	style ||| style	count=1
arg	true ||| request form	count=1
function	wrapper [function_2] ||| [function_2] [function_1]	count=2
class	not this handler should ||| file upload handler	count=1
function	aggregation period [function] dates 'year', ||| get [function]	count=1
function	paths to user-provides languages ||| all locale paths	count=1
function	pickling should return ||| reduce	count=1
class	instance for ||| base form set	count=1
function	column data type ||| type	count=1
function	the related field's name ||| field name	count=1
function	of chars ||| chars	count=1
module_class	[module_1] oftdatetime field ||| [module_1] [class_2]	count=8
function	[function_1] engine for ||| [function_2] [function_1]	count=2
function_arg	set the [arg_2] ||| [arg_2] [function_1]	count=6
arg	a gdalraster ||| rast	count=1
function	to all the cache ||| cache	count=1
module_class	geos geometry ||| gis geos geosgeometry	count=1
module	modelform return an ||| admin	count=1
module	major minor [module] revision number ||| [module]	count=1
function	all objects related ||| related objects	count=1
class	have ||| apps	count=1
function	[function_1] of interior ||| [function_2] [function_1]	count=1
arg	a key into ||| key version	count=1
module	and return ||| db backends oracle	count=1
arg	message to the managers ||| message fail_silently	count=1
function	true if the ||| is	count=2
function	return limit_choices_to for this ||| get limit choices to	count=1
function	extract transforms and lookup ||| lookup	count=1
function	the sql string and ||| as sql	count=1
function	level of ||| set	count=1
module	[ ||| core	count=1
arg	path (or none ||| path	count=1
function	sql statements required ||| sql flush	count=1
function_arg	last executed [arg_2] ||| [function_1] query [arg_2]	count=1
function	generate formsets for add/change_view ||| formsets	count=1
arg	of fields or an ||| fields	count=1
arg	values into two ||| values	count=1
arg	bunch of keys ||| keys	count=1
function_arg	merging [arg_2] ||| [function_1] sanity check [arg_2]	count=1
module	the ordinates with the ||| contrib gis	count=1
arg	value ||| value compiler	count=2
function	all the inner text ||| inner text	count=1
function	sqlite supports ||| supports	count=1
function	add http caching headers ||| headers	count=1
module	the ||| contrib gis db backends	count=3
function	[function_1] permissions ||| [function_2] [function_1]	count=3
arg	given a modelform ||| request	count=1
function	headers to the given ||| response headers	count=1
arg	cursor object ||| cursor	count=2
arg	table_names ||| table_names	count=2
function_arg	by [arg_2] ||| [function_1] [arg_2]	count=4
arg	if update_pk is ||| update_pk	count=1
function	the given [function] depends on ||| [function]	count=1
function_arg	[function_1] date ||| [function_1] next month [arg_2]	count=1
module	[module_1] but ||| [module_2] [module_1]	count=2
function	[function_1] field's name ||| [function_2] [function_1]	count=1
module	with [module_2] ||| [module_2] gis [module_1]	count=4
function	e '1' to '31' ||| j	count=1
function	returns the sql string ||| sql	count=4
function	connection settings_dict (a ||| test db signature	count=1
function	object represented by ||| object	count=1
function	return true if the ||| is ignorable	count=1
function	the given httpresponse object ||| patch vary	count=1
function	of tuples ||| messages	count=1
function	from settings middleware ||| middleware	count=1
function	saves and [function_2] ||| [function_1] [function_2]	count=2
function	parses one ||| parse	count=1
module	returns a dictionary ||| gis geoip	count=1
class	of the year ||| date	count=1
module	blocks of rows ||| db models	count=1
function	specifying custom readonly fields ||| get readonly fields	count=1
class	transaction ||| wrapper	count=1
class	the ogr [class] with ||| ogrgeom [class]	count=1
arg	routines that should not ||| result func cargs	count=1
function	file ||| compile messages	count=1
class	removes ||| migration graph	count=1
function	unget history ||| unget history	count=2
function_arg	parses one [arg_2] ||| [arg_2] [function_1]	count=1
module	returns a 6-tuple extent ||| gis db	count=1
arg	a single message to ||| subject message from_email	count=1
function	file object if ||| file complete	count=2
module	and resets the ||| db	count=1
function	cast a ||| cast	count=1
arg	a ||| request form	count=1
class	savepoint ||| base database wrapper	count=2
module	command ||| management	count=1
module	returns ||| gis db	count=22
class	returns ||| change list	count=1
arg	creates a field on ||| field	count=1
module	flag ||| backends base	count=2
module	for point_count ||| contrib gis gdal	count=1
arg	instance suitable ||| instance	count=1
function	known ||| merge known	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2] engine	count=10
module	wrapping the default ||| contrib	count=1
arg	update_pk is defined then ||| fields update_pk	count=1
module	a related ||| models fields	count=1
function	filter_horizontal ||| filter horizontal	count=1
arg	if update_pk ||| manager using fields update_pk	count=1
class	the ||| user	count=1
function	string pointer ||| string	count=1
module_class	[module_1] [class_2] ||| [module_1] backends [class_2]	count=2
arg	and a boolean indicating ||| search_term	count=1
function	javascript i18n functions ||| null javascript	count=1
module	3-tuple of class ||| db	count=1
function	to paginate [function_2] ||| [function_1] [function_2]	count=1
function_arg	returns the [function_1] [arg_2] update operation ||| base base database operations [function_1] [arg_2]	count=2
function_arg	max_num is ||| max num obj	count=1
function	single filter ||| filter	count=1
function	matches ||| matches patterns	count=1
class	a modified connection ||| database creation	count=1
module	list ||| utils translation	count=2
module_class	returns [class_2] ||| [class_2] [module_1]	count=1
function	classes ||| classes	count=1
function	for ||| factory	count=1
function	a number of ||| model	count=1
module	sql ||| sql	count=3
function	ordereddict of ordering field ||| ordering field	count=1
arg	load an email ||| fail_silently	count=1
module	if the original is ||| contrib gis	count=1
function	number of geometries in ||| len	count=2
arg	[arg_1] flags ||| [arg_2] [arg_1]	count=2
function	a given time zone ||| timezone	count=1
function	account the srid set ||| srid	count=1
arg	data ||| data	count=4
module	_meta fields instance ||| db models fields	count=1
module	urlconf can ||| generic	count=1
arg	returned instance ||| form instance fields	count=1
class	a genericforeignkey whose content ||| generic relation	count=1
module	status code and returns ||| gis geos prototypes	count=1
class	[class_1] projected? ||| [class_2] [class_1]	count=1
module	passed into this ||| models	count=1
module	geoip library and databases ||| geoip	count=1
module	modelform return ||| contrib admin	count=1
function	started ||| loaded	count=1
function	[function_1] header ||| [function_1] [function_2]	count=5
module	geosgeometry the ||| contrib gis	count=1
class	year i e '0' ||| date	count=1
class	dirty ||| wrapper	count=1
class	pathinfos ||| options	count=1
function	is already a quoted ||| quote	count=1
function	the union ||| or	count=1
function	interpolated ||| readable field data	count=1
arg	different spatial reference system ||| coord_trans	count=1
arg	message to ||| message	count=2
module	of (column_name referenced_table_name referenced_column_name) ||| db backends mysql	count=1
class	flag ||| wrapper	count=1
class	these are all ||| based cache	count=1
class	returns true ||| query set	count=1
class	of table ||| base database	count=1
function	the initial data ||| initial	count=1
module	of (column_name referenced_table_name referenced_column_name) ||| db	count=2
function	app configs ||| get app configs	count=2
class	return safe results ||| safe	count=2
arg	using ||| cls	count=1
class	lazystream must have ||| lazy stream	count=1
module	set on the client ||| contrib	count=1
function	is true if ||| save form	count=1
module	[module] osrget[angular|linear]units functions ||| contrib [module]	count=1
function	leaving a dangling ||| temporary	count=1
function	the current time zone ||| from current timezone	count=1
arg	for constructing ||| geo_field field_name	count=1
arg	outfile which is ||| outfile	count=1
module	or project templates ||| core management	count=1
module	of (column_name ||| db backends mysql	count=1
module	[module] adds headers ||| [module]	count=1
function_arg	paginate by or ||| paginate by queryset	count=1
function	[function] given ||| savepoint [function]	count=1
module	the given ||| contrib gis utils	count=1
function	helps ||| safe	count=1
module	the two geometries ||| contrib gis geos	count=1
function	[function_1] interval ||| [function_2] [function_1]	count=3
arg	occur in the full_plan ||| state plan full_plan fake	count=1
function	html string ||| text html	count=2
function	finder ||| finder	count=1
class	this site ||| site	count=1
function	a cache key ||| cache key	count=2
function	vary header ||| vary header	count=2
arg	and other ||| other	count=1
class	file ||| command	count=1
function	main version (x ||| main	count=1
module	output in the template ||| contrib admin	count=1
module	file ] ||| management	count=1
module_class	return [module_1] [class_2] ||| [module_1] [class_2]	count=2
class	we clear [class_2] ||| [class_2] [class_1]	count=6
module	the coordinate ||| contrib gis	count=3
function	aren't hidden ||| visible	count=1
function	preprocessed copy of ||| cleanup	count=1
module	from views and ||| backends sqlite3	count=1
function	instance returns a view ||| from	count=1
arg	unsaved instance ||| request form	count=1
module	whether the [module_2] ||| [module_1] [module_2]	count=2
function	matches ||| matches	count=1
module	other methods [module_2] ||| [module_2] [module_1]	count=3
arg	plural [arg_2] ||| [arg_1] [arg_2]	count=1
class	password ||| admin password	count=1
function	the [function] from ||| get [function] to	count=1
arg	instance to the ||| form instance fields exclude	count=1
arg	creates the sql ||| with_limits with_col_aliases	count=1
arg	function that ||| func cargs offset	count=1
arg	retrieves the specified ||| name mode	count=1
function	all table names that ||| table names	count=1
class	uses the date field ||| date list	count=1
function	m2m table ||| m2m	count=1
function	self connection settings_dict (a ||| db signature	count=1
function	for ||| num	count=1
function	[function_1] limit_choices_to for ||| [function_1] [function_2]	count=2
class	queryset instance ||| query set	count=1
function	encoding if the encoding ||| encoding	count=1
class	the list of dates ||| list view	count=1
function	http rfc7231 section 7 ||| http	count=1
function	list_per_page ||| list per page	count=1
module	error ||| gis geos prototypes	count=1
class	essentially the ||| query set	count=1
module	all [module] ||| [module]	count=3
arg	retrieve ||| dist_val lookup_type handle_spheroid	count=1
function	table names that have ||| table names	count=1
module	against ||| db models	count=1
arg	a view function as ||| view_func	count=1
arg	and applies the ||| collect_sql	count=1
function	[function_1] radio_fields dictionary ||| [function_2] [function_1]	count=4
function	true if ||| has	count=2
arg	[arg] the ||| [arg]	count=3
function	parse a [function_2] ||| [function_2] [function_1]	count=1
function	this ||| html	count=1
class	the dirty ||| database wrapper	count=1
function	id field is a ||| id field	count=1
function	a sensible [function] for ||| [function] for	count=1
module	used by the ||| contrib	count=1
arg	ordereddict ||| paths dry_run	count=1
module	with the ||| contrib gis db backends	count=1
function	[function_1] of ||| [function_2] [function_1]	count=4
arg	field to be ||| field	count=1
arg	tuple containing a queryset ||| queryset	count=1
function	a model ||| model	count=2
class	this hasher ||| password hasher	count=1
class	a transaction ||| database	count=1
module	list of (column_name ||| db backends	count=2
module	list of datetime ||| models	count=1
function	[function_1] the sql ||| [function_2] [function_1]	count=6
function	returns a cache ||| generate cache	count=1
function	po ||| write po	count=1
module	the default ||| contrib	count=1
arg	function ||| result func cargs offset	count=1
class	for ||| bound	count=1
function_arg	list_select_related is ||| select related obj	count=1
function	the given httpresponse object ||| headers	count=1
module	with elements of ||| db backends	count=1
function	a point geometry guaranteed ||| point	count=1
arg	value ||| value compiler connection	count=1
module	a management ||| management	count=1
arg	the arg to the ||| arg	count=1
class	lazystream must have a ||| lazy stream	count=1
module	dirty flag ||| db backends base	count=1
function	invalid ||| invalid	count=1
function	and ||| operation	count=3
class	from the database ||| database	count=1
module	that contains all the ||| contrib	count=1
class	[class_1] or ||| [class_2] [class_1]	count=2
class	the index ||| index	count=1
function	a list of paths ||| locale paths	count=1
module	a ||| core management	count=1
function	just performed an insert ||| last insert	count=1
function	check ||| check	count=8
module	the field's value ||| contrib gis	count=1
function	uniquely identifies a ||| signature	count=1
arg	in tests only as ||| lookup_name	count=1
class	if ||| settings	count=1
function	given ||| patch	count=1
module	some backends require ||| backends	count=1
function_arg	dates for [arg_2] ||| [arg_2] [function_1]	count=2
class	engine definitions ||| engine handler	count=1
class	returns the ||| safe	count=1
arg	and context ||| context	count=1
class	like settings ||| connection	count=1
module	contain helpful ||| generic	count=1
module	for backends that ||| backends	count=1
arg	"vary" header ||| newheaders	count=1
module	[module_1] the field ||| [module_2] [module_1]	count=8
arg	pattern ||| pattern	count=1
function	checks ||| check	count=17
module	from the ||| contrib gis geos	count=1
function	model class ||| class	count=1
function	[function_1] point with ||| [function_2] [function_1]	count=3
module	backends can implement ||| db backends base	count=2
module	satisfied from the module ||| conf	count=1
function	script that may ||| script	count=1
function	[function_1] placeholder ||| [function_2] [function_1]	count=1
function	the last object ||| last	count=1
module	set of ||| db models sql	count=1
function	references the given ||| references	count=1
arg	y z ||| y z	count=2
module	this view with ||| views generic	count=2
function	use for the object ||| context object	count=1
function	instance ||| save	count=1
module_class	are present usually 2 [module_1] [class_2] opening other pop-ups ||| [module_1] [class_2]	count=2
function	version number and ||| full version	count=2
module	related ||| models fields	count=2
arg	length and [arg_2] ||| [arg_2] [arg_1]	count=1
function	to [function_2] ||| [function_2] [function_1]	count=12
function	be used to descend ||| select related descend	count=1
function	list of items ||| queryset	count=1
class	a genericforeignkey ||| generic relation	count=1
class	validate_unique on [class] and raises ||| [class]	count=1
arg	message to the ||| message fail_silently connection	count=2
class	start ||| database operations	count=1
class	feature ||| feature	count=2
arg	geometry [arg_2] ||| [arg_2] [arg_1]	count=1
module_class	for the given ||| contrib staticfiles hashed	count=1
function_arg	the passed [arg_2] ||| [arg_2] [function_1]	count=1
class	get ||| database operations	count=1
function	context if ||| context	count=1
arg	source and target ||| source target	count=3
function	[function_1] to fail ||| [function_2] [function_1]	count=1
class	this handler should ||| memory file upload handler	count=1
module	this instance and increments ||| models	count=1
module	the equivalent attributes ||| contrib	count=1
module	resets the dirty flag ||| db backends	count=1
function	a list of ||| messages	count=1
arg	the first character in ||| input_iter	count=1
class	field has ||| field	count=1
arg	constructing the sql ||| geo_field field_name	count=1
function	take a ||| lazy model	count=1
module_class	name of [class_2] ||| [module_1] [class_2]	count=2
module	migrations with dependencies on ||| migrations	count=1
class	of files called from ||| files	count=1
arg	each field ||| obj field	count=1
function	ordering the queryset ||| get ordering	count=1
function_arg	builds a [arg_2] ||| [function_1] filter [arg_2]	count=4
module_class	[module_1] error ||| [module_1] deserialization [class_2]	count=1
arg	the given contents ||| contents	count=1
class	geometry objects and may ||| geosgeometry	count=1
function	cascaded union of ||| cascaded union	count=1
function	returns the version ||| version	count=1
function	the corresponding ||| model operation	count=1
module	clone of the ||| contrib gis	count=2
module	the uniqueness ||| contrib gis utils	count=1
module	static ||| staticfiles	count=1
arg	a function that ||| result func cargs	count=1
class	may be converted to ||| field	count=1
arg	deeper for select_related() purposes ||| restricted requested load_fields	count=1
function	[function_1] field is ||| [function_2] [function_1]	count=1
module_class	[module_1] [class_2] ||| [module_1] sessions backends [class_2]	count=4
function_arg	string and [arg_2] ||| [function_1] [arg_2]	count=1
function	models ||| model	count=1
function	returns all ||| get all	count=2
function	id field ||| id field	count=2
class	a modelform return ||| model admin	count=1
module	urlconf can ||| views	count=1
module	with ||| core cache backends	count=2
class	is safe ||| safe bytes	count=1
function	number of ("app_label", ||| model	count=1
arg	of arg from the ||| arg	count=1
arg	functions ||| func argtypes errcheck	count=1
module	mapping models ||| db models sql	count=1
arg	x y [arg_2] ||| [arg_1] [arg_2]	count=1
class	model ||| model admin	count=3
class	may be converted ||| field	count=1
arg	of keys from the ||| keys version	count=1
module	[module_1] [module_2] spatialite version as ||| [module_2] [module_1] spatialite spatia lite operations	count=1
class	[class_1] records useful ||| [class_1] [class_2]	count=3
arg	retrieves the specified file ||| mode	count=1
function	format string and then ||| format html	count=1
function	manager for [function_2] ||| [function_2] [function_1]	count=1
arg	for sending a single ||| from_email	count=1
arg	source ||| source	count=2
function	[function_1] a test ||| [function_2] [function_1]	count=4
class	for the object's ||| base model form	count=1
class	coordinates ||| geoscoord seq	count=1
module	of ||| db backends sqlite3	count=4
module_class	[module_1] [class_2] ||| [module_1] gis geos [class_2]	count=1
module	the user in confirm ||| contrib	count=1
function	not ||| ask not	count=4
class	[class_1] [class_2] should execute its ||| [class_1] [class_2]	count=1
function_arg	[function_1] arg ||| [arg_2] [function_1]	count=1
module	equals ||| core files	count=1
function	of ordering [function_2] ||| [function_2] [function_1]	count=2
class	memcached deals ||| memcached cache	count=1
arg	given the database connection ||| connection	count=1
module	true if the ||| db	count=1
function	sql expression that returns ||| sql	count=1
function	the extra [function_2] ||| [function_1] [function_2]	count=3
function	the raw [function_2] ||| [function_1] [function_2] input_data meta content_length boundary	count=1
arg	prevent ||| name	count=1
function	[function_1] of this ||| [function_2] [function_1]	count=3
function	a number of ("app_label", ||| model operation	count=1
arg	of the geometry ||| geom	count=1
module	take the following ||| contrib	count=1
module	field value can be ||| db models	count=1
function	to user-provides languages files ||| all locale	count=1
function	[function_1] text wrapping ||| [function_2] [function_1]	count=1
module	backends require ||| db backends	count=1
function	the week ||| get week	count=1
arg	lookups specified in a ||| lookups	count=1
function	extra forms in ||| extra forms	count=2
function	return geometries ||| geom	count=1
module	language-code if there is ||| utils translation	count=1
function	valid redirect to ||| valid	count=1
arg	formset for the given ||| formset extra	count=1
module	the spatial object ||| contrib gis	count=1
class	from ||| query set	count=1
module	for customizing ||| admin	count=2
module	returns a python date ||| gis gdal	count=1
arg	for searching ||| cl	count=1
module_class	list of [class_2] ||| [module_1] [class_2] get	count=3
function	in suitably sized batches ||| del batches	count=1
arg	an unsaved instance change ||| change	count=1
function	str ||| str	count=1
arg	a key into a ||| key	count=1
function_arg	model's 'get_latest_by' [function_1] [arg_2] ||| [function_1] latest [arg_2] direction	count=1
class	zeros i e ||| date	count=1
module	the return_geom keyword ||| contrib gis	count=1
function	returns the command class ||| command class	count=1
module	set of fields ||| db models sql	count=1
function	to manually configure ||| configure	count=1
function	("app_label", ||| model operation	count=1
function	coordinate ||| get coord	count=1
arg	for null placeholder ||| placeholder params	count=1
module	of the given ||| contrib gis	count=3
module	definitions (structured like settings ||| db	count=1
function	all actions for ||| actions	count=1
function	for the css ||| get css	count=1
class	open cache ||| cache	count=1
module	[module] the ||| [module]	count=4
class	removes ||| remote user middleware	count=1
arg	static locations ||| path	count=1
module	of fields to exclude ||| models sql	count=1
function	uniquely identifies [function_2] ||| [function_2] db [function_1]	count=1
function	an object ||| object	count=2
arg	given name ||| name	count=2
module	without leading ||| utils	count=1
class	can [class] used to ||| [class]	count=1
function	the form ||| get form	count=2
class	response ||| template response	count=1
class	numeric i ||| date	count=1
module	returns the given ||| contrib sessions	count=1
module_class	[module_1] a cookie ||| [module_1] [class_2]	count=2
function	returns the form ||| get form	count=2
module	for configuration variables not ||| conf	count=1
class	all the ||| base	count=2
function	on the surface of ||| surface	count=1
arg	[arg_1] content ||| [arg_2] [arg_1]	count=3
module	of forms ||| forms	count=1
function	return a field instance ||| get	count=1
arg	element identified by selector ||| selector	count=1
module	after the ||| contrib	count=1
function	prefetch objects ||| prefetch	count=1
function	class ||| class	count=5
arg	value for use in ||| value safe	count=1
function	list of paths to ||| locale paths	count=1
arg	directory in template_dirs ||| template_name template_dirs	count=1
function	point ||| point	count=3
module	a dictionary mapping models ||| db models sql	count=1
module	returns ||| gis geoip	count=3
arg	[arg] it will ||| [arg]	count=2
class	5322 formatted date ||| date	count=1
arg	lhs ||| lookups lhs rhs	count=1
function	class are ||| init	count=1
class	template and context described ||| simple template	count=1
function	function to create ||| create generic related	count=2
function_arg	[function_1] response ||| [function_1] [arg_2]	count=2
arg	function and ||| result func	count=2
function	defined by the managers ||| managers	count=1
function	the current ||| setitem	count=1
function	for ogrinspect ||| ogrinspect	count=1
function	and registered ||| model operation	count=1
function	instance's validate_unique() method and ||| validate unique	count=1
class	the year i ||| format	count=1
class	has ||| model admin	count=2
module	the ||| db backends base	count=2
function	migrations in ||| check migrations	count=1
class	resets the dirty ||| database wrapper	count=1
function	empty_value_display set ||| empty value display	count=1
module	related ||| db models fields	count=2
arg	of inline formsets ||| request form formsets change	count=1
arg	context_lines ||| context_lines	count=1
class	of the month ||| format	count=1
class	or has choices defined ||| admin	count=1
function	new ||| init	count=1
module	models to a ||| db models	count=1
function	*models returns a dictionary ||| get for models	count=1
arg	text ||| text	count=3
class	the module specified in ||| user settings holder	count=1
arg	a schema_editor ||| schema_editor	count=1
module	[module] osrget[angular|linear]units ||| contrib [module]	count=1
module	and ||| template	count=1
class	models have ||| apps	count=1
arg	for null placeholder needed ||| placeholder	count=1
function	returns ||| locale	count=1
arg	a single message to ||| message from_email	count=1
function	[function_1] value ||| [function_2] to [function_1]	count=3
function	generate a cache key ||| cache key	count=1
module	template and renders ||| template	count=1
class	[class_1] queryset ||| [class_2] [class_1]	count=1
function	the response as kml ||| kml	count=1
function	the maximum length of ||| max name length	count=1
function	deserialize a stream ||| deserializer	count=1
function	attempts to ||| ensure registered	count=1
function	in ||| make	count=2
module	from ||| sqlite3	count=1
function_arg	deserialize a [arg_2] ||| [arg_2] [function_1]	count=2
arg	geometry type [arg] ||| [arg]	count=2
arg	absolute path (or ||| root path prefix	count=1
function	copy ||| copy	count=1
class	value in the cache ||| cache	count=1
function_arg	model references [arg_2] ||| [arg_2] [function_1]	count=1
function	name is ||| name	count=2
arg	that has a get_prefetch_queryset() ||| through_attr to_attr	count=1
function	the admin url to ||| get admin url	count=1
module	fields instance of the ||| models fields	count=1
arg	module ||| module	count=1
function	adds a ||| add	count=3
function	method will [function_2] ||| [function_1] [function_2]	count=2
class	value on every ||| multi value	count=1
module	guaranteed to ||| contrib sessions	count=1
function	of app configs ||| app configs	count=1
function	from file ||| from file	count=2
function_arg	template name in ||| find template name	count=1
function	from a ||| from	count=3
module_class	view with [class_2] ||| [module_1] generic [class_2]	count=3
function	a tuple of ||| tuple	count=1
class	sequences ||| database operations	count=1
function	[function_1] z with ||| [function_1] [function_2]	count=1
function	cast ||| cast	count=1
arg	to the exception ||| exception request	count=1
function	in name ||| parse name	count=1
arg	pattern in ignore_patterns) ||| patterns	count=1
arg	changed it ||| new_type	count=1
function	generate new pk values ||| pk value	count=1
class	this geometry is ||| geometry	count=1
module	a clone of the ||| contrib gis	count=1
function	that returns ||| output	count=4
function	georss [function_2] ||| [function_2] [function_1]	count=3
arg	must be overridden ||| request model_admin	count=1
module	are ||| conf	count=1
class	widget ||| widget	count=1
function	a search form for ||| search form	count=1
module	end with ||| db	count=1
arg	parameters returns the appropriate ||| protocol	count=1
function	[function_1] test database ||| [function_2] [function_1]	count=1
function_arg	adds the [arg_2] ||| [arg_2] [function_1]	count=4
module	message which can be ||| core mail	count=1
function	form class to use ||| get form class	count=2
function	[function_1] related models ||| [function_2] [function_1]	count=3
arg	is true ||| request form	count=1
arg	instance finds an object ||| instance	count=1
function	[function_1] point with ||| [function_1] [function_2]	count=3
function_arg	executed [arg_2] ||| [function_1] query [arg_2]	count=1
function	middleware and call the ||| get	count=1
module	c geos geometry ||| gis geos prototypes	count=1
function	name for ||| set name	count=1
arg	the given ||| plan state	count=1
arg	[arg_1] exist ||| [arg_1] [arg_2]	count=4
class	root ||| syndication feed	count=1
module	the admin ||| contrib admin templatetags	count=2
module_class	with the [class_2] ||| [module_1] gis utils [class_2]	count=4
function	joins ||| joins	count=1
function_arg	[function_1] sequence comprising ||| [arg_2] [function_1]	count=1
function	solve ||| solve	count=1
arg	signed more than max_age ||| max_age	count=1
function	sql query that ||| sql	count=1
function	queryset of objects ||| objects	count=1
function	tuples and when all ||| operation	count=1
class	the field has an ||| field	count=1
arg	cls [arg_2] ||| [arg_2] [arg_1]	count=4
function	for the [function_2] ||| [function_2] [function_1]	count=2
class	email [class_2] ||| [class_2] [class_1]	count=1
arg	arg to [arg_2] ||| [arg_2] [arg_1]	count=2
module	the particular ||| contrib gis db	count=1
function	[function_1] [function_2] context ||| [function_2] [function_1]	count=4
function	is ||| save form	count=2
arg	contents in a ||| contents	count=1
function	of paths ||| locale paths	count=1
module	optional dictionary of ||| db	count=1
module_class	[module_1] table ||| [module_1] [class_2] operations quote	count=2
module	up into ||| db	count=1
class	version of the form ||| form	count=1
function	number of points in ||| num points	count=1
module	default (sqlite_limit_variable_number) of ||| db backends	count=1
function	in the widget ||| widget	count=1
module	undo the effects of ||| contrib	count=1
module	this formset ||| forms	count=1
function_arg	admins [arg_2] ||| [arg_2] [function_1]	count=1
module	a modelform return an ||| admin	count=1
module	prevents mysql ||| backends mysql	count=1
arg	updates the "vary" ||| response newheaders	count=1
function	or a sequence ||| get	count=1
module	and ||| core cache backends	count=1
function	paths to user-provides ||| paths	count=1
module	should ||| staticfiles	count=1
module	to the stack of ||| template	count=1
class	model instance ||| model admin	count=2
module	the template ||| template	count=1
function	datetime date ||| date	count=2
function	key to ||| key	count=1
class	optional dictionary of ||| handler	count=1
function	stddev as an ||| stddev	count=1
class	resets the ||| wrapper	count=1
module	returns a ||| gis gdal	count=6
arg	expressions provide ||| expression connection	count=1
arg	specified in default_settings ||| default_settings	count=1
function	return a [function_2] ||| [function_2] [function_1]	count=11
class	permission this method ||| permissions	count=1
function	the deferred loading set ||| deferred loading	count=1
class	in this ||| settings	count=1
arg	func to ||| func	count=1
class	(structured like ||| connection	count=1
class	these are all the ||| based	count=1
function_arg	a native [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	descend [arg_2] ||| [arg_2] [function_1]	count=4
module	point in the coordinate ||| contrib gis	count=1
class	this queryset to the ||| query set	count=1
class	the field on ||| field	count=1
function	the placeholder for the ||| placeholder	count=1
function	check that the pattern ||| check pattern	count=1
arg	queryset to ||| queryset	count=1
arg	from [arg] cache-control header ||| [arg]	count=1
module	tests the ||| contrib	count=1
function	and return [function_2] ||| [function_2] [function_1]	count=1
module	of 'year', 'month' or ||| db backends base	count=1
function	the css ||| css	count=1
function	modified since ||| modified since	count=2
module	dictionary with the ||| contrib gis geoip2	count=1
function	handler if ||| handler	count=1
class	configuration variables not ||| user settings	count=1
class	e '0' sunday to ||| date	count=1
function	don't match the migrations ||| check migrations	count=1
function	login form ||| login	count=1
module	lookups ||| translation	count=1
module	auth use by ||| auth	count=1
module	a ||| backends base	count=3
function	take a ||| model operation	count=1
function	migration ||| migration	count=1
module	range of different return ||| db models	count=1
function_arg	set [arg_2] ||| [function_1] [arg_2]	count=4
arg	returned instance to ||| instance fields exclude	count=1
module	indicate the particular ||| contrib	count=1
class	the root connector ||| node	count=1
module	the specified index the ||| contrib gis	count=1
module_class	forms in [class_2] ||| [module_1] [class_2] iter	count=3
function	builds a ||| build	count=1
module	the __html__ method ||| utils	count=1
function	given ||| patch vary	count=1
class	this coordinate sequence ||| seq	count=1
module_class	of the [class_2] ||| [module_1] gdal [class_2]	count=1
module	the spatial_ref_sys or ||| contrib gis db	count=1
function	[function_1] key on ||| [function_2] [function_1]	count=1
module	information in the ||| contrib sessions	count=1
function	the current [function_2] ||| [function_1] [function_2]	count=9
function	of a package ||| package	count=1
function	dict containing ||| to dict	count=1
module	fields passed into this ||| db	count=1
module	for ||| core cache backends	count=1
arg	of those strings according ||| arg	count=1
class	its dictionary mapping this ||| layer mapping	count=1
arg	ctypes function ||| func argtypes errcheck	count=3
module	month without leading zeros ||| utils	count=1
function	'second', [function_2] ||| [function_2] [function_1]	count=4
module	whether the set ||| contrib	count=1
class	and ||| migration	count=1
function	compile a ||| compile	count=1
function	updates ||| vary	count=1
function_arg	etag return [arg_2] ||| [function_1] [arg_2]	count=1
function	name in name ||| name	count=1
class	needed ||| database operations	count=1
function	items for ||| queryset	count=1
class	of the month ||| date	count=1
module	on the first lookup ||| models	count=1
function	to select ||| geocol select	count=1
function	an ogr feature ||| feature	count=1
function	[function_1] change the ||| [function_2] [function_1]	count=2
class	for configuration variables not ||| user settings holder	count=1
module	the passed-in 2-tuple a ||| contrib gis	count=1
arg	returns context_lines ||| context_lines	count=1
arg	a form [arg_2] ||| [arg_2] [arg_1]	count=1
function	clone a ||| clone	count=1
function	[function_1] flattening for ||| [function_1] [function_2]	count=1
class	string ||| data	count=1
module_class	[module_1] oftdate field ||| [module_1] gis gdal [class_2]	count=1
class	limit_choices_to to the field ||| related field	count=1
module	for backends that return ||| backends	count=1
function	[function_1] given datetime ||| [function_2] trunc [function_1]	count=1
module	to perform the operation ||| contrib gis	count=1
class	satisfied from ||| settings	count=1
module_class	of this [class_2] ||| [class_2] [module_1]	count=21
arg	related instance through ||| instance	count=2
module	a transaction ||| db backends base	count=1
function	translate [function_2] ||| [function_2] [function_1]	count=6
arg	a more explanatory message ||| cls original_exc model	count=1
function	[function_1] context ||| [function_1] [function_2]	count=1
function	wkt text ||| wkt	count=1
arg	type uniqueness nullability default ||| old_field new_field strict	count=1
function_arg	[function_1] searching ||| [function_1] [arg_2]	count=4
arg	[arg] cache-control header ||| [arg]	count=1
function	that return geometries ||| geom	count=1
function	[function_1] modified ||| [function_1] [function_2]	count=1
class	the corresponding models have ||| apps	count=1
function	ordering the queryset ||| ordering	count=1
arg	in ||| response	count=1
function	a distance ||| distance	count=1
function	return an instance ||| get connection	count=1
class	'1' to ||| date format	count=1
function	the ||| get response	count=2
class	project ||| command	count=1
function	related field's name ||| field name	count=2
function	on save this ||| on save	count=2
function	relational fields ||| relational field	count=1
module	[module_1] [module_2] a ||| [module_2] [module_1]	count=10
class	up for ||| geo query	count=1
module	to set this ||| contrib gis gdal	count=1
arg	string of yaml data ||| stream_or_string	count=1
arg	given form ||| form commit	count=1
class	optional dictionary of database ||| handler	count=1
arg	the exception should ||| request exception	count=1
class	model instance for ||| base model form set	count=1
class	database already exists ||| database	count=2
function	[function_1] aware ||| [function_1] [function_2]	count=1
function	multiple [function_2] ||| [function_1] [function_2]	count=1
function	returns a set ||| get	count=1
function	supports ||| supports	count=1
class	can contain helpful extra ||| view	count=1
module	a tuple of the ||| contrib	count=2
module	[module_1] the name ||| [module_1] [module_2]	count=1
arg	extracting positional and ||| params varargs	count=1
class	memcached deals ||| base memcached	count=1
class	the objects ||| nested objects	count=1
function_arg	[function_1] name with ||| [function_1] model_name [arg_2]	count=1
module	a tuple with elements ||| db backends base	count=1
function	test settings are ||| prepare test settings	count=2
function	to migrate the ||| migrate model	count=1
function	will return [function_2] ||| [function_2] [function_1]	count=4
function_arg	tag libraries [arg_2] ||| [function_1] [arg_2]	count=2
function	a secret (assumed ||| cipher	count=1
function	checks whether ||| check	count=2
function	temp columns ||| temp	count=1
function	salt and using ||| salt	count=1
function	re-throws [function] exceptions using ||| wrap [function]	count=1
module	returns the description for ||| contrib	count=1
module	[module_1] user has ||| [module_1] [module_2]	count=2
module	this accessor retrieves the ||| gis db models	count=1
module	from the coordinate sequence ||| contrib	count=1
class	this command ||| command	count=2
function	not null field to ||| ask not null	count=2
class	expression and all subexpressions ||| base expression	count=1
class	the sense of ||| node	count=1
module	easy ||| translation	count=1
function	returns a dict containing ||| model to dict	count=1
function	available dates for the ||| dates	count=1
function	[function_1] relation ||| [function_2] [function_1]	count=1
module	of different return ||| models fields	count=1
function	sql statements required ||| sql	count=3
function	all key [function_2] ||| [function_2] [function_1]	count=12
function	etags given ||| etags	count=1
class	returns a decimal ||| decimal	count=1
function	that [function_2] ||| [function_2] [function_1]	count=8
module	with elements ||| db backends base	count=1
class	'objs' to the collection ||| collector	count=1
function_arg	[function_1] of timezone ||| [arg_2] [function_1]	count=2
arg	response so that ||| view_func	count=1
function_arg	[function_1] dom node ||| [function_1] [arg_2]	count=3
class	for a ||| http response base	count=1
class	the ||| settings	count=1
function	[function_1] forms in ||| [function_1] [function_2]	count=2
function	fields ||| order fields	count=1
module	directory file ||| commands	count=1
module	oracle doesn't have ||| backends oracle	count=1
class	numeric i ||| date format	count=1
function	extra [function] ||| feed extra [function]	count=3
function	of app ||| app	count=1
module	name of ||| db models	count=2
function	"modelname") tuples and ||| operation	count=1
module	name [module] name can ||| [module]	count=1
function	as a list ||| list	count=1
function	a geometry [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] short name ||| [function_1] [function_2]	count=1
function	through [function_2] ||| [function_2] [function_1]	count=3
function	tuples ||| compile	count=1
function	key function to use ||| key func	count=1
function	from the ||| get	count=1
function	the login ||| to login	count=1
arg	return an unsaved ||| form	count=1
function	info ||| info	count=1
function_arg	in a [arg_2] ||| [arg_2] [function_1]	count=1
function	returns a dict ||| dict	count=1
function	[function_1] object ||| [function_2] [function_1]	count=23
class	not this handler ||| memory file upload handler	count=1
function	previous valid ||| get previous	count=3
class	in this class ||| user settings holder	count=1
arg	the cursor ||| cursor	count=1
arg	first character in ||| input_iter	count=1
function	initializes on the ||| init	count=1
function	or project templates are ||| handle template	count=1
class	for the spatial column ||| spatial field	count=1
module	[module] adds ||| [module]	count=1
function	models have been imported ||| lazy model	count=1
module	directory file ] ||| commands	count=1
module	of oracle ||| db backends oracle	count=1
function	weekday for a given ||| weekday	count=1
module	list of date objects ||| db models	count=1
module	the equivalent ||| contrib contenttypes	count=1
function	loads session [function] ||| [function]	count=3
function	the initial data ||| get initial	count=1
function	precision ||| precision	count=2
module	returns a 3-tuple of ||| db	count=1
module	constructing the ||| contrib	count=1
arg	the returned instance to ||| form instance	count=1
function	have been imported ||| operation	count=1
module	tuples [ directory file ||| management commands	count=1
module	with [module_2] ||| [module_2] [module_1]	count=4
class	list ||| simple list filter	count=2
function	language ||| language from	count=1
function	creation time as ||| created time	count=1
module	lookup value and ||| db backends postgis	count=1
arg	list of inline formsets ||| request form formsets	count=1
function	returns an extra ||| item extra	count=1
arg	given username email and ||| username email	count=1
module	configuration variables ||| conf	count=1
class	an open cache ||| based cache	count=1
module	given c arguments that ||| gis gdal prototypes	count=1
module	been imported and ||| apps	count=1
arg	by the given cursor ||| cursor sql	count=1
class	essentially the opposite ||| query set	count=1
function	total [function] of objects ||| [function]	count=1
function	generate formsets for ||| create formsets	count=1
function	get the object this ||| get object	count=1
module	of digits ||| db models fields	count=1
module	string for ||| utils	count=1
module	sure the ||| contrib gis	count=1
module	and ||| template backends	count=2
module	converts the type of ||| contrib admin	count=1
module	the query ||| contrib gis db models	count=1
class	number of ||| apps	count=1
class	current session data ||| session	count=1
module	to register all the ||| contrib gis	count=1
module_class	yields the [module_1] [class_2] be rendered ||| [module_1] [class_2]	count=2
module	message storage on the ||| contrib	count=1
module	false if the ||| contrib gis	count=1
function	is ||| save	count=1
function	forms in this ||| forms	count=1
class	dictionary of ||| connection handler	count=1
function	" none " choice ||| choice	count=1
function	many-to-many [function] objects when ||| prefetch [function]	count=1
function	lookup the template ||| template	count=1
function	metaclass ||| add metaclass	count=1
function	a label ||| for label	count=1
arg	and values [arg_2] ||| [arg_2] [arg_1]	count=1
function	mask [function] ||| set [function]	count=1
class	of table names ||| base database introspection	count=1
function	field to not null ||| not null	count=2
function_arg	wkt text [arg_2] ||| [function_1] [arg_2]	count=3
function	python model class for ||| model class	count=1
arg	given cursor with placeholders ||| cursor	count=1
module	with ||| db models	count=3
function	sets the y ||| y	count=1
function	and available for new ||| available	count=1
class	leading ||| format	count=1
function	checks for changed ||| changed	count=1
module	dictionary mapping models ||| models	count=1
function	given *models returns a ||| get for models	count=1
module	return an unsaved ||| contrib	count=1
arg	field is [arg_2] ||| [arg_1] [arg_2]	count=1
function	take a ||| operation	count=1
function	the type returned when ||| field type	count=1
module	files in the ||| contrib	count=2
module	the spatial ||| contrib	count=1
module	and view ||| db backends	count=3
arg	boolean indicating [arg_2] ||| [arg_2] queryset [arg_1]	count=1
module	class are ||| conf	count=1
module	described in the template ||| template	count=1
class	for configuration ||| settings holder	count=1
arg	the specified app_label ||| cls app_label	count=1
module	a list of (column_name ||| db backends sqlite3	count=1
function	app [function_2] ||| [function_1] [function_2]	count=1
function	get the [function_2] ||| [function_2] [function_1]	count=11
module	and return all ||| db backends oracle	count=1
function	media required to render ||| media	count=1
class	this ||| user settings	count=1
arg	cls using values ||| cls using update_fields	count=2
function	returns [function_2] ||| contenttypes content type manager [function_1] [function_2]	count=1
function	a not [function_2] ||| [function_1] [function_2]	count=8
function	to find what language ||| get language	count=1
module	when requested the ||| contrib gis	count=1
arg	for checking the given ||| opts	count=1
module	an unsaved ||| admin	count=1
arg	a field_name which may ||| field_name field_index	count=1
function	of filenames ||| filenames	count=1
module	free the ||| contrib gis	count=1
arg	given cursor with ||| cursor sql	count=1
arg	the start date of ||| date	count=4
class	supports ||| database features	count=1
arg	constructing ||| geo_field field_name	count=1
class	requests for configuration ||| user	count=1
arg	[arg_1] values to ||| [arg_2] [arg_1]	count=1
function_arg	date [arg_2] ||| [function_1] [arg_2]	count=2
function	[function] constraints ||| [function]	count=1
arg	of the field to ||| field created_separately	count=1
function	of sql statements ||| sql flush	count=1
arg	in ||| timeout	count=1
class	true if ||| model admin	count=1
function	of database ||| init	count=1
function	for ||| get	count=1
function	return all models ||| get related models	count=4
function	[function_1] migration files ||| [function_1] [function_2]	count=4
module	contains all the ||| contrib	count=1
function	list of fields to ||| fields	count=1
module	for the given ||| contrib	count=2
function	project templates ||| handle template	count=1
module	geometry or raster taking ||| gis db models	count=1
function	deferred [function_2] ||| [function_2] [function_1]	count=4
function	week ||| week	count=2
class	the fields passed ||| query	count=1
function	headers to [function_2] ||| [function_2] [function_1]	count=4
module_class	[module_1] server ||| [module_1] [class_2]	count=1
function	in the current ||| setitem	count=1
arg	value contains ||| value	count=1
module	routine for checking the ||| contrib	count=2
class	value on every key ||| value	count=1
function	the template ||| template	count=1
function_arg	settings [arg_2] ||| [function_1] get [arg_2]	count=1
module	the set of ||| db models sql	count=1
function	[function_1] header ||| [function_2] [function_1]	count=5
arg	start is ||| start	count=1
module_class	[module_1] their ||| [module_1] [class_2]	count=5
arg	a source [arg_2] ||| [arg_1] [arg_2]	count=1
module	template [module_2] ||| [module_1] [module_2]	count=4
function	corresponding ||| lazy	count=1
class	the reverse [class_2] ||| [class_1] [class_2]	count=2
arg	reset [arg] based ||| [arg]	count=1
function	and filters from a ||| load from	count=1
class	or may be ||| field	count=1
module	this ||| contrib gis gdal	count=6
function	for any otherwise uncaught ||| uncaught	count=1
class	objects into ||| nested objects	count=1
module	list of tuples ||| commands	count=1
arg	geoqueryset ||| precision crs bbox	count=1
function	the options ||| options	count=1
function_arg	to [arg_2] ||| [arg_2] [function_1]	count=1
function	returns [function_2] ||| [function_2] [function_1]	count=30
arg	value and check ||| value	count=1
arg	can be sent to ||| to	count=1
module	so [module] geo_format ||| [module] gis	count=1
module	further processing ||| translation	count=1
function	foreign [function_2] ||| [function_2] [function_1]	count=1
module	geometry field distance ||| gis	count=1
class	template and context described ||| simple template response	count=1
function	ends with ||| endswith	count=1
module	and return the uniqueness ||| contrib gis utils	count=1
module_class	is this [class_2] ||| [class_2] [module_1]	count=1
module	an order_by() ||| models	count=1
module	tables and views ||| backends	count=1
arg	expressions provide ||| expression connection context	count=1
module	the equivalent attributes on ||| contrib	count=1
arg	receiver to sender ||| receiver sender weak dispatch_uid	count=1
function	random [function_2] ||| [function_1] [function_2]	count=3
function	the form class to ||| form class	count=2
class	i ||| date format	count=3
function	method this ||| safe	count=1
function	handle [function_2] ||| [function_2] [function_1]	count=6
module	_pointer_ [module] ||| contrib gis geos [module]	count=1
module	deep-clone ||| db migrations	count=2
class	stack of dictionaries in ||| context	count=1
function	which will be interpolated ||| get readable	count=1
class	last data ||| multi	count=1
function	secret (assumed to ||| cipher	count=1
function	list of the sql ||| sql	count=2
module	the two ||| contrib	count=1
module	templates ||| core management	count=2
function	project templates are ||| template	count=1
module	of the geographic ||| contrib	count=1
module	the default translation ||| utils translation	count=1
module	into ||| models	count=1
function	returns a ||| all	count=1
function	and either ||| process view	count=1
function	a way of comparing ||| anonymous	count=1
function	returns the list ||| get	count=1
arg	css selector is ||| css_selector	count=1
function	[function_1] flattening ||| [function_2] [function_1]	count=1
class	last data value for ||| multi value	count=1
module	or ||| utils	count=1
module	be either a ||| models	count=1
function	errors that aren't ||| errors	count=1
function	an object ||| object from params	count=1
function	[function_1] set the ||| [function_2] [function_1]	count=2
function	encoding is unsupported ||| encoding	count=1
module	to [module_1] [module_2] ||| [module_1] [module_2]	count=2
function	[function_1] dimension ||| [function_1] [function_2]	count=1
class	database definitions (structured ||| handler	count=1
class	the week numeric i ||| date	count=1
function	corresponding ||| operation	count=1
arg	of format_html for ||| sep format_string args_generator	count=1
function	list of choices ||| choices	count=1
function	display [function] lists and ||| get allow [function]	count=1
function	the incoming data ||| ordered forms	count=1
class	of ||| list mixin	count=1
function	the static ||| get static	count=2
function	module specified ||| init	count=1
function	is ||| init	count=1
class	nonce ||| password	count=1
class	'objs' ||| collector	count=1
function_arg	[function_1] boolean indicating ||| [function_1] results request queryset [arg_2]	count=2
arg	dry routine for ||| func tolerance	count=1
function	to create [function_2] ||| [function_2] [function_1]	count=4
module	the field's ||| contrib	count=1
module	this geometry and the ||| contrib	count=6
class	keyword arguments [class] individual ||| [class]	count=1
function	around popen ||| popen	count=1
arg	is used by ||| obj	count=1
function	saves and ||| save	count=2
function	dates ||| dates	count=1
function	the surface of ||| surface	count=1
arg	the alias ||| alias	count=1
function	related model to ||| reverse	count=1
function	and return any ||| get db	count=1
function	javascript i18n functions -- ||| javascript	count=1
function	closes the current ||| close	count=1
class	the week numeric i ||| format	count=1
arg	all joins [arg] ||| [arg]	count=1
class	executed now ||| raw	count=1
arg	given character limit ||| limit	count=1
module	override this method if ||| contrib auth management	count=1
arg	fields or an ||| fields label	count=1
function	or updates the ||| patch vary headers	count=1
function	[function_1] test ||| [function_2] [function_1]	count=4
arg	should respect ||| db db_field request	count=1
class	this widget ||| widget	count=1
module	the object ||| contrib gis geos	count=1
module	for use on the ||| contrib	count=1
function	adds [function_2] ||| [function_1] never cache [function_2]	count=3
class	for ||| user	count=1
module	that the ||| contrib	count=2
arg	change ||| change	count=1
arg	unsaved instance change ||| form change	count=1
function	column name [function] ||| [function] m2m reverse	count=1
class	for the object's ||| base model	count=1
module	migrations have unapplied dependencies ||| migrations	count=1
class	dictionary of database definitions ||| connection handler	count=1
function	a list of forms ||| forms	count=1
class	a password reset ||| password reset	count=1
function	checks whether there ||| check	count=1
module	adds or updates the ||| utils	count=1
function	and a ||| lazy	count=1
function	("app_label", "modelname") ||| lazy	count=1
module	transaction and ||| base	count=1
class	is ||| set	count=1
class	'1' to ||| date	count=1
class	new password ||| password	count=1
module	storage ||| core files	count=1
arg	model changing ||| model	count=1
module	geographic ||| gis db models	count=1
class	field's width and ||| image field	count=1
function	cleans a dictionary of ||| clean	count=1
function	first cache [function_2] ||| [function_1] [function_2]	count=4
function	is valid redirect to ||| valid	count=1
arg	function that returns an ||| func cargs	count=1
function	don't match the migrations ||| migrations	count=1
class	helper function for ||| base form	count=1
arg	the instance ||| instance	count=1
function	tuple ||| tuple	count=8
function	corresponding models have been ||| operation	count=1
module_class	[module_1] way ||| [module_1] [class_2]	count=3
function	of paths ||| all locale paths	count=1
module	a list of (column_name ||| db backends mysql	count=1
class	this handler ||| memory file upload handler	count=1
module	which this view should ||| views generic	count=1
arg	cls ||| cls	count=1
function	tuples and ||| lazy model operation	count=1
class	in the ||| view	count=1
function	set a bunch of ||| set many	count=1
arg	the exception ||| exception request	count=1
function	returns ||| get	count=51
function	backend-specific database ||| database errors	count=1
function	georss point ||| georss point	count=2
function	key [function_2] ||| [function_1] [function_2]	count=18
module	transaction and ||| backends base	count=1
module	a ||| core	count=1
class	types and implicitly ||| database	count=1
module	for the ||| contrib	count=2
module	stores it in the ||| contrib	count=1
class	a new node ||| node	count=1
function	sql query ||| sql	count=1
function	timezone ||| timezone	count=1
function	[function_1] migration ||| [function_2] [function_1]	count=4
arg	a modelform return an ||| request form	count=1
function	[function_1] text wrapping ||| [function_1] [function_2]	count=1
function	po file ||| po file	count=1
function	header in the ||| patch vary headers	count=1
module_class	with [class_2] ||| [class_2] [module_1]	count=1
function	the full list of ||| list	count=1
function	[function_1] short ||| [function_2] [function_1]	count=1
function	return the expiry time ||| expiry	count=1
arg	dependencies of the changes ||| changes	count=1
class	list ||| file system finder	count=1
module	an unsaved ||| contrib	count=1
module_class	[module_1] template ||| [module_1] [class_2]	count=5
function	submits a search query ||| search	count=1
function	instance ||| form	count=1
class	if this form has ||| base form	count=1
arg	the first character in ||| ch input_iter	count=1
module	rows of values ||| db models	count=1
module	this request ||| generic	count=3
module	of values generate placeholder ||| db models	count=1
arg	the time between d ||| d	count=1
function_arg	extra is ||| extra obj	count=1
class	a string ||| safe data	count=1
module	[module_1] with ||| [module_1] sessions [module_2]	count=1
function	the admin [function_2] ||| [function_2] [function_1]	count=5
function	joins for ||| setup joins	count=1
module	[module] django ||| [module]	count=1
class	week ||| format	count=1
function	errors that aren't associated ||| errors	count=1
function	login page passing ||| login	count=1
function	a ||| compile	count=1
function	[function] 'to_lower' ||| [function]	count=1
class	possible ||| settings	count=1
function	for relational fields ||| relational	count=1
function	method this helps ||| html	count=1
function	method will try to ||| do	count=1
function_arg	parses [arg_2] ||| [function_1] boundary stream stream [arg_2]	count=1
function	given test ||| test	count=1
function_arg	keys [arg_2] ||| [function_1] keys [arg_2]	count=2
module	null" prevents mysql from ||| mysql	count=1
function_arg	[function_1] in installed_apps ||| [arg_2] [function_1]	count=6
module_class	with [class_2] ||| [module_1] [class_2]	count=1
function	get the name ||| get	count=1
module	with ||| backends base	count=2
function	attaches a geometry ||| geom	count=1
module	the field is ||| contrib admin	count=1
module	the coordinates in ||| contrib	count=1
module_class	[module_1] [class_2] pop-ups opening other pop-ups ||| [module_1] [class_2]	count=6
class	passed into this ||| query	count=1
function	the difference of this ||| difference	count=1
function	[function] name of ||| [function] swappable settings	count=1
function	in a special way ||| backend timeout	count=1
function	getting the [function_2] ||| [function_1] [function_2]	count=5
function	same format string and ||| format html join	count=1
module	one sql ||| sql	count=1
module	(structured like ||| db	count=1
function	object ||| ids	count=1
function	way ||| backend	count=1
module_class	[module_1] [class_2] ||| [module_1] email [class_2]	count=4
module	a modelform return ||| contrib	count=1
function	is correct ||| password	count=1
function	this as a ||| as	count=1
arg	values to ||| values	count=1
module	dictionaries in ||| template	count=1
function_arg	[function_1] and exactly ||| [function_1] boundary stream stream [arg_2]	count=1
class	in the context ||| context	count=1
module	dictionary of database ||| db	count=1
rep	a full-text [function_arg_2] ||| [module_class_1] [function_arg_2]	count=1
module	the urlconf ||| generic	count=1
function	valid ||| valid	count=2
function	[ directory file ||| messages	count=1
module	true ||| contrib	count=1
module	connector ||| utils	count=1
function	of ||| messages	count=1
function	[function_1] index ||| [function_1] like [function_2]	count=3
function	this is [function] ||| is [function]	count=1
module	the given ip address ||| contrib gis geoip2	count=2
function	allowed to fail silently ||| allow fail	count=1
class	index ||| index	count=2
class	adds 'objs' to the ||| collector	count=1
function	string and a ||| string	count=1
function	and a ||| model	count=1
function	encoding ||| encoding	count=2
module	side of a ||| db models fields	count=2
module	and views ||| backends base	count=1
class	the order ||| base form set	count=1
arg	length and [arg_2] ||| [arg_1] [arg_2]	count=1
function	with the media ||| get media	count=2
function	closes the ||| close if unusable	count=1
class	nonce ||| base password	count=1
arg	field_name keyword ||| field_name	count=1
module	saving in [module_1] [module_2] ||| [module_1] [module_2]	count=1
function	matches any ||| matches	count=1
module	loader ||| template loaders	count=1
class	forms ||| form mixin	count=2
class	and resets ||| base database wrapper	count=1
module	the geographic ||| contrib	count=1
class	returns ||| model form mixin	count=1
function	test settings ||| prepare test settings	count=2
module	with ||| db backends mysql	count=2
function	of all nodes of ||| nodes by	count=1
arg	name as a string ||| name app_label	count=1
module	the set of ||| contrib gis	count=1
function	tuples and when ||| lazy model operation	count=1
module	a list of (column_name ||| db	count=2
arg	in the full_plan ||| state plan full_plan fake	count=1
arg	specified app_label ||| cls app_label	count=1
module	stddev and related stats ||| db backends	count=1
arg	specified field ||| field	count=1
arg	register func to be ||| func	count=1
function	or ||| or	count=2
function	list of all ||| list	count=2
class	when all the ||| apps	count=1
module	languages files ||| utils translation	count=1
function_arg	list_select_related is a ||| select related obj	count=1
module	pixels of the ||| contrib	count=1
function_arg	[function_1] a response ||| [arg_2] [function_1]	count=2
arg	[arg_1] lookup ||| [arg_2] [arg_1]	count=4
module	satisfied ||| conf	count=1
function	the given datetime field ||| datetime	count=1
function	engine for a ||| engine	count=1
arg	based on the number ||| number	count=1
function	has permission to ||| has delete permission	count=1
module	return the uniqueness ||| contrib gis	count=1
function	[function_1] size ||| [function_1] [function_2]	count=2
module	with ||| cache backends	count=2
function	as ||| render	count=1
module_class	yields the [module_1] [class_2] they should be rendered ||| [module_1] [class_2]	count=3
function	will try [function_2] ||| [function_2] [function_1]	count=3
class	[class_1] relation ||| [class_2] [class_1]	count=5
function	[function_1] sorted list ||| [function_1] [function_2]	count=1
function	descend ||| select related descend	count=1
arg	defined in submodules of ||| pkg	count=1
function	serve ||| serve	count=1
arg	passed to the middleware_class ||| middleware_class	count=1
module	version of the ||| contrib	count=1
function	[function_1] counter value ||| [function_2] [function_1]	count=3
function	foreign ||| foreign	count=1
class	arguments to this command ||| command	count=1
function	variable with the ||| get	count=2
class	into ||| query set	count=1
module	files ||| staticfiles	count=1
module	sql template and ||| db backends spatialite	count=1
module	the ||| base	count=1
arg	register func to ||| func using	count=1
class	the command line ||| app command	count=1
module	for fields ||| fields	count=1
class	return ||| year mixin	count=1
class	given django model instance ||| base model	count=2
function	[function_1] the queryset ||| [function_2] [function_1]	count=1
class	the field ||| bound field	count=1
arg	is ||| arg	count=1
module	all tables and views ||| db backends base	count=1
function_arg	[function_1] from the ||| [function_1] keys [arg_2]	count=1
module	when requested the next ||| contrib gis gdal	count=1
class	requests for configuration ||| user settings	count=1
function_arg	[function_1] variables ||| [arg_2] [function_1]	count=4
class	connection was ||| database wrapper	count=1
class	a new session ||| session	count=1
function	case ||| case to spaces	count=2
function	key columns in ||| key columns	count=6
class	resets the dirty ||| base database	count=1
module	be either a tuple ||| db models	count=1
arg	a secret (which ||| secret	count=1
function	units name and ||| units	count=1
class	number ||| apps	count=1
function	field is a ||| field	count=1
function	[function_1] text of ||| [function_1] [function_2]	count=2
function	merging ||| handle merge	count=1
module	in this view ||| views generic	count=4
function	the css ||| get css	count=1
module	a ctypes ||| gdal prototypes	count=1
function	return ||| get	count=55
function	locale ||| to locale	count=1
function	is valid redirect to ||| form valid	count=1
module	example if the ||| contrib gis	count=1
module	of digits ||| models	count=1
module	this ||| contrib gis	count=2
module	that ||| prototypes	count=1
module	does not indicate ||| db backends	count=1
class	"modelname") ||| apps	count=1
module	of the translation of ||| utils translation	count=1
module	backends ||| backends base	count=10
function	of app ||| get app	count=1
function	object [function_2] ||| [function_2] [function_1]	count=2
function	the ||| get	count=21
function	the admin log ||| admin log	count=2
module	the opposite ||| db	count=1
class	the objects into ||| nested objects	count=1
module	of parent classes leading ||| db models	count=1
module	and uppercased identifier as ||| db backends oracle	count=1
arg	datatuple of [arg_2] ||| [arg_1] [arg_2]	count=2
arg	given lhs ||| lookups lhs rhs	count=1
function	range of pages ||| range	count=1
class	time or datetime ||| time	count=1
function_arg	[function_1] exactly ||| [arg_2] [function_1]	count=1
function	the corresponding models ||| operation	count=1
module_class	current session ||| sessions backends session	count=1
function	[function_1] user's username ||| [function_2] [function_1]	count=2
function	as a reverse ||| reverse	count=1
arg	the field ||| field	count=2
module	regenerates [module] key ||| [module] sessions	count=1
function	[function_1] week ||| [function_1] [function_2]	count=3
function	y with the ||| y	count=1
arg	the data in instance ||| instance	count=1
function	[function_1] pattern ||| [function_1] [function_2]	count=1
module	the node class ||| contrib gis geos	count=1
class	the given database ||| database operations	count=1
class	not in ||| user settings	count=1
function	what language the ||| language from	count=1
module	resets the dirty ||| db backends	count=1
class	without leading zeros ||| date format	count=1
arg	supplied in encoded and ||| encoded	count=1
function	httpresponse ||| vary	count=1
arg	[arg_1] is ||| [arg_1] [arg_2]	count=4
arg	true if data ||| data	count=1
class	returns ||| session base	count=1
function	post ||| post	count=2
module	that tries getting ||| decorators	count=1
function	is [function_2] ||| [function_2] [function_1]	count=5
function	joins for ||| joins	count=1
function	satisfied ||| init	count=1
module	the model _meta fields ||| fields	count=1
class	the tree ||| node	count=1
function	new pk [function_2] ||| [function_1] [function_2]	count=6
function_arg	[function_1] necessary to ||| [function_1] [arg_2]	count=3
function_arg	[function_1] if update_pk ||| [function_1] [arg_2]	count=1
module	list [module_2] ||| [module_1] [module_2]	count=1
function	of interior ||| interior	count=1
function	[function_1] field ||| [function_2] [function_1]	count=11
function_arg	[function_1] the value ||| [function_1] index [arg_2]	count=2
class	zeros ||| date format	count=1
module	the messages to a ||| contrib	count=1
module	template ||| template loaders	count=2
class	set up for ||| geo query set	count=2
module	a list of the ||| contrib gis	count=1
class	field's width ||| field	count=1
function	the login ||| redirect to login	count=1
function	[function_1] interval ||| database operations [function_1] [function_2] sql timedelta	count=3
class	models have been imported ||| apps	count=1
module	the same [module_2] ||| [module_1] sessions [module_2]	count=2
function	[function] day ||| [function] day	count=1
module	the geographic field ||| contrib	count=1
class	secure [class_2] ||| [class_2] [class_1]	count=2
class	from ||| settings holder	count=2
function	[function_1] an index ||| [function_1] like [function_2]	count=3
module	authenticated via the ||| contrib	count=1
module	for point_count ||| gis gdal	count=1
function	referenced_column_name) for all key ||| key	count=3
module	context manager and ||| db backends	count=1
class	objects into ||| objects	count=1
function_arg	checks [arg_2] ||| [function_1] geom [arg_2]	count=1
arg	it's ||| model val label	count=1
class	handler should ||| upload handler	count=1
class	the app or project ||| template	count=1
arg	the headers given ||| request method headerlist key_prefix	count=1
function_arg	filter_horizontal [arg_2] ||| [function_1] [arg_2]	count=4
function	change the given django ||| change	count=1
module	a copy [module] this ||| [module] backends	count=1
function	destroy a test database ||| destroy test	count=1
function	creates a test database ||| test	count=1
module	each of the ||| contrib gis	count=1
function	key that [function_2] ||| [function_2] session [function_1]	count=1
module_class	[module_1] for ||| [module_1] [class_2] engine	count=2
function	to a time ||| time	count=1
function	the name to use ||| name	count=1
module	the ||| core management	count=2
function_arg	[function_1] value to ||| [arg_2] [function_1]	count=2
class	from ||| user settings	count=1
function	mask of annotations ||| annotation mask	count=3
function	return an origin object ||| get template	count=1
function	ordering the queryset uses ||| get ordering	count=1
arg	the given context ||| context	count=1
module	the query ||| contrib gis	count=1
arg	a model from ||| model	count=1
function	clone of ||| clone	count=1
function	the smallest [function] polygon ||| [function]	count=1
module	prepared to be ||| contrib admin	count=1
function	list of tuples ||| compile	count=1
function	time zone ||| timezone	count=8
function_arg	or [arg_2] ||| [arg_2] [function_1]	count=1
arg	table_names for rows ||| table_names	count=1
module	of the geometry ||| contrib	count=4
module	the spatial_ref_sys or ||| contrib gis	count=1
function	for [function] ||| get [function]	count=1
function	this ||| html safe	count=1
function	supports stddev as an ||| supports stddev	count=1
arg	source [arg_2] ||| [arg_1] [arg_2]	count=1
arg	related instance ||| instance value	count=2
function	the sql ||| sql	count=18
class	the given django model ||| model	count=2
arg	value ||| value	count=33
function	take a ||| lazy model operation	count=1
module	the css ||| contrib admin	count=3
function	of the current ||| current	count=1
function_arg	[function_1] [arg_2] path ||| [function_1] leading dir [arg_2]	count=2
function_arg	[function_1] [arg_2] are present usually 2 ||| [function_1] for popup [arg_2]	count=1
module	results from applying this ||| models	count=1
module_class	[module_1] engine definitions ||| [module_1] [class_2]	count=2
arg	given cursor with ||| cursor sql params	count=1
class	[class_1] used ||| [class_2] [class_1]	count=6
module	geosgeometry object from this ||| contrib gis gdal	count=1
function	a list of available ||| available	count=1
function	or project templates ||| handle template	count=1
module	or deletes the ||| contrib	count=1
function	the context ||| context data	count=1
function	[function_1] flattening ||| [function_1] [function_2]	count=1
module	field ||| models	count=2
function	given *models returns ||| get	count=1
module	query ||| db models	count=1
module	the set of fields ||| models sql	count=1
class	return a list of ||| list	count=1
function	field_name ||| field name	count=1
function	version number ||| version	count=3
function	number of points ||| point count	count=1
arg	if signature ||| key	count=1
function	do ||| do	count=1
function	the symmetric difference ||| xor	count=2
function	directory ||| compile messages	count=1
function_arg	matches any [arg_2] ||| [arg_2] [function_1]	count=1
function	column name ||| column	count=1
arg	field is multipolygonfield while ||| geom model_field	count=1
class	in ||| settings	count=2
module	that joins [module] through any ||| [module]	count=1
function	temporarily disable ||| disable	count=1
function	error response the ||| response	count=1
function	a ||| safe	count=1
arg	a function ||| result func	count=2
class	table index or ||| base database	count=1
function	storage engine ||| storage engine	count=2
module	multiple lines and returns ||| db backends	count=1
class	the queryset ||| multiple	count=1
function	and when all ||| lazy model	count=1
class	digits and decimal places ||| decimal field	count=1
arg	response ||| response header_query	count=1
module_class	[module_1] or datetime ||| [module_1] date [class_2] check fix default	count=1
class	creates ||| sqldelete compiler	count=1
module	codename ||| contrib auth management	count=1
class	a file ||| file	count=1
function	model's ||| alter db tablespace	count=2
class	e ||| date format	count=3
function	that need temp columns ||| generate temp	count=1
module	dirty flag ||| db	count=1
module	the ||| contrib gis gdal prototypes	count=4
function	[function] routine ||| [function]	count=1
function_arg	primary key [arg_2] ||| [function_1] column [arg_2]	count=1
function	main version (x y[ ||| main	count=1
function_arg	[function_1] regex with ||| [arg_2] [function_1]	count=1
function	return a url ||| url	count=1
class	files called from collectstatic ||| files	count=1
module	[module] through ||| [module]	count=1
function_arg	sql [arg_2] ||| database operations for update [function_1] [arg_2]	count=3
function	in the context ||| update	count=1
arg	this is used by ||| obj	count=1
arg	fields and ||| fields	count=1
function	for the m2m ||| get m2m reverse	count=1
function	adds a georss point ||| add georss point	count=1
class	dictionary of database definitions ||| handler	count=1
module	may take the ||| contrib gis	count=1
function	special way ||| backend	count=1
module	[module_1] the field ||| [module_1] [module_2]	count=8
function	parse a list ||| parse	count=1
class	this method to ||| mixin	count=3
module	of fields to ||| db models	count=1
function	[function_1] signed cookie ||| [function_1] [function_2]	count=3
arg	a related field ||| field	count=1
arg	creates ||| autoclobber keepdb	count=1
function	rearranges the fields ||| order fields	count=1
module	that returns ||| gis db	count=1
module	resets ||| db backends base	count=2
arg	given case-insensitive model_name ||| model_name require_ready	count=1
module	this method allows escaping ||| gis db	count=1
module	[module] version ||| [module]	count=3
function	works out if any ||| generate	count=1
function	a 64-bit integer ||| int64	count=1
arg	connector is given ||| connector negated	count=1
class	geometry to a ||| ogrgeometry	count=1
function	only select certain related ||| select related	count=1
module	the given geometry ||| gis	count=1
module	the names of ||| contrib	count=1
module	message [module_2] ||| [module_1] [module_2]	count=4
function_arg	[function_1] handling ||| [arg_2] [function_1]	count=6
module_class	[module_1] [class_2] returned objects have been ||| [module_1] [class_2]	count=1
function	a many-to-one relation ||| many to one	count=1
arg	occur in the full_plan ||| full_plan fake	count=1
arg	[arg_1] model ||| [arg_2] [arg_1]	count=12
class	subclasses ||| base handler	count=1
module	[module_1] of ||| [module_1] [module_2]	count=12
module	applying this ||| db	count=1
function	instance returns a ||| from	count=1
arg	parser ||| parser	count=1
module	a geos pointer ||| contrib gis geos	count=2
function	a number of ("app_label", ||| lazy model operation	count=1
function	the clear ||| clear	count=2
arg	the full_plan ||| state plan full_plan fake	count=1
function	have been imported and ||| operation	count=1
function	in this class ||| init	count=1
function	a warning that the ||| warning for	count=1
module	information for [module] given ||| [module]	count=1
class	cookie returning a list ||| cookie	count=1
arg	object has been successfully ||| request object message	count=2
function	managementutility can handle them ||| handle	count=1
function	setup immediately prior ||| setup	count=1
class	resets the dirty flag ||| wrapper	count=1
function	system [function] ||| [function]	count=1
module	returns a list of ||| db models	count=3
class	alters ||| base database schema editor	count=1
class	queryset that is a ||| query set	count=1
function	feature table name ||| table name	count=1
function	model object ||| create model	count=2
module	this queryset to the ||| db models	count=1
function	variables not in ||| init	count=1
arg	it already exists ||| path prefixed_path source_storage	count=1
module	in the extra locations ||| contrib staticfiles	count=1
function	has permission to change ||| has delete permission	count=1
function	python model class ||| model class	count=1
function	or if ||| or	count=1
function	be an item ||| field	count=1
module	a list ||| translation	count=1
module	tables and views ||| db backends	count=1
function_arg	handle [arg_2] ||| [arg_2] [function_1]	count=3
module	list of operation instances ||| db migrations	count=1
arg	given contents ||| contents	count=1
module	this geometry and the ||| contrib gis gdal	count=3
class	a string for interoperability ||| safe data	count=1
function	add the data ||| data	count=1
class	the fields passed ||| set	count=1
module	lines and ||| db backends	count=1
module	a sequence containing the ||| contrib admin	count=1
module_class	of this geometry ||| gis geos geosgeometry	count=1
arg	opens ||| conn_params	count=1
module	for files in the ||| contrib	count=2
arg	given length ||| name length	count=1
function	history ||| history	count=1
function_arg	new file [arg_2] ||| [function_1] [arg_2]	count=1
function	to re-enable ||| enable	count=1
function	alais for point_count ||| coords	count=1
function	saves a user with ||| user	count=1
function	mail emailmultialternatives to ||| mail	count=1
function	any otherwise uncaught ||| uncaught	count=1
class	templates are ||| template	count=1
class	[class] has no ||| [class]	count=1
module	it is compatible with ||| utils	count=1
function	relational fields ||| start relational field	count=1
module	of the ||| db models fields	count=1
module	of dictionaries in ||| template	count=1
class	flag ||| base database	count=1
function	serialized as ||| value to string	count=1
function	number ||| format number	count=2
function	[function] object ||| [function] object	count=1
function	validate session key on ||| session key	count=1
module	directly (if the ||| contrib gis gdal prototypes	count=1
function	not null field to ||| not null	count=2
function	untranslated verbose name is ||| verbose name	count=1
function	same format [function_2] ||| [function_1] [function_2]	count=4
function	the given ||| vary	count=1
module	return ||| db migrations	count=3
arg	it's an ||| model val label	count=1
function	passed ||| to	count=1
class	of files called ||| hashed files	count=1
function	if ||| form	count=1
module	or [module] ||| [module]	count=3
function	to do custom preparation ||| prepare	count=1
module	[module_1] from the ||| [module_1] [module_2]	count=1
class	contain helpful ||| view	count=1
function	what language ||| get language	count=1
class	dirty flag ||| base database wrapper	count=1
arg	secret (which ||| secret	count=1
function	iterable of app configs ||| get app configs	count=1
class	not bound ||| bound field	count=1
class	field ||| field	count=17
arg	it's safe otherwise advises ||| loader conflicts	count=1
function	user-provides ||| all	count=1
function	of paths to ||| all locale paths	count=1
arg	[arg_1] in the ||| [arg_2] [arg_1]	count=3
class	from applying ||| set	count=1
module	list of ||| db models sql	count=2
arg	function that returns an ||| result func	count=1
class	return an ||| model	count=1
class	the given database ||| base database operations	count=2
function	[function_1] function ||| [function_2] [function_1]	count=1
module	internal or the ||| contrib admindocs	count=1
arg	cursor row description ||| table_name row	count=1
arg	given a string ||| string	count=1
function	this to return a ||| get	count=1
module	the remoteuserbackend ||| contrib	count=1
arg	regex ||| regex max_length	count=1
arg	changed it will ||| new_type	count=1
arg	name in all ||| name	count=1
module	geometry or raster ||| gis	count=1
module	instance guaranteed to ||| contrib sessions backends	count=1
class	a list of ||| command	count=1
arg	function that returns an ||| func cargs offset	count=1
module	returns a ||| gis db backends	count=1
function	the raw [function_2] ||| [function_2] [function_1]	count=1
class	[class_1] the session ||| [class_2] [class_1]	count=2
module	sends ||| mail backends	count=3
module	free the pointer ||| contrib gis gdal prototypes	count=1
function_arg	[function_1] [arg_2] an update query for ||| models sql update query [function_1] related update model [arg_2]	count=2
function	tuples and when all ||| lazy model	count=1
class	definitions ||| handler	count=1
function	match the migrations ||| migrations	count=1
arg	is true ||| form	count=1
function	return a modified ||| get	count=1
arg	[arg_1] and frees ||| [arg_2] [arg_1]	count=8
module	polygon ||| gis geos	count=1
function	objects ||| related objects	count=1
function	the number [function_2] ||| [function_2] [function_1]	count=2
module	this method ||| gis	count=1
class	the dirty ||| base database	count=1
function	language the ||| language from	count=1
arg	if the key does ||| key	count=1
function	headers as a ||| headers	count=1
function_arg	key for [arg_2] ||| [function_1] column [arg_2]	count=1
class	the session key ||| session	count=1
function	translatable [function] locale ||| process [function]	count=1
function	random value ||| random function	count=1
function	all the ||| lazy model operation	count=1
arg	full_plan ||| full_plan fake	count=1
function	this helps ||| html	count=1
arg	system path ||| path	count=1
module	passed into this ||| db	count=1
arg	to outfile which ||| outfile	count=1
module	ordinates with the ||| contrib gis db	count=1
function	of a ||| db	count=1
class	instance for the given ||| base	count=1
class	[class_1] [class_2] should execute its ||| [class_1] query [class_2] using alias	count=1
module	a ||| db	count=1
class	connection to the database ||| base database	count=1
module	essentially the opposite ||| db	count=1
arg	project_state ||| project_state	count=1
function	returns the name of ||| get timezone name	count=1
function	an appconfig ||| app config	count=1
module	prevents mysql from ||| backends mysql	count=1
class	requests for configuration ||| settings holder	count=1
arg	which may be ||| field_index	count=1
module	to a management ||| core management	count=1
function	a localizable type and ||| localize	count=1
arg	unsaved instance ||| request	count=1
arg	yaml data ||| stream_or_string	count=1
function	create a ||| create	count=3
module	modeladmin specifies ordering the ||| contrib	count=1
class	on [class] and raises ||| [class]	count=1
class	transaction and ||| base database wrapper	count=1
function	to generate formsets ||| create formsets	count=1
module	api documentation ||| backends	count=1
function	from the ||| from	count=3
arg	key into a ||| key	count=1
function	objects [function_2] ||| [function_2] [function_1]	count=3
function_arg	copy path with ||| copy file path	count=1
function	test database ||| create test	count=1
function	expiry time ||| expiry	count=1
class	modelform return ||| model admin	count=1
module	[module] for the ||| contrib gis [module]	count=3
module	geometry ||| db models	count=1
class	the settings ||| settings	count=2
function	[function_1] configs ||| [function_1] [function_2]	count=4
class	date field by ||| date list view	count=1
function	format string and ||| string	count=1
class	[class] doing ||| [class]	count=1
function_arg	to add [arg_2] ||| messages [function_1] request level [arg_2] extra_tags	count=3
function	will return the given ||| get	count=1
class	given a modelform ||| admin	count=1
function	all the ||| lazy model	count=1
arg	a project_state representing ||| project_state	count=1
function_arg	[function_1] given httpresponse ||| [arg_2] [function_1]	count=2
class	is an optional ||| connection handler	count=1
class	the current database ||| database	count=3
function	the html representation of ||| html	count=1
arg	objects into strings ||| obj	count=1
module	[module] fetched from ||| [module]	count=3
module	tables and views that ||| db backends base	count=1
class	that we return safe ||| safe bytes	count=1
function	handle [function_2] ||| files file upload handler [function_1] [function_2]	count=2
module	(if the return_geom ||| contrib gis gdal prototypes	count=1
module_class	[module_1] reference projected? ||| [class_2] [module_1]	count=1
function	saves the current instance ||| save	count=1
module	layers in the ||| contrib	count=1
arg	absolute path (or ||| root path	count=1
module	and return all ||| backends oracle	count=1
function	annotations ||| annotation	count=1
module	language-code if ||| utils translation	count=1
function	the flush method on ||| flush	count=1
class	of files called ||| hashed files mixin	count=1
module	and ||| db backends sqlite3	count=2
function	migrations in the database ||| check migrations	count=1
module	the node class of ||| contrib gis geos	count=1
arg	in the 'test' sub-dictionary ||| alias	count=1
class	of the week ||| date	count=1
module	and resets ||| base	count=1
arg	multipartparser object ||| meta input_data upload_handlers encoding	count=1
module	checks if the target ||| contrib	count=1
arg	instance through ||| instance cls	count=2
function	number ||| point count	count=1
function	test [function_2] ||| [function_2] [function_1]	count=9
function	a value of ||| value	count=1
module_class	[module_1] [class_2] be rendered ||| [module_1] [class_2]	count=1
class	in ||| view	count=1
function	a dangling [function_2] ||| [function_2] [function_1]	count=1
function	multiple chunks ||| multiple chunks	count=2
arg	start ||| start	count=1
module	a point of this ||| gdal	count=1
function	extent for the extent3d ||| convert extent3d	count=1
function	an empty errorlist ||| errors	count=1
arg	queryset to implement the ||| queryset	count=1
function	set y with ||| set y	count=1
module	the given ||| contrib gis db	count=1
function	parse ||| parse	count=4
function	in [function] ||| urlsafe [function]	count=3
arg	message to [arg_2] ||| [arg_2] [arg_1]	count=2
function	value of ||| value	count=2
module	values [module] the existing ||| [module]	count=1
function	[function_1] session model ||| [function_2] [function_1]	count=4
function	corresponding models ||| model	count=1
function	to find what language ||| language from	count=1
module	loading of data for ||| db models	count=1
function	a database field ||| field	count=1
function	m2ms to ||| to many	count=1
function	setup immediately prior to ||| setup	count=1
arg	generates geodjango models corresponding ||| data_source model_name geom_name layer_key	count=1
function	a special way ||| get backend	count=1
arg	routines that should not ||| cargs	count=1
function	or project ||| handle template	count=1
function	variable is "true" (i ||| do if	count=1
function_arg	text wrapping [arg_2] ||| [arg_2] [function_1]	count=4
module	the field's string label ||| contrib gis	count=1
function	dated items this accepts ||| dated items	count=1
function	from its ||| from	count=1
class	is an optional dictionary ||| connection	count=1
arg	field ||| field created_separately	count=1
function	names to model ||| model	count=1
function	validate session [function_2] ||| [function_2] [function_1]	count=4
function	[function] rfc7231 section ||| parse [function]	count=3
module	tuples ||| apps	count=1
function	parse [function_2] ||| [function_2] [function_1]	count=2
module	specified index the ||| contrib gis geos	count=1
module_class	[module_1] their ||| [class_2] [module_1]	count=1
module	instance guaranteed to ||| contrib sessions	count=1
function	adds its information ||| add	count=1
module	of datetime objects representing ||| models	count=1
function	double value ||| dbl	count=1
function	[function_1] file in ||| [function_2] [function_1]	count=1
function	module specified in ||| init	count=1
function	headers as a bytestring ||| serialize headers	count=1
module	the app or ||| core management	count=1
module_class	[module_1] get_new_connection ||| [module_1] base [class_2]	count=1
module	raster ||| gdal raster	count=2
function	the most recent savepoint ||| savepoint	count=1
function	out if any ||| generate	count=1
arg	[arg] all ||| [arg] schema_editor	count=3
function	translatable [function] ||| process [function]	count=1
arg	a model usually involves ||| model	count=2
arg	of the changes ||| changes graph	count=1
arg	returns the appropriate ||| protocol	count=1
module	if you're testing migrations ||| migrations	count=1
class	queryset to ||| query set	count=1
function	fallback with the default ||| add fallback	count=1
module	should be deleted if ||| staticfiles management	count=1
function	[function_1] associated django ||| [function_2] [function_1]	count=9
function	the minimum level of ||| set level	count=1
arg	value to be ||| field value	count=1
arg	instance change is ||| form change	count=1
function	[function_1] [function_2] functionality ||| database operations [function_1] [function_2] sql timedelta	count=3
function	tuples and when ||| model	count=1
function	max_num ||| max num	count=1
module	mapping models ||| models sql	count=1
module	raster with [module_2] ||| [module_2] gis [module_1]	count=4
module	and views that exist ||| backends base	count=1
function_arg	update [arg_2] ||| [arg_2] [function_1]	count=1
class	session store ||| session base	count=1
module	and return all ||| backends	count=1
class	cache [class_2] ||| [class_2] [class_1]	count=8
function	a hash of ||| hash	count=1
class	spatial ||| spatial field	count=1
function	[function_1] type for ||| [function_1] [function_2]	count=3
class	geographic column ||| geo query	count=1
function	placeholder ||| placeholder	count=1
arg	a <label>, if the ||| attrs label_suffix	count=1
module	example if the ||| contrib gis utils	count=1
class	the email ||| email	count=2
class	the fields ||| query set	count=1
arg	by default includes ||| include_parents include_hidden	count=1
function	[function_1] a sorted ||| [function_2] [function_1]	count=1
module	geometry ||| gis geos	count=2
function	[function_1] engine for ||| [function_1] [function_2]	count=2
module	certain backends ||| db backends	count=1
module	ordinates with the ||| contrib	count=1
function	[function_1] checkbox ||| input [function_1] [function_2]	count=3
function	should be replaced ||| reduce	count=1
class	to the field ||| related field	count=1
module	to customize the ||| contrib	count=1
class	database definitions (structured ||| connection handler	count=1
module	stack ||| template	count=1
function	can handle them before ||| handle	count=1
function	this will [function_1] [function_2] ||| [function_1] [function_2]	count=1
arg	handling ||| resolver exc_info	count=1
function_arg	builds [arg_2] ||| [function_1] filter [arg_2]	count=3
module	unsaved instance ||| admin	count=1
arg	message to the ||| message fail_silently	count=2
function	[function_1] [function_2] database connection ||| base base database wrapper [function_2] [function_1]	count=3
function	attribute (e ||| attribute	count=1
function	the sql statements ||| sql	count=2
function	default ||| get default	count=1
function	header in the given ||| headers	count=1
function	a uri ||| uri	count=1
module	to ||| db models	count=2
arg	it's an ||| obj model val label	count=1
function	list of filenames ||| filenames	count=1
class	an integer ||| inline	count=1
module	for [module_1] [module_2] ||| [module_1] [module_2]	count=2
function	request ||| ignorable request	count=1
class	this to execute sql ||| database operations	count=1
module	results from applying ||| db models	count=1
arg	change is ||| request form change	count=1
function	a hash of the ||| hash	count=1
arg	given string target node ||| target	count=2
class	transaction and resets ||| base database	count=1
function_arg	checks each [arg_2] ||| [function_1] [arg_2]	count=2
arg	a modelform ||| request	count=1
function	allow subclasses to override ||| handle	count=1
arg	path the candidates for ||| names_with_path	count=1
module	oracle ||| contrib gis db backends oracle	count=1
class	given on the command ||| app command	count=1
arg	the given encoding to ||| encoding	count=1
module	a list of datetime ||| db models	count=1
class	function for ||| base form	count=1
function	field in a kml ||| kml	count=1
arg	true if field ||| field	count=1
function	adds [function_2] ||| [function_2] [function_1]	count=3
class	forward ||| forward	count=1
function	aggregation period [function] dates ||| get [function]	count=1
function	disconnect ||| disconnect	count=1
module	for the given criteria ||| contrib admin	count=1
function	app or project templates ||| template	count=1
function	level [function_2] ||| [function_1] [function_2]	count=1
module	returns a list ||| utils translation	count=1
function	string ||| text	count=1
module	mysql has the following ||| backends mysql	count=1
module	index the ||| contrib gis	count=1
function	unsaved ||| form	count=1
arg	the given geometry ||| geom	count=1
function_arg	radio_fields [arg_2] ||| [function_1] [arg_2]	count=3
module	files ||| core cache backends	count=1
function	will select ||| select	count=1
function	merging ||| merge	count=2
function	url namespaces used ||| check url namespaces	count=2
module	the ||| contrib gis db	count=12
function	check [function_2] ||| [function_1] [function_2]	count=5
class	mapping each ||| query set	count=1
function	datetime to local ||| localtime	count=1
class	to the database ||| query	count=1
function	[function_1] map generation ||| [function_1] [function_2]	count=2
module	an ||| models	count=2
module	sense of the root ||| utils	count=1
module	location if the original ||| contrib	count=1
module	be output in ||| admin	count=1
function	a random password ||| random password	count=1
class	model instance the default ||| base model	count=2
module	in this ||| generic	count=2
arg	[arg_1] a model ||| [arg_2] [arg_1]	count=18
arg	localizable format ||| format use_l10n	count=1
class	the cache for ||| base cache	count=2
function	objects of this ||| objects for this	count=2
function	attaches as a reverse ||| reverse geom	count=1
module	of ||| gis db	count=2
function	week for which ||| get week	count=1
module	the uniqueness keyword arguments ||| contrib	count=1
function	override uncaught [function_2] ||| [function_2] [function_1]	count=1
arg	to the given geometry ||| geom	count=1
class	value [class] saving ||| [class]	count=1
arg	error checking for routines ||| cargs	count=1
module	not in ||| conf	count=1
class	as a compiled ||| library	count=1
arg	a function ||| function	count=1
class	the database is established ||| database	count=1
function	state that ||| state	count=1
class	without ||| date format	count=1
module	to this ||| gis gdal	count=1
function	testing as [function] ||| set as test [function]	count=3
function_arg	checks a [arg_2] ||| [function_1] envelope [arg_2]	count=4
function	[ ||| compile messages	count=1
function	string and ||| html	count=1
module	to a management ||| management	count=1
function	name [function] ||| [function]	count=2
module	type [module] ||| [module]	count=1
module	the spatial_ref_sys or equivalent ||| contrib gis	count=1
function_arg	[function_1] node recursively ||| [function_1] [arg_2]	count=3
function_arg	[function_1] attribute of ||| [arg_2] [function_1]	count=6
function	python [function_2] ||| [function_2] [function_1]	count=1
function	to lookup the template ||| find template	count=1
function	new session key ||| key	count=1
function	a connection to ||| connection	count=2
function	size of this ||| size	count=1
function	cache ||| to cache	count=1
arg	doesn't ||| obj	count=1
function	relational fields ||| relational	count=1
function_arg	be an [arg_2] ||| [arg_2] [function_1]	count=2
module	number whether the ||| contrib gis	count=1
function	subclasses to [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] tables ||| [arg_2] [arg_1]	count=2
module	list of tuples ||| core management	count=1
class	to provide the ||| to	count=1
function	of a db ||| test db	count=1
function	has any ||| has	count=1
module	definitions (structured like ||| db	count=1
module	of this geometry ||| gis	count=1
module	the messages to ||| contrib	count=1
arg	exception to the exception ||| exception request	count=1
module	redirect after the ||| contrib	count=1
function	return 0 ||| zero	count=1
module	information in the ||| contrib sessions backends	count=1
function_arg	key for [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] sender for ||| [arg_1] [arg_2]	count=2
function	the units name and ||| units	count=1
module	of parent ||| db models	count=1
class	to the email server ||| email backend	count=1
function	formset ||| formset	count=1
module	the pixel ||| contrib	count=1
class	when all the corresponding ||| apps	count=1
function	(if it matches ||| matches patterns	count=1
function	allowed to ||| get allow	count=1
module	returns ||| utils translation	count=3
function_arg	[function_1] [arg_2] ||| [function_1] object type [arg_2]	count=2
function	checks the ||| check	count=5
function	saving updates ||| save	count=1
function_arg	[function_1] field field_name ||| [arg_2] [function_1]	count=9
class	relation ||| many to one descriptor	count=1
class	file in a ||| file	count=1
module	database this ||| db models	count=2
module	object for this ||| gdal	count=1
module	translation [module_2] ||| [module_2] [module_1]	count=7
function	first object ||| first	count=1
module	a dict of ||| db backends	count=1
module	python sqlite3 ||| sqlite3	count=1
class	for geometry fields ||| geometry	count=1
function	parse ||| parse apps and model	count=1
arg	assign values to a ||| index values	count=1
class	the forward relation ||| forward many to one	count=1
module	returns the description ||| contrib admindocs	count=1
arg	save the returned instance ||| form instance	count=1
arg	key does ||| key	count=1
class	integer ||| inline	count=1
function	returns true if ||| get	count=1
module	a list of ||| db models	count=4
module	with ||| db models fields	count=2
class	method to ||| mixin	count=3
function_arg	[function_1] objs ||| [function_1] del batches [arg_2]	count=1
module	in the template ||| contrib admin	count=2
module_class	yields the [module_1] [class_2] they should be rendered ||| [module_1] [class_2] iter	count=3
module	intersection of this ||| gdal	count=1
arg	a sequence comprising ||| table_name constraints column_to_field_name	count=1
class	list ||| system finder	count=1
module	return the current date ||| views generic	count=1
function	point of this ||| point	count=1
arg	defines the __html__ method ||| klass	count=1
function	of keyword arguments ||| kwargs	count=1
function_arg	list of typical (app_label [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
arg	dom node recursively ||| node	count=1
module	prevents mysql from implicitly ||| backends mysql	count=1
module	true there will be ||| db models sql	count=1
module	srid of the ||| contrib gis db backends	count=2
module	and resets the ||| backends	count=1
function	total size in ||| size	count=1
arg	given cursor with placeholders ||| cursor sql	count=1
class	on the active language ||| locale	count=1
module	of layers in the ||| contrib	count=1
arg	feed me a model ||| model	count=1
function	[function] ultimate pointed-to ||| [function]	count=1
class	digits and decimal ||| decimal field	count=1
function	numerical equivalent ||| phone2numeric filter	count=1
module	tuple with ||| db backends base	count=1
function_arg	string pointer [arg_2] ||| [arg_2] [function_1]	count=1
function	as kml ||| kml	count=1
function	[function_1] sequence for ||| [function_1] [function_2]	count=1
arg	[arg_1] changed ||| [arg_2] [arg_1]	count=3
function	guarantees ||| ensure	count=1
module	against django's auth ||| contrib auth	count=1
function	valid ipv6 ||| valid ipv6	count=1
function	the media prefix ||| get media prefix	count=3
module	template tag library ||| template	count=1
function	difference of this geometry ||| difference	count=1
module_class	[module_1] tuple ||| [module_1] [class_2]	count=2
function	prefix ||| bump prefix	count=1
module	pointer ||| gis	count=1
class	variables not in ||| settings	count=1
class	return the node ||| node	count=1
arg	from given lhs ||| lhs	count=1
class	variables not in this ||| user settings holder	count=1
function	subclasses to override uncaught ||| handle uncaught	count=1
module	for the given ||| base	count=1
module	[module] points making ||| [module]	count=3
class	resets the ||| database	count=1
function	session model [function_2] ||| [function_2] [function_1]	count=2
function	shortcut ||| lazystr	count=1
function	a slash ||| should redirect with slash	count=1
module	interface returns ||| db backends	count=1
function	app ||| handle	count=1
function	slice of ||| slice filter	count=1
class	applying this queryset to ||| query set	count=1
function	length ||| length	count=3
function	fixture name in name ||| name	count=1
arg	encoded digest ||| encoded	count=1
module	of tuples ||| management commands	count=1
module	the given ||| contrib gis geos	count=5
module_class	[module_1] given ||| [module_1] [class_2]	count=6
function	kml representation ||| kml	count=2
class	instance [class_2] ||| [class_2] [class_1]	count=1
class	for the ||| base	count=6
function	key ||| key	count=16
arg	[arg_1] is unavailable ||| [arg_2] [arg_1]	count=1
class	obtain the list of ||| list view	count=1
class	the module ||| settings	count=1
module	and the lookup ||| contrib gis db backends oracle	count=1
class	log entry ||| log entry	count=4
function_arg	[function_1] [arg_2] ||| [function_1] string template_name context [arg_2]	count=3
class	database definitions ||| handler	count=1
function	select objects [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] [arg_2] ||| [arg_1] fail_silently [arg_2]	count=10
arg	instance through ||| instance value	count=2
function	expected by the ||| adapt	count=3
module	tuples [ ||| core management commands	count=1
class	string for interoperability ||| data	count=1
module	without leading zeros ||| utils	count=1
function	warning that ||| warning for	count=1
module	[module_1] the geometry ||| [module_1] [module_2]	count=1
arg	[arg_1] which may ||| [arg_2] [arg_1]	count=1
function	the surface ||| surface	count=1
module	a ||| base	count=1
function	selected language's bidi layout ||| language bidi	count=1
function_arg	key from [arg_2] ||| [function_1] [arg_2]	count=2
module	units of ||| gdal	count=1
module	project templates ||| core management	count=1
class	transaction and ||| database wrapper	count=1
module	given ||| geos	count=2
function	to check ||| check	count=2
function	header in ||| patch vary	count=1
class	[class_1] server ||| [class_2] [class_1]	count=3
function	appending a slash to ||| with slash	count=1
arg	checking for routines that ||| func cargs	count=1
function	[function_1] error response ||| [function_2] [function_1]	count=4
module	admin ||| admin templatetags	count=1
function	objects that aren't hidden ||| visible	count=1
arg	[arg_1] target ||| [arg_1] [arg_2]	count=2
function	fields [function_2] ||| db models sql query [function_2] [function_1]	count=2
class	returns the feed ||| syndication feed	count=1
arg	a message ||| message	count=1
function	preprocessed copy of a ||| cleanup	count=1
function	user-provides languages ||| all locale	count=1
class	given srid ||| geo	count=1
function	related [function] ||| related [function]	count=3
module	unpack ||| backends postgis	count=1
module	side [module_2] ||| [module_1] [module_2]	count=2
function	that will select objects ||| select	count=1
module	converts the type of ||| contrib	count=1
class	from the ||| user settings	count=1
function	and ||| model operation	count=3
class	sql ||| database operations	count=1
function	table joins for ||| joins	count=1
function	merging together conflicted migrations ||| merge	count=1
function_arg	for update [arg_2] ||| [arg_2] [function_1]	count=1
module	given a modelform ||| contrib	count=1
class	for this form field ||| field	count=1
arg	method to parse ||| cls parser	count=1
module	this will return a ||| gis utils	count=1
function	the init ||| init	count=1
class	of email ||| base email backend	count=1
class	each ||| query set	count=1
arg	given ordereddict ||| paths dry_run	count=1
function	list of ||| compile	count=1
module	representing the ||| contrib gis	count=2
function	returns the z ||| z	count=1
function_arg	true if [arg_2] ||| [function_1] leading dir [arg_2]	count=5
arg	return true if field ||| field	count=1
function	[function_1] object this ||| [function_1] [function_2]	count=1
function	return an unsaved ||| form	count=1
function	slash to ||| should redirect with slash	count=1
class	optional dictionary of database ||| connection handler	count=1
function	return the country name ||| country name	count=1
arg	fields ||| fields objs	count=1
function_arg	[function_1] page ||| [arg_2] [function_1]	count=1
module	if the oracle ||| backends oracle	count=1
function	return an ||| save	count=1
function	count of fields ||| len	count=1
arg	update_pk is ||| fields update_pk	count=1
module	this accessor ||| gis db	count=1
arg	ctypes function ||| func argtypes	count=2
module	geometries in the ||| contrib gis	count=1
class	[class_1] if it ||| [class_1] [class_2]	count=3
module	this helps non-django ||| utils	count=1
function	standard deviation of all ||| std	count=1
function	cache key [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] a manytomanyfield ||| [function_1] [function_2]	count=1
function	of ||| set	count=2
function	parse a list of ||| parse apps and model	count=1
function	coordinate dimension ||| get coord dim	count=2
class	that ||| bytes	count=1
function	of choices for ||| choices	count=1
function	or updates ||| vary headers	count=1
function	creation counter value ||| set creation counter	count=2
function	introspected [function_2] ||| [function_1] [function_2]	count=2
module	side ||| fields	count=2
class	given ||| model	count=1
function	savepoint only ||| savepoint	count=1
function	number of layers ||| len	count=1
function	the login page passing ||| login	count=1
function	a geojson ||| geojson	count=1
class	of the root connector ||| node	count=1
arg	to sender for ||| sender weak dispatch_uid	count=1
class	migration records useful ||| migration recorder	count=2
function	[function_1] messages ||| [function_2] [function_1]	count=2
module	a _pointer_ [module] ||| contrib gis geos [module]	count=1
arg	value ||| value arg	count=1
function	retrieves the first cache ||| cache	count=1
module	the ||| contrib gis db backends postgis	count=2
class	current context ||| context	count=1
class	takes an open cache ||| based cache	count=1
function	sure the test ||| test	count=1
arg	from cls lookups ||| cls	count=1
arg	url and returns the ||| url	count=1
function	object ||| context object	count=1
class	not in this class ||| holder	count=1
function	the app ||| handle template	count=1
function	the previous valid week ||| previous week	count=1
module	the given ||| contrib gis	count=21
function	current ||| today	count=1
module	where the ||| contrib	count=1
class	[class_1] reset for ||| [class_1] [class_2]	count=4
class	the month without ||| format	count=1
class	[class_1] field ||| [class_1] [class_2]	count=4
arg	[arg_1] form ||| [arg_2] [arg_1]	count=2
function	the geometry [function_2] ||| [function_2] [function_1]	count=2
function	browser closes and ||| browser close	count=1
class	adds ||| template response	count=1
class	if ||| query	count=1
function	full list of ||| object list	count=1
function	column data type for ||| type	count=1
module	take a ||| apps	count=1
function_arg	[function_1] dict ||| [function_1] get [arg_2]	count=1
function	create a [function_2] ||| [function_1] [function_2]	count=1
module	the input can ||| contrib	count=1
function	filenames ||| filenames	count=1
arg	assign values to ||| index values	count=2
module	for ||| translation	count=2
arg	function ||| func cargs offset	count=1
function	only select certain related ||| add select related	count=1
module	we loaded ||| db	count=1
function	[function_1] raw input ||| [function_2] [function_1]	count=1
arg	list of inline formsets ||| form formsets	count=1
function	models have been imported ||| lazy	count=1
module	handles the ||| contrib	count=1
arg	schema_editor for a ||| schema_editor	count=1
class	this handler ||| upload handler	count=1
function	the session model object ||| create model	count=1
module	kml content and returns ||| gis	count=1
module_class	the [module_1] [class_2] ||| [module_1] [class_2]	count=4
function	[function_1] 64-bit integer ||| [function_2] [function_1]	count=2
function	the necessary table joins ||| joins	count=1
arg	the given ||| opts	count=1
class	last data value ||| multi value	count=1
class	to the field ||| field	count=1
class	satisfied from the ||| user	count=1
function	first object of a ||| first	count=1
module	the client for ||| contrib sessions	count=1
module_class	[module_1] [class_2] the ||| [module_1] [class_2] get	count=3
module	for this view ||| views generic	count=2
function	once per save yet ||| save base	count=1
module	the attributes ||| contrib gis	count=1
module	be used to ||| db models	count=1
arg	three part ||| setter preferred	count=1
function	transforms and lookup ||| lookup	count=1
class	node ||| spatial reference	count=1
function	field [function_2] ||| [function_2] [function_1]	count=12
class	for the object's primary ||| base	count=1
function	404 [function_2] ||| [function_1] [function_2]	count=2
function	returns the value for ||| value	count=1
function	in the ||| write	count=1
module	[module] streamed ||| [module]	count=1
function	user-provides languages files ||| all	count=1
module_class	database this raw ||| db models raw	count=1
function	a projectstate object ||| project	count=1
module	geometry or ||| gis db	count=1
module	via the addgeometrycolumn ||| contrib	count=1
function	date in the current ||| today	count=1
class	sets the cache ||| update cache	count=1
arg	parameters for null placeholder ||| placeholder	count=1
module	mysql from ||| backends mysql	count=1
arg	lhs ||| lookups lhs	count=1
function	[function_1] of geos ||| [function_2] [function_1]	count=2
class	by subclasses [class] ||| [class]	count=1
function_arg	[function_1] we're activated ||| [function_1] [arg_2]	count=4
function	an app [function_2] ||| [function_1] [function_2]	count=1
arg	models [arg] ||| [arg]	count=1
function	[function_1] field type ||| [function_2] [function_1]	count=2
function	load [function] ||| import [function]	count=1
function	of dictionaries in the ||| update	count=1
arg	year ||| year year_format month	count=1
module	__html__ method ||| utils	count=1
arg	an unsaved instance ||| request	count=1
function	object ||| vary headers	count=2
function	the short [function_2] ||| [function_2] [function_1]	count=1
class	field's ||| file field	count=1
arg	the app or project ||| template	count=1
module	internal or the ||| contrib	count=1
function	date object ||| date from	count=1
function	list of fields ||| fields	count=3
function	number ||| len	count=8
arg	field from [arg_2] ||| [arg_2] [arg_1]	count=12
module	app or project ||| management	count=1
arg	using ||| level	count=1
function	all the ||| model	count=1
function	to the select_related() part ||| select related	count=1
function_arg	[function_1] a function ||| [function_1] geom [arg_2]	count=1
function	[function_1] extracts a ||| [function_2] [function_1]	count=12
arg	connector ||| connector	count=1
function	find a [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] comparing ||| [function_2] [function_1]	count=1
arg	value in the ||| value timeout	count=1
module	unpack ||| db backends postgis	count=1
module	style required by the ||| contrib	count=1
function	time ||| time	count=6
function	all the corresponding models ||| model	count=1
module_class	the [class_2] ||| [module_1] sessions backends [class_2]	count=2
function	models that have a ||| models	count=2
class	can [class] used ||| [class]	count=1
class	the ring ||| polygon	count=2
arg	value is unavailable ||| value arg	count=2
arg	a more explanatory message ||| original_exc	count=1
module	of layers within the ||| contrib	count=1
function	key function to ||| get key func	count=2
function	starts ||| start	count=1
arg	iterable ||| iterable	count=1
function	value for ||| value	count=2
function	headers as a ||| serialize headers	count=1
class	the email server ||| email backend	count=2
class	applying ||| query	count=1
module	for point_count ||| contrib	count=1
function_arg	[function_1] start date ||| [function_1] next year [arg_2]	count=1
function	this backend based upon ||| backend	count=1
function	or a sequence of ||| get	count=1
module	some [module_2] ||| [module_1] [module_2]	count=2
module	field_name" for fields ||| fields	count=1
function	with the requisite number ||| number	count=1
function	a ||| compile messages	count=1
function	unget [function_2] ||| [function_2] [function_1]	count=4
module	if the ||| db models	count=1
arg	if the key ||| key	count=1
arg	name and ||| name	count=1
function	connect ||| connect	count=1
arg	modelform return an ||| request	count=1
function	django models and ||| django	count=1
function	and registered ||| lazy model operation	count=1
function	will set [function_2] ||| [function_1] [function_2]	count=1
class	return ||| http request	count=1
function	cache of ||| get	count=1
function	forms in ||| forms	count=1
class	for base spatial fields ||| base spatial	count=1
function	max number of ||| get max num	count=2
function	all ||| lazy model	count=1
module	the redirect_field_name ||| contrib	count=1
function	to a python ||| module to	count=1
class	and resets the ||| database wrapper	count=1
function	values on save ||| value on save	count=3
function	headers ||| headers	count=4
arg	date object ||| date	count=1
function	new savepoint ||| savepoint create	count=1
function	as a ||| as	count=1
arg	in encoded and ||| password encoded	count=1
function	[function_1] path ||| [function_2] [function_1]	count=4
class	command line ||| label command	count=1
module	some backends require ||| backends base	count=1
function	return true if the ||| is	count=1
arg	in the given ||| response	count=1
function_arg	[function_1] string ||| [function_1] safe [arg_2]	count=1
function	an absolute url where ||| url	count=1
class	[class_1] self ||| [class_2] [class_1]	count=2
module	a ||| db backends	count=1
class	open [class] ||| [class]	count=1
module	if the given ||| contrib auth	count=2
arg	different spatial reference system ||| coord_trans clone	count=1
function	admin url to ||| admin url	count=1
function	media file ||| file	count=1
module	the ||| contrib gis gdal raster	count=1
function	lookup from ||| build lookup	count=1
module	in units of the ||| contrib gis gdal	count=1
function	generate placeholder sql ||| as sql	count=1
module	of different ||| db models fields	count=1
module	point_count ||| gis gdal	count=2
function	[function_1] containing a ||| [function_2] [function_1]	count=5
arg	generator that ||| text	count=1
class	to a file ||| file	count=1
function	headers as ||| headers	count=1
function	sql ||| sql flush	count=2
function	creates a test database ||| create test	count=1
module	the polygon data ||| contrib gis db backends	count=1
function	of db_type(), providing ||| db parameters	count=1
function	the default wsgi handler ||| handler	count=1
function	query's "distinct on" clause ||| distinct	count=1
function	thread ||| thread	count=1
function	autocommit ||| set autocommit	count=1
function	try to update ||| update	count=1
arg	files not ||| files	count=1
function	name to [function_2] ||| [function_2] [function_1]	count=2
function	name of the layer ||| layer name	count=1
function	which will be interpolated ||| get readable field data	count=1
function	object for a ||| for	count=1
function	load all [function_2] ||| [function_1] [function_2]	count=3
module	helpful ||| views generic	count=2
function	the po file for ||| write po file	count=1
module	returns ||| gis utils	count=1
class	module specified in ||| holder	count=1
function	a uri ||| to uri	count=1
function	cascaded union of this ||| cascaded union	count=1
arg	last downloaded it? header ||| header mtime size	count=1
function	x-frame-options http header ||| xframe options	count=1
function	[function_1] sorted list ||| [function_2] [function_1]	count=1
function	[function_1] permission to ||| [function_2] [function_1]	count=1
module	boolean of whether the ||| contrib auth	count=1
arg	return an unsaved ||| request	count=1
function	closes the connection to ||| close	count=2
function	time zone as a ||| timezone	count=1
class	dirty ||| base database	count=1
function	[function_1] database ||| [function_1] [function_2]	count=1
module	return a list of ||| db backends	count=1
arg	a model ||| cls model	count=1
function	out as [function_2] ||| [function_1] [function_2]	count=2
function	edited [function_2] ||| [function_2] [function_1]	count=4
class	returns ||| oracle operations	count=1
function	[function] that ||| [function] info with	count=1
function	object that ||| ids	count=1
arg	it's ||| val label	count=1
function	by the incoming ||| ordered forms	count=1
function	specified headers ||| headers	count=1
module	doesn't examine the ||| contrib admin	count=4
function	a password [function_2] ||| [function_1] [function_2]	count=1
function	returns an ogr envelope ||| envelope	count=1
function	number of tables in ||| tables	count=1
function	a tuple of all ||| tuple	count=1
class	command ||| app command	count=2
function	ogr envelope ||| envelope	count=1
module	a url pattern ||| urls	count=1
arg	length ||| length	count=2
module	of different return values ||| models	count=1
module_class	to '365' ||| utils date format	count=1
function	tell ||| authenticated	count=1
module	transaction and resets the ||| db	count=1
arg	[arg_1] response ||| [arg_2] [arg_1]	count=1
function	language layout ||| language bidi	count=2
module	by ||| utils translation	count=2
function	tuples [ ||| compile messages	count=1
function	tags ||| tags	count=3
function	references the [function_2] ||| [function_1] [function_2]	count=1
module	resets the ||| db	count=1
function	add the data to ||| data	count=1
function	references ||| references	count=3
function	value if the form ||| value	count=1
function	if any [function_2] ||| [function_1] [function_2]	count=5
arg	given app label ||| app_label	count=1
function	are required [function_2] ||| [function_1] [function_2]	count=1
module_class	this layer for ||| gis gdal layer	count=1
class	month without leading ||| date format	count=1
arg	change is true ||| change	count=1
module_class	all [class_2] ||| [module_1] [class_2]	count=1
module	and views that ||| db backends base	count=1
module	the corresponding ||| contrib	count=1
class	variables ||| user	count=1
module	system ||| core files	count=2
class	are satisfied from the ||| settings holder	count=1
class	a transaction and resets ||| base database	count=1
arg	on routines ||| result func cargs	count=1
function	returns ||| all	count=1
arg	a secret ||| value secret	count=1
function	that uniquely identifies ||| signature	count=1
class	objects into memory ||| nested objects	count=1
arg	key does not ||| key	count=3
class	ip address ||| ip	count=1
function	a list of paths ||| list	count=1
arg	determines where the app ||| subdir	count=1
function	a salt and using ||| salt	count=1
arg	index of the ||| index	count=1
function	the test ||| clone test	count=1
function	returns the admin ||| get admin	count=1
class	actual date or datetime ||| date	count=1
class	[class_1] or datetime ||| [class_2] [class_1]	count=2
function	instance returns ||| from	count=1
module	integer ||| contrib humanize	count=1
function	key to do this ||| key	count=1
function	the week for ||| get week	count=1
class	set ||| database operations	count=1
function	all the corresponding ||| model	count=1
class	list of tuples ||| command	count=1
class	week numeric i ||| format	count=1
function	header ||| patch	count=1
function	definitions (structured ||| init	count=1
function	returns the sql ||| as sql	count=2
function	[function_1] field name ||| [function_2] [function_1]	count=1
class	the urlconf can contain ||| view	count=1
function	the full list of ||| object list	count=1
function	code ||| code	count=4
function	number of digits and ||| number	count=1
class	framework stating that using [class_1] [class_2] ||| [class_1] [class_2] check fix default	count=1
module	tuples [ directory ||| core management	count=1
function	for specifying custom readonly ||| readonly	count=1
function	handle a foreignkey we ||| handle	count=1
function	return a value from ||| get	count=1
function	[function_1] field ||| [function_1] related [function_2]	count=2
module	the list ||| sql	count=1
arg	[arg_1] according ||| [arg_1] [arg_2]	count=3
function	the help message ||| help	count=1
function	checks whether there is ||| check	count=1
function	template context for ||| context	count=1
class	fields passed into this ||| query set	count=1
module	list of (column_name referenced_table_name ||| db backends mysql	count=1
function	add the given list ||| add	count=1
arg	one item of list_filter, ||| model item label	count=1
function	the list of ||| list	count=1
function	params ||| params	count=1
function	start ||| start	count=3
module	[module] <ul> tags ||| [module]	count=1
function	sql and ||| as sql	count=1
function	text of a ||| text	count=1
function	caching headers to the ||| response headers	count=1
module	on the client for ||| contrib sessions	count=1
function	version ||| version	count=7
arg	related ||| related	count=1
class	a warning if the ||| base command	count=1
class	the ||| format	count=3
module	the given ||| contrib admin	count=4
module	ordinates with the given ||| contrib gis db	count=1
function	[function_1] foreign ||| [function_1] [function_2]	count=2
function	incoming ||| ordered forms	count=1
function	to be ||| add	count=1
arg	log-in page if ||| test_func login_url redirect_field_name	count=1
function	resolve the init ||| resolve model init	count=1
function	from the future ||| future	count=1
function	[function_1] related field's ||| [function_1] [function_2]	count=1
module	on the ||| contrib sessions backends	count=1
arg	exist ||| default timeout version	count=1
module	easy lookups by ||| utils translation	count=1
arg	[arg_1] length ||| [arg_2] [arg_1]	count=1
module	iterable consisting [module] ||| [module]	count=3
function_arg	a model's [arg_2] ||| [function_1] [arg_2]	count=1
arg	the value to ||| value	count=1
function	the migrations ||| check migrations	count=1
function_arg	model class [arg_2] ||| [function_1] [arg_2]	count=1
function	models ||| lazy model operation	count=1
function_arg	in [arg_2] ||| [arg_2] [function_1]	count=6
class	if possible ||| user settings holder	count=1
function	given ||| make	count=1
function	tuple of ||| tuple	count=1
class	are satisfied from ||| user	count=1
class	compiled ||| library	count=1
arg	msgs contents ||| msgs	count=1
function_arg	[function_1] objects ||| [function_1] [arg_2]	count=1
module	in the current instance ||| contrib sessions backends	count=1
function	[function_1] file in ||| [function_1] [function_2]	count=1
module	model _meta fields instance ||| models fields	count=1
class	can be [class_2] ||| db models fields [class_2] [class_1]	count=2
function	savepoint ||| savepoint	count=5
function	of a package ||| get package	count=1
module	of ||| management	count=1
module	the ||| contrib gis geos	count=36
arg	the ||| response	count=2
function	factory function to ||| generic	count=1
function	is the difference of ||| difference	count=1
module_class	[module_1] spatial reference ||| [class_2] [module_1]	count=13
function	sets ||| sets	count=1
function	handle a [function_2] ||| [function_1] [function_2]	count=5
module	_meta fields instance ||| fields	count=1
module_class	returns a quoted version [module_1] [class_2] column ||| [module_1] [class_2] operations quote	count=1
class	dirty flag ||| base database	count=1
function	value to use ||| value	count=1
arg	is set to true) ||| offset	count=1
class	do a password reset ||| password reset token	count=1
class	if [class] has ||| [class]	count=1
module	dirty ||| backends	count=1
class	database into a ||| database	count=1
arg	the filename [arg_2] ||| [arg_1] [arg_2]	count=5
class	of the form ||| form	count=1
class	an ||| truncator	count=1
module	sites is installed ||| sites	count=1
function	tuples and ||| lazy model	count=1
class	has choices defined ||| base model admin	count=1
class	of ||| command	count=1
function	adds or updates the ||| patch vary	count=1
function	[function_1] slice ||| [function_1] [function_2]	count=4
arg	[arg] evaluates ||| bp [arg]	count=3
function_arg	layout [arg_2] ||| [function_1] [arg_2]	count=3
arg	check one [arg] model ||| obj model [arg]	count=1
function	[function] ' ' ||| [function]	count=1
class	directories ||| directories finder	count=2
arg	in the active ||| value	count=1
module_class	that [module_1] [class_2] ||| [module_1] [class_2]	count=2
module	the name of ||| db models	count=2
arg	a modelform return ||| request	count=1
function	resolve ||| resolve model	count=1
module	does not indicate ||| gis db backends	count=1
function	by the incoming data ||| ordered forms	count=1
module	connection is ||| db	count=1
module	by the node class ||| contrib gis	count=1
arg	or ||| value format	count=1
class	unsaved instance ||| model	count=1
class	class are satisfied ||| settings	count=1
arg	given targets ||| targets plan	count=1
function	a local filesystem path ||| path	count=1
class	a single email ||| email	count=1
class	hasher ||| password hasher	count=1
class	the last data value ||| multi value dict	count=1
function	country name ||| country name	count=1
module	opposed to all models ||| models sql	count=1
function	of tuples [ ||| compile	count=1
class	database already exists ||| database creation	count=2
module	unsaved instance ||| contrib admin	count=1
arg	of inline formsets ||| form formsets change	count=1
arg	item of fields ||| fields label	count=1
function_arg	shortened [arg_2] ||| [arg_2] [function_1]	count=1
class	list ||| options	count=1
arg	with the requisite ||| value max_digits decimal_places	count=1
arg	between d ||| d	count=1
function	a geometry attribute (e ||| geom attribute	count=1
arg	or ||| response	count=1
function	given model ||| model	count=1
arg	dict of key/value pairs ||| data timeout version	count=1
function_arg	[function_1] most recent ||| [arg_2] [function_1]	count=1
module	is compatible with the ||| contrib	count=1
function	statement to create an ||| create	count=1
function	the current [function_2] ||| [function_2] [function_1]	count=11
arg	json string [arg] is ||| obj [arg]	count=1
function	returns a compiled ||| get	count=1
function	(that [function] ultimate ||| [function]	count=1
class	satisfied from the ||| settings	count=1
function	rings ||| rings	count=1
function	returns a cascaded ||| cascaded	count=1
class	storage ||| storage	count=5
function	in the ||| patch vary	count=1
arg	adds or updates ||| response	count=1
arg	[arg_1] skip ||| [arg_1] [arg_2]	count=1
arg	plural ||| plural	count=1
class	the objects ||| objects	count=1
function	requested static file in ||| in	count=1
function	[function_1] items this ||| [function_1] [function_2]	count=5
module	extra ||| generic	count=1
module	have ||| apps	count=1
function	savepoint only required if ||| savepoint	count=1
function_arg	builds [arg_2] ||| [arg_2] [function_1]	count=3
arg	an unsaved ||| form	count=1
module	of date ||| db models	count=1
function_arg	add a [arg_2] ||| [function_1] fields [arg_2]	count=1
arg	modelform return an ||| form	count=1
function	clear checkbox ||| clear checkbox	count=1
function	headers to ||| headers	count=3
module	object for this ||| gis gdal	count=1
class	model [class_2] ||| [class_2] [class_1]	count=8
module	for easy lookups by ||| translation	count=1
class	difference to greenwich time ||| time	count=1
function	new pk ||| get pk	count=1
module_class	reverse [class_2] ||| [module_1] reverse [class_2]	count=3
function	sql that truncates the ||| sql	count=2
function	language the ||| get language from	count=1
arg	to objs via ||| objs using	count=1
module	[module_1] features ||| [module_1] [module_2]	count=2
module	this queryset to ||| db	count=1
class	primary database ||| database creation	count=1
function	returns a tuple ||| get	count=2
arg	ctypes ||| argtypes errcheck	count=2
module	to all models ||| db models	count=1
module	mapping models ||| models	count=1
function	datetime value ||| datetime	count=1
function	list of ||| object list	count=1
function	[function_1] double value ||| [function_2] [function_1]	count=2
class	a list of tuples ||| list filter	count=1
function	counter value ||| counter	count=1
class	true ||| model	count=1
function	union of this ||| union	count=2
class	dictionary ||| connection handler	count=2
function	by the user in ||| get	count=1
class	database ||| database introspection	count=7
function	[function_1] closes and ||| at [function_1] [function_2]	count=1
arg	the changes so they ||| changes graph	count=1
function	[function_1] to select ||| [function_2] [function_1]	count=4
module	creates and returns ||| backends	count=1
function	references the given model ||| references model	count=1
module	fields ||| models fields	count=1
function	given time zone ||| timezone	count=1
function	name of ||| name	count=6
function	[function_1] closes ||| [function_2] [function_1]	count=1
arg	inline formsets and a ||| request form formsets	count=1
arg	checking on routines that ||| func cargs	count=1
arg	from a model ||| model	count=3
class	set ||| query set	count=1
module_class	[module_1] case ||| [module_1] [class_2]	count=12
function	value [function_2] ||| [function_2] [function_1]	count=8
module_class	[module_1] pathinfos ||| [module_1] [class_2]	count=4
class	the field with ||| field	count=1
function	saves and returns a ||| save	count=1
function_arg	[function_1] timezone ||| [arg_2] [function_1]	count=2
module	return the ||| contrib	count=13
function	the country ||| country	count=2
function	from the ||| init	count=1
arg	given model ||| model	count=2
class	and ||| base database	count=1
class	this geometry ||| linear geometry	count=1
class	a string for ||| data	count=1
function	the parents ||| parents	count=1
module	[module_1] from the ||| [module_2] [module_1]	count=1
function	of interior rings ||| interior rings	count=2
function	[function_1] new ||| [function_2] [function_1]	count=1
module	datetime object for this ||| gdal	count=1
function	name ||| name raw	count=1
function	technical 404 error ||| technical 404	count=2
class	a queryset ||| query set	count=1
module_class	[module_1] given session ||| [module_1] backends [class_2]	count=1
arg	value for use ||| value safe	count=1
function	a quoted [function_2] ||| [function_1] [function_2]	count=1
arg	sends an ||| subject message from_email	count=1
module	[module] should ||| [module]	count=3
function	a decorator ||| html	count=1
module	in this ||| geos	count=1
class	from applying this ||| query set	count=1
module	of ||| commands	count=1
function	[function] (i ||| [function]	count=3
class	get ||| date detail view	count=1
arg	for functions ||| func	count=2
module	in pixels of the ||| contrib	count=1
arg	in raw ||| raw	count=1
module	the following inputs ||| contrib gis	count=1
arg	a <label>, if ||| attrs label_suffix	count=1
module	does not ||| backends	count=1
function	subtracts ||| decr	count=1
function_arg	response the [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	[function_1] [arg_2] ||| [function_1] boundary stream stream [arg_2]	count=3
module	from the coordinate sequence ||| contrib gis	count=1
class	cache at ||| cache	count=1
function	a signed [function_2] ||| [function_1] [function_2]	count=4
function	variables ||| traceback frame variables	count=1
function	values [function_2] ||| [function_2] [function_1]	count=5
function	an optional dictionary ||| init	count=1
function	the sql that will ||| sql	count=1
class	implicitly ||| database	count=1
function	through model ||| generate through model	count=2
module	for the change ||| contrib admin views	count=1
module	[module_1] but doesn't ||| [module_2] [module_1]	count=2
function	spaces to hyphens ||| slugify	count=1
function	sure the test ||| prepare test	count=1
class	form has a ||| base form	count=1
class	value on ||| value	count=1
function	which this relationship ||| related	count=2
module_class	this spatial reference ||| gdal spatial reference	count=4
function_arg	primary key [arg_2] ||| [arg_2] [function_1]	count=1
function	list of template names ||| template names	count=1
module	example if the model ||| contrib	count=1
module	all ||| apps	count=1
module	geosgeometry for [module] given ||| [module]	count=2
class	be [class_2] ||| [class_2] [class_1]	count=2
function	freshly rendered [function_2] ||| [function_2] [function_1]	count=3
function	languages ||| locale	count=1
function	default time zone as ||| default timezone	count=1
arg	function [arg_2] ||| [arg_2] [arg_1]	count=6
function	fields and raises ||| fields	count=1
module	with long (> ||| core cache backends	count=1
arg	given x ||| x	count=1
arg	returned instance to the ||| form instance fields exclude	count=1
function	pot file build process ||| process	count=1
function_arg	key [arg_2] ||| [function_1] column [arg_2]	count=1
arg	name ||| name hashed_files	count=1
arg	field on an ||| field	count=1
function	or none if no ||| or none	count=1
function	filesystem path from its ||| path from	count=1
module	form's ||| forms	count=1
function	manytomanyfield related ||| m2m field	count=1
function	update the model if ||| update	count=1
function_arg	[function_1] [arg_2] ||| [function_1] result func [arg_2]	count=2
class	site ||| site	count=3
module_class	of this layer ||| gdal layer	count=1
arg	in ||| timeout version	count=1
class	'0' sunday ||| date	count=1
class	files called ||| hashed files mixin	count=1
function	coordinate dimension of ||| get coord dim	count=2
function	[function_1] georss ||| [function_1] [function_2]	count=1
class	[class_1] return safe ||| [class_2] [class_1]	count=4
module	admin urls by ||| admin	count=1
class	upload ||| upload	count=2
function_arg	css [arg_2] ||| [function_1] value selector [arg_2]	count=4
function	[function_1] sql ||| [function_2] [function_1]	count=4
class	field and the ||| field	count=1
function_arg	[function_1] encoding ||| [function_1] outfile [arg_2]	count=1
module	the given model options ||| contrib gis	count=1
module	and related stats ||| backends sqlite3	count=1
function	[function_1] model ||| [function_1] [function_2]	count=4
function	persist a user ||| login	count=1
function	the ||| patch vary	count=2
module	this ||| gis db backends	count=2
function	this helps ||| safe	count=1
function	the given type ||| type	count=1
arg	generates a [arg_2] ||| [arg_2] [arg_1]	count=2
arg	optional [arg] ||| [arg]	count=1
class	configuration variables ||| settings holder	count=1
arg	if connection_reset ||| connection_reset	count=1
function	'second', returns ||| trunc	count=2
class	the list of ||| base date list view	count=1
class	the reverse relation ||| reverse one to one descriptor	count=1
class	from ||| simple uploaded file	count=1
arg	given a ||| request	count=1
module	the contains intersects and ||| contrib gis	count=1
function	keyword arguments for instantiating ||| kwargs	count=1
module	to use in this ||| generic	count=2
class	take a ||| apps	count=1
function	[function_1] for update ||| [function_1] [function_2]	count=1
function	a datetime value to ||| datetime	count=1
function	technical 404 ||| technical 404	count=2
module	checks the [module_2] ||| [module_1] [module_2]	count=2
class	app ||| app	count=1
function	which will be interpolated ||| readable field data	count=1
function	[function_1] css ||| [function_2] [function_1]	count=4
module	the given data source ||| contrib	count=1
arg	given targets ||| targets plan state fake	count=1
arg	cursor and ensures ||| sentinel col_count	count=1
function	a savepoint ||| savepoint commit	count=1
function_arg	[function_1] the geometry ||| [function_1] [arg_2]	count=1
function	[function_1] formset ||| [function_2] [function_1]	count=1
arg	function ||| function	count=1
arg	start date of the ||| date	count=4
function	country ||| country	count=2
module	all tables and ||| backends	count=1
function	corresponding ||| model operation	count=1
arg	if ||| key salt serializer	count=1
module	on ||| db backends	count=1
function	a locale name ||| to locale	count=1
module	of form ||| db models	count=1
module	template api ||| template backends	count=2
function	an iterator over ||| iterator	count=1
function	'minute' or 'second', ||| trunc	count=2
function	alters ||| alter many	count=1
function	of available [function_2] ||| [function_2] [function_1]	count=1
class	authority ||| spatial reference	count=2
function	translate the string for ||| translate	count=1
function	maximum ||| max name	count=1
function	a not null ||| ask not null	count=4
class	dirty ||| database	count=1
module	in ||| raster	count=1
module	geos geometry object from ||| gis geos	count=1
function	n-th clone of a ||| test db clone	count=1
function	a list of ||| all	count=1
module	returns true if this ||| gis db	count=1
module	[module_1] of either ||| [module_2] [module_1]	count=4
class	leading zeros i e ||| date format	count=1
class	performs set up for ||| geo query set	count=1
function	a list of filenames ||| filenames	count=1
function_arg	encoding [arg_2] ||| [function_1] [arg_2]	count=1
function	paginate [function_2] ||| [function_2] [function_1]	count=1
module	shortened and uppercased identifier ||| db backends oracle	count=1
arg	suffix if the value ||| value arg	count=1
function	for [function] ||| label for [function]	count=1
function	detects any [function] - ||| detect [function]	count=1
function	related model ||| reverse	count=1
function	[function_1] objects from ||| [function_1] [function_2]	count=2
module	message ||| mail	count=1
class	the number of email ||| email	count=2
function	name ||| create index name	count=1
function_arg	[function_1] fields ||| [function_1] spec obj model [arg_2]	count=3
function	[function] object ||| check [function]	count=2
module	of ||| contrib gis	count=3
function	method this helps non-django ||| html	count=1
module	that this user ||| contrib auth	count=1
module	does ||| backends	count=1
function	any cleaning ||| clean	count=1
arg	datatuple of ||| datatuple	count=1
class	the month ||| date format	count=1
module	visible to the ||| contrib	count=1
function	[function_1] manytomanyfield related ||| [function_2] [function_1]	count=1
module	about the [module_2] ||| [module_1] gis [module_2]	count=1
function	returns the x ||| x	count=1
module	and ||| cache backends	count=1
function	short [function_2] ||| [function_1] [function_2]	count=1
function_arg	search [arg_2] ||| [arg_2] [function_1]	count=3
module	be used ||| db models	count=1
function	a datetime [function_2] ||| [function_2] [function_1]	count=2
module	checks the ||| contrib gis	count=1
arg	exist ||| default version	count=1
class	model ||| base model admin	count=3
module	returns a dictionary with ||| gis	count=1
class	rest of the upload ||| stop upload	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=2061
module	deserialization ||| core serializers	count=1
class	of fieldset[1]['fields'] for ||| base model admin	count=1
module	the contains intersects ||| contrib gis	count=1
module	set this ||| contrib gis gdal	count=1
arg	queryset or ||| queryset	count=1
function	validators in ||| validators	count=1
module	[module] field ||| [module]	count=2
arg	list of inline formsets ||| form formsets change	count=1
arg	language ||| language	count=1
module	for the given ||| contrib auth	count=1
function	given a ||| save	count=1
arg	unsaved instance change is ||| change	count=1
function	[function_1] [function_2] ||| contenttypes content type manager [function_1] [function_2]	count=9
module	perform the operation ||| contrib	count=1
class	message ||| message	count=2
function	when all the corresponding ||| operation	count=1
class	geosgeometry ||| geosgeometry	count=1
function	the __html__ method ||| html	count=1
function_arg	[function_1] lock rows ||| [arg_2] [function_1]	count=3
function	context if either ||| get context	count=1
function	cleans an [function_2] ||| [function_2] [function_1]	count=1
arg	defines the __html__ ||| klass	count=1
function_arg	exclude is a ||| exclude obj	count=1
function	similar to str format ||| format	count=1
module	order_by() ||| db models	count=2
class	spatial fields takes ||| spatial field	count=1
class	given srid ||| geo query	count=1
function	cast [function_2] ||| [function_2] [function_1]	count=6
arg	one and exactly ||| max_header_size	count=1
function	have been ||| lazy	count=1
module	data but with a ||| backends	count=1
function	create a technical 404 ||| technical 404	count=1
class	the connection was explicitly ||| database wrapper	count=1
function	header in ||| vary headers	count=1
module	returns none ||| db	count=2
class	return the file object ||| file	count=1
class	in this query with ||| query	count=1
arg	the 'test' sub-dictionary ||| alias	count=1
function_arg	[function_1] [arg_2] ||| [function_1] value [arg_2]	count=8
function	cursor ||| cursor	count=1
function	and adds its information ||| add srs	count=1
arg	a function that returns ||| result func	count=1
class	the database is established ||| base database	count=1
module	for stddev and related ||| backends sqlite3	count=1
function	country code ||| country code	count=1
function	[function_1] the short ||| [function_1] [function_2]	count=1
function	max number ||| max num	count=1
function	lazy i ||| check lazy	count=1
arg	placeholder ||| placeholder	count=1
function	mask [function_2] ||| [function_2] [function_1]	count=6
function_arg	sql necessary to ||| sql field_name tzname	count=1
function	migrate the ||| migrate	count=1
function	[function_1] [function_2] ||| [function_2] this [function_1]	count=1
class	raster initializing it ||| spatial proxy	count=1
module	to the set of ||| db models	count=1
module	the urlconf can contain ||| views generic	count=1
class	been imported and ||| apps	count=1
function	an aware datetime ||| datetime	count=1
function	[function_1] the placeholder ||| [function_1] [function_2]	count=1
function	user with ||| user	count=1
module	true if ||| models	count=1
module	of what the action ||| db	count=1
class	returns the form ||| base form	count=1
function	nodes ||| nodes	count=1
function_arg	references the [arg_2] ||| [arg_2] [function_1]	count=1
function	merging together ||| handle merge	count=1
class	ordering of the queryset ||| query set	count=1
class	week numeric i ||| date	count=1
arg	of format_html ||| sep format_string args_generator	count=1
module	to return the ||| contrib gis gdal	count=1
module	backends that ||| db backends	count=1
function	the [function] ||| num [function]	count=1
class	database is established ||| database	count=1
function	format string and a ||| from string	count=1
function	to interval day ||| date interval	count=1
function	to change ||| change	count=1
function	symmetric [function_2] ||| [function_1] [function_2]	count=1
class	that using [class] ||| [class] time	count=1
function_arg	local [arg_2] ||| [function_1] [arg_2]	count=1
module	[module] non-hashed ||| [module]	count=1
arg	fields and a ||| fields	count=1
arg	fields in addition ||| dim geography	count=1
module	containing the ||| contrib admin	count=1
class	if ||| query set	count=1
module	based on ||| db models	count=1
module	a modelform ||| admin	count=1
function	all ||| lazy	count=1
arg	confirmation if ||| old_database_name verbosity keepdb number	count=1
function	object ||| patch vary headers	count=2
function_arg	in the [arg_2] ||| [function_1] outfile [arg_2]	count=2
module_class	with this [class_2] ||| [module_1] [class_2]	count=1
class	an ip address ||| ip	count=1
arg	given field name ||| field_name	count=1
class	[class_1] error ||| [class_1] [class_2]	count=3
function	layout ||| bidi	count=1
function	given a modelform ||| save	count=1
function	the vary header ||| vary on	count=1
arg	in an apps and ||| apps	count=1
module	the correct mime ||| contrib gis	count=1
function	contents ||| label tag	count=1
class	stack of ||| context	count=1
module	tuple with ||| db backends	count=1
class	of the month without ||| date format	count=1
module	with long ||| core cache backends	count=1
function_arg	connect [arg_2] ||| [function_1] [arg_2]	count=4
function	on the surface ||| surface	count=1
module	and return all other ||| backends	count=1
function	sensible [function] for ||| [function] for	count=1
module	and the ||| contrib gis gdal	count=3
module	returns the given ||| contrib	count=1
function	[function] list ||| [function] related models	count=1
module	sensitive [module] those parameters ||| [module]	count=1
function	return a ||| get units	count=1
function	the initial ||| initial	count=1
function	the given field type ||| field type	count=1
function	return a tuple ||| get	count=1
function	once per save ||| save	count=1
class	is an ||| connection handler	count=1
function	long integer into ||| long to bin	count=1
class	to greenwich time in ||| time	count=1
class	queryset to the ||| query	count=1
module_class	[module_1] datum ||| [module_1] [class_2]	count=1
module	which this view ||| views generic	count=1
function_arg	builds a [arg_2] ||| [arg_2] [function_1]	count=4
module	prepared to be ||| admin	count=1
class	date ||| date list	count=1
function	[function_1] the reverse ||| [function_2] [function_1]	count=2
arg	cursor with ||| cursor sql params	count=1
arg	the arg to ||| arg	count=1
class	settings ||| lazy settings	count=2
function	the value for the ||| value	count=1
function	when all ||| lazy	count=1
function	class are satisfied from ||| init	count=1
module	lines and ||| backends base	count=1
arg	[arg_1] sender ||| [arg_2] [arg_1]	count=2
function	solve the ||| solve	count=1
class	a ||| command	count=1
module	specifies ordering the ||| contrib	count=1
function	receive [function_2] ||| handler [function_1] [function_2] chunk raw_data	count=1
function	in its vary header ||| vary header	count=1
class	[class_1] column ||| [class_2] [class_1]	count=3
function	yields formsets and ||| get formsets with	count=1
arg	the returned instance to ||| form instance fields	count=1
function	a test ||| test	count=3
class	and ||| user manager	count=1
module	unsaved ||| contrib admin	count=2
module	data type [module] ||| [module]	count=1
function	files ||| locale	count=1
function	raster or ||| get	count=1
class	the reverse [class_2] ||| [class_2] [class_1]	count=2
arg	for routines ||| result func cargs	count=1
module	clone of [module_2] ||| [module_1] [module_2]	count=1
module	points in this ||| gdal	count=1
function_arg	[function_1] [arg_2] ||| [function_1] fields [arg_2]	count=1
class	form field ||| field	count=1
module	a clone of ||| gis	count=1
arg	project templates ||| template	count=1
class	date ||| base database operations	count=1
function_arg	format string [arg_2] ||| [arg_2] [function_1]	count=1
function	and ||| process	count=1
module	by null" prevents mysql ||| backends mysql	count=1
function	[function_1] the sql ||| [function_1] [function_2]	count=6
module	the stream in a ||| backends	count=1
module	to the user ||| contrib auth	count=1
function	to '6' saturday ||| w	count=1
module	version number whether the ||| contrib	count=1
class	expression and all ||| base expression	count=1
class	the forward ||| forward	count=1
arg	update_pk is defined ||| update_pk	count=1
class	date field by ||| date	count=1
function	path [function_2] ||| [function_1] [function_2]	count=2
module	the current instance ||| contrib sessions backends	count=2
module	of parent classes ||| db models	count=1
function	relative path to ||| path	count=1
function	[function_1] [function_2] in ||| [function_1] [function_2]	count=3
function	was something [function_2] ||| [function_1] [function_2]	count=5
function	can handle them ||| handle	count=1
class	coordinates in ||| line string	count=2
function	permission to change ||| permission	count=1
module	of tuples [ ||| core management	count=1
arg	found absolute path ||| path prefix	count=1
arg	stream or string of ||| stream_or_string	count=1
module	whether the ||| contrib gis	count=2
module	i e '1' ||| utils	count=1
class	all ||| base	count=6
arg	more explanatory message ||| original_exc model	count=1
arg	to_email ||| subject_template_name email_template_name context from_email	count=1
function	serve static files below ||| serve	count=1
class	without ||| date	count=1
module	list ||| management commands	count=2
class	permission this ||| permissions mixin	count=1
function	any [function] - apps ||| detect [function]	count=1
class	model field ||| related field	count=1
class	the module ||| user settings holder	count=1
class	queryset uses the date ||| date list view	count=1
function	particular [function] ||| [function]	count=2
function_arg	list_select_related [arg_2] ||| [arg_2] [function_1]	count=4
function	[function] saved or ||| clear [function]	count=2
module	in ||| views	count=1
function	sqlite supports [function_2] ||| [function_1] [function_2]	count=3
function	a technical [function_2] ||| [function_2] [function_1]	count=4
module	to determine the ||| contrib auth management	count=2
module	the type of ||| contrib admin	count=1
module	the original is garbage ||| contrib gis	count=1
arg	than max_age seconds ||| max_age	count=1
class	to the database ||| set	count=1
arg	from an iterable ||| iterable	count=1
function	for instantiating the form ||| form	count=1
class	reference ||| ref	count=3
module_class	of the [class_2] ||| [module_1] [class_2]	count=10
function_arg	[function_1] [arg_2] as an integer (or ||| [function_1] age [arg_2]	count=2
module	walks the list ||| sql	count=1
function	in this ||| init	count=1
module	and may take the ||| contrib	count=1
function_arg	returns the [function_1] [arg_2] an update operation ||| base base database operations [function_1] [arg_2]	count=2
module	unsaved ||| admin	count=1
module	the geometry from the ||| contrib gis geos	count=1
function	number of points ||| count	count=1
function	what language ||| get language from	count=1
function	tuples and ||| model operation	count=1
function	a user ||| for user	count=1
class	from applying this queryset ||| query	count=1
function	[function_1] redirect to ||| [function_2] [function_1]	count=4
function	converts an integer to ||| int to	count=1
class	file ||| file system	count=1
function_arg	headers to [arg_2] ||| [arg_2] [function_1]	count=6
module	the ||| core	count=5
module	returns the ||| contrib sessions	count=1
function	[function_1] to change ||| [function_2] [function_1]	count=2
module	take the following inputs ||| contrib gis	count=1
function	type for this ||| type	count=1
function	returns the name of ||| name	count=2
class	the cache at ||| cache	count=1
function	given fields to ||| fields	count=1
function	imported and registered ||| model operation	count=1
module	this [module_2] ||| [module_2] [module_1]	count=6
class	specified permission ||| permissions mixin	count=1
function	ensure all lazy i ||| check lazy	count=1
arg	binding power [arg] evaluates the ||| bp [arg]	count=1
function	a native ||| npath	count=1
function	width x axis ||| width	count=1
class	true if the queryset ||| query set	count=1
module	an unsaved ||| contrib admin	count=1
class	the module specified ||| settings	count=1
function	[function_1] a field ||| [function_1] [function_2] name model model_admin return_attr	count=2
function	'1' to '31' ||| j	count=1
function	[function_1] given fields ||| [function_2] [function_1]	count=1
function	lazy ||| check lazy	count=1
module	rows of values generate ||| models sql	count=1
arg	response ||| response cache_timeout	count=1
function_arg	merging [arg_2] ||| [arg_2] [function_1]	count=1
class	an optional dictionary ||| handler	count=1
function	all actions ||| actions	count=1
class	form instance with the ||| form view	count=1
function	a test database prompting ||| test db	count=2
module	the coordinate sequence ||| contrib	count=1
function	the m2m table ||| get m2m	count=1
function_arg	returns the [function_1] [arg_2] an update operation ||| [function_1] [arg_2]	count=2
module	backends don't need to ||| backends	count=1
class	without leading zeros ||| date	count=1
class	collection ||| collection	count=4
module	to determine the ||| contrib auth	count=2
function	[function_1] package ||| [function_1] [function_2]	count=1
module	the ||| db models	count=10
function	minor ||| minor	count=1
function	be displayed on ||| list display	count=1
class	cache ||| update cache	count=1
module	file ||| commands	count=1
function	given test redirecting ||| test	count=1
module	instances based on the ||| models	count=1
module	that tries ||| decorators	count=1
module	directory file ||| core	count=1
function	[function] slice can ||| assign [function]	count=2
class	files called from ||| hashed files	count=1
function	the latest git changeset ||| git changeset	count=1
module	manager and ||| db backends	count=1
function	[function_1] layout ||| [function_2] [function_1]	count=3
module	mysql has the ||| backends mysql	count=1
module	the results from applying ||| db	count=1
module	dictionaries ||| template	count=1
module	distance lookup value and ||| db backends postgis	count=1
class	year i e ||| format	count=1
function	dictionary containing traceback ||| traceback data	count=1
arg	takes a gdal spatialreference ||| srs	count=1
function	a for update ||| for update	count=2
function	write all messages ||| send messages	count=1
function	given field type name ||| field type	count=1
function	messages ||| send messages	count=2
function_arg	given model [arg_2] ||| [arg_2] [function_1]	count=4
class	returns ||| app config	count=1
function	a modelform return an ||| save form	count=1
function	[function_1] version number ||| [function_1] [function_2]	count=1
function_arg	[function_1] name as ||| [function_1] [arg_2]	count=4
class	variables not ||| settings holder	count=1
function	[function_1] the form ||| [function_2] [function_1]	count=2
module	an ||| contrib admin	count=3
function	input string ||| input	count=1
function_arg	file for [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] which may ||| [arg_2] [function_1]	count=1
module	the ordinates with the ||| contrib	count=1
class	removes ||| user middleware	count=1
function	value to time ||| time	count=1
module	the uniqueness keyword ||| contrib gis	count=1
class	string for interoperability ||| safe	count=1
class	datetime ||| system storage	count=1
arg	done in raw ||| raw	count=1
arg	changes ||| changes graph migration_name	count=1
module	easy lookups by ||| utils	count=1
arg	model usually ||| model	count=2
module	[module_1] geoip library ||| [module_1] [module_2]	count=1
module	list of tuples [ ||| core	count=1
class	files called from ||| files mixin	count=1
module	requested the ||| contrib gis	count=1
module	returns [module_2] ||| [module_2] [module_1]	count=67
function	handle a foreignkey ||| handle fk	count=3
function	connection ||| connection	count=3
function	delete the queryset in ||| delete qs	count=1
function_arg	[function_1] url patterns ||| [function_1] resolver [arg_2]	count=3
arg	fill in the information ||| select opts root_alias cur_depth	count=1
module	returns true if this ||| gdal	count=5
class	given srid if ||| geo	count=1
class	fields passed ||| set	count=1
function	the given httpresponse object ||| patch	count=1
module	the geometry from the ||| contrib gis	count=1
class	tuples and when all ||| apps	count=1
module	to override [module_2] ||| [module_1] [module_2]	count=1
module	set of fields to ||| db models	count=1
module	doesn't examine [module_2] ||| [module_2] [module_1]	count=2
function	the modification time ||| modification	count=1
function	all namespaces ||| all namespaces	count=2
module	for ||| utils translation	count=3
module	the parts of ||| contrib admindocs	count=1
class	the urlconf can ||| view	count=1
function	list or a ||| list	count=1
arg	time ||| value timezone	count=1
module	the geometry to ||| contrib	count=1
class	spatial reference ||| spatial ref	count=5
function_arg	model [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	[function_1] date ||| [function_1] next year [arg_2]	count=1
function	a form field for ||| formfield for	count=2
function	the migrations in ||| check migrations	count=1
class	variables not ||| user	count=1
function_arg	given model name ||| model name app_label	count=1
function	returns the sql string ||| as sql	count=1
function	possible ||| init	count=1
function	all the inner ||| inner	count=1
module	results from ||| db models	count=1
function	list of paths ||| paths	count=1
function	another [function] than ||| [function]	count=1
module	and ||| backends sqlite3	count=2
function	[function_1] a for ||| [function_2] [function_1]	count=2
function	fail silently ||| fail statements	count=1
function	should contain [function] objects ||| get make [function]	count=1
function	returns the short name ||| get short name	count=1
class	module ||| user	count=1
function	value of [function_2] ||| [function_2] [function_1]	count=2
function	information for display on ||| info	count=1
function_arg	model's 'get_latest_by' option [function_1] [arg_2] ||| [function_1] latest [arg_2] direction	count=1
function	list of forms that ||| forms	count=1
function	many-to-one relation ||| many to one	count=1
arg	fields or ||| fields	count=1
class	are ||| user settings	count=1
function	way ||| get backend	count=1
module	opposite of ||| models	count=1
module	of the ||| core	count=5
class	sets [class] header ||| http response [class]	count=1
arg	specified [arg] which ||| [arg]	count=1
function	to create a manager ||| create generic	count=1
module	construct ||| contrib admin	count=1
function	[function_1] path ||| [function_1] [function_2] info with	count=1
function	sets the content for ||| content	count=1
function	transforms ||| transform	count=1
module	example if the ||| contrib	count=1
class	database ||| base database	count=7
arg	a secret (which defaults ||| value secret	count=1
class	if ||| input	count=1
arg	more explanatory message ||| cls original_exc model	count=1
function	[function_1] password ||| [function_2] [function_1]	count=3
class	for the given name ||| base	count=1
class	variables not ||| holder	count=1
function	datetime date object ||| date from	count=1
arg	validationerror containing a dict ||| exclude	count=1
function	should display [function] lists and ||| get allow [function]	count=1
function	[function_1] number of ||| [function_2] [function_1]	count=1
class	configuration variables not ||| user	count=1
arg	has changed it ||| new_type	count=1
class	the ||| base	count=1
function	forwards ||| apply	count=1
class	and its dictionary mapping ||| mapping	count=1
module	datetime datetime ||| utils	count=2
module	creates a ctypes ||| contrib gis gdal prototypes	count=1
function_arg	[function_1] arg to ||| [arg_2] [function_1]	count=1
function	return a hash of ||| hash	count=1
arg	arg a ||| arg	count=1
function	results may contain duplicates ||| results	count=1
function	simple ||| simple	count=1
module	the same [module_2] ||| [module_1] [module_2]	count=2
function_arg	[function_1] or ||| [arg_2] [function_1]	count=10
arg	a field from ||| field	count=2
class	if this form has ||| form	count=1
function	index sql statements for ||| field indexes sql	count=1
module	return [module_2] ||| [module_1] [module_2]	count=4
function	any [function] - ||| detect [function]	count=1
class	a transaction and ||| base database	count=1
function	[function_1] help text ||| [function_1] [function_2]	count=1
function	alters ||| alter	count=1
module	essentially the ||| db models	count=1
module	of 'year', 'month' ||| db backends base	count=1
function	cleans a dictionary ||| clean	count=1
module	field [module] been ||| contrib [module]	count=1
class	this queryset ||| query set	count=1
function	returns a template ||| get template	count=3
class	specified permission ||| permissions	count=1
class	used to ||| choice	count=1
module	the queryset is ||| models	count=1
function	write all messages to ||| send messages	count=1
function	the test settings ||| test settings	count=1
function	encoding is unsupported by ||| encoding	count=1
function	query returns the sql ||| sql	count=4
class	files ||| files mixin	count=1
function	*models returns a ||| get for	count=1
module	and returns ||| db backends base	count=1
function	keys ||| keys	count=1
function	given a modelform return ||| save form	count=1
module	sets the ||| contrib	count=3
arg	inline ||| inline	count=1
arg	must be overridden to ||| request model_admin	count=1
module	can contain helpful ||| views	count=1
function	[function_1] [function_2] id ||| [function_1] [function_2] feat_id	count=1
function	slash ||| slash	count=2
class	given database tables ||| database operations	count=1
function	available datetimes for the ||| datetimes	count=1
class	year ||| format	count=1
function_arg	search form [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] queryset ||| [function_2] [function_1]	count=1
class	field and ||| field	count=1
class	the queryset is ||| query set	count=1
arg	[arg_1] a context ||| [arg_2] [arg_1]	count=2
function	spatial function ||| spatial	count=1
class	a transaction and ||| base	count=1
function	block until the element ||| wait until	count=1
function	parse a [function_2] ||| [function_1] [function_2]	count=1
arg	one item of ||| model item	count=1
arg	ordereddict of ||| paths dry_run	count=1
function	aliases in ||| change aliases	count=1
function	manytomanyfield ||| m2m	count=1
module	not indicate the ||| contrib gis db	count=1
arg	cursor ||| cursor sql	count=1
arg	index ||| index	count=13
module	on the first ||| models	count=1
module	without opening [module] <ul> tags ||| [module]	count=1
class	the template and ||| template	count=1
class	these are all ||| based	count=1
function_arg	references [arg_2] ||| [function_1] field [arg_2]	count=1
arg	the given ||| plan state fake	count=1
function	[function_1] from its ||| [function_1] [function_2]	count=2
module_class	present usually 2 but [module_1] [class_2] pop-ups opening other pop-ups ||| [module_1] [class_2]	count=2
function_arg	[function_1] path ||| [arg_2] [function_1]	count=8
module	[module_1] the application ||| [module_1] [module_2]	count=1
function	a tuple version ||| tuple	count=1
module	range of different ||| db models fields	count=1
function	the value ||| value	count=5
module_class	list of [class_2] ||| [module_1] [class_2]	count=3
class	extra inline ||| inline model admin	count=1
function	function to generate formsets ||| formsets	count=1
function	when ||| model	count=1
function	[function_1] placeholder for ||| [function_2] [function_1]	count=1
arg	if update_pk is defined ||| update_pk	count=1
function	receivers [function] ||| send [function]	count=1
arg	more than max_age ||| max_age	count=1
arg	converts the filename content ||| filename content	count=1
function	the null ||| set field new type null	count=1
function	[function_1] number of ||| [function_1] [function_2]	count=1
function	is the symmetric difference ||| sym difference	count=1
function	is an ||| init	count=1
arg	a stream or string ||| stream_or_string	count=1
arg	static ||| path	count=1
function	a token ||| token	count=1
module	the loading of ||| db models	count=1
module	[module] through any ||| [module]	count=1
module	reversed ||| contrib admin	count=1
function	imported ||| lazy	count=1
arg	from the given function ||| func	count=1
class	an unsaved ||| model	count=1
function	the corresponding models have ||| lazy model	count=1
module	range of different ||| db models	count=1
module	in the ||| views generic	count=1
module	given httpresponse object ||| utils	count=1
module	receivers to ||| dispatch	count=1
function	when all ||| model operation	count=1
function	an email [function_2] ||| [function_2] [function_1]	count=1
arg	a given time zone ||| value timezone	count=1
class	the date field ||| date list	count=1
function_arg	matches [arg_2] ||| [function_1] path [arg_2]	count=1
module_class	'1' to [class_2] ||| [module_1] [class_2]	count=2
arg	the parser ||| parser token	count=1
function	database [function_2] ||| [function_2] [function_1]	count=2
function	key ||| get	count=1
function	backend supports the provided ||| support	count=1
arg	given function ||| func	count=2
function	return a tuple of ||| get	count=1
module	object for [module] ||| [module]	count=2
module	of fields to exclude ||| models	count=1
class	directories ||| directories	count=1
function	of ||| lazy	count=1
class	if [class] has no ||| [class]	count=1
arg	retrieves the ||| mode	count=1
function	releases a savepoint ||| savepoint commit	count=1
module	of this ||| db models	count=3
module	of ||| core management commands	count=2
module	the given httpresponse object ||| utils	count=1
module	returns [module_2] ||| [module_1] [module_2]	count=68
arg	[arg_1] from value ||| [arg_2] [arg_1]	count=4
class	of extra inline forms ||| inline model	count=1
function	the test ||| create test	count=1
arg	[arg_1] request using ||| [arg_2] [arg_1] extra_tags	count=2
class	permissions in ||| permissions mixin	count=1
function	the po ||| write po	count=1
module	and [module_2] ||| [module_2] [module_1]	count=1
function	to create an object ||| create object from	count=1
function	[function_1] prefix settings ||| [function_2] [function_1]	count=10
arg	true if line ||| line	count=1
module	backends ||| backends	count=10
arg	takes a project_state ||| project_state	count=1
module	default (sqlite_limit_variable_number) of ||| db	count=1
function	list_display_links ||| list display links	count=1
function	get a date list ||| get date list	count=1
function_arg	class [arg_2] ||| [function_1] selector [arg_2]	count=1
function	non-schema-affecting [function_2] ||| [function_1] [function_2]	count=4
class	each ||| set	count=1
function	a manager for ||| manager	count=2
function	backend ||| get backend	count=1
module	urlconf can ||| views generic	count=1
function	of ("app_label", "modelname") ||| model operation	count=1
module	in the ||| contrib admin	count=5
arg	name as a ||| name	count=1
module	geos pointer ||| contrib gis geos	count=2
function	list of forms ||| forms	count=1
function	[function_1] history as ||| [function_2] [function_1]	count=3
arg	full_plan ||| plan full_plan	count=1
module	the oracle ||| db backends oracle	count=1
arg	setting ||| setting	count=1
function_arg	[function_1] httpresponse ||| [function_1] [arg_2]	count=1
arg	length and ||| length	count=1
class	an optional dictionary of ||| connection handler	count=1
function	[function_1] classes ||| [function_1] [function_2]	count=1
module	the database ||| db	count=1
function_arg	error response [arg_2] ||| [arg_2] [function_1]	count=3
arg	receiver from ||| receiver	count=1
function	(if it matches any ||| matches patterns	count=1
arg	a modelform ||| form	count=1
class	day of the week ||| format	count=1
module	and ||| gis db backends oracle	count=2
arg	returns a ||| model	count=1
class	if the form ||| base form	count=1
class	list ||| base finder	count=1
arg	a single message ||| subject message from_email	count=2
function_arg	[function_1] date object ||| [function_1] [arg_2]	count=6
module	with the given ||| contrib gis	count=1
class	model instance ||| base model	count=3
module	a list of ||| models	count=4
function	the surface ||| on surface	count=1
function	app or project ||| handle template	count=1
module	files ||| utils	count=1
class	the file ||| clearable file	count=1
class	performs set ||| set	count=1
function	number ||| num	count=5
function_arg	typical (app_label model_name) tuples [function_1] [arg_2] ||| [function_1] tuples [arg_2]	count=1
function	date ||| datefield	count=1
module	of date objects ||| db models	count=1
class	root ||| node	count=1
function	all key ||| key	count=3
module	range of ||| models fields	count=1
arg	turns a language ||| language	count=1
function	mime attachment object ||| create attachment	count=1
module	backends can ||| backends	count=3
module	the two geometries ||| contrib	count=1
function	datetimes for ||| datetimes	count=1
function	tag libraries ||| libraries	count=1
arg	was updated (in ||| base_qs using pk_val values	count=1
function	current system [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] connection ||| [function_1] [function_2]	count=3
class	these are all ||| file based	count=1
module	on the ||| contrib gis db	count=1
function	and returns a new ||| new	count=1
function_arg	[function_1] setting ||| [arg_2] [function_1]	count=8
function	tuples [ ||| messages	count=1
arg	regex ||| regex max_length min_length	count=1
function	return true if ||| choice has	count=1
arg	key generated from key_salt ||| key_salt	count=1
function	[function_1] columns ||| [function_1] [function_2]	count=12
function	the extent3d ||| convert extent3d	count=1
function	object ||| object from params	count=2
arg	cls using ||| cls using	count=1
module	of rows ||| models sql	count=1
module_class	[module_1] point ||| [class_2] [module_1]	count=1
class	return a query ||| query	count=1
arg	localizable format ||| value format use_l10n	count=2
arg	field on an object ||| field	count=1
module	list ||| core management commands	count=2
function	start a ||| start	count=1
arg	password_changed() ||| user password_validators	count=1
function	[function] exceptions using ||| wrap [function]	count=1
function	since the ||| since	count=1
module	to redirect after the ||| contrib	count=1
class	and registered ||| apps	count=1
arg	x y z ||| x y z	count=3
class	unsaved ||| model	count=1
arg	attempt ||| prefixed_path source_storage	count=2
module	a geosgeometry the ||| contrib gis geos	count=1
arg	fill in the ||| opts root_alias cur_depth	count=1
module	of ||| db migrations	count=3
arg	message ||| fail_silently	count=1
function	alters m2ms to ||| alter many to	count=1
class	this log entry ||| log entry	count=4
module	modeladmin specifies ordering the ||| contrib admin	count=1
arg	log-in page if necessary ||| perm login_url	count=1
function	number of digits and ||| format number	count=1
function	[function_1] template ||| [function_1] [function_2]	count=1
function	double value passed ||| dbl	count=1
class	given a ||| model	count=1
function	an html string ||| text html	count=2
module	that will be used ||| models	count=1
function	generates a unique name ||| create index name	count=1
function_arg	executed by [arg_2] ||| [function_1] query [arg_2]	count=2
arg	the specified [arg] which ||| [arg]	count=1
function	projectstate object ||| project	count=1
module	the node class of ||| contrib	count=1
function	new savepoint only ||| savepoint create	count=2
module	applied migrations have ||| migrations	count=1
function	to a python dictionary ||| to	count=1
function	name for ||| suggest name	count=1
arg	error ||| result func cargs	count=1
module	(if the return_geom keyword ||| contrib gis gdal prototypes	count=1
function	block until ||| wait until	count=1
arg	sending a single message ||| subject message from_email	count=1
module	full template ||| template	count=1
arg	according ||| arg	count=1
arg	contents in [arg_2] ||| [arg_1] [arg_2]	count=2
function	file object [function_2] ||| [function_1] [function_2]	count=1
module_class	for [module_1] [class_2] ||| [module_1] gis geoip [class_2]	count=4
class	'0' ||| format	count=2
function_arg	dates for [arg_2] ||| [function_1] [arg_2]	count=2
module	some versions of oracle ||| backends oracle	count=1
function	returns a list ||| locale	count=1
function	new pk values ||| pk value	count=1
function	'second', returns [function_2] ||| [function_1] [function_2]	count=6
function	a technical [function_2] ||| [function_1] [function_2]	count=4
function_arg	[function_1] given cursor ||| [function_1] query [arg_2]	count=2
module	of the root ||| utils	count=1
arg	[arg_1] skip ||| [arg_2] [arg_1]	count=1
module	[module_1] in the ||| [module_2] [module_1]	count=1
arg	specified app_label and ||| app_label	count=1
module	the polygon data ||| contrib gis	count=1
arg	an item of fields ||| fields	count=1
class	must ||| multiple object template response	count=1
function	[function_1] default value ||| [function_2] [function_1]	count=1
function	this class are ||| init	count=1
class	sets the cache ||| cache	count=1
module	[module] the ||| contrib [module]	count=1
module	update depends on results ||| db models	count=1
module_class	requested static [class_2] ||| [class_2] [module_1]	count=3
class	return ||| admin	count=1
function	[function_1] geos used ||| [function_2] [function_1]	count=2
module_class	fields instance [class_2] ||| [module_1] [class_2]	count=2
arg	name value to ||| value	count=1
arg	a queryset or ||| format queryset	count=1
arg	it ||| request using	count=1
class	last value ||| value	count=1
module	return an unsaved instance ||| contrib	count=1
module	[module_1] in the ||| [module_1] [module_2]	count=1
arg	form is ||| form	count=1
module	been imported and registered ||| apps	count=1
function	the language [function] for ||| do get language [function]	count=1
class	case of ||| admin selenium test case	count=1
class	the list of ||| list view	count=1
function	of ("app_label", "modelname") tuples ||| lazy model operation	count=1
module	stddev and related stats ||| backends	count=1
function	or a path ||| get	count=1
class	for this field ||| field	count=1
module	of all the ||| contrib gis	count=1
module_class	[module_1] [class_2] ||| [module_1] oracle [class_2]	count=2
module	and the value ||| contrib	count=1
function	("app_label", "modelname") tuples ||| model	count=1
class	fieldset[1]['fields'] for ||| base	count=1
class	e '0' to ||| date	count=1
function	in a length ||| length	count=1
class	can ||| view	count=1
arg	through ||| cls	count=1
arg	[arg_1] from the ||| [arg_2] [arg_1]	count=3
function	shortcut for ||| lazystr	count=1
arg	default_settings if possible ||| default_settings	count=1
arg	into strings it's used ||| obj	count=1
function	custom url [function_2] ||| [function_2] [function_1]	count=1
function	function to ||| generic related	count=1
function	set of all models ||| models	count=1
function_arg	fields [arg_2] ||| [arg_2] [function_1]	count=4
function	containing a ||| containing	count=1
function	for ||| for	count=5
function	clears [function_1] [function_2] (but not extra_select columns) ||| models sql query clear [function_2] [function_1]	count=1
class	the module specified ||| user	count=1
module_class	geos [class_2] ||| [module_1] [class_2]	count=4
function	a relative ||| construct relative	count=1
module	and returns the ||| contrib auth	count=1
function	a random password with ||| make random password	count=1
function	creates a test ||| test db	count=1
function	language the user wants ||| get language from	count=1
function	containing a warning ||| warning for	count=1
function	python [function_2] ||| [function_1] [function_2]	count=1
module_class	to use for ||| views generic base	count=1
module	some backends ||| db backends base	count=1
module	tuple of the messages ||| contrib messages	count=1
function	incoming data ||| ordered forms	count=1
arg	the base ||| base	count=1
function	nodes when they ||| nodes	count=1
function	element for relational fields ||| start relational	count=1
function	[function_1] key that ||| [function_2] [function_1]	count=1
function	the options [function_2] ||| [function_2] [function_1]	count=2
module	about the [module_2] ||| [module_1] [module_2]	count=1
module	[module_1] user in ||| [module_1] [module_2]	count=6
arg	the instance ||| instance name	count=1
module	to user-provides languages files ||| utils	count=1
function	all available datetimes for ||| datetimes	count=1
arg	spatialreference system ||| srs	count=1
function	and registered ||| lazy	count=1
class	actual date or datetime ||| date time field	count=1
class	accessor and ||| related field	count=1
function	special way ||| backend timeout	count=1
class	and resets the ||| database	count=1
module	geos pointer ||| gis geos	count=1
arg	and given allowed_chars ||| allowed_chars	count=1
function	field's [function_2] ||| [function_2] [function_1]	count=4
module	models have ||| apps	count=1
function	extracts ||| extract	count=3
function	method up [function_2] ||| [function_2] [function_1]	count=4
arg	format_html for ||| sep format_string args_generator	count=1
function	create a [function_2] ||| [function_2] [function_1]	count=1
function	type ||| field type	count=1
module	returns true if the ||| contrib	count=3
module	of dictionaries in the ||| template	count=1
module	the band's parent raster ||| gdal raster	count=1
arg	and exactly ||| max_header_size	count=1
module	lines and returns ||| backends base	count=1
function	index ||| index	count=2
module	mapping models to a ||| models sql	count=1
module	which database this ||| db models	count=1
module	into this ||| models	count=1
function	url converter for ||| url converter	count=1
function	cache [function_2] ||| [function_2] [function_1]	count=3
class	email ||| email	count=6
module	[module_1] the envelope ||| [module_1] [module_2]	count=1
module_class	the site object ||| contrib sites site	count=1
class	e '0' sunday ||| date format	count=1
class	[class_1] relation ||| [class_1] [class_2]	count=5
function	the path ||| path	count=1
module	with long (> ||| cache backends	count=1
arg	<label> because clicking such ||| id_ index	count=1
module	from the ||| conf	count=1
module	the either side ||| fields	count=1
module_class	[module_1] geometry and ||| [module_1] [class_2]	count=3
function	return ||| get units	count=1
module	of the month ||| utils	count=1
function	return the value ||| value	count=1
arg	is a subclass of ||| obj	count=1
class	slice from the set ||| set	count=1
arg	[arg_1] number ||| [arg_1] [arg_2]	count=1
module_class	of this [class_2] ||| [module_1] [class_2]	count=27
function	null ||| set field new type null	count=1
function	the unget ||| unget	count=1
function	[ directory file ||| compile	count=1
arg	given the value ||| value lookup_type	count=1
function	not null ||| not null	count=4
function	of paths to user-provides ||| paths	count=1
function	the pattern ||| pattern	count=1
module	the target ||| contrib	count=1
module	database ||| models	count=1
module	mysql from implicitly ||| backends mysql	count=1
class	from [class_1] [class_2] ||| [class_2] [class_1]	count=4
arg	given cursor ||| cursor sql params	count=1
arg	given httpresponse expires ||| response cache_timeout	count=1
arg	strings according [arg_2] ||| [arg_2] [arg_1]	count=2
arg	[arg_1] request using ||| [arg_2] [arg_1]	count=2
function	[function_1] for a ||| [function_1] [function_2]	count=6
module	[module] index ||| [module]	count=5
function	pot file with ||| pot file	count=1
module	during initialization and the ||| contrib	count=1
function	necessary table joins for ||| setup joins	count=1
function	of tables in ||| tables	count=1
arg	value in ||| value arg	count=1
function	add "value" to ||| add	count=1
module	sense of ||| utils	count=1
class	satisfied from ||| user	count=1
function	an infix ||| infix	count=1
module	sends ||| core mail backends	count=3
arg	the ||| template	count=1
class	leading zeros i ||| format	count=1
function_arg	[function_1] date ||| [arg_2] [function_1]	count=10
arg	reads or writes ||| offset size shape	count=1
class	of files called from ||| files mixin	count=1
module	of points in this ||| gis gdal	count=1
function	go after the ||| get	count=1
class	check for ||| base	count=1
arg	arg to the value ||| value arg	count=1
module	of the geometry ||| contrib gis	count=2
function	all lazy i ||| lazy	count=1
module	or the user is ||| contrib admindocs	count=1
function	initial data ||| get initial	count=1
function	a number [function] string and ||| [function]	count=1
function	session model ||| model	count=1
module	of the root connector ||| utils	count=1
arg	retrieves the specified file ||| name mode	count=1
module	a ||| core management commands	count=2
function	[function_1] non-schema-affecting ||| [function_1] [function_2]	count=3
function	creates a test ||| create test	count=1
module	backends require special ||| db backends	count=1
class	spatial [class_2] ||| [class_1] [class_2]	count=10
function	to reset ||| reset	count=2
function	an sql ||| sql	count=1
arg	a source and target ||| source target	count=1
function	is the type returned ||| field type	count=1
arg	of the changes ||| changes graph migration_name	count=1
arg	max-age from [arg] cache-control ||| [arg]	count=1
module	a ||| utils	count=3
module	prevents mysql from implicitly ||| db backends mysql	count=1
module	the names of all ||| contrib	count=1
function	deleted models managed ||| generate deleted models	count=1
function	[function_1] csrf ||| [function_2] [function_1]	count=2
module	the ||| management	count=1
module	layer at the ||| contrib gis	count=1
arg	a language ||| language	count=1
function	equivalent ||| equals	count=1
class	if needed ||| base	count=1
function	specified ||| init	count=1
function	header in the ||| patch vary	count=1
function	updates the ||| update	count=2
arg	validate entire django project ||| tags display_num_errors include_deployment_checks	count=1
class	the ||| database wrapper	count=1
module	multiple lines and returns ||| backends	count=1
function	a valid ||| is valid	count=1
module	returns ||| gis	count=74
class	email ||| base email	count=1
function	[function] name ||| [function] swappable settings	count=1
module	take the ||| contrib	count=1
function	all objects [function_2] ||| [function_1] [function_2]	count=1
function	extracts ||| datetime extract	count=1
arg	of the field to ||| field	count=1
module	the return_geom keyword is ||| contrib gis gdal	count=1
class	and resets the ||| base	count=1
arg	[arg_1] value ||| [arg_1] [arg_2]	count=3
module	(if the return_geom ||| contrib	count=1
arg	the given geometry in ||| geom	count=1
module	reverse ||| models fields	count=3
function	default time zone ||| default timezone	count=2
function	a special way ||| backend timeout	count=1
arg	model changing its ||| model	count=1
class	its [class] ||| raw [class]	count=1
function	the admin ||| admin	count=2
function	negate ||| negate	count=1
function	of ||| compile	count=1
function	[function] for ||| get [function]	count=6
class	reset for ||| reset	count=1
function	radio_fields dictionary ||| radio fields	count=1
class	form instance with ||| form view	count=1
function	for topology operations takes ||| topology	count=1
function	null field to ||| null	count=2
module	returns none because geometry ||| gis db	count=1
arg	a stream or ||| stream_or_string	count=1
module	adds or ||| utils	count=1
module	point in the ||| contrib	count=1
function	has a given ||| has	count=1
module	[module_1] migrations with ||| [module_1] [module_2]	count=8
module	definitions ||| db	count=1
function	the quantifier ||| get quantifier	count=2
module	from applying this ||| models	count=1
class	be converted ||| field	count=1
module	directory ||| management	count=1
function	is usable ||| is usable	count=2
module	[module_1] form sql ||| [module_1] [module_2]	count=2
module	value ||| prototypes	count=1
module	to return the ||| contrib	count=1
function	command [function_2] ||| [function_2] [function_1]	count=1
arg	geoqueryset ||| precision	count=3
function	("app_label", ||| lazy model	count=1
function	[function_1] [function_2] ||| files file upload handler [function_1] [function_2]	count=4
function_arg	[function_1] encoded hash ||| [function_1] [arg_2]	count=2
function	latest ||| latest	count=1
function	a list of ||| all locale	count=1
class	dangling ||| base database wrapper	count=1
module	and lookup type ||| gis db backends	count=1
function	and ||| parser	count=1
arg	the given field_name ||| field_name	count=3
function	a list of ||| list	count=6
class	error which ||| error	count=1
function	updates ||| patch	count=1
module	the wkt of this ||| contrib gis gdal	count=1
function	be ||| field	count=2
arg	[arg_1] sender ||| [arg_1] [arg_2]	count=2
function	defined by the admins ||| admins	count=1
function	to interval [function_2] ||| [function_2] [function_1]	count=6
function	of paths to ||| locale paths	count=1
class	field on the model ||| field	count=1
module	adds or updates ||| utils	count=1
module	the ||| contrib sessions	count=6
function	clob column ||| process clob	count=1
arg	returned instance ||| form instance fields exclude	count=1
module	and related ||| backends sqlite3	count=1
class	been imported ||| apps	count=1
class	database is ||| database	count=1
function	the ||| patch	count=2
function	custom prepopulated [function_2] ||| [function_2] [function_1]	count=1
function	a password [function_2] ||| [function_2] [function_1]	count=1
arg	sends each message to ||| fail_silently	count=1
module	overridden in the ||| contrib	count=1
module	the oracle error code ||| backends oracle	count=1
class	return an unsaved ||| model admin	count=1
function	date interval ||| date interval	count=1
module	all tables and ||| backends base	count=1
function	type from the ||| lookup type	count=1
arg	value the value ||| value	count=1
class	uses the date field ||| date list view	count=1
module	only the ||| contrib gis	count=1
function	to local ||| localtime	count=1
module	passed ||| db models	count=2
module	to all models ||| db models sql	count=1
module	httpresponse ||| utils	count=1
function	("app_label", "modelname") ||| model operation	count=1
function	the latest object ||| latest	count=1
class	the module ||| user	count=1
module	some ||| db	count=1
function	returns the model matching ||| get model	count=1
function	to ||| module to	count=1
module	of the database fields ||| contrib gis db	count=1
module	resets the ||| backends base	count=1
function	returns the sql version ||| as sql	count=1
function	for an app config ||| app config	count=1
module	initialization and the ||| contrib	count=1
class	satisfied from the module ||| settings holder	count=1
function	handle ||| handle	count=7
function_arg	model references [arg_2] ||| [function_1] [arg_2]	count=1
function	prepopulated [function_2] ||| [function_2] [function_1]	count=2
module	instance guaranteed ||| contrib sessions	count=1
function	messages to the stream ||| messages	count=1
arg	a lookup_type of ||| lookup_type	count=1
arg	data using the ||| data	count=1
arg	update_pk is defined then ||| using fields update_pk	count=1
module	geometry from the coordinate ||| contrib gis geos	count=1
function	list of tuples ||| compile messages	count=1
arg	given coords using ||| coords w3c_geo	count=1
module_class	this geometry ||| gdal ogrgeometry	count=1
class	given django model instance ||| base model admin	count=2
function	of a ||| test db	count=1
class	results ||| raw	count=1
function	parse a string ||| parse	count=1
function	closes the current ||| close if	count=1
function	relationship ||| related	count=2
function	[function_1] unget history ||| [function_1] [function_2]	count=1
module	oracle doesn't have ||| db backends oracle	count=1
module	get the ||| views generic	count=1
module	m rows of values ||| models	count=1
function	location returning ||| location	count=1
function	[function] gap ||| harden [function]	count=2
function	the n-th clone of ||| test db clone	count=1
module	app or project templates ||| core	count=1
function	for all [function_2] ||| [function_2] [function_1]	count=1
arg	a message to the ||| message fail_silently connection	count=2
function	a ||| html safe	count=1
function	parses a string and ||| parse	count=2
function	the start of ||| start	count=1
module	for custom [module] subclasses ||| contrib [module]	count=1
class	i e '0' ||| date format	count=2
function	[function_1] this user ||| [function_2] [function_1]	count=2
arg	database [arg] the ||| compiler field table_alias [arg]	count=1
arg	[arg] to a ||| [arg]	count=3
module	dirty ||| db	count=1
module	by default ||| core	count=1
arg	name as a ||| name app_label	count=1
arg	url ||| url	count=3
function_arg	[function_1] [arg_2] ||| [function_1] models tuples [arg_2]	count=1
function	ignored (if it matches ||| matches patterns	count=1
arg	name with an ||| name	count=1
class	all formsets have a ||| base	count=1
function	lookup ||| lookup	count=3
module	without opening [module] <ul> ||| [module]	count=1
module	admin form and inlines ||| admin	count=1
function	the names of the ||| names	count=1
class	read the file ||| file	count=1
module	[module_1] [module_2] country code ||| [module_2] [module_1]	count=8
module	returns the intersection of ||| gis	count=1
arg	if ||| using	count=1
function	clears [function_1] [function_2] not extra_select columns) ||| db models sql query [function_2] [function_1]	count=1
arg	will force the value ||| value	count=1
arg	datatuple of [arg_2] ||| [arg_2] [arg_1]	count=3
class	this model field ||| field	count=1
class	week numeric ||| date format	count=1
function	language name ||| language	count=1
function	app or project templates ||| handle template	count=1
function	number ||| lazy	count=1
arg	the exception should be ||| exception	count=1
function	list ||| all locale	count=1
arg	to a response ||| response	count=1
function	check that ||| check	count=3
function	view for ||| view	count=2
module	key checks ||| db backends	count=1
function_arg	class it ||| class cls name	count=1
function	in a special way ||| get backend	count=1
class	form instance ||| form view	count=1
module	modelform return an unsaved ||| contrib	count=1
module	current instance ||| sessions backends	count=1
function_arg	[function_1] page ||| [function_1] [arg_2] extra_context	count=1
class	config from ||| config	count=1
class	definitions (structured ||| connection handler	count=1
arg	[arg] name ||| [arg]	count=2
module	by the ||| contrib admin	count=2
function	opposite of defer only ||| only	count=1
module	modelform return ||| admin	count=1
function	hexewkb ||| hex	count=1
function_arg	admins [arg_2] ||| [function_1] [arg_2]	count=1
function	the union of this ||| union	count=1
arg	instance ||| request	count=1
arg	removedindjango20warning an ||| dirs	count=1
class	database tables ||| database	count=1
function	return fields of the ||| get fields	count=1
module	built-in [module_2] ||| [module_1] [module_2]	count=1
arg	regex ||| regex	count=2
function	type ||| column type	count=1
module	returns true if the ||| db	count=1
class	applying this ||| query set	count=1
arg	[arg] cache-control ||| [arg]	count=1
function_arg	filter_vertical [arg_2] ||| [arg_2] [function_1]	count=4
arg	use as selectfield ||| include_blank blank_choice limit_choices_to	count=1
module	to the ||| models	count=1
function	generate formsets for add/change_view ||| create formsets	count=1
function	and call the ||| get response	count=1
function	metadata column used ||| col	count=1
function	get the number ||| get	count=1
arg	<label>, if ||| attrs label_suffix	count=1
module	file ] ||| core management	count=1
class	on this form ||| form	count=1
module	the messages to a ||| contrib messages storage	count=1
module	queryset to the ||| models	count=1
module	of all tables and ||| db backends base	count=1
arg	it with a context ||| context request	count=1
function	field's value as ||| as	count=1
function	alais for ||| coords	count=1
function	to str format ||| format	count=1
class	the template and context ||| template	count=1
function	form field for ||| formfield for	count=4
module	confuse the ||| contrib	count=1
function	will be interpolated ||| get readable	count=1
class	a primary database ||| database	count=1
module	the correct mime type ||| contrib gis	count=1
function	return the modification time ||| modification	count=1
function	sets the creation ||| set creation	count=1
function	sql statements required to ||| sql flush	count=1
module	to each of the ||| contrib gis	count=1
class	the file object if ||| file input	count=1
function	the media [function_2] ||| [function_2] [function_1]	count=2
module	list ||| utils	count=1
function	[function_1] [function_2] ||| handler [function_1] [function_2] chunk raw_data	count=1
arg	arg ||| arg	count=2
module	of the [module_2] ||| [module_1] [module_2]	count=6
function	[function_1] naive ||| [function_1] [function_2]	count=1
function_arg	[function_1] length ||| [function_1] name [arg_2]	count=1
arg	[arg_1] lookup ||| [arg_1] [arg_2]	count=4
module	applied migrations have ||| db migrations	count=1
function	[function_1] name ||| [function_1] [function_2]	count=17
class	datetime ||| file system storage	count=1
module	the features ||| contrib	count=1
class	into this ||| query set	count=1
module_class	of this geometry ||| gdal ogrgeometry	count=1
class	from ||| set	count=1
module	return an unsaved instance ||| admin	count=1
class	the date field ||| date list view	count=1
module	admin form and ||| admin	count=1
function	[function_1] [function_2] spatial parameters necessary for ||| [function_1] [function_2]	count=1
module	up into migrations ||| db migrations	count=2
arg	if value [arg_2] ||| [arg_1] [arg_2]	count=2
function	region of intersection of ||| intersection	count=1
function	format string and a ||| string	count=1
class	multiple ||| multi	count=1
function	finds any renamed models ||| generate renamed models	count=1
arg	function that returns an ||| result func cargs offset	count=1
class	variables not in this ||| settings holder	count=1
function	[function_1] raw ||| [function_2] [function_1]	count=1
arg	variables and ||| request	count=1
function	[function_1] 404 ||| [function_1] [function_2]	count=3
function	target file ||| delete file	count=1
function	is true ||| save form	count=1
function_arg	validators [arg_2] ||| [function_1] protocol [arg_2]	count=1
class	save ||| model form	count=1
function	routine for ogrinspect ||| ogrinspect	count=1
module	numeric i ||| utils	count=1
arg	string depending on ||| compiler sql params	count=1
class	context ||| context	count=4
module	if the model ||| contrib	count=1
function	as migration [function_2] ||| [function_2] [function_1]	count=1
module	list of date ||| db models	count=1
module	depends on results ||| models	count=1
class	i e '0' to ||| date format	count=1
module	the operation on ||| contrib	count=1
function	text into clickable links ||| urlize	count=1
module	'objs' ||| db models	count=1
arg	an ||| request form	count=1
function	all ||| related	count=2
class	this class are satisfied ||| user settings holder	count=1
arg	retrieve the related ||| feat rel_model rel_mapping	count=1
function	removes the ||| remove	count=2
module	action field [module] been ||| contrib [module]	count=1
function	information about ||| info	count=1
module	given [module] ||| contrib [module]	count=3
function_arg	[function_1] searching ||| [arg_2] [function_1]	count=4
arg	function [arg_2] ||| [arg_1] [arg_2]	count=2
function	deferred ||| deferred	count=1
module	tuples [ directory ||| commands	count=1
function	handle ||| handle field	count=2
module	guaranteed ||| contrib sessions backends	count=1
function	month [function] in ||| get month [function]	count=1
arg	for use as selectfield ||| include_blank blank_choice limit_choices_to	count=1
arg	if-modified-since ||| if_modified_since	count=1
function	context for ||| context data	count=1
arg	given the name of ||| name	count=1
arg	iterable [arg_2] ||| [arg_2] [arg_1]	count=6
arg	[arg] inside ||| selector [arg]	count=3
function	[ directory file ] ||| compile	count=1
arg	[arg_1] the number ||| [arg_1] [arg_2]	count=1
module	it [module_2] ||| [module_2] gis [module_1]	count=1
function	index with ||| index	count=1
function	"true" (i ||| do if	count=1
function_arg	form for searching ||| form cl	count=2
function	or raster or ||| get	count=1
module	[ directory ||| management commands	count=1
function	returns an sql ||| sql	count=1
function	[function_1] layer metadata ||| [function_1] [function_2]	count=1
module	a modelform ||| contrib admin	count=1
function	a list of ||| locale	count=1
function	a new ||| init	count=1
module	lookups by key ||| translation	count=1
module	for easy lookups ||| utils translation	count=1
function	been added ||| generate added	count=1
class	fetch ||| management utility	count=1
module	the object ||| contrib	count=1
module	of whether the ||| contrib	count=1
module	rendered on the ||| contrib admin templatetags	count=1
class	function for ||| base	count=1
arg	an apps and returns ||| cls apps	count=1
function	the given ||| patch	count=1
class	from ||| user	count=1
function	has ||| has delete	count=1
function	[function_1] object in ||| [function_1] [function_2]	count=3
class	algorithm ||| hasher	count=1
function	the given httpresponse ||| patch	count=1
arg	null placeholder needed for ||| placeholder params	count=1
class	for backwards-compatibility several ||| base	count=1
function	header into a key-value ||| header	count=1
class	return an unsaved instance ||| model admin	count=1
function	returns a numeric identifier ||| get	count=1
module	with the ||| contrib auth	count=2
function	for all key ||| key	count=3
function	introspected foreign ||| can introspect foreign	count=2
module	clause ||| models sql	count=2
arg	a message to the ||| message	count=1
function	css classes ||| css classes	count=2
function	presented by this ||| label from instance	count=1
function	lazy i ||| lazy	count=1
module	of operation instances ||| db migrations	count=2
function	[function_1] new ||| [function_1] [function_2]	count=1
class	the database that will ||| set	count=2
module	displays the ||| contrib admin	count=2
module	of digits and ||| db models fields	count=1
function	sql that [function_2] ||| [function_2] trunc [function_1]	count=1
module	in the coordinate ||| contrib gis	count=2
class	model instance for ||| base model	count=1
function	date object given a ||| date from	count=1
function	when all the ||| lazy	count=1
module	aggregate [module] for ||| contrib gis [module]	count=1
module	true if ||| db	count=1
function	slash ||| redirect with slash	count=2
module	returns a list of ||| utils translation	count=1
function_arg	[function_1] field field_name ||| [function_1] extract sql lookup_type [arg_2]	count=3
function_arg	[function_1] [arg_2] of ||| [function_1] [arg_2]	count=3
module	fields instance ||| models fields	count=1
arg	given lhs ||| lhs rhs	count=1
class	in the cache at ||| cache	count=1
arg	cls [arg_2] ||| [arg_1] [arg_2]	count=4
arg	creates the ||| with_limits with_col_aliases	count=1
function	interpolated ||| get readable field data	count=1
arg	the returned instance to ||| instance fields	count=1
module	the set of ||| contrib	count=1
class	essentially the ||| set	count=1
function	relative [function_2] ||| [function_2] [function_1]	count=1
arg	routines that ||| cargs	count=2
function_arg	[function_1] of timezone ||| [function_1] [arg_2]	count=2
arg	connector ||| connector negated	count=1
function_arg	[function_1] dom node ||| [arg_2] [function_1]	count=3
module	another manager generally the ||| contrib	count=1
module	given geometry field distance ||| gis	count=1
function	short ||| short	count=1
arg	path that is ||| path	count=1
arg	first character ||| ch input_iter	count=1
module	dictionaries in the context ||| template	count=1
class	the month without leading ||| date format	count=1
function_arg	[function_1] year ||| [function_1] [arg_2]	count=2
class	the ||| base database wrapper	count=1
function	and lookup from given ||| build lookup	count=1
module	is ||| checks	count=1
function	sorted list ||| app list	count=2
arg	value in ||| value	count=1
function_arg	[function_1] or none ||| [function_1] [arg_2]	count=6
class	requests for ||| settings	count=1
function	datetime object in ||| datetime from	count=2
module	description/name string for this ||| gis gdal	count=1
function	deserialize a ||| deserializer	count=2
class	handler ||| memory file upload handler	count=1
function	of ("app_label", "modelname") ||| operation	count=1
arg	form [arg_2] ||| [arg_1] [arg_2]	count=1
arg	value to ||| value	count=3
class	return ||| redirect view	count=1
module	geos ||| gis geos	count=2
arg	retrieve the distance parameters ||| dist_val lookup_type handle_spheroid	count=1
class	has choices defined ||| admin	count=1
module	cache ||| utils	count=1
arg	instance to the ||| instance fields exclude	count=1
function	adds the ||| add	count=1
function	[function_1] [function_2] ||| [function_1] full [function_2]	count=1
module	depends on ||| models	count=1
function_arg	[function_1] field field_name ||| [function_1] lookup_type [arg_2]	count=4
arg	absolute path ||| root path prefix	count=1
function	non-zero reference [function_2] ||| [function_2] [function_1]	count=2
module	srid of ||| gis db	count=2
function	imported and ||| lazy model operation	count=1
module	app ||| management	count=1
arg	specified app_label and a ||| app_label	count=1
function	[function_1] exception ||| [function_1] [function_2]	count=5
arg	a regex [arg_2] ||| [arg_2] [arg_1]	count=1
function	] ||| compile	count=1
class	dictionary of database ||| connection	count=1
arg	key_salt ||| key_salt value	count=1
arg	hook for specifying ||| request obj	count=1
class	for outputting ||| base form	count=1
module	files ||| cache backends	count=1
module	the description for ||| contrib admindocs	count=1
arg	[arg_1] <label>, if ||| [arg_1] [arg_2]	count=2
class	dirty ||| base database wrapper	count=1
module	api ||| backends	count=1
function	return an origin ||| get template	count=1
function	the week for ||| week	count=1
arg	username email and password ||| username email password	count=1
function	db_type(), providing ||| db parameters	count=1
function	has [function_2] ||| [function_1] [function_2]	count=5
function_arg	returns the [arg_2] ||| [function_1] max age [arg_2]	count=3
module	app ||| core	count=1
function	current ||| from current	count=1
class	set up ||| query set	count=1
module	ordering the ||| contrib	count=1
class	the dirty flag ||| database wrapper	count=1
class	variables not ||| user settings holder	count=1
class	by all other ||| base	count=1
function_arg	css class [arg_2] ||| [arg_2] [function_1]	count=1
class	inline ||| inline model	count=2
module	representation of the ||| contrib	count=2
module	modelform return ||| contrib	count=1
module	be used ||| models	count=1
function	level tags ||| level tags	count=2
class	the cache if ||| cache	count=4
function	in ||| in	count=1
module	the description ||| contrib	count=1
function_arg	object is ||| object obj	count=1
function	return an unsaved instance ||| save form	count=1
module	of digits and ||| models	count=1
function	helps non-django ||| html	count=1
module	from applying this ||| db	count=1
module	by the node ||| contrib gis geos	count=1
class	single [class] ||| multi [class]	count=3
function	user-provides languages files ||| locale	count=1
function	key that [function_2] ||| [function_2] [function_1]	count=1
class	case-insensitive check for ||| base	count=1
arg	from [arg] cache-control ||| [arg]	count=1
arg	text ||| text trim_url_limit	count=1
module	a list of date ||| models	count=1
arg	key_salt and a secret ||| key_salt value secret	count=1
function_arg	[function_1] [arg_2] ||| models sql update query [function_1] related update model [arg_2]	count=2
arg	to the middleware_class ||| middleware_class	count=1
function	the javascript ||| javascript	count=1
function	[function_1] wsgi handler ||| [function_2] [function_1]	count=1
function	implicitly ordering ||| ordering	count=1
class	the list of dates ||| list	count=1
arg	with a context returns ||| context	count=1
function_arg	[function_1] a function ||| [arg_2] [function_1]	count=1
function	call the ||| get response	count=1
function	projectstate object representing the ||| project	count=1
function_arg	m2ms to [arg_2] ||| [arg_2] [function_1]	count=1
function	dict ||| dict	count=1
module_class	[module_1] session ||| [module_1] [class_2]	count=16
function	uncaught exceptions those ||| uncaught	count=1
function	the maximum ||| max	count=1
function_arg	[function_1] patterns ||| [arg_2] [function_1]	count=3
arg	given a modelform return ||| request	count=1
function	wrapper ||| wrapper	count=1
module	in ||| utils	count=1
module	[module_1] with the ||| [module_1] [module_2]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] get [arg_2]	count=1
module	the css selector ||| contrib	count=2
arg	the specified app_label and ||| cls app_label	count=1
arg	supplied in encoded and ||| password encoded	count=1
arg	django model ||| model	count=1
function	be an ||| check field	count=1
arg	all [arg] ||| [arg]	count=3
function	merging together conflicted migrations ||| handle merge	count=1
class	modelform return ||| model	count=1
arg	given function [arg_2] ||| [arg_2] [arg_1]	count=4
class	field's width and ||| field	count=1
function	css ||| css	count=3
module	month without ||| utils	count=1
arg	the changes so they ||| changes	count=1
function	returns the name ||| name	count=2
function_arg	the migrations [arg_2] ||| [function_1] module [arg_2]	count=1
function	database ||| init	count=1
class	load the objects into ||| nested objects	count=1
function	header into a ||| header	count=1
function_arg	date [arg_2] ||| [arg_2] [function_1]	count=2
module	the urlconf ||| views generic	count=1
class	the given ||| operations	count=1
class	creates ||| sqlupdate compiler	count=1
module_class	date [class_2] ||| [module_1] date [class_2] check fix default	count=1
module	of all the coordinates ||| contrib gis	count=1
module	this geometry and the ||| contrib gis	count=6
module	returns the pointer ||| contrib gis gdal prototypes	count=1
module	list ||| sql	count=1
function	of intersection ||| intersection	count=1
function	ordering refers ||| ordering item	count=1
function	a cache key from ||| cache key	count=1
function	return true if ||| is	count=1
function	contain [function] ||| get make [function]	count=1
module	geometry ||| gis gdal	count=3
arg	each individual non-relational ||| obj	count=1
module	a set of operations ||| db	count=1
function	modelform ||| save	count=1
arg	by re-assigning individual items ||| start stop step valuelist	count=1
function	re-throws [function] ||| wrap [function]	count=1
function	[ directory file ] ||| compile messages	count=1
arg	changes so ||| changes	count=1
function	unpack ||| unpack	count=2
function	items this accepts a ||| items	count=1
function	the test db tables ||| destroy test db	count=1
class	add ||| schema editor	count=1
class	day of ||| date format	count=3
module_class	[module_1] list ||| [class_2] [module_1]	count=1
function	[function_1] ordering fields ||| [function_2] [function_1]	count=1
module	further processing ||| utils translation	count=1
function	it matches any pattern ||| matches	count=1
module	this instance and increments ||| db models	count=1
class	if the queryset is ||| query set	count=1
module	[module_1] to this ||| [module_1] [module_2]	count=2
arg	convert a key ||| key	count=1
module	_meta fields instance of ||| fields	count=1
function	vary [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] through ||| [arg_2] [arg_1]	count=1
arg	the candidates ||| names_with_path	count=1
function	inner meta class ||| meta	count=1
function	shortened ||| shorthand ip	count=1
arg	retrieves ||| is_64	count=1
function	the given ||| vary headers	count=1
class	app or project templates ||| template command	count=1
class	field returns ||| field	count=1
module	results from ||| db	count=1
module	modelform return an unsaved ||| admin	count=1
function	to copy ||| copy file	count=1
arg	to the value ||| value	count=2
class	an optional dictionary ||| connection	count=1
function	true ||| make object	count=1
class	module specified ||| user settings holder	count=1
function	cookie if ||| cookie	count=1
class	this spatial reference ||| spatial ref	count=4
module	the field's value ||| contrib gis gdal	count=1
module	file ] ||| commands	count=1
function	redirect to keyword ||| redirect	count=1
function	prepopulated_fields dictionary i e ||| prepopulated fields	count=2
module	and column names ||| db backends base	count=1
function_arg	[function_1] [arg_2] ||| [function_1] field_name [arg_2]	count=3
function	instance of the session ||| instance	count=1
arg	limit ||| limit	count=1
class	[class_1] for ||| [class_2] [class_1]	count=16
function_arg	of typical (app_label model_name) [function_1] [arg_2] ||| [function_1] tuples [arg_2]	count=2
class	return an unsaved instance ||| admin	count=1
function	static file in ||| in	count=1
function	[function_1] [function_2] context ||| templatetags do [function_2] [function_1]	count=3
arg	specified [arg] ||| [arg]	count=3
function	updates ||| patch vary headers	count=2
function	suitably sized batches for ||| del batches	count=1
class	results from applying this ||| query	count=1
arg	username email [arg_2] ||| [arg_2] [arg_1]	count=1
module	should ||| staticfiles management commands	count=2
arg	cursor with placeholders replaced ||| cursor sql	count=1
class	for the object's ||| base	count=1
arg	string target node ||| target	count=2
function	set instance ||| set	count=1
function	delete ||| delattr	count=1
function	[function] constraints we ||| [function]	count=1
function	all lazy i e ||| lazy	count=1
module	[module] field's ||| [module]	count=1
function	query ||| check query	count=2
class	a list ||| simple list filter	count=1
function	process ||| process	count=2
function	headers to the ||| response headers	count=1
function	returns [function_1] [function_2] name ||| [function_1] [function_2]	count=1
module	rows with ||| db backends mysql	count=1
arg	implemented a password_changed() ||| user password_validators	count=1
arg	internal helper function ||| forward reverse include_parents include_hidden	count=1
function	new [function_2] ||| [function_2] [function_1]	count=6
module	a range of different ||| models	count=1
arg	the changes so ||| changes	count=1
function	double value ||| double	count=1
function	total size in bytes ||| size	count=1
class	connection where ||| connection	count=1
class	is not bound ||| bound	count=1
function_arg	[function_1] to_email ||| [function_1] [arg_2]	count=2
function	command ||| load command	count=1
function	for changed code ||| code changed	count=2
arg	through the ||| cls	count=1
function	index with varchar operator ||| index	count=1
function	return limit_choices_to for ||| get limit choices to	count=1
function	db ||| db	count=3
function	a polygon from a ||| from	count=1
function	user ||| user	count=4
module	the client ||| contrib sessions	count=1
function	the country code ||| country code	count=1
arg	a model class or ||| model	count=1
function_arg	[function_1] a value ||| [function_1] [arg_2]	count=1
function_arg	the value [arg_2] ||| [function_1] [arg_2]	count=2
arg	request using ||| request level	count=2
arg	the newly created ||| table_name pk_name	count=1
function	current ||| get current	count=4
function	has been changed ||| changed	count=1
arg	return an ||| form	count=1
function	a sorted [function_2] ||| [function_2] [function_1]	count=3
arg	from url patterns ||| parents	count=1
module	a transaction and ||| db backends base	count=1
module	the urlconf can contain ||| views	count=1
function	404 error ||| 404	count=1
module	value for this ||| gis gdal	count=1
module	the boundaries of ||| gdal	count=1
class	date ||| date list view	count=2
function	[function_1] shortened ||| [function_2] [function_1]	count=1
function	and a ||| model operation	count=1
arg	regex can ||| regex max_length	count=1
function_arg	[function_1] [arg_2] header as an integer ||| [function_1] max age [arg_2]	count=1
arg	most recent ||| nodes at_end	count=1
class	names and ||| raw query	count=1
function	polygon from a bounding ||| from	count=1
function	[function_1] fields of ||| [function_2] [function_1]	count=2
function	[function_1] next ||| [function_2] [function_1]	count=1
module	true if this ||| gdal	count=5
function_arg	in name [arg_2] ||| [arg_2] [function_1]	count=1
module	the lookup ||| contrib gis	count=1
function	untranslated verbose name is ||| verbose name raw	count=1
function	[function] for ||| do get language [function]	count=1
arg	any messages ||| messages	count=1
function_arg	[function_1] log-in page ||| [function_1] [arg_2]	count=4
arg	name [arg_2] ||| [arg_2] [arg_1]	count=1
arg	field ||| obj field	count=1
class	[class] which ||| query [class]	count=1
module	the uniqueness keyword ||| contrib gis utils	count=1
function	key greater than the ||| key culling	count=1
arg	candidates for ||| names_with_path	count=1
function	interval ||| interval	count=2
module	silently if the oracle ||| backends oracle	count=1
function	custom prepopulated ||| get prepopulated	count=1
function	new ||| new	count=2
function	vary ||| vary	count=1
arg	true if the host ||| host	count=1
module_class	[module_1] [class_2] ||| [module_1] spatial [class_2]	count=2
function	html unordered [function] -- without ||| unordered [function]	count=1
function	deepcopy ||| deepcopy	count=1
module	sunday ||| utils	count=1
module	[module] page ||| [module]	count=2
class	[class] has ||| [class]	count=1
class	"modelname") tuples and when ||| apps	count=1
function	html ||| html	count=3
arg	naive datetimes in ||| value	count=1
arg	value in the ||| value timeout version	count=2
module_class	[module_1] site object ||| [module_1] sites [class_2]	count=1
function	a json string ||| to string	count=1
function	a length ||| length	count=1
function_arg	insert if [arg_2] ||| [arg_2] [function_1]	count=4
module	geometry from the ||| contrib gis geos	count=1
module	resets the dirty flag ||| db	count=1
arg	it with ||| request	count=1
class	the spatial column ||| spatial field	count=2
function	a datetime ||| datetimefield	count=1
function	user based on groups ||| groups for user	count=1
module	queryset is ||| db	count=1
class	day of the week ||| date	count=1
function	initial data ||| initial	count=1
function	all lazy i ||| check lazy	count=1
module	creating [module] contenttype if ||| [module]	count=1
function	given datetime field ||| datetime	count=1
function	return an html ||| html	count=1
arg	if update_pk ||| fields update_pk	count=1
function	po file for ||| write po file	count=2
function	404 error response ||| 404 response	count=3
module	the specified index the ||| contrib	count=1
module_class	forms [class_2] ||| [module_1] [class_2]	count=3
function	list_display ||| list display	count=1
module	[module_1] [module_2] ||| [module_1] gis [module_2]	count=5
module_class	[module_1] geographic column ||| [module_1] [class_2]	count=2
class	and resets the ||| wrapper	count=1
function	[function_1] a manytomanyfield ||| [function_2] [function_1]	count=1
arg	use in tests only ||| lookup_name	count=1
function	[function_1] a foreignkey ||| [function_2] [function_1]	count=1
module	migrations prior ||| db migrations	count=1
module	and resets ||| db backends	count=1
arg	each field on an ||| field	count=1
module	authenticated via the remoteuserbackend ||| contrib auth	count=1
arg	secret (which defaults to ||| secret	count=1
arg	return an unsaved instance ||| request	count=1
arg	the request ||| request	count=4
module	possible ||| conf	count=1
module	of an [module_2] ||| [module_1] [module_2]	count=2
function_arg	text wrapping [arg_2] ||| [function_1] [arg_2]	count=4
function	a double value ||| double	count=1
arg	model class or an ||| model	count=1
function	name for the ||| set name	count=1
class	email message ||| email message	count=2
function	[function_1] for update ||| [function_2] [function_1]	count=1
module_class	[module_1] checks ||| [class_2] [module_1]	count=1
class	the current session ||| session base	count=1
function	mirror of ||| mirror	count=1
class	value for the passed ||| value	count=1
function	the current ||| current	count=3
function	adds ||| vary headers	count=2
function	sql where clause to ||| sql	count=1
module	for ||| base	count=3
class	spatial lookup ||| base spatial	count=1
function	field name ||| col name	count=1
class	django model instance ||| model admin	count=2
function	creates a clone ||| clone	count=1
arg	request ||| request response	count=1
module	of form [module_2] ||| [module_1] [module_2]	count=2
class	of all the ||| base	count=2
class	a modelform return an ||| model	count=1
function	for introspected foreign keys ||| can introspect foreign keys	count=1
function_arg	class klass ||| class selector klass	count=1
function_arg	[function_1] field ||| [arg_2] [function_1]	count=3
arg	a file system path ||| path	count=1
module	the corresponding class ||| contrib	count=1
arg	[arg_1] response ||| [arg_1] [arg_2]	count=1
function	a number ||| model operation	count=1
module	the geometry and attaches ||| contrib	count=1
function	[function_1] the x ||| [function_2] [function_1]	count=1
module_class	of template engine ||| template engine handler	count=1
arg	on routines that should ||| cargs	count=1
function	[function_1] forms in ||| [function_2] [function_1]	count=2
function	a user ||| user	count=2
function	finder ||| get finder	count=1
arg	an entry in installed_apps ||| entry	count=1
module_class	[module_1] reference ||| [class_2] [module_1]	count=1
function	404 error response the ||| 404 response	count=1
module	a ||| contrib admin	count=2
module	the [module] ||| [module]	count=2
function	set a ||| set many	count=1
class	optional ||| connection	count=1
function	any non-schema-affecting options have ||| generate altered options	count=1
function	the mask ||| mask	count=1
function	single expression ||| expression	count=1
module	be overridden in the ||| contrib admin	count=1
class	the dirty ||| database	count=1
module	returns none ||| gis db backends	count=1
function	have been ||| operation	count=1
class	of email ||| email backend	count=2
module_class	[module_1] file ||| [class_2] [module_1]	count=4
function	mirror of a ||| mirror	count=1
function_arg	datetime date [arg_2] ||| [arg_2] [function_1]	count=2
arg	checking for routines that ||| result func cargs	count=1
module	and [module_2] ||| [module_1] [module_2]	count=4
function	items to paginate ||| paginate	count=1
module	to return the linear ||| contrib	count=1
function	[function_1] an int ||| [function_2] [function_1]	count=1
module	for customizing [module_2] ||| [module_2] [module_1]	count=4
arg	path if ||| path	count=1
module	order of the geometry ||| contrib	count=1
function	[function_1] related models ||| [function_1] [function_2]	count=3
module	true if the ||| contrib	count=4
module	returns a ||| gis geoip	count=1
function	values on [function_2] ||| [function_2] [function_1]	count=4
function	(structured ||| init	count=1
arg	more explanatory message ||| original_exc model fk	count=1
function	id [function_2] ||| [function_2] [function_1]	count=4
module	[module] thread-safe ||| core mail [module]	count=3
class	of the where clause ||| where	count=1
class	the cache ||| cache	count=9
class	the dirty flag ||| base database wrapper	count=1
module	feature from the ||| contrib gis gdal	count=1
class	genericforeignkey whose content ||| generic relation	count=1
function	columns in given table ||| columns	count=3
function	of dictionaries in ||| update	count=1
class	comparing ||| base	count=1
class	widget used to ||| choice widget	count=2
function	[function_1] closes and ||| [function_2] [function_1]	count=1
function	an email to ||| email	count=1
function	object ||| object	count=6
class	and saves ||| user manager	count=1
module	[ directory ||| core	count=1
module	the template api documentation ||| template backends	count=1
function_arg	[function_1] [arg_2] ||| [function_1] datadict data [arg_2]	count=3
function	language the ||| get language	count=1
arg	the given length ||| name length	count=2
class	dirty ||| database wrapper	count=1
function	data type for ||| db type	count=1
function	returns the contenttype ||| get	count=1
module	of tuples [ directory ||| core	count=1
arg	fill in the ||| select opts root_alias cur_depth	count=1
function	if any ||| generate	count=1
class	value ||| value	count=4
function	return a tuple ||| get units	count=1
function_arg	existing fields doesn't ||| fields obj	count=1
function	[function_1] date ||| [function_2] [function_1]	count=1
module	this is for ||| gis gdal	count=1
function	[function_1] field's ||| [function_2] [function_1]	count=1
arg	function that returns ||| func cargs offset	count=1
function	wrapper around ||| wrapper	count=1
function	temp ||| generate temp	count=1
arg	model [arg_2] ||| [arg_1] [arg_2]	count=1
function	the connection's time zone ||| time zone	count=1
arg	absolute path (or ||| path prefix	count=1
function	stack of dictionaries in ||| update	count=1
function_arg	[function_1] a response ||| [function_1] [arg_2]	count=2
function	sql string and ||| as sql	count=1
class	session data from the ||| session base	count=1
module	datetime ||| utils	count=2
function	("app_label", "modelname") tuples and ||| model	count=1
arg	templatedoesnotexist ||| exc	count=1
function	system and adds ||| add	count=1
function	[function_1] content for ||| [function_2] [function_1]	count=3
function	[function_1] engine ||| [function_2] [function_1]	count=2
arg	we're activated ||| file_size	count=1
arg	given length and ||| length	count=1
class	postgresql object identification integers ||| gisintrospection	count=1
function	in the given httpresponse ||| patch	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=454
module	management ||| management	count=1
arg	internal implementation - ||| verbosity	count=1
module	error ||| contrib gis geos prototypes	count=1
function	rolls back a ||| rollback	count=1
arg	the given source ||| source	count=1
module	and resets ||| backends base	count=1
module	the intersection of this ||| gis gdal	count=1
module	returns the ||| contrib gis	count=80
module_class	within the [class_2] ||| [module_1] [class_2]	count=1
function	("app_label", "modelname") tuples and ||| model operation	count=1
module	mapping models ||| db models	count=1
arg	save the returned instance ||| form instance fields exclude	count=1
module	added via the addgeometrycolumn ||| contrib	count=1
class	add ||| database schema editor	count=1
function	the ||| patch vary headers	count=4
arg	column for ||| column	count=1
class	zeros ||| format	count=1
module	can ||| views generic	count=2
function	the javascript i18n ||| null javascript	count=1
function_arg	[function_1] and :param ||| [function_1] [arg_2]	count=5
module	and return ||| backends	count=1
function	returns geojson representation ||| json	count=1
arg	essential steps are ||| create_field delete_field alter_field	count=1
module	are satisfied from ||| conf	count=1
module	the messages returning ||| contrib messages	count=1
class	and a migrationgraph and ||| migration	count=1
function	[function_1] [function_2] ||| [function_1] [function_2]	count=3035
arg	object has ||| object message	count=2
class	error which has ||| error	count=1
module_class	[module_1] error ||| [module_1] [class_2]	count=1
module	each of the ||| contrib	count=1
class	value [class] saving in ||| [class]	count=1
function_arg	[function_1] hidden ||| [function_1] fields [arg_2]	count=1
class	feed ||| syndication feed	count=3
module	the admin ||| contrib admin	count=3
function	[function_1] the ||| [function_2] [function_1]	count=4
module	version number whether the ||| contrib gis	count=1
arg	from cls lookups for ||| cls	count=1
function	permission to change ||| delete permission	count=1
function_arg	[function_1] [arg_2] ||| messages [function_1] [arg_2]	count=8
function	returns true ||| get	count=1
arg	and ensures ||| sentinel col_count	count=1
module	of the ||| contrib gis db backends	count=3
function	the static prefix ||| get static prefix	count=3
function	the html id ||| id	count=1
arg	look for ||| object_name	count=1
function	[function_1] limit_choices_to ||| [function_1] [function_2]	count=2
function	[function_1] related ||| [function_1] [function_2]	count=3
module	fields takes the ||| contrib gis db	count=1
arg	an entry ||| cls entry	count=1
class	class are satisfied ||| user	count=1
arg	changes dict and ||| changes	count=1
arg	of fields or ||| fields label	count=1
function	any cleaning on the ||| clean	count=1
module	datetime object for this ||| contrib gis gdal	count=1
function	number of errors ||| error count	count=3
arg	opens a ||| conn_params	count=1
class	list of ||| simple list filter	count=1
arg	a ||| request	count=1
module	list of tuples [ ||| management	count=1
function	create an [function_2] ||| [function_1] like [function_2]	count=4
module	session the ||| contrib sessions backends	count=1
function	a for [function_2] ||| [function_2] [function_1]	count=1
function	the raw ||| raw	count=1
function	the creation ||| creation	count=1
class	is ||| model admin	count=2
function	ordering refers ||| ordering	count=1
module	files in the ||| contrib staticfiles	count=5
function	a preprocessed copy of ||| cleanup	count=1
module	the admin form and ||| contrib admin	count=1
module	may take the following ||| contrib	count=1
class	given ||| hashed	count=1
function_arg	[function_1] function ||| [function_1] geom [arg_2]	count=1
module_class	query [class_2] ||| [module_1] [class_2]	count=3
function	returns the command ||| load command	count=1
function	as ||| as	count=2
function	the admin ||| get admin	count=1
function	[function_1] time value ||| [function_1] cast [function_2]	count=2
module	it [module_2] ||| [module_1] [module_2]	count=1
function	display [function] lists ||| get allow [function]	count=1
module_class	the [class_2] ||| [module_1] gis geoip geo [class_2]	count=1
function	a technical 404 ||| technical 404	count=2
module	confuse the admin ||| contrib admin	count=2
arg	cursor object that has ||| cursor	count=1
class	on the command ||| label command	count=1
module_class	returns a quoted [module_1] [class_2] ||| [module_1] [class_2] operations quote	count=5
class	form needs to ||| base form	count=1
class	every lazystream must have ||| lazy stream	count=1
class	the number of email ||| base email	count=1
function	the http [function] ||| get [function]	count=3
class	a compiled regular expression ||| regex descriptor	count=1
arg	[arg_1] from_email recipient_list), ||| [arg_1] fail_silently [arg_2]	count=1
arg	on the number ||| number	count=1
module	the original is ||| contrib gis	count=1
function	relative path [function_2] ||| [function_2] [function_1]	count=2
arg	value ||| field value	count=2
arg	func to be ||| func	count=1
module_class	[module_1] [class_2] parser ||| [module_1] files file [class_2] handler	count=1
module	joins [module] through any ||| [module]	count=1
class	table ||| database operations	count=1
function	given httpresponse object ||| patch	count=1
function	loads a custom ||| load	count=1
module	[ directory ||| commands	count=1
module	of 'year', 'month' ||| db	count=1
function	get the next ||| get next	count=2
module	standard ||| gis geos	count=3
module	returns a geojson ||| gis	count=1
arg	name dirs and skip ||| template_name template_dirs skip	count=1
function	models have ||| model operation	count=1
module_class	of this point ||| gdal point	count=1
module	project templates ||| management	count=1
function	process for ||| process	count=1
class	[class_1] directories ||| [class_2] [class_1]	count=1
module	can contain helpful ||| views generic	count=1
module_class	current [class_2] ||| [class_2] [module_1]	count=3
function	objects of [function_2] ||| [function_1] for [function_2]	count=2
module	the field is a ||| contrib	count=1
module	in bytes of the ||| core	count=1
class	file ||| clearable file	count=1
function	been imported ||| lazy model operation	count=1
module	it in the ||| contrib	count=1
function	migration files ||| migration files	count=2
function	a unique name ||| name	count=1
module	set of fields to ||| models sql	count=1
class	the module specified ||| user settings holder	count=1
function	"modelname") tuples and when ||| model	count=1
module	project templates are ||| core	count=1
function	adds its ||| add srs entry	count=1
function_arg	[function_1] necessary to ||| [arg_2] [function_1]	count=3
function_arg	fields [function_1] [arg_2] ||| [function_1] [arg_2]	count=9
function	uncaught exception ||| uncaught exception	count=2
function	[function] ogr c ||| [function]	count=1
module	with a ||| backends	count=1
module	of the name to ||| db models fields	count=1
arg	field from a model ||| model field	count=2
class	class are satisfied ||| user settings	count=1
function	the test db tables ||| clone test db	count=1
function	expression using the ||| expression	count=1
function	[function_1] with ||| [function_2] [function_1]	count=6
function	options have ||| options	count=1
function	model ||| alter unique together	count=1
module	returns the ||| contrib gis geos	count=9
function	the vary header of ||| vary on	count=1
function	explicitly sized strings ||| check sized string	count=1
arg	null placeholder needed ||| placeholder params	count=1
module	of values generate ||| models	count=1
module	of fields to exclude ||| db models	count=1
module_class	[module_1] session ||| [module_1] backends [class_2]	count=1
module	[module_1] [module_2] ||| [module_2] gis [module_1]	count=34
function	key constraint checking ||| constraint checking	count=4
class	are satisfied from ||| user settings	count=1
class	message for this command ||| base command	count=1
module	all the coordinates ||| contrib gis	count=1
arg	loads ||| template_name	count=2
arg	with the requisite ||| max_digits decimal_places	count=1
function	the surface of ||| on surface	count=1
function	current language [function_2] ||| [function_1] [function_2]	count=1
module	the given parameter ||| contrib	count=1
function	prefix to ||| bump prefix	count=1
module	with the given model ||| contrib gis db	count=1
arg	[arg_1] to sender ||| [arg_2] [arg_1]	count=1
function	its ordinal as a ||| ordinal	count=1
module	models have been ||| apps	count=1
function_arg	returns the [arg_2] ||| [arg_2] [function_1]	count=5
function	not in ||| init	count=1
module	of class import path ||| db	count=1
function	forward [function] ||| [function]	count=3
class	from either queryset instance ||| query set	count=1
module_class	yields the [module_1] [class_2] should be rendered ||| [module_1] [class_2] iter	count=2
function	[function_1] [function_2] ||| [function_2] many to one [function_1]	count=6
module	points in this ||| geos	count=1
module	of the week numeric ||| utils	count=1
function	the current ||| to current	count=1
function	[function_1] date list ||| [function_1] [function_2]	count=1
module	the app or ||| management	count=1
function_arg	[function_1] value to ||| [function_1] [arg_2]	count=1
class	are satisfied from ||| settings holder	count=1
function	cookie if the ||| cookie	count=1
arg	exception should ||| request exception	count=1
function	a number of ("app_label", ||| operation	count=1
module	oracle error ||| backends oracle	count=1
class	corresponding models have been ||| apps	count=1
class	the command ||| app command	count=1
function	string ||| html	count=1
class	session data from ||| session base	count=1
arg	objs in ||| objs field	count=1
class	i e '1' ||| date format	count=1
class	geographic column ||| geo	count=1
function	default value ||| default	count=2
function	coordinate [function_2] ||| [function_2] [function_1]	count=4
function	to ||| add	count=1
module	the points ||| contrib	count=1
function_arg	[function_1] encoded ||| [arg_2] [function_1]	count=2
module	and return the ||| contrib gis utils	count=1
function	hash of [function_2] ||| [function_2] [function_1]	count=4
function	been imported and ||| lazy model	count=1
function	adds ||| vary	count=1
module	returns the ||| contrib gis geos prototypes	count=1
class	the ring at the ||| polygon	count=1
class	project templates ||| template command	count=1
function	to ||| all	count=1
function	week for which ||| week	count=1
module	the user ||| contrib auth	count=3
function	list of sql statements ||| sql	count=1
function	and a number ||| lazy model operation	count=1
function	context if either self ||| get context	count=1
function	as kmz ||| render to kmz	count=1
module	opposed to all models ||| db models	count=1
module	converts an integer to ||| contrib humanize templatetags	count=1
class	get ||| single object mixin	count=1
class	queryset is ||| query	count=1
function	adds or ||| vary	count=1
function	of tuples [ directory ||| messages	count=1
function	clones this ||| clone	count=1
class	cookie returning ||| cookie	count=1
arg	sets the time zone ||| timezone	count=1
module_class	this layer ||| gis gdal layer	count=2
function	returns an absolute url ||| url	count=1
function	of the clear checkbox ||| clear checkbox	count=1
module	flag ||| db backends base	count=2
function	localizable type ||| localize	count=1
module	mapping models to ||| db models	count=1
module	default translation ||| translation	count=1
class	of the queryset ||| serializer	count=1
function	generate formsets for ||| formsets	count=1
arg	message to each recipient ||| fail_silently	count=1
module_class	sends the [class_2] ||| [module_1] [class_2]	count=4
function	spatial reference for ||| srs	count=1
class	transaction and resets ||| base	count=1
module	and column names or ||| db backends base	count=1
function_arg	[function_1] a form ||| [function_1] [arg_2]	count=1
class	get ||| day mixin	count=1
function	[function_1] keys ||| [function_2] [function_1]	count=3
arg	in raw [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] filter [arg_2]	count=7
module	the equivalent attributes ||| contrib contenttypes	count=1
function	last executed by the ||| last executed	count=1
arg	time between d ||| d	count=1
arg	date object so that ||| date	count=1
module	and visible to the ||| contrib	count=1
module	specified index the ||| contrib	count=1
module	this ||| gis db backends base	count=1
class	this handler should ||| handler	count=1
module	and views ||| backends	count=1
function	type for ||| for this type	count=1
module	are ||| core	count=1
function	definitions (structured like ||| init	count=1
function	custom url converter ||| url converter	count=1
module	or fields to use ||| views generic	count=2
function	lists and ||| lists	count=1
module	the srid of the ||| contrib gis db backends	count=2
module	the app or project ||| core	count=1
function	for the prepopulated fields ||| prepopulated fields	count=1
function	same format string ||| format html	count=1
arg	database and applies the ||| collect_sql	count=1
module	[module] points ||| [module]	count=3
function	content ||| content	count=3
function	a list ||| compile messages	count=1
function	edited object represented ||| get edited object	count=2
module	assign slice [module] ||| [module]	count=2
function	and adds its ||| add	count=1
function	its vary [function_2] ||| [function_2] [function_1]	count=1
class	the app or ||| command	count=1
arg	routines that ||| func cargs	count=2
function	the given httpresponse ||| patch vary	count=1
module_class	print [class_2] ||| [module_1] [class_2]	count=8
arg	key_salt and a ||| key_salt	count=1
class	connection ||| base database wrapper	count=2
function	number of children it ||| len	count=1
function	serialized as ||| to string	count=1
module	system and ||| files	count=1
arg	the given contents in ||| contents	count=1
function	[function_1] time ||| [function_1] [function_2]	count=2
class	current session data ||| session base	count=1
module	passed into ||| db	count=1
arg	if a model ||| model	count=1
function	relative path ||| construct relative path	count=2
function	month [function] in strptime ||| get month [function]	count=1
function	[function_1] name is ||| [function_2] [function_1]	count=6
function_arg	[function_1] regex with ||| [function_1] [arg_2]	count=1
function	symmetric difference ||| sym difference	count=2
class	that a ||| wrapper	count=1
module	easy lookups by key ||| utils	count=1
module	the set of ||| models sql	count=1
arg	related instance through ||| instance value	count=2
function	function to create ||| create generic	count=1
function	a test database prompting ||| create test	count=1
function	rolling [function] ||| savepoint [function]	count=1
class	helpful extra ||| view	count=1
module	only the ||| contrib	count=1
function	[function_1] namespaces ||| [function_2] [function_1]	count=2
function	the number of ||| count	count=2
function_arg	[function_1] in ignore_patterns) ||| [function_1] path [arg_2]	count=2
arg	the changes ||| changes	count=1
module	[module_1] but with ||| [module_1] sessions [module_2]	count=1
module	of different return ||| db models	count=1
module	the urlconf can contain ||| generic	count=1
module	srid of ||| gis	count=2
module	mapping models to a ||| db models sql	count=1
module	[module_1] [module_2] ||| [module_1] sessions [module_2]	count=7
arg	converts the filename ||| filename	count=1
module	some backends ||| db backends	count=3
function	or if ||| if unusable or	count=1
arg	type [arg] ||| [arg]	count=2
class	return ||| exception reporter	count=2
function	connection to the ||| connection	count=1
function	number of extra ||| num	count=1
function_arg	[function_1] it's ||| [function_1] value [arg_2]	count=1
function	for the given kwargs ||| factory	count=1
module	pixel values for this ||| contrib gis gdal	count=1
function	content type ||| content type	count=2
module	manager generally the ||| contrib contenttypes	count=1
function	[function] change_map (which ||| [function]	count=3
arg	of key/value pairs ||| data timeout	count=1
function	a lookup ||| lookup	count=1
function	distance between ||| distance	count=1
function	not return 0 ||| zero	count=1
arg	url and returns ||| url	count=1
class	the cache ||| update cache	count=1
class	the module specified in ||| user	count=1
module	essentially the opposite of ||| models	count=1
function	limit_choices_to ||| limit choices to	count=2
class	to ||| admin site	count=1
module	take the following ||| contrib gis	count=1
function	type returned ||| type	count=1
class	results ||| set	count=1
arg	decide which ||| key_func	count=1
function	to add a ||| add	count=1
module	that ||| utils	count=1
function	quoted ||| quote	count=1
class	list of dates and ||| list view	count=1
function	and a ||| lazy model	count=1
class	given srid if ||| geo query set	count=1
class	the ||| http request	count=1
function	file object ||| file	count=1
module	true there will be ||| db models	count=1
class	geometry that ||| ogrgeometry	count=1
function_arg	split an [arg_2] ||| [function_1] [arg_2]	count=3
class	queryset ||| multiple object	count=1
function	previous valid [function_2] ||| [function_1] [function_2]	count=1
module_class	[module_1] spatial ||| [module_1] gdal [class_2]	count=2
module	the ||| views generic	count=2
function	m2ms to ||| many to	count=1
function	native ||| npath	count=1
module	of layers in the ||| contrib gis	count=1
module_class	the this layer ||| gis gdal layer	count=1
module	and ||| backends oracle	count=1
function	returns the prefix to ||| get prefix	count=1
class	from ||| user settings holder	count=2
arg	when dimension changed ||| new_field new_type	count=1
class	geometry objects ||| geosgeometry	count=1
arg	for this block ||| parser token	count=2
module	sql ||| models sql	count=1
arg	date ||| date	count=8
module	has ||| contrib admin	count=1
function	the login page ||| login	count=1
function	by this backend ||| get backend	count=1
arg	of inline formsets ||| formsets change	count=1
function	[function_1] [function_2] extra_select columns) ||| db models sql query [function_2] [function_1]	count=3
module	dirty ||| db backends	count=1
function	given [function_2] ||| [function_1] [function_2] feat_id	count=1
function	persist a user id ||| login	count=1
function_arg	caching headers [arg_2] ||| [function_1] [arg_2]	count=2
module	a tuple with elements ||| db backends	count=1
module_class	all [class_2] ||| [module_1] base [class_2]	count=1
arg	given [arg_2] ||| [arg_1] [arg_2]	count=1
function	404 [function_2] ||| [function_2] [function_1]	count=2
class	this form has a ||| form	count=1
module	variables not in ||| conf	count=1
module	lookups ||| utils translation	count=2
class	configuration variables not ||| holder	count=1
module	the fields passed ||| models	count=1
module	properly shortened and ||| db backends oracle	count=1
function	thread ||| validate thread	count=1
function	to return [function_2] ||| [function_1] [function_2]	count=9
class	queryset ||| set	count=4
function	or updates the po ||| write po	count=1
module	srid of the field ||| contrib gis	count=2
arg	add delta ||| delta version	count=1
module	integer or [module] ||| [module]	count=3
class	migration instance false and ||| migration executor	count=1
arg	contenttype into ||| using ct	count=1
function	escape a ||| escape	count=1
function	tuples [ directory ||| messages	count=1
class	transaction ||| base database wrapper	count=1
function	field in ||| field	count=2
module	described by the ||| contrib admin	count=1
function	the language [function] ||| do get language [function]	count=1
function	templates ||| template	count=2
function	postgis geometry and/or ||| postgis	count=1
function	[function_1] create ||| [function_2] [function_1]	count=6
function	removes each of ||| remove	count=1
function	[function_1] limit_choices_to for ||| [function_2] [function_1]	count=2
function	sequences ||| sequence	count=1
module	determine the ||| contrib	count=2
function	lists from settings middleware ||| middleware	count=1
class	this class ||| user	count=1
class	an unsaved instance ||| admin	count=1
function	in the given httpresponse ||| patch vary headers	count=1
class	module ||| holder	count=1
function	insert if ||| insert	count=1
function_arg	[function_1] of fields ||| [function_1] spec obj model [arg_2]	count=3
class	the template and context ||| simple template	count=1
module	on the ||| contrib gis db backends	count=1
function	first cache [function_2] ||| [function_2] [function_1]	count=4
arg	string depending on ||| compiler sql	count=1
module	range of different ||| models	count=1
function	a numpy array ||| array	count=1
module	_meta fields ||| models fields	count=1
arg	user_obj from [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function] version string ||| spatialite version [function]	count=1
class	deserialization error ||| deserialization error	count=1
class	the ||| data	count=1
arg	error checking on routines ||| cargs	count=1
function	to the media file ||| file	count=1
module	empty the [module] cache ||| [module]	count=1
arg	returns a django forms ||| form_class choices_form_class	count=1
class	the dirty ||| base database wrapper	count=1
arg	from sender ||| sender	count=1
function	[function_1] name to ||| [function_2] [function_1]	count=1
function	will select [function_2] ||| [function_2] [function_1]	count=2
module	geos geometry object ||| gis geos	count=1
class	a modified connection ||| database	count=1
function_arg	namespaces from [arg_2] ||| [arg_2] [function_1]	count=1
arg	name dirs [arg_2] ||| [arg_1] [arg_2]	count=1
class	passed into this ||| set	count=1
arg	page ||| request	count=1
class	on [class] and ||| [class]	count=1
arg	the start date ||| date	count=4
module	the following inputs ||| contrib	count=1
class	decimal ||| decimal	count=2
function	tuples ||| model	count=1
class	i e '0' ||| date	count=2
module	return the linear ||| contrib	count=1
module	a list of tuples ||| management commands	count=1
class	reset for ||| reset token	count=1
function	[function_1] [function_2] (but not extra_select columns) ||| [function_2] [function_1]	count=6
arg	[arg_1] compatible with ||| [arg_1] target_opts [arg_2]	count=1
class	value in the cache ||| base cache	count=1
arg	the http request's ||| environ	count=1
class	imported and ||| apps	count=1
function	test database prompting ||| create test db	count=1
function	z ||| z	count=4
function	a list ||| compile	count=1
function_arg	[function_1] in instance ||| [arg_2] [function_1]	count=1
function	to fetch ||| fetch	count=1
function	a slice ||| slice	count=1
module	and encoded as ||| backends	count=1
module	construct and return the ||| contrib gis utils	count=1
class	the ||| base database	count=1
function	all deleted models managed ||| generate deleted models	count=1
module	from memory [module] ||| [module] gdal	count=1
function	query last executed by ||| last executed query	count=1
function	set [function_2] ||| [function_1] [function_2]	count=9
function	and a number of ||| lazy	count=1
function	[function_1] class to ||| [function_1] [function_2]	count=6
function	[function_1] process ||| [function_2] [function_1]	count=1
arg	modelform return ||| request	count=1
function	the m2m table ||| get m2m reverse	count=1
function	the sql version of ||| as sql	count=1
function	warn if url ||| url	count=1
class	datetimes ||| query set	count=1
function	returns the http ||| get	count=1
function	on a single ||| single	count=1
function_arg	namespaces [arg_2] ||| [arg_2] [function_1]	count=1
module	migrations prior to ||| db migrations	count=1
module	and returns ||| backends base	count=1
class	class ||| settings holder	count=2
arg	given user ||| user	count=1
function	field ||| field	count=17
arg	system path to a ||| path	count=1
class	remove ||| base database schema editor	count=1
function	engine for a given ||| engine	count=1
function	removes a ||| remove	count=2
module	not confuse the ||| contrib	count=1
module	should be ||| staticfiles	count=1
function	the raw input ||| raw input	count=1
function	messages ||| prepare messages	count=1
class	names ||| raw query	count=2
class	item of fieldset[1]['fields'] for ||| base	count=1
module	i e '0' to ||| utils	count=1
function	get the column name ||| column	count=1
module	add ||| models sql	count=1
class	value ||| value dict	count=1
class	app or ||| template command	count=1
class	is true if ||| admin	count=1
function	combine a list of ||| combine	count=1
class	class are satisfied from ||| user settings	count=1
class	handler should ||| file upload handler	count=1
function_arg	checks [arg_2] ||| [arg_2] [function_1]	count=1
class	query ||| query	count=8
class	dictionary ||| handler	count=1
arg	given the name ||| name	count=1
class	is an ||| connection	count=1
function	return an origin ||| get template sources	count=1
module	and may take the ||| contrib gis	count=1
function	[function] ogr ||| [function]	count=1
arg	handler ||| handler	count=1
function	this method will ||| do	count=1
module_class	[module_1] session ||| [module_1] sessions backends [class_2]	count=2
function	[function_1] url ||| [function_1] [function_2]	count=3
function_arg	search and [arg_2] ||| [function_1] results request queryset [arg_2]	count=1
function	all models ||| models	count=1
arg	insert a contenttype into ||| using ct	count=1
module	based on whether the ||| contrib	count=1
module	can be ||| db models	count=1
function	updates ||| patch vary	count=1
module	to user-provides languages files ||| translation	count=1
class	create ||| query set	count=1
module	("app_label", ||| apps	count=1
module	of the ||| models fields	count=1
arg	if ||| request	count=4
module_class	this geometry ||| geos geosgeometry	count=2
class	get ||| detail view	count=1
module	the attributes ||| contrib	count=1
module	backends require special syntax ||| backends	count=1
class	a deserialization ||| deserialization	count=1
module	this ||| views generic	count=3
function	extent an envelope ||| extent	count=1
class	instance [class_2] ||| [class_2] form [class_1]	count=1
function	to return a list ||| get	count=1
arg	list of inline formsets ||| formsets change	count=1
module	until [module] specified ||| [module]	count=1
function	to an int ||| to int	count=2
arg	message ||| message	count=2
module	tries ||| models sql	count=1
function	saves and [function_2] ||| [function_2] [function_1]	count=2
module	return the uniqueness keyword ||| contrib gis utils	count=1
arg	receiver to sender ||| receiver sender weak	count=1
module	list of ||| management	count=1
function	minimum pixel value ||| min	count=1
function	salt and ||| salt	count=1
module	an ||| db	count=3
function	meta class for ||| meta	count=1
arg	a queryset or any ||| queryset	count=1
class	field with ||| field	count=1
function	translate a [function_2] ||| [function_2] [function_1]	count=8
function	of the next interval ||| next day	count=1
function	count ||| len	count=1
class	open cache ||| based cache	count=1
module	the given data source ||| contrib gis utils	count=1
class	this command ||| base command	count=2
class	the cache at once ||| base cache	count=1
class	opposite ||| set	count=1
class	satisfied from the module ||| user settings	count=1
class	[class_1] [class_2] ||| [class_2] spatial [class_1]	count=1
function	a list of ||| compile messages	count=1
class	sense of the root ||| node	count=1
arg	receiver from [arg_2] ||| [arg_1] [arg_2]	count=2
module	returns true ||| contrib gis db	count=1
function	permission to add ||| add permission	count=2
arg	the exception ||| request exception	count=1
arg	with an x-header ||| view_func view_args view_kwargs	count=1
class	the ||| user settings holder	count=2
class	[class] any fieldset ||| [class]	count=3
module	of ||| db backends oracle	count=2
function	migration [function_2] ||| [function_2] [function_1]	count=1
class	for ||| measure base	count=1
function	default [function_2] ||| [function_2] [function_1]	count=2
arg	name as ||| name	count=1
function	'second', returns [function_2] ||| [function_2] [function_1]	count=6
function	chars ||| chars	count=1
function	a ||| save form	count=2
function	been imported and registered ||| lazy model operation	count=1
function	creates a test ||| test	count=1
arg	adds ||| response	count=1
module	the spatial_ref_sys or equivalent ||| contrib	count=1
arg	number ||| num truncate	count=1
function	block until the ||| wait until	count=1
function	will be interpolated ||| readable	count=1
module	by converting [module] ||| [module] gis db backends	count=3
function	and available for ||| available name	count=1
arg	cls using values from ||| cls using	count=1
module	all the corresponding models ||| apps	count=1
class	transaction and resets the ||| wrapper	count=1
class	this [class] (e g ||| [class]	count=1
class	stack of dictionaries ||| context	count=1
arg	databases ||| databases	count=1
class	inline ||| inline	count=2
arg	a bunch of keys ||| keys	count=1
arg	given index ||| index	count=4
class	has choices ||| admin	count=1
module	the envelope as a ||| contrib	count=1
arg	and a secret (which ||| value secret	count=1
module	memory [module] source file ||| [module] gdal	count=1
class	and resets the dirty ||| base database wrapper	count=1
arg	the given instance finds ||| instance	count=1
function	an appconfig ||| handle app config	count=1
class	form is not bound ||| bound	count=1
arg	change ||| request form change	count=1
module	that the returned ||| contrib	count=1
module	the given ip ||| contrib gis geoip2	count=2
function	point geometry ||| point	count=1
function_arg	in the [arg_2] ||| [arg_2] [function_1]	count=5
function_arg	all related [arg_2] ||| [function_1] models tuples [arg_2]	count=1
module	creates a ctypes ||| gis gdal prototypes	count=1
class	from the module ||| user	count=1
function	a manytomanyfield related ||| m2m field	count=1
function	("app_label", "modelname") tuples ||| operation	count=1
function	return a signed cookie ||| get signed cookie	count=1
function	checkbox ||| checkbox	count=1
module	the uniqueness keyword ||| contrib	count=1
module	memory so that ||| admin	count=1
class	recursively yield this expression ||| expression	count=1
function	loads templates from ||| load template	count=1
module	yields blocks of rows ||| db models	count=1
class	site ||| site manager	count=1
class	or ||| template command	count=2
function	given ||| vary headers	count=2
function	a single ||| single	count=1
module	of different return values ||| db models fields	count=1
arg	username passed as remote_user ||| remote_user	count=1
arg	func ||| func	count=1
function_arg	[function_1] [arg_2] ||| [function_1] connection_alias [arg_2]	count=4
module_class	[module_1] order ||| [module_1] [class_2]	count=3
function	name for ||| name	count=3
arg	all files in ||| ignore_patterns	count=1
module	in this ||| gdal	count=4
arg	[arg_1] using ||| [arg_2] [arg_1]	count=4
function	to change the ||| change	count=1
class	true if ||| set	count=1
function	[function_1] dated ||| [function_1] [function_2]	count=3
class	the ring at ||| polygon	count=2
class	form adding and changing ||| form	count=1
class	secure nonce ||| base password hasher	count=2
class	[class_1] reset ||| [class_1] [class_2]	count=4
function	per save ||| save	count=1
class	labels for the choices ||| model choice field	count=1
function	url namespaces used in ||| check url namespaces	count=1
function	number of ||| len	count=8
arg	given ||| request	count=1
function_arg	checks each [arg_2] ||| [arg_2] [function_1]	count=2
module	pixels of the ||| contrib gis gdal	count=1
module	the headers and ||| contrib	count=1
function	an unsaved instance ||| save	count=1
class	list of dates ||| base date list	count=1
class	permissions ||| permissions mixin	count=1
class	path basically this is ||| based	count=1
function_arg	[function_1] the genericipaddressfield ||| [function_1] protocol [arg_2]	count=1
function	the test settings ||| prepare test settings	count=2
function	[function_1] the reverse ||| [function_2] many to one [function_1]	count=2
arg	a stream or a ||| stream_or_string	count=1
module	[module] country code ||| [module] gis	count=3
module	templates are ||| core	count=1
class	confirm support ||| database features	count=1
arg	form ||| form	count=4
function	closes ||| close if	count=1
function	which updates ||| update	count=1
module	returns none because geometry ||| gis	count=1
class	of this geometry ||| linear geometry	count=1
module	of the given ||| db models	count=1
function	a [function] ||| create [function]	count=1
arg	number of ||| num truncate html	count=1
function	extension of db_type(), providing ||| parameters	count=1
function	imported and registered ||| lazy model	count=1
function	key constraint [function_2] ||| [function_2] [function_1]	count=2
function	an sql expression that ||| sql	count=1
class	spatial fields takes ||| spatial	count=1
function	directory file ] ||| compile messages	count=1
function	of the next interval ||| next week	count=1
arg	one and a schema_editor ||| schema_editor	count=1
function	[function_1] null ||| [function_1] [function_2]	count=12
class	sunday to ||| date format	count=1
class	dictionaries ||| context	count=1
function	session key while retaining ||| cycle key	count=1
class	this ||| query set	count=2
arg	update_pk ||| manager using fields update_pk	count=1
class	interoperability ||| data	count=1
function	like ||| init	count=1
module	with the ||| contrib gis db	count=2
class	configuration ||| user	count=1
arg	response to indicate ||| response	count=1
function	expand ||| expand	count=1
class	of database definitions (structured ||| connection	count=1
function	name for the ||| suggest name	count=1
module	m rows of values ||| db models sql	count=1
function	is true if ||| form	count=1
arg	[arg_1] [arg_2] ||| [arg_1] lookup [arg_2]	count=1
module	guaranteed ||| sessions	count=1
function	an index with ||| index sql	count=1
function	check if ||| check	count=1
module	returns the ||| utils	count=2
function	many-to-one [function_2] ||| [function_2] [function_1]	count=1
class	returns the ||| data	count=1
module	[module_1] which can ||| [module_2] [module_1]	count=1
function_arg	field [arg_2] ||| [function_1] model_name [arg_2]	count=4
function	index sql statements ||| indexes sql	count=1
function	and adds its ||| add srs entry	count=1
module	up into [module_2] ||| [module_1] [module_2]	count=8
module_class	[module_1] [class_2] ||| [module_1] date [class_2] check fix default	count=1
function_arg	executed [arg_2] ||| [arg_2] [function_1]	count=1
function	for configuration ||| init	count=1
arg	names ||| names	count=1
function	templates from ||| template	count=1
function	[function_1] history ||| [function_1] [function_2]	count=3
module	if ||| contrib admin	count=2
class	resets the dirty ||| base database wrapper	count=1
function	will set [function_2] ||| [function_2] [function_1]	count=1
module	when requested the next ||| contrib gis	count=1
module	urlconf can contain ||| views generic	count=1
arg	loaded in the instance ||| instance name	count=1
module	is this ||| gis db backends	count=1
module	urlconf can contain ||| generic	count=1
module	[module_1] geoip ||| [module_1] gis [module_2]	count=2
module	user-provides ||| utils	count=1
function_arg	[function_1] node recursively ||| [arg_2] [function_1]	count=3
module	instance guaranteed ||| sessions	count=1
function	unget [function_2] ||| [function_1] [function_2]	count=4
module_class	yields the [module_1] [class_2] be rendered ||| [module_1] [class_2] iter	count=2
function	translatable [function] locale directory ||| process [function]	count=1
function	this backend ||| backend	count=1
arg	formset for the given ||| formset extra can_order	count=1
function	[function_1] fields ||| [function_2] [function_1]	count=13
function_arg	test redirecting [arg_2] ||| [arg_2] [function_1]	count=3
module	[module_1] with the ||| [module_2] [module_1]	count=1
arg	model changing its unique_together ||| model	count=1
arg	specified app_label ||| app_label	count=1
function_arg	to local [arg_2] ||| [arg_2] [function_1]	count=1
module	gdal ||| gdal	count=1
arg	field on a ||| field	count=1
function	the maximum ||| max name	count=1
function	value for the css ||| css value	count=1
module	of the name ||| models	count=1
arg	or project templates ||| template	count=1
function	content [function_2] ||| [function_2] [function_1]	count=1
module	depends on results ||| db models	count=1
function_arg	ogrinspect that [arg_2] ||| [function_1] [arg_2]	count=2
arg	filename [arg_2] ||| [arg_1] [arg_2]	count=5
function	[function_1] y ||| [function_2] [function_1]	count=2
class	list ||| list	count=10
function	fetch the ||| fetch	count=1
function	coordinate [function_2] ||| [function_1] [function_2]	count=4
function	to fail ||| fail statements	count=1
function	httpresponse object ||| patch vary headers	count=1
module	backends can ||| backends base	count=3
class	the date ||| date list view	count=1
function	corresponding models ||| lazy model	count=1
function	adds its ||| add srs	count=1
function_arg	model with [arg_2] ||| [arg_2] [function_1]	count=1
function	stddev ||| stddev	count=1
function	the first object of ||| first	count=1
function	stack ||| update	count=1
function	that return geometries ||| check geom	count=1
class	a template rendered with ||| template response	count=1
function	adds its information ||| add srs entry	count=1
arg	database connection the ||| connection	count=1
class	transaction ||| database wrapper	count=1
function	the [function] of ||| postgis proj [function]	count=1
function	a connection ||| new connection	count=1
function	a 1-based [function] ||| [function]	count=3
function_arg	[function_1] is found ||| [function_1] [arg_2]	count=5
module	c geos geometry object ||| geos prototypes	count=1
arg	other ogrgeomtype ||| other	count=1
module	[module_1] the ||| [module_2] [module_1] spatialite spatia lite operations	count=1
function	for an app ||| app	count=1
module	return the ||| contrib gis utils	count=1
function	insert ||| insert	count=2
arg	and ensures the cursor ||| cursor sentinel col_count	count=1
function	choices ||| action choices	count=1
function	key that ||| key	count=1
function	the query [function_2] ||| [function_2] [function_1]	count=6
function	number ||| number	count=1
module	the next time ||| contrib gis gdal	count=1
module	to the stack ||| template	count=1
function	the file with ||| file	count=1
function	full list of ||| list	count=1
function	the form [function_2] ||| [function_2] [function_1]	count=8
arg	a key into ||| key	count=1
function	[function] false if ||| expire at browser [function]	count=1
function	url namespaces used in ||| url namespaces	count=1
function	"auth user"), [function] name ||| [function] swappable settings	count=1
function	type name as ||| type	count=1
class	given ip address ||| ip	count=2
module	a ||| translation	count=1
module	coordinate ||| gis	count=1
module	true ||| db models	count=2
arg	localizable [arg_2] ||| [arg_2] [arg_1]	count=2
arg	instance to ||| form instance fields	count=1
function	sql version ||| as sql	count=1
function	the creation counter value ||| creation counter	count=1
function	a locale ||| to locale	count=1
function	if field [function_2] ||| [function_2] [function_1]	count=4
module	stddev and related ||| backends	count=1
function	[function_1] in ||| [function_2] [function_1]	count=17
module	the user is ||| contrib	count=1
arg	instance suitable for passing ||| instance	count=1
function	reverse ||| reverse	count=3
class	handler should ||| memory file upload handler	count=1
function	is the type ||| field type	count=1
function	"modelname") tuples ||| lazy model	count=1
function	specified by http rfc7231 ||| http	count=1
module	which lists [module] ||| [module]	count=2
function	[function_1] include the ||| [function_1] [function_2]	count=1
function	string and then ||| html join	count=1
function	e '0' to '365' ||| z	count=1
class	for the supplied ||| base	count=1
class	geographic ||| geo query set	count=2
function	a georss point with ||| georss point	count=1
module	not end with ||| db models	count=1
arg	object has been successfully ||| object message	count=2
function	and available for new ||| available name	count=1
arg	run the query ||| result_type chunked_fetch	count=1
function	if url [function_2] ||| [function_2] [function_1]	count=3
arg	routines that should ||| result func cargs	count=1
class	want [class] ||| [class]	count=1
function	[function] each ||| [function]	count=3
function	of app [function_2] ||| [function_2] [function_1]	count=1
module	this accessor retrieves the ||| gis db	count=1
function	[function_1] models that ||| [function_2] [function_1]	count=4
module	to user-provides languages ||| utils translation	count=1
arg	instance through the ||| instance value	count=2
arg	changes dict and writes ||| changes	count=1
arg	string depending on the ||| compiler sql	count=1
class	configuration ||| settings holder	count=2
function	dated ||| dated	count=1
function	time zone to aware ||| timezone	count=1
function	a signed ||| signed	count=1
module	of this ||| gis db models	count=1
function	was something ||| was	count=1
function	previous valid week ||| previous week	count=1
module	[module_1] by default ||| [module_1] [module_2]	count=2
function	decorator ||| html safe	count=1
function	a name for ||| name	count=1
function	return explicitly sized strings ||| check sized string	count=1
module	the session's content ||| contrib	count=1
module	without opening [module] ||| [module]	count=1
function	an sql expression ||| sql	count=1
function	dangling ||| temporary	count=1
arg	or none for no ||| queryset	count=1
function	version of geos used ||| geos version	count=1
function	all lazy ||| check lazy	count=1
class	resets ||| wrapper	count=1
arg	true if ||| request form	count=1
class	[class_1] spatial fields ||| [class_2] [class_1]	count=1
class	database ||| query	count=1
function	we [function] display ||| [function] fast	count=1
arg	the given source sequence ||| source	count=1
function_arg	[function_1] [arg_2] ||| [function_1] header [arg_2]	count=12
module	layers in the ||| contrib gis	count=1
module_class	[module_1] forward ||| [module_1] [class_2]	count=6
arg	key into ||| key	count=1
module	forms ||| forms	count=6
function	so ||| proxy	count=2
function	[function_1] settings are ||| [function_2] [function_1]	count=4
function_arg	key from [arg_2] ||| [arg_2] [function_1]	count=2
function	this backend based ||| backend	count=1
class	or fully qualified ||| geo	count=1
function	database field ||| field	count=1
arg	string depending on the ||| compiler	count=1
class	[class_1] session key ||| [class_2] [class_1]	count=2
class	name for ||| base	count=1
class	a transaction and ||| database wrapper	count=1
module	fields passed ||| models	count=1
module	returns a dictionary of ||| db backends oracle	count=1
module	specifies ordering the ||| contrib admin	count=1
function	allow modification ||| modify	count=1
function	all lazy i e ||| check lazy	count=1
module	doesn't populate ||| db models	count=1
class	the current context ||| base context	count=1
function	number of dimensions ||| len	count=1
function	sql string ||| as sql	count=1
class	the last value on ||| value	count=1
class	the ||| command	count=1
class	column [class_2] ||| [class_2] [class_1]	count=1
class	the spatial ||| spatial	count=3
module	and lookup ||| db backends	count=1
function	database check or ||| database	count=1
arg	given ||| plan	count=1
function	a test ||| test db	count=2
module	return the ||| views generic	count=2
module_class	[module_1] layer for ||| [class_2] [module_1]	count=4
function	what is expected by ||| adapt	count=3
module	oracle error ||| db backends oracle	count=1
class	session data ||| session	count=2
module_class	[module_1] form ||| [module_1] [class_2]	count=1
module	to user-provides ||| translation	count=1
arg	one item ||| item label	count=1
module	the coordinate sequence ||| contrib gis	count=1
module_class	of the [class_2] ||| [module_1] geos [class_2]	count=1
arg	[arg_1] using values ||| [arg_2] [arg_1]	count=1
function	[function_1] options ||| [function_1] [function_2]	count=5
class	week numeric ||| date	count=1
class	template and ||| simple template response	count=1
function	postgis geometry and/or ||| postgis types	count=1
class	not in this ||| user	count=1
class	the list of ||| list	count=1
module	applying this queryset ||| db models	count=1
module	by the node class ||| contrib	count=1
module	to return the linear ||| contrib gis gdal	count=1
function	[function_1] config ||| [function_1] [function_2]	count=2
function	the defaults ||| defaults	count=1
arg	unsaved ||| form	count=1
function	path should be handled ||| should	count=1
module	location if the ||| contrib gis	count=1
module_class	yields the [module_1] [class_2] should be rendered ||| [module_1] [class_2]	count=2
arg	the provided connecting operator ||| connector sub_expressions	count=1
module	rows of values ||| models	count=1
module	[module_1] [module_2] spatialite version as ||| [module_2] [module_1]	count=1
function	cache key [function_2] ||| [function_1] [function_2]	count=3
module	the given ip ||| contrib gis	count=2
function	[function_1] test redirecting ||| [function_2] [function_1]	count=1
function	model ||| add field	count=1
module	returns a 3-tuple of ||| gis	count=1
arg	in the ||| parser token	count=2
class	dictionary mapping this routine ||| mapping	count=1
function	relative ||| construct relative	count=1
function	*models returns a dictionary ||| get for	count=1
function	and either the ip ||| process	count=1
module	to the ||| template	count=1
function	will return the ||| get	count=1
function	datetime object [function_2] ||| [function_1] [function_2]	count=1
module	mapping command names ||| core management	count=1
function	defer only ||| only	count=1
arg	object has been ||| request object message	count=2
function	and filters from a ||| from	count=1
module_class	of digits [class_2] ||| [module_1] [class_2]	count=4
module	in the urlconf can ||| views	count=1
function_arg	[function_1] [arg_2] ||| [function_1] empty value [arg_2]	count=4
class	templates ||| command	count=1
module	languages ||| utils translation	count=2
arg	receiver to ||| receiver	count=1
module	applying this ||| models	count=1
function	formsets ||| get formsets	count=1
class	in ||| settings holder	count=4
module	the week numeric ||| utils	count=1
module	given a set of ||| db	count=1
function	[function_1] [function_2] ||| [function_2] session [function_1]	count=2
function	the country [function_2] ||| [function_2] [function_1]	count=2
class	the value [class] saving ||| [class]	count=1
function	header in the ||| vary headers	count=1
function	initial ||| get initial	count=1
arg	one item of list_filter, ||| obj model item	count=1
function_arg	[function_1] aren't ||| [arg_2] [function_1]	count=4
function	ordering refers to existing ||| ordering	count=1
module	the messages ||| contrib messages	count=2
class	extra inline forms ||| inline model admin	count=1
module	recursively ||| core checks	count=1
function	the description string ||| description	count=1
arg	which may be a ||| field_index	count=1
module	value ||| gis gdal prototypes	count=1
function	internal ||| internal	count=1
module	starting point at the ||| contrib	count=1
function_arg	[function_1] hidden ||| [arg_2] [function_1]	count=1
function	the symmetric ||| sym	count=1
function	current system [function_2] ||| [function_2] [function_1]	count=1
function	tuples [ directory file ||| messages	count=1
module	[module_1] admin form ||| [module_1] [module_2]	count=2
arg	field if it has ||| field	count=1
class	given file ||| hashed files	count=1
function	view for this ||| view	count=2
module	contains all the points ||| contrib gis	count=1
function_arg	a native path ||| npath path	count=1
arg	queryset ||| format queryset	count=1
function	class is registered with ||| is registered	count=1
function	coordinate dimension of ||| coord dim	count=1
function	string [function_2] ||| [function_2] to [function_1]	count=1
function	is valid redirect ||| form valid	count=1
arg	for the genericipaddressfield ||| unpack_ipv4	count=1
function_arg	[function_1] time ||| [arg_2] [function_1]	count=4
arg	in raw saves ||| raw	count=1
function	a field name ||| name	count=1
function	template ||| template	count=4
function	instance that will select ||| select	count=1
function_arg	[function_1] lhs ||| [arg_2] [function_1]	count=2
module_class	'1' to '31' ||| utils date format	count=1
function	returns the contenttype object ||| get	count=1
function	caching headers ||| response headers	count=1
arg	valid language-code found in ||| strict	count=1
function	from storage ||| get	count=1
class	the command line ||| label command	count=1
function	to descend ||| related descend	count=1
function	maximum allowed batch size ||| bulk batch size	count=1
class	command ||| base command	count=3
class	for the response ||| response	count=1
arg	it otherwise wrap ||| etag_str	count=1
arg	line ||| line	count=1
class	and resets the dirty ||| database wrapper	count=1
module	database definitions ||| db	count=1
module	prevents mysql ||| db backends mysql	count=1
function	validate the ||| validate	count=1
function	a response ||| response	count=1
module	up into migrations with ||| db migrations	count=1
function	in the given ||| headers	count=1
function_arg	[function_1] [arg_2] ||| [function_1] selector [arg_2]	count=14
function	constructor called in ||| init	count=1
function	has the options with ||| select options	count=1
module	the extra locations as ||| contrib	count=1
function	[function_1] a list ||| [function_2] [function_1]	count=1
class	all formsets ||| base	count=1
module	the field's string label ||| contrib	count=1
module	a list of messages ||| contrib messages	count=1
class	handler should be ||| handler	count=1
module	with invalid foreign key ||| db backends	count=2
function_arg	native path ||| npath path	count=1
arg	x [arg_2] ||| [arg_1] [arg_2]	count=2
class	session is set to ||| session base	count=1
class	to ||| date format	count=3
class	the week numeric ||| date format	count=1
function	this formset ||| form	count=1
function	random password ||| make random password	count=2
arg	field should be ||| field	count=1
module	for constructing the ||| contrib	count=1
class	check ||| inline model admin checks	count=1
function_arg	fields [arg_2] ||| [function_1] [arg_2]	count=4
class	given ip address ||| geo ip	count=1
arg	if the host ||| host	count=1
arg	if ||| key	count=1
function	return the given ||| get	count=1
module	url pattern [module_2] ||| [module_1] [module_2]	count=3
class	month without leading zeros ||| date	count=1
function	corresponding models have ||| lazy model operation	count=1
function	return true if ||| has	count=1
arg	the given request ||| request obj	count=2
class	variables not in this ||| user	count=1
module	representing the ||| contrib	count=2
module	equal to [module] other? ||| [module] gis	count=1
function	number of ||| point count	count=1
class	definitions ||| connection handler	count=2
function	types ||| field types	count=1
function	forms that ||| forms	count=1
function	select objects ||| select	count=1
module	complete log the ||| contrib	count=1
class	an optional ||| connection handler	count=1
function	for [function_2] ||| [function_1] [function_2]	count=1
class	for configuration variables ||| user settings	count=1
function	column ||| column	count=1
function	[function_1] url redirect ||| [function_2] [function_1]	count=1
class	checks ||| admin site	count=1
function	dict ||| model to dict	count=1
module	if the oracle error ||| db backends oracle	count=1
function	"modelname") tuples and when ||| lazy model	count=1
function	database [function_2] ||| [function_1] [function_2]	count=2
module	for easy lookups ||| utils	count=1
function	is the type ||| type	count=1
function	errors ||| errors	count=1
function	joins for the ||| joins	count=1
module	of this ||| contrib gis gdal	count=1
module	the stack of dictionaries ||| template	count=1
function	a mime attachment ||| attachment	count=1
class	i e '1' to ||| date format	count=1
module	dictionary mapping models to ||| db models sql	count=1
class	transaction and resets ||| wrapper	count=1
arg	email and [arg_2] ||| [arg_2] [arg_1]	count=1
function	last object ||| last	count=1
function	are empty ||| empty	count=1
module	a decorator ||| utils	count=1
function	directory file ||| compile	count=1
function	to generate formsets ||| formsets	count=1
module	from the module ||| conf	count=1
function	this to return ||| get	count=1
module	loading of data for ||| models	count=1
function	it matches any pattern ||| matches patterns	count=1
function	creates a test database ||| test db	count=1
function	the [function] ||| postgis [function]	count=1
class	this spatial ||| spatial	count=2
function	return geometries ||| check geom	count=1
function	[function_1] name ||| [function_2] [function_1]	count=18
module_class	[module_1] upload ||| [module_1] [class_2]	count=1
module	a list of tuples ||| commands	count=1
function	unordered [function] -- without ||| unordered [function]	count=1
function	[function_1] will set ||| [function_2] [function_1]	count=3
class	new ||| file upload handler	count=1
function	select objects with a ||| select	count=1
arg	operations suggests ||| cls ops	count=1
module	the polygon data ||| contrib gis db	count=1
function	a password change ||| password change	count=2
arg	absolute path (or none ||| path	count=1
function	lookup from given ||| lookup	count=1
function	post [function_2] ||| [function_1] [function_2]	count=1
function	normalizes it to ||| normalize	count=1
function	application ||| application	count=1
module	boundaries of the passed-in ||| contrib gis gdal	count=1
class	envelope ||| envelope	count=1
function	find what language ||| language	count=1
module	indicate the particular ||| contrib gis db	count=1
function	transform a datetime ||| datetimefield	count=1
function	[function_1] header into ||| [function_2] [function_1]	count=1
module	list of tuples [ ||| commands	count=1
arg	field to be ||| field created_separately	count=1
module	and return the ||| contrib gis	count=1
arg	a post form the ||| request	count=1
function	comparison ||| name converter	count=1
module	all tables and ||| db backends base	count=1
arg	exception ||| request exception	count=1
function	retrieves ||| get	count=3
module	of rows ||| db models sql	count=1
function	area for a linearring ||| area	count=1
class	be [class_2] ||| db models fields [class_2] [class_1]	count=2
function	[function_1] signed ||| [function_1] [function_2]	count=3
module	all models ||| db models	count=1
class	in this query ||| query	count=1
module	the ||| contrib gis utils	count=7
class	case ||| selenium test case	count=1
module	to [module] ||| [module]	count=7
function	corresponding models have been ||| lazy model	count=1
function	select objects [function_2] ||| [function_1] [function_2]	count=2
arg	message ||| message fail_silently connection	count=2
module	[module] decorator that ||| [module]	count=2
function	of available languages in ||| available languages	count=1
function	if any [function_2] ||| [function_2] [function_1]	count=5
function_arg	adds the [arg_2] ||| [function_1] value [arg_2]	count=3
class	in this class ||| holder	count=1
class	the connection was explicitly ||| wrapper	count=1
module	dirty flag ||| backends	count=1
function_arg	link path ||| link file path	count=1
class	formset ||| form	count=1
function	dict containing the ||| model to dict	count=1
module	the results from applying ||| models	count=1
module_class	[module_1] pathinfos containing ||| [module_1] [class_2] get	count=4
class	given on the command ||| label command	count=1
arg	according to the arg ||| arg	count=1
arg	if update_pk is ||| fields update_pk	count=1
module_class	[module_1] this session ||| [module_1] [class_2]	count=1
function	[function] week ||| [function] week	count=1
module	command names to ||| core management	count=1
class	and saves a ||| user manager	count=1
arg	instance to the ||| form instance	count=1
function	find what language ||| get language	count=1
arg	modified flag so that ||| session_key	count=1
class	requests ||| view	count=1
function	extracts the given ||| extract	count=1
function_arg	[function_1] date of ||| [function_1] next day [arg_2]	count=1
function	given user [function_2] ||| [function_1] [function_2]	count=2
arg	message ||| subject message	count=1
function	check [function_2] ||| [function_2] [function_1]	count=5
function	allowed to display ||| get allow	count=1
module	compile-time default (sqlite_limit_variable_number) of ||| db backends	count=1
function_arg	returns the for [function_1] [arg_2] for an update operation ||| [function_1] [arg_2]	count=2
arg	spatial_ref_sys table ||| auth_name auth_srid ref_sys_name	count=1
function	storage ||| storage	count=1
function	settings are ||| settings	count=1
function	value ||| value	count=16
arg	if update_pk is defined ||| fields update_pk	count=1
function_arg	[function_1] log-in page ||| [arg_2] [function_1]	count=4
function	names ||| names to path	count=1
module	sends ||| mail	count=2
arg	exactly ||| max_header_size	count=1
arg	adds headers [arg] ||| [arg]	count=1
function_arg	[function_1] genericipaddressfield ||| [arg_2] [function_1]	count=1
function	[function_1] headers ||| [function_1] never cache [function_2]	count=1
function	filtering on a single ||| single	count=1
function	will [function_2] ||| [function_2] [function_1]	count=2
arg	object has ||| object	count=2
class	of ||| format	count=3
function	and when all ||| lazy model operation	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2]	count=768
function	geometry for ||| geom	count=1
module	the module specified in ||| conf	count=1
function	number of extra ||| get extra	count=1
function_arg	available dates [arg_2] ||| [arg_2] [function_1]	count=2
function	returns the maximum ||| max	count=1
module	set of ||| db models	count=1
class	of the week numeric ||| format	count=1
function	[function_1] [function_2] ||| [function_1] expression [function_2]	count=1
function	for introspected ||| can introspect	count=1
function	tuples ||| lazy model	count=1
function	kml ||| to kml	count=1
module	polygon [module] ||| [module]	count=1
arg	kahn's algorithm 1962 ||| dependency_graph	count=1
arg	a key into a ||| key version	count=1
function	headers to ||| response headers	count=1
module	reverse ||| db models fields	count=3
module_class	in this linestring ||| geos line string	count=1
function	should [function] ||| [function]	count=3
arg	to the given ||| plan	count=1
module	[module] field pointing ||| [module]	count=2
arg	a response so ||| view_func	count=1
function	[function_1] queryset or ||| [function_2] [function_1]	count=1
function	this method will try ||| do	count=1
module	languages files ||| utils	count=1
function	return the difference ||| sub	count=2
module_class	[module_1] corresponds ||| [module_1] [class_2]	count=2
module	are satisfied from the ||| conf	count=1
function	type from ||| lookup type	count=1
function	index with varchar ||| index	count=1
function	fixture name in name ||| parse name	count=1
arg	error [arg_2] ||| [arg_2] [arg_1]	count=1
module	customizing [module_2] ||| [module_2] [module_1]	count=4
arg	the connection ||| connection	count=1
class	and saves a ||| manager	count=1
module	true if the queryset ||| models	count=1
class	'0' sunday ||| format	count=1
module	the spatial backend ||| contrib	count=1
module	[module] decorator ||| [module]	count=2
arg	encoded and ||| encoded	count=1
module	same data but with ||| backends	count=1
module_class	for geos geometry ||| gis geos geosgeometry	count=1
class	last value on every ||| value	count=1
function	the current time zone ||| timezone today	count=1
class	is ||| connection handler	count=2
class	deletes all migration ||| migration	count=1
arg	iterable and values from ||| cls iterable	count=1
module	if the queryset ||| db models	count=1
function	returns a [function_2] ||| [function_2] [function_1]	count=9
function	stack of ||| update	count=1
function	of ||| init	count=1
module	c [module_2] ||| [module_2] [module_1]	count=3
function	*models returns ||| get for models	count=1
function_arg	[function_1] [arg_2] ||| [function_1] del batches [arg_2]	count=2
arg	suggests a ||| cls ops	count=1
arg	checking for routines ||| func cargs	count=1
function	all the corresponding ||| lazy model	count=1
module	of the form "app_label ||| db models	count=1
function	installed ||| add installed apps	count=1
function	[function_1] containing ||| [function_2] [function_1]	count=5
function	[function_1] feature ||| [function_1] [function_2] feat_id	count=1
function	construct the inner meta ||| meta	count=1
module	is ||| contrib admin	count=2
arg	middleware_class ||| middleware_class	count=1
function	returns a tuple ||| tuple	count=2
function	the null ||| null	count=1
arg	format ||| value format	count=1
function	migrations ||| check migrations	count=1
function	all [function_2] ||| [function_1] [function_2] opts	count=1
class	an ||| connection handler	count=2
function	include the boundaries ||| include	count=1
function	[function_1] the csrf ||| [function_2] [function_1]	count=2
module	key checks after ||| db backends	count=1
function	version [function] ||| geos version [function]	count=3
module	admin form and ||| admin templatetags	count=1
function	the dated [function_2] ||| [function_1] [function_2]	count=4
function	the clear [function_2] ||| [function_2] [function_1]	count=1
function	insert [function] as ||| return insert [function]	count=1
arg	of the specified path ||| path	count=1
function	the total size ||| size	count=1
function	admin url ||| admin url	count=1
module	by the node ||| contrib gis	count=1
class	not this handler should ||| memory file upload handler	count=1
function	sql query that retrieves ||| sql	count=1
module	fields instance ||| db models fields	count=1
arg	register func ||| func	count=1
function_arg	[function_1] given field_name ||| [function_1] sql [arg_2]	count=1
function_arg	to migrate [arg_2] ||| [function_1] connection_alias [arg_2]	count=1
arg	username passed as remote_user ||| request remote_user	count=1
function	[function_1] url ||| [function_2] [function_1]	count=4
function	deferred loading set ||| deferred loading	count=1
function	returns true if the ||| is	count=1
function	[function_1] time zone ||| base base database wrapper [function_2] [function_1]	count=1
function	returns a 64-bit integer ||| int64	count=1
class	e '0' ||| date	count=2
function	loads templates ||| load template	count=1
arg	necessary ||| field_name tzname	count=1
function	aware datetime ||| datetime	count=1
class	for this form field ||| choice field	count=1
function	the given httpresponse object ||| patch vary headers	count=1
function	n-th clone of a ||| db clone	count=1
module	operation ||| db migrations operations	count=2
class	passed ||| query	count=1
module	header ||| utils	count=1
function	get z with the ||| get z	count=1
class	savepoint ||| database operations	count=1
module	models to ||| models sql	count=1
class	cache at once from ||| cache	count=1
arg	max-age from [arg] cache-control header ||| [arg]	count=1
class	the connection was ||| base database wrapper	count=1
class	list of tuples ||| list filter	count=1
function	instance ||| get prefetcher	count=1
arg	is true if ||| form	count=1
function	aware ||| aware	count=3
function	executed ||| executed	count=1
module	they might ||| migrations	count=1
function	adding a salt and ||| salt	count=1
module	handler wrapping the default ||| contrib	count=1
class	spatial [class_2] ||| [class_2] [class_1]	count=10
function	find ||| find	count=1
function	optional dictionary ||| init	count=1
function_arg	a model's [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] true ||| year archive view [function_1] [function_2]	count=1
function	pgpass ||| pgpass	count=1
arg	[arg_1] if ||| [arg_2] [arg_1]	count=3
function	[function_1] a template ||| [function_1] [function_2]	count=1
function	[function_1] log for ||| [function_1] [function_2]	count=4
function_arg	the managers [arg_2] ||| [function_1] [arg_2]	count=1
module	the admin urls ||| contrib admin	count=2
function_arg	object [arg_2] ||| [arg_2] [function_1]	count=3
function	to fail silently if ||| fail statements	count=1
function	in ||| num	count=2
arg	message to a ||| subject message	count=1
class	file and ||| file	count=1
function	have ||| lazy	count=1
function	test database prompting the ||| test	count=2
arg	for the specified field ||| model field	count=1
module	the new ||| contrib	count=1
module	dictionary mapping models to ||| models	count=1
class	of table names ||| database introspection	count=1
module	of data for certain ||| models	count=1
module_class	[module_1] [class_2] ||| [module_1] sqlite3 [class_2]	count=2
module	by key ||| translation	count=1
function	aren't hidden [function_2] ||| [function_1] [function_2]	count=1
class	cache ||| base cache	count=7
function	splits ||| split	count=1
module	be ||| contrib admin	count=1
module	without leading zeros i ||| utils	count=1
function	a mirror of ||| mirror	count=1
function	any permissions in ||| module perms	count=1
arg	text ||| text trim_url_limit nofollow	count=1
function	on ||| on	count=1
function	geometry ||| geom	count=7
function	in the ||| num	count=1
module	lines and ||| backends	count=1
function	engine ||| engine	count=1
function	iterator over the results ||| iterator	count=1
function	imported and registered ||| lazy	count=1
function	a test database prompting ||| test	count=2
function	returns the placeholder ||| get placeholder	count=3
arg	changed ||| new_type	count=2
arg	function that returns an ||| func	count=1
function	sql that ||| sql	count=5
module	element described by the ||| contrib admin	count=1
function	functions sqlite supports ||| supports	count=1
function	system and adds its ||| add	count=1
function	individual [function] ||| get [function]	count=1
function	cleans all ||| clean	count=1
module	this ||| generic	count=8
function	sql that [function_2] ||| [function_2] time zone [function_1]	count=2
function	"modelname") tuples and when ||| operation	count=1
arg	the filename content ||| filename content	count=2
class	connection to the database ||| database wrapper	count=1
class	uses the date ||| date list view	count=1
module	given geometry field ||| gis	count=1
class	and resets ||| database	count=1
class	from storage ||| storage	count=1
arg	force the value ||| value	count=1
function	has ||| has perm	count=2
module_class	[module_1] feature ||| [module_1] gdal [class_2]	count=1
module_class	sql params ||| sql sqlcompiler	count=1
arg	the specified [arg] which may ||| [arg]	count=1
class	true if [class] ||| [class]	count=1
module	geoip library ||| geoip	count=1
function	take ||| lazy model	count=1
class	context ||| base context	count=3
module_class	[module_1] order ||| [module_1] [class_2] iter	count=3
class	geometry and ||| ogrgeometry	count=3
function	for introspected [function_2] ||| [function_2] [function_1]	count=2
function	of ||| set level	count=1
function_arg	[function_1] field from ||| [arg_2] [function_1]	count=2
function	all table [function_2] ||| [function_1] [function_2]	count=3
module	returns true if this ||| contrib gis db	count=1
module	contain multiple lines and ||| backends base	count=1
function	url [function_2] ||| [function_2] [function_1]	count=12
function	[function_1] headers to ||| [function_2] [function_1]	count=1
module	the wkt of ||| contrib gis gdal	count=1
function	function ||| lazy model operation	count=1
arg	are ||| template	count=1
function	constructor called in the ||| init	count=1
function	the ||| model operation	count=1
function	check a key ||| key	count=1
module	function [module] the ||| contrib [module]	count=1
function	test database prompting ||| create test	count=1
function_arg	object this [arg_2] ||| [function_1] [arg_2]	count=1
class	operation ||| operation	count=2
function	given *models returns ||| get for models	count=1
arg	modelform ||| form	count=1
function_arg	exception subclass [arg_2] ||| [arg_2] [function_1]	count=1
arg	the arg [arg_2] ||| [arg_2] [arg_1]	count=2
module	type [module] field pointing ||| [module]	count=1
module	of tuples [ ||| core management commands	count=1
function	an integer value ||| int	count=1
module	header in the ||| utils	count=1
function	[function_1] union of ||| [function_1] [function_2]	count=2
arg	it ||| cls name	count=1
module	backends that return ||| backends	count=1
module	applying this queryset to ||| db models	count=1
arg	node recursively ||| node	count=1
function	[function_1] [function_2] ||| [function_2] table [function_1]	count=8
arg	true if ||| request	count=1
function	[function_1] messages ||| [function_1] [function_2] email_messages	count=2
function	[function_1] cookie ||| [function_1] [function_2]	count=5
function	number of ||| lazy model	count=1
arg	header in ||| response	count=1
function	will store [function] ||| do get [function]	count=1
module	[module_1] view with ||| [module_1] [module_2]	count=2
module	models to a ||| db models sql	count=1
function	sets the z ||| z	count=1
arg	generates a ||| argtypes	count=1
arg	all [arg] same leading ||| [arg]	count=1
arg	if the response ||| response	count=1
class	variables ||| settings holder	count=2
function	the test db ||| test db	count=3
function	technical 404 [function_2] ||| [function_2] [function_1]	count=2
function	a block of text ||| block	count=1
class	keyword arguments [class] ||| [class]	count=1
function	method up ||| method	count=2
arg	function ||| func	count=10
module	[module_1] the corresponding ||| [module_1] [module_2]	count=4
function	placeholder sql and parameters ||| assemble as sql	count=1
function_arg	[function_1] aren't ||| [function_1] unique [arg_2]	count=4
arg	domain and :param ||| potfile	count=1
module	encoding of ||| utils	count=1
function	difference ||| difference	count=2
function	is not ||| to	count=1
arg	specified field ||| model field	count=1
function	'minute' or 'second', returns ||| trunc	count=2
function	returns a ||| all locale	count=1
arg	return an unsaved instance ||| form	count=1
module	edit the ||| contrib	count=1
function	[function] the ||| patch [function]	count=1
function	executed by the given ||| executed	count=1
module	on the spatial ||| contrib gis db	count=1
arg	given length [arg_2] ||| [arg_1] [arg_2]	count=1
arg	all ||| ignore_patterns	count=1
class	[class] or fqdn ||| [class]	count=1
class	list of dates and ||| list	count=1
function	custom prepopulated ||| prepopulated	count=1
function	this routine will return ||| get	count=1
class	layer supports ||| layer	count=1
function	validators for ||| address validators	count=1
function	a string ||| write string	count=1
module	if the original ||| contrib	count=1
arg	helper routine for constructing ||| geo_field field_name	count=1
function	a list of fields ||| list	count=1
class	all the ||| apps	count=1
function	test settings ||| test settings	count=1
module_class	email [class_2] ||| [module_1] email [class_2]	count=1
class	this expression and all ||| expression	count=1
arg	file system path to ||| path	count=1
module	is true if ||| contrib	count=1
function	returns sets ||| sets	count=1
function	variables ||| init	count=1
function	imported and ||| model	count=1
function	has a ||| has	count=1
function	that blocks until ||| wait for	count=2
function	coordinate sequence for ||| set cs	count=1
function_arg	[function_1] it's ||| [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] string [arg_2]	count=3
class	registered in this site ||| site	count=1
class	rest of the upload ||| upload	count=1
function	set a bunch of ||| set	count=1
function	[function_1] the file ||| [function_2] [function_1]	count=6
function	spatial ||| spatial	count=2
module	is ||| db	count=3
module	this accessor sets the ||| gis	count=1
class	[class_1] value for ||| [class_1] [class_2]	count=3
function	media prefix ||| media prefix	count=2
function	and call the ||| get	count=1
module	returns a tuple of ||| gis	count=3
arg	receiver to [arg_2] ||| [arg_1] [arg_2]	count=2
function	get a value from ||| from	count=2
function	[ directory ||| compile	count=1
arg	path should be ||| path	count=1
function	extent of ||| extent	count=1
function	unsaved ||| save	count=1
class	applying this queryset ||| set	count=1
function	point geometry guaranteed to ||| point	count=1
function	[function_1] mask ||| [function_1] annotation [function_2]	count=1
class	the queryset ||| multiple object mixin	count=1
function	yields the next ||| next	count=1
arg	a model class ||| model	count=1
function	to update ||| update	count=1
class	variables not in ||| settings holder	count=1
function	the instance's validate_unique() method ||| validate unique	count=1
class	given session ||| session	count=2
function	lazy i e string ||| lazy	count=1
function	aren't hidden [function_2] ||| [function_2] [function_1]	count=1
module	fields ||| models	count=1
arg	queryset ||| queryset	count=4
arg	a decorator that defines ||| klass	count=2
function	the login page passing ||| redirect to login	count=1
function	load all ||| load all	count=2
function	the version ||| version	count=2
function	week for ||| get week	count=1
function	] ||| messages	count=1
class	urlconf ||| view	count=1
module	c geos geometry object ||| gis geos prototypes	count=1
class	if the session is ||| session base	count=1
module	the [module_2] ||| [module_1] gis gdal [module_2]	count=1
module_class	[module_1] names and ||| [module_1] [class_2]	count=2
arg	[arg_1] the value ||| [arg_2] [arg_1]	count=10
function	not simple ||| simple	count=1
arg	the cursor is closed ||| cursor	count=1
function	requests for configuration ||| init	count=1
function	[function_1] checking ||| [function_2] [function_1]	count=2
class	fields passed ||| query set	count=1
arg	[arg] migration ||| project_state schema_editor [arg]	count=3
class	reverse ||| reverse	count=3
function	what language ||| language	count=1
module	the uniqueness keyword arguments ||| contrib gis utils	count=1
function	objects pointing ||| objects	count=1
function	sessions ||| session	count=1
module	[module_1] with ||| [module_1] [module_2]	count=1
function	geometry attribute ||| geom attribute	count=1
arg	given a cursor object ||| cursor	count=2
module	extra ||| views generic	count=2
class	helpful ||| view	count=1
function	it matches ||| matches patterns	count=1
function	initial value if ||| value	count=1
function	for [function] name ||| label for [function]	count=1
arg	[arg] is ||| [arg]	count=6
function	create a new ||| init	count=1
module	that returns ||| contrib gis gdal prototypes	count=1
function	what language ||| language from	count=1
class	validate_unique on [class] and ||| [class]	count=1
class	primary database ||| database	count=1
function	choices for use in ||| choices	count=1
arg	time zone ||| value timezone	count=1
function	[function_1] related ||| [function_2] [function_1]	count=3
function	year [function] ||| get year [function]	count=1
class	database into a json ||| database	count=1
function	sql version of ||| sql	count=1
arg	base ||| base	count=1
function	containing a given ||| containing	count=1
module	i e ||| utils	count=3
arg	see if the response ||| response	count=1
function	current active catalog ||| catalog	count=1
module	geometry and the ||| contrib	count=6
function	all related [function] ||| related [function]	count=3
function	language [function] for the ||| do get language [function]	count=1
arg	sender for ||| sender	count=2
function	given *models returns ||| get for	count=1
class	number of email ||| base email	count=1
function	point with the ||| point	count=1
function	formats a datetime date ||| date format	count=1
module	returns ||| gis gdal	count=32
class	check for a ||| http response base	count=1
function	a checkbox widget ||| action checkbox	count=1
function	[function_1] stddev as ||| [function_2] [function_1]	count=3
function	instance ||| save form	count=2
module	strip ||| db backends	count=1
function	the difference ||| sub	count=2
class	given ||| geo feed	count=1
module	[ directory file ] ||| management	count=1
function	given a ||| save form	count=1
module	the length of the ||| contrib	count=1
function	returns a filename ||| get	count=1
arg	content ||| content	count=3
module	of any ||| contrib gis	count=1
function	[function_1] model matching ||| [function_1] [function_2]	count=1
module	of ("app_label", "modelname") ||| apps	count=1
module	the set ||| contrib gis	count=1
module	list of datetime objects ||| models	count=1
class	list of ||| list filter	count=1
module	to redirect after the ||| contrib admin	count=1
function	given [function] depends on ||| [function]	count=1
function	[function_1] a field ||| [function_2] [function_1]	count=2
function	value for the css ||| get css value	count=1
function	changed ||| changed	count=2
function	converts ||| to	count=1
function	as [function] version string ||| spatialite version [function]	count=1
class	the field and ||| field	count=1
function	handle a [function_2] ||| [function_2] [function_1]	count=5
class	its dictionary mapping ||| layer mapping	count=1
class	returns the form at ||| base form	count=1
function	returns a list of ||| get	count=2
function	validators in an ||| password validators	count=1
arg	a cursor object that ||| cursor	count=2
class	the urlconf ||| view	count=1
module_class	[module_1] mapping information ||| [module_1] [class_2]	count=12
function	helper routine for ogrinspect ||| ogrinspect	count=1
class	handler should be in ||| handler	count=1
arg	a secret (which ||| value secret	count=1
module	and returns ||| gis geos prototypes	count=1
class	up for ||| query	count=1
arg	the request using ||| request level	count=2
module	the template api ||| template backends	count=2
arg	the given ||| response	count=1
function	union of ||| or	count=1
module	dictionary mapping command ||| core management	count=1
module	the addgeometrycolumn stored procedure ||| contrib	count=1
function	of paths ||| paths	count=1
arg	limit and adding ||| limit	count=1
function	model ||| model	count=11
function	[function_1] chunks ||| [function_2] [function_1]	count=1
function	of an object starts ||| start object	count=1
module	an admin ||| contrib admin	count=1
class	are satisfied ||| user settings	count=1
arg	in the context ||| parser	count=2
module	register all the ||| contrib gis	count=1
function_arg	[function_1] the arg ||| [function_1] value [arg_2]	count=1
class	in this ||| holder	count=1
function	of template names to ||| template names	count=1
module_class	[module_1] [class_2] be rendered ||| [module_1] [class_2] iter	count=1
function	adds ||| headers	count=1
function	[function_1] of interior ||| [function_1] [function_2]	count=1
class	the cache ||| based cache	count=1
module	the correct ||| contrib	count=1
function	local filesystem path ||| path	count=1
function_arg	[function_1] start date ||| [arg_2] [function_1]	count=3
module	the names of ||| contrib admin	count=1
class	the template and ||| template response	count=1
function	[function_1] prefix settings ||| [function_1] [function_2]	count=10
arg	to prevent ||| name val	count=1
class	the field within ||| field	count=1
module	doesn't ||| db models	count=1
function	get a ||| get	count=9
function	modification time ||| last modification	count=1
class	an order_by() ||| query	count=1
module	translation but doesn't ||| utils translation	count=2
class	in this ||| user settings	count=1
arg	project ||| template	count=1
function	necessary class setup immediately ||| setup	count=1
module	store or deletes the ||| contrib	count=1
arg	dry routine ||| func tolerance	count=1
function	unsaved instance ||| form	count=1
function	corresponding ||| lazy model	count=1
module	of the passed-in ||| contrib gis gdal	count=2
function	attaches a geometry attribute ||| geom attribute	count=1
class	an ||| query	count=2
class	date field ||| date	count=1
class	foreign ||| database wrapper	count=2
class	transaction and ||| base	count=1
module	geos [module_2] ||| [module_1] [module_2]	count=1
class	requests ||| user settings holder	count=2
function	list of fields to ||| list	count=1
class	mapping information and model ||| layer mapping	count=1
function_arg	field_name [arg_2] ||| [arg_2] [function_1]	count=3
function	html representation of ||| html	count=1
class	model instance the default ||| model	count=2
function	an extended ||| extended	count=2
class	actual date [class_2] ||| [class_2] [class_1]	count=1
module_class	returns a [module_1] [class_2] ||| [module_1] [class_2]	count=5
function	number ||| operation	count=1
class	the ||| set	count=5
function_arg	[function_1] fields or ||| [function_1] spec obj model [arg_2]	count=3
module	a management ||| core management	count=1
function	[function_1] [function_2] extra_select columns) ||| [function_2] [function_1]	count=3
function	expression using ||| expression	count=1
module	them to [module] ||| [module]	count=3
class	tuples [ directory file ||| command	count=1
function	[function_1] static prefix ||| [function_1] [function_2]	count=4
function	and a number ||| lazy model	count=1
arg	we've pushed back the ||| num_bytes	count=1
function	datetime object [function_2] ||| [function_2] [function_1]	count=1
function_arg	search [arg_2] ||| [function_1] results [arg_2]	count=1
function	required to reset sequences ||| sequence reset	count=1
module	lists [module] ||| [module]	count=2
function	into a json string ||| db to string	count=1
arg	unsaved instance change ||| change	count=1
function	returns an sql expression ||| sql	count=1
module	[module_1] returns ||| [module_2] [module_1]	count=1
class	resets ||| base	count=1
function	avoid [function_2] ||| [function_1] [function_2]	count=1
class	files called ||| files mixin	count=1
function_arg	headers [arg_2] ||| [arg_2] [function_1]	count=4
function	available [function_2] ||| [function_2] [function_1]	count=1
module	of datetime objects representing ||| db models	count=1
function	is not a ||| to	count=1
module	url pattern [module_2] ||| [module_2] [module_1]	count=3
arg	for the specified app_label ||| app_label	count=1
arg	to a response to ||| response	count=1
function	storage engine for ||| storage engine	count=2
module	m rows of values ||| models sql	count=1
function	the mask [function_2] ||| [function_2] [function_1]	count=6
module	the urlconf can ||| views	count=1
function	of all actions for ||| actions	count=1
module	return [module] ||| [module]	count=1
function	will be interpolated ||| readable field data	count=1
arg	check one item ||| item label	count=1
function	a file ||| file	count=1
arg	of keys ||| keys	count=1
function	method will [function_2] ||| [function_2] [function_1]	count=2
function	all the corresponding models ||| operation	count=1
function	format modules ||| format modules	count=2
module	list ||| core management	count=1
class	mapping this routine ||| mapping	count=1
arg	exception should be the ||| request exception	count=1
function_arg	search [arg_2] ||| [function_1] sql [arg_2]	count=1
class	app's filesystem ||| app	count=1
class	variables not ||| settings	count=1
function	[function_1] datetime value ||| [function_2] [function_1]	count=4
arg	from key_salt and a ||| key_salt	count=1
module	ensures that it ||| utils	count=1
module	resets the ||| base	count=1
function	manually configure ||| configure	count=1
module	take the ||| contrib gis	count=1
arg	the essential steps are ||| create_field delete_field alter_field	count=1
function	headers ||| response headers	count=1
arg	checks if ||| default	count=1
function	expression ||| expression	count=1
module	the given ||| contrib staticfiles	count=1
arg	[arg_1] y z ||| [arg_1] [arg_2]	count=2
class	specified permission this ||| permissions mixin	count=1
function	returns the number of ||| num	count=1
function	valid [function_2] ||| [function_1] [function_2]	count=1
module	true if ||| admin	count=1
function	prefix to ||| get prefix	count=1
function	[function_1] permission ||| [function_1] change [function_2]	count=1
function	session key [function_2] ||| [function_2] [function_1]	count=4
class	table ||| geometry columns	count=1
function	returns a filename that's ||| get	count=1
arg	lookup value ||| value	count=2
function	selected language's bidi layout ||| get language bidi	count=1
function	geos ||| geos	count=2
function	the given field ||| field	count=1
arg	represented by data using ||| data	count=1
function	[function_1] name this ||| [function_2] [function_1]	count=4
function	models ||| model operation	count=1
module	an ||| serializers	count=1
function	fields if defined ||| fields	count=1
module	dictionary ||| db	count=1
module	and ||| db backends base	count=11
function	dict containing ||| dict	count=1
class	the results from applying ||| query	count=1
class	given database ||| base database operations	count=2
function_arg	query [arg_2] ||| [arg_2] [function_1]	count=2
function	matches any ||| matches patterns	count=1
module	point of this ||| gdal	count=1
rep	of the [function_arg_2] ||| [module_class_1] get [function_arg_2]	count=1
function	[function_1] context for ||| [function_1] [function_2]	count=1
module	of values generate placeholder ||| db models sql	count=1
arg	given [arg_2] ||| [arg_2] [arg_1]	count=3
function	[function_1] format string ||| [function_1] [function_2]	count=4
class	a transaction and resets ||| database wrapper	count=1
arg	by data ||| data	count=1
module	perform the ||| contrib gis	count=1
module	at the ||| contrib	count=3
class	e g ||| date format	count=2
class	not in ||| holder	count=1
function	__html__ ||| safe	count=1
function	name is needed ||| name	count=1
module	returns true if ||| db	count=1
module	resets ||| db backends	count=1
class	records useful if you're ||| recorder	count=1
function	a random ||| random	count=1
function	[function_1] manytomanyfield ||| [function_2] [function_1]	count=1
function	headers to the given ||| headers	count=1
function	return the symmetric difference ||| xor	count=2
class	lazystream must ||| lazy stream	count=1
function	renders ||| render to	count=1
function	group translatable [function] locale directory ||| process [function]	count=1
module_class	[module_1] file in ||| [module_1] [class_2]	count=4
function	a list ||| locale	count=1
function	paths to ||| all locale paths	count=1
module	stddev and ||| db backends sqlite3	count=1
function	db_type(), providing a range ||| db parameters	count=1
arg	[arg_1] allowed_chars ||| [arg_1] [arg_2]	count=2
class	from the module specified ||| user	count=1
arg	[arg_1] mimetype triple ||| [arg_1] [arg_2]	count=4
module	value and ||| db backends	count=1
arg	wkt string ||| wkt	count=1
function	[function_1] since ||| [function_2] [function_1]	count=3
class	the opposite of ||| query	count=1
function	of this ||| this	count=1
class	to do a password ||| password	count=1
module	returns true if ||| gis db	count=1
class	these are all ||| file based cache	count=1
function	list of all nodes ||| nodes by	count=1
function_arg	matches [arg_2] ||| [arg_2] [function_1]	count=1
module	returns ||| contrib gis db backends	count=2
function	main [function_2] ||| [function_2] [function_1]	count=2
function	metadata column used to ||| col	count=1
class	datetime ||| base database operations	count=2
function	of db_type(), providing a ||| db parameters	count=1
module	database fields ||| db	count=1
function	forms ||| forms	count=2
module_class	[module_1] full-text ||| [module_1] [class_2]	count=1
arg	starting ||| sid	count=1
module_class	the [class_2] ||| [module_1] [class_2] transform	count=2
function	filter clause ||| filter	count=1
class	project templates ||| command	count=1
class	all ||| change list	count=1
module	true ||| admin	count=1
class	fields ||| set	count=1
arg	[arg] short-hand ||| [arg]	count=2
class	the results ||| set	count=1
arg	entry in installed_apps ||| entry	count=1
arg	the database connection ||| connection	count=1
class	of database definitions ||| connection handler	count=1
module	of rows from a ||| db models	count=1
function_arg	[function_1] given field_name ||| [arg_2] [function_1]	count=7
module	directory file ||| core management	count=1
class	configuration ||| settings	count=1
arg	targets ||| targets	count=1
function	will be interpolated ||| readable field	count=1
function	[function_1] sql ||| [function_1] [function_2]	count=4
module	of the translation ||| translation	count=1
arg	datetime datetime object using ||| use_l10n	count=1
function	the number of tables ||| tables	count=1
arg	on the given instance ||| instance	count=1
module	the ||| contrib contenttypes	count=6
function	temp columns ||| generate temp	count=1
module	stddev and related stats ||| db backends sqlite3	count=1
function	parse a list ||| parse apps	count=1
arg	path (or none ||| root path	count=1
module	with the given ||| contrib	count=5
arg	return true if line ||| line	count=1
arg	response so ||| view_func	count=1
arg	the block through variable ||| parser token	count=1
module_class	[module_1] list ||| [module_1] [class_2]	count=7
module	to ||| db	count=1
function	a relative [function_2] ||| [function_1] [function_2]	count=1
module	template and ||| db backends	count=1
class	the connection ||| base database wrapper	count=1
class	queryset ||| query	count=2
arg	check one item of ||| obj model item label	count=1
module	used by the node ||| contrib gis geos	count=1
module	the opposite ||| models	count=1
module	cleans ||| contrib auth	count=1
function	clones ||| clone	count=1
class	for configuration variables ||| settings	count=1
function	in the [function_2] ||| [function_2] [function_1]	count=1
function	database schema [function_2] ||| [function_1] [function_2]	count=1
function	symmetric [function_2] ||| [function_2] [function_1]	count=1
class	extra ||| view	count=1
module	[module_1] this ||| [module_1] [module_2]	count=10
module	can contain helpful extra ||| generic	count=1
function	key function ||| get key func	count=2
arg	files not post ||| files name	count=1
function	[function_1] to select ||| models sql query clear [function_2] [function_1]	count=4
arg	the changes ||| changes graph migration_name	count=1
module	the ||| contrib gis geoip	count=4
function	given ||| headers	count=1
function_arg	list_select_related [arg_2] ||| [function_1] [arg_2]	count=4
function	value to time value ||| time	count=1
arg	more explanatory message ||| cls original_exc model fk	count=1
function	language [function_2] ||| [function_2] [function_1]	count=1
class	returns true if ||| set	count=1
module	[module_1] returns a ||| [module_1] [module_2]	count=1
function	"modelname") tuples and ||| lazy	count=1
function	on the surface of ||| on surface	count=1
arg	value and ||| value	count=2
class	class ||| user	count=1
arg	iterable and ||| cls iterable	count=2
module	in the ||| contrib gis gdal	count=1
function_arg	returns the for [function_1] [arg_2] an update operation ||| [function_1] [arg_2]	count=2
function	[function_1] code ||| [function_1] [function_2]	count=2
module	if any applied migrations ||| migrations	count=1
module	require [module] ||| [module] gis gdal	count=3
function	the sql version ||| as sql	count=1
module	url pattern ||| urls	count=2
function	the stack of dictionaries ||| update	count=1
module	in ||| generic	count=1
class	given [class] column ||| [class]	count=1
function	[function_1] main version ||| [function_1] [function_2]	count=1
function	the login page passing ||| to login	count=1
module	in ||| views generic	count=2
arg	function that returns an ||| result func cargs	count=1
module	[module_1] of this ||| [module_1] [module_2]	count=4
class	cookie returning a ||| cookie	count=1
function	we [function] display them ||| [function] fast	count=1
function_arg	headers to [arg_2] ||| [function_1] [arg_2]	count=6
function	to start ||| start	count=1
function	closes and ||| close	count=1
class	yield this expression and ||| expression	count=1
class	this formset ||| form set	count=1
function	a special way ||| backend	count=1
function	available for new content ||| available name	count=1
function	is [function] to ||| [function]	count=1
function	doesn't quote ||| quote	count=1
module	project templates are ||| core management	count=1
function	get the x ||| get x	count=3
module	backends can override this ||| db backends	count=1
function	return a sequence ||| get	count=2
class	settings the ||| lazy settings	count=1
module_class	this geometry is ||| gis gdal ogrgeometry	count=1
function	ordering refers to existing ||| ordering item	count=1
module_class	return [module_1] [class_2] the ||| [module_1] [class_2]	count=1
module	the extra locations ||| contrib staticfiles	count=1
class	string ||| safe	count=1
class	relation ||| one to one	count=2
function	[function_1] index with ||| [function_1] like [function_2]	count=3
function	[function_1] object in ||| [function_2] [function_1]	count=3
function	returns an empty ||| get	count=1
arg	a given language and ||| language	count=1
module	on the client ||| contrib	count=1
module	to return the linear ||| contrib gis	count=1
arg	if the value is ||| value arg	count=1
function	[function_1] an index ||| [function_2] [function_1]	count=3
module	the ||| translation	count=1
class	cache ||| based cache	count=2
module	and uppercased ||| db backends oracle	count=1
arg	[arg_1] z ||| [arg_1] [arg_2]	count=3
function	by another [function] than ||| [function]	count=1
module	of the relative ||| contrib	count=1
class	the ||| request	count=1
module	of values ||| models	count=1
arg	it with [arg_2] ||| [arg_2] [arg_1]	count=6
class	e g ||| format	count=2
function	have been ||| lazy model operation	count=1
function	returns the initial data ||| initial	count=1
function	browser closes ||| at browser close	count=1
arg	of inline formsets ||| formsets	count=1
function	the aliases in ||| change aliases	count=1
function	returns the number ||| count	count=2
function	returns an [function_2] ||| [function_1] [function_2]	count=3
class	signal ||| signal	count=2
arg	routine for constructing the ||| geo_field field_name	count=1
module_class	[module_1] given srid ||| [module_1] [class_2]	count=1
class	model instance the ||| model admin	count=2
module	decorator to ||| decorators	count=1
function	a number of ||| model operation	count=1
arg	context ||| context	count=3
function	[function_1] time ||| [function_2] [function_1]	count=4
function	check if field name ||| check field name	count=1
arg	line a ||| line	count=1
class	file object if ||| file input	count=2
arg	using ||| using update_fields	count=1
module	of (column_name referenced_table_name ||| db	count=2
function	return the week ||| get week	count=1
module	transaction and resets the ||| base	count=1
function	of ("app_label", ||| model	count=1
function	the __html__ method this ||| html safe	count=1
arg	the field to be ||| field created_separately	count=1
function	number of ||| num	count=3
module	oracle doesn't have the ||| db backends oracle	count=1
module	database ||| backends oracle	count=1
function	way permissions are checked ||| has permission	count=1
function	function ||| func	count=1
function_arg	[function_1] name as ||| [arg_2] [function_1]	count=4
function	return a hash ||| hash	count=1
module	template ||| template	count=19
module	directly (if the return_geom ||| contrib	count=1
module	translatable ||| management commands	count=1
function	mime attachment ||| attachment	count=1
function	the sql that truncates ||| sql	count=2
module	and encoded as a ||| sessions backends	count=1
function	current ||| setitem	count=1
module	tests for ||| contrib gis	count=1
function	number of children ||| len	count=1
class	if possible ||| holder	count=1
function	sql ||| as sql	count=4
class	the cache if ||| base cache	count=4
module	is this ||| contrib gis db	count=1
function_arg	in a [arg_2] ||| [function_1] naive value [arg_2]	count=1
class	case ||| test case	count=1
function	[function] of ||| [function]	count=4
class	the week ||| date	count=1
class	and ||| base database wrapper	count=1
module	and views that exist ||| db backends base	count=1
arg	into the parser ||| parser token	count=1
class	in this class ||| user settings	count=1
function	datetime date object ||| date	count=1
function	to the ||| get	count=1
module	overridden so [module] geo_format attribute ||| [module] gis	count=1
function	return true if ||| is ignorable	count=1
function	that extracts a ||| datetime extract	count=1
arg	the candidates for ||| names_with_path	count=1
module	transaction and resets the ||| backends base	count=1
function	been imported ||| model operation	count=1
class	override this method to ||| mixin	count=3
function	values on save this ||| value on save	count=1
module	string ||| utils	count=2
function	that returns sets ||| topological sort as sets	count=1
class	month without leading zeros ||| format	count=1
module	the year ||| utils	count=1
function_arg	[function_1] it with ||| [function_1] string template_name context [arg_2]	count=1
module	and ||| db backends postgis	count=2
function	uncaught exceptions those that ||| uncaught	count=1
function	the hexewkb ||| hex	count=1
function	[function_1] response the ||| [function_1] [function_2]	count=4
function	returns the kml representation ||| kml	count=1
function	in the ||| patch vary headers	count=1
function	to fetch the given ||| fetch	count=1
function_arg	[function_1] the choice's ||| [arg_2] [function_1]	count=2
module	requested the next ||| contrib gis gdal	count=1
function	multiple [function_2] ||| [function_2] [function_1]	count=1
arg	is the first character ||| ch input_iter	count=1
arg	change is ||| change	count=1
function	combine ||| combine	count=1
function	adds and resolves the ||| add	count=1
function	of sql statements required ||| sql flush	count=1
arg	secret (which defaults ||| value secret	count=1
function_arg	lookup [arg_2] ||| [arg_2] [function_1]	count=1
function	defines ||| html safe	count=1
module	required by the ||| contrib	count=1
function	a number ||| lazy model	count=1
arg	a value to be ||| field value	count=1
class	the stack of dictionaries ||| context	count=1
module	this accessor retrieves the ||| gis	count=1
function	number of geometries ||| len	count=2
function	take ||| model operation	count=1
class	the ||| base model form set	count=1
module	from applying ||| db	count=1
function	[function_1] limit_choices_to ||| [function_2] [function_1]	count=2
arg	library into the parser ||| parser token	count=1
function	appending a slash to ||| should redirect with slash	count=1
function	pk values ||| pk value	count=1
function	returns a ||| get connection	count=1
function	in ||| patch vary	count=1
module	returns true ||| db models	count=1
arg	the request method ||| request	count=1
module	the spatial_ref_sys or equivalent ||| contrib gis db models	count=1
arg	text ||| text trim_url_limit nofollow autoescape	count=1
arg	is true if ||| request	count=1
class	get ||| base database operations	count=1
module	geosgeometry object from this ||| gis gdal	count=1
function	for a given ||| for	count=1
function	take a ||| model	count=1
class	the query ||| query	count=1
function	the keyword arguments for ||| kwargs	count=1
function	store [function] ||| do get [function]	count=1
class	mapping information and ||| layer mapping	count=1
module	applied migrations ||| migrations	count=1
module	for use in the ||| contrib	count=1
arg	run the ||| result_type chunked_fetch	count=1
function	expired ||| expired	count=1
module_class	[module_1] data ||| [module_1] [class_2]	count=10
module	blocks of rows from ||| models sql	count=1
module	the application label ||| contrib	count=1
function_arg	m2ms to [arg_2] ||| [function_1] [arg_2]	count=1
module	messages to ||| messages	count=1
function	[function] objects in ||| get make [function]	count=3
class	transition dummy ||| dummy	count=1
function	the passed post ||| post	count=1
function_arg	[function_1] is a ||| [arg_2] [function_1]	count=8
function	start [function_2] ||| [function_2] [function_1]	count=2
module	instance guaranteed ||| sessions backends	count=1
function	way ||| get backend timeout	count=2
function	with ||| select	count=1
module	and return the uniqueness ||| contrib gis	count=1
module	a requested static ||| staticfiles	count=1
module	backends that ||| backends	count=2
arg	the arg ||| arg	count=2
module_class	[module_1] coordinate sequence ||| [module_1] [class_2]	count=2
module	inspects [module] ||| [module]	count=3
class	the node ||| node	count=1
class	that has ||| model admin	count=1
function	validation ||| validation	count=1
function	possible ||| dir	count=1
function	cache if ||| cache	count=1
function	single filter clause ||| filter	count=1
function	that uniquely identifies a ||| signature	count=1
function	to ||| generic related	count=1
module	whether the ||| contrib auth	count=1
function	a sorted list ||| app list	count=2
function	the given httpresponse ||| patch vary headers	count=1
class	extra inline ||| inline model	count=1
arg	routine will retrieve ||| feat rel_model rel_mapping	count=1
module	returns none because geometry ||| gis db backends	count=1
class	mapping this ||| layer mapping	count=1
module	[module] converted to ||| [module]	count=1
function	inverse flattening for ||| inverse flattening	count=2
module	retrieves the ||| contrib gis gdal	count=2
class	database is ||| base database	count=1
function	backend based ||| backend	count=1
function	short name for ||| short name	count=1
module	should be deleted if ||| staticfiles management commands	count=1
class	unit_name) ||| spatial ref sys mixin	count=1
arg	encoding ||| encoding	count=2
function	returns the sql version ||| sql	count=1
function	save yet need ||| save base	count=1
function_arg	format [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	[function_1] the paths ||| [function_1] dir [arg_2]	count=2
arg	function that ||| result func cargs	count=1
function	imported and registered ||| lazy model operation	count=1
arg	table_names for ||| table_names	count=2
arg	old [arg] ||| [arg]	count=3
function	format string and ||| format html join	count=2
module	and return all other ||| db backends	count=1
module	fields to use ||| views generic	count=2
module_class	[module_1] [class_2] ||| [module_1] files [class_2] handler	count=1
arg	modelform return ||| request form	count=1
arg	gdal spatialreference ||| srs	count=1
module_class	[module_1] email message ||| [module_1] [class_2]	count=2
function	the placeholder for ||| placeholder	count=1
function	the initial data to ||| get initial	count=1
class	ring ||| polygon	count=2
module	object for [module] query ||| [module]	count=2
module	and closing ||| template	count=1
function	a queryset or a ||| queryset	count=1
function	to migrate the ||| migrate	count=1
function	cookie if the signature ||| cookie	count=1
class	reference projected? ||| ref sys mixin	count=1
function	and appending a slash ||| should redirect with slash	count=1
module	the coordinates ||| contrib	count=1
class	from the given database ||| database operations	count=1
class	list of dates and ||| base date list	count=1
function	str format ||| format	count=1
function	minimum level of ||| set	count=1
function	from the ||| from db	count=1
module	coerce ||| contrib admin templatetags	count=1
class	if the queryset ||| query set	count=1
function	table [function_2] ||| [function_1] [function_2]	count=3
function_arg	compile a [arg_2] ||| [function_1] [arg_2]	count=3
class	year i ||| date format	count=1
module	into migrations ||| db migrations	count=2
function	current system user's username ||| get system username	count=1
function_arg	exception [arg_2] ||| [arg_2] [function_1]	count=1
function	optional [function] ||| [function]	count=3
class	the module specified ||| settings holder	count=1
arg	to the [arg] ||| [arg]	count=3
arg	changed ||| old_field new_field new_type	count=1
function	the spatial reference ||| srs	count=1
function	the sql string ||| as sql	count=1
function	radio_fields ||| radio fields	count=1
class	results from applying ||| query set	count=1
function	names that [function_2] ||| [function_2] table [function_1]	count=2
function	returns main ||| get main	count=2
function	which is the difference ||| difference	count=1
module	routine will do ||| gis	count=1
arg	geometry according to ||| geom prec	count=1
module	fields passed ||| db models	count=1
module	[module] country ||| [module] gis	count=3
class	for configuration variables ||| user settings holder	count=1
class	app or ||| command	count=1
module	the loading of ||| models	count=1
module	the ||| contrib admin	count=58
function	aware datetime [function_2] ||| [function_2] [function_1]	count=1
arg	in ||| parser token	count=2
function	the form ||| form	count=3
function	tuples and when ||| model operation	count=1
module_class	this layer supports ||| gis gdal layer	count=1
module	selects [module_1] [module_2] ||| [module_1] [module_2]	count=2
function	[function_1] objects of ||| [function_2] [function_1]	count=2
arg	a wherenode ||| filter_expr branch_negated current_negated can_reuse	count=1
function	format string ||| string	count=1
function	method this helps non-django ||| html safe	count=1
class	configuration variables not ||| user settings holder	count=1
function	[function] compatibility ||| [function]	count=1
function	types of fields in ||| field types	count=1
function	used in queryset filtering ||| prepare	count=1
arg	constructing the ||| geo_field field_name	count=1
function	the metadata column used ||| geom col	count=1
function	radio_fields dictionary is ||| radio fields	count=1
arg	[arg_1] mimetype ||| [arg_2] [arg_1]	count=4
module	the results from ||| db	count=1
arg	if signature ||| key salt serializer	count=1
function	sql that will ||| sql	count=1
function	assign a simple ||| simple	count=1
function	type returned when ||| field type	count=1
function	statement to create ||| create	count=1
module	a ctypes ||| contrib gis gdal prototypes	count=1
arg	an iterable and values ||| cls iterable	count=1
function	command [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] log ||| [function_1] [function_2]	count=4
module	all ||| db models	count=1
function	sql version of ||| as sql	count=1
module	a feature from the ||| contrib	count=1
module	srid of [module_2] ||| [module_2] [module_1]	count=4
module	if the given ||| contrib admin	count=1
function_arg	available datetimes [arg_2] ||| [function_1] [arg_2]	count=2
class	of files ||| hashed files	count=1
function	the queryset that ||| queryset	count=1
arg	plural based on ||| plural	count=1
function	[function_1] mask ||| [function_2] [function_1]	count=1
class	returns the form ||| form	count=1
class	transaction ||| base database	count=1
arg	files not post ||| files	count=1
function_arg	[function_1] geometry according ||| [function_1] [arg_2]	count=1
function	languages files ||| all	count=1
module	range of different return ||| db models fields	count=1
function	a list of tuples ||| messages	count=1
function	sets ||| sort as sets	count=1
module	the redirect_field_name attribute ||| contrib	count=1
function	[function] name ||| label for [function]	count=1
module	geometry or ||| gis	count=1
class	migration instance ||| migration executor	count=1
function	project templates are ||| handle template	count=1
function_arg	min_num is an ||| min num obj	count=1
class	and resets ||| base database	count=1
function	a random [function_2] ||| [function_1] [function_2]	count=2
module	form ||| views generic	count=1
module_class	[module_1] set in ||| [module_1] query [class_2] annotate	count=1
class	before migrating ||| database wrapper	count=1
class	table index or ||| database	count=1
function	[function] last_login ||| [function] last	count=3
module	returns ||| gis db backends base	count=3
class	get ||| multiple object mixin	count=1
class	dirty flag ||| base	count=1
arg	[arg] accessor ||| [arg]	count=2
function	nodes when they exist ||| nodes	count=1
function	is ||| form	count=1
module	methods ||| cache backends	count=1
module	blocks of rows ||| models	count=1
class	that fields only refer ||| checks	count=1
function	annotations that will actually ||| annotation	count=1
class	value for ||| value dict	count=1
arg	messages after ||| messages response	count=1
function	modification time of ||| last modification	count=1
module	session [module] ||| contrib sessions [module]	count=3
function	model ||| unique together	count=1
arg	encoded hash and ||| encoded	count=1
class	expression ||| expression	count=2
module	the original ||| contrib	count=1
arg	[arg_1] encoded digest ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] a regex ||| [arg_2] [function_1]	count=1
arg	save the returned instance ||| form instance fields	count=1
module	the extra ||| contrib staticfiles	count=1
class	migration instance false and ||| migration	count=1
module	field's ||| models fields	count=1
function	this as ||| as	count=2
module	a string for interoperability ||| utils	count=1
function	database column data type ||| type	count=1
function_arg	[function_1] [arg_2] ||| [function_1] contents [arg_2]	count=1
function_arg	key on [arg_2] ||| [arg_2] [function_1]	count=1
function	geometry database [function_2] ||| [function_2] [function_1]	count=2
arg	in table_names ||| table_names	count=2
function	to their callback applications ||| get commands	count=1
module	for this ||| geos	count=1
arg	a valid language-code found ||| strict	count=1
class	e '0' sunday ||| format	count=1
class	a transaction and resets ||| base	count=1
function	[function_1] db tables ||| [function_1] [function_2]	count=4
class	dictionary of ||| handler	count=1
arg	is true ||| request	count=1
module	of data for certain ||| db models	count=1
arg	true if line a ||| line	count=1
arg	geometry ||| geom	count=5
function	the data to the ||| data	count=1
class	actual date or datetime ||| date field	count=1
function	return a dictionary mapping ||| get	count=1
module	dictionary of ||| db	count=2
class	templates ||| template	count=1
function	in a location returning ||| find location	count=1
function	the po file ||| po file	count=1
function	[function_1] value ||| [function_1] [function_2]	count=3
arg	modelform return an unsaved ||| request	count=1
function	initializes on a ||| init	count=1
module	of ||| contrib	count=2
arg	given context ||| context	count=1
module	[module_1] but doesn't ||| [module_1] [module_2]	count=2
function	user-provides ||| all locale	count=1
module	directory file ] ||| core management commands	count=1
class	or may be converted ||| field	count=1
arg	field on a model ||| model field	count=1
module	with forward references ||| db backends	count=1
module	return ||| core mail	count=1
function_arg	disconnect receiver from ||| disconnect receiver	count=1
class	django model instance the ||| base model	count=2
function_arg	[function_1] arg ||| [function_1] value [arg_2]	count=1
module_class	[module_1] names ||| [module_1] [class_2]	count=2
module	set of fields ||| models sql	count=1
function	the requisite number ||| number	count=1
function	all the corresponding models ||| lazy	count=1
module	the operation ||| contrib gis	count=1
class	subminor ||| post gisoperations	count=1
function	the content for ||| content	count=1
module_class	[module_1] [class_2] they should be rendered ||| [module_1] [class_2]	count=2
function	[function_1] to reset ||| [function_2] [function_1]	count=6
arg	convert objects into strings ||| obj	count=1
module_class	[module_1] [class_2] ||| [module_1] reverse [class_2]	count=3
function	base64 for use ||| base64	count=1
function	or updates the ||| vary	count=1
function	this user ||| user	count=1
module	error ||| prototypes	count=1
arg	[arg] illegally ||| s [arg]	count=3
class	the ||| context	count=2
module	of m rows of ||| models sql	count=1
class	all migration [class_2] ||| [class_2] [class_1]	count=3
function	saving into a ||| db prep save	count=1
function	return an ||| get template sources	count=1
function	with the static prefix ||| get static prefix	count=1
arg	path with ||| path	count=1
module	for [module] ||| [module]	count=31
module	command names ||| core management	count=1
function	the sql that ||| sql	count=5
function	validators for the ||| ip address validators	count=1
module	range of different return ||| models	count=1
module	manager generally the ||| contrib	count=1
module_class	returns a quoted [module_1] [class_2] column ||| [module_1] [class_2]	count=2
arg	checking the given ||| cls opts	count=1
class	database ||| handler	count=1
module	in [module_2] ||| [module_2] [module_1]	count=4
function_arg	namespaces used [arg_2] ||| [function_1] unique [arg_2]	count=1
arg	messages after trying ||| messages response	count=1
function_arg	point with [arg_2] ||| [arg_2] [function_1]	count=1
module	depends on results from ||| models	count=1
function	tuples ||| model operation	count=1
function	instance of [function_2] ||| [function_2] [function_1]	count=4
module	directory file ||| core management commands	count=1
module	a transaction and resets ||| db	count=1
module	returns true if the ||| contrib gis	count=2
arg	absolute path (or ||| path	count=1
function	difference ||| sub	count=2
function	the command ||| command	count=2
arg	the "vary" header in ||| response newheaders	count=1
function	match the migrations in ||| check migrations	count=1
function	for the m2m table ||| get m2m reverse	count=1
class	are ||| template	count=1
function	duration ||| duration	count=1
function	datetime ||| datetimefield	count=1
function	a warning that ||| warning for	count=1
function	value from ||| from	count=2
function	make ||| make	count=1
module	returns the ||| contrib	count=7
function	returns a dictionary ||| get for models	count=1
arg	[arg_1] [arg_2] ||| [arg_2] queryset [arg_1]	count=3
module	registered ||| apps	count=1
arg	adds or ||| response	count=1
module	it in the current ||| contrib sessions backends	count=1
function	returns the freshly rendered ||| rendered	count=1
class	dirty flag ||| database	count=1
arg	value prepared ||| value connection	count=1
module	and views that exist ||| backends	count=1
function	line merge of this ||| merged	count=1
arg	an apps and returns ||| apps	count=1
module_class	[module_1] ogrgeometry ||| [module_1] [class_2]	count=8
function	[function_1] class to ||| [function_2] [function_1]	count=6
class	list of tuples value ||| list filter	count=1
function	the po file ||| write po file	count=2
class	returns true if the ||| query	count=1
function	based on groups ||| groups	count=1
function	use special form ||| get form	count=1
function	and when all ||| model operation	count=1
function	of ||| compile messages	count=1
function	[function] ultimate ||| [function]	count=1
function	choices for ||| get choices	count=1
module	user has ||| auth	count=2
function	*models returns ||| get for	count=1
function	object again ||| deactivate	count=1
function_arg	[function_1] objs ||| [arg_2] [function_1]	count=1
function	all the corresponding ||| model operation	count=1
function	pk values [function_2] ||| [function_1] [function_2]	count=5
arg	connection ||| connection	count=1
function	of this type for ||| for this type	count=1
arg	obj ||| obj	count=1
function	removes the current authenticated ||| remove	count=1
arg	is found ||| css_selector	count=2
function	[function_1] url redirect ||| [function_1] [function_2]	count=1
function	directory file ||| compile messages	count=1
function	queryset that will ||| queryset	count=1
class	in this formset ||| form set	count=1
function	the search and ||| search	count=1
arg	used by modelbase below ||| name parents module attached_to	count=1
function	limit ||| limit	count=1
function	create a technical ||| technical	count=1
module	helper function [module] the database ||| contrib [module]	count=1
arg	the related ||| related	count=1
module	geometry field [module_2] ||| [module_2] [module_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] search results request [arg_2]	count=6
function	datetime value to ||| datetime	count=1
module	a dictionary mapping models ||| models sql	count=1
class	object ||| object mixin	count=1
arg	choices ||| choices	count=1
function	token is an ||| token	count=1
class	the ||| base day archive view	count=1
class	tuples [ ||| command	count=1
function	been ||| lazy model operation	count=1
function	javascript ||| null javascript	count=1
arg	a datatuple of (subject ||| datatuple	count=1
function	direct or indirect relationship ||| recursive	count=1
arg	change ||| form change	count=1
arg	inline formsets ||| request form formsets	count=1
function	backend based upon ||| backend	count=1
arg	model is ||| model	count=1
function	table joins ||| joins	count=1
class	widget used ||| choice widget	count=2
function	or ||| handle template	count=2
function	should be allowed to ||| get allow	count=1
class	[class_1] spatial ||| [class_1] [class_2]	count=1
arg	regex can be ||| regex	count=1
class	for the migration ||| migration	count=1
function	have ||| model	count=1
class	[class] they ||| [class]	count=2
function	[function_1] settings are ||| [function_1] [function_2]	count=4
function	graph ||| graph	count=1
module	is used by the ||| contrib gis	count=1
module_class	returns a [module_1] [class_2] column ||| [module_1] [class_2]	count=2
function	entered in the current ||| current	count=1
function_arg	formset [arg_2] ||| [function_1] [arg_2]	count=4
arg	given username [arg_2] ||| [arg_1] [arg_2]	count=3
function	been removed ||| generate removed	count=1
function	destroy a test database ||| destroy test db	count=1
function	database schema [function_2] ||| [function_2] [function_1]	count=1
module	and resets the dirty ||| backends	count=1
function	locale name (en_us) if ||| locale	count=1
function	function [function] ||| [function]	count=3
arg	check one item ||| model item	count=1
function	main help [function_2] ||| [function_1] [function_2]	count=1
class	key from the cache ||| base cache	count=2
class	content of the response ||| response	count=1
module	transaction and resets ||| db	count=1
module	in the ||| contrib sessions	count=1
module	value ||| contrib gis gdal prototypes	count=1
function_arg	[function_1] related instance ||| [arg_2] [function_1]	count=2
arg	[arg_1] saves too ||| [arg_2] [arg_1]	count=3
function_arg	[function_1] patterns ||| [function_1] resolver [arg_2]	count=3
arg	and target ||| target	count=1
arg	[arg_1] and password ||| [arg_2] [arg_1]	count=3
module	an order_by() ||| db models	count=1
function	the corresponding models ||| lazy model operation	count=1
function	freshly rendered [function_2] ||| [function_1] [function_2]	count=3
arg	exception should be ||| request exception	count=1
function_arg	the object [arg_2] ||| [arg_2] [function_1]	count=1
arg	scoped to 'kind' ||| kind order tzinfo	count=1
function	filesystem path ||| path	count=1
arg	objs in ||| objs	count=1
function	format string in ||| format	count=2
class	data ||| data	count=3
function	[function_1] [function_2] of the database connection ||| [function_2] [function_1]	count=3
module	specified ||| conf	count=1
class	specified in ||| user settings	count=1
function	updates ||| headers	count=1
module	the two ||| contrib gis geos	count=1
function	interval day to second ||| date interval	count=1
module	variables not in this ||| conf	count=1
function	the placeholder ||| placeholder	count=1
class	queryset is ||| query set	count=1
arg	[arg_1] exist ||| [arg_2] [arg_1]	count=4
arg	or none ||| queryset	count=1
class	for this command ||| command	count=1
module	to set this ||| gis gdal	count=1
function	list of ||| all	count=1
function_arg	set y [arg_2] ||| [arg_2] [function_1]	count=1
function	a test database ||| test	count=2
class	[class_1] directories ||| [class_1] [class_2]	count=1
function	the difference ||| difference	count=1
class	nested ||| nested objects	count=1
function	given [function_2] ||| [function_2] [function_1]	count=1
class	(structured like settings ||| handler	count=1
class	from ||| model admin	count=1
function	intersection ||| intersection	count=1
function	("app_label", "modelname") tuples and ||| lazy model	count=1
module	of class ||| db	count=1
function	connected receivers [function] ||| send [function]	count=1
arg	changed it will be ||| new_type	count=1
class	unsaved instance ||| admin	count=1
module	other methods by ||| core cache	count=1
function	[function_1] union ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] results [arg_2]	count=9
arg	character limit and adding ||| limit	count=1
arg	delta to value ||| delta version	count=1
function	to create ||| create generic	count=1
arg	dependencies of the changes ||| changes graph migration_name	count=1
module	the names of all ||| contrib admin	count=1
function	or 'second', returns the ||| trunc	count=2
arg	the first character ||| input_iter	count=1
function	if ||| complete	count=1
module	translation of either ||| utils translation	count=2
function	[function_1] format string ||| [function_2] [function_1]	count=4
function	the fields ||| fields	count=1
function	with the admin log ||| admin log	count=1
class	the database already exists ||| database creation	count=2
function	backend based ||| get backend	count=1
function	[function_1] form for ||| [function_2] [function_1]	count=2
class	point_count ||| ogrgeometry	count=1
module	on the page ||| contrib	count=1
module	information for [module] given ip ||| [module]	count=1
class	given ||| admin	count=1
module	all of the ||| contrib	count=1
module	an ||| admin	count=1
function	method ||| safe	count=1
class	into ||| query	count=1
class	used to enable iterating ||| choice	count=1
class	all the corresponding ||| apps	count=1
function	current language ||| current language	count=4
class	given django model ||| base model admin	count=2
function	have been ||| model operation	count=1
function	been ||| lazy	count=1
module	[module_1] the ||| [module_1] [module_2]	count=139
function	as links ||| links	count=1
module	overridden so [module] ||| [module] gis	count=1
function	passes the ||| passes	count=1
module	stack of dictionaries in ||| template	count=1
function	the po file for ||| po file	count=1
function	query returns the sql ||| as sql	count=1
arg	on routines that ||| func cargs	count=1
class	model instance for the ||| base model	count=1
function	returns the model with ||| get model	count=1
function	the next interval ||| get next week	count=1
class	specified in ||| user	count=1
arg	given form ||| form	count=2
function	manytomanyfield related objects are ||| m2m field	count=1
function	sets ||| as sets	count=1
module	of all the ||| contrib	count=3
function	rolls back to ||| rollback	count=1
function	a style ||| style	count=1
module_class	[module_1] for ||| [module_1] [class_2]	count=8
class	[class_1] [class_2] ||| [class_1] [class_2] check fix default	count=1
function	returns a sequence containing ||| get	count=1
function	for point_count ||| num	count=1
arg	regex with ||| regex	count=1
class	of extra inline forms ||| inline model admin	count=1
arg	a response to indicate ||| response	count=1
module	of datetime objects ||| db models	count=1
class	or has choices ||| model admin	count=1
class	week numeric i e ||| date	count=1
arg	instance change ||| form change	count=1
arg	max-age from [arg] ||| [arg]	count=1
function	copy ||| copy file	count=1
function	returns either the current ||| get current	count=1
module	on [module_2] ||| [module_1] [module_2]	count=3
function	[function_1] an existing ||| [function_2] [function_1]	count=1
function	dict containing the ||| dict	count=1
arg	a function that ||| func	count=3
class	in ||| context	count=1
module_class	for this [class_2] ||| [module_1] [class_2]	count=18
function	the date interval ||| date interval	count=1
class	a warning if ||| base command	count=1
arg	into the parser ||| parser	count=1
function	proj 4 library ||| proj4	count=1
class	values can be ||| field	count=1
arg	from sender ||| sender weak dispatch_uid	count=1
class	'365' ||| date format	count=1
class	extracts ||| template command	count=1
module_class	from this [class_2] ||| [module_1] [class_2]	count=2
function	surface ||| surface	count=1
class	a warning ||| base command	count=1
arg	time zone for ||| timezone	count=1
function	representing all available datetimes ||| datetimes	count=1
arg	a cursor ||| cursor	count=3
function_arg	[function_1] doesn't contain ||| [function_1] [arg_2]	count=3
function	the metadata column used ||| col	count=1
function	the clear [function_2] ||| input [function_1] [function_2]	count=1
function	empty_value_display set on ||| empty value display	count=1
module	return the current ||| views generic	count=2
arg	true if this field ||| field	count=1
class	day of ||| format	count=3
module	yields blocks of rows ||| models	count=1
arg	and :param [arg_2] ||| [arg_2] [arg_1]	count=1
arg	the given instance ||| instance	count=1
arg	path the candidates ||| names_with_path	count=1
class	been ||| apps	count=1
class	model if the model ||| model	count=1
function_arg	in [arg_2] ||| [function_1] naive value [arg_2]	count=1
function	of tables ||| tables	count=1
function	1-based [function] ||| [function]	count=3
function_arg	[function_1] encoded hash ||| [arg_2] [function_1]	count=2
module	from applying ||| db models	count=1
function	header ||| header	count=1
module	requested the next time ||| contrib gis	count=1
module	header in ||| utils	count=1
module_class	[module_1] polygon ||| [class_2] [module_1]	count=4
module	tables and views ||| backends base	count=1
class	for interoperability ||| safe data	count=1
class	a modelform ||| model admin	count=1
module	been [module] page so ||| [module]	count=1
arg	the name ||| name	count=2
function	[ directory ||| messages	count=1
function	for the css ||| css	count=1
class	dictionary mapping ||| layer mapping	count=1
function	non-schema-affecting options have ||| altered options	count=2
function	headers as a bytestring ||| headers	count=1
class	satisfied ||| settings	count=1
function	to hyphens ||| slugify	count=1
function	the content ||| content	count=1
class	of email ||| email	count=2
module	order of the ||| contrib	count=1
class	class are satisfied from ||| holder	count=1
function_arg	filter_horizontal is a ||| filter horizontal obj	count=1
module_class	[module_1] this spatial ||| [class_2] [module_1]	count=2
function	return an ||| save form	count=1
arg	the most recent ||| nodes at_end	count=1
module	for configuration ||| conf	count=1
class	the date ||| date	count=1
function	lookups ||| get	count=1
function	[function_1] [function_2] the database connection ||| base base database wrapper [function_2] [function_1]	count=3
function	for the object ||| context object	count=1
arg	the spatial_ref_sys table ||| auth_name auth_srid ref_sys_name	count=1
module	further ||| utils	count=1
arg	instance ||| form instance fields	count=1
class	model instances ||| model	count=1
function	[function_1] fail silently ||| [function_2] [function_1]	count=1
function	html id ||| id	count=1
module	and the lookup type ||| contrib gis db backends	count=1
function	what language the ||| language	count=1
function	number of ("app_label", ||| lazy model	count=1
function_arg	extended slice [arg_2] ||| [arg_2] [function_1]	count=1
function	find what language ||| get language from	count=1
function	to generate formsets for ||| create formsets	count=1
function	dated [function_2] ||| [function_2] [function_1]	count=4
module	the geometry [module_2] ||| [module_1] [module_2]	count=2
module	a dict of ||| db	count=1
class	connection was ||| wrapper	count=1
function	class to ||| class	count=2
module	leading zeros ||| utils	count=1
function	user-provides languages files ||| all locale	count=1
class	delete ||| delete query	count=1
function	will select objects ||| select	count=1
module_class	[module_1] this session ||| [class_2] [module_1]	count=1
class	always want [class] ||| [class]	count=1
arg	set the value of ||| value	count=1
function	and adds ||| add srs entry	count=1
function_arg	to copy [arg_2] ||| [function_1] [arg_2]	count=3
arg	removedindjango20warning an internal ||| dirs	count=1
function	adds and ||| add	count=1
module_class	email [class_2] ||| [module_1] [class_2]	count=1
function_arg	handle each [arg_2] ||| [function_1] [arg_2]	count=4
module	migrations have unapplied ||| migrations	count=1
function	number of [function_2] ||| [function_1] [function_2]	count=2
arg	with the add_item call ||| item	count=1
module	print ||| management	count=1
arg	each field ||| field	count=1
function	closes the ||| close if	count=1
function	type for this ||| db type	count=1
arg	callback ||| callback	count=1
arg	a more explanatory message ||| cls original_exc	count=1
function	presented by ||| label from instance	count=1
module	applying this queryset to ||| db	count=1
function	[function_1] since the ||| [function_2] [function_1]	count=3
function	through model map generation ||| through model map	count=1
function	nulltranslations() instance this is ||| all	count=1
function	single expression using the ||| expression	count=1
class	a query set in ||| query set	count=1
class	[class_1] nonce ||| [class_2] [class_1]	count=2
module	loading of ||| models	count=1
arg	absolute path (or none ||| root path	count=1
function	fields of the model ||| fields	count=1
module	to all models when ||| db models	count=1
class	the list of ||| base date list	count=1
module	from an admin ||| admin	count=1
arg	related field ||| field	count=1
module	and resets the dirty ||| db backends base	count=1
function	system [function_2] ||| [function_2] [function_1]	count=1
module	of values generate placeholder ||| models	count=1
function	handles merging together conflicted ||| merge	count=1
module	in the extra ||| contrib staticfiles	count=1
module	the messages returning ||| contrib	count=1
module	of ||| db backends mysql	count=4
function	is the union of ||| union	count=1
function	models have been ||| lazy	count=1
class	the ||| query	count=5
function_arg	the css [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	[function_1] which may ||| [function_1] field_name [arg_2]	count=1
module_class	[module_1] [class_2] ||| [module_1] change [class_2]	count=2
function	[function_1] [function_2] for ||| [function_1] [function_2]	count=38
function	geometry attribute (e ||| geom attribute	count=1
function	matches any pattern in ||| matches patterns	count=1
module_class	[module_1] server ||| [module_1] email [class_2]	count=1
function	of sql statements ||| sql	count=1
module	by null" prevents mysql ||| db backends mysql	count=1
function_arg	fields and [arg_2] ||| [arg_2] [function_1]	count=1
function	of interior [function_2] ||| [function_1] [function_2]	count=1
class	new node ||| node	count=1
function	known ||| known	count=1
function	a polygon from ||| from	count=1
function	asserts that ||| assert	count=1
function	key [function_2] ||| [function_2] session [function_1]	count=1
function	object starts ||| start object	count=2
function_arg	validators [arg_2] ||| [arg_2] [function_1]	count=1
class	[class_1] up for ||| [class_2] [class_1]	count=4
function	displayed on ||| list display	count=1
module	takes the ||| contrib gis	count=1
function	to be excluded from ||| exclusions	count=1
function	models ||| lazy	count=1
module	be used to generate ||| models	count=1
arg	if request ||| request	count=1
module	retrieve ||| db backends postgresql	count=2
module	for ||| gis	count=5
function	local ||| localtime	count=1
function_arg	model's 'get_latest_by' option [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	formset ||| form	count=1
function	[function_1] uncaught exception ||| [function_1] [function_2]	count=2
function	name [function] ||| [function] m2m reverse	count=1
function_arg	dict containing [arg_2] ||| [arg_2] [function_1]	count=1
function	all models that ||| related models	count=4
class	true ||| query	count=1
module	doesn't ||| models	count=1
class	class for use in ||| model	count=1
function	adds its information ||| add srs	count=1
function_arg	[function_1] [arg_2] cache-control header as an ||| [function_1] max age [arg_2]	count=1
class	this form ||| form	count=2
function	a single ||| make single	count=1
function	as ||| write	count=1
module	essentially the opposite of ||| db	count=1
module	of what ||| db migrations operations	count=1
module	returns ||| db models	count=2
class	the ||| settings holder	count=2
arg	of the changes so ||| changes graph migration_name	count=1
class	genericforeignkey whose ||| generic relation	count=1
module	in the ||| contrib gis geos	count=1
function	list ||| messages	count=1
function	[function_1] migration ||| [function_1] [function_2]	count=4
function	the model class ||| class	count=1
function	index with varchar ||| index sql	count=1
function	all models ||| related models	count=4
function	be interpolated ||| readable	count=1
function	appending a slash ||| slash	count=1
function	a prefix [function_2] ||| [function_2] [function_1]	count=2
class	as defined in staticfiles_dirs ||| file system	count=1
function	the managers using deconstruction ||| construct managers	count=1
function	returns a projectstate object ||| project	count=1
module	boolean indicating whether the ||| contrib gis	count=1
arg	instance change is ||| change	count=1
function_arg	uncaught exception [arg_2] ||| [arg_2] [function_1]	count=1
class	configuration variables not in ||| holder	count=1
function	select certain [function_2] ||| [function_2] [function_1]	count=4
module	opposed to all models ||| db models sql	count=1
arg	instance change is true ||| form change	count=1
function	checks a ||| check	count=2
arg	will retrieve ||| feat rel_model rel_mapping	count=1
module	model instances based on ||| models	count=1
function	available datetimes for ||| datetimes	count=1
function	save yet need to ||| save base	count=1
module	the found ||| contrib	count=1
class	return a list ||| simple list	count=1
function	points in ||| num points	count=2
function	[function_1] to reset ||| [function_2] by name [function_1]	count=2
function	reset the ||| reset	count=1
module	the current date in ||| views	count=1
arg	value is a localizable ||| value use_l10n	count=1
class	actual date or datetime ||| date time	count=1
function_arg	all namespaces [arg_2] ||| [function_1] resolver [arg_2]	count=1
function	datetimes for the ||| datetimes	count=1
function_arg	[function_1] objs in ||| [arg_2] [function_1]	count=1
module	the update depends on ||| models	count=1
arg	[arg_1] the request ||| [arg_2] [arg_1]	count=2
function	single expression using ||| expression	count=1
function	each time [function] saved ||| clear [function]	count=1
class	secure ||| hasher	count=1
function	url converter ||| url converter	count=1
arg	the host ||| host	count=1
module	[ directory file ] ||| core management commands	count=1
arg	keys ||| keys	count=1
module	the spatial_ref_sys or equivalent ||| contrib gis db	count=1
class	app [class_2] ||| [class_2] [class_1]	count=1
module	easy lookups ||| translation	count=1
module	of ||| models fields	count=5
class	yield this expression ||| expression	count=1
module	of parent classes leading ||| models	count=1
module	of digits ||| models fields	count=1
class	by this hasher ||| password hasher	count=1
function	main [function_2] ||| [function_1] [function_2]	count=2
arg	string [arg] is ||| obj [arg]	count=1
function	user ||| for user	count=2
class	from ||| query	count=1
function_arg	[function_1] given cursor ||| [function_1] [arg_2]	count=4
function	an ||| form	count=1
class	get ||| base date list view	count=3
function	paths to ||| paths	count=1
function	dates and items ||| items	count=1
function_arg	since the [arg_2] ||| [arg_2] [function_1]	count=2
function	return [function_2] ||| year archive view [function_1] [function_2]	count=1
arg	object has ||| request object message	count=2
function	create the file ||| file	count=1
arg	from_email recipient_list), sends each ||| auth_user auth_password	count=1
class	utility for checking ||| gislookup	count=1
class	module ||| user settings	count=1
function	session [function_2] ||| [function_1] [function_2]	count=2
function	if url ||| check url	count=1
function	or a ||| get	count=2
module	helper function [module] the ||| contrib [module]	count=1
arg	for the [arg] ||| [arg]	count=2
module	[module_1] operation instances ||| [module_1] [module_2]	count=8
arg	of inline formsets and ||| form formsets change	count=1
class	not in this class ||| user settings	count=1
function	n-th clone [function_2] ||| [function_2] [function_1]	count=6
function	take ||| lazy model operation	count=1
module	and a ||| apps	count=1
function_arg	[function_1] [arg_2] ||| [function_1] tuples [arg_2]	count=1
function	a modelform return ||| save form	count=1
function	name of the ||| name	count=3
function	slice of ||| set slice	count=1
function	the ||| vary	count=2
module_class	[module_1] coordinate sequence ||| [module_1] gis geos [class_2]	count=1
function_arg	[function_1] a string ||| [function_1] safe [arg_2]	count=1
class	names ||| raw	count=2
arg	for routines that ||| func cargs	count=1
function	save yet need ||| save	count=1
function	model's ||| alter	count=1
arg	mimetype triple ||| mimetype	count=1
function	a new file ||| new file	count=2
class	day of the week ||| date format	count=1
function	corresponding models ||| model operation	count=1
class	(structured like settings ||| connection	count=1
function	to time ||| time	count=1
function	true if the ||| choice has	count=1
arg	regex with [arg_2] ||| [arg_1] [arg_2]	count=1
module	geometry representing the ||| contrib	count=2
function	tuples [function] ||| get [function] models	count=1
class	exist in the database ||| base database	count=1
module	the srid of ||| gis db backends	count=2
function_arg	form [arg_2] ||| [function_1] [arg_2]	count=1
function	text of a dom ||| text	count=1
function	persist ||| login	count=1
class	of ||| query	count=1
module	object from this ||| gis gdal	count=1
module	log the ||| contrib	count=1
function	save yet need to ||| save	count=1
module	customize the ||| contrib auth	count=1
function	[function_1] union of ||| [function_2] [function_1]	count=2
function	the y ||| y	count=3
arg	to the given ||| plan state fake	count=1
class	if the queryset ||| query	count=1
function	merging together ||| merge	count=1
function	valid redirect ||| form valid	count=1
module	of data for ||| db models	count=1
function	a dictionary containing traceback ||| traceback data	count=1
class	connection ||| database	count=1
module	value can be ||| db models	count=1
class	configuration variables not ||| settings holder	count=1
module	for ||| contrib gis	count=5
arg	look ||| object_name	count=1
class	the stack ||| context	count=1
function_arg	name of [arg_2] ||| [arg_2] [function_1]	count=1
function	settings ||| init	count=1
module	backends (memcached ||| cache backends	count=1
class	satisfied from the ||| user settings	count=1
class	class are satisfied ||| holder	count=1
arg	routines ||| func cargs	count=2
function_arg	[function_1] or none ||| [arg_2] [function_1]	count=6
function	compile ||| compile	count=2
class	optional ||| handler	count=1
module	returns the ||| contrib admindocs	count=1
class	for forms ||| form	count=1
function	[function_1] an integer ||| [function_2] [function_1]	count=5
class	this form has a ||| base form	count=1
arg	[arg_1] according ||| [arg_2] [arg_1]	count=3
module	or updates the ||| utils	count=1
class	fields passed into ||| query set	count=1
function	a modelform return an ||| form	count=1
arg	inline formsets and ||| form formsets change	count=1
module	this method to override ||| auth	count=1
class	a ||| database wrapper	count=1
function	[function_1] values on ||| [function_1] [function_2]	count=4
module	list of (column_name ||| db backends sqlite3	count=1
function_arg	[function_1] manager ||| [function_1] [arg_2]	count=3
arg	represented by data ||| data	count=1
module	[module_1] given ||| [module_1] [module_2]	count=18
function	returns the prefix ||| prefix	count=1
function	[function_1] keys ||| [function_1] [function_2]	count=3
function	the clear checkbox ||| clear checkbox	count=1
module	given c arguments ||| gdal prototypes	count=1
class	template and ||| template response	count=1
module	and related stats functions ||| db backends	count=2
function	name this is ||| name	count=1
arg	selector ||| selector	count=1
class	a list of tuples ||| list	count=1
module	indicating whether the ||| contrib gis	count=1
module	mapping the names ||| contrib	count=1
class	model instance [class_2] ||| [class_2] [class_1]	count=6
function	corresponding models have ||| model	count=1
function	field's ||| field	count=1
function	non-django ||| html safe	count=1
module	get ||| core serializers	count=1
module	of ||| db backends base	count=8
function	[function_1] number ||| [function_2] [function_1]	count=1
class	sense ||| node	count=1
class	ring at ||| polygon	count=2
arg	for the given model ||| model	count=1
class	resets the dirty flag ||| database wrapper	count=1
module	perform the operation on ||| contrib	count=1
module	[module] selector selector ||| [module]	count=3
module	or ||| management	count=1
function	[function_1] to update ||| [function_1] [function_2]	count=3
function	(structured like ||| init	count=1
function	specified headers to the ||| headers	count=1
module	converts an integer ||| contrib humanize	count=1
module	string [module] ||| [module]	count=2
function	the date ||| date	count=1
function	area for a ||| area	count=1
module_class	[module_1] geometry ||| [module_1] [class_2]	count=56
module	the ||| db migrations	count=2
function	proj 4 ||| proj	count=1
function	[function_1] vary header ||| [function_2] [function_1]	count=4
arg	the given targets ||| targets plan state	count=1
class	'0' to ||| date	count=1
module	in the current instance ||| contrib sessions	count=1
arg	message to the admins ||| message fail_silently	count=1
class	of this widget ||| widget	count=1
class	database definitions (structured like ||| connection handler	count=1
class	that ||| admin	count=1
arg	to sender for ||| sender weak	count=1
arg	stream or string ||| stream_or_string	count=1
class	fields passed into ||| query	count=1
arg	if signature fails ||| key	count=1
function	for the [function_2] ||| [function_1] [function_2]	count=2
arg	will retrieve the related ||| feat rel_model rel_mapping	count=1
function	site is ||| site	count=1
module	this class are ||| conf	count=1
arg	in the ||| parser	count=2
arg	found absolute path ||| path	count=1
function	storage [function_2] ||| [function_2] [function_1]	count=4
function	empty ||| empty	count=1
module	backends that support returning ||| backends	count=1
module	current instance ||| sessions	count=1
function_arg	removes a [arg_2] ||| [function_1] [arg_2]	count=8
function	to not ||| not	count=2
function	primary key ||| primary key	count=2
function	any [function] models ||| path info with [function]	count=1
arg	cursor object that ||| cursor	count=2
module	if ||| db	count=1
class	file ||| file	count=5
function_arg	returns the [function_1] [arg_2] for an update operation ||| base base database operations [function_1] [arg_2]	count=2
module	manager and ||| db backends base	count=1
module_class	[module_1] [class_2] ||| [module_1] gis utils [class_2]	count=16
arg	the fields ||| fields	count=1
module	field ||| db models fields	count=5
function	serialized ||| to string	count=1
module	the original is ||| contrib	count=1
arg	value of ||| value	count=1
class	can be [class_2] ||| [class_2] [class_1]	count=2
arg	the error [arg_2] ||| [arg_1] [arg_2]	count=1
arg	host ||| host	count=2
function	a password ||| password	count=1
function	m2m ||| m2m reverse attr	count=1
function	context if ||| context data	count=1
arg	if key ||| key salt	count=1
function	*models returns a ||| get	count=1
function	an app config ||| app config	count=2
arg	lookup_type of ||| lookup_type	count=1
function	[function_1] files ||| [function_1] [function_2]	count=5
function	will try [function_2] ||| [function_1] [function_2]	count=3
arg	flags ||| flags	count=1
module	returns gml representation of ||| gis	count=1
class	that fields only refer ||| admin checks	count=1
module	prepares ||| messages	count=1
function	of ("app_label", ||| lazy	count=1
arg	source [arg_2] ||| [arg_2] [arg_1]	count=1
function	a mirror ||| mirror	count=1
module	oracle error code ||| db backends oracle	count=1
module_class	[module_1] for the ||| [module_1] [class_2] engine	count=2
module	and when all ||| apps	count=1
function_arg	[function_1] name in ||| [function_1] [arg_2]	count=4
module	version [module] the ||| [module]	count=1
module	use in this ||| generic	count=2
class	on the command line ||| app command	count=1
arg	object has been successfully ||| object	count=2
arg	iterable and values ||| cls iterable	count=2
function	be interpolated ||| get readable	count=1
arg	surfaces 1*t***t** for two ||| other	count=1
function	datetime datetime to local ||| localtime	count=1
function	special form ||| form	count=1
function	groups ||| group	count=1
class	geometry that have ||| ogrgeometry	count=1
arg	username [arg_2] ||| [arg_2] [arg_1]	count=3
arg	outfile which is a ||| outfile	count=1
function	makes alter ||| alter column	count=1
module	ctypes ||| gdal prototypes	count=1
module	the template ||| contrib	count=1
module	pointer ||| prototypes	count=1
function	country database ||| country	count=1
function	tags and filters from ||| from	count=1
function	user input string ||| user input	count=2
module	a list of date ||| db models	count=1
module	rendered on the ||| contrib admin	count=1
function	sql where clause ||| sql	count=1
function	a reverse ||| reverse	count=1
class	models have been ||| apps	count=1
module	'0' ||| utils	count=2
function	prepopulated ||| prepopulated	count=1
arg	dict ||| key default prefixed	count=1
class	widget used to enable ||| choice widget	count=1
arg	if key ||| key salt serializer	count=1
arg	changes so they ||| changes graph	count=1
function	return all objects related ||| related objects	count=1
class	expression and ||| expression	count=1
arg	routines that should ||| func cargs	count=1
arg	an ||| value	count=1
function	interior [function_2] ||| [function_1] [function_2]	count=1
function_arg	template name ||| find template name	count=1
module	the set of ||| db models	count=1
module	loaders ||| loaders	count=1
function	that doesn't quote aliases ||| quote	count=1
function	the url redirect to ||| redirect url	count=1
arg	mutation on the ||| app_label schema_editor from_state to_state	count=1
class	connection ||| connection	count=1
module	dummy ||| db migrations	count=1
class	the module ||| settings holder	count=1
arg	into strings it's ||| obj	count=1
function	write all ||| send	count=1
function	[function_1] password with ||| [function_2] [function_1]	count=3
function	containing a checkbox widget ||| action checkbox	count=1
function	a unique name ||| create index name	count=1
class	arguments [class] ||| [class]	count=1
function	is true ||| save	count=1
module	stddev and ||| backends	count=1
function	a manytomanyfield ||| m2m	count=1
module	to be output in ||| admin	count=1
function	parses a ||| parse	count=2
function	is returned ||| check	count=1
function_arg	the migrations [arg_2] ||| [arg_2] [function_1]	count=1
arg	field is ||| geom	count=1
module	that [module_1] [module_2] ||| [module_1] [module_2]	count=6
class	this spatial [class_2] ||| [class_2] [class_1]	count=2
module	backends that support ||| db backends	count=1
function	validation ||| get validation	count=1
function	to interval ||| interval	count=1
arg	tables ||| style tables	count=1
function	layer ||| layer	count=1
function	version number and ||| version	count=1
function	handle the [function_2] ||| files file upload handler [function_1] [function_2]	count=2
module	values for this ||| gis gdal	count=1
function	corresponding ||| lazy model operation	count=1
function	creation ||| set creation	count=1
class	queryset ||| serializer	count=1
class	[class_1] database tables ||| [class_2] [class_1]	count=8
function	config ||| config	count=1
module	[module_1] database fields ||| [module_1] [module_2]	count=2
function	the name ||| name	count=4
arg	given a ||| request form	count=1
arg	if the given request ||| request obj	count=2
function	system [function] all modeladmins ||| [function]	count=1
module	to c geos geometry ||| gis geos prototypes	count=1
function	dict containing the data ||| dict	count=1
function	a search form ||| search form	count=2
class	queryset uses the date ||| date	count=1
function_arg	[function_1] to_email ||| [arg_2] [function_1]	count=2
function	[function_1] from ||| [function_2] [function_1]	count=10
function	a slash to ||| redirect with slash	count=1
function	true if ||| save	count=1
module	lines and ||| db backends base	count=1
module	integer [module_2] ||| [module_1] [module_2]	count=2
function	checks each ||| check constraints	count=2
module	transaction and resets ||| backends	count=1
module	all the coordinates in ||| contrib	count=1
function	short [function_2] ||| [function_2] [function_1]	count=1
module	type [module] field ||| [module]	count=1
arg	to the given targets ||| targets plan	count=1
module	of values generate ||| models sql	count=1
function	the app or project ||| handle	count=1
function	all messages to the ||| send messages	count=1
module_class	[module_1] raw ||| [module_1] [class_2]	count=7
class	returns the form at ||| form	count=1
arg	inline formsets ||| formsets	count=1
module	serialize ||| core serializers	count=1
function	unget history as ||| unget history	count=2
class	class are ||| holder	count=1
arg	the returned instance ||| instance	count=1
module	a transaction and resets ||| backends	count=1
class	true ||| set	count=1
class	of the where clause ||| where node	count=1
function	response the ||| response	count=1
function	text of ||| text	count=1
function	the login page ||| to login	count=1
class	without leading zeros i ||| date format	count=1
arg	string with the requisite ||| value max_digits decimal_places	count=1
function	parse the ||| parse	count=1
function	ignored (if it matches ||| matches	count=1
module	[module_1] changelist ||| [module_1] [module_2]	count=4
class	[class_1] queryset ||| [class_1] query [class_2] using alias	count=1
module	authenticates against django's auth ||| contrib auth	count=1
class	true ||| query set	count=1
function	[function_1] help ||| [function_1] [function_2]	count=1
function	of objects ||| objects	count=1
class	to ||| query set	count=1
arg	the key does ||| key	count=1
function_arg	in name [arg_2] ||| [function_1] [arg_2]	count=1
arg	a function and a ||| function	count=1
class	a transaction ||| base database	count=1
module	and returns ||| gis geos	count=1
function	an extra keyword arguments ||| extra kwargs	count=1
function	("app_label", "modelname") tuples ||| model operation	count=1
class	that fields only refer ||| base model admin checks	count=1
module	key checks after they ||| db backends	count=1
arg	update_pk is defined ||| fields update_pk	count=1
function	returns a sorted list ||| get app list	count=1
arg	email and password ||| email password	count=3
arg	return true if data ||| data	count=1
class	in the cache ||| base cache	count=2
arg	given geometry ||| geom	count=2
function	append ||| append	count=1
arg	requisite ||| value max_digits decimal_places	count=1
function	the given geometry ||| geom	count=1
function	all related ||| related	count=1
function	clear [function_2] ||| [function_2] [function_1]	count=1
function	name [function_2] ||| base base database wrapper [function_2] [function_1]	count=3
arg	name [arg_2] ||| [arg_1] [arg_2]	count=1
module	use in this view ||| views generic	count=2
class	that an ||| model admin	count=2
class	framework stating that using [class_1] [class_2] ||| [class_1] [class_2]	count=1
function	string ||| db to string	count=1
arg	deals ||| old_unique_together new_unique_together	count=1
arg	[arg_1] cursor is ||| [arg_2] [arg_1]	count=6
function	blocks until [function_2] ||| [function_2] [function_1]	count=1
function	call the ||| get	count=1
function	chunks of ||| chunks	count=1
function	of ordering [function_2] ||| [function_1] [function_2]	count=2
arg	given a lookup_type ||| lookup_type	count=4
function	"auth user"), [function] ||| [function] swappable settings	count=1
module	in the ||| generic	count=1
module	the week ||| utils	count=1
function	usable ||| usable	count=1
function	allowed to fail silently ||| allow fail statements	count=1
function	this [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] foreign keys ||| [function_1] [function_2]	count=2
class	[class_1] if it ||| [class_2] [class_1]	count=3
class	is ||| model	count=1
module_class	[module_1] [class_2] ||| [module_1] gis gdal [class_2]	count=2
function	form for ||| form	count=1
module	[module_1] interface returns ||| [module_1] [module_2]	count=3
module	queryset is ||| db models	count=1
function	this relationship ||| related	count=2
function	returns a dict containing ||| dict	count=1
function	raster or a sequence ||| get	count=1
class	field ||| related field	count=2
module	description/name string for this ||| gdal	count=1
function	has ||| has	count=7
class	field has an ||| bound field	count=1
function	'hour', 'minute' or 'second', ||| trunc	count=2
arg	data in instance ||| instance	count=1
arg	django forms field instance ||| form_class choices_form_class	count=1
module	the features ||| contrib gis	count=1
class	where clause ||| where node	count=1
function	updates the ||| headers	count=1
function	[function_1] version number ||| [function_1] full [function_2]	count=1
function	allowed to display ||| allow	count=1
function	max ||| max	count=1
function	nested ||| nested	count=1
class	specified in ||| settings	count=1
function_arg	[function_1] arg to ||| [function_1] value [arg_2]	count=1
arg	[arg_1] is unavailable ||| [arg_1] [arg_2]	count=1
function	headers to the ||| headers	count=2
class	variables not in this ||| user settings	count=1
module	queryset ||| db	count=2
function	will try ||| do	count=1
function	its ordinal as ||| ordinal	count=1
module	geometry or raster ||| gis db models	count=1
class	a ||| admin	count=1
module	date ||| models fields	count=1
function_arg	filter_vertical is ||| filter vertical obj	count=1
arg	x y ||| x y	count=2
class	the database ||| base database introspection	count=1
class	the database already exists ||| database	count=2
module	fields passed into ||| models	count=1
module	an order_by() ||| db	count=1
arg	form object each choice ||| request default_choices	count=1
function	function to use ||| func	count=1
function	the ||| model	count=1
class	case-insensitive check for a ||| http response base	count=1
module	the names ||| contrib	count=1
class	checks ||| layer mapping	count=3
function	returns the admin ||| admin	count=1
function	the __html__ method this ||| html	count=1
function	adds data ||| add	count=1
function	sqlite supports [function_2] ||| [function_2] [function_1]	count=3
function	formats a date ||| date	count=1
class	essentially the opposite of ||| query	count=1
module	adds ||| utils	count=1
class	retrieves ||| database introspection	count=3
class	year i e '0' ||| date format	count=1
function	sql and ||| assemble as sql	count=1
function	are ||| handle template	count=2
function	introspected foreign [function_2] ||| [function_1] [function_2]	count=1
function	by http rfc7231 section ||| http	count=1
module	sessions from ||| sessions	count=1
function	[function_1] process ||| [function_1] [function_2]	count=1
function	limit_choices_to for this ||| limit choices to	count=2
function	get the [function_2] ||| [function_1] [function_2]	count=7
function	passes [function_2] ||| [function_2] [function_1]	count=2
module	given c arguments that ||| prototypes	count=1
module	not indicate the particular ||| contrib	count=1
function	handles merging ||| merge	count=1
class	last data value ||| multi value dict	count=3
arg	content mimetype ||| content mimetype	count=2
class	e '1' ||| date	count=1
module	a list ||| management commands	count=1
module	of rows from a ||| models sql	count=1
arg	given query ||| query	count=4
module	[module] should display ||| [module]	count=3
function	[function_1] key for ||| [function_1] [function_2]	count=2
arg	the [arg] ||| [arg] table_alias	count=1
function	of tables in this ||| tables	count=1
function	allowed to display objects ||| get allow	count=1
function	[function_1] engine ||| [function_1] [function_2]	count=2
function	destroy a test ||| destroy test	count=1
function	a relative path ||| relative path	count=1
function	name this is not ||| name	count=1
module_class	to [class_2] ||| [module_1] [class_2]	count=4
module	with long ||| backends	count=1
function	adds ||| add	count=10
module_class	[module_1] app directories ||| [module_1] [class_2]	count=8
function	[function_1] error response ||| [function_1] [function_2]	count=4
arg	instance change ||| request form change	count=1
function	a list of paths ||| all locale paths	count=1
function	all namespaces from url ||| all namespaces	count=1
module	have been imported and ||| apps	count=1
function	[function_1] so ||| [function_2] [function_1]	count=12
function	equals ||| equals	count=1
function	appending a slash ||| should redirect with slash	count=1
class	current session data from ||| session	count=1
function	have been imported ||| model	count=1
function	model with the ||| model	count=1
class	or raster initializing ||| spatial proxy	count=1
module	null" prevents mysql from ||| backends mysql	count=1
arg	a field_name ||| field_name	count=1
class	object ||| base database operations	count=1
function	the storage [function_2] ||| [function_1] [function_2]	count=4
module	database definitions (structured like ||| db	count=1
arg	returns the value ||| value	count=2
class	from the ||| user settings holder	count=1
function	file for ||| file	count=1
module	returns none if ||| db	count=2
arg	limit and adding ||| value limit	count=1
module	settings ||| db	count=1
class	and a number of ||| apps	count=1
arg	node ||| node	count=2
arg	it has changed it ||| new_type	count=1
module	tuples ||| core management	count=1
arg	a value ||| value	count=3
class	queryset that is ||| query set	count=1
module	the contains ||| contrib	count=1
class	return safe ||| safe	count=2
class	coordinates in a list ||| line string	count=2
arg	the arg a string ||| arg	count=1
arg	function and a ||| function	count=1
function	year month and day ||| format	count=1
function	column name [function] ||| [function]	count=2
function	key on assignment invalid ||| key	count=1
module	to perform the ||| contrib gis	count=1
function	modelform return an ||| save form	count=1
module	dictionary mapping models ||| db models	count=1
function	subclass ||| subclass	count=1
class	the ||| form set	count=1
function	expected by ||| adapt	count=3
arg	exception should be ||| exception	count=1
function_arg	prepare a [arg_2] ||| [function_1] [arg_2]	count=4
function	0-based ||| get single external	count=1
function	polygon from ||| from	count=1
module	is ||| models	count=2
function	caching headers to ||| response headers	count=1
module	returns ||| gis db backends	count=16
function	loads [function_2] ||| [function_2] [function_1]	count=2
module	the original is ||| contrib gis geos	count=1
class	curried [class] ||| many [class] many	count=2
arg	value in ||| value timeout version	count=2
arg	removedindjango20warning ||| dirs	count=1
function	the corresponding models ||| model	count=1
module	from applying this queryset ||| db models	count=1
arg	the given other ogrgeomtype ||| other	count=1
function	templates from ||| template source	count=1
class	of a primary database ||| database creation	count=1
function	objects ||| objects	count=4
module	a range of different ||| db models	count=1
module	message [module_2] ||| [module_2] [module_1]	count=4
class	data in the database ||| database	count=1
module	to ||| templatetags	count=1
function	transactions ||| transactions	count=1
module	key ||| utils	count=1
function	rolls back [function_2] ||| [function_2] [function_1]	count=4
function	and when all ||| lazy	count=1
function	ordering by ||| find ordering	count=1
function	the admin url ||| admin url	count=1
module	raster and ||| raster	count=1
function	was ||| was	count=1
function	[function] primed each ||| clear site [function]	count=1
function	the context for ||| context data	count=1
module	directly (if the ||| contrib gis	count=1
function_arg	[function_1] and :param ||| [arg_2] [function_1]	count=5
function	was this model ||| model	count=2
module	stddev and related ||| db backends sqlite3	count=1
arg	the given other ||| other	count=1
class	a modelform ||| model	count=1
function	flush method on the ||| flush	count=1
module	[ directory file ||| commands	count=1
class	is ||| admin	count=1
function	returns limit_choices_to ||| get limit choices to	count=1
module	for this raster ||| gdal raster	count=2
function	backend-specific database ||| database	count=1
function	per save yet need ||| save	count=1
module	but doesn't translate ||| utils	count=1
function	return [function_2] ||| [function_1] [function_2]	count=19
function	an ||| init	count=2
function	names that have associated ||| names	count=1
module	we loaded represent ||| db	count=1
arg	using a localizable ||| use_l10n	count=1
class	given on the command ||| command	count=2
function	[function_1] type ||| [function_1] [function_2]	count=16
function	a clone ||| clone	count=1
class	geometry ||| geometry mixin	count=1
module_class	[module_1] [class_2] which the returned objects ||| [module_1] query [class_2] annotate	count=1
module	converts the ||| contrib	count=1
function	returns a cache key ||| cache key	count=1
function_arg	[function_1] for searching ||| [arg_2] [function_1]	count=4
module	(if the return_geom keyword ||| contrib gis gdal	count=1
class	the settings the ||| settings	count=1
module	a range of different ||| models fields	count=1
function	allowed ||| allow	count=2
function	clears [function] ||| clear select [function]	count=1
class	of this expression ||| expression	count=1
function	an app [function_2] ||| [function_2] [function_1]	count=1
module	[module] those parameters ||| [module]	count=1
function	returns the maximum ||| max name	count=1
function_arg	copy [arg_2] ||| [arg_2] [function_1]	count=3
module	loading of ||| db models	count=1
function	either the current ||| get current	count=1
module	write ||| management commands	count=1
module	sites is ||| sites	count=1
module	the ||| contrib auth management	count=3
arg	path should ||| path	count=1
function	sql string and list ||| sql	count=4
module	specified in ||| conf	count=1
class	from ||| settings	count=1
class	attribute name for ||| base	count=1
module	function [module] ||| contrib [module]	count=1
function	the migrations ||| migrations	count=2
module	by the ||| contrib	count=4
function	db_type(), providing a ||| parameters	count=1
class	queryset to the database ||| query	count=1
function	checks the status code ||| check	count=1
class	model instance ||| base model form set	count=1
function	returns an existing ||| existing	count=1
module	of an ||| db	count=1
arg	absolute path ||| root path	count=1
function	set a bunch ||| set	count=1
class	satisfied ||| user	count=1
arg	and a secret ||| secret	count=1
module	prevents mysql ||| mysql	count=1
function	model matching ||| model	count=1
module	backends don't need ||| backends	count=1
module	this ||| contrib gis db	count=2
class	i e '0' ||| format	count=2
function	allowed to display objects ||| allow	count=1
function	[function_1] name ||| [function_1] object [function_2]	count=1
function	and return ||| get	count=1
arg	for routines that ||| cargs	count=1
arg	object that owns ||| layer_ptr ds	count=1
function	a ||| operation	count=2
arg	delta to value ||| delta	count=1
function	to expand to ||| expand to	count=1
function	interval day to ||| date interval	count=2
module	session [module_2] ||| [module_1] [module_2]	count=1
function	a block ||| block	count=1
module	used by the node ||| contrib gis	count=1
function	lookup ||| build lookup	count=2
function	a url ||| url	count=2
module	the polygon data received ||| contrib gis db backends	count=1
function	the [function] of the ||| proj4 [function]	count=1
class	definitions (structured like ||| connection handler	count=1
module	and returns a ||| db backends	count=1
module	be either a tuple ||| models	count=1
function	custom prepopulated fields ||| get prepopulated fields	count=2
function	an index ||| index	count=1
function	a ||| all locale	count=1
module	true if the ||| contrib admin	count=1
class	the reverse relation ||| reverse one to one	count=2
class	the feed in the ||| syndication feed	count=1
function	returns the language-code ||| get	count=1
module	doesn't populate the cache ||| db models	count=1
module	the current date ||| views	count=1
function	of the names ||| names	count=1
class	current session data from ||| session base	count=1
function	("app_label", "modelname") ||| model	count=1
module	for stddev and ||| db backends sqlite3	count=1
class	[class] doing any ||| [class]	count=1
class	where clause and the ||| where node	count=1
module	blocks of ||| models	count=1
module_class	[module_1] given session ||| [module_1] [class_2]	count=5
class	formset ||| base form	count=1
arg	given length [arg_2] ||| [arg_2] [arg_1]	count=1
module	mapping command names to ||| core management	count=1
class	list of dates ||| list	count=1
class	before migrating a project ||| wrapper	count=1
function	python 2 ||| python 2	count=2
arg	check one item of ||| model item	count=1
function	max number of ||| max num	count=1
arg	retrieves ||| table_name	count=1
module	[module_1] returns ||| [module_1] [module_2]	count=1
function	[function_1] y ||| [function_1] [function_2]	count=1
function_arg	[function_1] dict ||| [arg_2] [function_1]	count=1
function	has a prefix set ||| add prefix	count=1
arg	path (or ||| path prefix	count=1
arg	field if [arg_2] ||| [arg_2] [arg_1]	count=2
module	on results from other ||| models	count=1
module	information in the ||| contrib	count=1
function	prefix to the next ||| bump prefix	count=1
function	new pk [function_2] ||| [function_2] [function_1]	count=6
function_arg	explicitly mark [arg_2] ||| [arg_2] [function_1]	count=1
function	the query ||| query	count=1
module	the changelist ||| contrib admin	count=4
arg	a string ||| string	count=1
class	model instance ||| model form	count=2
arg	list all members ||| recipient_list	count=1
function_arg	[function_1] encoded ||| [function_1] [arg_2]	count=2
function	the primary [function_2] ||| [function_1] [function_2]	count=3
function	from a bounding box ||| from	count=2
arg	with the value ||| value	count=1
function	[function_1] keyword arguments ||| [function_1] form [function_2]	count=1
class	method is head ||| xview middleware	count=1
function	[function_1] file ||| [function_1] [function_2]	count=8
arg	field on an ||| obj field	count=1
module	app or ||| core management	count=1
module	[module_1] the given ||| [module_2] [module_1]	count=2
module_class	[module_1] storage ||| [module_1] staticfiles base [class_2]	count=1
function_arg	passed [arg_2] ||| [function_1] string [arg_2]	count=1
function	of items ||| queryset	count=1
function_arg	return the [arg_2] ||| [function_1] next day [arg_2]	count=3
module	requests for configuration ||| conf	count=1
module	band's parent raster and ||| gdal raster	count=1
module	for backends that ||| backends base	count=1
function	a nodelist if debug ||| nodelist	count=1
module	the dirty flag ||| db backends	count=1
arg	given a modelform return ||| form	count=1
function	uri ||| uri	count=1
class	that can be ||| field	count=1
function	and a number of ||| lazy model operation	count=1
function	in the given ||| vary	count=1
function	fallback with the ||| add fallback	count=1
function	parse a list ||| parse apps and	count=1
module	the length returns ||| gis gdal	count=1
function	kmz ||| kmz	count=1
class	last value ||| multi value	count=1
class	not this geometry is ||| geometry	count=1
function	the distance between the ||| distance	count=1
arg	a cursor object ||| cursor	count=2
module	all the points in ||| contrib	count=1
function	[function_1] the value ||| [function_2] [function_1]	count=3
function	variables ||| get traceback frame variables	count=1
module	tables and ||| backends base	count=1
function	number of interior ||| num interior	count=3
function	expiry time of the ||| expiry	count=1
arg	parser ||| parser token	count=1
function	field is ||| field	count=1
function	saves new content ||| save	count=1
function	the geometry type ogrgeomtype ||| geom type	count=1
function	returns a ||| get for	count=1
arg	stream or ||| stream_or_string	count=1
arg	if key ||| key	count=1
function	is naive ||| is naive	count=2
module	the srid of the ||| contrib gis db	count=2
class	i e '1' ||| date	count=1
module	or project templates are ||| management	count=1
module	given a modelform return ||| contrib	count=1
arg	components to the base ||| base	count=1
function	null field to not ||| not	count=2
class	given srid ||| geo query set	count=1
module	from the ||| core	count=2
class	all migration records useful ||| migration recorder	count=1
arg	objects into strings it's ||| obj	count=1
function	implements the date ||| date	count=1
function_arg	an encoded ||| decode encoded	count=1
module	or project templates ||| management	count=1
module	[module_1] operation ||| [module_1] [module_2]	count=8
function	convert ||| convert	count=1
function	and many-to-many [function] objects ||| prefetch [function]	count=1
function	[function_1] db ||| [function_2] [function_1]	count=6
arg	value value ||| value	count=1
function	field type ||| field type	count=2
class	add ||| base database schema editor	count=1
class	date or datetime ||| date field	count=1
arg	from an entry in ||| cls entry	count=1
function	'second', returns the sql ||| trunc sql	count=2
function	the [function] ||| geom col [function]	count=2
arg	prevent ||| name val	count=1
module	[module] not ||| [module] gis gdal	count=1
function	getting the dated items ||| get dated items	count=1
function	specified headers [function_2] ||| [function_2] [function_1]	count=2
function	that ||| geom output	count=1
function	being exempt from the ||| exempt	count=1
function	[function] in strptime ||| get month [function]	count=1
function	a locale name ||| locale	count=1
arg	true if ||| other	count=1
function	returns the [function] of the ||| postgis lib [function]	count=1
function	returns the ||| get timezone	count=1
arg	"vary" ||| newheaders	count=1
module	postgis raster ||| postgis	count=1
arg	searching ||| cl	count=1
arg	given character limit ||| value limit	count=1
arg	model ||| model	count=19
function	number of points in ||| count	count=1
arg	names and ||| names	count=1
function	[function_1] a test ||| [function_2] db [function_1]	count=3
class	in this class ||| settings holder	count=1
arg	x-header ||| view_func view_args view_kwargs	count=1
function	next interval ||| next month	count=1
class	[class] object ||| [class]	count=3
module	if the oracle error ||| backends oracle	count=1
function	"modelname") tuples ||| operation	count=1
class	the year i e ||| format	count=1
module	models ||| models	count=2
function	valid redirect to ||| form valid	count=1
module	the ||| contrib admin templatetags	count=2
arg	wrapper of format_html ||| sep format_string args_generator	count=1
function	the necessary table joins ||| setup joins	count=1
module	to ||| template	count=1
arg	the geometry ||| geom	count=1
function	a dict ||| model to dict	count=1
function	[function_1] [function_2] not extra_select columns) ||| db models sql query [function_2] [function_1]	count=3
module	the css selector ||| contrib admin	count=2
function	test ||| test	count=8
class	get_new_connection ||| database wrapper	count=1
module_class	[module_1] given ||| [module_1] base base spatial [class_2]	count=2
arg	a queryset to implement ||| queryset	count=1
arg	instance ||| form instance	count=1
arg	[arg_1] email ||| [arg_2] [arg_1]	count=2
function_arg	sql necessary ||| sql field_name tzname	count=1
module	the lookup type ||| contrib gis	count=1
function	block of text ||| block	count=1
function	primary ||| primary	count=1
function	[function_1] georss point ||| [function_1] [function_2]	count=1
function	true if the ||| is ignorable	count=1
function	[function_1] include ||| [function_1] [function_2]	count=1
function	the given model ||| model	count=1
function_arg	true if [arg_2] ||| [function_1] empty value [arg_2]	count=1
class	of database ||| connection	count=1
class	list of tuples value ||| list	count=1
class	from ||| geo model admin	count=1
function	[function_1] of a ||| [function_2] [function_1]	count=4
class	(structured ||| handler	count=1
arg	value ||| value connection	count=1
function	db_type(), providing ||| parameters	count=1
module	side [module_2] ||| [module_2] [module_1]	count=2
arg	in instance ||| instance	count=1
arg	on routines that ||| result func cargs	count=1
function	sql and parameters ||| assemble as sql	count=1
arg	enable or disable ||| force_begin_transaction_with_broken_autocommit	count=1
class	module specified in ||| user settings	count=1
class	dummy to a ||| dummy	count=1
function	semi minor axis for ||| semi minor	count=1
module	identified by the ||| contrib	count=1
function	name (i ||| dir	count=1
arg	a date object so ||| date	count=1
module	a ||| utils translation	count=2
function	file with ||| file	count=1
function	doesn't quote aliases ||| quote	count=1
module	a list ||| utils translation	count=1
function	fallback ||| add fallback	count=1
function	a number [function] string ||| [function]	count=1
module_class	[module_1] [class_2] ||| [module_1] geos [class_2]	count=1
module	returns ||| forms	count=1
module	return the uniqueness keyword ||| contrib	count=1
module	an optional dictionary of ||| db	count=1
class	forward relation ||| forward many to one	count=1
module_class	[module_1] mapping ||| [module_1] [class_2]	count=12
module	if any applied migrations ||| db migrations	count=1
module	true if the queryset ||| db	count=1
module	either side [module_2] ||| [module_2] [module_1]	count=1
function	[function_1] the object ||| [function_2] [function_1]	count=2
function	validate session [function_2] ||| [function_1] [function_2]	count=4
module	return ||| contrib admin	count=3
module	the either side of ||| db models fields	count=1
module	updates ||| utils	count=1
function	[function_1] update ||| [function_1] [function_2]	count=10
class	polygon ||| polygon	count=3
function	returns the language-code ||| get language	count=1
function	a block of ||| block	count=1
arg	to the exception ||| exception	count=1
module	initialization and the value ||| contrib	count=1
module_class	[module_1] error which ||| [module_1] deserialization [class_2]	count=1
function	given a secret (assumed ||| cipher	count=1
module	parent raster ||| gdal raster	count=1
function	context ||| get context	count=1
class	session key and ||| session	count=1
function	will ||| do	count=1
function	returns main version (x ||| get main	count=1
function	as a string ||| write string	count=1
module	[module_1] but with ||| [module_1] [module_2]	count=1
module	for the ||| contrib admin	count=1
module	the results ||| db	count=1
class	the session is ||| session base	count=1
class	[class_1] if ||| [class_1] [class_2]	count=3
function	case ||| case	count=1
function	sets the content ||| content	count=1
function	returns a lookup ||| lookup	count=1
class	django model instance the ||| model	count=2
class	cache at once ||| base cache	count=1
arg	given character limit and ||| value limit	count=1
arg	data using ||| data	count=1
module	of tuples ||| commands	count=1
arg	message [arg_2] ||| [arg_2] [arg_1] extra_tags	count=1
class	cache at once from ||| base cache	count=1
class	this class ||| holder	count=1
function	return an html string ||| text html	count=1
function	[function] primed ||| clear site [function]	count=1
function	in a given ||| make	count=1
function	a date [function_2] ||| [function_2] [function_1]	count=1
arg	encoding as ||| encoding	count=1
function	if field [function_2] ||| [function_1] [function_2]	count=4
class	this queryset to ||| query	count=1
function	the storage [function_2] ||| [function_2] [function_1]	count=4
arg	python-compatible as a field ||| col_name used_column_names is_relation	count=1
module	item being files ||| files	count=1
module	internal or the user ||| contrib admindocs	count=1
class	'objs' to ||| collector	count=1
module	sessions ||| sessions backends	count=1
class	results from applying this ||| query set	count=1
function	remove all the ||| clear	count=1
function	[function_1] update the ||| [function_2] [function_1]	count=2
function_arg	queryset [arg_2] ||| [function_1] [arg_2]	count=3
arg	dimension changed ||| new_field new_type	count=1
module	checks ||| gdal prototypes	count=2
arg	the old [arg_1] [arg_2] ||| status [arg_1] [arg_2]	count=10
function	[function_1] converter ||| [function_2] [function_1]	count=4
function	appending a slash to ||| slash	count=1
arg	connection_reset is ||| connection_reset	count=1
class	class are ||| user	count=1
function	the search ||| search	count=1
function_arg	namespaces used [arg_2] ||| [arg_2] [function_1]	count=1
function	the given httpresponse ||| vary headers	count=1
module	of geometries ||| db models	count=1
function_arg	[function_1] [arg_2] ||| [function_1] next day [arg_2]	count=6
module	[module] type ||| [module] backends	count=3
module	for geos ||| gis geos	count=1
class	transaction and resets the ||| database	count=1
arg	using the current filter ||| using	count=1
module	a list ||| utils	count=1
function	log ||| log change	count=2
function	generate new pk ||| pk	count=1
arg	by extracting positional ||| params varargs	count=1
function	in the first ||| num	count=1
function	response using ||| response	count=1
function	[function_1] options have ||| [function_2] [function_1]	count=5
function_arg	[function_1] [arg_2] ||| [function_1] string template_name [arg_2]	count=3
function	sql ||| assemble as sql	count=1
arg	character limit and ||| limit	count=1
module_class	[module_1] app ||| [module_1] [class_2]	count=8
function	called to manually configure ||| configure	count=1
function	available dates ||| dates	count=1
module	returns the [module_2] ||| [module_1] [module_2]	count=2
function	after the ||| get	count=1
module	properly shortened and uppercased ||| db backends	count=1
arg	geometry in ||| geom	count=1
function	date [function_2] ||| [function_1] [function_2]	count=1
function	return true ||| get make	count=1
arg	[arg_1] in ||| [arg_2] [arg_1]	count=3
function	purposes of comparison ||| table name converter	count=1
function	[function_1] day to ||| [function_2] [function_1]	count=4
function	a point ||| point	count=1
function	ensure all lazy ||| lazy	count=1
module	stddev and related ||| db backends	count=1
function	a number of ||| lazy model operation	count=1
class	for configuration variables not ||| user settings	count=1
module	confuse the admin urls ||| contrib admin	count=1
function	template variable with the ||| get	count=2
class	cache if ||| cache	count=4
class	the session is ||| session	count=1
module	of (column_name referenced_table_name referenced_column_name) ||| db backends sqlite3	count=1
function	a list of sql ||| sql flush	count=1
arg	[arg_1] [arg_2] migration ||| [arg_1] [arg_2]	count=2
class	like ||| connection	count=1
module	they might represent ||| migrations	count=1
module	opposite ||| db	count=1
arg	user_obj from ||| user_obj	count=1
function	choices for use ||| choices	count=1
module	can contain ||| generic	count=1
module	day of ||| utils	count=3
arg	delta to ||| delta	count=1
module	migrations prior to this ||| db migrations	count=1
function	("app_label", "modelname") tuples ||| lazy model	count=1
module	the polygon ||| contrib gis	count=1
function	returns the command ||| command	count=1
arg	arg to ||| arg	count=1
function	the url [function_2] ||| [function_2] [function_1]	count=8
module	this helps ||| utils	count=1
module	e '0' ||| utils	count=2
arg	object each choice ||| default_choices	count=1
class	list ||| command	count=1
class	return ||| generic relation	count=1
module	the uniqueness ||| contrib	count=1
function	and ||| and	count=2
function_arg	adds [arg_2] ||| [function_1] value [arg_2]	count=3
function	another [function] than the ||| [function]	count=1
arg	according ||| prec	count=1
class	for the [class] ||| [class]	count=1
function	should contain [function] ||| get make [function]	count=1
function	attribute ||| attribute	count=1
function	slice of the ||| slice filter	count=1
function	[function_1] aware ||| [function_2] [function_1]	count=1
function	been ||| lazy model	count=1
module_class	of [class_2] ||| [module_1] [class_2] operations quote	count=3
function	[function_1] keyword arguments ||| [function_2] [function_1]	count=3
module_class	[module_1] get_new_connection ||| [class_2] [module_1]	count=1
module	write ||| core management commands	count=1
function_arg	[function_1] [arg_2] as an integer (or ||| [function_1] max age [arg_2]	count=1
function	translate a ||| translate	count=1
function	language the user ||| get language	count=1
class	template and ||| template	count=1
function	version of geos ||| geos version	count=3
function	to user-provides ||| all	count=1
function	corresponding models have ||| operation	count=1
module	retrieves the ||| contrib gis	count=2
module_class	[module_1] spatial ||| [module_1] [class_2]	count=15
function	returns the placeholder for ||| get placeholder	count=1
class	[class_1] [class_2] which the returned objects ||| [class_1] [class_2] annotate	count=2
function_arg	block until [arg_2] ||| [function_1] for popup [arg_2]	count=1
module	range of ||| db models	count=1
module	imported ||| apps	count=1
module_class	this spatial ||| gdal spatial	count=4
class	the month without ||| date	count=1
function	has [function_2] ||| [function_1] change [function_2]	count=2
function	creation counter value ||| creation counter	count=1
module	found on the ||| contrib	count=1
function	related ||| reverse attr	count=1
function	[function_1] time ||| [function_1] cast [function_2]	count=2
function	in the current ||| today	count=1
arg	field_name which may be ||| field_name field_index	count=1
class	the form at the ||| base form	count=1
class	e '0' to ||| format	count=1
class	an unsaved ||| model admin	count=1
function	sequence for ||| seq	count=1
class	database ||| base database wrapper	count=2
function	sql that extracts ||| extract sql	count=4
arg	callback returns ||| callback	count=1
function_arg	[function_1] [arg_2] which lists ||| [function_1] [arg_2] extra_context	count=1
function	[function_1] interior rings ||| [function_1] [function_2]	count=1
module	and views that ||| backends	count=1
arg	[arg_1] from the ||| [arg_1] [arg_2]	count=3
module_class	to this [class_2] ||| [module_1] [class_2]	count=2
class	library used ||| post gisoperations	count=1
arg	should respect that ||| db_field request	count=1
arg	generates a function ||| func argtypes	count=3
class	a foreignkey or has ||| model admin	count=1
arg	in the context ||| parser token	count=2
function	pk values on save ||| pk value on save	count=1
function	returns the prefix ||| get prefix	count=1
function	aggregation period [function] ||| get [function]	count=1
function	union of this geometry ||| union	count=1
function	[function_1] from its ||| [function_2] [function_1]	count=2
function	will return ||| get	count=1
arg	the given table ||| cursor table_name	count=1
module_class	[module_1] [class_2] should be rendered ||| [module_1] [class_2]	count=1
function	reverses the ordering of ||| reverse	count=1
module	true if the given ||| contrib	count=1
function	standard deviation of ||| std	count=1
function	middleware and call the ||| get response	count=1
function	[function_1] models that ||| [function_1] [function_2]	count=4
function	manager for ||| manager	count=2
function_arg	to link [arg_2] ||| [function_1] [arg_2]	count=1
function	and available for ||| available	count=1
function	and adds its ||| add srs	count=1
module	if this ||| gis gdal	count=5
arg	function that returns ||| func	count=1
module	m rows of ||| db models	count=1
class	instance of the field ||| field	count=1
function	[function_1] [function_2] files ||| [function_1] [function_2]	count=3
module	that the returned string ||| contrib	count=1
arg	given geometry in a ||| geom	count=1
function	[function_1] a test ||| [function_1] [function_2]	count=1
function	number of digits ||| format number	count=1
arg	[arg_1] through the ||| [arg_2] [arg_1]	count=1
function	the prepopulated [function_2] ||| [function_2] [function_1]	count=2
function	and ||| process view	count=1
function	given user [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] each message ||| [arg_2] [arg_1]	count=4
module	support for stddev and ||| backends sqlite3	count=1
function	a list ||| all locale	count=1
module	the addgeometrycolumn ||| contrib	count=1
function	to a uri ||| uri	count=1
arg	string depending on the ||| compiler sql params	count=1
module	database ||| db	count=5
class	for configuration ||| user settings holder	count=1
function	test database prompting ||| test	count=2
class	in ||| user settings holder	count=4
module	(if the ||| contrib gis gdal	count=1
function_arg	in the [arg_2] ||| [function_1] [arg_2]	count=3
function	version of ||| version	count=2
function	returns a list of ||| all locale	count=1
function	pk ||| get pk	count=1
function	the form class ||| form class	count=2
arg	to decide which ||| key_func	count=1
module_class	[module_1] session ||| [class_2] [module_1]	count=3
class	essentially ||| query	count=1
module	the headers ||| contrib	count=1
function	a point geometry ||| point on	count=1
arg	given lookup ||| cls opts lookup	count=2
function	salt and using it ||| salt	count=1
arg	given a modelform ||| form	count=1
arg	given [arg] ||| [arg]	count=2
arg	response object ||| response cache_timeout key_prefix	count=1
module	some backends require special ||| backends	count=1
function	html id for it ||| id	count=1
arg	in the given encoding ||| encoding	count=1
module	get the ||| contrib admin	count=1
module	[ directory file ||| core management commands	count=1
class	month without ||| date format	count=1
class	or raster initializing it ||| spatial proxy	count=1
function	[function_1] queryset that ||| [function_2] [function_1]	count=1
class	[class] treats ||| [class] schema	count=3
class	queryset ||| multiple	count=1
module	of whether the ||| contrib auth	count=1
function_arg	[function_1] exactly ||| [function_1] boundary stream stream [arg_2]	count=1
function	field [function_2] ||| [function_1] [function_2]	count=10
module	if the ||| contrib gis geos	count=2
class	of email ||| base email	count=1
function_arg	an object [arg_2] ||| [arg_2] [function_1]	count=1
function	returns a token that ||| token	count=1
class	spatial reference ||| spatial reference	count=14
function	[function_1] model with ||| [function_1] [function_2]	count=1
function	of fields [function_2] ||| db models sql query [function_2] [function_1]	count=2
function	return the url redirect ||| get redirect url	count=1
function	return an unsaved ||| save form	count=1
module	layer ||| gis gdal	count=2
function	string name ||| str	count=2
function	a slash to ||| should redirect with slash	count=1
class	modelform return an ||| admin	count=1
class	closes ||| base database wrapper	count=1
function	[function_1] values ||| [function_1] [function_2]	count=4
module	a list of ||| core management	count=1
class	the opposite ||| query set	count=1
class	to ||| format	count=3
function_arg	by [arg_2] ||| [arg_2] [function_1]	count=4
arg	error checking on routines ||| result func cargs	count=2
module	another manager generally the ||| contrib contenttypes	count=1
function	and when all the ||| lazy model	count=1
function	relations ||| related objects	count=2
class	a transaction ||| base	count=1
function	all objects ||| all objects	count=2
function	[function_1] of ordering ||| [function_2] [function_1]	count=1
function	the admins ||| admins	count=1
module	and returns a list ||| backends	count=1
function	the cache ||| cache	count=2
arg	be done in raw ||| raw	count=1
module	a transaction and ||| db backends	count=1
class	all ||| model	count=1
class	message and extra_tags to ||| message	count=1
function	the specified headers ||| headers	count=1
arg	is compatible with ||| field	count=1
module	this ||| gis db models	count=1
function	javascript ||| javascript	count=1
class	[ directory file ||| command	count=1
module	a list of datetime ||| models	count=1
function	[function_1] modules ||| [function_1] [function_2]	count=1
function	results may contain ||| results	count=1
function	custom url [function_2] ||| [function_1] [function_2]	count=1
arg	given encoding as a ||| encoding	count=1
class	units ||| spatial ref sys mixin	count=1
class	'0' to ||| date format	count=1
function_arg	name of timezone ||| timezone name timezone	count=2
module	the python sqlite3 ||| sqlite3	count=1
function	[function_1] string ||| [function_2] [function_1]	count=11
function	blocks until [function_2] ||| [function_1] [function_2]	count=1
function	decorator ||| safe	count=1
module	system ||| files	count=2
function	installed ||| installed apps	count=1
function	[function_1] type ogrgeomtype ||| [function_1] [function_2]	count=3
arg	self domain and :param ||| potfile	count=1
class	be ||| related field	count=1
function	number of ||| model operation	count=1
function	[function_1] 404 error ||| [function_2] [function_1]	count=3
module	whether the ||| contrib admin	count=1
function_arg	[function_1] [arg_2] to ||| [function_1] [arg_2]	count=12
function	base64 ||| base64 encode	count=2
module	resets ||| backends	count=1
arg	filename content mimetype ||| filename content mimetype	count=3
class	is an optional ||| handler	count=1
function	datetimes ||| datetimes	count=1
arg	the returned instance to ||| form instance fields exclude	count=1
function	the migrations in the ||| check migrations	count=1
arg	num_windows ||| num_windows	count=1
arg	lhs ||| lhs	count=1
module	returns a ||| translation	count=1
class	deep-clone the ||| state	count=1
arg	an index from ||| index	count=1
function	any necessary class setup ||| setup	count=1
function	an iterator over the ||| iterator	count=1
arg	templates ||| template	count=1
module	to ||| translation	count=1
arg	if line ||| line	count=1
class	a list ||| list	count=2
function	to create [function_2] ||| [function_1] [function_2]	count=1
class	migration ||| migration	count=3
function	builds ||| build	count=1
module	[module] fetched ||| [module]	count=3
class	helper function for ||| base	count=1
function	returns the last object ||| last	count=1
arg	routines that ||| result func cargs	count=2
class	unicode string is safe ||| safe bytes	count=1
module	[module_1] the number ||| [module_1] [module_2]	count=3
arg	times ||| context	count=1
function	the given html with ||| strip	count=1
module	returns false if the ||| contrib gis	count=1
class	results from ||| set	count=1
arg	of fields or an ||| fields label	count=1
function	alter ||| alter	count=1
function	columns in given ||| columns	count=3
arg	given a lookup_type of ||| lookup_type	count=1
arg	plural [arg_2] ||| [arg_2] [arg_1]	count=1
function	as migration files ||| write migration files	count=3
module	for [module] given ||| [module]	count=3
arg	path (or none if ||| path prefix	count=1
function	build process ||| process	count=1
arg	sender to all ||| sender	count=2
class	mapping ||| mapping	count=2
class	number of ("app_label", ||| apps	count=1
function	search of the ||| search	count=1
module	a dictionary of ||| db	count=1
arg	a field on a ||| field	count=1
function	[function_1] recent savepoint ||| [function_2] [function_1]	count=2
arg	encoding as a ||| encoding	count=1
class	in this class are ||| settings	count=1
function	per save yet ||| save base	count=1
function	to cast a datetime ||| datetime cast	count=1
class	unless [class] ||| [class]	count=3
function	to '31' ||| j	count=1
function	the modification time of ||| modification	count=1
arg	the paths have ||| paths	count=1
module	the corresponding ||| apps	count=1
function	for introspected foreign ||| can introspect foreign	count=2
function	return a ||| get action	count=1
function	avoid [function_2] ||| [function_2] [function_1]	count=1
arg	a direct relationship ||| m	count=1
module	from ||| backends sqlite3	count=1
arg	a message [arg_2] ||| [arg_2] [arg_1]	count=2
function	keep [function] ||| [function]	count=1
function	to decrypt ||| unsalt	count=1
module	contain helpful ||| views	count=1
function_arg	[function_1] is found ||| [arg_2] [function_1]	count=5
class	in the urlconf can ||| view	count=1
arg	the given lookup ||| cls opts lookup	count=2
function	list of all nodes ||| nodes by type	count=1
arg	values to a ||| values	count=1
function	invalid but only if ||| invalid	count=1
function	to tell ||| authenticated	count=1
function	a test database ||| test db	count=2
function	return a list of ||| get	count=2
module	oracle ||| db backends oracle	count=9
function	returns a random value ||| random function	count=1
module	model _meta fields instance ||| db models fields	count=1
function	list of all ||| show list	count=1
module	the number ||| contrib	count=1
class	objects ||| objects	count=1
class	specified ||| user	count=1
arg	has changed ||| new_type	count=1
class	the number of email ||| email backend	count=2
arg	according to the ||| arg	count=1
function	the relative path to ||| path	count=1
function	list ||| compile	count=1
function	a manytomanyfield ||| m2m field	count=1
function	a sorted list of ||| app list	count=1
module	populates ||| admin templatetags	count=1
arg	delta to ||| delta version	count=1
module	to c ||| prototypes	count=1
arg	the given request ||| request	count=2
arg	a ||| form	count=1
function	[function_1] [function_2] ||| [function_1] [function_2] input_data meta content_length boundary	count=3
class	app or project templates ||| template	count=1
function_arg	or [arg_2] ||| [function_1] latest [arg_2] direction	count=1
module_class	[module_1] engine ||| [module_1] [class_2]	count=4
function	return the version ||| version	count=1
module	the page ||| contrib	count=1
arg	the related instance ||| instance	count=2
class	configuration ||| user settings holder	count=2
function	to fail silently if ||| fail	count=1
function	the list of fields ||| fields	count=1
class	the year i ||| date format	count=1
function	looks like a url ||| url	count=1
function	given user input ||| user input	count=2
class	day of the year ||| format	count=1
class	table ||| database	count=2
arg	character limit and ||| value limit	count=1
arg	it has changed ||| new_type	count=1
arg	messages after ||| messages	count=1
function	a value from ||| from	count=2
arg	cursor with placeholders ||| cursor	count=1
module	the app or ||| core	count=1
function	user [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] m2m ||| [function_2] [function_1]	count=2
function_arg	migrate the [arg_2] ||| [function_1] connection_alias [arg_2]	count=1
function	values on ||| value on	count=2
arg	database [arg] ||| compiler field table_alias [arg]	count=1
class	object be ||| object	count=1
module	if possible ||| conf	count=1
function	redirect to keyword arguments ||| redirect	count=1
module	frees the ||| contrib gis gdal	count=1
function_arg	the sql necessary ||| sql field_name tzname	count=1
function	secret (assumed to be ||| cipher	count=1
function	initializes on an ||| init	count=2
function	for the list of ||| date list	count=1
arg	the given httpresponse object ||| response	count=1
function	type from ||| type	count=1
function	dict containing ||| model to dict	count=1
module	of the name to ||| db models	count=1
function	validators ||| address validators	count=1
function	[function_1] template ||| [function_2] [function_1]	count=1
function	to user-provides languages ||| all locale	count=1
module	to ||| models	count=1
function	header ||| patch vary	count=1
function	default [function_2] ||| [function_1] [function_2]	count=2
class	dictionary mapping this ||| layer mapping	count=1
module	and that the ||| contrib admin	count=1
class	check for ||| response base	count=1
arg	has changed it will ||| new_type	count=1
arg	lookup_type of 'hour', ||| lookup_type	count=1
function	help message for this ||| help	count=1
function	choices for this ||| choices	count=1
arg	function ||| func cargs	count=2
arg	gdal spatialreference system and ||| srs	count=1
module	frees the ||| contrib gis gdal prototypes	count=1
function	a user with ||| user	count=1
class	arguments [class] individual ||| [class]	count=1
function	returns the model ||| get model	count=4
function_arg	post variables and ||| post request	count=1
function	explicitly mark a ||| mark	count=1
module	methods by ||| core cache backends	count=2
module_class	for [module_1] [class_2] ||| [module_1] gis geoip geo [class_2]	count=1
module	of (column_name ||| db backends	count=2
arg	to prevent ||| name	count=1
arg	geometry field lookup value ||| value	count=2
arg	geometry [arg_2] ||| [arg_1] [arg_2]	count=1
module	geometry field [module_2] ||| [module_1] [module_2]	count=1
function	returns an iterable ||| get	count=1
class	handler should be ||| file upload handler	count=1
function	an email ||| email	count=1
module	files in [module_2] ||| [module_2] [module_1]	count=1
function	for a ||| for	count=3
module	] ||| management commands	count=2
function	default wsgi handler ||| handler	count=1
function	password [function_2] ||| [function_2] [function_1]	count=1
arg	by the given cursor ||| cursor	count=1
function	parse the [function_2] ||| [function_1] [function_2]	count=3
class	this handler should ||| upload handler	count=1
function	permissions ||| permissions	count=2
arg	given value contains ||| value	count=1
module	for stddev and ||| db backends	count=1
arg	[arg] to ||| [arg]	count=4
module	doesn't populate ||| models	count=1
arg	given request ||| request	count=3
arg	given allowed_chars ||| allowed_chars	count=1
arg	a message ||| message fail_silently connection	count=2
function	the ||| get new	count=1
module	the coordinate ||| contrib	count=1
function	set z with ||| set z	count=1
function	easy lookups ||| get	count=1
class	form ||| model form	count=1
module	the wkt of this ||| contrib gis	count=1
function	[function_1] [function_2] ||| [function_2] culling [function_1]	count=3
module	edit the ||| contrib admin	count=1
function	saving updates or ||| save	count=1
module	and ||| apps	count=3
arg	a queryset to ||| queryset	count=1
class	the queryset ||| query	count=1
class	path basically this ||| based	count=1
function_arg	adds name [arg_2] ||| [arg_2] [function_1]	count=4
function	[function_1] of ordering ||| [function_1] [function_2]	count=1
function_arg	models that [arg_2] ||| [function_1] [arg_2]	count=1
arg	length and given ||| length	count=1
arg	placeholder needed ||| placeholder	count=1
module	a ||| admin	count=1
function	handle each ||| handle field	count=1
arg	srid if no srid ||| srid	count=1
function_arg	min_num is ||| min num obj	count=1
function_arg	[function_1] a year ||| [function_1] [arg_2]	count=3
module_class	[module_1] or datetime ||| [module_1] [class_2]	count=1
function	the corresponding models ||| lazy	count=1
function	label ||| label	count=2
function	messages to ||| messages	count=1
arg	[arg] this ||| [arg]	count=3
class	is true ||| model admin	count=1
module	for translation [module_2] ||| [module_1] [module_2]	count=4
class	migration ||| migration executor	count=2
class	string for ||| safe data	count=1
function	the first cache ||| cache	count=1
function	the given ||| patch vary	count=1
arg	func to be ||| func using	count=1
module	of the ||| contrib gis	count=41
class	for each ||| form set	count=1
class	database ||| database wrapper	count=2
function	mirror ||| mirror	count=1
function	[function] information ||| sequence [function]	count=3
arg	uses the system ||| app_configs	count=1
arg	instance suitable for ||| instance	count=1
function	a test ||| create test	count=1
function	certain number of chars ||| chars	count=1
function	be allowed ||| get allow	count=1
function	[function_1] url to ||| [function_1] [function_2]	count=3
module	the loading of data ||| models	count=1
function	have been imported ||| lazy model	count=1
function	[function_1] related field's ||| [function_2] [function_1]	count=1
module	the dirty ||| base	count=1
module_class	[module_1] geometry objects ||| [class_2] [module_1]	count=2
class	'0' sunday to ||| date	count=1
function	[function_1] cookie ||| [function_2] [function_1]	count=5
arg	content mimetype triple ||| content mimetype	count=2
function	name to use for ||| name	count=1
function	[function_1] usable ||| [function_2] [function_1]	count=1
class	[class_1] collection ||| [class_1] [class_2]	count=4
module_class	returns a quoted version [module_1] [class_2] column ||| [module_1] [class_2]	count=1
function	centroid ||| centroid	count=1
arg	template_dirs ||| template_dirs	count=1
function	vary header ||| vary on	count=1
class	list of dates and ||| date list view	count=1
class	number returns a decimal ||| decimal	count=1
class	directory ||| command	count=1
function	[function_1] values on ||| [function_2] [function_1]	count=4
class	without leading zeros i ||| format	count=1
module_class	[module_1] geometry collection ||| [class_2] [module_1]	count=11
class	of the year i ||| date	count=1
class	on this [class] relative ||| [class]	count=1
function	a default ||| default	count=1
arg	the content should be ||| content max_length	count=1
class	session key ||| session	count=1
module	a _pointer_ [module] ||| contrib [module]	count=1
module	tuples [ directory file ||| core management	count=1
function	negate the sense of ||| negate	count=1
module	the geometry field ||| contrib	count=3
function	a location returning ||| location	count=1
function	number of ("app_label", "modelname") ||| model	count=1
arg	the given cursor with ||| cursor	count=1
class	specified file from storage ||| storage	count=1
function	[function] (but ||| clear [function]	count=3
class	ogrgeometry ||| ogrgeometry	count=1
function	modification time of ||| modification	count=1
function_arg	if [arg_2] ||| [function_1] [arg_2]	count=1
module	e '0' sunday ||| utils	count=1
function	[function_1] headers to ||| [function_1] never cache [function_2]	count=1
function	[function_1] [function_2] files ||| [function_1] [function_2] files	count=3
arg	filename content [arg_2] ||| [arg_1] [arg_2]	count=4
function	string ||| html join	count=1
class	("app_label", ||| apps	count=1
arg	value as an ||| value	count=1
function	appending a slash to ||| redirect with slash	count=1
function_arg	[function_1] deeper ||| [arg_2] [function_1]	count=4
arg	strings according ||| arg	count=1
arg	that owns ||| layer_ptr ds	count=1
module_class	[module_1] new password ||| [module_1] [class_2]	count=2
module	[module_1] the passed-in ||| [module_2] [module_1]	count=3
function	[function_1] unget history ||| [function_2] [function_1]	count=1
function	state ||| state	count=1
class	to return a list ||| simple list filter	count=1
module	the object represented by ||| contrib admin	count=1
function	to the vary header ||| vary on	count=1
class	self ||| base	count=1
class	for ||| base spatial	count=2
function	(assumed to ||| cipher	count=2
function	[function_1] naive ||| [function_2] [function_1]	count=1
module	("app_label", "modelname") tuples and ||| apps	count=1
class	of the field ||| field	count=3
function	to ||| many to	count=1
function	return [function_2] ||| [function_2] [function_1]	count=20
arg	determines where ||| template subdir	count=1
arg	full_plan ||| state plan full_plan fake	count=1
function	of etags given in ||| etags	count=1
arg	a modelform ||| request form	count=1
function	type for ||| db type	count=1
function_arg	[function_1] variables ||| [function_1] [arg_2]	count=4
function	[function_1] a foreignkey ||| [function_1] [function_2]	count=1
module_class	usually 2 but can [module_1] [class_2] other pop-ups ||| [module_1] [class_2]	count=2
module_class	are present usually 2 [module_1] [class_2] pop-ups opening other pop-ups ||| [module_1] [class_2]	count=2
arg	lineno ||| filename lineno	count=1
class	day of the year ||| date	count=1
function	a not null ||| not null	count=2
function	test database ||| create test db	count=1
function	*models returns a ||| get for models	count=1
function	template ||| find template	count=1
class	these are all the ||| file based cache	count=1
class	of the year ||| date format	count=1
module	checking the ||| contrib gis geoip2	count=1
arg	retrieve ||| handle_spheroid	count=1
module	3-tuple of class import ||| db	count=1
module	band ||| gdal raster	count=2
arg	name of the ||| name	count=1
module	of the field ||| contrib gis db	count=2
module	method to customize the ||| contrib	count=1
arg	:param [arg_2] ||| [arg_1] [arg_2]	count=1
function	sql and parameters ||| as sql	count=1
function	an extra [function] ||| feed extra [function]	count=3
arg	delta ||| delta	count=2
function_arg	prepopulated_fields [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	[function_1] cursor with ||| [arg_2] [function_1]	count=1
function	key to do ||| key	count=1
module	clause ||| sql	count=1
function_arg	[function_1] is an ||| [function_1] [arg_2]	count=5
module	the information in the ||| contrib	count=1
function	the language [function] for the ||| do get language [function]	count=1
module	the ||| contrib gis db models	count=9
module	should be deleted ||| staticfiles management	count=1
function	to ||| generic	count=2
module	for ||| db models	count=1
function	true ||| save	count=1
class	the cache files ||| file based cache	count=1
function	query last executed ||| last executed query	count=2
module	that it ||| utils	count=1
function	find a [function_2] ||| [function_1] [function_2]	count=1
class	is true ||| admin	count=1
function	that returns a geometry ||| output	count=1
module_class	[module_1] this log ||| [module_1] [class_2]	count=2
module	in the ||| contrib gis	count=3
function	[function_1] if ||| [function_1] [function_2]	count=3
class	i e '1' ||| format	count=1
function	placeholder sql and ||| as sql	count=1
class	class ||| user settings	count=1
function	the prefix ||| get prefix	count=1
function	clear checkbox input ||| input clear checkbox	count=1
module	with invalid foreign ||| db backends mysql	count=1
function	raw [function_2] ||| [function_2] [function_1]	count=1
module	clone of [module_2] ||| [module_2] [module_1]	count=1
function	adds data to ||| add	count=1
module	returns the description for ||| contrib admindocs	count=1
function	the given ||| headers	count=1
module	rows with ||| db backends	count=1
function	a foreignkey ||| fk	count=1
arg	retrieve the related model ||| feat rel_model rel_mapping	count=1
class	to the ||| query set	count=1
function	test database prompting ||| test db	count=2
function	line merge of ||| merged	count=1
module	of any length ||| contrib gis	count=1
arg	null placeholder ||| placeholder params	count=1
arg	a specified tolerance ||| tolerance	count=1
module	the ||| contrib admindocs	count=3
function	the sql string ||| sql	count=4
module	is of ||| db models	count=1
arg	a function that returns ||| func	count=1
class	of database definitions (structured ||| handler	count=1
function	be an ||| field	count=1
function	name is needed ||| name raw	count=1
function	just performed an insert ||| insert	count=1
function	the sql where ||| sql	count=1
function	for the list of ||| list	count=1
arg	have a direct relationship ||| m	count=1
arg	inline formsets and a ||| formsets change	count=1
function_arg	[function_1] [arg_2] ||| [function_1] invalid user [arg_2]	count=1
function	of interior [function_2] ||| [function_2] [function_1]	count=1
function	variable in the current ||| setitem	count=1
function	over the ||| results iter	count=1
function	or project ||| handle	count=1
module	dict of ||| db backends	count=1
module	value and [module_2] ||| [module_1] [module_2]	count=1
function	with the ||| get	count=3
function	the primary key ||| get primary key	count=2
function	been imported and ||| lazy model operation	count=1
function	headers ||| serialize headers	count=1
function	a ||| save	count=1
module	is this ||| contrib gis db backends	count=1
function_arg	[function_1] wherenode for ||| [arg_2] [function_1]	count=1
arg	[arg] is not ||| [arg]	count=3
function	handle each ||| handle	count=1
function	registered ||| operation	count=1
arg	each field on an ||| obj field	count=1
arg	"app_label model_name" string ||| model_identifier	count=1
function	and the units name ||| units	count=1
function	adds its information to ||| add	count=1
function	does the internal setup ||| setup	count=1
module	easy lookups by ||| translation	count=1
module	given c arguments that ||| gdal prototypes	count=1
arg	receiver from [arg_2] ||| [arg_2] [arg_1]	count=2
arg	a message ||| message fail_silently	count=2
class	requests for configuration variables ||| user settings	count=1
class	foreignkey or has ||| admin	count=1
arg	flag so that ||| session_key	count=1
function	destroy a test ||| destroy test db	count=3
module	the new ||| contrib auth	count=1
module	into ||| db backends	count=1
class	a ||| model admin	count=2
module	returns a tuple ||| gis gdal	count=1
function	[function_1] [function_2] ||| geos geoscoord seq [function_1] [function_2] index	count=5
class	handler should be ||| memory file upload handler	count=1
function_arg	[function_1] [arg_2] ||| [function_1] sql [arg_2]	count=3
function	returns the [function] ||| postgis lib [function]	count=1
module	the values [module] the existing ||| [module]	count=1
function	drop out ||| modify	count=1
function	[function_1] z with ||| geos geoscoord seq [function_1] [function_2] index	count=1
function	extension of db_type(), providing ||| db parameters	count=1
arg	the form ||| form	count=1
arg	sender ||| sender weak dispatch_uid	count=2
function_arg	language [arg_2] ||| [arg_2] [function_1]	count=3
module	indicate the particular ||| contrib gis	count=1
module	the passed-in ||| contrib gis	count=1
arg	[arg_1] with flags ||| [arg_1] [arg_2]	count=2
function	the total [function] of objects ||| [function]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] table names [arg_2]	count=6
function	the maximum length ||| max name length	count=1
function	current ||| get	count=1
module	returns a ||| utils	count=1
module	mysql ||| db backends mysql	count=3
function	the keyword arguments ||| kwargs	count=1
arg	compute ||| refresh approximate	count=1
function	write the ||| write	count=1
module	creates ||| db backends	count=1
function	to ||| locale	count=1
function	suitably sized batches ||| del batches	count=1
function	of comparison ||| table name converter	count=1
arg	value in a ||| value arg	count=1
class	a list of tuples ||| simple list	count=1
class	to greenwich time ||| time	count=1
function	sql that extracts a ||| extract sql	count=2
class	the date field by ||| date list view	count=1
class	this handler should be ||| memory file upload handler	count=1
function	user input ||| user input	count=2
function	[function_1] change ||| [function_1] [function_2]	count=2
arg	one item of list_filter, ||| item	count=1
class	the session ||| session	count=1
arg	one [arg] model admin ||| obj model [arg]	count=1
class	from the module ||| user settings holder	count=1
module	field with ||| db backends	count=1
class	given [class_2] ||| [class_2] [class_1]	count=5
class	month ||| format	count=1
class	model instance the ||| base model	count=2
function	a string ||| string	count=3
class	the ||| model state	count=2
class	file ||| files mixin	count=2
arg	function and ||| function	count=1
function	the current ||| from current	count=1
module	oracle ||| gis db backends oracle	count=1
module	indicate the ||| contrib	count=1
function	is [function_2] ||| [function_1] [function_2]	count=5
function	to [function_2] ||| [function_2] [function_1] dict data key value	count=3
module_class	usually 2 but can [module_1] [class_2] opening other pop-ups ||| [module_1] [class_2]	count=2
module	running system's terminal ||| core management	count=1
class	app ||| template	count=1
module	the description for ||| contrib	count=1
function	an optional [function] ||| [function]	count=3
arg	response ||| response cache_timeout key_prefix	count=1
module	boundaries of [module_2] ||| [module_2] [module_1]	count=4
arg	given x y z ||| x y z	count=1
function_arg	[function_1] function ||| [function_1] envelope [arg_2]	count=1
function	constructor called ||| init	count=1
module	of fields to ||| models sql	count=1
module	raster with ||| db models	count=1
function	[function] exterior ring ||| [function]	count=1
arg	[arg] will not ||| name opts [arg]	count=3
class	model instance ||| base model admin	count=2
arg	model ||| model field	count=1
arg	context returns ||| context	count=1
class	class ||| settings	count=1
arg	plural based [arg_2] ||| [arg_1] [arg_2]	count=1
class	templates are ||| command	count=1
function	input ||| input	count=3
function	list of paths to ||| paths	count=1
class	of table ||| base database operations	count=1
module_class	the current [class_2] ||| [module_1] [class_2]	count=6
function	__html__ ||| html safe	count=1
arg	strings according to ||| arg	count=1
module	for which this view ||| views generic	count=1
function	check framework to ||| check	count=1
class	check for ||| http response base	count=1
module	creation and returns the ||| contrib	count=1
class	the queryset ||| multiple object	count=1
function	first cache key ||| cache key	count=2
module	the original ||| contrib gis	count=1
arg	password_changed() method ||| user password_validators	count=1
function	maximum ||| max	count=1
module	of date ||| models	count=1
function_arg	[function_1] geometry ||| [arg_2] [function_1]	count=1
arg	skip ||| skip	count=1
function_arg	[function_1] [arg_2] ||| [function_1] path [arg_2]	count=10
module	fields instance of ||| fields	count=1
function_arg	[function_1] num_windows ||| [arg_2] [function_1]	count=1
arg	the response ||| response header_query	count=1
class	form instance with ||| form	count=1
function	point of this geometry ||| point	count=1
function	explicitly [function] ||| [function]	count=1
module	serving files ||| conf	count=1
module	the urlconf can ||| generic	count=1
function	fail ||| fail	count=1
function	the fields ||| order fields	count=1
function	caching headers to the ||| headers	count=1
function	[function_1] field's ||| [function_1] [function_2]	count=1
function	cast a [function_2] ||| [function_2] [function_1]	count=4
function_arg	point with [arg_2] ||| [function_1] handler [arg_2]	count=1
module	on a content-type ||| contrib contenttypes	count=1
class	template ||| template	count=1
function	list of paths ||| list	count=2
arg	'allow_unicode' is false convert ||| value allow_unicode	count=1
arg	in default_settings ||| default_settings	count=1
function_arg	current language [arg_2] ||| [function_1] [arg_2]	count=3
arg	if update_pk is ||| using fields update_pk	count=1
module	of ||| db models sql	count=10
arg	assign ||| index	count=1
class	opposite ||| query set	count=1
class	the database ||| database creation	count=2
module	[module_1] which ||| [module_1] [module_2]	count=1
module	popen ||| core management	count=1
module_class	forward [class_2] ||| [module_1] [class_2]	count=1
module	directory file ||| management	count=1
function_arg	choices for [arg_2] ||| [arg_2] [function_1]	count=2
class	for this ||| bound	count=2
function	get the ||| get context	count=1
module	returns true if this ||| gis	count=1
class	class ||| user settings holder	count=2
arg	a year ||| year year_format	count=1
module	from views ||| db backends sqlite3	count=1
module	routine will do so ||| gis	count=1
module	transaction and resets ||| backends base	count=1
arg	conn_type ||| conn_type	count=1
arg	an [arg_2] ||| [arg_1] [arg_2]	count=1
arg	all [arg] same ||| [arg]	count=1
function	all the cache ||| cache	count=1
function	the app ||| handle	count=1
module	of the data source ||| contrib gis gdal	count=1
class	a password reset for ||| password reset	count=1
function	parse the [function_2] ||| [function_2] [function_1]	count=3
function_arg	a native [arg_2] ||| [arg_2] [function_1]	count=4
module	[module_1] which ||| [module_2] [module_1]	count=1
function_arg	paginate by [arg_2] ||| [arg_2] [function_1]	count=4
function	appending a slash ||| redirect with slash	count=1
function	column numbers and asc/desc ||| columns	count=1
function	list of items for ||| queryset	count=1
arg	already exists ||| path prefixed_path source_storage	count=1
function	sorted list of ||| app list	count=2
class	and resets the dirty ||| base database	count=1
function	an unsaved ||| form	count=1
function	[function_1] [function_2] false if there's an ||| at [function_1] [function_2]	count=1
function	timezone to aware in ||| make aware	count=1
function	load [function_2] ||| [function_1] [function_2]	count=4
arg	from the headers given ||| request method headerlist key_prefix	count=1
class	geometry collection ||| geometry collection	count=9
class	to load the objects ||| objects	count=1
class	session is set ||| session	count=1
arg	model is [arg_2] ||| [arg_2] [arg_1]	count=1
function	a simple ||| simple	count=1
function	prefix ||| prefix	count=8
arg	response object ||| response cache_timeout	count=1
class	with a template ||| template	count=1
arg	a field_name [arg_2] ||| [arg_2] [arg_1]	count=3
arg	a modelform return an ||| request	count=1
module	sort ||| core serializers	count=1
module	the perimeter of the ||| contrib	count=1
class	spatial lookup values ||| base spatial	count=1
function	messages ||| messages	count=4
function	units name and will ||| units	count=1
arg	retrieve the ||| dist_val lookup_type handle_spheroid	count=1
arg	value to be used ||| field value	count=1
module	project templates ||| core	count=1
arg	files not ||| files name	count=1
module	some backends ||| backends	count=1
function	test ||| destroy test	count=1
function_arg	the managers setting ||| managers subject	count=1
arg	'test' sub-dictionary ||| alias	count=1
module	a list of ||| db backends sqlite3	count=1
class	from the module specified ||| settings holder	count=1
function	an extra ||| extra	count=1
function	joins for the passage ||| setup joins	count=1
function_arg	the managers [arg_2] ||| [arg_2] [function_1]	count=1
function	a random ||| make random	count=1
class	for the object's primary ||| base model form	count=1
class	password ||| password	count=3
class	database already ||| database	count=2
function	surface of ||| surface	count=1
class	of ||| apps	count=1
function	aliases in ||| aliases	count=1
function	clone ||| clone	count=2
arg	log-in page ||| test_func login_url redirect_field_name	count=1
function_arg	the admins [arg_2] ||| [function_1] [arg_2]	count=1
class	transaction and resets the ||| base database wrapper	count=1
module	the oracle error ||| oracle	count=1
arg	defined in submodules ||| pkg	count=1
function	through ||| generate through	count=1
class	templates are ||| template command	count=1
class	the ||| wrapper	count=1
arg	a given time zone ||| timezone	count=2
function_arg	[function_1] it ||| [arg_2] [function_1]	count=5
function	a localizable type ||| localize	count=1
class	[class_1] server ||| [class_1] [class_2]	count=3
function	with the requisite number ||| format number	count=1
class	driver ||| driver	count=1
function	parse a ||| parse apps and model	count=1
function_arg	the sql [arg_2] ||| [arg_2] [function_1]	count=2
function	returns the value to ||| value	count=1
module	any applied migrations have ||| db migrations	count=1
module	sessions from the ||| contrib sessions	count=1
class	module specified in ||| settings	count=1
function	[function_1] tags ||| [function_2] [function_1]	count=1
module	be either ||| db models	count=1
arg	via the [arg] ||| [arg]	count=1
arg	given cursor with placeholders ||| cursor sql params	count=1
function_arg	managers [arg_2] ||| [arg_2] [function_1]	count=1
function	the creation [function_2] ||| [function_1] [function_2]	count=1
function	using the same format ||| format	count=1
function	checks [function_2] ||| [function_2] [function_1]	count=2
arg	schema_editor ||| schema_editor	count=1
module	if the original ||| contrib gis	count=1
function	this helps non-django ||| html	count=1
function	returns a set containing ||| get	count=1
function	paths to user-provides ||| locale paths	count=1
module	to the full template ||| template	count=1
module	point ||| gis geos	count=1
function	start of the ||| start	count=1
arg	regex with [arg_2] ||| [arg_2] [arg_1]	count=1
function	receive [function_2] ||| [function_2] [function_1]	count=1
function	is "true" (i ||| do if	count=1
module	whether the this ||| gdal	count=1
module	mapping the names of ||| contrib admin	count=1
function	[function] month ||| [function] month	count=1
class	a password [class_2] ||| [class_1] [class_2]	count=2
function	being constructed ||| formfield	count=1
function_arg	the search [arg_2] ||| [function_1] results request queryset [arg_2]	count=1
function	the m2m ||| get m2m reverse attr	count=1
function	the custom url converter ||| url converter	count=1
function	to the ||| get new	count=1
module	checks the given ||| contrib gis geos	count=2
function_arg	[function_1] receiver to ||| [arg_2] [function_1]	count=1
class	for ||| base spatial field	count=2
module	returns a geosgeometry the ||| contrib	count=1
function	[function_1] connection ||| [function_2] [function_1]	count=3
class	in ||| user	count=2
arg	encoding to ||| encoding	count=1
function	last argument ||| arg errcode	count=1
module	most session [module] ||| contrib sessions [module]	count=3
module	frees the ||| contrib gis	count=1
class	its dictionary mapping ||| mapping	count=1
arg	retrieve the distance ||| lookup_type handle_spheroid	count=1
function	[function_1] [function_2] ||| [function_1] never cache [function_2]	count=3
function	checks ||| check constraints	count=2
arg	key generated from key_salt ||| key_salt value	count=1
function	returns an sql query ||| sql	count=1
function	decorator that ||| html	count=1
function	in the cache ||| cache	count=1
arg	datatuple of [arg_2] ||| [arg_1] fail_silently [arg_2]	count=1
function_arg	connect receiver to ||| connect receiver	count=1
function	[function_1] associated django ||| [function_2] table [function_1]	count=1
class	spatial ||| spatial	count=17
function	by http ||| http	count=2
function	function to ||| func	count=1
module_class	in the app ||| contrib staticfiles app	count=1
arg	[arg_1] email and ||| [arg_1] [arg_2]	count=2
arg	the value [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	object this [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	exception subclass [arg_2] ||| [function_1] [arg_2]	count=1
arg	variables and then checked ||| request	count=1
function	translate the string ||| translate	count=1
arg	instance through ||| instance	count=2
module	dirty flag ||| backends base	count=1
module	by null" prevents mysql ||| mysql	count=1
class	app or ||| template	count=1
function	[function_1] starts ||| [function_2] [function_1]	count=8
function	if url namespaces used ||| url namespaces	count=1
arg	of lookups specified ||| lookups	count=1
arg	the value [arg_2] ||| [arg_1] [arg_2]	count=1
function	return the [function_2] ||| [function_1] related [function_2]	count=8
module	given c ||| gis gdal prototypes	count=1
function	the media file ||| file	count=1
function	method this ||| html safe	count=1
function	return the modification time ||| last modification	count=1
function	the __html__ method this ||| safe	count=1
function	context ||| context data	count=2
module	the node class ||| contrib	count=1
function	wkt text of ||| wkt	count=1
function	static prefix ||| static prefix	count=2
module	the ordinates with the ||| contrib gis db	count=1
module	and related stats ||| db backends	count=2
class	a transaction ||| base database wrapper	count=1
function	name of [function_2] ||| base base database wrapper [function_2] [function_1]	count=3
class	suggested [class] ||| [class]	count=1
function	of city information ||| city	count=1
function_arg	the search [arg_2] ||| [arg_2] [function_1]	count=2
module_class	[module_1] data ||| [module_1] gdal [class_2]	count=10
arg	cursor is closed when ||| cursor	count=1
function	core mail emailmultialternatives to ||| send mail	count=1
function	remove ||| remove index	count=1
function	number of ||| count	count=3
module	if there is a ||| utils	count=1
function	prepare a ||| prepare	count=1
arg	locale ||| locale	count=1
function	period [function] dates 'year', ||| get [function]	count=1
function	given [function] depends ||| [function]	count=1
function	configuration variables ||| init	count=1
module	if the queryset is ||| db	count=1
function	is a [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] necessary ||| [arg_2] [function_1]	count=3
function	css class ||| css class	count=2
function	pk values on save ||| get pk value on save	count=1
function	the ||| lazy	count=1
module	or string ||| utils	count=1
module	code and returns ||| gis geos prototypes	count=1
module	model _meta fields instance ||| fields	count=1
module	the translation of either ||| utils translation	count=1
arg	path (or ||| root path prefix	count=1
arg	callable ||| func	count=1
function	updates the ||| vary headers	count=1
function	a list of tuples ||| compile messages	count=1
class	a number of ||| apps	count=1
class	requests for ||| holder	count=1
function	checks the [function_2] ||| [function_2] [function_1]	count=3
function	all the corresponding ||| lazy	count=1
module	support for stddev and ||| db backends	count=1
class	the form needs ||| form	count=1
function	key of radio_fields dictionary ||| radio fields key	count=1
module	files [module_2] ||| [module_1] [module_2]	count=1
module	that it is ||| utils	count=1
function	ordering ||| get ordering	count=1
function	[function_1] on ||| [function_2] [function_1]	count=5
arg	key does not already ||| key	count=1
function	the app or ||| template	count=1
function	period [function] ||| get [function]	count=1
function	httpresponse object ||| patch vary	count=1
function	change ||| change	count=2
arg	an index [arg_2] ||| [arg_2] [arg_1]	count=2
function	yields formsets ||| formsets with	count=1
function	storage engine for a ||| storage engine	count=1
function_arg	[function_1] it's ||| [arg_2] [function_1]	count=2
function	languages in ||| languages	count=1
arg	used for get/post accesses ||| val	count=1
arg	creates the ||| autoclobber keepdb	count=1
function	lifting of getting the ||| get	count=1
arg	to parse ||| cls parser	count=1
module	this accessor retrieves ||| gis	count=1
arg	convert a key into ||| key	count=1
function	adds ||| patch vary	count=1
module	tries ||| db models sql	count=1
arg	occur in the full_plan ||| full_plan	count=1
module	the given geometry field ||| contrib	count=2
arg	changed ||| table old_field new_field new_type	count=1
function	parses ||| parse	count=3
function	are ||| init	count=1
module	sensitive [module] those ||| [module]	count=1
class	day ||| date	count=3
arg	a password_changed() method ||| user password_validators	count=1
function	[function_1] media prefix ||| [function_2] [function_1]	count=4
class	e '1' ||| date format	count=1
module	the return_geom ||| contrib gis gdal	count=1
function_arg	block until [arg_2] ||| [arg_2] [function_1]	count=1
arg	creates the sql for ||| with_limits with_col_aliases	count=1
module	to c [module_2] ||| [module_2] [module_1]	count=3
class	the command ||| label command	count=1
class	of database ||| connection handler	count=1
function	type returned when the ||| field type	count=1
class	the queryset ||| serializer	count=1
module	for ||| contrib admin	count=1
class	a password reset for ||| password reset token	count=1
arg	a decorator for functions ||| func	count=1
function	current transaction is committed ||| on commit	count=1
arg	or ||| template	count=1
arg	header ||| header	count=1
arg	of any messages ||| messages	count=1
module_class	from the [class_2] ||| [module_1] sessions backends [class_2]	count=2
module	depends on ||| db models	count=1
function	of this [function_2] ||| [function_2] [function_1]	count=1
module	support for stddev and ||| db backends sqlite3	count=1
arg	fill in ||| select opts root_alias cur_depth	count=1
module	returns a _pointer_ [module_1] [module_2] ||| [module_2] [module_1] wkbreader read	count=3
function	not return 0 ||| check zero	count=1
arg	a response so that ||| view_func	count=1
function_arg	items this [arg_2] ||| [arg_2] [function_1]	count=2
class	uses the date ||| date	count=1
function	and when all the ||| model operation	count=1
class	this node ||| node	count=1
arg	an unsaved ||| request	count=1
class	files ||| hashed files mixin	count=1
class	formset ||| form set	count=2
module	the following ||| contrib gis	count=1
arg	project templates are ||| template	count=1
function	static [function_2] ||| [function_1] [function_2]	count=2
function	[function] line (usually ||| fetch [function]	count=3
arg	the multipartparser object ||| meta input_data upload_handlers encoding	count=1
function	models have ||| lazy	count=1
class	an optional dictionary of ||| handler	count=1
class	template rendered with the ||| template response	count=1
function	all forward [function] ||| [function]	count=3
class	files ||| file based	count=1
function	iterable of app ||| app	count=1
function	calls clean_fields [function] and validate_unique ||| full [function]	count=1
function	to be displayed on ||| list display	count=1
arg	to the query ||| query	count=1
class	and resets the ||| base database	count=1
class	[class_1] [class_2] ||| [class_1] [class_2]	count=203
function	is empty ||| empty	count=1
class	the ||| holder	count=1
class	an optional dictionary ||| connection handler	count=1
function	returns the sql where ||| sql	count=1
function	[function_1] languages in ||| [function_1] [function_2]	count=4
function	valid [function_2] ||| [function_2] [function_1]	count=1
module_class	[module_1] template rendered ||| [module_1] [class_2]	count=5
class	from applying this queryset ||| query set	count=1
function	not null ||| ask not null	count=8
class	objects when [class] ||| [class]	count=1
function	format [function_2] ||| [function_1] [function_2]	count=5
module	other methods [module_2] ||| [module_1] [module_2]	count=3
class	returns true if the ||| set	count=1
function	to lookup the template ||| template	count=1
module	backends that return a ||| backends base	count=1
function	[function_1] in the ||| [function_2] [function_1]	count=6
arg	in the ||| timeout version	count=1
function	nodata ||| nodata	count=1
function	add ||| add index	count=1
arg	[arg_1] changed ||| status [arg_1] [arg_2]	count=3
function	version number [function_2] ||| [function_2] [function_1]	count=2
arg	column for [arg_2] ||| [arg_2] [arg_1]	count=2
module_class	database this [class_2] ||| [module_1] [class_2]	count=4
function	true if ||| is	count=2
arg	[arg_1] in ||| [arg_1] [arg_2]	count=3
function	introspected [function_2] ||| [function_2] [function_1]	count=2
class	this geometry ||| geometry	count=1
function_arg	to [arg_2] ||| [function_1] [arg_2]	count=1
function	validators for ||| validators	count=1
module	rows with invalid ||| db backends	count=1
class	true if the ||| query	count=1
module	returns true if ||| contrib gis	count=1
function	[function_1] relation ||| [function_1] [function_2]	count=1
function	directory ||| messages	count=1
function	[function_1] media ||| [function_2] [function_1]	count=4
class	on this [class] relative to ||| [class]	count=1
module	migrations with ||| migrations	count=1
class	this [class] relative to ||| [class]	count=1
module	forms in ||| forms	count=2
function	allowed to fail ||| allow fail statements	count=3
function	fields and ||| fields	count=1
function	cast a datetime value ||| datetime cast	count=1
function	links ||| links	count=1
module	there will be ||| models	count=1
function	closes the current ||| close if unusable	count=1
function_arg	adds headers [arg_2] ||| [function_1] [arg_2]	count=2
module	backends require ||| db backends base	count=1
module	from the coordinate ||| contrib gis geos	count=1
module	or the user is ||| contrib	count=1
function	[function] (but not ||| clear [function]	count=3
function	number of ("app_label", "modelname") ||| lazy	count=1
class	on the command ||| app command	count=1
class	set ||| base database operations	count=1
module	this queryset to ||| db models	count=1
arg	objs ||| objs field	count=1
arg	field_name ||| field_name	count=1
function_arg	[function_1] source and ||| [arg_2] [function_1]	count=1
module_class	[module_1] params ||| [module_1] [class_2]	count=4
arg	limit and ||| limit	count=1
arg	spatialreference system and ||| srs	count=1
arg	[arg] same leading ||| [arg]	count=2
function	an existing ||| existing	count=1
function	[function] locale ||| process [function]	count=1
class	a string for ||| safe data	count=1
function_arg	returns the [arg_2] ||| [function_1] del batches [arg_2]	count=2
module	the ||| contrib gis admin	count=2
arg	given instance finds ||| instance	count=1
function	[function_1] type for ||| [function_2] [function_1]	count=3
function	deep-clone the ||| construct	count=1
module	with the ||| contrib gis db models	count=1
function	a site ||| site	count=1
function	"modelname") tuples and when ||| lazy	count=1
class	engine ||| engine handler	count=1
module	models to ||| db models	count=1
module	a list of tuples ||| core management commands	count=1
class	the value [class] saving in ||| [class]	count=1
function_arg	[function_1] attribute of ||| [function_1] value selector [arg_2]	count=3
function	name ||| normalize col name	count=1
module	opposite ||| db models	count=2
module_class	given geometry field to [module_1] [class_2] ||| [module_1] [class_2]	count=2
class	of form in the ||| base form set	count=1
module	and ||| backends	count=17
module	but doesn't translate them ||| utils	count=1
module	and return the uniqueness ||| contrib	count=1
module	built-in ||| backends	count=1
function	return the week for ||| get week	count=1
function	the given fields ||| fields	count=1
arg	given ||| plan state	count=1
function	the [function_1] [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] given table ||| [function_1] column [arg_2]	count=3
module	selects [module] ||| [module]	count=1
class	from applying this ||| set	count=1
arg	from sender for ||| sender weak	count=1
module	fields passed into ||| db models	count=1
module	from ||| db	count=1
module	either side [module_2] ||| [module_1] [module_2]	count=1
function	returns the initial ||| get initial	count=1
arg	an index ||| index	count=1
class	model ||| query set	count=1
class	deserialization ||| deserialization	count=1
class	can ||| storage	count=1
class	case-insensitive check for ||| http response base	count=1
function	the admin log for ||| admin log	count=1
module	a 3-tuple of class ||| db	count=1
function	when all the ||| model	count=1
class	app [class_2] ||| [class_1] [class_2]	count=1
module	that ||| admin	count=1
arg	default_settings ||| default_settings	count=1
function_arg	list_display_links [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	[function_1] a manager ||| [function_1] [arg_2]	count=3
function_arg	the template [arg_2] ||| [function_1] [arg_2]	count=4
function	week ||| get week	count=1
module	for this ||| generic	count=2
module	the specified index the ||| contrib gis geos	count=1
function	[function] when ||| get [function] at browser	count=2
function	a quoted etag return ||| quote etag	count=1
function	[function_1] map ||| [function_1] [function_2]	count=2
arg	[arg_1] y ||| [arg_2] [arg_1]	count=2
module	all models when ||| db models sql	count=1
function	a prefix ||| prefix	count=2
function	pk values on ||| pk value on	count=1
module	the model ||| contrib	count=1
arg	format ||| format	count=1
class	or not this handler ||| upload handler	count=1
class	is an optional dictionary ||| handler	count=1
class	the ||| template command	count=2
function	fields [function_2] ||| models sql query clear [function_2] [function_1]	count=1
function	http caching headers ||| response headers	count=1
function	number of fields in ||| num fields	count=2
function	url is ||| url	count=1
function	many-to-many [function] objects ||| prefetch [function]	count=1
class	a list of all ||| base	count=2
arg	function ||| result func cargs	count=2
function	the command [function_2] ||| [function_2] [function_1]	count=1
module	return an unsaved ||| contrib admin	count=1
class	value on every ||| value	count=1
function	return a file object ||| file	count=1
function	proj 4 representation for ||| proj	count=1
function	save ||| save	count=3
function_arg	string pointer [arg_2] ||| [function_1] result func [arg_2]	count=1
class	year ||| date	count=1
module	is internal or the ||| contrib	count=1
module	tuples ||| core	count=1
arg	a ctypes ||| argtypes errcheck strarg	count=1
function	geometry or raster or ||| get	count=1
class	for a given connection ||| connection	count=1
class	leading zeros i ||| date	count=1
function	not ||| init	count=1
class	transaction and resets the ||| database wrapper	count=1
class	arguments to this command ||| base command	count=1
class	version [class] ||| [class]	count=2
module	of all tables and ||| backends	count=1
function	get a form field ||| formfield	count=2
function	are satisfied ||| init	count=1
class	through the reverse ||| reverse	count=1
function	the [function_2] ||| [function_2] [function_1]	count=14
function	extent of this ||| extent	count=1
function	fields of ||| fields	count=1
arg	the key ||| key	count=1
function	[function_1] number ||| [function_1] [function_2]	count=1
function	the current language ||| get current language	count=6
class	numeric ||| date format	count=1
module	blocks of rows from ||| db models	count=1
module	queryset is ||| models	count=1
module	is ||| admin	count=1
class	the cache for certain ||| base cache	count=1
function	next ||| next	count=3
module	a modelform return ||| admin	count=1
module	geos ||| geos	count=2
class	set ||| database wrapper	count=1
function	to cast ||| cast	count=1
function	from ||| from db	count=2
module	if the original is ||| contrib	count=1
function	need temp ||| temp	count=1
module	all the configured loaders ||| template loaders	count=1
module	this ||| db	count=2
arg	[arg_1] given allowed_chars ||| [arg_2] [arg_1]	count=2
function	of the javascript ||| null javascript	count=1
arg	given name and ||| name	count=1
function	alais ||| num coords	count=1
function	negate the ||| negate	count=1
function_arg	string [arg_2] ||| [arg_2] [function_1]	count=2
function	names that ||| names	count=1
class	returns ||| model admin	count=2
module	[module] spatialite version ||| [module]	count=1
function	the maximum field widths ||| field widths	count=1
function	the login ||| login	count=1
class	performs set up ||| geo query set	count=2
module	whether the set ||| contrib gis	count=1
module	some backends ||| backends base	count=1
module	[module_1] view ||| [module_1] [module_2]	count=10
class	this expression ||| base expression	count=2
function	returns all objects ||| get all objects	count=3
module	opposite of ||| db models	count=1
arg	if signature fails ||| key salt serializer	count=1
module	versions of oracle ||| db backends oracle	count=1
arg	number of ||| num	count=2
arg	generates a ctypes ||| argtypes errcheck strarg	count=1
class	the ||| model	count=1
function	directory ||| compile	count=1
module	for geos ||| geos	count=1
function	and when ||| lazy	count=1
class	value for this ||| value dict	count=1
arg	of arg ||| arg	count=1
function	(that [function] ultimate pointed-to ||| [function]	count=1
module	the root connector ||| utils	count=1
function	cleans ||| clean	count=4
function_arg	[function_1] message to ||| [arg_2] [function_1]	count=2
class	to the database is ||| base database	count=1
function	any otherwise uncaught exceptions ||| handle uncaught	count=1
module	to perform the operation ||| contrib	count=1
function	yields [function_2] ||| [function_2] [function_1]	count=2
function_arg	and lookup [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] the pattern ||| [function_1] [function_2]	count=1
function	password ||| check password	count=1
function	intersection of this geometry ||| intersection	count=1
arg	instance ||| request form	count=1
function	helps non-django ||| html safe	count=1
module	in the template ||| template	count=1
module	set of operations ||| db	count=1
arg	modelform ||| request	count=1
class	passed ||| query set	count=1
module	migrations ||| db migrations	count=5
class	needed ||| database	count=1
module	found on the page ||| contrib	count=1
function	from storage (unless "no_load" ||| get	count=1
function	load [function] object ||| import [function]	count=1
module	[module_1] geoip library ||| [module_1] gis [module_2]	count=1
function	the sql that extracts ||| extract sql	count=2
module	to use ||| generic	count=1
function	password with ||| password	count=1
function	language the user wants ||| language	count=1
module	returns a ||| contrib gis gdal	count=1
module	on the ||| contrib	count=8
function	fetch ||| fetch	count=1
module	this ||| contrib	count=2
class	before migrating a ||| wrapper	count=1
function	the dated [function_2] ||| [function_2] [function_1]	count=4
function	return all [function_2] ||| [function_2] [function_1]	count=9
arg	an entry in installed_apps ||| cls entry	count=1
function	the extra [function_2] ||| [function_2] [function_1]	count=3
module	by the given ||| contrib	count=1
function	and registered ||| lazy model	count=1
arg	function that returns ||| func cargs	count=1
function	returns the ||| get	count=23
arg	by data using ||| data	count=1
class	to ||| context	count=1
module	the list of ||| models sql	count=1
module_class	[module_1] table ||| [module_1] [class_2]	count=2
arg	string depending ||| compiler sql params	count=1
module	at the given ||| contrib	count=1
function	all messages ||| send messages email_messages	count=1
class	week numeric i ||| date format	count=1
function	set z with the ||| set z	count=1
module	displays the headers and ||| contrib admin	count=1
class	actual time or datetime ||| time field	count=1
arg	limit and ||| value limit	count=1
arg	given field_name [arg_2] ||| [arg_1] [arg_2]	count=2
arg	[arg_1] from value ||| [arg_1] iterable [arg_2]	count=1
module	on the pixel values ||| contrib	count=1
function	returns the ||| get language from	count=1
module	files in [module_2] ||| [module_1] [module_2]	count=1
function_arg	field [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	from [arg_2] ||| [arg_2] [function_1]	count=3
arg	variables and then ||| request	count=1
arg	connector is ||| connector	count=1
arg	length [arg_2] ||| [arg_2] [arg_1]	count=1
module	easy ||| utils translation	count=2
arg	with ||| field	count=1
arg	a string ||| s	count=1
function	points in the first ||| num points	count=1
function	and a ||| operation	count=1
arg	expressions provide ||| expression	count=1
function	given queryset-like can ||| can	count=1
function	that a new file ||| new file	count=1
function	fields to select ||| select fields	count=1
function	preprocessed copy ||| cleanup	count=1
class	a deserialization error which ||| deserialization error	count=1
arg	code ||| cpl	count=1
arg	the filename ||| filename	count=1
module	the 3d ||| contrib	count=1
class	geometry ||| linear geometry	count=1
class	query against ||| query	count=1
module	unpack ||| gis db backends postgis	count=1
function	day ||| date	count=1
function	geojson representation ||| json	count=1
arg	queryset or any ||| format queryset	count=1
arg	[arg_1] model usually ||| [arg_2] [arg_1]	count=8
function	absolute url where ||| url	count=1
function	solve ||| solve lookup	count=1
function	[function_1] null field ||| [function_1] [function_2]	count=4
module_class	[module_1] table index ||| [module_1] [class_2]	count=2
module	of parent classes ||| models	count=1
class	[class_1] error which ||| [class_1] [class_2]	count=3
function	a ||| lazy model	count=2
function	select ||| select	count=3
function	the database schema in ||| database	count=2
function	of ||| lazy model operation	count=1
function	once per save ||| save base	count=1
class	'1' to ||| format	count=1
function	language [function_2] ||| [function_1] [function_2]	count=1
function	set instance variables based ||| set	count=1
class	save ||| base model form	count=1
function	optional dictionary of ||| init	count=1
module	resets the dirty flag ||| backends	count=1
function	html unordered [function] -- ||| unordered [function]	count=1
module	in the css selector ||| contrib	count=2
function_arg	[function_1] [arg_2] cache-control header as an ||| [function_1] age [arg_2]	count=2
module	there will be ||| db models sql	count=1
function	return limit_choices_to ||| get limit choices to	count=1
module	this instance and ||| db models	count=1
function	avoid leaving a dangling ||| temporary	count=1
module	the node ||| contrib gis geos	count=1
function_arg	django models [arg_2] ||| [function_1] table names [arg_2]	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] [function_arg_2]	count=3
class	files ||| hashed files	count=1
module	[ ||| commands	count=1
function	[function_1] difference ||| [function_2] [function_1]	count=4
module	to the ||| db models	count=1
class	are satisfied from the ||| holder	count=1
function	if url ||| url	count=1
class	class are ||| user settings	count=1
module	the returned string pointer ||| contrib	count=1
module	resets ||| base	count=1
class	zeros i e '1' ||| format	count=1
module	an unsaved instance ||| admin	count=1
arg	from an entry ||| cls entry	count=1
arg	with stars (*********) ||| tb_frame	count=1
arg	the if-modified-since ||| if_modified_since	count=1
function	an index with ||| index	count=1
module	the query ||| contrib gis db	count=1
class	the form ||| form	count=5
class	geometry ||| geometry	count=8
module	the user is a ||| contrib admindocs	count=1
function	cursor ||| cursor iter	count=1
module	we ||| db	count=1
function	or updates ||| headers	count=1
class	name of the field ||| field	count=1
function	returns the [function] of the ||| postgis proj [function]	count=1
class	modifies the envelope ||| envelope	count=1
module	list ||| commands	count=1
function	[function_1] reverse ||| [function_2] many to one [function_1]	count=2
function	__html__ method ||| html	count=1
function	returns an ||| get	count=5
class	of the year ||| format	count=1
module	of this [module_2] ||| [module_2] [module_1]	count=1
class	for the object's primary ||| base model form set	count=1
function_arg	sql [arg_2] ||| [function_1] [arg_2]	count=2
class	the database into ||| database	count=1
module	for this ||| contrib gis gdal	count=3
class	last data [class_2] ||| [class_2] [class_1]	count=3
arg	database connection ||| connection	count=1
function	corresponding models ||| lazy	count=1
class	list of dates and ||| date list	count=1
module	on the first ||| db models	count=1
module	the coordinates in ||| contrib gis	count=1
class	true if the form ||| base form	count=1
module	this accessor ||| gis	count=2
module	the database and ||| backends	count=1
module	this user has through ||| contrib auth	count=1
function	initial value if the ||| value	count=1
module_class	and returns [class_2] ||| template [module_1] [class_2] engine	count=2
module	geoip library and ||| geoip	count=1
class	unit attribute name for ||| measure base	count=1
function	of ordering ||| ordering	count=1
function	of all actions ||| actions	count=1
module	returning true if the ||| contrib	count=1
module	returns true if ||| gis db models	count=1
module	tables and ||| backends	count=1
function	moves a model's ||| alter db	count=1
function_arg	[function_1] [arg_2] ||| [function_1] keys [arg_2]	count=2
function	range of pages for ||| range	count=1
function	an sql [function] ||| sql with [function]	count=1
arg	:param locale ||| potfile locale	count=2
class	time zone of ||| time	count=1
function	the unget [function_2] ||| [function_2] [function_1]	count=4
function	returns a list of ||| list	count=4
module	the spatial_ref_sys ||| contrib gis db	count=1
class	case of ||| test case	count=1
function	registered ||| lazy model	count=1
module	based on ||| models	count=1
function	creates a clone of ||| clone	count=1
class	true if the ||| set	count=1
function	list of paths to ||| all locale paths	count=1
module	list of ||| translation	count=1
arg	email ||| email	count=1
arg	internal helper function to ||| forward reverse include_parents include_hidden	count=1
function	field ||| fields	count=2
module	the wkt ||| contrib gis gdal	count=1
function	fields to the ||| fields	count=1
function	init ||| init	count=2
class	year i e '0' ||| format	count=1
arg	model and ||| model	count=1
function	cleans [function_2] ||| [function_2] [function_1]	count=1
function	select ||| geocol select	count=1
module	is ||| contrib	count=1
module	and its ||| template	count=1
arg	character limit ||| limit	count=1
module	files [module_2] ||| [module_2] [module_1]	count=1
arg	optional parameters ||| params	count=1
class	not this handler should ||| handler	count=1
function_arg	last executed [arg_2] ||| [arg_2] [function_1]	count=1
function	that will set ||| set	count=1
function	in an envelope ||| envelope	count=1
function	[function_1] modified ||| [function_2] [function_1]	count=1
class	create ||| schema editor	count=1
class	return a list ||| list filter	count=1
class	settings the 'default_settings' ||| settings	count=1
class	set up for ||| query set	count=1
function_arg	returns the for update [function_1] [arg_2] update operation ||| database operations for update [function_1] [arg_2]	count=3
class	in the database ||| base database	count=1
module	index ||| db models	count=1
module	return the uniqueness ||| contrib gis utils	count=1
module	the messages to ||| contrib messages	count=1
module	fields instance of the ||| db models fields	count=1
module	the current instance ||| contrib sessions	count=1
function	closes ||| close if unusable	count=1
function	object ||| patch vary	count=1
module	a modelform return ||| contrib admin	count=1
function	[function_1] a signed ||| [function_1] [function_2]	count=2
function	__html__ method ||| safe	count=1
class	the dirty flag ||| base database	count=1
module	pointer location if the ||| contrib	count=1
function	a number ||| model	count=1
function	state that the ||| state	count=1
module	the linear ||| contrib	count=1
function	[function_1] an ipv6 ||| [function_2] [function_1]	count=1
function	field's (that [function] ultimate pointed-to ||| [function]	count=1
function	of choices ||| choices	count=1
arg	repeatable mangled version with ||| hash_len	count=1
function	normal forwards ||| forwards	count=1
function	is the difference ||| difference	count=1
class	cache for certain ||| base cache	count=2
function	new pk values on ||| get pk value on	count=1
function	a decorator that ||| safe	count=1
module_class	the [class_2] ||| [module_1] gis geoip [class_2]	count=4
class	params ||| sqlcompiler	count=1
function	a list of sql ||| sql	count=1
class	mapping this routine will ||| mapping	count=1
module	converts the type ||| contrib	count=1
module	fields passed into this ||| db models	count=1
function	saves a user ||| user	count=1
function	to create a ||| create generic	count=1
function	max ||| get max	count=1
function	of points ||| points	count=1
module	of digits ||| db models	count=1
function	[function_1] fields of ||| [function_1] [function_2]	count=2
function	inverse flattening ||| inverse flattening	count=2
class	given django model instance ||| model	count=2
function	in this formset ||| form	count=1
module	views that tries ||| views decorators	count=1
arg	suggests ||| cls ops	count=1
function	a relative path ||| construct relative path	count=2
function	expire ||| expire	count=1
function	of tuples [ ||| messages	count=1
function	annotations that ||| annotation	count=1
function	a cascaded union ||| cascaded union	count=2
arg	given 'next' page ||| next login_url redirect_field_name	count=1
module	of [module_2] ||| [module_2] gis [module_1]	count=2
function	] ||| compile messages	count=1
class	upload ||| stop upload	count=2
class	layer for ||| layer	count=1
class	list of tuples ||| list	count=1
function	the translation [function] ||| to [function]	count=1
function	return an unsaved instance ||| save	count=1
function	normal forwards direction ||| forwards	count=1
arg	start is the ||| start	count=1
function	[function_1] dimension of ||| [function_1] [function_2]	count=1
class	return an ||| model admin	count=1
class	model's ||| base database schema editor	count=1
arg	key_salt and a ||| key_salt value	count=1
module	the admin form and ||| contrib admin templatetags	count=1
module	if there ||| utils	count=1
module	m rows of ||| models sql	count=1
function	queryset ||| get field queryset	count=2
function	return ||| get template sources	count=2
module	sessions from [module_2] ||| [module_2] [module_1]	count=1
module	to edit the ||| contrib admin	count=1
function	a long integer into ||| long	count=1
class	get ||| object mixin	count=3
function	choices for use in ||| action choices	count=1
module	this class ||| conf	count=1
class	field with the model ||| field	count=1
function_arg	[function_1] and exactly ||| [arg_2] [function_1]	count=1
function	the geometry [function_2] ||| [function_1] [function_2]	count=2
function	path of ||| path	count=1
module	provided for ||| gis	count=1
module	if ||| conf	count=1
arg	inline formsets and ||| request form formsets change	count=1
arg	header in the ||| response	count=1
module	a dictionary with the ||| contrib	count=1
arg	determines where the ||| template subdir	count=1
module_class	[module_1] layer supports ||| [module_1] [class_2]	count=4
function	initial ||| initial	count=2
class	a transaction and resets ||| database	count=1
class	tuples and when ||| apps	count=1
function	serialization -- open the ||| serialization	count=1
arg	for ||| opts	count=1
class	the fields passed into ||| set	count=1
function	this function patches ||| cache control	count=1
module	this queryset ||| models	count=1
module_class	[module_1] this spatial ||| [module_1] [class_2]	count=2
class	choices ||| choice field	count=1
function	selected language ||| language	count=1
function	parse a list of ||| parse apps and	count=1
module	the results from ||| db models	count=1
module	certain backends ||| cache backends	count=1
function_arg	[function_1] [arg_2] ||| [function_1] spec obj model [arg_2]	count=9
arg	sends each message ||| fail_silently	count=1
module_class	[module_1] [class_2] other pop-ups ||| [module_1] [class_2]	count=6
arg	a model usually ||| model	count=2
function	system ||| system	count=1
arg	modelform return an ||| request form	count=1
function_arg	returns the for [function_1] [arg_2] an update operation ||| base base database operations [function_1] [arg_2]	count=2
class	file in a ||| file system	count=1
module	the uniqueness keyword arguments ||| contrib gis	count=1
function	[function_1] [function_2] ||| [function_1] related [function_2]	count=8
