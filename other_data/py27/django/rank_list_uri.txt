<tt style='background-color:#E8E8E8;'> core. <a href=' /shortcuts.py#L16'>render_to_response</a>(template_name,context,content_type,status)</tt>	Returns a httpresponse whose content is filled with the result of calling django.
<tt style='background-color:#E8E8E8;'> core. <a href=' /shortcuts.py#L25'>render</a>(request,template_name,context,content_type)</tt>	Returns a httpresponse whose content is filled with the result of calling django.
<tt style='background-color:#E8E8E8;'> core. <a href=' /shortcuts.py#L34'>redirect</a>(to)</tt>	Returns an httpresponseredirect to the appropriate url for the arguments passed.
<tt style='background-color:#E8E8E8;'> core. <a href=' /shortcuts.py#L59'>_get_queryset</a>(klass)</tt>	Return a queryset or a manager.
<tt style='background-color:#E8E8E8;'> core. <a href=' /shortcuts.py#L72'>get_object_or_404</a>(klass)</tt>	Uses get() to return an object or raises a http404 exception if the object does not exist.
<tt style='background-color:#E8E8E8;'> core. <a href=' /shortcuts.py#L96'>get_list_or_404</a>(klass)</tt>	Uses filter() to return a list of objects or raise a http404 exception if the list is empty.
<tt style='background-color:#E8E8E8;'> core. <a href=' /shortcuts.py#L118'>resolve_url</a>(to)</tt>	Return a url appropriate for the arguments passed.
<tt style='background-color:#E8E8E8;'> core. <a href=' /__init__.py#L10'>setup</a>(set_prefix)</tt>	Configure the settings this happens as a side effect of accessing the first setting configure logging and populate the app registry.
<tt style='background-color:#E8E8E8;'> core. <a href=' /core/wsgi.py#L5'>get_wsgi_application</a>()</tt>	The public interface to django's wsgi support should return a wsgi.
<tt style='background-color:#E8E8E8;'> core. <a href=' /core/signing.py#L99'>dumps</a>(obj,key,salt,serializer)</tt>	Returns url-safe sha1 signed base64 compressed json string if key is.
<tt style='background-color:#E8E8E8;'> core. <a href=' /core/signing.py#L132'>loads</a>(s,key,salt,serializer)</tt>	Reverse of dumps(), raises badsignature if signature fails.
<tt style='background-color:#E8E8E8;'> core.TimestampSigner <a href=' /core/signing.py#L194'>unsign</a>(value,max_age)</tt>	Retrieve original value and check it wasn't signed more than max_age seconds ago.
<tt style='background-color:#E8E8E8;'> core.Paginator <a href=' /core/paginator.py#L36'>validate_number</a>(number)</tt>	Validates the given 1-based page number.
<tt style='background-color:#E8E8E8;'> core.Paginator <a href=' /core/paginator.py#L53'>page</a>(number)</tt>	Returns a page object for the given 1-based page number.
<tt style='background-color:#E8E8E8;'> core.Paginator <a href=' /core/paginator.py#L64'>_get_page</a>()</tt>	Returns an instance of a single page.
<tt style='background-color:#E8E8E8;'> core.Paginator <a href=' /core/paginator.py#L73'>count</a>()</tt>	Returns the total number of objects across all pages.
<tt style='background-color:#E8E8E8;'> core.Paginator <a href=' /core/paginator.py#L86'>num_pages</a>()</tt>	Returns the total number of pages.
<tt style='background-color:#E8E8E8;'> core.Paginator <a href=' /core/paginator.py#L96'>page_range</a>()</tt>	Returns a 1-based range of pages for iterating through within a template for loop.
<tt style='background-color:#E8E8E8;'> core.Paginator <a href=' /core/paginator.py#L104'>_check_object_list_is_ordered</a>()</tt>	Warn if self object_list is unordered typically a queryset.
<tt style='background-color:#E8E8E8;'> core.Page <a href=' /core/paginator.py#L156'>start_index</a>()</tt>	Returns the 1-based index of the first object on this page relative to total objects in the paginator.
<tt style='background-color:#E8E8E8;'> core.Page <a href=' /core/paginator.py#L166'>end_index</a>()</tt>	Returns the 1-based index of the last object on this page relative to total objects found hits.
<tt style='background-color:#E8E8E8;'> core. <a href=' /core/validators.py#L19'>_lazy_re_compile</a>(regex,flags)</tt>	Lazily compile a regex with flags.
<tt style='background-color:#E8E8E8;'> core.RegexValidator <a href=' /core/validators.py#L55'>__call__</a>(value)</tt>	Validate that the input contains a match for the regular expression if inverse_match is false otherwise raise validationerror.
<tt style='background-color:#E8E8E8;'> core. <a href=' /core/validators.py#L282'>ip_address_validators</a>(protocol,unpack_ipv4)</tt>	Depending on the given parameters returns the appropriate validators for the genericipaddressfield.
<tt style='background-color:#E8E8E8;'> core.ValidationError <a href=' /core/exceptions.py#L102'>__init__</a>(message,code,params)</tt>	The message argument can be a single error a list of errors or a dictionary that maps field names to lists of errors.
<tt style='background-color:#E8E8E8;'> core.handlers. <a href=' /core/handlers/wsgi.py#L171'>get_path_info</a>(environ)</tt>	Returns the http request's path_info as a unicode string.
<tt style='background-color:#E8E8E8;'> core.handlers. <a href=' /core/handlers/wsgi.py#L180'>get_script_name</a>(environ)</tt>	Returns the equivalent of the http request's script_name environment variable.
<tt style='background-color:#E8E8E8;'> core.handlers. <a href=' /core/handlers/wsgi.py#L213'>get_bytes_from_wsgi</a>(environ,key,default)</tt>	Get a value from the wsgi environ dictionary as bytes.
<tt style='background-color:#E8E8E8;'> core.handlers. <a href=' /core/handlers/wsgi.py#L227'>get_str_from_wsgi</a>(environ,key,default)</tt>	Get a value from the wsgi environ dictionary as str.
<tt style='background-color:#E8E8E8;'> core.handlers.BaseHandler <a href=' /core/handlers/base.py#L35'>load_middleware</a>()</tt>	Populate middleware lists from settings middleware (or the deprecated.
<tt style='background-color:#E8E8E8;'> core.handlers.BaseHandler <a href=' /core/handlers/base.py#L157'>_get_response</a>(request)</tt>	Resolve and call the view then apply view exception and template_response middleware.
<tt style='background-color:#E8E8E8;'> core.handlers.BaseHandler <a href=' /core/handlers/base.py#L221'>process_exception_by_middleware</a>(exception,request)</tt>	Pass the exception to the exception middleware if no middleware.
<tt style='background-color:#E8E8E8;'> core.handlers.BaseHandler <a href=' /core/handlers/base.py#L232'>handle_uncaught_exception</a>(request,resolver,exc_info)</tt>	Allow subclasses to override uncaught exception handling.
<tt style='background-color:#E8E8E8;'> core.handlers.BaseHandler <a href=' /core/handlers/base.py#L236'>_legacy_get_response</a>(request)</tt>	Apply process_request() middleware and call the main _get_response(), if needed.
<tt style='background-color:#E8E8E8;'> core.handlers. <a href=' /core/handlers/exception.py#L25'>convert_exception_to_response</a>(get_response)</tt>	Wrap the given get_response callable in exception-to-response conversion.
<tt style='background-color:#E8E8E8;'> core.handlers. <a href=' /core/handlers/exception.py#L124'>handle_uncaught_exception</a>(request,resolver,exc_info)</tt>	Processing for any otherwise uncaught exceptions those that will generate http 500 responses.
<tt style='background-color:#E8E8E8;'> core.servers. <a href=' /core/servers/basehttp.py#L28'>get_internal_wsgi_application</a>()</tt>	Loads and returns the wsgi application as configured by the user in settings.
<tt style='background-color:#E8E8E8;'> core.servers.WSGIRequestHandler <a href=' /core/servers/basehttp.py#L137'>handle</a>()</tt>	Copy of wsgirequesthandler but with different serverhandler.
<tt style='background-color:#E8E8E8;'> core.checks. <a href=' /core/checks/urls.py#L20'>check_resolver</a>(resolver)</tt>	Recursively check the resolver.
<tt style='background-color:#E8E8E8;'> core.checks. <a href=' /core/checks/urls.py#L33'>check_url_namespaces_unique</a>(app_configs)</tt>	Warn if url namespaces used in applications aren't unique.
<tt style='background-color:#E8E8E8;'> core.checks. <a href=' /core/checks/urls.py#L56'>_load_all_namespaces</a>(resolver,parents)</tt>	Recursively load all namespaces from url patterns.
<tt style='background-color:#E8E8E8;'> core.checks. <a href=' /core/checks/urls.py#L74'>get_warning_for_invalid_pattern</a>(pattern)</tt>	Return a list containing a warning that the pattern is invalid.
<tt style='background-color:#E8E8E8;'> core.checks.CheckRegistry <a href=' /core/checks/registry.py#L30'>register</a>(check)</tt>	Can be used as a function or a decorator register given function.
<tt style='background-color:#E8E8E8;'> core.checks.CheckRegistry <a href=' /core/checks/registry.py#L64'>run_checks</a>(app_configs,tags,include_deployment_checks)</tt>	Run all registered checks and return list of errors and warnings.
<tt style='background-color:#E8E8E8;'> core.checks. <a href=' /core/checks/model_checks.py#L34'>_check_lazy_references</a>(apps,ignore)</tt>	Ensure all lazy i e string model references have been resolved.
<tt style='background-color:#E8E8E8;'> core.cache.backends.FileBasedCache <a href=' /core/cache/backends/filebased.py#L85'>_cull</a>()</tt>	Removes random cache entries if max_entries is reached at a ratio of num_entries / cull_frequency.
<tt style='background-color:#E8E8E8;'> core.cache.backends.FileBasedCache <a href=' /core/cache/backends/filebased.py#L113'>_key_to_file</a>(key,version)</tt>	Convert a key into a cache file path basically this is the.
<tt style='background-color:#E8E8E8;'> core.cache.backends.FileBasedCache <a href=' /core/cache/backends/filebased.py#L123'>clear</a>()</tt>	Remove all the cache files.
<tt style='background-color:#E8E8E8;'> core.cache.backends.FileBasedCache <a href=' /core/cache/backends/filebased.py#L132'>_is_expired</a>(f)</tt>	Takes an open cache file and determines if it has expired deletes the file if it is has passed its expiry time.
<tt style='background-color:#E8E8E8;'> core.cache.backends.FileBasedCache <a href=' /core/cache/backends/filebased.py#L144'>_list_cache_files</a>()</tt>	Get a list of paths to all the cache files these are all the files.
<tt style='background-color:#E8E8E8;'> core.cache.backends. <a href=' /core/cache/backends/base.py#L27'>default_key_func</a>(key,key_prefix,version)</tt>	Default function to generate keys.
<tt style='background-color:#E8E8E8;'> core.cache.backends. <a href=' /core/cache/backends/base.py#L38'>get_key_func</a>(key_func)</tt>	Function to decide which key function to use.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L79'>get_backend_timeout</a>(timeout)</tt>	Returns the timeout value usable by this backend based upon the provided timeout.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L91'>make_key</a>(key,version)</tt>	Constructs the key used by all other methods by default it.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L105'>add</a>(key,value,timeout,version)</tt>	Set a value in the cache if the key does not already exist if.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L115'>get</a>(key,default,version)</tt>	Fetch a given key from the cache if the key does not exist return.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L122'>set</a>(key,value,timeout,version)</tt>	Set a value in the cache if timeout is given that timeout will be.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L129'>delete</a>(key,version)</tt>	Delete a key from the cache failing silently.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L135'>get_many</a>(keys,version)</tt>	Fetch a bunch of keys from the cache for certain backends (memcached.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L150'>get_or_set</a>(key,default,timeout,version)</tt>	Fetch a given key from the cache if the key does not exist.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L169'>has_key</a>(key,version)</tt>	Returns true if the key is in the cache and has not expired.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L175'>incr</a>(key,delta,version)</tt>	Add delta to value in the cache if the key does not exist raise a.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L187'>decr</a>(key,delta,version)</tt>	Subtract delta from value in the cache if the key does not exist raise.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L194'>__contains__</a>(key)</tt>	Returns true if the key is in the cache and has not expired.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L203'>set_many</a>(data,timeout,version)</tt>	Set a bunch of values in the cache at once from a dict of key/value pairs.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L215'>delete_many</a>(keys,version)</tt>	Delete a bunch of values in the cache at once for certain backends.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L224'>clear</a>()</tt>	Remove *all* values from the cache at once.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L228'>validate_key</a>(key)</tt>	Warn about keys that would not be portable to the memcached backend.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L247'>incr_version</a>(key,delta,version)</tt>	Adds delta to the cache version for the supplied key returns the.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L262'>decr_version</a>(key,delta,version)</tt>	Subtracts delta from the cache version for the supplied key returns.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseCache <a href=' /core/cache/backends/base.py#L268'>close</a>()</tt>	Close the cache connection.
<tt style='background-color:#E8E8E8;'> core.cache.backends. <a href=' /core/cache/backends/locmem.py#L22'>dummy</a>()</tt>	A context manager that does nothing special.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseMemcachedCache <a href=' /core/cache/backends/memcached.py#L32'>_cache</a>()</tt>	Implements transparent thread-safe access to a memcached client.
<tt style='background-color:#E8E8E8;'> core.cache.backends.BaseMemcachedCache <a href=' /core/cache/backends/memcached.py#L42'>get_backend_timeout</a>(timeout)</tt>	Memcached deals with long (> 30 days) timeouts in a special way.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L34'>open</a>(name,mode)</tt>	Retrieves the specified file from storage.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L40'>save</a>(name,content,max_length)</tt>	Saves new content to the file specified by name the content should be.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L58'>get_valid_name</a>(name)</tt>	Returns a filename based on the provided filename that's suitable for use in the target storage system.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L65'>get_available_name</a>(name,max_length)</tt>	Returns a filename that's free on the target storage system and available for new content to be written to.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L96'>generate_filename</a>(filename)</tt>	Validate the filename by calling get_valid_name() and return a filename to be passed to the save() method.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L105'>path</a>(name)</tt>	Returns a local filesystem path where the file can be retrieved using python's built-in open() function.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L116'>delete</a>(name)</tt>	Deletes the specified file from the storage system.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L122'>exists</a>(name)</tt>	Returns true if a file referenced by the given name already exists in the storage system or false if the name is available for a new file.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L129'>listdir</a>(path)</tt>	Lists the contents of the specified path returning a 2-tuple of lists the first item being directories the second item being files.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L136'>size</a>(name)</tt>	Returns the total size in bytes of the file specified by name.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L142'>url</a>(name)</tt>	Returns an absolute url where the file's contents can be accessed directly by a web browser.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L149'>accessed_time</a>(name)</tt>	Returns the last accessed time as datetime object of the file specified by name.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L161'>created_time</a>(name)</tt>	Returns the creation time as datetime object of the file specified by name.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L173'>modified_time</a>(name)</tt>	Returns the last modified time as datetime object of the file specified by name.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L185'>get_accessed_time</a>(name)</tt>	Return the last accessed time as a datetime of the file specified by name.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L201'>get_created_time</a>(name)</tt>	Return the creation time as a datetime of the file specified by name.
<tt style='background-color:#E8E8E8;'> core.files.Storage <a href=' /core/files/storage.py#L217'>get_modified_time</a>(name)</tt>	Return the last modified time as a datetime of the file specified by name.
<tt style='background-color:#E8E8E8;'> core.files. <a href=' /core/files/storage.py#L234'>_possibly_make_aware</a>(dt)</tt>	Convert a datetime object in the local timezone to aware in utc if use_tz is true.
<tt style='background-color:#E8E8E8;'> core.files.FileSystemStorage <a href=' /core/files/storage.py#L262'>_clear_cached_properties</a>(setting)</tt>	Reset setting based property values.
<tt style='background-color:#E8E8E8;'> core.files.FileSystemStorage <a href=' /core/files/storage.py#L445'>_datetime_from_timestamp</a>(ts)</tt>	If timezone support is enabled make an aware datetime object in utc otherwise make a naive one in the local timezone.
<tt style='background-color:#E8E8E8;'> core.files.TemporaryUploadedFile <a href=' /core/files/uploadedfile.py#L67'>temporary_file_path</a>()</tt>	Returns the full path of this file.
<tt style='background-color:#E8E8E8;'> core.files.SimpleUploadedFile <a href=' /core/files/uploadedfile.py#L113'>from_dict</a>(cls,file_dict)</tt>	Creates a simpleuploadedfile object from.
<tt style='background-color:#E8E8E8;'> core.files.File <a href=' /core/files/base.py#L67'>chunks</a>(chunk_size)</tt>	Read the file and yield chunks of chunk_size bytes (defaults to uploadedfile.
<tt style='background-color:#E8E8E8;'> core.files.File <a href=' /core/files/base.py#L86'>multiple_chunks</a>(chunk_size)</tt>	Returns true if you can expect multiple chunks.
<tt style='background-color:#E8E8E8;'> core.files. <a href=' /core/files/base.py#L173'>endswith_cr</a>(line)</tt>	Return true if line a text or byte string ends with ' '.
<tt style='background-color:#E8E8E8;'> core.files. <a href=' /core/files/base.py#L180'>endswith_lf</a>(line)</tt>	Return true if line a text or byte string ends with ' '.
<tt style='background-color:#E8E8E8;'> core.files. <a href=' /core/files/base.py#L187'>equals_lf</a>(line)</tt>	Return true if line a text or byte string equals ' '.
<tt style='background-color:#E8E8E8;'> core.files. <a href=' /core/files/move.py#L29'>file_move_safe</a>(old_file_name,new_file_name,chunk_size,allow_overwrite)</tt>	Moves a file from one location to another in the safest way possible.
<tt style='background-color:#E8E8E8;'> core.files. <a href=' /core/files/locks.py#L24'>_fd</a>(f)</tt>	Get a filedescriptor from something which could be a file or an fd.
<tt style='background-color:#E8E8E8;'> core.files.StopUpload <a href=' /core/files/uploadhandler.py#L35'>__init__</a>(connection_reset)</tt>	If connection_reset is true, django knows will halt the upload without consuming the rest of the upload.
<tt style='background-color:#E8E8E8;'> core.files.FileUploadHandler <a href=' /core/files/uploadhandler.py#L79'>handle_raw_input</a>(input_data,META,content_length,boundary)</tt>	Handle the raw input from the client.
<tt style='background-color:#E8E8E8;'> core.files.FileUploadHandler <a href=' /core/files/uploadhandler.py#L97'>new_file</a>(field_name,file_name,content_type,content_length)</tt>	Signal that a new file has been started.
<tt style='background-color:#E8E8E8;'> core.files.FileUploadHandler <a href=' /core/files/uploadhandler.py#L111'>receive_data_chunk</a>(raw_data,start)</tt>	Receive data from the streamed upload parser start is the position.
<tt style='background-color:#E8E8E8;'> core.files.FileUploadHandler <a href=' /core/files/uploadhandler.py#L118'>file_complete</a>(file_size)</tt>	Signal that a file has completed file size corresponds to the actual.
<tt style='background-color:#E8E8E8;'> core.files.FileUploadHandler <a href=' /core/files/uploadhandler.py#L127'>upload_complete</a>()</tt>	Signal that the upload is complete subclasses should perform cleanup.
<tt style='background-color:#E8E8E8;'> core.files.TemporaryFileUploadHandler <a href=' /core/files/uploadhandler.py#L142'>new_file</a>()</tt>	Create the file object to append to as data is coming in.
<tt style='background-color:#E8E8E8;'> core.files.MemoryFileUploadHandler <a href=' /core/files/uploadhandler.py#L163'>handle_raw_input</a>(input_data,META,content_length,boundary)</tt>	Use the content_length to signal whether or not this handler should be in use.
<tt style='background-color:#E8E8E8;'> core.files.MemoryFileUploadHandler <a href=' /core/files/uploadhandler.py#L180'>receive_data_chunk</a>(raw_data,start)</tt>	Add the data to the bytesio file.
<tt style='background-color:#E8E8E8;'> core.files.MemoryFileUploadHandler <a href=' /core/files/uploadhandler.py#L189'>file_complete</a>(file_size)</tt>	Return a file object if we're activated.
<tt style='background-color:#E8E8E8;'> core.files. <a href=' /core/files/uploadhandler.py#L208'>load_handler</a>(path)</tt>	Given a path to a handler return an instance of that handler.
<tt style='background-color:#E8E8E8;'> core.files. <a href=' /core/files/images.py#L33'>get_image_dimensions</a>(file_or_path,close)</tt>	Returns the width height of an image given an open file or a path set.
<tt style='background-color:#E8E8E8;'> core.management.TemplateCommand <a href=' /core/management/templates.py#L192'>handle_template</a>(template,subdir)</tt>	Determines where the app or project templates are.
<tt style='background-color:#E8E8E8;'> core.management.TemplateCommand <a href=' /core/management/templates.py#L239'>download</a>(url)</tt>	Downloads the given url and returns the file name.
<tt style='background-color:#E8E8E8;'> core.management.TemplateCommand <a href=' /core/management/templates.py#L293'>splitext</a>(the_path)</tt>	Like os path splitext but takes off tar too.
<tt style='background-color:#E8E8E8;'> core.management.TemplateCommand <a href=' /core/management/templates.py#L303'>extract</a>(filename)</tt>	Extracts the given file to a temporarily and returns the path of the directory with the extracted content.
<tt style='background-color:#E8E8E8;'> core.management.TemplateCommand <a href=' /core/management/templates.py#L320'>is_url</a>(template)</tt>	Returns true if the name looks like a url.
<tt style='background-color:#E8E8E8;'> core.management.TemplateCommand <a href=' /core/management/templates.py#L329'>make_writeable</a>(filename)</tt>	Make sure that the file is writeable.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/color.py#L11'>supports_color</a>()</tt>	Returns true if the running system's terminal supports color and false otherwise.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/color.py#L30'>make_style</a>(config_string)</tt>	Create a style object from the given config_string.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/color.py#L60'>no_style</a>()</tt>	Returns a style object with no color scheme.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/color.py#L68'>color_style</a>()</tt>	Returns a style object from the django color scheme.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/base.py#L67'>handle_default_options</a>(options)</tt>	Include any default options that all commands should accept here so that managementutility can handle them before searching for.
<tt style='background-color:#E8E8E8;'> core.management.BaseCommand <a href=' /core/management/base.py#L209'>get_version</a>()</tt>	Return the django version which should be correct for all built-in django commands.
<tt style='background-color:#E8E8E8;'> core.management.BaseCommand <a href=' /core/management/base.py#L217'>create_parser</a>(prog_name,subcommand)</tt>	Create and return the argumentparser which will be used to parse the arguments to this command.
<tt style='background-color:#E8E8E8;'> core.management.BaseCommand <a href=' /core/management/base.py#L252'>add_arguments</a>(parser)</tt>	Entry point for subclassed commands to add custom arguments.
<tt style='background-color:#E8E8E8;'> core.management.BaseCommand <a href=' /core/management/base.py#L258'>print_help</a>(prog_name,subcommand)</tt>	Print the help message for this command derived from self.
<tt style='background-color:#E8E8E8;'> core.management.BaseCommand <a href=' /core/management/base.py#L266'>run_from_argv</a>(argv)</tt>	Set up any environment changes requested (e g python path.
<tt style='background-color:#E8E8E8;'> core.management.BaseCommand <a href=' /core/management/base.py#L302'>execute</a>()</tt>	Try to execute this command performing system checks if needed (as controlled by the requires_system_checks attribute except if.
<tt style='background-color:#E8E8E8;'> core.management.BaseCommand <a href=' /core/management/base.py#L348'>check</a>(app_configs,tags,display_num_errors,include_deployment_checks)</tt>	Uses the system check framework to validate entire django project.
<tt style='background-color:#E8E8E8;'> core.management.BaseCommand <a href=' /core/management/base.py#L415'>check_migrations</a>()</tt>	Print a warning if the set of migrations on disk don't match the migrations in the database.
<tt style='background-color:#E8E8E8;'> core.management.BaseCommand <a href=' /core/management/base.py#L447'>handle</a>()</tt>	The actual logic of the command subclasses must implement.
<tt style='background-color:#E8E8E8;'> core.management.AppCommand <a href=' /core/management/base.py#L481'>handle_app_config</a>(app_config)</tt>	Perform the command's actions for app_config an appconfig instance corresponding to an application label given on the command line.
<tt style='background-color:#E8E8E8;'> core.management.LabelCommand <a href=' /core/management/base.py#L517'>handle_label</a>(label)</tt>	Perform the command's actions for label, which will be the string as given on the command line.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/__init__.py#L22'>find_commands</a>(management_dir)</tt>	Given a path to a management directory returns a list of all the command names that are available.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/__init__.py#L34'>load_command_class</a>(app_name,name)</tt>	Given a command name and an application name returns the command class instance.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/__init__.py#L44'>get_commands</a>()</tt>	Returns a dictionary mapping command names to their callback applications.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/__init__.py#L79'>call_command</a>(command_name)</tt>	Calls the given command with the given options and args/kwargs.
<tt style='background-color:#E8E8E8;'> core.management.ManagementUtility <a href=' /core/management/__init__.py#L142'>main_help_text</a>(commands_only)</tt>	Returns the script's main help text as a string.
<tt style='background-color:#E8E8E8;'> core.management.ManagementUtility <a href=' /core/management/__init__.py#L177'>fetch_command</a>(subcommand)</tt>	Tries to fetch the given subcommand printing a message with the appropriate command called from the command line (usually.
<tt style='background-color:#E8E8E8;'> core.management.ManagementUtility <a href=' /core/management/__init__.py#L208'>autocomplete</a>()</tt>	Output completion suggestions for bash.
<tt style='background-color:#E8E8E8;'> core.management.ManagementUtility <a href=' /core/management/__init__.py#L283'>execute</a>()</tt>	Given the command-line arguments this figures out which subcommand is being run creates a parser appropriate to that command and runs it.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/__init__.py#L358'>execute_from_command_line</a>(argv)</tt>	A simple method that runs a managementutility.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/utils.py#L15'>popen_wrapper</a>(args,os_err_exc_type,stdout_encoding)</tt>	Friendly wrapper around popen.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/utils.py#L35'>handle_extensions</a>(extensions)</tt>	Organizes multiple extensions that are separated with commas or passed by using --extension/-e multiple times.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/utils.py#L82'>get_random_secret_key</a>()</tt>	Return a 50 character random string usable as a secret_key setting value.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/utils.py#L90'>parse_apps_and_model_labels</a>(labels)</tt>	Parse a list of "app_label modelname" or "app_label" strings into actual.
<tt style='background-color:#E8E8E8;'> core.management. <a href=' /core/management/sql.py#L7'>sql_flush</a>(style,connection,only_django,reset_sequences)</tt>	Returns a list of the sql statements used to flush the database.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/makemigrations.py#L197'>write_migration_files</a>(changes)</tt>	Takes a changes dict and writes them out as migration files.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/makemigrations.py#L243'>handle_merge</a>(loader,conflicts)</tt>	Handles merging together conflicted migrations interactively if it's safe otherwise advises on how to fix it.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/migrate.py#L264'>sync_apps</a>(connection,app_labels)</tt>	Run the old syncdb-style operation on a list of app_labels.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/inspectdb.py#L172'>normalize_col_name</a>(col_name,used_column_names,is_relation)</tt>	Modify the column name to make it python-compatible as a field name.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/inspectdb.py#L228'>get_field_type</a>(connection,table_name,row)</tt>	Given the database connection the table name and the cursor row description this routine will return the given field type name as.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/inspectdb.py#L266'>get_meta</a>(table_name,constraints,column_to_field_name)</tt>	Return a sequence comprising the lines of code necessary to construct the inner meta class for the model corresponding.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/test.py#L18'>run_from_argv</a>(argv)</tt>	Pre-parse the command line to extract the value of the --testrunner option.
<tt style='background-color:#E8E8E8;'> core.management.commands.BuildFile <a href=' /core/management/commands/makemessages.py#L87'>work_path</a>()</tt>	Path to a file which is being fed into gnu gettext pipeline this may.
<tt style='background-color:#E8E8E8;'> core.management.commands.BuildFile <a href=' /core/management/commands/makemessages.py#L102'>preprocess</a>()</tt>	Preprocess if necessary a translatable file before passing it to xgettext gnu gettext utility.
<tt style='background-color:#E8E8E8;'> core.management.commands.BuildFile <a href=' /core/management/commands/makemessages.py#L122'>postprocess_messages</a>(msgs)</tt>	Postprocess messages generated by xgettext gnu gettext utility.
<tt style='background-color:#E8E8E8;'> core.management.commands.BuildFile <a href=' /core/management/commands/makemessages.py#L148'>cleanup</a>()</tt>	Remove a preprocessed copy of a translatable file if any.
<tt style='background-color:#E8E8E8;'> core.management.commands. <a href=' /core/management/commands/makemessages.py#L160'>normalize_eols</a>(raw_contents)</tt>	Take a block of raw text that will be passed through str splitlines() to.
<tt style='background-color:#E8E8E8;'> core.management.commands. <a href=' /core/management/commands/makemessages.py#L175'>write_pot_file</a>(potfile,msgs)</tt>	Write the :param potfile pot file with the :param msgs contents previously making sure its format is valid.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/makemessages.py#L396'>build_potfiles</a>()</tt>	Build pot files and apply msguniq to them.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/makemessages.py#L428'>find_files</a>(root)</tt>	Helper method to get all files in the given root also check that there.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/makemessages.py#L489'>process_files</a>(file_list)</tt>	Group translatable files by locale directory and run pot file build process for each group.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/makemessages.py#L501'>process_locale_dir</a>(locale_dir,files)</tt>	Extract translatable literals from the specified files creating or updating the pot file for a given locale directory.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/makemessages.py#L596'>write_po_file</a>(potfile,locale)</tt>	Creates or updates the po file for self domain and :param locale.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/makemessages.py#L638'>copy_plural_forms</a>(msgs,locale)</tt>	Copies plural forms header contents from a django catalog of locale to the msgs string inserting it at the right place.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/loaddata.py#L143'>load_label</a>(fixture_label)</tt>	Loads fixtures files for a given label.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/loaddata.py#L208'>find_fixtures</a>(fixture_label)</tt>	Finds fixture files for a given label.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/loaddata.py#L265'>fixture_dirs</a>()</tt>	Return a list of fixture directories.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/loaddata.py#L296'>parse_name</a>(fixture_name)</tt>	Splits fixture name in name serialization format compression format.
<tt style='background-color:#E8E8E8;'> core.management.commands. <a href=' /core/management/commands/diffsettings.py#L4'>module_to_dict</a>(module,omittable)</tt>	Converts a module namespace to a python dictionary.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/showmigrations.py#L58'>show_list</a>(connection,app_names)</tt>	Shows a list of all migrations on the system or only those of some named apps.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/showmigrations.py#L94'>show_plan</a>(connection,app_names)</tt>	Shows all known migrations (or only those of the specified app_names) in the order they will be applied.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/compilemessages.py#L105'>compile_messages</a>(locations)</tt>	Locations is a list of tuples [ directory file ].
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/runserver.py#L64'>get_handler</a>()</tt>	Returns the default wsgi handler for the runner.
<tt style='background-color:#E8E8E8;'> core.management.commands.Command <a href=' /core/management/commands/runserver.py#L103'>run</a>()</tt>	Runs the server using the autoreloader if needed.
<tt style='background-color:#E8E8E8;'> core.mail. <a href=' /core/mail/message.py#L46'>make_msgid</a>(idstring,domain)</tt>	Returns a string suitable for rfc 5322 compliant message-id e g.
<tt style='background-color:#E8E8E8;'> core.mail. <a href=' /core/mail/message.py#L87'>forbid_multi_line_headers</a>(name,val,encoding)</tt>	Forbids multi-line headers to prevent header injection.
<tt style='background-color:#E8E8E8;'> core.mail. <a href=' /core/mail/message.py#L106'>split_addr</a>(addr,encoding)</tt>	Split the address into local part and domain properly encoded.
<tt style='background-color:#E8E8E8;'> core.mail. <a href=' /core/mail/message.py#L130'>sanitize_address</a>(addr,encoding)</tt>	Format a pair of name address or an email address string.
<tt style='background-color:#E8E8E8;'> core.mail.MIMEMixin <a href=' /core/mail/message.py#L169'>as_string</a>(unixfrom,linesep)</tt>	Return the entire formatted message as a string.
<tt style='background-color:#E8E8E8;'> core.mail.EmailMessage <a href=' /core/mail/message.py#L251'>__init__</a>(subject,body,from_email,to)</tt>	Initialize a single email message which can be sent to multiple recipients.
<tt style='background-color:#E8E8E8;'> core.mail.EmailMessage <a href=' /core/mail/message.py#L329'>recipients</a>()</tt>	Returns a list of all recipients of the email includes direct addressees as well as cc and bcc entries.
<tt style='background-color:#E8E8E8;'> core.mail.EmailMessage <a href=' /core/mail/message.py#L336'>send</a>(fail_silently)</tt>	Sends the email message.
<tt style='background-color:#E8E8E8;'> core.mail.EmailMessage <a href=' /core/mail/message.py#L344'>attach</a>(filename,content,mimetype)</tt>	Attaches a file with the given filename and content the filename can.
<tt style='background-color:#E8E8E8;'> core.mail.EmailMessage <a href=' /core/mail/message.py#L381'>attach_file</a>(path,mimetype)</tt>	Attaches a file from the filesystem.
<tt style='background-color:#E8E8E8;'> core.mail.EmailMessage <a href=' /core/mail/message.py#L415'>_create_mime_attachment</a>(content,mimetype)</tt>	Converts the content mimetype pair into a mime attachment object.
<tt style='background-color:#E8E8E8;'> core.mail.EmailMessage <a href=' /core/mail/message.py#L445'>_create_attachment</a>(filename,content,mimetype)</tt>	Converts the filename content mimetype triple into a mime attachment object.
<tt style='background-color:#E8E8E8;'> core.mail.EmailMultiAlternatives <a href=' /core/mail/message.py#L471'>__init__</a>(subject,body,from_email,to)</tt>	Initialize a single email message which can be sent to multiple recipients.
<tt style='background-color:#E8E8E8;'> core.mail.EmailMultiAlternatives <a href=' /core/mail/message.py#L488'>attach_alternative</a>(content,mimetype)</tt>	Attach an alternative content representation.
<tt style='background-color:#E8E8E8;'> core.mail. <a href=' /core/mail/__init__.py#L28'>get_connection</a>(backend,fail_silently)</tt>	Load an email backend and return an instance of it.
<tt style='background-color:#E8E8E8;'> core.mail. <a href=' /core/mail/__init__.py#L40'>send_mail</a>(subject,message,from_email,recipient_list)</tt>	Easy wrapper for sending a single message to a recipient list all members.
<tt style='background-color:#E8E8E8;'> core.mail. <a href=' /core/mail/__init__.py#L65'>send_mass_mail</a>(datatuple,fail_silently,auth_user,auth_password)</tt>	Given a datatuple of (subject message from_email recipient_list), sends each message to each recipient list.
<tt style='background-color:#E8E8E8;'> core.mail. <a href=' /core/mail/__init__.py#L91'>mail_admins</a>(subject,message,fail_silently,connection)</tt>	Sends a message to the admins as defined by the admins setting.
<tt style='background-color:#E8E8E8;'> core.mail. <a href=' /core/mail/__init__.py#L106'>mail_managers</a>(subject,message,fail_silently,connection)</tt>	Sends a message to the managers as defined by the managers setting.
<tt style='background-color:#E8E8E8;'> core.mail.backends.EmailBackend <a href=' /core/mail/backends/smtp.py#L96'>send_messages</a>(email_messages)</tt>	Sends one or more emailmessage objects and returns the number of email messages sent.
<tt style='background-color:#E8E8E8;'> core.mail.backends.EmailBackend <a href=' /core/mail/backends/filebased.py#L51'>_get_filename</a>()</tt>	Return a unique file name.
<tt style='background-color:#E8E8E8;'> core.mail.backends.BaseEmailBackend <a href=' /core/mail/backends/base.py#L20'>open</a>()</tt>	Open a network connection.
<tt style='background-color:#E8E8E8;'> core.mail.backends.BaseEmailBackend <a href=' /core/mail/backends/base.py#L38'>close</a>()</tt>	Close a network connection.
<tt style='background-color:#E8E8E8;'> core.mail.backends.BaseEmailBackend <a href=' /core/mail/backends/base.py#L53'>send_messages</a>(email_messages)</tt>	Sends one or more emailmessage objects and returns the number of email messages sent.
<tt style='background-color:#E8E8E8;'> core.mail.backends.EmailBackend <a href=' /core/mail/backends/smtp.py#L96'>send_messages</a>(messages)</tt>	Redirect messages to the dummy outbox.
<tt style='background-color:#E8E8E8;'> core.mail.backends.EmailBackend <a href=' /core/mail/backends/smtp.py#L43'>open</a>()</tt>	Ensure an open connection to the email server return whether or not a.
<tt style='background-color:#E8E8E8;'> core.mail.backends.EmailBackend <a href=' /core/mail/backends/smtp.py#L77'>close</a>()</tt>	Closes the connection to the email server.
<tt style='background-color:#E8E8E8;'> core.mail.backends.EmailBackend <a href=' /core/mail/backends/smtp.py#L118'>_send</a>(email_message)</tt>	A helper method that does the actual sending.
<tt style='background-color:#E8E8E8;'> core.serializers. <a href=' /core/serializers/python.py#L85'>Deserializer</a>(stream_or_string)</tt>	Deserialize a stream or string of yaml data.
<tt style='background-color:#E8E8E8;'> core.serializers. <a href=' /core/serializers/python.py#L85'>Deserializer</a>(object_list)</tt>	Deserialize simple python objects back into django orm instances.
<tt style='background-color:#E8E8E8;'> core.serializers. <a href=' /core/serializers/python.py#L187'>_get_model</a>(model_identifier)</tt>	Helper to look up a model from an "app_label model_name" string.
<tt style='background-color:#E8E8E8;'> core.serializers.DeserializationError <a href=' /core/serializers/base.py#L21'>WithData</a>(cls,original_exc,model,fk)</tt>	Factory method for creating a deserialization error which has a more explanatory message.
<tt style='background-color:#E8E8E8;'> core.serializers.Serializer <a href=' /core/serializers/base.py#L64'>serialize</a>(queryset)</tt>	Serialize a queryset.
<tt style='background-color:#E8E8E8;'> core.serializers.Serializer <a href=' /core/serializers/xml_serializer.py#L31'>start_serialization</a>()</tt>	Start serialization -- open the xml document and the root element.
<tt style='background-color:#E8E8E8;'> core.serializers.Serializer <a href=' /core/serializers/xml_serializer.py#L39'>end_serialization</a>()</tt>	End serialization -- end the document.
<tt style='background-color:#E8E8E8;'> core.serializers.Serializer <a href=' /core/serializers/xml_serializer.py#L47'>start_object</a>(obj)</tt>	Called as each object is handled.
<tt style='background-color:#E8E8E8;'> core.serializers.Serializer <a href=' /core/serializers/xml_serializer.py#L63'>end_object</a>(obj)</tt>	Called after handling all fields for an object.
<tt style='background-color:#E8E8E8;'> core.serializers.Serializer <a href=' /core/serializers/xml_serializer.py#L70'>handle_field</a>(obj,field)</tt>	Called to handle each field on an object (except for foreignkeys and.
<tt style='background-color:#E8E8E8;'> core.serializers.Serializer <a href=' /core/serializers/xml_serializer.py#L93'>handle_fk_field</a>(obj,field)</tt>	Called to handle a foreignkey we need to treat them slightly differently from regular fields.
<tt style='background-color:#E8E8E8;'> core.serializers.Serializer <a href=' /core/serializers/xml_serializer.py#L116'>handle_m2m_field</a>(obj,field)</tt>	Called to handle a manytomanyfield related objects are only.
<tt style='background-color:#E8E8E8;'> core.serializers.Serializer <a href=' /core/serializers/base.py#L146'>getvalue</a>()</tt>	Return the fully serialized queryset or none if the output stream is not seekable.
<tt style='background-color:#E8E8E8;'> core.serializers.Deserializer <a href=' /core/serializers/xml_serializer.py#L162'>__init__</a>(stream_or_string)</tt>	Init this serializer given a stream or a string.
<tt style='background-color:#E8E8E8;'> core.serializers.Deserializer <a href=' /core/serializers/xml_serializer.py#L172'>__next__</a>()</tt>	Iteration iterface -- return the next item in the stream.
<tt style='background-color:#E8E8E8;'> core.serializers. <a href=' /core/serializers/base.py#L215'>build_instance</a>(Model,data,db)</tt>	Build a model instance.
<tt style='background-color:#E8E8E8;'> core.serializers. <a href=' /core/serializers/__init__.py#L54'>register_serializer</a>(format,serializer_module,serializers)</tt>	Register a new serializer.
<tt style='background-color:#E8E8E8;'> core.serializers. <a href=' /core/serializers/__init__.py#L86'>unregister_serializer</a>(format)</tt>	Unregister a given serializer this is not a thread-safe operation.
<tt style='background-color:#E8E8E8;'> core.serializers. <a href=' /core/serializers/__init__.py#L123'>serialize</a>(format,queryset)</tt>	Serialize a queryset or any iterator that returns database objects using a certain serializer.
<tt style='background-color:#E8E8E8;'> core.serializers. <a href=' /core/serializers/__init__.py#L133'>deserialize</a>(format,stream_or_string)</tt>	Deserialize a stream or a string returns an iterator that yields (obj.
<tt style='background-color:#E8E8E8;'> core.serializers. <a href=' /core/serializers/__init__.py#L144'>_load_serializers</a>()</tt>	Register built-in and settings-defined serializers this is done lazily so.
<tt style='background-color:#E8E8E8;'> core.serializers. <a href=' /core/serializers/__init__.py#L160'>sort_dependencies</a>(app_list)</tt>	Sort a list of (app_config models) pairs into a single list of models.
<tt style='background-color:#E8E8E8;'> core.serializers.Serializer <a href=' /core/serializers/xml_serializer.py#L145'>_start_relational_field</a>(field)</tt>	Helper to output the <field> element for relational fields.
<tt style='background-color:#E8E8E8;'> core.serializers.Deserializer <a href=' /core/serializers/xml_serializer.py#L168'>_make_parser</a>()</tt>	Create a hardened xml parser (no custom/external entities).
<tt style='background-color:#E8E8E8;'> core.serializers.Deserializer <a href=' /core/serializers/xml_serializer.py#L179'>_handle_object</a>(node)</tt>	Convert an <object> node to a deserializedobject.
<tt style='background-color:#E8E8E8;'> core.serializers.Deserializer <a href=' /core/serializers/xml_serializer.py#L230'>_handle_fk_field_node</a>(node,field)</tt>	Handle a <field> node for a foreignkey.
<tt style='background-color:#E8E8E8;'> core.serializers.Deserializer <a href=' /core/serializers/xml_serializer.py#L259'>_handle_m2m_field_node</a>(node,field)</tt>	Handle a <field> node for a manytomanyfield.
<tt style='background-color:#E8E8E8;'> core.serializers.Deserializer <a href=' /core/serializers/xml_serializer.py#L281'>_get_model_from_node</a>(node,attr)</tt>	Helper to look up a model from a <object model= > or a <field.
<tt style='background-color:#E8E8E8;'> core.serializers. <a href=' /core/serializers/xml_serializer.py#L299'>getInnerText</a>(node)</tt>	Get all the inner text of a dom node recursively.
<tt style='background-color:#E8E8E8;'> urls.LocaleRegexDescriptor <a href=' /urls/resolvers.py#L83'>__get__</a>(instance,cls)</tt>	Return a compiled regular expression based on the active language.
<tt style='background-color:#E8E8E8;'> urls.LocaleRegexDescriptor <a href=' /urls/resolvers.py#L100'>_compile</a>(regex)</tt>	Compile and return the given regular expression.
<tt style='background-color:#E8E8E8;'> urls.LocaleRegexProvider <a href=' /urls/resolvers.py#L127'>describe</a>()</tt>	Format the url pattern for display in warning messages.
<tt style='background-color:#E8E8E8;'> urls.LocaleRegexProvider <a href=' /urls/resolvers.py#L136'>_check_pattern_startswith_slash</a>()</tt>	Check that the pattern does not begin with a forward slash.
<tt style='background-color:#E8E8E8;'> urls.RegexURLPattern <a href=' /urls/resolvers.py#L175'>_check_pattern_name</a>()</tt>	Check that the pattern name does not contain a colon.
<tt style='background-color:#E8E8E8;'> urls.RegexURLPattern <a href=' /urls/resolvers.py#L201'>lookup_str</a>()</tt>	A string that identifies the view (e g 'path to view_function' or.
<tt style='background-color:#E8E8E8;'> urls.RegexURLResolver <a href=' /urls/resolvers.py#L260'>_check_include_trailing_dollar</a>()</tt>	Check that include is not used with a regex ending with a dollar.
<tt style='background-color:#E8E8E8;'> urls. <a href=' /urls/base.py#L103'>set_script_prefix</a>(prefix)</tt>	Set the script prefix for the current thread.
<tt style='background-color:#E8E8E8;'> urls. <a href=' /urls/base.py#L112'>get_script_prefix</a>()</tt>	Return the currently active script prefix useful for client code that.
<tt style='background-color:#E8E8E8;'> urls. <a href=' /urls/base.py#L121'>clear_script_prefix</a>()</tt>	Unset the script prefix for the current thread.
<tt style='background-color:#E8E8E8;'> urls. <a href=' /urls/base.py#L131'>set_urlconf</a>(urlconf_name)</tt>	Set the urlconf for the current thread overriding the default one in settings.
<tt style='background-color:#E8E8E8;'> urls. <a href=' /urls/base.py#L143'>get_urlconf</a>(default)</tt>	Return the root urlconf to use for the current thread if it has been changed from the default one.
<tt style='background-color:#E8E8E8;'> urls. <a href=' /urls/base.py#L151'>is_valid_path</a>(path,urlconf)</tt>	Return true if the given path resolves against the default url resolver false otherwise.
<tt style='background-color:#E8E8E8;'> urls. <a href=' /urls/base.py#L164'>translate_url</a>(url,lang_code)</tt>	Given a url absolute or relative try to get its translated version in the lang_code language (either by i18n_patterns or by translated regex).
<tt style='background-color:#E8E8E8;'> urls. <a href=' /urls/utils.py#L10'>get_callable</a>(lookup_view)</tt>	Return a callable corresponding to lookup_view.
<tt style='background-color:#E8E8E8;'> contrib.admindocs.XViewMiddleware <a href=' /contrib/admindocs/middleware.py#L10'>process_view</a>(request,view_func,view_args,view_kwargs)</tt>	If the request method is head and either the ip is internal or the user is a logged-in staff member quickly return with an x-header.
<tt style='background-color:#E8E8E8;'> contrib.admindocs. <a href=' /contrib/admindocs/views.py#L383'>get_return_data_type</a>(func_name)</tt>	Return a somewhat-helpful data type given a function name.
<tt style='background-color:#E8E8E8;'> contrib.admindocs. <a href=' /contrib/admindocs/views.py#L393'>get_readable_field_data_type</a>(field)</tt>	Returns the description for a given field type if it exists fields' descriptions can contain format strings which will be interpolated.
<tt style='background-color:#E8E8E8;'> contrib.admindocs. <a href=' /contrib/admindocs/views.py#L401'>extract_views_from_urlpatterns</a>(urlpatterns,base,namespace)</tt>	Return a list of views from a list of urlpatterns.
<tt style='background-color:#E8E8E8;'> contrib.admindocs. <a href=' /contrib/admindocs/views.py#L430'>simplify_regex</a>(pattern)</tt>	Clean up urlpattern regexes into something more readable by humans for.
<tt style='background-color:#E8E8E8;'> contrib.admindocs. <a href=' /contrib/admindocs/utils.py#L21'>trim_docstring</a>(docstring)</tt>	Uniformly trim leading/trailing whitespace from docstrings.
<tt style='background-color:#E8E8E8;'> contrib.admindocs. <a href=' /contrib/admindocs/utils.py#L36'>parse_docstring</a>(docstring)</tt>	Parse out the parts of a docstring return title body metadata.
<tt style='background-color:#E8E8E8;'> contrib.admindocs. <a href=' /contrib/admindocs/utils.py#L62'>parse_rst</a>(text,default_reference_context,thing_being_parsed)</tt>	Convert the string from rest to an xhtml fragment.
<tt style='background-color:#E8E8E8;'> contrib.admindocs. <a href=' /contrib/admindocs/utils.py#L153'>replace_named_groups</a>(pattern)</tt>	Find named groups in pattern and replace them with the group name e g.
<tt style='background-color:#E8E8E8;'> contrib.admindocs. <a href=' /contrib/admindocs/utils.py#L190'>replace_unnamed_groups</a>(pattern)</tt>	Find unnamed groups in pattern and replace them with '<var>' e g.
<tt style='background-color:#E8E8E8;'> contrib.auth.AccessMixin <a href=' /contrib/auth/mixins.py#L19'>get_login_url</a>()</tt>	Override this method to override the login_url attribute.
<tt style='background-color:#E8E8E8;'> contrib.auth.AccessMixin <a href=' /contrib/auth/mixins.py#L31'>get_permission_denied_message</a>()</tt>	Override this method to override the permission_denied_message attribute.
<tt style='background-color:#E8E8E8;'> contrib.auth.AccessMixin <a href=' /contrib/auth/mixins.py#L37'>get_redirect_field_name</a>()</tt>	Override this method to override the redirect_field_name attribute.
<tt style='background-color:#E8E8E8;'> contrib.auth.PermissionRequiredMixin <a href=' /contrib/auth/mixins.py#L66'>get_permission_required</a>()</tt>	Override this method to override the permission_required attribute.
<tt style='background-color:#E8E8E8;'> contrib.auth.PermissionRequiredMixin <a href=' /contrib/auth/mixins.py#L82'>has_permission</a>()</tt>	Override this method to customize the way permissions are checked.
<tt style='background-color:#E8E8E8;'> contrib.auth.UserPassesTestMixin <a href=' /contrib/auth/mixins.py#L106'>get_test_func</a>()</tt>	Override this method to use a different test_func method.
<tt style='background-color:#E8E8E8;'> contrib.auth.AuthenticationForm <a href=' /contrib/auth/forms.py#L168'>__init__</a>(request)</tt>	The 'request' parameter is set for custom auth use by subclasses.
<tt style='background-color:#E8E8E8;'> contrib.auth.AuthenticationForm <a href=' /contrib/auth/forms.py#L199'>confirm_login_allowed</a>(user)</tt>	Controls whether the given user may log in this is a policy setting.
<tt style='background-color:#E8E8E8;'> contrib.auth.PasswordResetForm <a href=' /contrib/auth/forms.py#L228'>send_mail</a>(subject_template_name,email_template_name,context,from_email)</tt>	Sends a django core mail emailmultialternatives to to_email.
<tt style='background-color:#E8E8E8;'> contrib.auth.PasswordResetForm <a href=' /contrib/auth/forms.py#L245'>get_users</a>(email)</tt>	Given an email return matching user s who should receive a reset.
<tt style='background-color:#E8E8E8;'> contrib.auth.PasswordResetForm <a href=' /contrib/auth/forms.py#L258'>save</a>(domain_override,subject_template_name,email_template_name,use_https)</tt>	Generates a one-use only link for resetting password and sends to the user.
<tt style='background-color:#E8E8E8;'> contrib.auth.PasswordChangeForm <a href=' /contrib/auth/forms.py#L353'>clean_old_password</a>()</tt>	Validates that the old_password field is correct.
<tt style='background-color:#E8E8E8;'> contrib.auth.AdminPasswordChangeForm <a href=' /contrib/auth/forms.py#L403'>save</a>(commit)</tt>	Saves the new password.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/password_validation.py#L40'>validate_password</a>(password,user,password_validators)</tt>	Validate whether the password meets all validator requirements.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/password_validation.py#L59'>password_changed</a>(password,user,password_validators)</tt>	Inform all validators that have implemented a password_changed() method that the password has been changed.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/password_validation.py#L71'>password_validators_help_texts</a>(password_validators)</tt>	Return a list of all help texts of all configured validators.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/password_validation.py#L83'>_password_validators_help_text_html</a>(password_validators)</tt>	Return an html string with all help texts of all configured validators in an <ul>.
<tt style='background-color:#E8E8E8;'> contrib.auth.PasswordResetTokenGenerator <a href=' /contrib/auth/tokens.py#L16'>make_token</a>(user)</tt>	Returns a token that can be used once to do a password reset for the given user.
<tt style='background-color:#E8E8E8;'> contrib.auth.PasswordResetTokenGenerator <a href=' /contrib/auth/tokens.py#L23'>check_token</a>(user,token)</tt>	Check that a password reset token is correct for a given user.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/decorators.py#L12'>user_passes_test</a>(test_func,login_url,redirect_field_name)</tt>	Decorator for views that checks that the user passes the given test redirecting to the log-in page if necessary.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/decorators.py#L40'>login_required</a>(function,redirect_field_name,login_url)</tt>	Decorator for views that checks that the user is logged in redirecting to the log-in page if necessary.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/decorators.py#L55'>permission_required</a>(perm,login_url,raise_exception)</tt>	Decorator for views that checks whether a user has a particular permission enabled redirecting to the log-in page if necessary.
<tt style='background-color:#E8E8E8;'> contrib.auth.RemoteUserMiddleware <a href=' /contrib/auth/middleware.py#L98'>clean_username</a>(username,request)</tt>	Allows the backend to clean the username if the backend defines a clean_username method.
<tt style='background-color:#E8E8E8;'> contrib.auth.RemoteUserMiddleware <a href=' /contrib/auth/middleware.py#L111'>_remove_invalid_user</a>(request)</tt>	Removes the current authenticated user in the request which is invalid but only if the user is authenticated via the remoteuserbackend.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/views.py#L37'>deprecate_current_app</a>(func)</tt>	Handle deprecation of the current_app parameter of the views.
<tt style='background-color:#E8E8E8;'> contrib.auth.LoginView <a href=' /contrib/auth/views.py#L92'>get_success_url</a>()</tt>	Ensure the user-originating redirection url is safe.
<tt style='background-color:#E8E8E8;'> contrib.auth.LoginView <a href=' /contrib/auth/views.py#L115'>form_valid</a>(form)</tt>	Security check complete log the user in.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/views.py#L210'>logout_then_login</a>(request,login_url,extra_context)</tt>	Logs out the user if they are logged in then redirects to the log-in page.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/views.py#L227'>redirect_to_login</a>(next,login_url,redirect_field_name)</tt>	Redirects the user to the login page passing the given 'next' page.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/views.py#L314'>password_reset_confirm</a>(request,uidb64,token,template_name)</tt>	View that checks the hash in a password reset link and presents a form for entering a new password.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/hashers.py#L36'>check_password</a>(password,encoded,setter,preferred)</tt>	Returns a boolean of whether the raw password matches the three part encoded digest.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/hashers.py#L66'>make_password</a>(password,salt,hasher)</tt>	Turn a plain-text password into a hash for database storage same as encode() but generates a new random salt.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/hashers.py#L112'>get_hasher</a>(algorithm)</tt>	Returns an instance of a loaded password hasher.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/hashers.py#L136'>identify_hasher</a>(encoded)</tt>	Returns an instance of a loaded password hasher.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/hashers.py#L157'>mask_hash</a>(hash,show,char)</tt>	Returns the given hash with only the first show number shown the.
<tt style='background-color:#E8E8E8;'> contrib.auth.BasePasswordHasher <a href=' /contrib/auth/hashers.py#L194'>salt</a>()</tt>	Generates a cryptographically secure nonce salt in ascii.
<tt style='background-color:#E8E8E8;'> contrib.auth.BasePasswordHasher <a href=' /contrib/auth/hashers.py#L200'>verify</a>(password,encoded)</tt>	Checks if the given password is correct.
<tt style='background-color:#E8E8E8;'> contrib.auth.BasePasswordHasher <a href=' /contrib/auth/hashers.py#L206'>encode</a>(password,salt)</tt>	Creates an encoded database value the result is normally formatted as "algorithm$salt$hash" and.
<tt style='background-color:#E8E8E8;'> contrib.auth.BasePasswordHasher <a href=' /contrib/auth/hashers.py#L215'>safe_summary</a>(encoded)</tt>	Returns a summary of safe values the result is a dictionary and will be used where the password field.
<tt style='background-color:#E8E8E8;'> contrib.auth.BasePasswordHasher <a href=' /contrib/auth/hashers.py#L227'>harden_runtime</a>(password,encoded)</tt>	Bridge the runtime gap between the work factor supplied in encoded and the work factor suggested by this hasher.
<tt style='background-color:#E8E8E8;'> contrib.auth.Argon2PasswordHasher <a href=' /contrib/auth/hashers.py#L373'>_decode</a>(encoded)</tt>	Split an encoded hash and return algorithm variety version time_cost memory_cost.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/__init__.py#L43'>_clean_credentials</a>(credentials)</tt>	Cleans a dictionary of credentials of potentially sensitive info before sending to less secure functions.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/__init__.py#L64'>authenticate</a>(request)</tt>	If the given credentials are valid return a user object.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/__init__.py#L114'>login</a>(request,user,backend)</tt>	Persist a user id and a backend in the request this way a user doesn't.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/__init__.py#L159'>logout</a>(request)</tt>	Removes the authenticated user's id from the request and flushes their session data.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/__init__.py#L184'>get_user_model</a>()</tt>	Returns the user model that is active in this project.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/__init__.py#L198'>get_user</a>(request)</tt>	Returns the user model instance associated with the given request session.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/__init__.py#L228'>get_permission_codename</a>(action,opts)</tt>	Returns the codename of the permission for the specified action.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/__init__.py#L235'>update_session_auth_hash</a>(request,user)</tt>	Updating a user's password logs out all sessions for the user.
<tt style='background-color:#E8E8E8;'> contrib.auth.ModelBackend <a href=' /contrib/auth/backends.py#L27'>user_can_authenticate</a>(user)</tt>	Reject users with is_active=false custom user models that don't have.
<tt style='background-color:#E8E8E8;'> contrib.auth.ModelBackend <a href=' /contrib/auth/backends.py#L43'>_get_permissions</a>(user_obj,obj,from_name)</tt>	Returns the permissions of user_obj from from_name from_name can.
<tt style='background-color:#E8E8E8;'> contrib.auth.ModelBackend <a href=' /contrib/auth/backends.py#L62'>get_user_permissions</a>(user_obj,obj)</tt>	Returns a set of permission strings the user user_obj has from their user_permissions.
<tt style='background-color:#E8E8E8;'> contrib.auth.ModelBackend <a href=' /contrib/auth/backends.py#L69'>get_group_permissions</a>(user_obj,obj)</tt>	Returns a set of permission strings the user user_obj has from the groups they belong.
<tt style='background-color:#E8E8E8;'> contrib.auth.ModelBackend <a href=' /contrib/auth/backends.py#L89'>has_module_perms</a>(user_obj,app_label)</tt>	Returns true if user_obj has any permissions in the given app_label.
<tt style='background-color:#E8E8E8;'> contrib.auth.RemoteUserBackend <a href=' /contrib/auth/backends.py#L128'>authenticate</a>(request,remote_user)</tt>	The username passed as remote_user is considered trusted this.
<tt style='background-color:#E8E8E8;'> contrib.auth.RemoteUserBackend <a href=' /contrib/auth/backends.py#L158'>clean_username</a>(username)</tt>	Performs any cleaning on the "username" prior to using it to get or create the user object.
<tt style='background-color:#E8E8E8;'> contrib.auth.RemoteUserBackend <a href=' /contrib/auth/backends.py#L167'>configure_user</a>(user)</tt>	Configures a user after creation and returns the updated user.
<tt style='background-color:#E8E8E8;'> contrib.auth.PermWrapper <a href=' /contrib/auth/context_processors.py#L38'>__contains__</a>(perm_name)</tt>	Lookup by "someapp" or "someapp someperm" in perms.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/context_processors.py#L49'>auth</a>(request)</tt>	Returns context variables required by apps that use django's authentication system.
<tt style='background-color:#E8E8E8;'> contrib.auth.BaseUserManager <a href=' /contrib/auth/base_user.py#L22'>normalize_email</a>(cls,email)</tt>	Normalize the email address by lowercasing the domain part of it.
<tt style='background-color:#E8E8E8;'> contrib.auth.BaseUserManager <a href=' /contrib/auth/base_user.py#L36'>make_random_password</a>(length,allowed_chars)</tt>	Generate a random password with the given length and given allowed_chars.
<tt style='background-color:#E8E8E8;'> contrib.auth.AbstractBaseUser <a href=' /contrib/auth/base_user.py#L63'>get_username</a>()</tt>	Return the identifying username for this user.
<tt style='background-color:#E8E8E8;'> contrib.auth.AbstractBaseUser <a href=' /contrib/auth/base_user.py#L88'>is_anonymous</a>()</tt>	Always return false this is a way of comparing user objects to.
<tt style='background-color:#E8E8E8;'> contrib.auth.AbstractBaseUser <a href=' /contrib/auth/base_user.py#L96'>is_authenticated</a>()</tt>	Always return true this is a way to tell if the user has been.
<tt style='background-color:#E8E8E8;'> contrib.auth.AbstractBaseUser <a href=' /contrib/auth/base_user.py#L108'>check_password</a>(raw_password)</tt>	Return a boolean of whether the raw_password was correct handles.
<tt style='background-color:#E8E8E8;'> contrib.auth.AbstractBaseUser <a href=' /contrib/auth/base_user.py#L133'>get_session_auth_hash</a>()</tt>	Return an hmac of the password field.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/models.py#L19'>update_last_login</a>(sender,user)</tt>	A signal receiver which updates the last_login date for the user logging in.
<tt style='background-color:#E8E8E8;'> contrib.auth.UserManager <a href=' /contrib/auth/models.py#L143'>_create_user</a>(username,email,password)</tt>	Creates and saves a user with the given username email and password.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/models.py#L182'>_user_has_perm</a>(user,perm,obj)</tt>	A backend can raise permissiondenied to short-circuit permission checking.
<tt style='background-color:#E8E8E8;'> contrib.auth. <a href=' /contrib/auth/models.py#L197'>_user_has_module_perms</a>(user,app_label)</tt>	A backend can raise permissiondenied to short-circuit permission checking.
<tt style='background-color:#E8E8E8;'> contrib.auth.PermissionsMixin <a href=' /contrib/auth/models.py#L248'>get_group_permissions</a>(obj)</tt>	Returns a list of permission strings that this user has through their groups.
<tt style='background-color:#E8E8E8;'> contrib.auth.PermissionsMixin <a href=' /contrib/auth/models.py#L263'>has_perm</a>(perm,obj)</tt>	Returns true if the user has the specified permission this method.
<tt style='background-color:#E8E8E8;'> contrib.auth.PermissionsMixin <a href=' /contrib/auth/models.py#L279'>has_perms</a>(perm_list,obj)</tt>	Returns true if the user has each of the specified permissions if.
<tt style='background-color:#E8E8E8;'> contrib.auth.PermissionsMixin <a href=' /contrib/auth/models.py#L287'>has_module_perms</a>(app_label)</tt>	Returns true if the user has any permissions in the given app label.
<tt style='background-color:#E8E8E8;'> contrib.auth.AbstractUser <a href=' /contrib/auth/models.py#L351'>get_full_name</a>()</tt>	Returns the first_name plus the last_name with a space in between.
<tt style='background-color:#E8E8E8;'> contrib.auth.AbstractUser <a href=' /contrib/auth/models.py#L358'>get_short_name</a>()</tt>	Returns the short name for the user.
<tt style='background-color:#E8E8E8;'> contrib.auth.AbstractUser <a href=' /contrib/auth/models.py#L362'>email_user</a>(subject,message,from_email)</tt>	Sends an email to this user.
<tt style='background-color:#E8E8E8;'> contrib.auth.UserAdmin <a href=' /contrib/auth/admin.py#L74'>get_form</a>(request,obj)</tt>	Use special form during user creation.
<tt style='background-color:#E8E8E8;'> contrib.auth.UserAdmin <a href=' /contrib/auth/admin.py#L196'>response_add</a>(request,obj,post_url_continue)</tt>	Determines the httpresponse for the add_view stage it mostly defers to.
<tt style='background-color:#E8E8E8;'> contrib.auth.handlers. <a href=' /contrib/auth/handlers/modwsgi.py#L8'>check_password</a>(environ,username,password)</tt>	Authenticates against django's auth database mod_wsgi docs specify none true false as return value depending.
<tt style='background-color:#E8E8E8;'> contrib.auth.handlers. <a href=' /contrib/auth/handlers/modwsgi.py#L32'>groups_for_user</a>(environ,username)</tt>	Authorizes a user based on groups.
<tt style='background-color:#E8E8E8;'> contrib.auth.management. <a href=' /contrib/auth/management/__init__.py#L17'>_get_all_permissions</a>(opts)</tt>	Returns codename name for all permissions in the given opts.
<tt style='background-color:#E8E8E8;'> contrib.auth.management. <a href=' /contrib/auth/management/__init__.py#L26'>_get_builtin_permissions</a>(opts)</tt>	Returns codename name for all autogenerated permissions.
<tt style='background-color:#E8E8E8;'> contrib.auth.management. <a href=' /contrib/auth/management/__init__.py#L89'>get_system_username</a>()</tt>	Try to determine the current system user's username.
<tt style='background-color:#E8E8E8;'> contrib.auth.management. <a href=' /contrib/auth/management/__init__.py#L112'>get_default_username</a>(check_db)</tt>	Try to determine the current system user's username to use as a default.
<tt style='background-color:#E8E8E8;'> contrib.auth.management.commands.Command <a href=' /contrib/auth/management/commands/createsuperuser.py#L187'>get_input_data</a>(field,message,default)</tt>	Override this method if you want to customize data inputs or validation exceptions.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.HashedFilesMixin <a href=' /contrib/staticfiles/storage.py#L79'>file_hash</a>(name,content)</tt>	Return a hash of the file with the given name and optional content.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.HashedFilesMixin <a href=' /contrib/staticfiles/storage.py#L127'>_url</a>(hashed_name_func,name,force,hashed_files)</tt>	Return the non-hashed url in debug mode.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.HashedFilesMixin <a href=' /contrib/staticfiles/storage.py#L158'>url</a>(name,force)</tt>	Return the non-hashed url in debug mode.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.HashedFilesMixin <a href=' /contrib/staticfiles/storage.py#L164'>url_converter</a>(name,hashed_files,template)</tt>	Return the custom url converter for the given file name.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.HashedFilesMixin <a href=' /contrib/staticfiles/storage.py#L218'>post_process</a>(paths,dry_run)</tt>	Post process the given ordereddict of files called from collectstatic.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles. <a href=' /contrib/staticfiles/urls.py#L8'>staticfiles_urlpatterns</a>(prefix)</tt>	Helper function to return a url pattern for serving static files.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.StaticFilesHandler <a href=' /contrib/staticfiles/handlers.py#L27'>_should_handle</a>(path)</tt>	Checks if the path should be handled ignores the path if.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.StaticFilesHandler <a href=' /contrib/staticfiles/handlers.py#L36'>file_path</a>(url)</tt>	Returns the relative path to the media file on disk for the given url.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.StaticFilesHandler <a href=' /contrib/staticfiles/handlers.py#L43'>serve</a>(request)</tt>	Actually serves the request path.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles. <a href=' /contrib/staticfiles/views.py#L16'>serve</a>(request,path,insecure)</tt>	Serve static files below a given point in the directory structure or from locations inferred from the staticfiles finders.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.BaseFinder <a href=' /contrib/staticfiles/finders.py#L25'>find</a>(path,all)</tt>	Given a relative file path this ought to find an absolute file path.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.BaseFinder <a href=' /contrib/staticfiles/finders.py#L36'>list</a>(ignore_patterns)</tt>	Given an optional list of paths to ignore this should return a two item iterable consisting of the relative path and storage.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.FileSystemFinder <a href=' /contrib/staticfiles/finders.py#L76'>find</a>(path,all)</tt>	Looks for files in the extra locations as defined in staticfiles_dirs.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.FileSystemFinder <a href=' /contrib/staticfiles/finders.py#L92'>find_location</a>(root,path,prefix)</tt>	Finds a requested static file in a location returning the found absolute path (or none if no match).
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.FileSystemFinder <a href=' /contrib/staticfiles/finders.py#L106'>list</a>(ignore_patterns)</tt>	List all files in all locations.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.AppDirectoriesFinder <a href=' /contrib/staticfiles/finders.py#L142'>list</a>(ignore_patterns)</tt>	List all files in all app storages.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.AppDirectoriesFinder <a href=' /contrib/staticfiles/finders.py#L151'>find</a>(path,all)</tt>	Looks for files in the app directories.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.AppDirectoriesFinder <a href=' /contrib/staticfiles/finders.py#L167'>find_in_app</a>(app,path)</tt>	Find a requested static file in an app's static locations.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.BaseStorageFinder <a href=' /contrib/staticfiles/finders.py#L199'>find</a>(path,all)</tt>	Looks for files in the default file storage if it's local.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.BaseStorageFinder <a href=' /contrib/staticfiles/finders.py#L217'>list</a>(ignore_patterns)</tt>	List all files of the storage.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles. <a href=' /contrib/staticfiles/finders.py#L240'>find</a>(path,all)</tt>	Find a static file with the given path using all enabled finders.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles. <a href=' /contrib/staticfiles/finders.py#L267'>get_finder</a>(import_path)</tt>	Imports the staticfiles finder class described by import_path where import_path is the full python path to the class.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles. <a href=' /contrib/staticfiles/utils.py#L8'>matches_patterns</a>(path,patterns)</tt>	Return true or false depending on whether the path should be ignored (if it matches any pattern in ignore_patterns).
<tt style='background-color:#E8E8E8;'> contrib.staticfiles. <a href=' /contrib/staticfiles/utils.py#L21'>get_files</a>(storage,ignore_patterns,location)</tt>	Recursively walk the storage directories yielding the paths of all files that should be copied.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles. <a href=' /contrib/staticfiles/utils.py#L44'>check_settings</a>(base_url)</tt>	Checks if the staticfiles settings have sane values.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.management.commands.Command <a href=' /contrib/staticfiles/management/commands/collectstatic.py#L81'>set_options</a>()</tt>	Set instance variables based on an options dict.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.management.commands.Command <a href=' /contrib/staticfiles/management/commands/collectstatic.py#L96'>collect</a>()</tt>	Perform the bulk of the work of collectstatic.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.management.commands.Command <a href=' /contrib/staticfiles/management/commands/collectstatic.py#L219'>log</a>(msg,level)</tt>	Small log helper.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.management.commands.Command <a href=' /contrib/staticfiles/management/commands/collectstatic.py#L229'>clear_dir</a>(path)</tt>	Deletes the given relative path using the destination storage backend.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.management.commands.Command <a href=' /contrib/staticfiles/management/commands/collectstatic.py#L256'>delete_file</a>(path,prefixed_path,source_storage)</tt>	Checks if the target file should be deleted if it already exists.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.management.commands.Command <a href=' /contrib/staticfiles/management/commands/collectstatic.py#L307'>link_file</a>(path,prefixed_path,source_storage)</tt>	Attempt to link path.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.management.commands.Command <a href=' /contrib/staticfiles/management/commands/collectstatic.py#L346'>copy_file</a>(path,prefixed_path,source_storage)</tt>	Attempt to copy path with storage.
<tt style='background-color:#E8E8E8;'> contrib.staticfiles.management.commands.Command <a href=' /contrib/staticfiles/management/commands/runserver.py#L21'>get_handler</a>()</tt>	Returns the static files serving handler wrapping the default handler if static files should be served.
<tt style='background-color:#E8E8E8;'> contrib.messages.MessageMiddleware <a href=' /contrib/messages/middleware.py#L14'>process_response</a>(request,response)</tt>	Updates the storage backend (i e saves the messages).
<tt style='background-color:#E8E8E8;'> contrib.messages. <a href=' /contrib/messages/api.py#L16'>add_message</a>(request,level,message,extra_tags)</tt>	Attempts to add a message to the request using the 'messages' app.
<tt style='background-color:#E8E8E8;'> contrib.messages. <a href=' /contrib/messages/api.py#L37'>get_messages</a>(request)</tt>	Returns the message storage on the request if it exists otherwise returns an empty list.
<tt style='background-color:#E8E8E8;'> contrib.messages. <a href=' /contrib/messages/api.py#L45'>get_level</a>(request)</tt>	Returns the minimum level of messages to be recorded.
<tt style='background-color:#E8E8E8;'> contrib.messages. <a href=' /contrib/messages/api.py#L56'>set_level</a>(request,level)</tt>	Sets the minimum level of messages to be recorded returning true if the level was recorded successfully.
<tt style='background-color:#E8E8E8;'> contrib.messages. <a href=' /contrib/messages/api.py#L70'>debug</a>(request,message,extra_tags,fail_silently)</tt>	Adds a message with the debug level.
<tt style='background-color:#E8E8E8;'> contrib.messages. <a href=' /contrib/messages/api.py#L78'>info</a>(request,message,extra_tags,fail_silently)</tt>	Adds a message with the info level.
<tt style='background-color:#E8E8E8;'> contrib.messages. <a href=' /contrib/messages/api.py#L86'>success</a>(request,message,extra_tags,fail_silently)</tt>	Adds a message with the success level.
<tt style='background-color:#E8E8E8;'> contrib.messages. <a href=' /contrib/messages/api.py#L94'>warning</a>(request,message,extra_tags,fail_silently)</tt>	Adds a message with the warning level.
<tt style='background-color:#E8E8E8;'> contrib.messages. <a href=' /contrib/messages/api.py#L102'>error</a>(request,message,extra_tags,fail_silently)</tt>	Adds a message with the error level.
<tt style='background-color:#E8E8E8;'> contrib.messages. <a href=' /contrib/messages/utils.py#L5'>get_level_tags</a>()</tt>	Returns the message level tags.
<tt style='background-color:#E8E8E8;'> contrib.messages. <a href=' /contrib/messages/context_processors.py#L5'>messages</a>(request)</tt>	Returns a lazy 'messages' context variable.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.SessionStorage <a href=' /contrib/messages/storage/session.py#L24'>_get</a>()</tt>	Retrieves a list of messages from the request's session this storage.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.SessionStorage <a href=' /contrib/messages/storage/session.py#L32'>_store</a>(messages,response)</tt>	Stores a list of messages to the request's session.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.CookieStorage <a href=' /contrib/messages/storage/cookie.py#L64'>_get</a>()</tt>	Retrieves a list of messages from the messages cookie if the.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.CookieStorage <a href=' /contrib/messages/storage/cookie.py#L79'>_update_cookie</a>(encoded_data,response)</tt>	Either sets the cookie with the encoded data if there is any data to store or deletes the cookie.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.CookieStorage <a href=' /contrib/messages/storage/cookie.py#L94'>_store</a>(messages,response,remove_oldest)</tt>	Stores the messages to a cookie returning a list of any messages which could not be stored.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.CookieStorage <a href=' /contrib/messages/storage/cookie.py#L123'>_hash</a>(value)</tt>	Creates an hmac/sha1 hash based on the value and the project setting's secret_key modified to make it unique for the present purpose.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.CookieStorage <a href=' /contrib/messages/storage/cookie.py#L131'>_encode</a>(messages,encode_empty)</tt>	Returns an encoded version of the messages list which can be stored as plain text.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.CookieStorage <a href=' /contrib/messages/storage/cookie.py#L144'>_decode</a>(data)</tt>	Safely decodes an encoded text stream back into a list of messages.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.Message <a href=' /contrib/messages/storage/base.py#L23'>_prepare</a>()</tt>	Prepares the message for serialization by forcing the message and extra_tags to unicode in case they are lazy translations.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.BaseStorage <a href=' /contrib/messages/storage/base.py#L85'>_loaded_messages</a>()</tt>	Returns a list of loaded messages retrieving them first if they have not been loaded yet.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.BaseStorage <a href=' /contrib/messages/storage/base.py#L96'>_get</a>()</tt>	Retrieves a list of stored messages returns a tuple of the messages.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.BaseStorage <a href=' /contrib/messages/storage/base.py#L111'>_store</a>(messages,response)</tt>	Stores a list of messages returning a list of any messages which could not be stored.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.BaseStorage <a href=' /contrib/messages/storage/base.py#L122'>_prepare_messages</a>(messages)</tt>	Prepares a list of messages for storage.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.BaseStorage <a href=' /contrib/messages/storage/base.py#L129'>update</a>(response)</tt>	Stores all unread messages.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.BaseStorage <a href=' /contrib/messages/storage/base.py#L144'>add</a>(level,message,extra_tags)</tt>	Queues a message to be stored.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.BaseStorage <a href=' /contrib/messages/storage/base.py#L162'>_get_level</a>()</tt>	Returns the minimum recorded level.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.BaseStorage <a href=' /contrib/messages/storage/base.py#L173'>_set_level</a>(value)</tt>	Sets a custom minimum recorded level.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.FallbackStorage <a href=' /contrib/messages/storage/fallback.py#L19'>_get</a>()</tt>	Gets a single list of messages from all storage backends.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage.FallbackStorage <a href=' /contrib/messages/storage/fallback.py#L38'>_store</a>(messages,response)</tt>	Stores the messages returning any unstored messages after trying all backends.
<tt style='background-color:#E8E8E8;'> contrib.messages.storage. <a href=' /contrib/messages/storage/__init__.py#L5'>default_storage</a>(request)</tt>	Callable with the same interface as the storage classes.
<tt style='background-color:#E8E8E8;'> contrib.flatpages. <a href=' /contrib/flatpages/views.py#L22'>flatpage</a>(request,url)</tt>	Public interface to the flat page view.
<tt style='background-color:#E8E8E8;'> contrib.flatpages. <a href=' /contrib/flatpages/views.py#L48'>render_flatpage</a>(request,f)</tt>	Internal interface to the flat page view.
<tt style='background-color:#E8E8E8;'> contrib.flatpages.templatetags. <a href=' /contrib/flatpages/templatetags/flatpages.py#L45'>get_flatpages</a>(parser,token)</tt>	Retrieves all flatpage objects available for the current site and visible to the specific user (or visible to all users if no user is.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes. <a href=' /contrib/contenttypes/forms.py#L49'>generic_inlineformset_factory</a>(model,form,formset,ct_field)</tt>	Returns a genericinlineformset for the given kwargs.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes. <a href=' /contrib/contenttypes/views.py#L11'>shortcut</a>(request,content_type_id,object_id)</tt>	Redirect to an object's page based on a content-type id and an object id.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.ContentTypeManager <a href=' /contrib/contenttypes/models.py#L37'>get_for_model</a>(model,for_concrete_model)</tt>	Returns the contenttype object for a given model creating the contenttype if necessary.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.ContentTypeManager <a href=' /contrib/contenttypes/models.py#L65'>get_for_models</a>()</tt>	Given *models returns a dictionary mapping {model content_type}.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.ContentTypeManager <a href=' /contrib/contenttypes/models.py#L109'>get_for_id</a>(id)</tt>	Lookup a contenttype by id uses the same shared cache as get_for_model.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.ContentTypeManager <a href=' /contrib/contenttypes/models.py#L123'>clear_cache</a>()</tt>	Clear out the content-type cache.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.ContentTypeManager <a href=' /contrib/contenttypes/models.py#L129'>_add_to_cache</a>(using,ct)</tt>	Insert a contenttype into the cache.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.ContentType <a href=' /contrib/contenttypes/models.py#L160'>model_class</a>()</tt>	Returns the python model class for this type of content.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.ContentType <a href=' /contrib/contenttypes/models.py#L167'>get_object_for_this_type</a>()</tt>	Returns an object of this type for the keyword arguments given.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.ContentType <a href=' /contrib/contenttypes/models.py#L176'>get_all_objects_for_this_type</a>()</tt>	Returns all objects of this type for the keyword arguments given.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.GenericForeignKey <a href=' /contrib/contenttypes/fields.py#L59'>get_filter_kwargs_for_object</a>(obj)</tt>	See corresponding method on field.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.GenericForeignKey <a href=' /contrib/contenttypes/fields.py#L66'>get_forward_related_filter</a>(obj)</tt>	See corresponding method on relatedfield.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.GenericForeignKey <a href=' /contrib/contenttypes/fields.py#L111'>_check_content_type_field</a>()</tt>	Check if field named field_name in model model exists and is a valid content_type field is a foreignkey to contenttype.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.GenericRelation <a href=' /contrib/contenttypes/fields.py#L321'>_is_matching_generic_foreign_key</a>(field)</tt>	Return true if field is a genericforeignkey whose content type and object id fields correspond to the equivalent attributes on this.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.GenericRelation <a href=' /contrib/contenttypes/fields.py#L357'>_get_path_info_with_parent</a>()</tt>	Return the path that joins the current model through any parent models.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.GenericRelation <a href=' /contrib/contenttypes/fields.py#L430'>get_content_type</a>()</tt>	Return the content type associated with this field's model.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.GenericRelation <a href=' /contrib/contenttypes/fields.py#L445'>bulk_related_objects</a>(objs,using)</tt>	Return all objects related to objs via this genericrelation.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes. <a href=' /contrib/contenttypes/fields.py#L477'>create_generic_related_manager</a>(superclass,rel)</tt>	Factory function to create a manager that subclasses another manager generally the default manager of a given model and adds behaviors.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.management. <a href=' /contrib/contenttypes/management/__init__.py#L46'>inject_rename_contenttypes_operations</a>(plan,apps,using)</tt>	Insert a renamecontenttype operation after every planned renamemodel operation.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.management. <a href=' /contrib/contenttypes/management/__init__.py#L105'>create_contenttypes</a>(app_config,verbosity,interactive,using)</tt>	Creates content types for models in the given app.
<tt style='background-color:#E8E8E8;'> contrib.contenttypes.management.commands.NoFastDeleteCollector <a href=' /contrib/contenttypes/management/commands/remove_stale_contenttypes.py#L82'>can_fast_delete</a>()</tt>	Always load related objects to display them when showing confirmation.
<tt style='background-color:#E8E8E8;'> contrib.humanize.templatetags. <a href=' /contrib/humanize/templatetags/humanize.py#L20'>ordinal</a>(value)</tt>	Converts an integer to its ordinal as a string 1 is '1st', 2 is '2nd',.
<tt style='background-color:#E8E8E8;'> contrib.humanize.templatetags. <a href=' /contrib/humanize/templatetags/humanize.py#L37'>intcomma</a>(value,use_l10n)</tt>	Converts an integer to a string containing commas every three digits.
<tt style='background-color:#E8E8E8;'> contrib.humanize.templatetags. <a href=' /contrib/humanize/templatetags/humanize.py#L108'>intword</a>(value)</tt>	Converts a large integer to a friendly text representation works best.
<tt style='background-color:#E8E8E8;'> contrib.humanize.templatetags. <a href=' /contrib/humanize/templatetags/humanize.py#L142'>apnumber</a>(value)</tt>	For numbers 1-9 returns the number spelled out otherwise returns the.
<tt style='background-color:#E8E8E8;'> contrib.humanize.templatetags. <a href=' /contrib/humanize/templatetags/humanize.py#L160'>naturalday</a>(value,arg)</tt>	For date values that are tomorrow today or yesterday compared to present day returns representing string.
<tt style='background-color:#E8E8E8;'> contrib.humanize.templatetags. <a href=' /contrib/humanize/templatetags/humanize.py#L189'>naturaltime</a>(value)</tt>	For date and time values shows how many seconds minutes or hours ago compared to current timestamp returns representing string.
<tt style='background-color:#E8E8E8;'> contrib.sites. <a href=' /contrib/sites/shortcuts.py#L6'>get_current_site</a>(request)</tt>	Checks if contrib sites is installed and returns either the current.
<tt style='background-color:#E8E8E8;'> contrib.sites.CurrentSiteManager <a href=' /contrib/sites/managers.py#L50'>_get_field_name</a>()</tt>	Return self __field_name or 'site' or 'sites'.
<tt style='background-color:#E8E8E8;'> contrib.sites. <a href=' /contrib/sites/models.py#L15'>_simple_domain_name_validator</a>(value)</tt>	Validates that the given value contains no whitespaces to prevent common typos.
<tt style='background-color:#E8E8E8;'> contrib.sites.SiteManager <a href=' /contrib/sites/models.py#L53'>get_current</a>(request)</tt>	Returns the current site based on the site_id in the project's settings.
<tt style='background-color:#E8E8E8;'> contrib.sites.SiteManager <a href=' /contrib/sites/models.py#L74'>clear_cache</a>()</tt>	Clears the site object cache.
<tt style='background-color:#E8E8E8;'> contrib.sites. <a href=' /contrib/sites/models.py#L108'>clear_site_cache</a>(sender)</tt>	Clears the cache if primed each time a site is saved or deleted.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L68'>check</a>(app_configs)</tt>	Run the system checks on all modeladmins except if they aren't customized at all.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L84'>register</a>(model_or_iterable,admin_class)</tt>	Registers the given model s with the given admin class.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L127'>unregister</a>(model_or_iterable)</tt>	Unregisters the given model s.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L140'>is_registered</a>(model)</tt>	Check if a model class is registered with this adminsite.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L146'>add_action</a>(action,name)</tt>	Register an action to be available globally.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L154'>disable_action</a>(name)</tt>	Disable a globally-registered action raises keyerror for invalid names.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L160'>get_action</a>(name)</tt>	Explicitly get a registered global action whether it's enabled or not.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L167'>actions</a>()</tt>	Get all the enabled actions as an iterable of name func.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L182'>has_permission</a>(request)</tt>	Returns true if the given httprequest has permission to view *at least one* page in the admin site.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L189'>admin_view</a>(view,cacheable)</tt>	Decorator to create an admin view attached to this adminsite this.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L282'>each_context</a>(request)</tt>	Returns a dictionary of variables to put in the template context for *every* page in the admin site.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L300'>password_change</a>(request,extra_context)</tt>	Handles the "change password" task -- both form display and validation.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L317'>password_change_done</a>(request,extra_context)</tt>	Displays the "success" page after a password change.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L330'>i18n_javascript</a>(request,extra_context)</tt>	Displays the i18n javascript that the django admin requires.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L339'>logout</a>(request,extra_context)</tt>	Logs out the user for the given httprequest.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L361'>login</a>(request,extra_context)</tt>	Displays the login form for the given httprequest.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L395'>_build_app_dict</a>(request,label)</tt>	Builds the app dictionary takes an optional label parameters to filter.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L460'>get_app_list</a>(request)</tt>	Returns a sorted list of all the installed apps that have been registered in this site.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSite <a href=' /contrib/admin/sites.py#L476'>index</a>(request,extra_context)</tt>	Displays the main admin index page which lists all of the installed apps that have been registered in this site.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/decorators.py#L1'>register</a>()</tt>	Registers the given model s classes and wrapped modeladmin class with admin site.
<tt style='background-color:#E8E8E8;'> contrib.admin.ListFilter <a href=' /contrib/admin/filters.py#L34'>has_output</a>()</tt>	Returns true if some choices would be output for this filter.
<tt style='background-color:#E8E8E8;'> contrib.admin.ListFilter <a href=' /contrib/admin/filters.py#L40'>choices</a>(changelist)</tt>	Returns choices ready to be output in the template.
<tt style='background-color:#E8E8E8;'> contrib.admin.ListFilter <a href=' /contrib/admin/filters.py#L48'>queryset</a>(request,queryset)</tt>	Returns the filtered queryset.
<tt style='background-color:#E8E8E8;'> contrib.admin.ListFilter <a href=' /contrib/admin/filters.py#L54'>expected_parameters</a>()</tt>	Returns the list of parameter names that are expected from the request's query string and that will be used by this filter.
<tt style='background-color:#E8E8E8;'> contrib.admin.SimpleListFilter <a href=' /contrib/admin/filters.py#L84'>value</a>()</tt>	Returns the value in string format provided in the request's query string for this filter if any.
<tt style='background-color:#E8E8E8;'> contrib.admin.SimpleListFilter <a href=' /contrib/admin/filters.py#L92'>lookups</a>(request,model_admin)</tt>	Must be overridden to return a list of tuples value verbose value.
<tt style='background-color:#E8E8E8;'> contrib.admin.RelatedFieldListFilter <a href=' /contrib/admin/filters.py#L178'>include_empty_choice</a>()</tt>	Return true if a " none " choice should be included which filters out everything except empty relationships.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/checks.py#L29'>check_dependencies</a>()</tt>	Check that the admin's dependencies are correctly installed.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L86'>_check_raw_id_fields</a>(obj)</tt>	Check that raw_id_fields only contains field names that are listed on the model.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L98'>_check_raw_id_fields_item</a>(obj,model,field_name,label)</tt>	Check an item of raw_id_fields, i e check that field named.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L115'>_check_fields</a>(obj)</tt>	Check that fields only refer to existing fields doesn't contain duplicates.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L147'>_check_fieldsets</a>(obj)</tt>	Check that fieldsets is properly formatted and doesn't contain duplicates.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L161'>_check_fieldsets_item</a>(obj,model,fieldset,label)</tt>	Check an item of fieldsets, i e check that this is a pair of a.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L196'>_check_field_spec</a>(obj,model,fields,label)</tt>	Fields should be an item of fields or an item of fieldset[1]['fields'] for any fieldset in fieldsets.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L237'>_check_exclude</a>(obj)</tt>	Check that exclude is a sequence without duplicates.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L255'>_check_form</a>(obj)</tt>	Check that form subclasses basemodelform.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L264'>_check_filter_vertical</a>(obj)</tt>	Check that filter_vertical is a sequence of field names.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L277'>_check_filter_horizontal</a>(obj)</tt>	Check that filter_horizontal is a sequence of field names.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L290'>_check_filter_item</a>(obj,model,field_name,label)</tt>	Check one item of filter_vertical or filter_horizontal, i e.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L305'>_check_radio_fields</a>(obj)</tt>	Check that radio_fields is a dictionary.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L319'>_check_radio_fields_key</a>(obj,model,field_name,label)</tt>	Check that a key of radio_fields dictionary is name of existing field and that the field is a foreignkey or has choices defined.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L343'>_check_radio_fields_value</a>(obj,val,label)</tt>	Check type of a value of radio_fields dictionary.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L374'>_check_prepopulated_fields</a>(obj)</tt>	Check that prepopulated_fields is a dictionary containing allowed field types.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L389'>_check_prepopulated_fields_key</a>(obj,model,field_name,label)</tt>	Check a key of prepopulated_fields dictionary i e check that it.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L412'>_check_prepopulated_fields_value</a>(obj,model,val,label)</tt>	Check a value of prepopulated_fields dictionary i e it's an.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L424'>_check_prepopulated_fields_value_item</a>(obj,model,field_name,label)</tt>	For prepopulated_fields equal to {"slug": ("title",)}, field_name is "title".
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L435'>_check_ordering</a>(obj)</tt>	Check that ordering refers to existing fields or is random.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L449'>_check_ordering_item</a>(obj,model,field_name,label)</tt>	Check that ordering refers to existing fields.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdminChecks <a href=' /contrib/admin/checks.py#L480'>_check_readonly_fields</a>(obj)</tt>	Check that readonly_fields refers to proper attribute or field.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdminChecks <a href=' /contrib/admin/checks.py#L535'>_check_save_as</a>(obj)</tt>	Check save_as is a boolean.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdminChecks <a href=' /contrib/admin/checks.py#L544'>_check_save_on_top</a>(obj)</tt>	Check save_on_top is a boolean.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdminChecks <a href=' /contrib/admin/checks.py#L553'>_check_inlines</a>(obj)</tt>	Check all inline model admin classes.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdminChecks <a href=' /contrib/admin/checks.py#L564'>_check_inlines_item</a>(obj,model,inline,label)</tt>	Check one inline model admin.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdminChecks <a href=' /contrib/admin/checks.py#L591'>_check_list_display</a>(obj)</tt>	Check that list_display only contains fields or usable attributes.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdminChecks <a href=' /contrib/admin/checks.py#L658'>_check_list_display_links</a>(obj)</tt>	Check that list_display_links is a unique subset of list_display.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdminChecks <a href=' /contrib/admin/checks.py#L700'>_check_list_filter_item</a>(obj,model,item,label)</tt>	Check one item of list_filter, i e check if it is one of three options.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdminChecks <a href=' /contrib/admin/checks.py#L752'>_check_list_select_related</a>(obj)</tt>	Check that list_select_related is a boolean a list or a tuple.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdminChecks <a href=' /contrib/admin/checks.py#L760'>_check_list_per_page</a>(obj)</tt>	Check that list_per_page is an integer.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdminChecks <a href=' /contrib/admin/checks.py#L768'>_check_list_max_show_all</a>(obj)</tt>	Check that list_max_show_all is an integer.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdminChecks <a href=' /contrib/admin/checks.py#L776'>_check_list_editable</a>(obj)</tt>	Check that list_editable is a sequence of editable fields from list_display without first element.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdminChecks <a href=' /contrib/admin/checks.py#L838'>_check_search_fields</a>(obj)</tt>	Check search_fields is a sequence.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdminChecks <a href=' /contrib/admin/checks.py#L846'>_check_date_hierarchy</a>(obj)</tt>	Check that date_hierarchy refers to datefield or datetimefield.
<tt style='background-color:#E8E8E8;'> contrib.admin.InlineModelAdminChecks <a href=' /contrib/admin/checks.py#L920'>_check_extra</a>(obj)</tt>	Check that extra is an integer.
<tt style='background-color:#E8E8E8;'> contrib.admin.InlineModelAdminChecks <a href=' /contrib/admin/checks.py#L928'>_check_max_num</a>(obj)</tt>	Check that max_num is an integer.
<tt style='background-color:#E8E8E8;'> contrib.admin.InlineModelAdminChecks <a href=' /contrib/admin/checks.py#L938'>_check_min_num</a>(obj)</tt>	Check that min_num is an integer.
<tt style='background-color:#E8E8E8;'> contrib.admin.InlineModelAdminChecks <a href=' /contrib/admin/checks.py#L948'>_check_formset</a>(obj)</tt>	Check formset is a subclass of basemodelformset.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L26'>wait_until</a>(callback,timeout)</tt>	Helper function that blocks the execution of the tests until the specified callback returns a value that is not falsy.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L36'>wait_for_popup</a>(num_windows,timeout)</tt>	Block until num_windows are present usually 2 but can be overridden in the case of pop-ups opening other pop-ups.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L43'>wait_for</a>(css_selector,timeout)</tt>	Helper function that blocks until a css selector is found on the page.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L54'>wait_for_text</a>(css_selector,text,timeout)</tt>	Helper function that blocks until the text is found in the css selector.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L66'>wait_for_value</a>(css_selector,text,timeout)</tt>	Helper function that blocks until the value is found in the css selector.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L78'>wait_until_visible</a>(css_selector,timeout)</tt>	Block until the element described by the css selector is visible.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L89'>wait_until_invisible</a>(css_selector,timeout)</tt>	Block until the element described by the css selector is invisible.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L100'>wait_page_loaded</a>()</tt>	Block until page has started to load.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L114'>admin_login</a>(username,password,login_url)</tt>	Helper function to log into the admin.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L128'>get_css_value</a>(selector,attribute)</tt>	Helper function that returns the value for the css attribute of an dom element specified by the given selector.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L137'>get_select_option</a>(selector,value)</tt>	Returns the <option> with the value value inside the <select> widget identified by the css selector selector.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L165'>assertSelectOptions</a>(selector,values)</tt>	Asserts that the <select> widget identified by selector has the options with the given values.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L172'>assertSelectedOptions</a>(selector,values)</tt>	Asserts that the <select> widget identified by selector has the selected options with the given values.
<tt style='background-color:#E8E8E8;'> contrib.admin.AdminSeleniumTestCase <a href=' /contrib/admin/tests.py#L179'>has_css_class</a>(selector,klass)</tt>	Returns true if the element identified by selector has the css class klass.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L127'>formfield_for_dbfield</a>(db_field,request)</tt>	Hook for specifying the form field instance for a given database field instance.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L183'>formfield_for_choice_field</a>(db_field,request)</tt>	Get a form field for a database field that has declared choices.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L201'>get_field_queryset</a>(db,db_field,request)</tt>	If the modeladmin specifies ordering the queryset should respect that ordering.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L214'>formfield_for_foreignkey</a>(db_field,request)</tt>	Get a form field for a foreignkey.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L234'>formfield_for_manytomany</a>(db_field,request)</tt>	Get a form field for a manytomanyfield.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L277'>get_empty_value_display</a>()</tt>	Return the empty_value_display set on modeladmin or adminsite.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L286'>get_exclude</a>(request,obj)</tt>	Hook for specifying exclude.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L292'>get_fields</a>(request,obj)</tt>	Hook for specifying fields.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L298'>get_fieldsets</a>(request,obj)</tt>	Hook for specifying fieldsets.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L306'>get_ordering</a>(request)</tt>	Hook for specifying field ordering.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L312'>get_readonly_fields</a>(request,obj)</tt>	Hook for specifying custom readonly fields.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L318'>get_prepopulated_fields</a>(request,obj)</tt>	Hook for specifying custom prepopulated fields.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L324'>get_queryset</a>(request)</tt>	Returns a queryset of all model instances that can be edited by the admin site.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L387'>to_field_allowed</a>(request,to_field)</tt>	Returns true if the model associated with this admin should be allowed to be referenced by the specified field.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L432'>has_add_permission</a>(request)</tt>	Returns true if the given request has permission to add an object.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L441'>has_change_permission</a>(request,obj)</tt>	Returns true if the given request has permission to change the given django model instance the default implementation doesn't examine the.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L456'>has_delete_permission</a>(request,obj)</tt>	Returns true if the given request has permission to change the given django model instance the default implementation doesn't examine the.
<tt style='background-color:#E8E8E8;'> contrib.admin.BaseModelAdmin <a href=' /contrib/admin/options.py#L471'>has_module_permission</a>(request)</tt>	Returns true if the given request has any permission in the given app label.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L589'>get_model_perms</a>(request)</tt>	Returns a dict of all perms for this model this dict has the keys.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L607'>get_form</a>(request,obj)</tt>	Returns a form class for use in the admin add view this is used by.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L654'>get_changelist</a>(request)</tt>	Returns the changelist class for use on the changelist page.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L661'>get_object</a>(request,object_id,from_field)</tt>	Returns an instance matching the field and value provided the primary key is used if no field is provided.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L676'>get_changelist_form</a>(request)</tt>	Returns a form class for use in the formset on the changelist page.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L689'>get_changelist_formset</a>(request)</tt>	Returns a formset class for use on the changelist page if list_editable is used.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L703'>get_formsets_with_inlines</a>(request,obj)</tt>	Yields formsets and the corresponding inlines.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L713'>log_addition</a>(request,object,message)</tt>	Log that an object has been successfully added.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L729'>log_change</a>(request,object,message)</tt>	Log that an object has been successfully changed.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L745'>log_deletion</a>(request,object,object_repr)</tt>	Log that an object will be deleted note that this method must be.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L761'>action_checkbox</a>(obj)</tt>	A list_display column containing a checkbox widget.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L768'>get_actions</a>(request)</tt>	Return a dictionary mapping the names of all actions for this modeladmin to a tuple of callable name description for each action.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L805'>get_action_choices</a>(request,default_choices)</tt>	Return a list of choices for use in a form object each choice is a.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L816'>get_action</a>(action)</tt>	Return a given action from a parameter which can either be a callable or the name of a method on the modeladmin.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L846'>get_list_display</a>(request)</tt>	Return a sequence containing the fields to be displayed on the changelist.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L853'>get_list_display_links</a>(request,list_display)</tt>	Return a sequence containing the fields to be displayed as links on the changelist.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L865'>get_list_filter</a>(request)</tt>	Returns a sequence containing the fields to be displayed as filters in the right sidebar of the changelist page.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L872'>get_list_select_related</a>(request)</tt>	Returns a list of fields to add to the select_related() part of the changelist items query.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L879'>get_search_fields</a>(request)</tt>	Returns a sequence containing the fields to be searched whenever somebody submits a search query.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L886'>get_search_results</a>(request,queryset,search_term)</tt>	Returns a tuple containing a queryset to implement the search and a boolean indicating if the results may contain duplicates.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L919'>get_preserved_filters</a>(request)</tt>	Returns the preserved filters querystring.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L937'>construct_change_message</a>(request,form,formsets,add)</tt>	Construct a json structure describing changes from a changed object.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L943'>message_user</a>(request,message,level,extra_tags)</tt>	Send a message to the user the default implementation.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L968'>save_form</a>(request,form,change)</tt>	Given a modelform return an unsaved instance change is true if.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L975'>save_model</a>(request,obj,form,change)</tt>	Given a model instance save it to the database.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L981'>delete_model</a>(request,obj)</tt>	Given a model instance delete it from the database.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L987'>save_formset</a>(request,form,formset,change)</tt>	Given an inline formset save it to the database.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L993'>save_related</a>(request,form,formsets,change)</tt>	Given the httprequest, the parent modelform instance the list of inline formsets and a boolean value based on whether the.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L1042'>response_add</a>(request,obj,post_url_continue)</tt>	Determines the httpresponse for the add_view stage.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L1121'>response_change</a>(request,obj)</tt>	Determines the httpresponse for the change_view stage.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L1198'>response_post_save_add</a>(request,obj)</tt>	Figure out where to redirect after the 'save' button has been pressed when adding a new object.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L1215'>response_post_save_change</a>(request,obj)</tt>	Figure out where to redirect after the 'save' button has been pressed when editing an existing object.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L1233'>response_action</a>(request,queryset)</tt>	Handle an admin action this is called if a request is posted to the.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L1300'>response_delete</a>(request,obj_display,obj_id)</tt>	Determines the httpresponse for the delete_view stage.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L1376'>get_changeform_initial_data</a>(request)</tt>	Get the initial form data.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L1392'>_get_obj_does_not_exist_redirect</a>(request,opts,object_id)</tt>	Create a message informing the user that the object doesn't exist and return a redirect to the admin index page.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L1513'>changelist_view</a>(request,extra_context)</tt>	The 'change list' admin view for this model.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L1692'>_delete_view</a>(request,object_id,extra_context)</tt>	The 'delete' admin view for this model.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L1754'>history_view</a>(request,object_id,extra_context)</tt>	The 'history' admin view for this model.
<tt style='background-color:#E8E8E8;'> contrib.admin.ModelAdmin <a href=' /contrib/admin/options.py#L1793'>_create_formsets</a>(request,obj,change)</tt>	Helper function to generate formsets for add/change_view.
<tt style='background-color:#E8E8E8;'> contrib.admin.InlineModelAdmin <a href=' /contrib/admin/options.py#L1866'>get_extra</a>(request,obj)</tt>	Hook for customizing the number of extra inline forms.
<tt style='background-color:#E8E8E8;'> contrib.admin.InlineModelAdmin <a href=' /contrib/admin/options.py#L1870'>get_min_num</a>(request,obj)</tt>	Hook for customizing the min number of inline forms.
<tt style='background-color:#E8E8E8;'> contrib.admin.InlineModelAdmin <a href=' /contrib/admin/options.py#L1874'>get_max_num</a>(request,obj)</tt>	Hook for customizing the max number of extra inline forms.
<tt style='background-color:#E8E8E8;'> contrib.admin.InlineModelAdmin <a href=' /contrib/admin/options.py#L1878'>get_formset</a>(request,obj)</tt>	Returns a baseinlineformset class for use in admin add/change views.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L29'>lookup_needs_distinct</a>(opts,lookup_path)</tt>	Returns true if 'distinct()' should be used to query the given lookup path.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L52'>prepare_lookup_value</a>(key,value)</tt>	Returns a lookup value prepared to be used in queryset filtering.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L68'>quote</a>(s)</tt>	Ensure that primary key values do not confuse the admin urls by escaping any '/', '_' and ':' and similarly problematic characters.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L85'>unquote</a>(s)</tt>	Undo the effects of quote() based heavily on urllib unquote().
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L106'>flatten</a>(fields)</tt>	Returns a list which is a single level of flattening of the original list.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L118'>flatten_fieldsets</a>(fieldsets)</tt>	Returns a list of field names from an admin fieldsets structure.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L128'>get_deleted_objects</a>(objs,opts,user,admin_site)</tt>	Find all objects related to objs that should also be deleted objs.
<tt style='background-color:#E8E8E8;'> contrib.admin.NestedObjects <a href=' /contrib/admin/utils.py#L225'>nested</a>(format_callback)</tt>	Return the graph as a nested list.
<tt style='background-color:#E8E8E8;'> contrib.admin.NestedObjects <a href=' /contrib/admin/utils.py#L235'>can_fast_delete</a>()</tt>	We always want to load the objects into memory so that we can display them to the user in confirm page.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L243'>model_format_dict</a>(obj)</tt>	Return a dict with keys 'verbose_name' and 'verbose_name_plural', typically for use with string formatting.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L262'>model_ngettext</a>(obj,n)</tt>	Return the appropriate verbose_name or verbose_name_plural value for obj depending on the count n.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L309'>_get_non_gfk_field</a>(opts,name)</tt>	For historical reasons the admin app relies on genericforeignkeys as being "not found" by get_field().
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L330'>label_for_field</a>(name,model,model_admin,return_attr)</tt>	Returns a sensible label for a field name the name can be a callable.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L456'>reverse_field_path</a>(model,path)</tt>	Create a reversed field path.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L487'>get_fields_from_path</a>(model,path)</tt>	Return list of fields given path relative to model.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/utils.py#L507'>construct_change_message</a>(form,formsets,add)</tt>	Construct a json structure describing changes from a changed object.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/actions.py#L15'>delete_selected</a>(modeladmin,request,queryset)</tt>	Default action which deletes the selected objects.
<tt style='background-color:#E8E8E8;'> contrib.admin.LogEntry <a href=' /contrib/admin/models.py#L94'>get_change_message</a>()</tt>	If self change_message is a json structure interpret it as a change.
<tt style='background-color:#E8E8E8;'> contrib.admin.LogEntry <a href=' /contrib/admin/models.py#L134'>get_edited_object</a>()</tt>	Returns the edited object represented by this log entry.
<tt style='background-color:#E8E8E8;'> contrib.admin.LogEntry <a href=' /contrib/admin/models.py#L138'>get_admin_url</a>()</tt>	Returns the admin url to edit the object represented by this log entry.
<tt style='background-color:#E8E8E8;'> contrib.admin. <a href=' /contrib/admin/widgets.py#L100'>url_params_from_lookup_dict</a>(lookups)</tt>	Converts the type of lookups specified in a foreignkey limit_choices_to.
<tt style='background-color:#E8E8E8;'> contrib.admin.templatetags. <a href=' /contrib/admin/templatetags/admin_list.py#L33'>paginator_number</a>(cl,i)</tt>	Generates an individual page index link in a paginated list.
<tt style='background-color:#E8E8E8;'> contrib.admin.templatetags. <a href=' /contrib/admin/templatetags/admin_list.py#L49'>pagination</a>(cl)</tt>	Generates the series of links to the pages in a paginated list.
<tt style='background-color:#E8E8E8;'> contrib.admin.templatetags. <a href=' /contrib/admin/templatetags/admin_list.py#L96'>result_headers</a>(cl)</tt>	Generates the list column headers.
<tt style='background-color:#E8E8E8;'> contrib.admin.templatetags. <a href=' /contrib/admin/templatetags/admin_list.py#L188'>_coerce_field_name</a>(field_name,field_index)</tt>	Coerce a field_name which may be a callable to a string.
<tt style='background-color:#E8E8E8;'> contrib.admin.templatetags. <a href=' /contrib/admin/templatetags/admin_list.py#L200'>items_for_result</a>(cl,result,form)</tt>	Generates the actual list of data.
<tt style='background-color:#E8E8E8;'> contrib.admin.templatetags. <a href=' /contrib/admin/templatetags/admin_list.py#L326'>result_list</a>(cl)</tt>	Displays the headers and data list together.
<tt style='background-color:#E8E8E8;'> contrib.admin.templatetags. <a href=' /contrib/admin/templatetags/admin_list.py#L343'>date_hierarchy</a>(cl)</tt>	Displays the date hierarchy for date drill-down functionality.
<tt style='background-color:#E8E8E8;'> contrib.admin.templatetags. <a href=' /contrib/admin/templatetags/admin_list.py#L422'>search_form</a>(cl)</tt>	Displays a search form for searching the list.
<tt style='background-color:#E8E8E8;'> contrib.admin.templatetags. <a href=' /contrib/admin/templatetags/admin_list.py#L444'>admin_actions</a>(context)</tt>	Track the number of times the action field has been rendered on the page so we know which value to use.
<tt style='background-color:#E8E8E8;'> contrib.admin.templatetags. <a href=' /contrib/admin/templatetags/admin_modify.py#L9'>prepopulated_fields_js</a>(context)</tt>	Creates a list of prepopulated_fields that should render javascript for the prepopulated fields for both the admin form and inlines.
<tt style='background-color:#E8E8E8;'> contrib.admin.templatetags. <a href=' /contrib/admin/templatetags/admin_modify.py#L42'>submit_row</a>(context)</tt>	Displays the row of buttons for delete and save.
<tt style='background-color:#E8E8E8;'> contrib.admin.templatetags. <a href=' /contrib/admin/templatetags/admin_modify.py#L69'>cell_count</a>(inline_admin_form)</tt>	Returns the number of cells used in a tabular inline.
<tt style='background-color:#E8E8E8;'> contrib.admin.templatetags. <a href=' /contrib/admin/templatetags/log.py#L26'>get_admin_log</a>(parser,token)</tt>	Populates a template variable with the admin log for the given criteria.
<tt style='background-color:#E8E8E8;'> contrib.admin.views.ChangeList <a href=' /contrib/admin/views/main.py#L87'>get_filters_params</a>(params)</tt>	Returns all params except ignored_params.
<tt style='background-color:#E8E8E8;'> contrib.admin.views.ChangeList <a href=' /contrib/admin/views/main.py#L215'>get_ordering_field</a>(field_name)</tt>	Returns the proper model field name corresponding to the given field_name to use for ordering.
<tt style='background-color:#E8E8E8;'> contrib.admin.views.ChangeList <a href=' /contrib/admin/views/main.py#L237'>get_ordering</a>(request,queryset)</tt>	Returns the list of ordering fields for the change list.
<tt style='background-color:#E8E8E8;'> contrib.admin.views.ChangeList <a href=' /contrib/admin/views/main.py#L281'>get_ordering_field_columns</a>()</tt>	Returns an ordereddict of ordering field column numbers and asc/desc.
<tt style='background-color:#E8E8E8;'> contrib.admin.views. <a href=' /contrib/admin/views/decorators.py#L5'>staff_member_required</a>(view_func,redirect_field_name,login_url)</tt>	Decorator for views that checks that the user is logged in and is a staff member redirecting to the login page if necessary.
<tt style='background-color:#E8E8E8;'> contrib.postgres. <a href=' /contrib/postgres/utils.py#L8'>prefix_validation_error</a>(error,prefix,code,params)</tt>	Prefix a validation error message while maintaining the existing validation data structure.
<tt style='background-color:#E8E8E8;'> contrib.postgres.forms.HStoreField <a href=' /contrib/postgres/forms/hstore.py#L51'>has_changed</a>(initial,data)</tt>	Return true if data differs from initial.
<tt style='background-color:#E8E8E8;'> contrib.sessions.BaseSessionManager <a href=' /contrib/sessions/base_session.py#L13'>encode</a>(session_dict)</tt>	Return the given session dictionary serialized and encoded as a string.
<tt style='background-color:#E8E8E8;'> contrib.sessions.SessionMiddleware <a href=' /contrib/sessions/middleware.py#L22'>process_response</a>(request,response)</tt>	If request session was modified or if the configuration is to save the.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionStore <a href=' /contrib/sessions/backends/db.py#L61'>create_model_instance</a>(data)</tt>	Return a new instance of the session model object which represents the current session state.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionStore <a href=' /contrib/sessions/backends/file.py#L119'>save</a>(must_create)</tt>	To save we get the session key as a securely signed string and then set the modified flag so that the cookie is set on the client for the.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionStore <a href=' /contrib/sessions/backends/file.py#L83'>load</a>()</tt>	We load the data from the key itself instead of fetching from some external data store.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionStore <a href=' /contrib/sessions/backends/file.py#L109'>create</a>()</tt>	To create a new key we simply make sure that the modified flag is set so that the cookie is set on the client for the current request.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionStore <a href=' /contrib/sessions/backends/file.py#L182'>exists</a>(session_key)</tt>	This method makes sense when you're talking to a shared resource but it doesn't matter when you're storing the information in the client's.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionStore <a href=' /contrib/sessions/backends/file.py#L185'>delete</a>(session_key)</tt>	To delete we clear the session key and the underlying data structure and set the modified flag so that the cookie is set on the client for.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionStore <a href=' /contrib/sessions/backends/signed_cookies.py#L62'>cycle_key</a>()</tt>	Keeps the same data but with a new key to do this we just have to.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionStore <a href=' /contrib/sessions/backends/signed_cookies.py#L70'>_get_session_key</a>()</tt>	Most session backends don't need to override this method but we do because instead of generating a random string we want to actually.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L96'>encode</a>(session_dict)</tt>	Returns the given session dictionary serialized and encoded as a string.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L153'>is_empty</a>()</tt>	Returns true when there is no session_key and the session is empty.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L160'>_get_new_session_key</a>()</tt>	Returns session key that isn't being used.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L173'>_validate_session_key</a>(key)</tt>	Key must be truthy and at least 8 characters long 8 characters is an.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L183'>_set_session_key</a>(value)</tt>	Validate session key on assignment invalid values will set to none.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L195'>_get_session</a>(no_load)</tt>	Lazily loads session from storage (unless "no_load" is true when only an empty dict is stored) and stores it in the current instance.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L212'>get_expiry_age</a>()</tt>	Get the number of seconds until the session expires.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L237'>get_expiry_date</a>()</tt>	Get session the expiry date as a datetime object.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L259'>set_expiry</a>(value)</tt>	Sets a custom expiration for the session value can be an integer.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L285'>get_expire_at_browser_close</a>()</tt>	Returns true if the session is set to expire when the browser closes and false if there's an expiry date.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L296'>flush</a>()</tt>	Removes the current session data from the database and regenerates the key.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L305'>cycle_key</a>()</tt>	Creates a new session key while retaining the current session data.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L321'>exists</a>(session_key)</tt>	Returns true if the given session_key already exists.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L327'>create</a>()</tt>	Creates a new session instance guaranteed to create a new object with.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L335'>save</a>(must_create)</tt>	Saves the session data if 'must_create' is true a new session object.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L344'>delete</a>(session_key)</tt>	Deletes the session data under this key if the key is none the.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L351'>load</a>()</tt>	Loads the session data and returns a dictionary.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionBase <a href=' /contrib/sessions/backends/base.py#L357'>clear_expired</a>(cls)</tt>	Remove expired sessions from the session store.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionStore <a href=' /contrib/sessions/backends/cached_db.py#L74'>flush</a>()</tt>	Removes the current session data from the database and regenerates the key.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionStore <a href=' /contrib/sessions/backends/file.py#L46'>_key_to_file</a>(session_key)</tt>	Get the file associated with this session key.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionStore <a href=' /contrib/sessions/backends/file.py#L62'>_last_modification</a>()</tt>	Return the modification time of the file storing the session's content.
<tt style='background-color:#E8E8E8;'> contrib.sessions.backends.SessionStore <a href=' /contrib/sessions/backends/file.py#L74'>_expiry_date</a>(session_data)</tt>	Return the expiry time of the file storing the session's content.
<tt style='background-color:#E8E8E8;'> contrib.sitemaps. <a href=' /contrib/sitemaps/__init__.py#L17'>ping_google</a>(sitemap_url,ping_url)</tt>	Alerts google that the sitemap for the current site has been updated.
<tt style='background-color:#E8E8E8;'> contrib.syndication.Feed <a href=' /contrib/syndication/views.py#L97'>feed_extra_kwargs</a>(obj)</tt>	Returns an extra keyword arguments dictionary that is used when initializing the feed generator.
<tt style='background-color:#E8E8E8;'> contrib.syndication.Feed <a href=' /contrib/syndication/views.py#L104'>item_extra_kwargs</a>(item)</tt>	Returns an extra keyword arguments dictionary that is used with the add_item call of the feed generator.
<tt style='background-color:#E8E8E8;'> contrib.syndication.Feed <a href=' /contrib/syndication/views.py#L114'>get_context_data</a>()</tt>	Returns a dictionary to use as extra context if either self.
<tt style='background-color:#E8E8E8;'> contrib.syndication.Feed <a href=' /contrib/syndication/views.py#L124'>get_feed</a>(obj,request)</tt>	Returns a feedgenerator defaultfeed object fully populated for.
<tt style='background-color:#E8E8E8;'> contrib.gis.CPointerBase <a href=' /contrib/gis/ptr.py#L30'>__del__</a>()</tt>	Free the memory used by the c++ object.
<tt style='background-color:#E8E8E8;'> contrib.gis.GeoFeedMixin <a href=' /contrib/gis/feeds.py#L13'>georss_coords</a>(coords)</tt>	In georss coordinate pairs are ordered by lat/lon and separated by a single white space.
<tt style='background-color:#E8E8E8;'> contrib.gis.GeoFeedMixin <a href=' /contrib/gis/feeds.py#L21'>add_georss_point</a>(handler,coords,w3c_geo)</tt>	Adds a georss point with the given coords using the given handler.
<tt style='background-color:#E8E8E8;'> contrib.gis.GeoFeedMixin <a href=' /contrib/gis/feeds.py#L34'>add_georss_element</a>(handler,item,w3c_geo)</tt>	This routine adds a georss xml element using the given item and handler.
<tt style='background-color:#E8E8E8;'> contrib.gis.MeasureBase <a href=' /contrib/gis/measure.py#L183'>default_units</a>(kwargs)</tt>	Return the unit value and the default units specified from the given keyword arguments dictionary.
<tt style='background-color:#E8E8E8;'> contrib.gis.MeasureBase <a href=' /contrib/gis/measure.py#L213'>unit_attname</a>(cls,unit_str)</tt>	Retrieves the unit attribute name for the given unit string.
<tt style='background-color:#E8E8E8;'> contrib.gis. <a href=' /contrib/gis/views.py#L7'>feed</a>(request,url,feed_dict)</tt>	Provided for backwards compatibility.
<tt style='background-color:#E8E8E8;'> contrib.gis. <a href=' /contrib/gis/shortcuts.py#L15'>compress_kml</a>(kml)</tt>	Returns compressed kmz from the given kml string.
<tt style='background-color:#E8E8E8;'> contrib.gis. <a href=' /contrib/gis/shortcuts.py#L24'>render_to_kml</a>()</tt>	Renders the response as kml using the correct mime type.
<tt style='background-color:#E8E8E8;'> contrib.gis. <a href=' /contrib/gis/shortcuts.py#L32'>render_to_kmz</a>()</tt>	Compresses the kml content and returns as kmz using the correct mime type.
<tt style='background-color:#E8E8E8;'> contrib.gis. <a href=' /contrib/gis/shortcuts.py#L43'>render_to_text</a>()</tt>	Renders the response using the mime type for plain text.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip2.GeoIP2 <a href=' /contrib/gis/geoip2/base.py#L47'>__init__</a>(path,cache,country,city)</tt>	Initialize the geoip object no parameters are required to use default.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip2.GeoIP2 <a href=' /contrib/gis/geoip2/base.py#L146'>_check_query</a>(query,country,city,city_or_country)</tt>	Helper routine for checking the query and database availability.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip2.GeoIP2 <a href=' /contrib/gis/geoip2/base.py#L166'>city</a>(query)</tt>	Return a dictionary of city information for the given ip address or fully qualified domain name fqdn.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip2.GeoIP2 <a href=' /contrib/gis/geoip2/base.py#L175'>country_code</a>(query)</tt>	Return the country code for the given ip address or fqdn.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip2.GeoIP2 <a href=' /contrib/gis/geoip2/base.py#L180'>country_name</a>(query)</tt>	Return the country name for the given ip address or fqdn.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip2.GeoIP2 <a href=' /contrib/gis/geoip2/base.py#L185'>country</a>(query)</tt>	Return a dictionary with the country code and name when given an ip address or a fully qualified domain name fqdn.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip2.GeoIP2 <a href=' /contrib/gis/geoip2/base.py#L203'>lon_lat</a>(query)</tt>	Return a tuple of the longitude latitude for the given query.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip2.GeoIP2 <a href=' /contrib/gis/geoip2/base.py#L207'>lat_lon</a>(query)</tt>	Return a tuple of the latitude longitude for the given query.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip2.GeoIP2 <a href=' /contrib/gis/geoip2/base.py#L211'>geos</a>(query)</tt>	Return a geos point object for the given query.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip2.GeoIP2 <a href=' /contrib/gis/geoip2/base.py#L221'>info</a>()</tt>	Return information about the geoip library and databases in use.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip.GeoIP <a href=' /contrib/gis/geoip/base.py#L62'>__init__</a>(path,cache,country,city)</tt>	Initializes the geoip object no parameters are required to use default settings.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip.GeoIP <a href=' /contrib/gis/geoip/base.py#L159'>_check_query</a>(query,country,city,city_or_country)</tt>	Helper routine for checking the query and database availability.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip.GeoIP <a href=' /contrib/gis/geoip/base.py#L176'>city</a>(query)</tt>	Returns a dictionary of city information for the given ip address or fully qualified domain name fqdn.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip.GeoIP <a href=' /contrib/gis/geoip/base.py#L190'>country_code</a>(query)</tt>	Returns the country code for the given ip address or fqdn.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip.GeoIP <a href=' /contrib/gis/geoip/base.py#L201'>country_name</a>(query)</tt>	Returns the country name for the given ip address or fqdn.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip.GeoIP <a href=' /contrib/gis/geoip/base.py#L212'>country</a>(query)</tt>	Returns a dictionary with the country code and name when given an ip address or a fully qualified domain name fqdn.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip.GeoIP <a href=' /contrib/gis/geoip/base.py#L231'>lon_lat</a>(query)</tt>	Returns a tuple of the longitude latitude for the given query.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip.GeoIP <a href=' /contrib/gis/geoip/base.py#L235'>lat_lon</a>(query)</tt>	Returns a tuple of the latitude longitude for the given query.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip.GeoIP <a href=' /contrib/gis/geoip/base.py#L239'>geos</a>(query)</tt>	Returns a geos point object for the given query.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip.GeoIP <a href=' /contrib/gis/geoip/base.py#L249'>country_info</a>()</tt>	Returns information about the geoip country database.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip.GeoIP <a href=' /contrib/gis/geoip/base.py#L258'>city_info</a>()</tt>	Returns information about the geoip city database.
<tt style='background-color:#E8E8E8;'> contrib.gis.geoip.GeoIP <a href=' /contrib/gis/geoip/base.py#L267'>info</a>()</tt>	Returns information about the geoip library and databases in use.
<tt style='background-color:#E8E8E8;'> contrib.gis.admin.GeoModelAdmin <a href=' /contrib/gis/admin/options.py#L46'>media</a>()</tt>	Injects openlayers javascript into the admin.
<tt style='background-color:#E8E8E8;'> contrib.gis.admin.GeoModelAdmin <a href=' /contrib/gis/admin/options.py#L54'>formfield_for_dbfield</a>(db_field,request)</tt>	Overloaded from modeladmin so that an openlayerswidget is used for viewing/editing 2d geometryfields (openlayers 2 does not support.
<tt style='background-color:#E8E8E8;'> contrib.gis.admin.GeoModelAdmin <a href=' /contrib/gis/admin/options.py#L67'>get_map_widget</a>(db_field)</tt>	Returns a subclass of the openlayerswidget (or whatever was specified in the widget attribute) using the settings from the attributes set.
<tt style='background-color:#E8E8E8;'> contrib.gis.admin.OpenLayersWidget <a href=' /contrib/gis/admin/widgets.py#L81'>map_options</a>()</tt>	Builds the map options hash for the openlayers template.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Field <a href=' /contrib/gis/gdal/field.py#L20'>__init__</a>(feat,index)</tt>	Initializes on the feature object and the integer index of the field within the feature.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Field <a href=' /contrib/gis/gdal/field.py#L43'>__str__</a>()</tt>	Returns the string representation of the field.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Field <a href=' /contrib/gis/gdal/field.py#L48'>as_double</a>()</tt>	Retrieves the field's value as a double float.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Field <a href=' /contrib/gis/gdal/field.py#L52'>as_int</a>(is_64)</tt>	Retrieves the field's value as an integer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Field <a href=' /contrib/gis/gdal/field.py#L59'>as_string</a>()</tt>	Retrieves the field's value as a string.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Field <a href=' /contrib/gis/gdal/field.py#L64'>as_datetime</a>()</tt>	Retrieves the field's value as a tuple of date & time components.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Field <a href=' /contrib/gis/gdal/field.py#L76'>name</a>()</tt>	Returns the name of this field.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Field <a href=' /contrib/gis/gdal/field.py#L82'>precision</a>()</tt>	Returns the precision of this field.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Field <a href=' /contrib/gis/gdal/field.py#L87'>type</a>()</tt>	Returns the ogr type of this field.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Field <a href=' /contrib/gis/gdal/field.py#L92'>type_name</a>()</tt>	Return the ogr field type name for this field.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Field <a href=' /contrib/gis/gdal/field.py#L97'>value</a>()</tt>	Returns the value of this field.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Field <a href=' /contrib/gis/gdal/field.py#L103'>width</a>()</tt>	Returns the width of this field.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OFTInteger <a href=' /contrib/gis/gdal/field.py#L114'>value</a>()</tt>	Returns an integer contained in this field.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OFTInteger <a href=' /contrib/gis/gdal/field.py#L124'>type</a>()</tt>	Gdal uses oftreals to represent oftintegers in created shapefiles -- forcing the type here since the underlying field.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OFTReal <a href=' /contrib/gis/gdal/field.py#L135'>value</a>()</tt>	Returns a float contained in this field.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OFTDate <a href=' /contrib/gis/gdal/field.py#L156'>value</a>()</tt>	Returns a python date object for the oftdate field.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OFTDateTime <a href=' /contrib/gis/gdal/field.py#L167'>value</a>()</tt>	Returns a python datetime object for this oftdatetime field.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OFTTime <a href=' /contrib/gis/gdal/field.py#L182'>value</a>()</tt>	Returns a python time object for this ofttime field.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L67'>__init__</a>(geom_input,srs)</tt>	Initializes geometry on either wkt or an ogr pointer as input.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L145'>from_bbox</a>(cls,bbox)</tt>	Constructs a polygon from a bounding box 4-tuple.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L158'>__or__</a>(other)</tt>	Returns the union of the two geometries.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L163'>__and__</a>(other)</tt>	Returns the intersection of this geometry and the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L168'>__sub__</a>(other)</tt>	Return the difference this geometry and the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L173'>__xor__</a>(other)</tt>	Return the symmetric difference of this geometry and the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L177'>__eq__</a>(other)</tt>	Is this geometry equal to the other?.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L184'>__ne__</a>(other)</tt>	Tests for inequality.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L188'>__str__</a>()</tt>	Wkt is used for the string representation.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L193'>dimension</a>()</tt>	Returns 0 for points 1 for lines and 2 for surfaces.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L198'>_get_coord_dim</a>()</tt>	Returns the coordinate dimension of the geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L202'>_set_coord_dim</a>(dim)</tt>	Sets the coordinate dimension of this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L210'>geom_count</a>()</tt>	The number of elements in this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L215'>point_count</a>()</tt>	Returns the number of points in this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L220'>num_points</a>()</tt>	Alias for point_count same name method in geos api.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L225'>num_coords</a>()</tt>	Alais for point_count.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L230'>geom_type</a>()</tt>	Returns the type for this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L235'>geom_name</a>()</tt>	Returns the name of this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L240'>area</a>()</tt>	Returns the area for a linearring polygon or multipolygon 0 otherwise.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L245'>envelope</a>()</tt>	Returns the envelope for this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L255'>extent</a>()</tt>	Returns the envelope as a 4-tuple instead of as an envelope object.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L263'>_get_srs</a>()</tt>	Returns the spatial reference for this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L271'>_set_srs</a>(srs)</tt>	Sets the spatialreference for this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L310'>geos</a>()</tt>	Returns a geosgeometry object from this ogrgeometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L316'>gml</a>()</tt>	Returns the gml representation of the geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L321'>hex</a>()</tt>	Returns the hexadecimal representation of the wkb a string.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L326'>json</a>()</tt>	Returns the geojson representation of this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L334'>kml</a>()</tt>	Returns the kml representation of the geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L339'>wkb_size</a>()</tt>	Returns the size of the wkb buffer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L344'>wkb</a>()</tt>	Returns the wkb representation of the geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L358'>wkt</a>()</tt>	Returns the wkt representation of the geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L363'>ewkt</a>()</tt>	Returns the ewkt representation of the geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L373'>clone</a>()</tt>	Clones this ogr geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L377'>close_rings</a>()</tt>	If there are any rings within this geometry that have not been closed this routine will do so by adding the starting point at the.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L386'>transform</a>(coord_trans,clone)</tt>	Transforms this geometry to a different spatial reference system.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L414'>_topology</a>(func,other)</tt>	A generalized function for topology operations takes a gdal function and the other geometry to perform the operation on.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L424'>intersects</a>(other)</tt>	Returns true if this geometry intersects with the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L428'>equals</a>(other)</tt>	Returns true if this geometry is equivalent to the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L432'>disjoint</a>(other)</tt>	Returns true if this geometry and the other are spatially disjoint.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L436'>touches</a>(other)</tt>	Returns true if this geometry touches the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L440'>crosses</a>(other)</tt>	Returns true if this geometry crosses the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L444'>within</a>(other)</tt>	Returns true if this geometry is within the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L448'>contains</a>(other)</tt>	Returns true if this geometry contains the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L452'>overlaps</a>(other)</tt>	Returns true if this geometry overlaps the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L457'>_geomgen</a>(gen_func,other)</tt>	A helper routine for the ogr routines that generate geometries.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L464'>boundary</a>()</tt>	Returns the boundary of this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L469'>convex_hull</a>()</tt>	Returns the smallest convex polygon that contains all the points in this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L477'>difference</a>(other)</tt>	Returns a new geometry consisting of the region which is the difference of this geometry and the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L484'>intersection</a>(other)</tt>	Returns a new geometry consisting of the region of intersection of this geometry and the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L491'>sym_difference</a>(other)</tt>	Returns a new geometry which is the symmetric difference of this geometry and the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeometry <a href=' /contrib/gis/gdal/geometries.py#L498'>union</a>(other)</tt>	Returns a new geometry consisting of the region which is the union of this geometry and the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Point <a href=' /contrib/gis/gdal/geometries.py#L517'>x</a>()</tt>	Returns the x coordinate for this point.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Point <a href=' /contrib/gis/gdal/geometries.py#L522'>y</a>()</tt>	Returns the y coordinate for this point.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Point <a href=' /contrib/gis/gdal/geometries.py#L527'>z</a>()</tt>	Returns the z coordinate for this point.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Point <a href=' /contrib/gis/gdal/geometries.py#L533'>tuple</a>()</tt>	Returns the tuple of this point.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.LineString <a href=' /contrib/gis/gdal/geometries.py#L545'>__getitem__</a>(index)</tt>	Returns the point at the given index.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.LineString <a href=' /contrib/gis/gdal/geometries.py#L560'>__iter__</a>()</tt>	Iterates over each point in the linestring.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.LineString <a href=' /contrib/gis/gdal/geometries.py#L565'>__len__</a>()</tt>	The length returns the number of points in the linestring.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.LineString <a href=' /contrib/gis/gdal/geometries.py#L569'>tuple</a>()</tt>	Returns the tuple representation of this linestring.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.LineString <a href=' /contrib/gis/gdal/geometries.py#L575'>_listarr</a>(func)</tt>	Internal routine that returns a sequence list corresponding with the given function.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.LineString <a href=' /contrib/gis/gdal/geometries.py#L582'>x</a>()</tt>	Returns the x coordinates in a list.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.LineString <a href=' /contrib/gis/gdal/geometries.py#L587'>y</a>()</tt>	Returns the y coordinates in a list.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.LineString <a href=' /contrib/gis/gdal/geometries.py#L592'>z</a>()</tt>	Returns the z coordinates in a list.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Polygon <a href=' /contrib/gis/gdal/geometries.py#L606'>__len__</a>()</tt>	The number of interior rings in this polygon.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Polygon <a href=' /contrib/gis/gdal/geometries.py#L610'>__iter__</a>()</tt>	Iterates through each ring in the polygon.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Polygon <a href=' /contrib/gis/gdal/geometries.py#L615'>__getitem__</a>(index)</tt>	Gets the ring at the specified index.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Polygon <a href=' /contrib/gis/gdal/geometries.py#L623'>shell</a>()</tt>	Returns the shell of this polygon.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Polygon <a href=' /contrib/gis/gdal/geometries.py#L629'>tuple</a>()</tt>	Returns a tuple of linearring coordinate tuples.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Polygon <a href=' /contrib/gis/gdal/geometries.py#L635'>point_count</a>()</tt>	The number of points in this polygon.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Polygon <a href=' /contrib/gis/gdal/geometries.py#L641'>centroid</a>()</tt>	Returns the centroid a point of this polygon.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.GeometryCollection <a href=' /contrib/gis/gdal/geometries.py#L654'>__getitem__</a>(index)</tt>	Gets the geometry at the specified index.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.GeometryCollection <a href=' /contrib/gis/gdal/geometries.py#L661'>__iter__</a>()</tt>	Iterates over each geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.GeometryCollection <a href=' /contrib/gis/gdal/geometries.py#L666'>__len__</a>()</tt>	The number of geometries in this geometry collection.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.GeometryCollection <a href=' /contrib/gis/gdal/geometries.py#L670'>add</a>(geom)</tt>	Add the geometry to this geometry collection.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.GeometryCollection <a href=' /contrib/gis/gdal/geometries.py#L684'>point_count</a>()</tt>	The number of points in this geometry collection.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.GeometryCollection <a href=' /contrib/gis/gdal/geometries.py#L690'>tuple</a>()</tt>	Returns a tuple representation of this geometry collection.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L46'>__init__</a>(srs_input,srs_type)</tt>	Creates a gdal osr spatial reference object from the given input.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L95'>__getitem__</a>(target)</tt>	Returns the value of the given string attribute node none if the node doesn't exist.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L123'>__str__</a>()</tt>	The string representation uses 'pretty' wkt.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L128'>attr_value</a>(target,index)</tt>	The attribute value for the given target node (e g 'projcs') the index.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L137'>auth_name</a>(target)</tt>	Returns the authority name for the given string target node.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L141'>auth_code</a>(target)</tt>	Returns the authority code for the given string target node.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L145'>clone</a>()</tt>	Returns a clone of this spatialreference object.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L149'>from_esri</a>()</tt>	Morphs this spatialreference from esri's format to epsg.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L153'>identify_epsg</a>()</tt>	This method inspects the wkt of this spatialreference and will add epsg authority nodes where an epsg identifier is applicable.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L160'>to_esri</a>()</tt>	Morphs this spatialreference to esri's format.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L164'>validate</a>()</tt>	Checks to see if the given spatial reference is valid.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L169'>name</a>()</tt>	Returns the name of this spatial reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L181'>srid</a>()</tt>	Returns the srid of top-level authority or none if undefined.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L190'>linear_name</a>()</tt>	Returns the name of the linear units.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L196'>linear_units</a>()</tt>	Returns the value of the linear units.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L202'>angular_name</a>()</tt>	Returns the name of the angular units.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L208'>angular_units</a>()</tt>	Returns the value of the angular units.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L214'>units</a>()</tt>	Returns a 2-tuple of the units value and the units name and will automatically determines whether to return the linear.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L231'>ellipsoid</a>()</tt>	Returns a tuple of the ellipsoid parameters.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L239'>semi_major</a>()</tt>	Returns the semi major axis for this spatial reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L244'>semi_minor</a>()</tt>	Returns the semi minor axis for this spatial reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L249'>inverse_flattening</a>()</tt>	Returns the inverse flattening for this spatial reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L255'>geographic</a>()</tt>	Returns true if this spatialreference is geographic root node is geogcs.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L263'>local</a>()</tt>	Returns true if this spatialreference is local (root node is local_cs).
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L268'>projected</a>()</tt>	Returns true if this spatialreference is a projected coordinate system root node is projcs.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L277'>import_epsg</a>(epsg)</tt>	Imports the spatial reference from the epsg code an integer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L281'>import_proj</a>(proj)</tt>	Imports the spatial reference from a proj 4 string.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L285'>import_user_input</a>(user_input)</tt>	Imports the spatial reference from the given user input string.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L289'>import_wkt</a>(wkt)</tt>	Imports the spatial reference from ogc wkt string.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L293'>import_xml</a>(xml)</tt>	Imports the spatial reference from an xml string.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L298'>wkt</a>()</tt>	Returns the wkt representation of this spatial reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L303'>pretty_wkt</a>(simplify)</tt>	Returns the 'pretty' representation of the wkt.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L308'>proj</a>()</tt>	Returns the proj 4 representation for this spatial reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L313'>proj4</a>()</tt>	Alias for proj().
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.SpatialReference <a href=' /contrib/gis/gdal/srs.py#L318'>xml</a>(dialect)</tt>	Returns the xml representation of this spatial reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.CoordTransform <a href=' /contrib/gis/gdal/srs.py#L328'>__init__</a>(source,target)</tt>	Initializes on a source and target spatialreference objects.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L28'>__init__</a>(layer_ptr,ds)</tt>	Initializes on an ogr c pointer to the layer and the datasource object that owns this layer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L43'>__getitem__</a>(index)</tt>	Gets the feature at the specified index.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L59'>__iter__</a>()</tt>	Iterates over each feature in the layer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L66'>__len__</a>()</tt>	The length is the number of features.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L70'>__str__</a>()</tt>	The string name of the layer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L74'>_make_feature</a>(feat_id)</tt>	Helper routine for __getitem__ that constructs a feature from the given feature id.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L97'>extent</a>()</tt>	Returns the extent an envelope of this layer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L104'>name</a>()</tt>	Returns the name of this layer in the data source.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L110'>num_feat</a>(force)</tt>	Returns the number of features in the layer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L115'>num_fields</a>()</tt>	Returns the number of fields in the layer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L120'>geom_type</a>()</tt>	Returns the geometry type ogrgeomtype of the layer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L125'>srs</a>()</tt>	Returns the spatial reference used in this layer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L134'>fields</a>()</tt>	Returns a list of string names corresponding to each of the fields available in this layer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L144'>field_types</a>()</tt>	Returns a list of the types of fields in this layer for example.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L155'>field_widths</a>()</tt>	Returns a list of the maximum field widths for the features.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L161'>field_precisions</a>()</tt>	Returns the field precisions for the features.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L191'>get_fields</a>(field_name)</tt>	Returns a list containing the given field name for every feature in the layer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L200'>get_geoms</a>(geos)</tt>	Returns a list containing the ogrgeometry for every feature in the layer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Layer <a href=' /contrib/gis/gdal/layer.py#L211'>test_capability</a>(capability)</tt>	Returns a bool indicating whether the this layer supports the given capability a string.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Envelope <a href=' /contrib/gis/gdal/envelope.py#L37'>__init__</a>()</tt>	The initialization function may take an ogrenvelope structure 4-element tuple or list or 4 individual arguments.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Envelope <a href=' /contrib/gis/gdal/envelope.py#L68'>__eq__</a>(other)</tt>	Returns true if the envelopes are equivalent can compare against other envelopes and 4-tuples.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Envelope <a href=' /contrib/gis/gdal/envelope.py#L82'>__str__</a>()</tt>	Returns a string representation of the tuple.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Envelope <a href=' /contrib/gis/gdal/envelope.py#L86'>_from_sequence</a>(seq)</tt>	Initializes the c ogr envelope structure from the given sequence.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Envelope <a href=' /contrib/gis/gdal/envelope.py#L94'>expand_to_include</a>()</tt>	Modifies the envelope to expand to include the boundaries of the passed-in 2-tuple a point 4-tuple an extent or.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Envelope <a href=' /contrib/gis/gdal/envelope.py#L136'>min_x</a>()</tt>	Returns the value of the minimum x coordinate.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Envelope <a href=' /contrib/gis/gdal/envelope.py#L141'>min_y</a>()</tt>	Returns the value of the minimum y coordinate.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Envelope <a href=' /contrib/gis/gdal/envelope.py#L146'>max_x</a>()</tt>	Returns the value of the maximum x coordinate.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Envelope <a href=' /contrib/gis/gdal/envelope.py#L151'>max_y</a>()</tt>	Returns the value of the maximum y coordinate.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Envelope <a href=' /contrib/gis/gdal/envelope.py#L156'>ur</a>()</tt>	Returns the upper-right coordinate.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Envelope <a href=' /contrib/gis/gdal/envelope.py#L161'>ll</a>()</tt>	Returns the lower-left coordinate.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Envelope <a href=' /contrib/gis/gdal/envelope.py#L166'>tuple</a>()</tt>	Returns a tuple representing the envelope.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Envelope <a href=' /contrib/gis/gdal/envelope.py#L171'>wkt</a>()</tt>	Returns wkt representing a polygon for this envelope.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal. <a href=' /contrib/gis/gdal/libgdal.py#L59'>std_call</a>(func)</tt>	Returns the correct stdcall function for certain osr routines on win32 platforms.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal. <a href=' /contrib/gis/gdal/libgdal.py#L78'>gdal_version</a>()</tt>	Returns only the gdal version number information.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal. <a href=' /contrib/gis/gdal/libgdal.py#L83'>gdal_full_version</a>()</tt>	Returns the full gdal version information.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal. <a href=' /contrib/gis/gdal/error.py#L63'>check_err</a>(code,cpl)</tt>	Checks the given cpl/ogrerr and raises an exception where appropriate.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.DataSource <a href=' /contrib/gis/gdal/datasource.py#L89'>__iter__</a>()</tt>	Allows for iteration over the layers in a data source.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.DataSource <a href=' /contrib/gis/gdal/datasource.py#L94'>__getitem__</a>(index)</tt>	Allows use of the index [] operator to get a layer at the index.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.DataSource <a href=' /contrib/gis/gdal/datasource.py#L108'>__len__</a>()</tt>	Returns the number of layers within the data source.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.DataSource <a href=' /contrib/gis/gdal/datasource.py#L112'>__str__</a>()</tt>	Returns ogr getname and driver for the data source.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.DataSource <a href=' /contrib/gis/gdal/datasource.py#L116'>layer_count</a>()</tt>	Returns the number of layers in the data source.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.DataSource <a href=' /contrib/gis/gdal/datasource.py#L121'>name</a>()</tt>	Returns the name of the data source.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeomType <a href=' /contrib/gis/gdal/geomtype.py#L33'>__init__</a>(type_input)</tt>	Figures out the correct ogr type based upon the input.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeomType <a href=' /contrib/gis/gdal/geomtype.py#L54'>__str__</a>()</tt>	Returns the value of the name property.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeomType <a href=' /contrib/gis/gdal/geomtype.py#L58'>__eq__</a>(other)</tt>	Does an equivalence test on the ogr type with the given other ogrgeomtype the short-hand string or the integer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeomType <a href=' /contrib/gis/gdal/geomtype.py#L75'>name</a>()</tt>	Returns a short-hand string form of the ogr geometry type.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeomType <a href=' /contrib/gis/gdal/geomtype.py#L80'>django</a>()</tt>	Returns the django geometryfield for this ogr type.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.OGRGeomType <a href=' /contrib/gis/gdal/geomtype.py#L92'>to_multi</a>()</tt>	Transform point linestring polygon and their 25d equivalents to their multi.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L22'>__init__</a>(feat,layer)</tt>	Initializes feature from a pointer and its layer object.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L31'>__getitem__</a>(index)</tt>	Gets the field object at the specified index which may be either an integer or the field's string label.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L46'>__iter__</a>()</tt>	Iterates over each field in the feature.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L51'>__len__</a>()</tt>	Returns the count of fields in this feature.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L55'>__str__</a>()</tt>	The string name of the feature.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L59'>__eq__</a>(other)</tt>	Does equivalence testing on the features.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L68'>fid</a>()</tt>	Returns the feature identifier.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L73'>layer_name</a>()</tt>	Returns the name of the layer for the feature.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L79'>num_fields</a>()</tt>	Returns the number of fields in the feature.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L84'>fields</a>()</tt>	Returns a list of fields in the feature.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L90'>geom</a>()</tt>	Returns the ogr geometry for this feature.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L97'>geom_type</a>()</tt>	Returns the ogr geometry type for this feture.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L103'>get</a>(field)</tt>	Returns the value of the field instead of an instance of the field object.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Feature <a href=' /contrib/gis/gdal/feature.py#L112'>index</a>(field_name)</tt>	Returns the index of the given field name.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Driver <a href=' /contrib/gis/gdal/driver.py#L35'>__init__</a>(dr_input)</tt>	Initializes an gdal/ogr driver on either a string or integer input.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Driver <a href=' /contrib/gis/gdal/driver.py#L74'>ensure_registered</a>(cls)</tt>	Attempts to register all the data source drivers.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Driver <a href=' /contrib/gis/gdal/driver.py#L86'>driver_count</a>(cls)</tt>	Returns the number of gdal/ogr data source drivers registered.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.Driver <a href=' /contrib/gis/gdal/driver.py#L93'>name</a>()</tt>	Returns description/name string for this driver.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L151'>__repr__</a>()</tt>	Short-hand representation because wkb may be very large.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L157'>_flush</a>()</tt>	Flush all data from memory into the source file if it exists.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L169'>name</a>()</tt>	Returns the name of this raster corresponds to filename.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L177'>driver</a>()</tt>	Returns the gdal driver used for this raster.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L185'>width</a>()</tt>	Width x axis in pixels.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L192'>height</a>()</tt>	Height y axis in pixels.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L212'>srs</a>()</tt>	Returns the spatialreference used in this gdalraster.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L212'>srs</a>(value)</tt>	Sets the spatial reference used in this gdalraster the input can be.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L235'>srid</a>()</tt>	Shortcut to access the srid of this gdalraster.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L235'>srid</a>(value)</tt>	Shortcut to set this gdalraster's srs from an srid.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L254'>geotransform</a>()</tt>	Returns the geotransform of the data source.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L254'>geotransform</a>(values)</tt>	Sets the geotransform for the data source.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L264'>origin</a>()</tt>	Coordinates of the raster origin.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L271'>scale</a>()</tt>	Pixel scale in units of the raster projection.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L278'>skew</a>()</tt>	Skew of pixels rotation parameters.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L285'>extent</a>()</tt>	Returns the extent as a 4-tuple xmin ymin xmax ymax.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L305'>warp</a>(ds_input,resampling,max_error)</tt>	Returns a warped gdalraster with the given input characteristics.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALRaster <a href=' /contrib/gis/gdal/raster/source.py#L373'>transform</a>(srid,driver,name,resampling)</tt>	Returns a copy of this raster reprojected into the given srid.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L22'>_flush</a>()</tt>	Call the flush method on the band's parent raster and force a refresh of the statistics attribute when requested the next time.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L30'>description</a>()</tt>	Returns the description string of the band.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L37'>width</a>()</tt>	Width x axis in pixels of the band.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L44'>height</a>()</tt>	Height y axis in pixels of the band.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L51'>pixel_count</a>()</tt>	Returns the total number of pixels in this band.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L60'>statistics</a>(refresh,approximate)</tt>	Compute statistics on the pixel values of this band.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L106'>min</a>()</tt>	Return the minimum pixel value for this band.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L113'>max</a>()</tt>	Return the maximum pixel value for this band.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L120'>mean</a>()</tt>	Return the mean of all pixel values of this band.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L127'>std</a>()</tt>	Return the standard deviation of all pixel values of this band.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L149'>nodata_value</a>()</tt>	Returns the nodata value for this band or none if it isn't set.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L149'>nodata_value</a>(value)</tt>	Sets the nodata value for this band.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L164'>datatype</a>(as_string)</tt>	Returns the gdal pixel datatype for this band.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.raster.GDALBand <a href=' /contrib/gis/gdal/raster/band.py#L173'>data</a>(data,offset,size,shape)</tt>	Reads or writes pixel values for this band blocks of data can.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/srs.py#L11'>srs_double</a>(f)</tt>	Creates a function prototype for the osr routines that take.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/srs.py#L19'>units_func</a>(f)</tt>	Creates a ctypes function prototype for osr units functions e g.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/errcheck.py#L16'>arg_byref</a>(args,offset)</tt>	Returns the pointer argument's by-reference value.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/errcheck.py#L21'>ptr_byref</a>(args,offset)</tt>	Returns the pointer argument passed in by-reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/errcheck.py#L27'>check_const_string</a>(result,func,cargs,offset)</tt>	Similar functionality to check_string, but does not free the pointer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/errcheck.py#L39'>check_string</a>(result,func,cargs,offset)</tt>	Checks the string output returned from the given function and frees the string pointer allocated by ogr.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/errcheck.py#L71'>check_envelope</a>(result,func,cargs,offset)</tt>	Checks a function that returns an ogr envelope by reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/errcheck.py#L78'>check_geom</a>(result,func,cargs)</tt>	Checks a function that returns a geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/errcheck.py#L89'>check_geom_offset</a>(result,func,cargs,offset)</tt>	Chcks the geometry at the given offset in the c parameter list.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/errcheck.py#L106'>check_arg_errcode</a>(result,func,cargs,cpl)</tt>	The error code is returned in the last argument by reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/errcheck.py#L115'>check_errcode</a>(result,func,cargs,cpl)</tt>	Check the error code returned (c_int).
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/errcheck.py#L122'>check_pointer</a>(result,func,cargs)</tt>	Makes sure the result pointer is valid.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/errcheck.py#L132'>check_str_arg</a>(result,func,cargs)</tt>	This is for the osrget[angular|linear]units functions which require that the returned string pointer not be freed.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/generation.py#L18'>double_output</a>(func,argtypes,errcheck,strarg)</tt>	Generates a ctypes function that returns a double value.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/generation.py#L29'>geom_output</a>(func,argtypes,offset)</tt>	Generates a function that returns a geometry either by reference or directly (if the return_geom keyword is set to true).
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/generation.py#L52'>int_output</a>(func,argtypes,errcheck)</tt>	Generates a ctypes function that returns an integer value.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/generation.py#L61'>int64_output</a>(func,argtypes)</tt>	Generates a ctypes function that returns a 64-bit integer value.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/generation.py#L68'>srs_output</a>(func,argtypes)</tt>	Generates a ctypes prototype for the given function with the given c arguments that returns a pointer to an ogr.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/generation.py#L97'>string_output</a>(func,argtypes,offset,str_result)</tt>	Generates a ctypes prototype for the given function with the given argument types that returns a string from a gdal pointer.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/generation.py#L125'>void_output</a>(func,argtypes,errcheck,cpl)</tt>	For functions that don't only return an error code that needs to be examined.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/generation.py#L143'>voidptr_output</a>(func,argtypes,errcheck)</tt>	For functions that return c_void_p.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/geom.py#L13'>env_func</a>(f,argtypes)</tt>	For getting ogrenvelopes.
<tt style='background-color:#E8E8E8;'> contrib.gis.gdal.prototypes. <a href=' /contrib/gis/gdal/prototypes/geom.py#L21'>pnt_func</a>(f)</tt>	For accessing point information.
<tt style='background-color:#E8E8E8;'> contrib.gis.sitemaps. <a href=' /contrib/gis/sitemaps/views.py#L12'>kml</a>(request,label,model,field_name)</tt>	This view generates kml for the given app label model and field name.
<tt style='background-color:#E8E8E8;'> contrib.gis.sitemaps. <a href=' /contrib/gis/sitemaps/views.py#L59'>kmz</a>(request,label,model,field_name)</tt>	This view returns kmz for the given app label model and field name.
<tt style='background-color:#E8E8E8;'> contrib.gis.sitemaps.KMLSitemap <a href=' /contrib/gis/sitemaps/kml.py#L19'>_build_kml_sources</a>(sources)</tt>	Goes through the given sources and returns a 3-tuple of the application label module name and field name of every.
<tt style='background-color:#E8E8E8;'> contrib.gis.sitemaps.KMLSitemap <a href=' /contrib/gis/sitemaps/kml.py#L45'>get_urls</a>(page,site,protocol)</tt>	This method is overridden so the appropriate geo_format attribute is placed on each url element.
<tt style='background-color:#E8E8E8;'> contrib.gis.forms.GeometryField <a href=' /contrib/gis/forms/fields.py#L35'>to_python</a>(value)</tt>	Transforms the value to a geometry object.
<tt style='background-color:#E8E8E8;'> contrib.gis.forms.GeometryField <a href=' /contrib/gis/forms/fields.py#L57'>clean</a>(value)</tt>	Validates that the input value can be converted to a geometry object which is returned.
<tt style='background-color:#E8E8E8;'> contrib.gis.forms.GeometryField <a href=' /contrib/gis/forms/fields.py#L82'>has_changed</a>(initial,data)</tt>	Compare geographic value of data with its initial value.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis. <a href=' /contrib/gis/db/backends/postgis/pgraster.py#L12'>pack</a>(structure,data)</tt>	Pack data into hex string with little endian format.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis. <a href=' /contrib/gis/db/backends/postgis/pgraster.py#L19'>unpack</a>(structure,data)</tt>	Unpack little endian hexlified binary string into a list.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis. <a href=' /contrib/gis/db/backends/postgis/pgraster.py#L26'>chunk</a>(data,index)</tt>	Split a string into two parts at the input index.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis. <a href=' /contrib/gis/db/backends/postgis/pgraster.py#L33'>get_pgraster_srid</a>(data)</tt>	Extract the srid from a postgis raster string.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis. <a href=' /contrib/gis/db/backends/postgis/pgraster.py#L45'>from_pgraster</a>(data)</tt>	Convert a postgis hex string into a dictionary.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis. <a href=' /contrib/gis/db/backends/postgis/pgraster.py#L111'>to_pgraster</a>(rast)</tt>	Convert a gdalraster into postgis raster format.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISSchemaEditor <a href=' /contrib/gis/db/backends/postgis/schema.py#L43'>_alter_column_type_sql</a>(table,old_field,new_field,new_type)</tt>	Special case when dimension changed.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L212'>spatial_version</a>()</tt>	Determine the version of the postgis library.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L242'>convert_extent</a>(box,srid)</tt>	Returns a 4-tuple extent for the extent aggregate by converting the bounding box text returned by postgis (box argument), for.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L255'>convert_extent3d</a>(box3d,srid)</tt>	Returns a 6-tuple extent for the extent3d aggregate by converting the 3d bounding-box text returned by postgis (box3d argument), for.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L268'>geo_db_type</a>(f)</tt>	Return the database field type for the given spatial field.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L289'>get_distance</a>(f,dist_val,lookup_type,handle_spheroid)</tt>	Retrieve the distance parameters for the given geometry field distance lookup value and the distance lookup type.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L331'>get_geom_placeholder</a>(f,value,compiler)</tt>	Provide a proper substitution value for geometries or rasters that are not in the srid of the field.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L363'>_get_postgis_func</a>(func)</tt>	Helper routine for calling postgis functions and returning their result.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L372'>postgis_geos_version</a>()</tt>	Returns the version of the geos library used with postgis.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L376'>postgis_lib_version</a>()</tt>	Returns the version number of the postgis library used with postgresql.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L380'>postgis_proj_version</a>()</tt>	Returns the version of the proj 4 library used with postgis.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L384'>postgis_version</a>()</tt>	Returns postgis version number and compile-time options.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L388'>postgis_full_version</a>()</tt>	Returns postgis version number and compile-time options.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L392'>postgis_version_tuple</a>()</tt>	Returns the postgis version as a tuple version string major minor subminor.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISOperations <a href=' /contrib/gis/db/backends/postgis/operations.py#L410'>proj_version_tuple</a>()</tt>	Return the version of proj 4 used by postgis as a tuple of the.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISIntrospection <a href=' /contrib/gis/db/backends/postgis/introspection.py#L42'>get_postgis_types</a>()</tt>	Returns a dictionary with keys that are the postgresql object identification integers for the postgis geometry and/or.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISIntrospection <a href=' /contrib/gis/db/backends/postgis/introspection.py#L84'>get_geometry_type</a>(table_name,geo_col)</tt>	The geometry type oid used by postgis does not indicate the particular type of field that a geometry column is (e.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISAdapter <a href=' /contrib/gis/db/backends/postgis/adapter.py#L14'>__init__</a>(obj,geography)</tt>	Initialize on the spatial object.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISAdapter <a href=' /contrib/gis/db/backends/postgis/adapter.py#L49'>prepare</a>(conn)</tt>	This method allows escaping the binary in the style required by the server's standard_conforming_string setting.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISAdapter <a href=' /contrib/gis/db/backends/postgis/adapter.py#L57'>getquoted</a>()</tt>	Return a properly quoted string for use in postgresql/postgis.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISGeometryColumns <a href=' /contrib/gis/db/backends/postgis/models.py#L28'>table_name_col</a>(cls)</tt>	Returns the name of the metadata column used to store the feature table name.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.postgis.PostGISGeometryColumns <a href=' /contrib/gis/db/backends/postgis/models.py#L36'>geom_col_name</a>(cls)</tt>	Returns the name of the metadata column used to store the feature geometry column.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.oracle.OracleOperations <a href=' /contrib/gis/db/backends/oracle/operations.py#L193'>geo_db_type</a>(f)</tt>	Returns the geometry database type for oracle unlike other spatial.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.oracle.OracleOperations <a href=' /contrib/gis/db/backends/oracle/operations.py#L201'>get_distance</a>(f,value,lookup_type)</tt>	Returns the distance parameters given the value and the lookup type.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.oracle.OracleOperations <a href=' /contrib/gis/db/backends/oracle/operations.py#L226'>get_geom_placeholder</a>(f,value,compiler)</tt>	Provides a proper substitution value for geometries that are not in the srid of the field.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.oracle.OracleOperations <a href=' /contrib/gis/db/backends/oracle/operations.py#L253'>spatial_aggregate_name</a>(agg_name)</tt>	Returns the spatial aggregate sql name.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.oracle.OracleOperations <a href=' /contrib/gis/db/backends/oracle/operations.py#L269'>modify_insert_params</a>(placeholder,params)</tt>	Drop out insert parameters for null placeholder needed for oracle spatial.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.oracle.OracleSpatialAdapter <a href=' /contrib/gis/db/backends/oracle/adapter.py#L11'>__init__</a>(geom)</tt>	Oracle requires that polygon rings are in proper orientation this.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.oracle.OracleGeometryColumns <a href=' /contrib/gis/db/backends/oracle/models.py#L28'>table_name_col</a>(cls)</tt>	Returns the name of the metadata column used to store the feature table name.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.oracle.OracleGeometryColumns <a href=' /contrib/gis/db/backends/oracle/models.py#L36'>geom_col_name</a>(cls)</tt>	Returns the name of the metadata column used to store the feature geometry column.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.BaseSpatialOperations <a href=' /contrib/gis/db/backends/base/operations.py#L91'>geo_db_type</a>(f)</tt>	Returns the database column type for the geometry field on the spatial backend.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.BaseSpatialOperations <a href=' /contrib/gis/db/backends/base/operations.py#L98'>get_distance</a>(f,value,lookup_type)</tt>	Returns the distance parameters for the given geometry field lookup value and lookup type.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.BaseSpatialOperations <a href=' /contrib/gis/db/backends/base/operations.py#L105'>get_geom_placeholder</a>(f,value,compiler)</tt>	Returns the placeholder for the given geometry field with the given value.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L12'>srs</a>()</tt>	Returns a gdal spatialreference object.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L39'>ellipsoid</a>()</tt>	Returns a tuple of the ellipsoid parameters semimajor axis semiminor axis and inverse flattening.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L47'>name</a>()</tt>	Returns the projection name.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L52'>spheroid</a>()</tt>	Returns the spheroid name for this spatial reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L57'>datum</a>()</tt>	Returns the datum for this spatial reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L62'>projected</a>()</tt>	Is this spatial reference projected?.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L67'>local</a>()</tt>	Is this spatial reference local?.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L72'>geographic</a>()</tt>	Is this spatial reference geographic?.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L77'>linear_name</a>()</tt>	Returns the linear units name.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L82'>linear_units</a>()</tt>	Returns the linear units.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L87'>angular_name</a>()</tt>	Returns the name of the angular units.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L92'>angular_units</a>()</tt>	Returns the angular units.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L97'>units</a>()</tt>	Returns a tuple of the units and the name.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L107'>get_units</a>(cls,wkt)</tt>	Return a tuple of (unit_value unit_name) for the given wkt without using any of the database fields.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L115'>get_spheroid</a>(cls,wkt,string)</tt>	Class method used by geometryfield on initialization to retrieve the spheroid[.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.base.SpatialRefSysMixin <a href=' /contrib/gis/db/backends/base/models.py#L135'>__str__</a>()</tt>	Returns the string representation a 'pretty' ogc wkt.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.mysql.MySQLOperations <a href=' /contrib/gis/db/backends/mysql/operations.py#L87'>get_geom_placeholder</a>(f,value,compiler)</tt>	The placeholder here has to include mysql's wkt constructor because.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatiaLiteOperations <a href=' /contrib/gis/db/backends/spatialite/operations.py#L121'>spatial_version</a>()</tt>	Determine the version of the spatialite library.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatiaLiteOperations <a href=' /contrib/gis/db/backends/spatialite/operations.py#L136'>convert_extent</a>(box,srid)</tt>	Convert the polygon data received from spatialite to min/max values.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatiaLiteOperations <a href=' /contrib/gis/db/backends/spatialite/operations.py#L147'>geo_db_type</a>(f)</tt>	Returns none because geometry columns are added via the addgeometrycolumn stored procedure on spatialite.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatiaLiteOperations <a href=' /contrib/gis/db/backends/spatialite/operations.py#L154'>get_distance</a>(f,value,lookup_type)</tt>	Returns the distance parameters for the given geometry field lookup value and lookup type.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatiaLiteOperations <a href=' /contrib/gis/db/backends/spatialite/operations.py#L176'>get_geom_placeholder</a>(f,value,compiler)</tt>	Provides a proper substitution value for geometries that are not in the srid of the field.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatiaLiteOperations <a href=' /contrib/gis/db/backends/spatialite/operations.py#L200'>_get_spatialite_func</a>(func)</tt>	Helper routine for calling spatialite functions and returning their result.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatiaLiteOperations <a href=' /contrib/gis/db/backends/spatialite/operations.py#L214'>geos_version</a>()</tt>	Returns the version of geos used by spatialite as a string.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatiaLiteOperations <a href=' /contrib/gis/db/backends/spatialite/operations.py#L218'>proj4_version</a>()</tt>	Returns the version of the proj 4 library used by spatialite.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatiaLiteOperations <a href=' /contrib/gis/db/backends/spatialite/operations.py#L222'>lwgeom_version</a>()</tt>	Return the version of lwgeom library used by spatialite.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatiaLiteOperations <a href=' /contrib/gis/db/backends/spatialite/operations.py#L226'>spatialite_version</a>()</tt>	Returns the spatialite library version as a string.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatiaLiteOperations <a href=' /contrib/gis/db/backends/spatialite/operations.py#L230'>spatialite_version_tuple</a>()</tt>	Returns the spatialite version as a tuple version string major minor subminor.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatiaLiteOperations <a href=' /contrib/gis/db/backends/spatialite/operations.py#L247'>spatial_aggregate_name</a>(agg_name)</tt>	Returns the spatial aggregate sql template and function for the given aggregate instance.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatialiteGeometryColumns <a href=' /contrib/gis/db/backends/spatialite/models.py#L26'>table_name_col</a>(cls)</tt>	Returns the name of the metadata column used to store the feature table name.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.backends.spatialite.SpatialiteGeometryColumns <a href=' /contrib/gis/db/backends/spatialite/models.py#L34'>geom_col_name</a>(cls)</tt>	Returns the name of the metadata column used to store the feature geometry column.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GISLookup <a href=' /contrib/gis/db/models/lookups.py#L31'>_check_geo_field</a>(cls,opts,lookup)</tt>	Utility for checking the given lookup with the given model options.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GISLookup <a href=' /contrib/gis/db/models/lookups.py#L71'>process_band_indices</a>(only_lhs)</tt>	Extract the lhs band index from the band transform class and the rhs band index from the input tuple.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L25'>area</a>(tolerance)</tt>	Returns the area of the geographic field in an area attribute on each element of this geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L56'>centroid</a>()</tt>	Returns the centroid of the geographic field in a centroid attribute on each element of this geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L63'>difference</a>(geom)</tt>	Returns the spatial difference of the geographic field in a difference attribute on each element of this geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L70'>distance</a>(geom)</tt>	Returns the distance from the given geographic field name to the given geometry in a distance attribute on each element of the.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L88'>envelope</a>()</tt>	Returns a geometry representing the bounding box of the geometry field in an envelope attribute on each element of.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L96'>force_rhr</a>()</tt>	Returns a modified version of the polygon/multipolygon in which all of the vertices follow the right-hand-rule.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L105'>geojson</a>(precision,crs,bbox)</tt>	Returns a geojson representation of the geometry field in a geojson attribute on each element of the geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L134'>geohash</a>(precision)</tt>	Returns a geohash representation of the given field in a geohash attribute on each element of the geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L148'>gml</a>(precision,version)</tt>	Returns gml representation of the given field in a gml attribute on each element of the geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L163'>intersection</a>(geom)</tt>	Returns the spatial intersection of the geometry field in an intersection attribute on each element of this.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L171'>kml</a>()</tt>	Returns kml representation of the geometry field in a kml attribute on each element of this geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L182'>length</a>()</tt>	Returns the length of the geometry field as a distance object stored in a length attribute on each element of this geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L189'>mem_size</a>()</tt>	Returns the memory size number of bytes that the geometry field takes in a mem_size attribute on each element of this geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L196'>num_geom</a>()</tt>	Returns the number of geometries if the field is a geometrycollection or multi* field in a num_geom.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L205'>num_points</a>()</tt>	Returns the number of points in the first linestring in the geometry field in a num_points attribute on each element of.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L213'>perimeter</a>()</tt>	Returns the perimeter of the geometry field as a distance object stored in a perimeter attribute on each element of this geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L220'>point_on_surface</a>()</tt>	Returns a point geometry guaranteed to lie on the surface of the geometry field in a point_on_surface attribute on each element.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L228'>reverse_geom</a>()</tt>	Reverses the coordinate order of the geometry and attaches as a reverse attribute on each element of this geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L239'>scale</a>(x,y,z)</tt>	Scales the geometry to a new size by multiplying the ordinates with the given x y z scale factors.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L258'>snap_to_grid</a>()</tt>	Snap all points of the input geometry to the grid how the.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L294'>svg</a>(relative,precision)</tt>	Returns svg representation of the geographic field in a svg attribute on each element of this geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L319'>sym_difference</a>(geom)</tt>	Returns the symmetric difference of the geographic field in a sym_difference attribute on each element of this geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L326'>translate</a>(x,y,z)</tt>	Translates the geometry to a new location using the given numeric parameters as offsets.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L345'>transform</a>(srid)</tt>	Transforms the given geometry field to the given srid if no srid is.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L357'>union</a>(geom)</tt>	Returns the union of the geographic field with the given geometry in a union attribute on each element of this geoqueryset.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L365'>_spatial_setup</a>(att,desc,field_name,geo_field_type)</tt>	Performs set up for executing the spatial function.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L398'>_spatial_attribute</a>(att,settings,field_name,model_att)</tt>	Dry routine for calling a spatial stored procedure on a geometry column and attaching its output as an attribute of the model.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L485'>_distance_attribute</a>(func,geom,tolerance,spheroid)</tt>	Dry routine for geoqueryset distance attribute routines.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L638'>_geom_attribute</a>(func,tolerance)</tt>	Dry routine for setting up a geoqueryset method that attaches a geometry attribute (e.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L649'>_geomset_attribute</a>(func,geom,tolerance)</tt>	Dry routine for setting up a geoqueryset method that attaches a geometry attribute and takes a geoemtry parameter.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L667'>_geocol_select</a>(geo_field,field_name)</tt>	Helper routine for constructing the sql to select the geographic column.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L697'>_geo_field</a>(field_name)</tt>	Returns the first geometry field encountered or the one specified via the field_name keyword.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoQuerySet <a href=' /contrib/gis/db/models/query.py#L715'>_field_column</a>(compiler,field,table_alias,column)</tt>	Helper function that returns the database column for the given field.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.SpatialProxy <a href=' /contrib/gis/db/models/proxy.py#L13'>__init__</a>(klass,field)</tt>	Proxy initializes on the given geometry or raster class not an instance and the corresponding field.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.SpatialProxy <a href=' /contrib/gis/db/models/proxy.py#L22'>__get__</a>(instance,cls)</tt>	This accessor retrieves the geometry or raster initializing it using the corresponding class specified during initialization and the value.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.SpatialProxy <a href=' /contrib/gis/db/models/proxy.py#L50'>__set__</a>(instance,value)</tt>	This accessor sets the proxied geometry or raster with the corresponding class specified during initialization.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models. <a href=' /contrib/gis/db/models/fields.py#L22'>get_srid_info</a>(srid,connection)</tt>	Returns the units unit name and spheroid wkt associated with the given srid from the spatial_ref_sys or equivalent spatial database.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeoSelectFormatMixin <a href=' /contrib/gis/db/models/fields.py#L53'>select_format</a>(compiler,sql,params)</tt>	Returns the selection format string depending on the requirements of the spatial backend.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.BaseSpatialField <a href=' /contrib/gis/db/models/fields.py#L88'>__init__</a>(verbose_name,srid,spatial_index)</tt>	The initialization function for base spatial fields takes the following.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.BaseSpatialField <a href=' /contrib/gis/db/models/fields.py#L149'>geodetic</a>(connection)</tt>	Returns true if this field's srid corresponds with a coordinate system that uses non-projected units (e.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.BaseSpatialField <a href=' /contrib/gis/db/models/fields.py#L157'>get_placeholder</a>(value,compiler,connection)</tt>	Returns the placeholder for the spatial column for the given value.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.BaseSpatialField <a href=' /contrib/gis/db/models/fields.py#L164'>get_srid</a>(obj)</tt>	Return the default srid for the given geometry or raster taking into account the srid set for the field.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.BaseSpatialField <a href=' /contrib/gis/db/models/fields.py#L177'>get_db_prep_save</a>(value,connection)</tt>	Prepare the value for saving in the database.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.BaseSpatialField <a href=' /contrib/gis/db/models/fields.py#L186'>get_raster_prep_value</a>(value,is_candidate)</tt>	Return a gdalraster if conversion is successful otherwise return none.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.BaseSpatialField <a href=' /contrib/gis/db/models/fields.py#L203'>get_prep_value</a>(value)</tt>	Spatial lookup values are either a parameter that is or may be converted to a geometry or raster or a sequence of lookup values.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeometryField <a href=' /contrib/gis/db/models/fields.py#L267'>__init__</a>(verbose_name,dim,geography)</tt>	The initialization function for geometry fields in addition to the.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeometryField <a href=' /contrib/gis/db/models/fields.py#L308'>get_distance</a>(value,lookup_type,connection)</tt>	Returns a distance number in units of the field for example if.
<tt style='background-color:#E8E8E8;'> contrib.gis.db.models.GeometryField <a href=' /contrib/gis/db/models/fields.py#L349'>_get_db_prep_lookup</a>(lookup_type,value,connection)</tt>	Prepare for the database lookup and return any spatial parameters necessary for the query.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils. <a href=' /contrib/gis/utils/srs.py#L5'>add_srs_entry</a>(srs,auth_name,auth_srid,ref_sys_name)</tt>	This function takes a gdal spatialreference system and adds its information to the spatial_ref_sys table of the spatial backend.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L81'>__init__</a>(model,data,mapping,layer)</tt>	A layermapping object is initialized using the given model not an instance a datasource or string path to an ogr-supported data file and a mapping.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L153'>check_fid_range</a>(fid_range)</tt>	This checks the fid_range keyword.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L165'>check_layer</a>()</tt>	This checks the layer metadata and ensures that it is compatible with the mapping information and model.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L262'>check_srs</a>(source_srs)</tt>	Checks the compatibility of the given spatial reference object.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L280'>check_unique</a>(unique)</tt>	Checks the unique keyword parameter -- may be a sequence or string.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L295'>feature_kwargs</a>(feat)</tt>	Given an ogr feature this will return a dictionary of keyword arguments for constructing the mapped model.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L328'>unique_kwargs</a>(kwargs)</tt>	Given the feature keyword arguments (from feature_kwargs) this routine will construct and return the uniqueness keyword arguments -- a subset.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L340'>verify_ogr_field</a>(ogr_field,model_field)</tt>	Verifies if the ogr field contents are acceptable to the django model field.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L398'>verify_fk</a>(feat,rel_model,rel_mapping)</tt>	Given an ogr feature the related model and its dictionary mapping this routine will retrieve the related model for the foreignkey.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L422'>verify_geom</a>(geom,model_field)</tt>	Verifies the geometry -- will construct and return a geometrycollection if necessary (for example if the model field is multipolygonfield while.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L450'>coord_transform</a>()</tt>	Returns the coordinate transformation object.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L463'>geometry_field</a>()</tt>	Returns the geometryfield instance associated with the geographic column.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L470'>make_multi</a>(geom_type,model_field)</tt>	Given the ogrgeomtype for a geometry and its associated geometryfield determine whether the geometry should be turned into a geometrycollection.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils.LayerMapping <a href=' /contrib/gis/utils/layermapping.py#L478'>save</a>(verbose,fid_range,step,progress)</tt>	Saves the contents from the ogr datasource layer into the database according to the mapping dictionary given at initialization.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils. <a href=' /contrib/gis/utils/wkt.py#L10'>precision_wkt</a>(geom,prec)</tt>	Returns wkt text of the geometry according to the given precision an integer or a string.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils. <a href=' /contrib/gis/utils/ogrinfo.py#L11'>ogrinfo</a>(data_source,num_features)</tt>	Walks the available layers in the supplied data_source, displaying the fields for the first num_features features.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils. <a href=' /contrib/gis/utils/ogrinspect.py#L15'>mapping</a>(data_source,geom_name,layer_key,multi_geom)</tt>	Given a datasource generates a dictionary that may be used for invoking the layermapping utility.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils. <a href=' /contrib/gis/utils/ogrinspect.py#L53'>ogrinspect</a>()</tt>	Given a data source either a string or a datasource object and a string model name this function will generate a geodjango model.
<tt style='background-color:#E8E8E8;'> contrib.gis.utils. <a href=' /contrib/gis/utils/ogrinspect.py#L124'>_ogrinspect</a>(data_source,model_name,geom_name,layer_key)</tt>	Helper routine for ogrinspect that generates geodjango models corresponding to the given data source.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos. <a href=' /contrib/gis/geos/libgeos.py#L133'>get_pointer_arr</a>(n)</tt>	Gets a ctypes pointer array (of length n) for geosgeom_t opaque pointer.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos. <a href=' /contrib/gis/geos/libgeos.py#L186'>geos_version_info</a>()</tt>	Returns a dictionary containing the various version metadata parsed from the geos version string including the version number whether the version.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos. <a href=' /contrib/gis/geos/factory.py#L5'>fromfile</a>(file_h)</tt>	Given a string file name returns a geosgeometry the file may contain wkb.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos. <a href=' /contrib/gis/geos/factory.py#L31'>fromstr</a>(string)</tt>	Given a string value returns a geosgeometry object.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.LineString <a href=' /contrib/gis/geos/linestring.py#L15'>__init__</a>()</tt>	Initializes on the given sequence -- may take lists tuples numpy arrays of x y pairs or point objects.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.LineString <a href=' /contrib/gis/geos/linestring.py#L92'>__iter__</a>()</tt>	Allows iteration over this linestring.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.LineString <a href=' /contrib/gis/geos/linestring.py#L97'>__len__</a>()</tt>	Returns the number of points in this linestring.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.LineString <a href=' /contrib/gis/geos/linestring.py#L133'>tuple</a>()</tt>	Returns a tuple version of the geometry from the coordinate sequence.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.LineString <a href=' /contrib/gis/geos/linestring.py#L139'>_listarr</a>(func)</tt>	Internal routine that returns a sequence list corresponding with the given function.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.LineString <a href=' /contrib/gis/geos/linestring.py#L150'>array</a>()</tt>	Returns a numpy array for the linestring.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.LineString <a href=' /contrib/gis/geos/linestring.py#L155'>x</a>()</tt>	Returns a list or numpy array of the x variable.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.LineString <a href=' /contrib/gis/geos/linestring.py#L160'>y</a>()</tt>	Returns a list or numpy array of the y variable.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.LineString <a href=' /contrib/gis/geos/linestring.py#L165'>z</a>()</tt>	Returns a list or numpy array of the z variable.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GeometryCollection <a href=' /contrib/gis/geos/collections.py#L23'>__init__</a>()</tt>	Initializes a geometry collection from a sequence of geometry objects.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GeometryCollection <a href=' /contrib/gis/geos/collections.py#L45'>__iter__</a>()</tt>	Iterates over each geometry in the collection.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GeometryCollection <a href=' /contrib/gis/geos/collections.py#L50'>__len__</a>()</tt>	Returns the number of geometries in this collection.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GeometryCollection <a href=' /contrib/gis/geos/collections.py#L68'>_get_single_external</a>(index)</tt>	Returns the geometry from this collection at the given index 0-based.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GeometryCollection <a href=' /contrib/gis/geos/collections.py#L73'>_set_list</a>(length,items)</tt>	Create a new collection and destroy the contents of the previous pointer.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GeometryCollection <a href=' /contrib/gis/geos/collections.py#L98'>kml</a>()</tt>	Returns the kml for this geometry collection.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GeometryCollection <a href=' /contrib/gis/geos/collections.py#L103'>tuple</a>()</tt>	Returns a tuple of all the coordinates in this geometry collection.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.MultiPolygon <a href=' /contrib/gis/geos/collections.py#L131'>cascaded_union</a>()</tt>	Returns a cascaded union of this multipolygon.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Point <a href=' /contrib/gis/geos/point.py#L18'>__init__</a>(x,y,z,srid)</tt>	The point object may be initialized with either a tuple or individual parameters.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Point <a href=' /contrib/gis/geos/point.py#L54'>_create_point</a>(cls,ndim,coords)</tt>	Create a coordinate sequence set x y [z], and create point.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Point <a href=' /contrib/gis/geos/point.py#L87'>__iter__</a>()</tt>	Allows iteration over coordinates of this point.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Point <a href=' /contrib/gis/geos/point.py#L92'>__len__</a>()</tt>	Returns the number of dimensions for this point either 0 2 or 3.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Point <a href=' /contrib/gis/geos/point.py#L116'>x</a>()</tt>	Returns the x component of the point.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Point <a href=' /contrib/gis/geos/point.py#L116'>x</a>(value)</tt>	Sets the x component of the point.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Point <a href=' /contrib/gis/geos/point.py#L126'>y</a>()</tt>	Returns the y component of the point.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Point <a href=' /contrib/gis/geos/point.py#L126'>y</a>(value)</tt>	Sets the y component of the point.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Point <a href=' /contrib/gis/geos/point.py#L136'>z</a>()</tt>	Returns the z component of the point.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Point <a href=' /contrib/gis/geos/point.py#L136'>z</a>(value)</tt>	Sets the z component of the point.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Point <a href=' /contrib/gis/geos/point.py#L191'>tuple</a>()</tt>	Returns a tuple of the point.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Point <a href=' /contrib/gis/geos/point.py#L191'>tuple</a>(tup)</tt>	Sets the coordinates of the point with the given tuple.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Polygon <a href=' /contrib/gis/geos/polygon.py#L14'>__init__</a>()</tt>	Initializes on an exterior ring and a sequence of holes (both instances may be either linearring instances or a tuple/list.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Polygon <a href=' /contrib/gis/geos/polygon.py#L52'>__iter__</a>()</tt>	Iterates over each ring in the polygon.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Polygon <a href=' /contrib/gis/geos/polygon.py#L57'>__len__</a>()</tt>	Returns the number of rings in this polygon.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Polygon <a href=' /contrib/gis/geos/polygon.py#L61'>from_bbox</a>(cls,bbox)</tt>	Constructs a polygon from a bounding box 4-tuple.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Polygon <a href=' /contrib/gis/geos/polygon.py#L106'>_construct_ring</a>(param,msg)</tt>	Helper routine for trying to construct a ring from the given parameter.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Polygon <a href=' /contrib/gis/geos/polygon.py#L127'>_get_single_internal</a>(index)</tt>	Returns the ring at the specified index the first index 0 will.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Polygon <a href=' /contrib/gis/geos/polygon.py#L152'>num_interior_rings</a>()</tt>	Returns the number of interior rings.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Polygon <a href=' /contrib/gis/geos/polygon.py#L158'>_get_ext_ring</a>()</tt>	Gets the exterior ring of the polygon.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Polygon <a href=' /contrib/gis/geos/polygon.py#L162'>_set_ext_ring</a>(ring)</tt>	Sets the exterior ring of the polygon.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Polygon <a href=' /contrib/gis/geos/polygon.py#L170'>tuple</a>()</tt>	Gets the tuple for each ring in this polygon.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.Polygon <a href=' /contrib/gis/geos/polygon.py#L176'>kml</a>()</tt>	Returns the kml representation of this polygon.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L75'>__getitem__</a>(index)</tt>	Get the item s at the specified index/slice.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L83'>__delitem__</a>(index)</tt>	Delete the item s at the specified index/slice.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L103'>__setitem__</a>(index,val)</tt>	Set the item s at the specified index/slice.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L113'>__add__</a>(other)</tt>	Add another list-like object.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L117'>__radd__</a>(other)</tt>	Add to another list-like object.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L121'>__iadd__</a>(other)</tt>	Add another list-like object to self.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L172'>count</a>(val)</tt>	Standard list count method.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L180'>index</a>(val)</tt>	Standard list index method.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L188'>append</a>(val)</tt>	Standard list append method.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L192'>extend</a>(vals)</tt>	Standard list extend method.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L196'>insert</a>(index,val)</tt>	Standard list insert method.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L202'>pop</a>(index)</tt>	Standard list pop method.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L208'>remove</a>(val)</tt>	Standard list remove method.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L212'>reverse</a>()</tt>	Standard list reverse method.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L216'>sort</a>(cmp,key,reverse)</tt>	Standard list sort method.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L255'>_set_slice</a>(index,values)</tt>	Assign values to a slice of the object.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L275'>_assign_extended_slice_rebuild</a>(start,stop,step,valueList)</tt>	Assign an extended slice by rebuilding entire list.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L297'>_assign_extended_slice</a>(start,stop,step,valueList)</tt>	Assign an extended slice by re-assigning individual items.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.ListMixin <a href=' /contrib/gis/geos/mutable_list.py#L309'>_assign_simple_slice</a>(start,stop,valueList)</tt>	Assign a simple slice can assign slice of any length.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.WKBReader <a href=' /contrib/gis/geos/io.py#L16'>read</a>(wkb)</tt>	Returns a geosgeometry for the given wkb buffer.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.WKTReader <a href=' /contrib/gis/geos/io.py#L22'>read</a>(wkt)</tt>	Returns a geosgeometry for the given wkt string.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L21'>__init__</a>(ptr,z)</tt>	Initializes from a geos pointer.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L28'>__iter__</a>()</tt>	Iterates over each point in the coordinate sequence.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L33'>__len__</a>()</tt>	Returns the number of points in the coordinate sequence.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L37'>__str__</a>()</tt>	Returns the string representation of the coordinate sequence.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L41'>__getitem__</a>(index)</tt>	Returns the coordinate sequence value at the given index.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L48'>__setitem__</a>(index,value)</tt>	Sets the coordinate sequence value at the given index.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L73'>_checkindex</a>(index)</tt>	Checks the given index.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L79'>_checkdim</a>(dim)</tt>	Checks the given dimension.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L85'>getOrdinate</a>(dimension,index)</tt>	Returns the value for the given dimension and index.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L91'>setOrdinate</a>(dimension,index,value)</tt>	Sets the value for the given dimension and index.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L97'>getX</a>(index)</tt>	Get the x value at the index.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L101'>setX</a>(index,value)</tt>	Set x with the value at the given index.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L105'>getY</a>(index)</tt>	Get the y value at the given index.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L109'>setY</a>(index,value)</tt>	Set y with the value at the given index.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L113'>getZ</a>(index)</tt>	Get z with the value at the given index.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L117'>setZ</a>(index,value)</tt>	Set z with the value at the given index.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L122'>size</a>()</tt>	Returns the size of this coordinate sequence.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L127'>dims</a>()</tt>	Returns the dimensions of this coordinate sequence.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L132'>hasz</a>()</tt>	Returns whether this coordinate sequence is 3d this property value is.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L141'>clone</a>()</tt>	Clones this coordinate sequence.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L145'>kml</a>()</tt>	Returns the kml representation for the coordinates.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSCoordSeq <a href=' /contrib/gis/geos/coordseq.py#L157'>tuple</a>()</tt>	Returns a tuple version of this coordinate sequence.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L39'>__init__</a>(geo_input,srid)</tt>	The base constructor for geos geometry objects and may take the following inputs.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L92'>_post_init</a>(srid)</tt>	Helper routine for performing post-initialization setup.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L124'>__copy__</a>()</tt>	Returns a clone because the copy of a geosgeometry may contain an invalid pointer location if the original is garbage collected.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L131'>__deepcopy__</a>(memodict)</tt>	The deepcopy routine is used by the node class of django utils tree.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L139'>__str__</a>()</tt>	Ewkt is used for the string representation.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L143'>__repr__</a>()</tt>	Short-hand representation because wkt may be very large.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L171'>__eq__</a>(other)</tt>	Equivalence testing a geometry may be compared with another geometry or an ewkt representation.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L185'>__ne__</a>(other)</tt>	The not equals operator.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L193'>__or__</a>(other)</tt>	Returns the union of this geometry and the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L198'>__and__</a>(other)</tt>	Returns the intersection of this geometry and the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L203'>__sub__</a>(other)</tt>	Return the difference this geometry and the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L208'>__xor__</a>(other)</tt>	Return the symmetric difference of this geometry and the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L213'>_set_cs</a>()</tt>	Sets the coordinate sequence for this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L220'>coord_seq</a>()</tt>	Returns a clone of the coordinate sequence for this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L227'>geom_type</a>()</tt>	Returns a string representing the geometry type e g 'polygon'.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L232'>geom_typeid</a>()</tt>	Returns an integer representing the geometry type.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L237'>num_geom</a>()</tt>	Returns the number of geometries in the geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L242'>num_coords</a>()</tt>	Returns the number of coordinates in the geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L247'>num_points</a>()</tt>	Returns the number points or coordinates in the geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L252'>dims</a>()</tt>	Returns the dimension of this geometry (0=point 1=line 2=surface).
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L257'>normalize</a>()</tt>	Converts this geometry to normal form or canonical form.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L262'>empty</a>()</tt>	Returns a boolean indicating whether the set of points in this geometry are empty.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L270'>hasz</a>()</tt>	Returns whether the geometry has a 3d dimension.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L275'>ring</a>()</tt>	Returns whether or not the geometry is a ring.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L280'>simple</a>()</tt>	Returns false if the geometry not simple.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L285'>valid</a>()</tt>	This property tests the validity of this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L290'>valid_reason</a>()</tt>	Returns a string containing the reason for any invalidity.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L298'>contains</a>(other)</tt>	Returns true if other within this returns true.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L302'>covers</a>(other)</tt>	Return true if the de-9im intersection matrix for the two geometries is t*****ff*, *t****ff*, ***t**ff*, or ****t*ff*.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L310'>crosses</a>(other)</tt>	Returns true if the de-9im intersection matrix for the two geometries is t*t****** (for a point and a curve a point and an area or a line and.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L318'>disjoint</a>(other)</tt>	Returns true if the de-9im intersection matrix for the two geometries is ff*ff****.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L325'>equals</a>(other)</tt>	Returns true if the de-9im intersection matrix for the two geometries is t*f**fff*.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L332'>equals_exact</a>(other,tolerance)</tt>	Returns true if the two geometries are exactly equal up to a specified tolerance.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L339'>intersects</a>(other)</tt>	Returns true if disjoint returns false.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L343'>overlaps</a>(other)</tt>	Returns true if the de-9im intersection matrix for the two geometries is t*t***t** for two points or two surfaces 1*t***t** for two curves.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L350'>relate_pattern</a>(other,pattern)</tt>	Returns true if the elements in the de-9im intersection matrix for the two geometries match the elements in pattern.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L359'>touches</a>(other)</tt>	Returns true if the de-9im intersection matrix for the two geometries is ft*******, f**t***** or f***t****.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L366'>within</a>(other)</tt>	Returns true if the de-9im intersection matrix for the two geometries is t*f**f***.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L383'>srid</a>()</tt>	Gets the srid for the geometry returns none if no srid is set.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L383'>srid</a>(srid)</tt>	Sets the srid for the geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L403'>ewkt</a>()</tt>	Returns the ewkt srid + wkt of the geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L411'>wkt</a>()</tt>	Returns the wkt well-known text representation of this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L416'>hex</a>()</tt>	Returns the wkb of this geometry in hexadecimal form please note.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L427'>hexewkb</a>()</tt>	Returns the ewkb of this geometry in hexadecimal form this is an.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L436'>json</a>()</tt>	Returns geojson representation of this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L444'>wkb</a>()</tt>	Returns the wkb well-known binary representation of this geometry as a python buffer.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L453'>ewkb</a>()</tt>	Return the ewkb representation of this geometry as a python buffer.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L462'>kml</a>()</tt>	Returns the kml representation of this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L468'>prepared</a>()</tt>	Returns a preparedgeometry corresponding to this geometry -- it is optimized for the contains intersects and covers operations.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L480'>ogr</a>()</tt>	Returns the ogr geometry for this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L485'>srs</a>()</tt>	Returns the osr spatialreference for srid of this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L495'>crs</a>()</tt>	Alias for srs property.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L500'>transform</a>(ct,clone)</tt>	Requires gdal transforms the geometry according to the given.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L543'>_topology</a>(gptr)</tt>	Helper routine to return geometry from the given pointer.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L547'>boundary</a>()</tt>	Returns the boundary as a newly allocated geometry object.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L552'>buffer</a>(width,quadsegs)</tt>	Returns a geometry that represents all points whose distance from this geometry is less than or equal to distance.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L562'>centroid</a>()</tt>	The centroid is equal to the centroid of the set of component geometries of highest dimension (since the lower-dimension geometries contribute zero.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L571'>convex_hull</a>()</tt>	Returns the smallest convex polygon that contains all the points in the geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L579'>difference</a>(other)</tt>	Returns a geometry representing the points making up this geometry that do not make up other.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L586'>envelope</a>()</tt>	Return the envelope for this geometry a polygon.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L591'>intersection</a>(other)</tt>	Returns a geometry representing the points shared by this geometry and other.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L595'>point_on_surface</a>()</tt>	Computes an interior point of this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L600'>relate</a>(other)</tt>	Returns the de-9im intersection matrix for this geometry and the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L604'>simplify</a>(tolerance,preserve_topology)</tt>	Returns the geometry simplified using the douglas-peucker algorithm to the specified tolerance (higher tolerance => less points).
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L621'>sym_difference</a>(other)</tt>	Returns a set combining the points in this geometry not in other and the points in other not in this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L628'>unary_union</a>()</tt>	Return the union of all the elements of this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L633'>union</a>(other)</tt>	Returns a geometry representing all the points in this geometry and other.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L638'>area</a>()</tt>	Returns the area of the geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L643'>distance</a>(other)</tt>	Returns the distance between the closest points on this geometry and the other.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L653'>extent</a>()</tt>	Returns the extent of this geometry as a 4-tuple consisting of xmin ymin xmax ymax.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L669'>length</a>()</tt>	Returns the length of this geometry (e g 0 for point or the.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.GEOSGeometry <a href=' /contrib/gis/geos/geometry.py#L677'>clone</a>()</tt>	Clones this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.LinearGeometryMixin <a href=' /contrib/gis/geos/geometry.py#L704'>merged</a>()</tt>	Return the line merge of this geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.LinearGeometryMixin <a href=' /contrib/gis/geos/geometry.py#L711'>closed</a>()</tt>	Return whether or not this geometry is closed.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes. <a href=' /contrib/gis/geos/prototypes/errcheck.py#L15'>last_arg_byref</a>(args)</tt>	Returns the last c argument's value by reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes. <a href=' /contrib/gis/geos/prototypes/errcheck.py#L20'>check_dbl</a>(result,func,cargs)</tt>	Checks the status code and returns the double value passed in by reference.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes. <a href=' /contrib/gis/geos/prototypes/errcheck.py#L29'>check_geom</a>(result,func,cargs)</tt>	Error checking on routines that return geometries.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes. <a href=' /contrib/gis/geos/prototypes/errcheck.py#L36'>check_minus_one</a>(result,func,cargs)</tt>	Error checking on routines that should not return -1.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes. <a href=' /contrib/gis/geos/prototypes/errcheck.py#L44'>check_predicate</a>(result,func,cargs)</tt>	Error checking for unary/binary predicate functions.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes. <a href=' /contrib/gis/geos/prototypes/errcheck.py#L55'>check_sized_string</a>(result,func,cargs)</tt>	Error checking for routines that return explicitly sized strings.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes. <a href=' /contrib/gis/geos/prototypes/errcheck.py#L72'>check_string</a>(result,func,cargs)</tt>	Error checking for routines that return strings.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes. <a href=' /contrib/gis/geos/prototypes/errcheck.py#L87'>check_zero</a>(result,func,cargs)</tt>	Error checking on routines that should not return 0.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes._WKBReader <a href=' /contrib/gis/geos/prototypes/io.py#L148'>read</a>(wkb)</tt>	Returns a _pointer_ to c geos geometry object from the given wkb.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes.WKTWriter <a href=' /contrib/gis/geos/prototypes/io.py#L176'>write</a>(geom)</tt>	Returns the wkt representation of the given geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes.WKBWriter <a href=' /contrib/gis/geos/prototypes/io.py#L234'>write</a>(geom)</tt>	Returns the wkb representation of the given geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes.WKBWriter <a href=' /contrib/gis/geos/prototypes/io.py#L245'>write_hex</a>(geom)</tt>	Returns the hexewkb representation of the given geometry.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes. <a href=' /contrib/gis/geos/prototypes/coordseq.py#L10'>check_cs_op</a>(result,func,cargs)</tt>	Checks the status code of a coordinate sequence operation.
<tt style='background-color:#E8E8E8;'> contrib.gis.geos.prototypes. <a href=' /contrib/gis/geos/prototypes/coordseq.py#L18'>check_cs_get</a>(result,func,cargs)</tt>	Checking the coordinate sequence retrieval.
<tt style='background-color:#E8E8E8;'> conf.LazySettings <a href=' /conf/__init__.py#L26'>_setup</a>(name)</tt>	Load the settings module pointed to by the environment variable this.
<tt style='background-color:#E8E8E8;'> conf.LazySettings <a href=' /conf/__init__.py#L51'>__getattr__</a>(name)</tt>	Return the value of a setting and cache it in self __dict__.
<tt style='background-color:#E8E8E8;'> conf.LazySettings <a href=' /conf/__init__.py#L61'>__setattr__</a>(name,value)</tt>	Set the value of setting clear all cached values if _wrapped changes.
<tt style='background-color:#E8E8E8;'> conf.LazySettings <a href=' /conf/__init__.py#L72'>__delattr__</a>(name)</tt>	Delete a setting and clear it from cache if needed.
<tt style='background-color:#E8E8E8;'> conf.LazySettings <a href=' /conf/__init__.py#L79'>configure</a>(default_settings)</tt>	Called to manually configure the settings the 'default_settings'.
<tt style='background-color:#E8E8E8;'> conf.LazySettings <a href=' /conf/__init__.py#L92'>configured</a>()</tt>	Returns true if the settings have already been configured.
<tt style='background-color:#E8E8E8;'> conf.UserSettingsHolder <a href=' /conf/__init__.py#L161'>__init__</a>(default_settings)</tt>	Requests for configuration variables not in this class are satisfied from the module specified in default_settings if possible.
<tt style='background-color:#E8E8E8;'> conf.urls. <a href=' /conf/urls/static.py#L9'>static</a>(prefix,view)</tt>	Helper function to return a url pattern for serving files in debug mode.
<tt style='background-color:#E8E8E8;'> conf.urls. <a href=' /conf/urls/i18n.py#L8'>i18n_patterns</a>()</tt>	Adds the language code prefix to every url pattern within this function.
<tt style='background-color:#E8E8E8;'> conf.urls. <a href=' /conf/urls/i18n.py#L21'>is_language_prefix_patterns_used</a>(urlconf)</tt>	Return a tuple of two booleans.
<tt style='background-color:#E8E8E8;'> middleware.ConditionalGetMiddleware <a href=' /middleware/http.py#L40'>needs_etag</a>(response)</tt>	Return true if an etag header should be added to response.
<tt style='background-color:#E8E8E8;'> middleware.CommonMiddleware <a href=' /middleware/common.py#L44'>process_request</a>(request)</tt>	Check for denied user-agents and rewrite the url based on settings.
<tt style='background-color:#E8E8E8;'> middleware.CommonMiddleware <a href=' /middleware/common.py#L72'>should_redirect_with_slash</a>(request)</tt>	Return true if settings append_slash is true and appending a slash to.
<tt style='background-color:#E8E8E8;'> middleware.CommonMiddleware <a href=' /middleware/common.py#L85'>get_full_path_with_slash</a>(request)</tt>	Return the full path of the request with a trailing slash appended.
<tt style='background-color:#E8E8E8;'> middleware.CommonMiddleware <a href=' /middleware/common.py#L106'>process_response</a>(request,response)</tt>	Calculate the etag if needed.
<tt style='background-color:#E8E8E8;'> middleware.CommonMiddleware <a href=' /middleware/common.py#L143'>needs_etag</a>(response)</tt>	Return true if an etag header should be added to response.
<tt style='background-color:#E8E8E8;'> middleware.BrokenLinkEmailsMiddleware <a href=' /middleware/common.py#L153'>process_response</a>(request,response)</tt>	Send broken link emails for relevant 404 not found responses.
<tt style='background-color:#E8E8E8;'> middleware.BrokenLinkEmailsMiddleware <a href=' /middleware/common.py#L175'>is_internal_request</a>(domain,referer)</tt>	Returns true if the referring url is the same domain as the current request.
<tt style='background-color:#E8E8E8;'> middleware.BrokenLinkEmailsMiddleware <a href=' /middleware/common.py#L182'>is_ignorable_request</a>(request,uri,domain,referer)</tt>	Return true if the given request *shouldn't* notify the site managers according to project settings or in situations outlined by the inline.
<tt style='background-color:#E8E8E8;'> middleware. <a href=' /middleware/csrf.py#L39'>_get_failure_view</a>()</tt>	Returns the view to be used for csrf rejections.
<tt style='background-color:#E8E8E8;'> middleware. <a href=' /middleware/csrf.py#L50'>_salt_cipher_secret</a>(secret)</tt>	Given a secret (assumed to be a string of csrf_allowed_chars), generate a token by adding a salt and using it to encrypt the secret.
<tt style='background-color:#E8E8E8;'> middleware. <a href=' /middleware/csrf.py#L62'>_unsalt_cipher_token</a>(token)</tt>	Given a token (assumed to be a string of csrf_allowed_chars of length csrf_token_length and that its first half is a salt), use it to decrypt.
<tt style='background-color:#E8E8E8;'> middleware. <a href=' /middleware/csrf.py#L80'>get_token</a>(request)</tt>	Returns the csrf token required for a post form the token is an.
<tt style='background-color:#E8E8E8;'> middleware. <a href=' /middleware/csrf.py#L99'>rotate_token</a>(request)</tt>	Changes the csrf token in use for a request - should be done on login for security purposes.
<tt style='background-color:#E8E8E8;'> middleware.XFrameOptionsMiddleware <a href=' /middleware/clickjacking.py#L43'>get_xframe_options_value</a>(request,response)</tt>	Gets the value to set for the x_frame_options header.
<tt style='background-color:#E8E8E8;'> middleware.UpdateCacheMiddleware <a href=' /middleware/cache.py#L74'>process_response</a>(request,response)</tt>	Sets the cache if needed.
<tt style='background-color:#E8E8E8;'> middleware.FetchFromCacheMiddleware <a href=' /middleware/cache.py#L123'>process_request</a>(request)</tt>	Checks whether the page is already cached and returns the cached version if available.
<tt style='background-color:#E8E8E8;'> dispatch.Signal <a href=' /dispatch/dispatcher.py#L38'>__init__</a>(providing_args,use_caching)</tt>	Create a new signal.
<tt style='background-color:#E8E8E8;'> dispatch.Signal <a href=' /dispatch/dispatcher.py#L59'>connect</a>(receiver,sender,weak,dispatch_uid)</tt>	Connect receiver to sender for signal.
<tt style='background-color:#E8E8E8;'> dispatch.Signal <a href=' /dispatch/dispatcher.py#L129'>disconnect</a>(receiver,sender,weak,dispatch_uid)</tt>	Disconnect receiver from sender for signal.
<tt style='background-color:#E8E8E8;'> dispatch.Signal <a href=' /dispatch/dispatcher.py#L170'>send</a>(sender)</tt>	Send signal from sender to all connected receivers.
<tt style='background-color:#E8E8E8;'> dispatch.Signal <a href=' /dispatch/dispatcher.py#L196'>send_robust</a>(sender)</tt>	Send signal from sender to all connected receivers catching errors.
<tt style='background-color:#E8E8E8;'> dispatch.Signal <a href=' /dispatch/dispatcher.py#L248'>_live_receivers</a>(sender)</tt>	Filter sequence of receivers to get resolved live receivers.
<tt style='background-color:#E8E8E8;'> dispatch. <a href=' /dispatch/dispatcher.py#L297'>receiver</a>(signal)</tt>	A decorator for connecting receivers to signals used by passing in the.
<tt style='background-color:#E8E8E8;'> templatetags.PrefixNode <a href=' /templatetags/static.py#L22'>handle_token</a>(cls,parser,token,name)</tt>	Class method to parse prefix node and return a node.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/static.py#L56'>get_static_prefix</a>(parser,token)</tt>	Populates a template variable with the static prefix settings.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/static.py#L74'>get_media_prefix</a>(parser,token)</tt>	Populates a template variable with the media prefix settings.
<tt style='background-color:#E8E8E8;'> templatetags.StaticNode <a href=' /templatetags/static.py#L121'>handle_token</a>(cls,parser,token)</tt>	Class method to parse prefix node and return a node.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/static.py#L142'>do_static</a>(parser,token)</tt>	Joins the given path with the static_url setting.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/static.py#L161'>static</a>(path)</tt>	Given a relative path to a static asset return the absolute path to the asset.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/i18n.py#L196'>do_get_available_languages</a>(parser,token)</tt>	This will store a list of available languages in the context.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/i18n.py#L220'>do_get_language_info</a>(parser,token)</tt>	This will store the language information dictionary for the given language code in a context variable.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/i18n.py#L241'>do_get_language_info_list</a>(parser,token)</tt>	This will store a list of language information dictionaries for the given language codes in a context variable.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/i18n.py#L287'>do_get_current_language</a>(parser,token)</tt>	This will store the current language in the context.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/i18n.py#L307'>do_get_current_language_bidi</a>(parser,token)</tt>	This will store the current language layout in the context.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/i18n.py#L327'>do_translate</a>(parser,token)</tt>	This will mark a string for translation and will translate the string for the current language.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/i18n.py#L419'>do_block_translate</a>(parser,token)</tt>	This will translate a block of text with parameters.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/i18n.py#L541'>language</a>(parser,token)</tt>	This will enable the given language just for this block.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/cache.py#L53'>do_cache</a>(parser,token)</tt>	This will cache the contents of a template fragment for a given amount of time.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/tz.py#L19'>localtime</a>(value)</tt>	Converts a datetime to local time in the active time zone.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/tz.py#L29'>utc</a>(value)</tt>	Converts a datetime to utc.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/tz.py#L37'>do_timezone</a>(value,arg)</tt>	Converts a datetime to local time in a given time zone.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/tz.py#L125'>localtime_tag</a>(parser,token)</tt>	Forces or prevents conversion of datetime objects to local time regardless of the value of settings.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/tz.py#L148'>timezone_tag</a>(parser,token)</tt>	Enables a given time zone just for this block.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/tz.py#L173'>get_current_timezone_tag</a>(parser,token)</tt>	Stores the name of the current time zone in the context.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/l10n.py#L8'>localize</a>(value)</tt>	Forces a value to be rendered as a localized value regardless of the value of settings.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/l10n.py#L17'>unlocalize</a>(value)</tt>	Forces a value to be rendered as a non-localized value regardless of the value of settings.
<tt style='background-color:#E8E8E8;'> templatetags. <a href=' /templatetags/l10n.py#L42'>localize_tag</a>(parser,token)</tt>	Forces or prevents localization of values regardless of the value of settings.
<tt style='background-color:#E8E8E8;'> template.Engine <a href=' /template/engine.py#L54'>get_default</a>()</tt>	When only one djangotemplates backend is configured returns it.
<tt style='background-color:#E8E8E8;'> template.Engine <a href=' /template/engine.py#L150'>from_string</a>(template_code)</tt>	Returns a compiled template object for the given template code handling template inheritance recursively.
<tt style='background-color:#E8E8E8;'> template.Engine <a href=' /template/engine.py#L157'>get_template</a>(template_name)</tt>	Returns a compiled template object for the given template name handling template inheritance recursively.
<tt style='background-color:#E8E8E8;'> template.Engine <a href=' /template/engine.py#L168'>render_to_string</a>(template_name,context)</tt>	Render the template specified by template_name with the given context.
<tt style='background-color:#E8E8E8;'> template.Engine <a href=' /template/engine.py#L184'>select_template</a>(template_name_list)</tt>	Given a list of template names returns the first that can be loaded.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/loader.py#L11'>get_template</a>(template_name,using)</tt>	Loads and returns a template for the given name.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/loader.py#L28'>select_template</a>(template_name_list,using)</tt>	Loads and returns a template for one of the given names.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/loader.py#L58'>render_to_string</a>(template_name,context,request,using)</tt>	Loads a template and renders it with a context returns a string.
<tt style='background-color:#E8E8E8;'> template.ExtendsNode <a href=' /template/loader_tags.py#L103'>find_template</a>(template_name,context)</tt>	This is a wrapper around engine find_template() a history is kept in.
<tt style='background-color:#E8E8E8;'> template.IncludeNode <a href=' /template/loader_tags.py#L189'>render</a>(context)</tt>	Render the specified template and context cache the template object.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/loader_tags.py#L237'>do_block</a>(parser,token)</tt>	Define a block that can be overridden by child templates.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/loader_tags.py#L266'>construct_relative_path</a>(current_template_name,relative_name)</tt>	Convert a relative path (starting with ' /' or ' /') to the full template.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/loader_tags.py#L296'>do_extends</a>(parser,token)</tt>	Signal that this template extends a parent template.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/loader_tags.py#L318'>do_include</a>(parser,token)</tt>	Loads a template and renders it with the current context you can pass.
<tt style='background-color:#E8E8E8;'> template.Library <a href=' /template/library.py#L57'>filter</a>(name,filter_func)</tt>	Register a callable as a template filter example.
<tt style='background-color:#E8E8E8;'> template.Library <a href=' /template/library.py#L103'>simple_tag</a>(func,takes_context,name)</tt>	Register a callable as a compiled template tag example.
<tt style='background-color:#E8E8E8;'> template.Library <a href=' /template/library.py#L147'>inclusion_tag</a>(filename,func,takes_context,name)</tt>	Register a callable as an inclusion tag @register.
<tt style='background-color:#E8E8E8;'> template.InclusionNode <a href=' /template/library.py#L218'>render</a>(context)</tt>	Render the specified template and context cache the template object.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/library.py#L248'>parse_bits</a>(parser,bits,params,varargs)</tt>	Parse bits for template tag helpers simple_tag and inclusion_tag in particular by detecting syntax errors and by extracting positional and.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/library.py#L316'>import_library</a>(name)</tt>	Load a library object from a template tag module.
<tt style='background-color:#E8E8E8;'> template.TokenBase <a href=' /template/smartif.py#L32'>display</a>()</tt>	Returns what to display in error messages for this node.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/smartif.py#L43'>infix</a>(bp,func)</tt>	Creates an infix operator given a binding power and a function that.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/smartif.py#L68'>prefix</a>(bp,func)</tt>	Creates a prefix operator given a binding power and a function that evaluates the node.
<tt style='background-color:#E8E8E8;'> template.Template <a href=' /template/base.py#L201'>render</a>(context)</tt>	Display stage -- can be called many times.
<tt style='background-color:#E8E8E8;'> template.Template <a href=' /template/base.py#L211'>compile_nodelist</a>()</tt>	Parse and compile the template source into a nodelist if debug.
<tt style='background-color:#E8E8E8;'> template.Template <a href=' /template/base.py#L236'>get_exception_info</a>(exception,token)</tt>	Return a dictionary containing contextual line information of where the exception occurred in the template.
<tt style='background-color:#E8E8E8;'> template.Token <a href=' /template/base.py#L325'>__init__</a>(token_type,contents,position,lineno)</tt>	A token representing a string from the template.
<tt style='background-color:#E8E8E8;'> template.Lexer <a href=' /template/base.py#L374'>tokenize</a>()</tt>	Return a list of tokens from a given template_string.
<tt style='background-color:#E8E8E8;'> template.Lexer <a href=' /template/base.py#L388'>create_token</a>(token_string,position,lineno,in_tag)</tt>	Convert the given token string into a new token object and return it.
<tt style='background-color:#E8E8E8;'> template.DebugLexer <a href=' /template/base.py#L420'>tokenize</a>()</tt>	Split a template string into tokens and annotates each token with its start and end position in the source.
<tt style='background-color:#E8E8E8;'> template.Parser <a href=' /template/base.py#L463'>parse</a>(parse_until)</tt>	Iterate through the parser tokens and compiles each one into a node.
<tt style='background-color:#E8E8E8;'> template.Parser <a href=' /template/base.py#L544'>error</a>(token,e)</tt>	Return an exception annotated with the originating token since the.
<tt style='background-color:#E8E8E8;'> template.Parser <a href=' /template/base.py#L596'>compile_filter</a>(token)</tt>	Convenient wrapper for filterexpression.
<tt style='background-color:#E8E8E8;'> template.Variable <a href=' /template/base.py#L845'>resolve</a>(context)</tt>	Resolve this variable against a given context.
<tt style='background-color:#E8E8E8;'> template.Variable <a href=' /template/base.py#L869'>_resolve_lookup</a>(context)</tt>	Performs resolution of a real variable i e not a literal against the.
<tt style='background-color:#E8E8E8;'> template.Node <a href=' /template/base.py#L943'>render</a>(context)</tt>	Return the node rendered as a string.
<tt style='background-color:#E8E8E8;'> template.Node <a href=' /template/base.py#L949'>render_annotated</a>(context)</tt>	Render the node if debug is true and an exception occurs during.
<tt style='background-color:#E8E8E8;'> template.Node <a href=' /template/base.py#L966'>get_nodes_by_type</a>(nodetype)</tt>	Return a list of all nodes within this node and its nodelist.
<tt style='background-color:#E8E8E8;'> template.NodeList <a href=' /template/base.py#L996'>get_nodes_by_type</a>(nodetype)</tt>	Return a list of all nodes of the given type.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/base.py#L1016'>render_value_in_context</a>(value,context)</tt>	Converts any value to a string to become part of a rendered template this.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/base.py#L1053'>token_kwargs</a>(bits,parser,support_legacy)</tt>	A utility method for parsing token keyword arguments.
<tt style='background-color:#E8E8E8;'> template.EngineHandler <a href=' /template/utils.py#L18'>__init__</a>(templates)</tt>	Templates is an optional list of template engine definitions (structured like settings.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/utils.py#L92'>get_app_template_dirs</a>(dirname)</tt>	Return an iterable of paths of directories to load app templates from.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L38'>stringfilter</a>(func)</tt>	Decorator for filters which should only receive unicode objects the object.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L65'>addslashes</a>(value)</tt>	Adds slashes before quotes useful for escaping strings in csv for.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L76'>capfirst</a>(value)</tt>	Capitalizes the first character of the value.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L83'>escapejs_filter</a>(value)</tt>	Hex encodes characters for use in javascript strings.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L103'>floatformat</a>(text,arg)</tt>	Displays a float to a specified number of decimal places.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L187'>iriencode</a>(value)</tt>	Escapes an iri value for use in a url.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L194'>linenumbers</a>(value,autoescape)</tt>	Displays text with line numbers.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L211'>lower</a>(value)</tt>	Converts a string into all lowercase.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L218'>make_list</a>(value)</tt>	Returns the value turned into a list.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L230'>slugify</a>(value)</tt>	Converts to ascii converts spaces to hyphens removes characters that.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L241'>stringformat</a>(value,arg)</tt>	Formats the variable according to the arg a string formatting specifier.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L258'>title</a>(value)</tt>	Converts a string into titlecase.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L266'>truncatechars</a>(value,arg)</tt>	Truncates a string after a certain number of characters.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L281'>truncatechars_html</a>(value,arg)</tt>	Truncates html after a certain number of chars.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L298'>truncatewords</a>(value,arg)</tt>	Truncates a string after a certain number of words.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L315'>truncatewords_html</a>(value,arg)</tt>	Truncates html after a certain number of words.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L332'>upper</a>(value)</tt>	Converts a string into all uppercase.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L339'>urlencode</a>(value,safe)</tt>	Escapes a value for use in a url.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L356'>urlize</a>(value,autoescape)</tt>	Converts urls in plain text into clickable links.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L363'>urlizetrunc</a>(value,limit,autoescape)</tt>	Converts urls into clickable links truncating urls to the given character limit and adding 'rel=nofollow' attribute to discourage spamming.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L375'>wordcount</a>(value)</tt>	Returns the number of words.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L382'>wordwrap</a>(value,arg)</tt>	Wraps words at specified line length.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L393'>ljust</a>(value,arg)</tt>	Left-aligns the value in a field of a given width.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L404'>rjust</a>(value,arg)</tt>	Right-aligns the value in a field of a given width.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L415'>center</a>(value,arg)</tt>	Centers the value in a field of a given width.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L422'>cut</a>(value,arg)</tt>	Removes all values of arg from the given string.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L439'>escape_filter</a>(value)</tt>	Marks the value as a string that should be auto-escaped.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L452'>force_escape</a>(value)</tt>	Escapes a string's html this returns a new string containing the escaped.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L463'>linebreaks_filter</a>(value,autoescape)</tt>	Replaces line breaks in plain text with appropriate html a single newline becomes an html line break (<br />) and a new line.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L475'>linebreaksbr</a>(value,autoescape)</tt>	Converts all newlines in a piece of plain text to html line breaks (<br />).
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L489'>safe</a>(value)</tt>	Marks the value as a string that should not be auto-escaped.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L498'>safeseq</a>(value)</tt>	A "safe" filter for sequences marks each element in the sequence.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L508'>striptags</a>(value)</tt>	Strips all [x]html tags.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L519'>_property_resolver</a>(arg)</tt>	When arg is convertible to float behave like operator itemgetter arg.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L545'>dictsort</a>(value,arg)</tt>	Takes a list of dicts returns that list sorted by the property given in the argument.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L557'>dictsortreversed</a>(value,arg)</tt>	Takes a list of dicts returns that list sorted in reverse order by the property given in the argument.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L569'>first</a>(value)</tt>	Returns the first item in a list.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L578'>join</a>(value,arg,autoescape)</tt>	Joins a list with a string like python's str join list.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L593'>last</a>(value)</tt>	Returns the last item in a list.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L602'>length</a>(value)</tt>	Returns the length of the value - useful for lists.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L611'>length_is</a>(value,arg)</tt>	Returns a boolean of whether the value's length is the argument.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L620'>random</a>(value)</tt>	Returns a random item from the list.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L626'>slice_filter</a>(value,arg)</tt>	Returns a slice of the list.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L648'>unordered_list</a>(value,autoescape)</tt>	Recursively takes a self-nested list and returns an html unordered list -- without opening and closing <ul> tags.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L719'>add</a>(value,arg)</tt>	Adds the arg to the value.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L731'>get_digit</a>(value,arg)</tt>	Given a whole number returns the requested digit of it where 1 is the right-most digit 2 is the second-right-most digit etc.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L756'>date</a>(value,arg)</tt>	Formats a date according to the given format.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L770'>time</a>(value,arg)</tt>	Formats a time according to the given format.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L784'>timesince_filter</a>(value,arg)</tt>	Formats a date as the time since that date (i e "4 days 6 hours").
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L797'>timeuntil_filter</a>(value,arg)</tt>	Formats a date as the time until that date (i e "4 days 6 hours").
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L812'>default</a>(value,arg)</tt>	If value is unavailable use given default.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L818'>default_if_none</a>(value,arg)</tt>	If value is none use given default.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L826'>divisibleby</a>(value,arg)</tt>	Returns true if the value is divisible by the argument.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L832'>yesno</a>(value,arg)</tt>	Given a string mapping values for true false and optionally none returns one of those strings according to the value.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L869'>filesizeformat</a>(bytes_)</tt>	Formats the value like a 'human-readable' file size (i e 13 kb 4 1 mb.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L912'>pluralize</a>(value,arg)</tt>	Returns a plural suffix if the value is not 1 by default 's' is used as.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L957'>phone2numeric_filter</a>(value)</tt>	Takes a phone number and converts it in to its numerical equivalent.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaultfilters.py#L963'>pprint</a>(value)</tt>	A wrapper around pprint pprint -- for debugging really.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/context_processors.py#L20'>csrf</a>(request)</tt>	Context processor that provides a csrf token or the string 'notprovided' if.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L651'>debug</a>(request)</tt>	Returns context variables helpful for debugging.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/context_processors.py#L69'>static</a>(request)</tt>	Adds static-related context variables to the context.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/context_processors.py#L76'>media</a>(request)</tt>	Adds media-related context variables to the context.
<tt style='background-color:#E8E8E8;'> template.CycleNode <a href=' /template/defaulttags.py#L91'>reset</a>(context)</tt>	Reset the cycle iteration back to the beginning.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L532'>autoescape</a>(parser,token)</tt>	Force autoescape behavior for this block.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L549'>comment</a>(parser,token)</tt>	Ignores everything between {% comment %} and {% endcomment %}.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L558'>cycle</a>(parser,token)</tt>	Cycles among the given strings each time this tag is encountered.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L651'>debug</a>(parser,token)</tt>	Outputs a whole load of debugging information including the current context and imported modules.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L666'>do_filter</a>(parser,token)</tt>	Filters the contents of the block through variable filters.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L696'>firstof</a>(parser,token)</tt>	Outputs the first variable passed that is not false.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L745'>do_for</a>(parser,token)</tt>	Loops over each item in an array.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L854'>ifequal</a>(parser,token)</tt>	Outputs the contents of the block if the two arguments equal each other.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L874'>ifnotequal</a>(parser,token)</tt>	Outputs the contents of the block if the two arguments are not equal.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L906'>do_if</a>(parser,token)</tt>	The {% if %} tag evaluates a variable and if that variable is "true" (i.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L994'>ifchanged</a>(parser,token)</tt>	Checks if a value has changed from the last iteration of a loop.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L1047'>load_from_library</a>(library,label,names)</tt>	Return a subset of tags and filters from a library.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L1069'>load</a>(parser,token)</tt>	Loads a custom template tag library into the parser.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L1100'>lorem</a>(parser,token)</tt>	Creates random latin text useful for providing test data in templates.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L1147'>now</a>(parser,token)</tt>	Displays the date formatted according to the given string.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L1170'>regroup</a>(parser,token)</tt>	Regroups a list of alike objects by a common attribute.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L1239'>resetcycle</a>(parser,token)</tt>	Resets a cycle tag.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L1265'>spaceless</a>(parser,token)</tt>	Removes whitespace between html tags including tab and newline characters.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L1296'>templatetag</a>(parser,token)</tt>	Outputs one of the bits used to compose template tags.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L1331'>url</a>(parser,token)</tt>	Return an absolute url matching the given view with its parameters.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L1399'>verbatim</a>(parser,token)</tt>	Stops the template engine from rendering the contents of this block tag.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L1422'>widthratio</a>(parser,token)</tt>	For creating bar charts and such this tag calculates the ratio of a given value to a maximum value and then applies that ratio to a constant.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/defaulttags.py#L1460'>do_with</a>(parser,token)</tt>	Adds one or more values to the context inside of this block for caching and easy access.
<tt style='background-color:#E8E8E8;'> template.SimpleTemplateResponse <a href=' /template/response.py#L46'>__getstate__</a>()</tt>	Raise an exception if trying to pickle an unrendered response pickle.
<tt style='background-color:#E8E8E8;'> template.SimpleTemplateResponse <a href=' /template/response.py#L61'>resolve_template</a>(template)</tt>	Accepts a template object path-to-template or list of paths.
<tt style='background-color:#E8E8E8;'> template.SimpleTemplateResponse <a href=' /template/response.py#L73'>rendered_content</a>()</tt>	Returns the freshly rendered content for the template and context described by the templateresponse.
<tt style='background-color:#E8E8E8;'> template.SimpleTemplateResponse <a href=' /template/response.py#L87'>add_post_render_callback</a>(callback)</tt>	Adds a new post-rendering callback.
<tt style='background-color:#E8E8E8;'> template.SimpleTemplateResponse <a href=' /template/response.py#L98'>render</a>()</tt>	Renders thereby finalizing the content of the response.
<tt style='background-color:#E8E8E8;'> template.SimpleTemplateResponse <a href=' /template/response.py#L133'>content</a>(value)</tt>	Sets the content for the response.
<tt style='background-color:#E8E8E8;'> template.BaseContext <a href=' /template/context.py#L66'>__setitem__</a>(key,value)</tt>	Set a variable in the current context.
<tt style='background-color:#E8E8E8;'> template.BaseContext <a href=' /template/context.py#L70'>set_upward</a>(key,value)</tt>	Set a variable in one of the higher contexts if it exists there otherwise in the current context.
<tt style='background-color:#E8E8E8;'> template.BaseContext <a href=' /template/context.py#L82'>__getitem__</a>(key)</tt>	Get a variable's value starting at the current context and going upward.
<tt style='background-color:#E8E8E8;'> template.BaseContext <a href=' /template/context.py#L89'>__delitem__</a>(key)</tt>	Delete a variable from the current context.
<tt style='background-color:#E8E8E8;'> template.BaseContext <a href=' /template/context.py#L119'>new</a>(values)</tt>	Returns a new context with the same properties but with only the values given in 'values' stored.
<tt style='background-color:#E8E8E8;'> template.BaseContext <a href=' /template/context.py#L128'>flatten</a>()</tt>	Returns self dicts as one dictionary.
<tt style='background-color:#E8E8E8;'> template.BaseContext <a href=' /template/context.py#L137'>__eq__</a>(other)</tt>	Compares two contexts by comparing theirs 'dicts' attributes.
<tt style='background-color:#E8E8E8;'> template.Context <a href=' /template/context.py#L178'>update</a>(other_dict)</tt>	Pushes other_dict to the stack of dictionaries in the context.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/context.py#L282'>make_context</a>(context,request)</tt>	Create a suitable context from a plain dict and optionally an httprequest.
<tt style='background-color:#E8E8E8;'> template.backends.BaseEngine <a href=' /template/backends/base.py#L17'>__init__</a>(params)</tt>	Initializes the template engine.
<tt style='background-color:#E8E8E8;'> template.backends.BaseEngine <a href=' /template/backends/base.py#L37'>from_string</a>(template_code)</tt>	Creates and returns a template for the given source code.
<tt style='background-color:#E8E8E8;'> template.backends.BaseEngine <a href=' /template/backends/base.py#L47'>get_template</a>(template_name)</tt>	Loads and returns a template for the given name.
<tt style='background-color:#E8E8E8;'> template.backends.BaseEngine <a href=' /template/backends/base.py#L60'>template_dirs</a>()</tt>	Returns a list of directories to search for templates.
<tt style='background-color:#E8E8E8;'> template.backends.BaseEngine <a href=' /template/backends/base.py#L71'>iter_template_filenames</a>(template_name)</tt>	Iterates over candidate files for template_name.
<tt style='background-color:#E8E8E8;'> template.backends. <a href=' /template/backends/jinja2.py#L94'>get_exception_info</a>(exception)</tt>	Formats exception information for display on the debug page using the structure described in the template api documentation.
<tt style='background-color:#E8E8E8;'> template.backends.DjangoTemplates <a href=' /template/backends/django.py#L43'>get_templatetag_libraries</a>(custom_libraries)</tt>	Return a collation of template tag libraries from installed applications and the supplied custom_libraries argument.
<tt style='background-color:#E8E8E8;'> template.backends. <a href=' /template/backends/django.py#L71'>copy_exception</a>(exc,backend)</tt>	Create a new templatedoesnotexist preserve its declared attributes and.
<tt style='background-color:#E8E8E8;'> template.backends. <a href=' /template/backends/django.py#L84'>reraise</a>(exc,backend)</tt>	Reraise templatedoesnotexist while maintaining template debug information.
<tt style='background-color:#E8E8E8;'> template.backends. <a href=' /template/backends/django.py#L92'>get_installed_libraries</a>()</tt>	Return the built-in template tag libraries and those from installed applications.
<tt style='background-color:#E8E8E8;'> template.backends. <a href=' /template/backends/django.py#L119'>get_package_libraries</a>(pkg)</tt>	Recursively yield template tag libraries defined in submodules of a package.
<tt style='background-color:#E8E8E8;'> template.loaders.Loader <a href=' /template/loaders/cached.py#L70'>get_template_sources</a>(template_name,template_dirs)</tt>	Return an origin object pointing to an absolute path in each directory in template_dirs.
<tt style='background-color:#E8E8E8;'> template.loaders.Loader <a href=' /template/loaders/locmem.py#L32'>load_template_source</a>(template_name,template_dirs)</tt>	Removedindjango20warning returns a tuple containing the source and origin for the given template name.
<tt style='background-color:#E8E8E8;'> template.loaders.Loader <a href=' /template/loaders/cached.py#L30'>get_template</a>(template_name,template_dirs,skip)</tt>	Perform the caching that gives this loader its name often many of the.
<tt style='background-color:#E8E8E8;'> template.loaders.Loader <a href=' /template/loaders/cached.py#L70'>get_template_sources</a>(template_name)</tt>	An iterator that yields possible matching template paths for a template name.
<tt style='background-color:#E8E8E8;'> template.loaders.Loader <a href=' /template/loaders/cached.py#L170'>reset</a>()</tt>	Empty the template cache.
<tt style='background-color:#E8E8E8;'> template.loaders.Loader <a href=' /template/loaders/cached.py#L108'>supports_recursion</a>()</tt>	Removedindjango20warning this is an internal property used by the extendsnode during the deprecation of non-recursive loaders.
<tt style='background-color:#E8E8E8;'> template.loaders.Loader <a href=' /template/loaders/cached.py#L80'>cache_key</a>(template_name,template_dirs,skip)</tt>	Generate a cache key for the template name dirs and skip.
<tt style='background-color:#E8E8E8;'> template.loaders.Loader <a href=' /template/loaders/cached.py#L116'>find_template</a>(name,dirs)</tt>	Removedindjango20warning an internal method to lookup the template name in all the configured loaders.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/static.py#L23'>serve</a>(request,path,document_root,show_indexes)</tt>	Serve static files below a given point in the directory structure.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/static.py#L110'>was_modified_since</a>(header,mtime,size)</tt>	Was something modified since the user last downloaded it? header.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/debug.py#L40'>cleanse_setting</a>(key,value)</tt>	Cleanse an individual setting key/value of sensitive content.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/debug.py#L65'>get_safe_settings</a>()</tt>	Returns a dictionary of the settings module with sensitive settings blurred out.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/debug.py#L74'>technical_500_response</a>(request,exc_type,exc_value,tb)</tt>	Create a technical server error response the last three arguments are.
<tt style='background-color:#E8E8E8;'> views.SafeExceptionReporterFilter <a href=' /views/debug.py#L121'>is_active</a>(request)</tt>	This filter is to add safety in production environments (i e debug.
<tt style='background-color:#E8E8E8;'> views.SafeExceptionReporterFilter <a href=' /views/debug.py#L130'>get_cleansed_multivaluedict</a>(request,multivaluedict)</tt>	Replaces the keys in a multivaluedict marked as sensitive with stars.
<tt style='background-color:#E8E8E8;'> views.SafeExceptionReporterFilter <a href=' /views/debug.py#L144'>get_post_parameters</a>(request)</tt>	Replaces the values of post parameters marked as sensitive with stars (*********).
<tt style='background-color:#E8E8E8;'> views.SafeExceptionReporterFilter <a href=' /views/debug.py#L183'>get_traceback_frame_variables</a>(request,tb_frame)</tt>	Replaces the values of variables marked as sensitive with stars (*********).
<tt style='background-color:#E8E8E8;'> views.ExceptionReporter <a href=' /views/debug.py#L250'>get_traceback_data</a>()</tt>	Return a dictionary containing traceback information.
<tt style='background-color:#E8E8E8;'> views.ExceptionReporter <a href=' /views/debug.py#L324'>get_traceback_html</a>()</tt>	Return html version of debug 500 http error page.
<tt style='background-color:#E8E8E8;'> views.ExceptionReporter <a href=' /views/debug.py#L330'>get_traceback_text</a>()</tt>	Return plain text version of debug 500 http error page.
<tt style='background-color:#E8E8E8;'> views.ExceptionReporter <a href=' /views/debug.py#L336'>_get_lines_from_file</a>(filename,lineno,context_lines,loader)</tt>	Returns context_lines before and after lineno from file.
<tt style='background-color:#E8E8E8;'> views.ExceptionReporter <a href=' /views/debug.py#L448'>format_exception</a>()</tt>	Return the same data as from traceback format_exception.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/debug.py#L461'>technical_404_response</a>(request,exception)</tt>	Create a technical 404 error response the exception should be the http404.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/debug.py#L516'>default_urlconf</a>(request)</tt>	Create an empty urlconf 404 error response.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/i18n.py#L28'>set_language</a>(request)</tt>	Redirect to a given url while setting the chosen language in the session or cookie.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/i18n.py#L67'>get_formats</a>()</tt>	Returns all formats strings required for i18n to work.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/i18n.py#L276'>null_javascript_catalog</a>(request,domain,packages)</tt>	Returns "identity" versions of the javascript i18n functions -- i e.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/i18n.py#L284'>javascript_catalog</a>(request,domain,packages)</tt>	Returns the selected language catalog as a javascript library.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/i18n.py#L307'>json_catalog</a>(request,domain,packages)</tt>	Return the selected language catalog as a json object.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/csrf.py#L103'>csrf_failure</a>(request,reason,template_name)</tt>	Default view used when request fails csrf protection.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/defaults.py#L16'>page_not_found</a>(request,exception,template_name)</tt>	Default 404 handler.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/defaults.py#L59'>server_error</a>(request,template_name)</tt>	500 error handler.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/defaults.py#L77'>bad_request</a>(request,exception,template_name)</tt>	400 error handler.
<tt style='background-color:#E8E8E8;'> views. <a href=' /views/defaults.py#L99'>permission_denied</a>(request,exception,template_name)</tt>	Permission denied 403 handler.
<tt style='background-color:#E8E8E8;'> views.decorators. <a href=' /views/decorators/http.py#L20'>require_http_methods</a>(request_method_list)</tt>	Decorator to make a view only accept particular request methods usage :.
<tt style='background-color:#E8E8E8;'> views.decorators. <a href=' /views/decorators/http.py#L55'>condition</a>(etag_func,last_modified_func)</tt>	Decorator to support conditional retrieval or change for a view function.
<tt style='background-color:#E8E8E8;'> views.decorators. <a href=' /views/decorators/debug.py#L6'>sensitive_variables</a>()</tt>	Indicates which variables used in the decorated function are sensitive so that those variables can later be treated in a special way for example.
<tt style='background-color:#E8E8E8;'> views.decorators. <a href=' /views/decorators/debug.py#L41'>sensitive_post_parameters</a>()</tt>	Indicates which post parameters used in the decorated view are sensitive so that those parameters can later be treated in a special way for example.
<tt style='background-color:#E8E8E8;'> views.decorators. <a href=' /views/decorators/vary.py#L7'>vary_on_headers</a>()</tt>	A view decorator that adds the specified headers to the vary header of the response.
<tt style='background-color:#E8E8E8;'> views.decorators. <a href=' /views/decorators/vary.py#L28'>vary_on_cookie</a>(func)</tt>	A view decorator that adds "cookie" to the vary header of a response this.
<tt style='background-color:#E8E8E8;'> views.decorators. <a href=' /views/decorators/csrf.py#L50'>csrf_exempt</a>(view_func)</tt>	Marks a view function as being exempt from the csrf view protection.
<tt style='background-color:#E8E8E8;'> views.decorators. <a href=' /views/decorators/clickjacking.py#L6'>xframe_options_deny</a>(view_func)</tt>	Modifies a view function so its response has the x-frame-options http header set to 'deny' as long as the response doesn't already have that.
<tt style='background-color:#E8E8E8;'> views.decorators. <a href=' /views/decorators/clickjacking.py#L26'>xframe_options_sameorigin</a>(view_func)</tt>	Modifies a view function so its response has the x-frame-options http header set to 'sameorigin' as long as the response doesn't already have.
<tt style='background-color:#E8E8E8;'> views.decorators. <a href=' /views/decorators/clickjacking.py#L46'>xframe_options_exempt</a>(view_func)</tt>	Modifies a view function by setting a response variable that instructs xframeoptionsmiddleware to not set the x-frame-options http header.
<tt style='background-color:#E8E8E8;'> views.decorators. <a href=' /views/decorators/cache.py#L10'>cache_page</a>()</tt>	Decorator for views that tries getting the page from the cache and populates the cache if the page isn't in the cache yet.
<tt style='background-color:#E8E8E8;'> views.decorators. <a href=' /views/decorators/cache.py#L50'>never_cache</a>(view_func)</tt>	Decorator that adds headers to a response so that it will never be cached.
<tt style='background-color:#E8E8E8;'> views.generic.MultipleObjectMixin <a href=' /views/generic/list.py#L26'>get_queryset</a>()</tt>	Return the list of items for this view.
<tt style='background-color:#E8E8E8;'> views.generic.MultipleObjectMixin <a href=' /views/generic/list.py#L55'>get_ordering</a>()</tt>	Return the field or fields to use for ordering the queryset.
<tt style='background-color:#E8E8E8;'> views.generic.MultipleObjectMixin <a href=' /views/generic/list.py#L61'>paginate_queryset</a>(queryset,page_size)</tt>	Paginate the queryset if needed.
<tt style='background-color:#E8E8E8;'> views.generic.MultipleObjectMixin <a href=' /views/generic/list.py#L86'>get_paginate_by</a>(queryset)</tt>	Get the number of items to paginate by or none for no pagination.
<tt style='background-color:#E8E8E8;'> views.generic.MultipleObjectMixin <a href=' /views/generic/list.py#L92'>get_paginator</a>(queryset,per_page,orphans,allow_empty_first_page)</tt>	Return an instance of the paginator for this view.
<tt style='background-color:#E8E8E8;'> views.generic.MultipleObjectMixin <a href=' /views/generic/list.py#L101'>get_paginate_orphans</a>()</tt>	Returns the maximum number of orphans extend the last page by when paginating.
<tt style='background-color:#E8E8E8;'> views.generic.MultipleObjectMixin <a href=' /views/generic/list.py#L108'>get_allow_empty</a>()</tt>	Returns true if the view should display empty lists and false if a 404 should be raised instead.
<tt style='background-color:#E8E8E8;'> views.generic.MultipleObjectMixin <a href=' /views/generic/list.py#L115'>get_context_object_name</a>(object_list)</tt>	Get the name of the item to be used in the context.
<tt style='background-color:#E8E8E8;'> views.generic.MultipleObjectMixin <a href=' /views/generic/list.py#L126'>get_context_data</a>()</tt>	Get the context for this view.
<tt style='background-color:#E8E8E8;'> views.generic.MultipleObjectTemplateResponseMixin <a href=' /views/generic/list.py#L184'>get_template_names</a>()</tt>	Return a list of template names to be used for the request must return.
<tt style='background-color:#E8E8E8;'> views.generic.YearMixin <a href=' /views/generic/dates.py#L29'>get_year_format</a>()</tt>	Get a year format string in strptime syntax to be used to parse the year from url variables.
<tt style='background-color:#E8E8E8;'> views.generic.YearMixin <a href=' /views/generic/dates.py#L36'>get_year</a>()</tt>	Return the year for which this view should display data.
<tt style='background-color:#E8E8E8;'> views.generic.YearMixin <a href=' /views/generic/dates.py#L63'>_get_next_year</a>(date)</tt>	Return the start date of the next interval.
<tt style='background-color:#E8E8E8;'> views.generic.YearMixin <a href=' /views/generic/dates.py#L57'>get_previous_year</a>(date)</tt>	Get the previous valid year.
<tt style='background-color:#E8E8E8;'> views.generic.YearMixin <a href=' /views/generic/dates.py#L71'>_get_current_year</a>(date)</tt>	Return the start date of the current interval.
<tt style='background-color:#E8E8E8;'> views.generic.MonthMixin <a href=' /views/generic/dates.py#L85'>get_month_format</a>()</tt>	Get a month format string in strptime syntax to be used to parse the month from url variables.
<tt style='background-color:#E8E8E8;'> views.generic.MonthMixin <a href=' /views/generic/dates.py#L92'>get_month</a>()</tt>	Return the month for which this view should display data.
<tt style='background-color:#E8E8E8;'> views.generic.MonthMixin <a href=' /views/generic/dates.py#L119'>_get_next_month</a>(date)</tt>	Return the start date of the next interval.
<tt style='background-color:#E8E8E8;'> views.generic.MonthMixin <a href=' /views/generic/dates.py#L113'>get_previous_month</a>(date)</tt>	Get the previous valid month.
<tt style='background-color:#E8E8E8;'> views.generic.MonthMixin <a href=' /views/generic/dates.py#L130'>_get_current_month</a>(date)</tt>	Return the start date of the previous interval.
<tt style='background-color:#E8E8E8;'> views.generic.DayMixin <a href=' /views/generic/dates.py#L144'>get_day_format</a>()</tt>	Get a day format string in strptime syntax to be used to parse the day from url variables.
<tt style='background-color:#E8E8E8;'> views.generic.DayMixin <a href=' /views/generic/dates.py#L151'>get_day</a>()</tt>	Return the day for which this view should display data.
<tt style='background-color:#E8E8E8;'> views.generic.DayMixin <a href=' /views/generic/dates.py#L178'>_get_next_day</a>(date)</tt>	Return the start date of the next interval.
<tt style='background-color:#E8E8E8;'> views.generic.DayMixin <a href=' /views/generic/dates.py#L172'>get_previous_day</a>(date)</tt>	Get the previous valid day.
<tt style='background-color:#E8E8E8;'> views.generic.DayMixin <a href=' /views/generic/dates.py#L186'>_get_current_day</a>(date)</tt>	Return the start date of the current interval.
<tt style='background-color:#E8E8E8;'> views.generic.WeekMixin <a href=' /views/generic/dates.py#L200'>get_week_format</a>()</tt>	Get a week format string in strptime syntax to be used to parse the week from url variables.
<tt style='background-color:#E8E8E8;'> views.generic.WeekMixin <a href=' /views/generic/dates.py#L207'>get_week</a>()</tt>	Return the week for which this view should display data.
<tt style='background-color:#E8E8E8;'> views.generic.WeekMixin <a href=' /views/generic/dates.py#L234'>_get_next_week</a>(date)</tt>	Return the start date of the next interval.
<tt style='background-color:#E8E8E8;'> views.generic.WeekMixin <a href=' /views/generic/dates.py#L228'>get_previous_week</a>(date)</tt>	Get the previous valid week.
<tt style='background-color:#E8E8E8;'> views.generic.WeekMixin <a href=' /views/generic/dates.py#L242'>_get_current_week</a>(date)</tt>	Return the start date of the current interval.
<tt style='background-color:#E8E8E8;'> views.generic.WeekMixin <a href=' /views/generic/dates.py#L248'>_get_weekday</a>(date)</tt>	Return the weekday for a given date.
<tt style='background-color:#E8E8E8;'> views.generic.DateMixin <a href=' /views/generic/dates.py#L270'>get_date_field</a>()</tt>	Get the name of the date field to be used to filter by.
<tt style='background-color:#E8E8E8;'> views.generic.DateMixin <a href=' /views/generic/dates.py#L278'>get_allow_future</a>()</tt>	Returns true if the view should be allowed to display objects from the future.
<tt style='background-color:#E8E8E8;'> views.generic.DateMixin <a href=' /views/generic/dates.py#L288'>uses_datetime_field</a>()</tt>	Return true if the date field is a datetimefield and false if it's a datefield.
<tt style='background-color:#E8E8E8;'> views.generic.DateMixin <a href=' /views/generic/dates.py#L298'>_make_date_lookup_arg</a>(value)</tt>	Convert a date into a datetime when the date field is a datetimefield.
<tt style='background-color:#E8E8E8;'> views.generic.DateMixin <a href=' /views/generic/dates.py#L311'>_make_single_date_lookup</a>(date)</tt>	Get the lookup kwargs for filtering on a single date.
<tt style='background-color:#E8E8E8;'> views.generic.BaseDateListView <a href=' /views/generic/dates.py#L345'>get_dated_items</a>()</tt>	Obtain the list of dates and items.
<tt style='background-color:#E8E8E8;'> views.generic.BaseDateListView <a href=' /views/generic/dates.py#L351'>get_ordering</a>()</tt>	Returns the field or fields to use for ordering the queryset uses the date field by default.
<tt style='background-color:#E8E8E8;'> views.generic.BaseDateListView <a href=' /views/generic/dates.py#L358'>get_dated_queryset</a>()</tt>	Get a queryset properly filtered according to allow_future and any extra lookup kwargs.
<tt style='background-color:#E8E8E8;'> views.generic.BaseDateListView <a href=' /views/generic/dates.py#L384'>get_date_list_period</a>()</tt>	Get the aggregation period for the list of dates 'year', 'month', or 'day'.
<tt style='background-color:#E8E8E8;'> views.generic.BaseDateListView <a href=' /views/generic/dates.py#L390'>get_date_list</a>(queryset,date_type,ordering)</tt>	Get a date list by calling queryset dates/datetimes(), checking.
<tt style='background-color:#E8E8E8;'> views.generic.BaseArchiveIndexView <a href=' /views/generic/dates.py#L420'>get_dated_items</a>()</tt>	Return (date_list items extra_context) for this request.
<tt style='background-color:#E8E8E8;'> views.generic.BaseYearArchiveView <a href=' /views/generic/dates.py#L447'>get_dated_items</a>()</tt>	Return (date_list items extra_context) for this request.
<tt style='background-color:#E8E8E8;'> views.generic.BaseYearArchiveView <a href=' /views/generic/dates.py#L477'>get_make_object_list</a>()</tt>	Return true if this view should contain the full list of objects in the given year.
<tt style='background-color:#E8E8E8;'> views.generic.BaseMonthArchiveView <a href=' /views/generic/dates.py#L498'>get_dated_items</a>()</tt>	Return (date_list items extra_context) for this request.
<tt style='background-color:#E8E8E8;'> views.generic.BaseWeekArchiveView <a href=' /views/generic/dates.py#L538'>get_dated_items</a>()</tt>	Return (date_list items extra_context) for this request.
<tt style='background-color:#E8E8E8;'> views.generic.BaseDayArchiveView <a href=' /views/generic/dates.py#L582'>get_dated_items</a>()</tt>	Return (date_list items extra_context) for this request.
<tt style='background-color:#E8E8E8;'> views.generic.BaseDayArchiveView <a href=' /views/generic/dates.py#L596'>_get_dated_items</a>(date)</tt>	Do the actual heavy lifting of getting the dated items this accepts a date object so that todayarchiveview can be trivial.
<tt style='background-color:#E8E8E8;'> views.generic.BaseTodayArchiveView <a href=' /views/generic/dates.py#L625'>get_dated_items</a>()</tt>	Return (date_list items extra_context) for this request.
<tt style='background-color:#E8E8E8;'> views.generic.BaseDateDetailView <a href=' /views/generic/dates.py#L644'>get_object</a>(queryset)</tt>	Get the object this request displays.
<tt style='background-color:#E8E8E8;'> views.generic. <a href=' /views/generic/dates.py#L684'>_date_from_string</a>(year,year_format,month,month_format)</tt>	Helper get a datetime date object given a format string and a year.
<tt style='background-color:#E8E8E8;'> views.generic. <a href=' /views/generic/dates.py#L700'>_get_next_prev</a>(generic_view,date,is_previous,period)</tt>	Helper get the next or the previous valid date the idea is to allow.
<tt style='background-color:#E8E8E8;'> views.generic. <a href=' /views/generic/dates.py#L790'>timezone_today</a>()</tt>	Return the current date in the current time zone.
<tt style='background-color:#E8E8E8;'> views.generic.View <a href=' /views/generic/base.py#L36'>__init__</a>()</tt>	Constructor called in the urlconf can contain helpful extra.
<tt style='background-color:#E8E8E8;'> views.generic.View <a href=' /views/generic/base.py#L46'>as_view</a>(cls)</tt>	Main entry point for a request-response process.
<tt style='background-color:#E8E8E8;'> views.generic.View <a href=' /views/generic/base.py#L97'>options</a>(request)</tt>	Handles responding to requests for the options http verb.
<tt style='background-color:#E8E8E8;'> views.generic.TemplateResponseMixin <a href=' /views/generic/base.py#L119'>render_to_response</a>(context)</tt>	Returns a response using the response_class for this view with a template rendered with the given context.
<tt style='background-color:#E8E8E8;'> views.generic.TemplateResponseMixin <a href=' /views/generic/base.py#L136'>get_template_names</a>()</tt>	Returns a list of template names to be used for the request must return.
<tt style='background-color:#E8E8E8;'> views.generic.RedirectView <a href=' /views/generic/base.py#L168'>get_redirect_url</a>()</tt>	Return the url redirect to keyword arguments from the.
<tt style='background-color:#E8E8E8;'> views.generic.SingleObjectMixin <a href=' /views/generic/detail.py#L22'>get_object</a>(queryset)</tt>	Returns the object the view is displaying.
<tt style='background-color:#E8E8E8;'> views.generic.SingleObjectMixin <a href=' /views/generic/detail.py#L59'>get_queryset</a>()</tt>	Return the queryset that will be used to look up the object.
<tt style='background-color:#E8E8E8;'> views.generic.SingleObjectMixin <a href=' /views/generic/detail.py#L79'>get_slug_field</a>()</tt>	Get the name of a slug field to be used to look up by slug.
<tt style='background-color:#E8E8E8;'> views.generic.SingleObjectMixin <a href=' /views/generic/detail.py#L85'>get_context_object_name</a>(obj)</tt>	Get the name to use for the object.
<tt style='background-color:#E8E8E8;'> views.generic.SingleObjectMixin <a href=' /views/generic/detail.py#L96'>get_context_data</a>()</tt>	Insert the single object into the context dict.
<tt style='background-color:#E8E8E8;'> views.generic.SingleObjectTemplateResponseMixin <a href=' /views/generic/detail.py#L124'>get_template_names</a>()</tt>	Return a list of template names to be used for the request may not be.
<tt style='background-color:#E8E8E8;'> views.generic.FormMixin <a href=' /views/generic/edit.py#L21'>get_initial</a>()</tt>	Returns the initial data to use for forms on this view.
<tt style='background-color:#E8E8E8;'> views.generic.FormMixin <a href=' /views/generic/edit.py#L27'>get_prefix</a>()</tt>	Returns the prefix to use for forms on this view.
<tt style='background-color:#E8E8E8;'> views.generic.FormMixin <a href=' /views/generic/edit.py#L33'>get_form_class</a>()</tt>	Returns the form class to use in this view.
<tt style='background-color:#E8E8E8;'> views.generic.FormMixin <a href=' /views/generic/edit.py#L39'>get_form</a>(form_class)</tt>	Returns an instance of the form to be used in this view.
<tt style='background-color:#E8E8E8;'> views.generic.FormMixin <a href=' /views/generic/edit.py#L47'>get_form_kwargs</a>()</tt>	Returns the keyword arguments for instantiating the form.
<tt style='background-color:#E8E8E8;'> views.generic.FormMixin <a href=' /views/generic/edit.py#L63'>get_success_url</a>()</tt>	Returns the supplied success url.
<tt style='background-color:#E8E8E8;'> views.generic.FormMixin <a href=' /views/generic/edit.py#L75'>form_valid</a>(form)</tt>	If the form is valid redirect to the supplied url.
<tt style='background-color:#E8E8E8;'> views.generic.FormMixin <a href=' /views/generic/edit.py#L81'>form_invalid</a>(form)</tt>	If the form is invalid re-render the context data with the data-filled form and errors.
<tt style='background-color:#E8E8E8;'> views.generic.FormMixin <a href=' /views/generic/edit.py#L88'>get_context_data</a>()</tt>	Insert the form into the context dict.
<tt style='background-color:#E8E8E8;'> views.generic.ModelFormMixin <a href=' /views/generic/edit.py#L103'>get_form_class</a>()</tt>	Returns the form class to use in this view.
<tt style='background-color:#E8E8E8;'> views.generic.ModelFormMixin <a href=' /views/generic/edit.py#L134'>get_form_kwargs</a>()</tt>	Returns the keyword arguments for instantiating the form.
<tt style='background-color:#E8E8E8;'> views.generic.ModelFormMixin <a href=' /views/generic/edit.py#L143'>get_success_url</a>()</tt>	Returns the supplied url.
<tt style='background-color:#E8E8E8;'> views.generic.ModelFormMixin <a href=' /views/generic/edit.py#L158'>form_valid</a>(form)</tt>	If the form is valid save the associated model.
<tt style='background-color:#E8E8E8;'> views.generic.ProcessFormView <a href=' /views/generic/edit.py#L170'>get</a>(request)</tt>	Handles get requests and instantiates a blank version of the form.
<tt style='background-color:#E8E8E8;'> views.generic.ProcessFormView <a href=' /views/generic/edit.py#L176'>post</a>(request)</tt>	Handles post requests instantiating a form instance with the passed post variables and then checked for validity.
<tt style='background-color:#E8E8E8;'> views.generic.DeletionMixin <a href=' /views/generic/edit.py#L257'>delete</a>(request)</tt>	Calls the delete() method on the fetched object and then redirects to the success url.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L114'>order_fields</a>(field_order)</tt>	Rearranges the fields according to field_order.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L155'>__getitem__</a>(name)</tt>	Returns a boundfield with the given name.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L171'>errors</a>()</tt>	Returns an errordict for the data provided for the form.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L178'>is_valid</a>()</tt>	Returns true if the form has no errors otherwise false if errors are.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L185'>add_prefix</a>(field_name)</tt>	Returns the field name with a prefix appended if this form has a prefix set.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L194'>add_initial_prefix</a>(field_name)</tt>	Add a 'initial' prefix for checking dynamic initial values.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L200'>_html_output</a>(normal_row,error_row,row_ender,help_text_html)</tt>	Helper function for outputting html used by as_table(), as_ul(), as_p().
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L278'>as_table</a>()</tt>	Returns this form rendered as html <tr>s -- excluding the <table></table>.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L287'>as_ul</a>()</tt>	Returns this form rendered as html <li>s -- excluding the <ul></ul>.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L296'>as_p</a>()</tt>	Returns this form rendered as html <p>s.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L305'>non_field_errors</a>()</tt>	Returns an errorlist of errors that aren't associated with a particular field -- i.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L313'>add_error</a>(field,error)</tt>	Update the content of self _errors.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L370'>full_clean</a>()</tt>	Cleans all of self data and populates self _errors and.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L419'>_post_clean</a>()</tt>	An internal hook for performing additional cleaning after form cleaning is complete.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L426'>clean</a>()</tt>	Hook for doing any extra form-wide cleaning after field clean() has been.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L435'>has_changed</a>()</tt>	Returns true if data differs from initial.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L465'>media</a>()</tt>	Provide a description of all media required to render the widgets on this form.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L475'>is_multipart</a>()</tt>	Returns true if the form needs to be multipart-encoded i e it has.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L485'>hidden_fields</a>()</tt>	Returns a list of all the boundfield objects that are hidden fields.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L492'>visible_fields</a>()</tt>	Returns a list of boundfield objects that aren't hidden fields.
<tt style='background-color:#E8E8E8;'> forms.BaseForm <a href=' /forms/forms.py#L499'>get_initial_for_field</a>(field,field_name)</tt>	Return initial data for field on form use initial data from the form.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L37'>__str__</a>()</tt>	Renders this field as an html widget.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L43'>subwidgets</a>()</tt>	Most widgets yield a single subwidget but others like radioselect and checkboxselectmultiple produce one subwidget for each choice.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L73'>errors</a>()</tt>	Returns an errorlist for this field returns an empty errorlist.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L81'>as_widget</a>(widget,attrs,only_initial)</tt>	Renders the field by rendering the passed widget adding any html attributes passed as attrs.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L124'>as_text</a>(attrs)</tt>	Returns a string of html for representing this as an <input type="text">.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L130'>as_textarea</a>(attrs)</tt>	Returns a string of html for representing this as a <textarea>.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L134'>as_hidden</a>(attrs)</tt>	Returns a string of html for representing this as an <input type="hidden">.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L140'>data</a>()</tt>	Returns the data for this boundfield or none if it wasn't given.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L147'>value</a>()</tt>	Returns the value for this boundfield using the initial value if the form is not bound or the data otherwise.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L157'>label_tag</a>(contents,attrs,label_suffix)</tt>	Wraps the given contents in a <label>, if the field has an id attribute.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L194'>css_classes</a>(extra_classes)</tt>	Returns a string of space-separated css classes for this field.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L207'>is_hidden</a>()</tt>	Returns true if this boundfield's widget is hidden.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L212'>auto_id</a>()</tt>	Calculates and returns the id attribute for this boundfield if the associated form has specified auto_id.
<tt style='background-color:#E8E8E8;'> forms.BoundField <a href=' /forms/boundfield.py#L225'>id_for_label</a>()</tt>	Wrapper around the field widget's id_for_label method.
<tt style='background-color:#E8E8E8;'> forms. <a href=' /forms/utils.py#L19'>pretty_name</a>(name)</tt>	Converts 'first_name' to 'first name'.
<tt style='background-color:#E8E8E8;'> forms. <a href=' /forms/utils.py#L26'>flatatt</a>(attrs)</tt>	Convert a dictionary of attributes to a single string.
<tt style='background-color:#E8E8E8;'> forms. <a href=' /forms/utils.py#L161'>from_current_timezone</a>(value)</tt>	When time zone support is enabled convert naive datetimes entered in the current time zone to aware datetimes.
<tt style='background-color:#E8E8E8;'> forms. <a href=' /forms/utils.py#L185'>to_current_timezone</a>(value)</tt>	When time zone support is enabled convert aware datetimes to naive datetimes in the current time zone for display.
<tt style='background-color:#E8E8E8;'> forms. <a href=' /forms/models.py#L36'>construct_instance</a>(form,instance,fields,exclude)</tt>	Constructs and returns a model instance from the bound form's cleaned_data, but does not save the returned instance to the.
<tt style='background-color:#E8E8E8;'> forms. <a href=' /forms/models.py#L75'>model_to_dict</a>(instance,fields,exclude)</tt>	Returns a dict containing the data in instance suitable for passing as a form's initial keyword argument.
<tt style='background-color:#E8E8E8;'> forms. <a href=' /forms/models.py#L100'>fields_for_model</a>(model,fields,exclude,widgets)</tt>	Returns a ordereddict containing form fields for the given model.
<tt style='background-color:#E8E8E8;'> forms.BaseModelForm <a href=' /forms/models.py#L300'>_get_validation_exclusions</a>()</tt>	For backwards-compatibility several types of fields need to be excluded from model validation.
<tt style='background-color:#E8E8E8;'> forms.BaseModelForm <a href=' /forms/models.py#L404'>validate_unique</a>()</tt>	Calls the instance's validate_unique() method and updates the form's validation errors if any were raised.
<tt style='background-color:#E8E8E8;'> forms.BaseModelForm <a href=' /forms/models.py#L415'>_save_m2m</a>()</tt>	Save the many-to-many fields and generic relations for this form.
<tt style='background-color:#E8E8E8;'> forms.BaseModelForm <a href=' /forms/models.py#L436'>save</a>(commit)</tt>	Save this form's self instance object if commit=true otherwise add.
<tt style='background-color:#E8E8E8;'> forms. <a href=' /forms/models.py#L466'>modelform_factory</a>(model,form,fields,exclude)</tt>	Returns a modelform containing form fields for the given model.
<tt style='background-color:#E8E8E8;'> forms.BaseModelFormSet <a href=' /forms/models.py#L568'>initial_form_count</a>()</tt>	Returns the number of forms that are required in this formset.
<tt style='background-color:#E8E8E8;'> forms.BaseModelFormSet <a href=' /forms/models.py#L579'>_get_to_python</a>(field)</tt>	If the field is a related field fetch the concrete field's (that is the ultimate pointed-to field's) to_python.
<tt style='background-color:#E8E8E8;'> forms.BaseModelFormSet <a href=' /forms/models.py#L625'>save_new</a>(form,commit)</tt>	Saves and returns a new model instance for the given form.
<tt style='background-color:#E8E8E8;'> forms.BaseModelFormSet <a href=' /forms/models.py#L629'>save_existing</a>(form,instance,commit)</tt>	Saves and returns an existing model instance for the given form.
<tt style='background-color:#E8E8E8;'> forms.BaseModelFormSet <a href=' /forms/models.py#L633'>delete_existing</a>(obj,commit)</tt>	Deletes an existing model instance.
<tt style='background-color:#E8E8E8;'> forms.BaseModelFormSet <a href=' /forms/models.py#L638'>save</a>(commit)</tt>	Saves model instances for every form adding and changing instances as necessary and returns the list of instances.
<tt style='background-color:#E8E8E8;'> forms.BaseModelFormSet <a href=' /forms/models.py#L788'>add_fields</a>(form,index)</tt>	Add a hidden field for the object's primary key.
<tt style='background-color:#E8E8E8;'> forms. <a href=' /forms/models.py#L832'>modelformset_factory</a>(model,form,formfield_callback,formset)</tt>	Returns a formset class for the given django model class.
<tt style='background-color:#E8E8E8;'> forms. <a href=' /forms/models.py#L965'>_get_foreign_key</a>(parent_model,model,fk_name,can_fail)</tt>	Finds and returns the foreignkey from model to parent if there is one (returns none if can_fail is true and no such field exists).
<tt style='background-color:#E8E8E8;'> forms. <a href=' /forms/models.py#L1020'>inlineformset_factory</a>(parent_model,model,form,formset)</tt>	Returns an inlineformset for the given kwargs.
<tt style='background-color:#E8E8E8;'> forms.ModelChoiceField <a href=' /forms/models.py#L1154'>get_limit_choices_to</a>()</tt>	Returns limit_choices_to for this form field.
<tt style='background-color:#E8E8E8;'> forms.ModelChoiceField <a href=' /forms/models.py#L1183'>label_from_instance</a>(obj)</tt>	This method is used to convert objects into strings it's used to generate the labels for the choices presented by this object.
<tt style='background-color:#E8E8E8;'> forms.ModelMultipleChoiceField <a href=' /forms/models.py#L1272'>_check_values</a>(value)</tt>	Given a list of possible pk values returns a queryset of the corresponding objects.
<tt style='background-color:#E8E8E8;'> forms.Field <a href=' /forms/fields.py#L153'>clean</a>(value)</tt>	Validates the given value and returns its "cleaned" value as an appropriate python object.
<tt style='background-color:#E8E8E8;'> forms.Field <a href=' /forms/fields.py#L165'>bound_data</a>(data,initial)</tt>	Return the value that should be shown for this field on render of a bound form given the submitted post data for the field and the initial.
<tt style='background-color:#E8E8E8;'> forms.Field <a href=' /forms/fields.py#L178'>widget_attrs</a>(widget)</tt>	Given a widget instance (*not* a widget class), returns a dictionary of any html attributes that should be added to the widget based on this.
<tt style='background-color:#E8E8E8;'> forms.Field <a href=' /forms/fields.py#L186'>has_changed</a>(initial,data)</tt>	Return true if data differs from initial.
<tt style='background-color:#E8E8E8;'> forms.Field <a href=' /forms/fields.py#L207'>get_bound_field</a>(form,field_name)</tt>	Return a boundfield instance that will be used when accessing the form field in a template.
<tt style='background-color:#E8E8E8;'> forms.CharField <a href=' /forms/fields.py#L234'>to_python</a>(value)</tt>	Returns a unicode object.
<tt style='background-color:#E8E8E8;'> forms.IntegerField <a href=' /forms/fields.py#L273'>to_python</a>(value)</tt>	Validates that int() can be called on the input returns the result.
<tt style='background-color:#E8E8E8;'> forms.FloatField <a href=' /forms/fields.py#L305'>to_python</a>(value)</tt>	Validates that float() can be called on the input returns the result.
<tt style='background-color:#E8E8E8;'> forms.DecimalField <a href=' /forms/fields.py#L347'>to_python</a>(value)</tt>	Validates that the input is a decimal number returns a decimal.
<tt style='background-color:#E8E8E8;'> forms.DateField <a href=' /forms/fields.py#L420'>to_python</a>(value)</tt>	Validates that the input can be converted to a date returns a python.
<tt style='background-color:#E8E8E8;'> forms.TimeField <a href=' /forms/fields.py#L444'>to_python</a>(value)</tt>	Validates that the input can be converted to a time returns a python.
<tt style='background-color:#E8E8E8;'> forms.DateTimeField <a href=' /forms/fields.py#L471'>to_python</a>(value)</tt>	Validates that the input can be converted to a datetime returns a.
<tt style='background-color:#E8E8E8;'> forms.RegexField <a href=' /forms/fields.py#L512'>__init__</a>(regex,max_length,min_length)</tt>	Regex can be either a string or a compiled regular expression object.
<tt style='background-color:#E8E8E8;'> forms.ImageField <a href=' /forms/fields.py#L620'>to_python</a>(data)</tt>	Checks that the file-upload field data contains a valid image gif jpg png possibly others -- whatever the python imaging library supports.
<tt style='background-color:#E8E8E8;'> forms.BooleanField <a href=' /forms/fields.py#L709'>to_python</a>(value)</tt>	Returns a python boolean object.
<tt style='background-color:#E8E8E8;'> forms.NullBooleanField <a href=' /forms/fields.py#L738'>to_python</a>(value)</tt>	Explicitly checks for the string 'true' and 'false', which is what a hidden field will submit for true and false for 'true' and 'false',.
<tt style='background-color:#E8E8E8;'> forms.ChoiceField <a href=' /forms/fields.py#L802'>to_python</a>(value)</tt>	Returns a unicode object.
<tt style='background-color:#E8E8E8;'> forms.ChoiceField <a href=' /forms/fields.py#L808'>validate</a>(value)</tt>	Validates that the input is in self choices.
<tt style='background-color:#E8E8E8;'> forms.ChoiceField <a href=' /forms/fields.py#L820'>valid_value</a>(value)</tt>	Check to see if the provided value is a valid choice.
<tt style='background-color:#E8E8E8;'> forms.TypedChoiceField <a href=' /forms/fields.py#L841'>_coerce</a>(value)</tt>	Validate that the value can be coerced to the right type if not empty.
<tt style='background-color:#E8E8E8;'> forms.MultipleChoiceField <a href=' /forms/fields.py#L877'>validate</a>(value)</tt>	Validates that the input is a list or tuple.
<tt style='background-color:#E8E8E8;'> forms.TypedMultipleChoiceField <a href=' /forms/fields.py#L910'>_coerce</a>(value)</tt>	Validates that the values are in self choices and can be coerced to the.
<tt style='background-color:#E8E8E8;'> forms.ComboField <a href=' /forms/fields.py#L953'>clean</a>(value)</tt>	Validates the given value against all of self fields which is a.
<tt style='background-color:#E8E8E8;'> forms.MultiValueField <a href=' /forms/fields.py#L1007'>clean</a>(value)</tt>	Validates every value in the given list a value is validated against.
<tt style='background-color:#E8E8E8;'> forms.MultiValueField <a href=' /forms/fields.py#L1059'>compress</a>(data_list)</tt>	Returns a single value for the given list of values the values can be.
<tt style='background-color:#E8E8E8;'> forms.Media <a href=' /forms/widgets.py#L84'>absolute_path</a>(path)</tt>	Given a relative or absolute path to a static asset return an absolute path.
<tt style='background-color:#E8E8E8;'> forms.Media <a href=' /forms/widgets.py#L94'>__getitem__</a>(name)</tt>	Returns a media object that only contains media of the given type.
<tt style='background-color:#E8E8E8;'> forms.Widget <a href=' /forms/widgets.py#L194'>format_value</a>(value)</tt>	Return a value as it should appear when rendered in a template.
<tt style='background-color:#E8E8E8;'> forms.Widget <a href=' /forms/widgets.py#L216'>render</a>(name,value,attrs,renderer)</tt>	Returns this widget rendered as html as a unicode string.
<tt style='background-color:#E8E8E8;'> forms.Widget <a href=' /forms/widgets.py#L228'>build_attrs</a>(base_attrs,extra_attrs)</tt>	Helper function for building an attribute dictionary.
<tt style='background-color:#E8E8E8;'> forms.Widget <a href=' /forms/widgets.py#L235'>value_from_datadict</a>(data,files,name)</tt>	Given a dictionary of data and this widget's name returns the value of this widget.
<tt style='background-color:#E8E8E8;'> forms.Widget <a href=' /forms/widgets.py#L245'>id_for_label</a>(id_)</tt>	Returns the html id attribute of this widget for use by a <label>, given the id of the field.
<tt style='background-color:#E8E8E8;'> forms.FileInput <a href=' /forms/widgets.py#L361'>format_value</a>(value)</tt>	File input never renders a value.
<tt style='background-color:#E8E8E8;'> forms.FileInput <a href=' /forms/widgets.py#L365'>value_from_datadict</a>(data,files,name)</tt>	File widgets take data from files not post.
<tt style='background-color:#E8E8E8;'> forms.ClearableFileInput <a href=' /forms/widgets.py#L382'>clear_checkbox_name</a>(name)</tt>	Given the name of the file input return the name of the clear checkbox input.
<tt style='background-color:#E8E8E8;'> forms.ClearableFileInput <a href=' /forms/widgets.py#L389'>clear_checkbox_id</a>(name)</tt>	Given the name of the clear checkbox input return the html id for it.
<tt style='background-color:#E8E8E8;'> forms.ClearableFileInput <a href=' /forms/widgets.py#L395'>is_initial</a>(value)</tt>	Return whether value is considered to be initial value.
<tt style='background-color:#E8E8E8;'> forms.ClearableFileInput <a href=' /forms/widgets.py#L401'>format_value</a>(value)</tt>	Return the file object if it has a defined url attribute.
<tt style='background-color:#E8E8E8;'> forms.CheckboxInput <a href=' /forms/widgets.py#L499'>format_value</a>(value)</tt>	Only return the 'value' attribute if value isn't empty.
<tt style='background-color:#E8E8E8;'> forms.ChoiceWidget <a href=' /forms/widgets.py#L553'>subwidgets</a>(name,value,attrs)</tt>	Yield all "subwidgets" of this widget used to enable iterating.
<tt style='background-color:#E8E8E8;'> forms.ChoiceWidget <a href=' /forms/widgets.py#L562'>options</a>(name,value,attrs)</tt>	Yield a flat list of options for this widgets.
<tt style='background-color:#E8E8E8;'> forms.ChoiceWidget <a href=' /forms/widgets.py#L568'>optgroups</a>(name,value,attrs)</tt>	Return a list of optgroups for this widget.
<tt style='background-color:#E8E8E8;'> forms.ChoiceWidget <a href=' /forms/widgets.py#L631'>id_for_label</a>(id_,index)</tt>	Use an incremented id for each option where the main widget references the zero index.
<tt style='background-color:#E8E8E8;'> forms.ChoiceWidget <a href=' /forms/widgets.py#L649'>format_value</a>(value)</tt>	Return selected values as a list.
<tt style='background-color:#E8E8E8;'> forms.Select <a href=' /forms/widgets.py#L670'>_choice_has_empty_value</a>(choice)</tt>	Return true if the choice's value is empty string or none.
<tt style='background-color:#E8E8E8;'> forms.Select <a href=' /forms/widgets.py#L679'>use_required_attribute</a>(initial)</tt>	Don't render 'required' if the first <option> has a value as that's invalid html.
<tt style='background-color:#E8E8E8;'> forms.CheckboxSelectMultiple <a href=' /forms/widgets.py#L761'>id_for_label</a>(id_,index)</tt>	" don't include for="field_0" in <label> because clicking such a label.
<tt style='background-color:#E8E8E8;'> forms.MultiWidget <a href=' /forms/widgets.py#L836'>decompress</a>(value)</tt>	Returns a list of decompressed values for the given compressed value.
<tt style='background-color:#E8E8E8;'> forms.MultiWidget <a href=' /forms/widgets.py#L844'>_get_media</a>()</tt>	Media for a multiwidget is the combination of all media of the subwidgets.
<tt style='background-color:#E8E8E8;'> forms.SelectDateWidget <a href=' /forms/widgets.py#L985'>format_value</a>(value)</tt>	Return a dict containing the year month and day of the current value.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L72'>__iter__</a>()</tt>	Yields the forms in the order they should be rendered.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L76'>__getitem__</a>(index)</tt>	Returns the form at the given index based on the rendering order.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L83'>__bool__</a>()</tt>	All formsets have a management form which is not included in the length.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L90'>management_form</a>()</tt>	Returns the managementform instance for this formset.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L109'>total_form_count</a>()</tt>	Returns the total number of forms in this formset.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L128'>initial_form_count</a>()</tt>	Returns the number of forms that are required in this formset.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L137'>forms</a>()</tt>	Instantiate forms at first property access.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L147'>get_form_kwargs</a>(index)</tt>	Return additional keyword arguments for each individual formset form.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L156'>_construct_form</a>(i)</tt>	Instantiates and returns the i-th form instance in a formset.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L186'>initial_forms</a>()</tt>	Return a list of all the initial forms in this formset.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L191'>extra_forms</a>()</tt>	Return a list of all the extra forms in this formset.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L208'>cleaned_data</a>()</tt>	Returns a list of form cleaned_data dicts for every form in self forms.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L217'>deleted_forms</a>()</tt>	Returns a list of forms that have been marked for deletion.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L237'>ordered_forms</a>()</tt>	Returns a list of form in the order specified by the incoming data.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L279'>non_form_errors</a>()</tt>	Returns an errorlist of errors that aren't associated with a particular form -- i.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L289'>errors</a>()</tt>	Returns a list of form errors for every form in self forms.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L298'>total_error_count</a>()</tt>	Returns the number of errors across all forms in the formset.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L305'>_should_delete_form</a>(form)</tt>	Returns whether or not the form was marked for deletion.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L311'>is_valid</a>()</tt>	Returns true if every form in self forms is valid.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L332'>full_clean</a>()</tt>	Cleans all of self data and populates self _errors and.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L369'>clean</a>()</tt>	Hook for doing any extra formset-wide cleaning after form clean() has.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L378'>has_changed</a>()</tt>	Returns true if data in any form differs from initial.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L384'>add_fields</a>(form,index)</tt>	A hook for adding extra fields on to each form instance.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L398'>is_multipart</a>()</tt>	Returns true if the formset needs to be multipart i e it.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L417'>as_table</a>()</tt>	Returns this formset rendered as html <tr>s -- excluding the <table></table>.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L425'>as_p</a>()</tt>	Returns this formset rendered as html <p>s.
<tt style='background-color:#E8E8E8;'> forms.BaseFormSet <a href=' /forms/formsets.py#L430'>as_ul</a>()</tt>	Returns this formset rendered as html <li>s.
<tt style='background-color:#E8E8E8;'> forms. <a href=' /forms/formsets.py#L436'>formset_factory</a>(form,formset,extra,can_order)</tt>	Return a formset for the given form class.
<tt style='background-color:#E8E8E8;'> forms. <a href=' /forms/formsets.py#L456'>all_valid</a>(formsets)</tt>	Returns true if every formset in formsets is valid.
<tt style='background-color:#E8E8E8;'> db. <a href=' /db/transaction.py#L14'>get_connection</a>(using)</tt>	Get a database connection by name or the default database connection if no name is provided.
<tt style='background-color:#E8E8E8;'> db. <a href=' /db/transaction.py#L24'>get_autocommit</a>(using)</tt>	Get the autocommit status of the connection.
<tt style='background-color:#E8E8E8;'> db. <a href=' /db/transaction.py#L31'>set_autocommit</a>(autocommit,using)</tt>	Set the autocommit status of the connection.
<tt style='background-color:#E8E8E8;'> db. <a href=' /db/transaction.py#L38'>commit</a>(using)</tt>	Commits a transaction.
<tt style='background-color:#E8E8E8;'> db. <a href=' /db/transaction.py#L45'>rollback</a>(using)</tt>	Rolls back a transaction.
<tt style='background-color:#E8E8E8;'> db. <a href=' /db/transaction.py#L52'>savepoint</a>(using)</tt>	Creates a savepoint if supported and required by the backend inside the current transaction.
<tt style='background-color:#E8E8E8;'> db. <a href=' /db/transaction.py#L61'>savepoint_rollback</a>(sid,using)</tt>	Rolls back the most recent savepoint if one exists does nothing if.
<tt style='background-color:#E8E8E8;'> db. <a href=' /db/transaction.py#L69'>savepoint_commit</a>(sid,using)</tt>	Commits the most recent savepoint if one exists does nothing if.
<tt style='background-color:#E8E8E8;'> db. <a href=' /db/transaction.py#L77'>clean_savepoints</a>(using)</tt>	Resets the counter used to generate unique savepoint ids in this thread.
<tt style='background-color:#E8E8E8;'> db. <a href=' /db/transaction.py#L84'>get_rollback</a>(using)</tt>	Gets the "needs rollback" flag -- for *advanced use* only.
<tt style='background-color:#E8E8E8;'> db. <a href=' /db/transaction.py#L91'>set_rollback</a>(rollback,using)</tt>	Sets or unsets the "needs rollback" flag -- for *advanced use* only.
<tt style='background-color:#E8E8E8;'> db. <a href=' /db/transaction.py#L106'>on_commit</a>(func,using)</tt>	Register func to be called when the current transaction is committed.
<tt style='background-color:#E8E8E8;'> db.DatabaseErrorWrapper <a href=' /db/utils.py#L59'>__init__</a>(wrapper)</tt>	Wrapper is a database wrapper.
<tt style='background-color:#E8E8E8;'> db. <a href=' /db/utils.py#L105'>load_backend</a>(backend_name)</tt>	Return a database backend's "base" module given a fully qualified database backend name or raise an error if it doesn't exist.
<tt style='background-color:#E8E8E8;'> db.ConnectionHandler <a href=' /db/utils.py#L145'>__init__</a>(databases)</tt>	Databases is an optional dictionary of database definitions (structured like settings.
<tt style='background-color:#E8E8E8;'> db.ConnectionHandler <a href=' /db/utils.py#L170'>ensure_defaults</a>(alias)</tt>	Puts the defaults into the settings dictionary for a given connection where no settings is provided.
<tt style='background-color:#E8E8E8;'> db.ConnectionHandler <a href=' /db/utils.py#L191'>prepare_test_settings</a>(alias)</tt>	Makes sure the test settings are available in the 'test' sub-dictionary.
<tt style='background-color:#E8E8E8;'> db.ConnectionRouter <a href=' /db/utils.py#L238'>__init__</a>(routers)</tt>	If routers is not specified will default to settings database_routers.
<tt style='background-color:#E8E8E8;'> db.ConnectionRouter <a href=' /db/utils.py#L314'>get_migratable_models</a>(app_config,db,include_auto_created)</tt>	Return app models allowed to be synchronized on provided db.
<tt style='background-color:#E8E8E8;'> db.backends. <a href=' /db/backends/utils.py#L183'>truncate_name</a>(name,length,hash_len)</tt>	Shorten a string to a repeatable mangled version with the given length.
<tt style='background-color:#E8E8E8;'> db.backends. <a href=' /db/backends/utils.py#L199'>format_number</a>(value,max_digits,decimal_places)</tt>	Formats a number into a string with the requisite number of digits and decimal places.
<tt style='background-color:#E8E8E8;'> db.backends. <a href=' /db/backends/utils.py#L221'>strip_quotes</a>(table_name)</tt>	Strip quotes off of quoted table names to make them safe for use in index names sequence names etc.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseFeatures <a href=' /db/backends/sqlite3/features.py#L58'>supports_stddev</a>()</tt>	Confirm support for stddev and related stats functions sqlite supports stddev as an extension package so.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseSchemaEditor <a href=' /db/backends/sqlite3/schema.py#L70'>_remake_table</a>(model,create_field,delete_field,alter_field)</tt>	Shortcut to transform a model from old_model into new_model the essential steps are.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseSchemaEditor <a href=' /db/backends/sqlite3/schema.py#L229'>add_field</a>(model,field)</tt>	Creates a field on a model.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseSchemaEditor <a href=' /db/backends/sqlite3/schema.py#L240'>remove_field</a>(model,field)</tt>	Removes a field from a model usually involves deleting a column.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseSchemaEditor <a href=' /db/backends/sqlite3/schema.py#L258'>_alter_field</a>(model,old_field,new_field,old_type)</tt>	Actually perform a "physical" non-manytomany field update.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseSchemaEditor <a href=' /db/backends/sqlite3/schema.py#L264'>_alter_many_to_many</a>(model,old_field,new_field,strict)</tt>	Alters m2ms to repoint their to= endpoints.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseOperations <a href=' /db/backends/sqlite3/operations.py#L18'>bulk_batch_size</a>(fields,objs)</tt>	Sqlite has a compile-time default (sqlite_limit_variable_number) of 999 variables per query.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseOperations <a href=' /db/backends/sqlite3/operations.py#L57'>format_for_duration_arithmetic</a>(sql)</tt>	Do nothing here we will handle it in the custom function.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseOperations <a href=' /db/backends/sqlite3/operations.py#L101'>_quote_params_for_last_executed_query</a>(params)</tt>	Only for last_executed_query! don't use this to execute sql queries!.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3. <a href=' /db/backends/sqlite3/introspection.py#L13'>get_field_size</a>(name)</tt>	Extract the size number from a "varchar 11 " type name.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseIntrospection <a href=' /db/backends/sqlite3/introspection.py#L60'>get_table_list</a>(cursor)</tt>	Returns a list of table and view names in the current database.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseIntrospection <a href=' /db/backends/sqlite3/introspection.py#L72'>get_table_description</a>(cursor,table_name)</tt>	Returns a description of the table with the db-api cursor description interface.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseIntrospection <a href=' /db/backends/sqlite3/introspection.py#L87'>column_name_converter</a>(name)</tt>	Sqlite will in some cases e g when returning columns from views and.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseIntrospection <a href=' /db/backends/sqlite3/introspection.py#L102'>get_relations</a>(cursor,table_name)</tt>	Return a dictionary of {field_name (field_name_other_table other_table)} representing all relationships to the given table.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseIntrospection <a href=' /db/backends/sqlite3/introspection.py#L157'>get_key_columns</a>(cursor,table_name)</tt>	Returns a list of (column_name referenced_table_name referenced_column_name) for all key columns in given table.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseIntrospection <a href=' /db/backends/sqlite3/introspection.py#L209'>get_primary_key_column</a>(cursor,table_name)</tt>	Get the column name of the primary key for the given table.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseIntrospection <a href=' /db/backends/sqlite3/introspection.py#L239'>get_constraints</a>(cursor,table_name)</tt>	Retrieves any constraints or keys unique pk fk check index across one or more columns.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3. <a href=' /db/backends/sqlite3/base.py#L60'>decoder</a>(conv_func)</tt>	The python sqlite3 interface returns always byte strings.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseWrapper <a href=' /db/backends/sqlite3/base.py#L252'>check_constraints</a>(table_names)</tt>	Checks each table name in table_names for rows with invalid foreign key references.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseWrapper <a href=' /db/backends/sqlite3/base.py#L302'>_start_transaction_under_autocommit</a>()</tt>	Start a transaction explicitly in autocommit mode.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3. <a href=' /db/backends/sqlite3/base.py#L445'>_sqlite_format_dtdelta</a>(conn,lhs,rhs)</tt>	Lhs and rhs can be either.
<tt style='background-color:#E8E8E8;'> db.backends.sqlite3.DatabaseCreation <a href=' /db/backends/sqlite3/creation.py#L101'>test_db_signature</a>()</tt>	Returns a tuple that uniquely identifies a test database.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseFeatures <a href=' /db/backends/oracle/features.py#L39'>introspected_boolean_field_type</a>(field,created_separately)</tt>	Some versions of oracle -- we've seen this on 11 2 0 1 and suspect.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseSchemaEditor <a href=' /db/backends/oracle/schema.py#L63'>_alter_field_type_workaround</a>(model,old_field,new_field)</tt>	Oracle refuses to change from some type to other type.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseSchemaEditor <a href=' /db/backends/oracle/schema.py#L106'>normalize_name</a>(name)</tt>	Get the properly shortened and uppercased identifier as returned by quote_name(), but without the actual quotes.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseSchemaEditor <a href=' /db/backends/oracle/schema.py#L116'>_generate_temp_name</a>(for_name)</tt>	Generates temporary names for workarounds that need temp columns.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseOperations <a href=' /db/backends/oracle/operations.py#L98'>date_interval_sql</a>(timedelta)</tt>	Numtodsinterval converts number to interval day to second literal.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseOperations <a href=' /db/backends/oracle/operations.py#L454'>adapt_datefield_value</a>(value)</tt>	Transform a date value to an object compatible with what is expected by the backend driver for date columns.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseOperations <a href=' /db/backends/oracle/operations.py#L463'>adapt_datetimefield_value</a>(value)</tt>	Transform a datetime value to an object compatible with what is expected by the backend driver for datetime columns.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseIntrospection <a href=' /db/backends/oracle/introspection.py#L46'>get_table_list</a>(cursor)</tt>	Returns a list of table and view names in the current database.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseIntrospection <a href=' /db/backends/oracle/introspection.py#L54'>get_table_description</a>(cursor,table_name)</tt>	Returns a description of the table with the db-api cursor description interface.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseIntrospection <a href=' /db/backends/oracle/introspection.py#L89'>table_name_converter</a>(name)</tt>	Table name comparison is case insensitive under oracle.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseIntrospection <a href=' /db/backends/oracle/introspection.py#L93'>_name_to_index</a>(cursor,table_name)</tt>	Returns a dictionary of {field_name field_index} for the given table.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseIntrospection <a href=' /db/backends/oracle/introspection.py#L100'>get_relations</a>(cursor,table_name)</tt>	Returns a dictionary of {field_name (field_name_other_table other_table)} representing all relationships to the given table.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseIntrospection <a href=' /db/backends/oracle/introspection.py#L171'>get_constraints</a>(cursor,table_name)</tt>	Retrieves any constraints or keys unique pk fk check index across one or more columns.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.SQLCompiler <a href=' /db/backends/oracle/compiler.py#L5'>as_sql</a>(with_limits,with_col_aliases)</tt>	Creates the sql for this query returns the sql string and list.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseWrapper <a href=' /db/backends/oracle/base.py#L285'>check_constraints</a>(table_names)</tt>	To check constraints we set constraints to immediate then when we're done we must ensure they.
<tt style='background-color:#E8E8E8;'> db.backends.oracle. <a href=' /db/backends/oracle/base.py#L589'>to_unicode</a>(s)</tt>	Convert strings to unicode objects and return all other data types unchanged.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseCreation <a href=' /db/backends/oracle/creation.py#L15'>_maindb_connection</a>()</tt>	This is analogous to other backends' _nodb_connection property which allows access to an "administrative" connection which can.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseCreation <a href=' /db/backends/oracle/creation.py#L103'>_switch_to_test_user</a>(parameters)</tt>	Oracle doesn't have the concept of separate databases under the same user.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseCreation <a href=' /db/backends/oracle/creation.py#L122'>set_as_test_mirror</a>(primary_settings_dict)</tt>	Set this database up to be used in testing as a mirror of a primary database.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseCreation <a href=' /db/backends/oracle/creation.py#L165'>_destroy_test_db</a>(test_database_name,verbosity)</tt>	Destroy a test database prompting the user for confirmation if the database already exists.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseCreation <a href=' /db/backends/oracle/creation.py#L262'>_execute_allow_fail_statements</a>(cursor,statements,parameters,verbosity)</tt>	Execute statements which are allowed to fail silently if the oracle error code given by acceptable_ora_err is raised.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseCreation <a href=' /db/backends/oracle/creation.py#L292'>_test_settings_get</a>(key,default,prefixed)</tt>	Return a value from the test settings dict.
<tt style='background-color:#E8E8E8;'> db.backends.oracle.DatabaseCreation <a href=' /db/backends/oracle/creation.py#L345'>_get_test_db_name</a>()</tt>	We need to return the 'production' db name to get the test db creation machinery to work.
<tt style='background-color:#E8E8E8;'> db.backends.postgresql.DatabaseSchemaEditor <a href=' /db/backends/postgresql/schema.py#L32'>_create_like_index_sql</a>(model,field)</tt>	Return the statement to create an index with varchar operator pattern when the column type is 'varchar' or 'text', otherwise return none.
<tt style='background-color:#E8E8E8;'> db.backends.postgresql.DatabaseSchemaEditor <a href=' /db/backends/postgresql/schema.py#L54'>_alter_column_type_sql</a>(table,old_field,new_field,new_type)</tt>	Makes alter type with serial make sense.
<tt style='background-color:#E8E8E8;'> db.backends.postgresql.DatabaseOperations <a href=' /db/backends/postgresql/operations.py#L70'>fetch_returned_insert_ids</a>(cursor)</tt>	Given a cursor object that has just performed an insert returning.
<tt style='background-color:#E8E8E8;'> db.backends.postgresql.DatabaseOperations <a href=' /db/backends/postgresql/operations.py#L212'>max_name_length</a>()</tt>	Returns the maximum length of an identifier.
<tt style='background-color:#E8E8E8;'> db.backends.postgresql.DatabaseIntrospection <a href=' /db/backends/postgresql/introspection.py#L57'>get_table_list</a>(cursor)</tt>	Returns a list of table and view names in the current database.
<tt style='background-color:#E8E8E8;'> db.backends.postgresql.DatabaseIntrospection <a href=' /db/backends/postgresql/introspection.py#L72'>get_table_description</a>(cursor,table_name)</tt>	Returns a description of the table with the db-api cursor description interface.
<tt style='background-color:#E8E8E8;'> db.backends.postgresql.DatabaseIntrospection <a href=' /db/backends/postgresql/introspection.py#L90'>get_relations</a>(cursor,table_name)</tt>	Returns a dictionary of {field_name (field_name_other_table other_table)} representing all relationships to the given table.
<tt style='background-color:#E8E8E8;'> db.backends.postgresql.DatabaseIntrospection <a href=' /db/backends/postgresql/introspection.py#L151'>get_constraints</a>(cursor,table_name)</tt>	Retrieve any constraints or keys unique pk fk check index across one or more columns.
<tt style='background-color:#E8E8E8;'> db.backends.postgresql.DatabaseWrapper <a href=' /db/backends/postgresql/base.py#L238'>check_constraints</a>(table_names)</tt>	To check constraints we set constraints to immediate then when we're done we must ensure they.
<tt style='background-color:#E8E8E8;'> db.backends.postgresql. <a href=' /db/backends/postgresql/client.py#L9'>_escape_pgpass</a>(txt)</tt>	Escape a fragment of a postgresql pgpass file.
<tt style='background-color:#E8E8E8;'> db.backends.postgresql. <a href=' /db/backends/postgresql/version.py#L16'>_parse_version</a>(text)</tt>	Internal parsing method factored out for testing purposes.
<tt style='background-color:#E8E8E8;'> db.backends.postgresql. <a href=' /db/backends/postgresql/version.py#L25'>get_version</a>(connection)</tt>	Returns an integer representing the major minor and revision number of the server.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseFeatures <a href=' /db/backends/base/features.py#L233'>supports_transactions</a>()</tt>	Confirm support for transactions.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseFeatures <a href=' /db/backends/base/features.py#L247'>supports_stddev</a>()</tt>	Confirm support for stddev and related stats functions.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseFeatures <a href=' /db/backends/base/features.py#L256'>introspected_boolean_field_type</a>(field,created_separately)</tt>	What is the type returned when the backend introspects a booleanfield? the optional arguments may be used to give further details of the field to be.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L98'>execute</a>(sql,params)</tt>	Executes the given sql statement with optional parameters.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L124'>_digest</a>(cls)</tt>	Generates a 32-bit digest of a set of arguments that can be used to shorten identifying names.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L137'>column_sql</a>(model,field,include_default)</tt>	Takes a field and returns its column definition.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L185'>skip_default</a>(field)</tt>	Some backends don't accept default values for certain columns types (i.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L192'>prepare_default</a>(value)</tt>	Only used for backends which have requires_literal_defaults feature.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L201'>effective_default</a>(field)</tt>	Returns a field's effective database default value.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L231'>quote_value</a>(value)</tt>	Returns a quoted version of the value so it's safe to use in an sql string.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L243'>create_model</a>(model)</tt>	Takes a model and creates a table for it in the database.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L312'>delete_model</a>(model)</tt>	Deletes a model from the database.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L326'>add_index</a>(model,index)</tt>	Add an index on a model.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L332'>remove_index</a>(model,index)</tt>	Remove an index from a model.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L338'>alter_unique_together</a>(model,old_unique_together,new_unique_together)</tt>	Deals with a model changing its unique_together.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L354'>alter_index_together</a>(model,old_index_together,new_index_together)</tt>	Deals with a model changing its index_together.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L381'>alter_db_table</a>(model,old_db_table,new_db_table)</tt>	Renames the table a model points to.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L394'>alter_db_tablespace</a>(model,old_db_tablespace,new_db_tablespace)</tt>	Moves a model's table between tablespaces.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L404'>add_field</a>(model,field)</tt>	Creates a field on a model.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L448'>remove_field</a>(model,field)</tt>	Removes a field from a model usually involves deleting a column.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L474'>alter_field</a>(model,old_field,new_field,strict)</tt>	Allows a field's type uniqueness nullability default column constraints etc.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L515'>_alter_field</a>(model,old_field,new_field,old_type)</tt>	Actually perform a "physical" non-manytomany field update.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L794'>_alter_column_type_sql</a>(table,old_field,new_field,new_type)</tt>	Hook to specialize column type alteration for different backends for cases when a creation type is different to an alteration type.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L815'>_alter_many_to_many</a>(model,old_field,new_field,strict)</tt>	Alters m2ms to repoint their to= endpoints.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L838'>_create_index_name</a>(model,column_names,suffix)</tt>	Generates a unique name for an index/unique constraint.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L879'>_create_index_sql</a>(model,fields,suffix,sql)</tt>	Return the sql statement to create the index for one or several fields.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L896'>_model_indexes_sql</a>(model)</tt>	Return all index sql statements (field indexes index_together meta.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L915'>_field_indexes_sql</a>(model,field)</tt>	Return a list of all index sql statements for the specified field.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseSchemaEditor <a href=' /db/backends/base/schema.py#L967'>_constraint_names</a>(model,column_names,unique,primary_key)</tt>	Returns all constraint names matching the columns and conditions.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L42'>autoinc_sql</a>(table,column)</tt>	Returns any sql needed to support auto-incrementing primary keys or none if no sql is necessary.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L51'>bulk_batch_size</a>(fields,objs)</tt>	Returns the maximum allowed batch size for the backend the fields.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L59'>cache_key_culling_sql</a>()</tt>	Returns an sql query that retrieves the first cache key greater than the n smallest.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L69'>unification_cast_sql</a>(output_field)</tt>	Given a field instance returns the sql necessary to cast the result of a union to that type.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L77'>date_extract_sql</a>(lookup_type,field_name)</tt>	Given a lookup_type of 'year', 'month' or 'day', returns the sql that extracts a value from the given date field field_name.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L84'>date_interval_sql</a>(timedelta)</tt>	Implements the date interval functionality for expressions.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L90'>date_trunc_sql</a>(lookup_type,field_name)</tt>	Given a lookup_type of 'year', 'month' or 'day', returns the sql that truncates the given date field field_name to a date object with only.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L98'>datetime_cast_date_sql</a>(field_name,tzname)</tt>	Returns the sql necessary to cast a datetime value to date value.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L104'>datetime_cast_time_sql</a>(field_name,tzname)</tt>	Returns the sql necessary to cast a datetime value to time value.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L110'>datetime_extract_sql</a>(lookup_type,field_name,tzname)</tt>	Given a lookup_type of 'year', 'month', 'day', 'hour', 'minute' or 'second', returns the sql that extracts a value from the given.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L118'>datetime_trunc_sql</a>(lookup_type,field_name,tzname)</tt>	Given a lookup_type of 'year', 'month', 'day', 'hour', 'minute' or 'second', returns the sql that truncates the given datetime field.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L127'>time_trunc_sql</a>(lookup_type,field_name)</tt>	Given a lookup_type of 'hour', 'minute' or 'second', returns the sql that truncates the given time field field_name to a time object with.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L135'>time_extract_sql</a>(lookup_type,field_name)</tt>	Given a lookup_type of 'hour', 'minute' or 'second', returns the sql that extracts a value from the given time field field_name.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L142'>deferrable_sql</a>()</tt>	Returns the sql necessary to make a constraint "initially deferred" during a create table statement.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L149'>distinct_sql</a>(fields)</tt>	Returns an sql distinct clause which removes duplicate rows from the result set.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L160'>fetch_returned_insert_id</a>(cursor)</tt>	Given a cursor object that has just performed an insert returning.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L168'>field_cast_sql</a>(db_type,internal_type)</tt>	Given a column type (e g 'blob', 'varchar'), and an internal type.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L177'>force_no_ordering</a>()</tt>	Returns a list used in the "order by" clause to force no ordering at all.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L185'>for_update_sql</a>(nowait,skip_locked)</tt>	Returns the for update sql clause to lock rows for an update operation.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L196'>fulltext_search_sql</a>(field_name)</tt>	Returns the sql where clause to use in order to perform a full-text search of the given field_name.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L205'>last_executed_query</a>(cursor,sql,params)</tt>	Returns a string of the query last executed by the given cursor with placeholders replaced with actual values.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L227'>last_insert_id</a>(cursor,table_name,pk_name)</tt>	Given a cursor object that has just performed an insert statement into a table that has an auto-incrementing id returns the newly created id.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L237'>lookup_cast</a>(lookup_type,internal_type)</tt>	Returns the string to use in a query when performing lookups ("contains", "like", etc.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L245'>max_in_list_size</a>()</tt>	Returns the maximum number of items that can be passed in a single 'in' list condition or none if the backend does not impose a limit.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L252'>max_name_length</a>()</tt>	Returns the maximum length of table and column names or none if there is no limit.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L259'>no_limit_value</a>()</tt>	Returns the value to use for the limit when we are wanting "limit infinity".
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L266'>pk_default_value</a>()</tt>	Returns the value to use during an insert statement to specify that the field should use its default value.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L273'>prepare_sql_script</a>(sql)</tt>	Takes an sql script that may contain multiple lines and returns a list of statements to feed to successive cursor.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L293'>process_clob</a>(value)</tt>	Returns the value of a clob column for backends that return a locator object that requires additional processing.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L300'>return_insert_id</a>()</tt>	For backends that support returning the last insert id as part of an insert query this method returns the sql and params to.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L309'>compiler</a>(compiler_name)</tt>	Returns the sqlcompiler class corresponding to the given name in the namespace corresponding to the compiler_module attribute.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L319'>quote_name</a>(name)</tt>	Returns a quoted version of the given table index or column name does.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L326'>random_function_sql</a>()</tt>	Returns an sql expression that returns a random value.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L332'>regex_lookup</a>(lookup_type)</tt>	Returns the string to use in a query when performing regular expression lookups (using "regex" or "iregex").
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L343'>savepoint_create_sql</a>(sid)</tt>	Returns the sql for starting a new savepoint only required if the.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L351'>savepoint_commit_sql</a>(sid)</tt>	Returns the sql for committing the given savepoint.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L357'>savepoint_rollback_sql</a>(sid)</tt>	Returns the sql for rolling back the given savepoint.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L363'>set_time_zone_sql</a>()</tt>	Returns the sql that will set the connection's time zone.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L371'>sql_flush</a>(style,tables,sequences,allow_cascade)</tt>	Returns a list of sql statements required to remove all data from the given database tables (without actually removing the tables.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L389'>sequence_reset_by_name_sql</a>(style,sequences)</tt>	Returns a list of the sql statements required to reset sequences.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L399'>sequence_reset_sql</a>(style,model_list)</tt>	Returns a list of the sql statements required to reset sequences for the given models.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L409'>start_transaction_sql</a>()</tt>	Returns the sql statement required to start a transaction.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L415'>end_transaction_sql</a>(success)</tt>	Returns the sql statement required to end a transaction.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L423'>tablespace_sql</a>(tablespace,inline)</tt>	Returns the sql that will be used in a query to define the tablespace.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L434'>prep_for_like_query</a>(x)</tt>	Prepares a value for use in a like query.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L442'>validate_autopk_value</a>(value)</tt>	Certain backends do not accept some values for "serial" fields for example zero in mysql.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L450'>adapt_unknown_value</a>(value)</tt>	Transforms a value to something compatible with the backend driver.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L469'>adapt_datefield_value</a>(value)</tt>	Transforms a date value to an object compatible with what is expected by the backend driver for date columns.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L478'>adapt_datetimefield_value</a>(value)</tt>	Transforms a datetime value to an object compatible with what is expected by the backend driver for datetime columns.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L487'>adapt_timefield_value</a>(value)</tt>	Transforms a time value to an object compatible with what is expected by the backend driver for time columns.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L498'>adapt_decimalfield_value</a>(value,max_digits,decimal_places)</tt>	Transforms a decimal decimal value to an object compatible with what is.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L505'>adapt_ipaddressfield_value</a>(value)</tt>	Transforms a string representation of an ip address into the expected type for the backend driver.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L512'>year_lookup_bounds_for_date_field</a>(value)</tt>	Returns a two-elements list with the lower and upper bound to be used with a between operator to query a datefield value using a year.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L526'>year_lookup_bounds_for_datetime_field</a>(value)</tt>	Returns a two-elements list with the lower and upper bound to be used with a between operator to query a datetimefield value using a year.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L544'>get_db_converters</a>(expression)</tt>	Get a list of functions needed to convert field data.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L566'>check_expression_support</a>(expression)</tt>	Check that the backend supports the provided expression.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L577'>combine_expression</a>(connector,sub_expressions)</tt>	Combine a list of subexpressions into a single expression using the provided connecting operator.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L589'>binary_placeholder_sql</a>(value)</tt>	Some backends require special syntax to insert binary content (mysql for example uses '_binary %s').
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L596'>modify_insert_params</a>(placeholder,params)</tt>	Allow modification of insert parameters needed for oracle spatial.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseOperations <a href=' /db/backends/base/operations.py#L602'>integer_field_range</a>(internal_type)</tt>	Given an integer field internal type (e g 'positiveintegerfield'),.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseIntrospection <a href=' /db/backends/base/introspection.py#L19'>get_field_type</a>(data_type,description)</tt>	Hook for a database backend to use the cursor description to match a django field type to a database column.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseIntrospection <a href=' /db/backends/base/introspection.py#L27'>table_name_converter</a>(name)</tt>	Apply a conversion to the name for the purposes of comparison.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseIntrospection <a href=' /db/backends/base/introspection.py#L34'>column_name_converter</a>(name)</tt>	Apply a conversion to the column name for the purposes of comparison.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseIntrospection <a href=' /db/backends/base/introspection.py#L42'>table_names</a>(cursor,include_views)</tt>	Returns a list of names of all tables that exist in the database.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseIntrospection <a href=' /db/backends/base/introspection.py#L57'>get_table_list</a>(cursor)</tt>	Returns an unsorted list of tableinfo named tuples of all tables and views that exist in the database.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseIntrospection <a href=' /db/backends/base/introspection.py#L64'>django_table_names</a>(only_existing,include_views)</tt>	Returns a list of all table names that have associated django models and are in installed_apps.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseIntrospection <a href=' /db/backends/base/introspection.py#L94'>installed_models</a>(tables)</tt>	Returns a set of all models represented by the provided list of table names.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseIntrospection <a href=' /db/backends/base/introspection.py#L107'>sequence_list</a>()</tt>	Returns a list of information about all db sequences for all models in all apps.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseIntrospection <a href=' /db/backends/base/introspection.py#L133'>get_key_columns</a>(cursor,table_name)</tt>	Backends can override this to return a list of (column_name referenced_table_name referenced_column_name) for all key columns in given table.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseIntrospection <a href=' /db/backends/base/introspection.py#L140'>get_primary_key_column</a>(cursor,table_name)</tt>	Returns the name of the primary key column for the given table.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseIntrospection <a href=' /db/backends/base/introspection.py#L149'>get_indexes</a>(cursor,table_name)</tt>	Deprecated in django 1 11 use get_constraints instead.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseIntrospection <a href=' /db/backends/base/introspection.py#L161'>get_constraints</a>(cursor,table_name)</tt>	Retrieves any constraints or keys unique pk fk check index across one or more columns.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L103'>ensure_timezone</a>()</tt>	Ensure the connection's timezone is set to self timezone_name and.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L110'>timezone</a>()</tt>	Time zone for datetimes stored as naive values in the database.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L130'>timezone_name</a>()</tt>	Name of the time zone of the database connection.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L156'>get_connection_params</a>()</tt>	Returns a dict of parameters suitable for get_new_connection.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L160'>get_new_connection</a>(conn_params)</tt>	Opens a connection to the database.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L164'>init_connection_state</a>()</tt>	Initializes the database connection settings.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L168'>create_cursor</a>(name)</tt>	Creates a cursor assumes that a connection is established.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L174'>connect</a>()</tt>	Connects to the database assumes that the connection is closed.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L207'>ensure_connection</a>()</tt>	Guarantees that a connection to the database is established.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L217'>_prepare_cursor</a>(cursor)</tt>	Validate the connection is usable and perform database cursor wrapping.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L250'>cursor</a>()</tt>	Creates a cursor opening a connection if necessary.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L256'>commit</a>()</tt>	Commits a transaction and resets the dirty flag.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L267'>rollback</a>()</tt>	Rolls back a transaction and resets the dirty flag.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L279'>close</a>()</tt>	Closes the connection to the database.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L320'>savepoint</a>()</tt>	Creates a savepoint inside the current transaction returns an.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L340'>savepoint_rollback</a>(sid)</tt>	Rolls back to a savepoint does nothing if savepoints are not supported.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L355'>savepoint_commit</a>(sid)</tt>	Releases a savepoint does nothing if savepoints are not supported.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L365'>clean_savepoints</a>()</tt>	Resets the counter used to generate unique savepoint ids in this thread.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L373'>_set_autocommit</a>(autocommit)</tt>	Backend-specific implementation to enable or disable autocommit.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L381'>get_autocommit</a>()</tt>	Check the autocommit state.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L388'>set_autocommit</a>(autocommit,force_begin_transaction_with_broken_autocommit)</tt>	Enable or disable autocommit.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L419'>get_rollback</a>()</tt>	Get the "needs rollback" flag -- for *advanced use* only.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L428'>set_rollback</a>(rollback)</tt>	Set or unset the "needs rollback" flag -- for *advanced use* only.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L437'>validate_no_atomic_block</a>()</tt>	Raise an error if an atomic block is active.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L453'>constraint_checks_disabled</a>()</tt>	Context manager that disables foreign key constraint checking.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L465'>disable_constraint_checking</a>()</tt>	Backends can implement as needed to temporarily disable foreign key constraint checking.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L473'>enable_constraint_checking</a>()</tt>	Backends can implement as needed to re-enable foreign key constraint checking.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L480'>check_constraints</a>(table_names)</tt>	Backends can override this method if they can apply constraint checking (e.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L490'>is_usable</a>()</tt>	Tests if the database connection is usable.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L502'>close_if_unusable_or_obsolete</a>()</tt>	Closes the current connection if unrecoverable errors have occurred or if it outlived its maximum age.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L529'>validate_thread_sharing</a>()</tt>	Validates that the connection isn't accessed by another thread than the one which originally created it unless the connection was explicitly.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L547'>prepare_database</a>()</tt>	Hook to do any database check or preparation generally called before migrating a project or an app.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L554'>wrap_database_errors</a>()</tt>	Context manager and decorator that re-throws backend-specific database exceptions using django's common wrappers.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L562'>chunked_cursor</a>()</tt>	Return a cursor that tries to avoid caching in the database if supported by the database otherwise return a regular cursor.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L569'>make_debug_cursor</a>(cursor)</tt>	Creates a cursor that logs all queries in self queries_log.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L575'>make_cursor</a>(cursor)</tt>	Creates a cursor without debug logging.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L581'>temporary_connection</a>()</tt>	Context manager that ensures that a connection is established and if it opened one closes it to avoid leaving a dangling connection.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L599'>_nodb_connection</a>()</tt>	Return an alternative connection to be used when there is no need to access the main database specifically for test db creation/deletion.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L616'>_start_transaction_under_autocommit</a>()</tt>	Only required when autocommits_when_autocommit_is_off = true.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L625'>schema_editor</a>()</tt>	Returns a new instance of this backend's schemaeditor.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseWrapper <a href=' /db/backends/base/base.py#L653'>copy</a>(alias,allow_thread_sharing)</tt>	Return a copy of this connection.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L23'>_nodb_connection</a>()</tt>	Used to be defined here now moved to databasewrapper.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L30'>create_test_db</a>(verbosity,autoclobber,serialize,keepdb)</tt>	Creates a test database prompting the user for confirmation if the database already exists.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L86'>set_as_test_mirror</a>(primary_settings_dict)</tt>	Set this database up to be used in testing as a mirror of a primary database.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L93'>serialize_db_to_string</a>()</tt>	Serializes all data in the database into a json string.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L124'>deserialize_db_from_string</a>(data)</tt>	Reloads the database with data from a string generated by the serialize_db_to_string method.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L133'>_get_database_display_str</a>(verbosity,database_name)</tt>	Return display string for a database for use in various actions.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L142'>_get_test_db_name</a>()</tt>	Internal implementation - returns the name of the test db that will be created.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L153'>_create_test_db</a>(verbosity,autoclobber,keepdb)</tt>	Internal implementation - creates the test db tables.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L201'>clone_test_db</a>(number,verbosity,autoclobber,keepdb)</tt>	Clone a test database.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L220'>get_test_db_clone_settings</a>(number)</tt>	Return a modified connection settings dict for the n-th clone of a db.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L232'>_clone_test_db</a>(number,verbosity,keepdb)</tt>	Internal implementation - duplicate the test db tables.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L240'>destroy_test_db</a>(old_database_name,verbosity,keepdb,number)</tt>	Destroy a test database prompting the user for confirmation if the database already exists.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L270'>_destroy_test_db</a>(test_database_name,verbosity)</tt>	Internal implementation - remove the test db tables.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L282'>sql_table_creation_suffix</a>()</tt>	Sql to append to the end of the test table creation statements.
<tt style='background-color:#E8E8E8;'> db.backends.base.BaseDatabaseCreation <a href=' /db/backends/base/creation.py#L288'>test_db_signature</a>()</tt>	Returns a tuple with elements of self connection settings_dict (a.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseFeatures <a href=' /db/backends/mysql/features.py#L36'>_mysql_storage_engine</a>()</tt>	Internal method used in django tests don't rely on this from your code.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseFeatures <a href=' /db/backends/mysql/features.py#L44'>can_introspect_foreign_keys</a>()</tt>	Confirm support for introspected foreign keys.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseFeatures <a href=' /db/backends/mysql/features.py#L72'>supports_transactions</a>()</tt>	All storage engines except myisam support transactions.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseSchemaEditor <a href=' /db/backends/mysql/schema.py#L32'>skip_default</a>(field)</tt>	Mysql doesn't accept default values for some data types and implicitly treats these columns as nullable.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseSchemaEditor <a href=' /db/backends/mysql/schema.py#L74'>_delete_composed_index</a>(model,fields)</tt>	Mysql can remove an implicit fk index on a field when that field is covered by another index like a unique_together.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseSchemaEditor <a href=' /db/backends/mysql/schema.py#L90'>_set_field_new_type_null_status</a>(field,new_type)</tt>	Keep the null property of the old field if it has changed it will be.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseOperations <a href=' /db/backends/mysql/operations.py#L105'>force_no_ordering</a>()</tt>	"order by null" prevents mysql from implicitly ordering by grouped columns.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseIntrospection <a href=' /db/backends/mysql/introspection.py#L52'>get_table_list</a>(cursor)</tt>	Returns a list of table and view names in the current database.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseIntrospection <a href=' /db/backends/mysql/introspection.py#L60'>get_table_description</a>(cursor,table_name)</tt>	Returns a description of the table with the db-api cursor description interface ".
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseIntrospection <a href=' /db/backends/mysql/introspection.py#L100'>get_relations</a>(cursor,table_name)</tt>	Returns a dictionary of {field_name (field_name_other_table other_table)} representing all relationships to the given table.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseIntrospection <a href=' /db/backends/mysql/introspection.py#L111'>get_key_columns</a>(cursor,table_name)</tt>	Returns a list of (column_name referenced_table_name referenced_column_name) for all key columns in given table.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseIntrospection <a href=' /db/backends/mysql/introspection.py#L154'>get_storage_engine</a>(cursor,table_name)</tt>	Retrieves the storage engine for a given table returns the default.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseIntrospection <a href=' /db/backends/mysql/introspection.py#L168'>get_constraints</a>(cursor,table_name)</tt>	Retrieves any constraints or keys unique pk fk check index across one or more columns.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseWrapper <a href=' /db/backends/mysql/base.py#L309'>disable_constraint_checking</a>()</tt>	Disables foreign key checks primarily for use in adding rows with forward references always returns true.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseWrapper <a href=' /db/backends/mysql/base.py#L317'>enable_constraint_checking</a>()</tt>	Re-enable foreign key checks after they have been disabled.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseWrapper <a href=' /db/backends/mysql/base.py#L329'>check_constraints</a>(table_names)</tt>	Checks each table name in table_names for rows with invalid foreign key references.
<tt style='background-color:#E8E8E8;'> db.backends.mysql.DatabaseValidation <a href=' /db/backends/mysql/validation.py#L29'>check_field</a>(field)</tt>	Mysql has the following field length restriction no character varchar fields can have a length exceeding 255.
<tt style='background-color:#E8E8E8;'> db.models.BaseExpression <a href=' /db/models/expressions.py#L156'>as_sql</a>(compiler,connection)</tt>	Responsible for returning a (sql [params]) tuple to be included in the current query.
<tt style='background-color:#E8E8E8;'> db.models.BaseExpression <a href=' /db/models/expressions.py#L198'>resolve_expression</a>(query,allow_joins,reuse,summarize)</tt>	Provides the chance to do any preprocessing or validation before being added to the query.
<tt style='background-color:#E8E8E8;'> db.models.BaseExpression <a href=' /db/models/expressions.py#L221'>_prepare</a>(field)</tt>	Hook used by lookup get_prep_lookup() to do custom preparation.
<tt style='background-color:#E8E8E8;'> db.models.BaseExpression <a href=' /db/models/expressions.py#L231'>output_field</a>()</tt>	Returns the output type of this expressions.
<tt style='background-color:#E8E8E8;'> db.models.BaseExpression <a href=' /db/models/expressions.py#L240'>_output_field_or_none</a>()</tt>	Returns the output field of this expression or none if no output type can be resolved.
<tt style='background-color:#E8E8E8;'> db.models.BaseExpression <a href=' /db/models/expressions.py#L252'>_resolve_output_field</a>()</tt>	Attempts to infer the output type of the expression if the output.
<tt style='background-color:#E8E8E8;'> db.models.BaseExpression <a href=' /db/models/expressions.py#L280'>convert_value</a>(value,expression,connection,context)</tt>	Expressions provide their own converters because users have the option of manually specifying the output_field which may be a different type.
<tt style='background-color:#E8E8E8;'> db.models.BaseExpression <a href=' /db/models/expressions.py#L323'>get_source_fields</a>()</tt>	Returns the underlying field types used by this aggregate.
<tt style='background-color:#E8E8E8;'> db.models.BaseExpression <a href=' /db/models/expressions.py#L339'>flatten</a>()</tt>	Recursively yield this expression and all subexpressions in depth-first order.
<tt style='background-color:#E8E8E8;'> db.models.Value <a href=' /db/models/expressions.py#L593'>__init__</a>(value,output_field)</tt>	Arguments * value the value this expression represents.
<tt style='background-color:#E8E8E8;'> db.models. <a href=' /db/models/base.py#L55'>subclass_exception</a>(name,parents,module,attached_to)</tt>	Create exception subclass used by modelbase below.
<tt style='background-color:#E8E8E8;'> db.models.ModelBase <a href=' /db/models/base.py#L334'>_prepare</a>(cls)</tt>	Creates some methods once self _meta has been populated.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L650'>get_deferred_fields</a>()</tt>	Returns a set containing names of deferred fields for this instance.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L659'>refresh_from_db</a>(using,fields)</tt>	Reloads field values from the database.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L711'>serializable_value</a>(field_name)</tt>	Returns the value of the field name for this instance if the field is.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L728'>save</a>(force_insert,force_update,using,update_fields)</tt>	Saves the current instance override this in a subclass if you want to.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L809'>save_base</a>(raw,force_insert,force_update,using)</tt>	Handles the parts of saving which should be done only once per save yet need to be done in raw saves too.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L851'>_save_parents</a>(cls,using,update_fields)</tt>	Saves all the parents of cls using values from self.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L875'>_save_table</a>(raw,cls,force_insert,force_update)</tt>	Does the heavy-lifting involved in saving updates or inserts the data.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L927'>_do_update</a>(base_qs,using,pk_val,values)</tt>	This method will try to update the model if the model was updated (in.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L955'>_do_insert</a>(manager,using,fields,update_pk)</tt>	Do an insert if update_pk is defined then this method should return.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1016'>clean</a>()</tt>	Hook for doing any extra model-wide validation after clean() has been called on every field by self.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1025'>validate_unique</a>(exclude)</tt>	Checks unique constraints on the model and raises validationerror if any failed.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1041'>_get_unique_checks</a>(exclude)</tt>	Gather a list of checks to perform since validate_unique could be.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1214'>full_clean</a>(exclude,validate_unique)</tt>	Calls clean_fields clean and validate_unique on the model and raises a validationerror for any errors that occurred.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1250'>clean_fields</a>(exclude)</tt>	Cleans all fields and raises a validationerror containing a dict of all validation errors if any occur.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1301'>_check_swappable</a>(cls)</tt>	Check if the swapped model exists.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1342'>_check_managers</a>(cls)</tt>	Perform all manager checks.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1351'>_check_fields</a>(cls)</tt>	Perform all field checks.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1362'>_check_m2m_through_same_relationship</a>(cls)</tt>	Check if no relationship model is used by more than one m2m field.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1393'>_check_id_field</a>(cls)</tt>	Check if id field is a primary key.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1517'>_check_index_together</a>(cls)</tt>	Check the value of "index_together" option.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1544'>_check_unique_together</a>(cls)</tt>	Check the value of "unique_together" option.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1619'>_check_ordering</a>(cls)</tt>	Check "ordering" option -- is it a list of strings and do all fields.
<tt style='background-color:#E8E8E8;'> db.models.Model <a href=' /db/models/base.py#L1684'>_check_long_column_names</a>(cls)</tt>	Check that any auto-generated column names are shorter than the limits for each database in which the model will be created.
<tt style='background-color:#E8E8E8;'> db.models. <a href=' /db/models/base.py#L1800'>model_unpickle</a>(model_id)</tt>	Used to unpickle model subclasses with deferred fields.
<tt style='background-color:#E8E8E8;'> db.models.Index <a href=' /db/models/indexes.py#L80'>clone</a>()</tt>	Create a copy of this index.
<tt style='background-color:#E8E8E8;'> db.models.Index <a href=' /db/models/indexes.py#L85'>_hash_generator</a>()</tt>	Generate a 32-bit digest of a set of arguments that can be used to shorten identifying names.
<tt style='background-color:#E8E8E8;'> db.models.Index <a href=' /db/models/indexes.py#L96'>set_name_with_model</a>(model)</tt>	Generate a unique name for the index.
<tt style='background-color:#E8E8E8;'> db.models. <a href=' /db/models/options.py#L50'>normalize_together</a>(option_together)</tt>	Option_together can be either a tuple of tuples or a single tuple of two strings.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L302'>setup_proxy</a>(target)</tt>	Does the internal setup so that the current model is a proxy for "target".
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L317'>can_migrate</a>(connection)</tt>	Return true if the model can/should be migrated on the connection.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L333'>verbose_name_raw</a>()</tt>	There are a few places where the untranslated verbose name is needed (so that we get the same value regardless of currently active.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L343'>swapped</a>()</tt>	Has this model been swapped out for another? if so return the model name of the replacement otherwise return none.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L467'>fields</a>()</tt>	Returns a list of all forward fields on the model and its parents excluding manytomanyfields.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L501'>concrete_fields</a>()</tt>	Returns a list of all concrete fields on the model and its parents.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L522'>local_concrete_fields</a>()</tt>	Returns a list of all concrete fields on the model.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L535'>many_to_many</a>()</tt>	Returns a list of all many to many fields on the model and its parents.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L549'>related_objects</a>()</tt>	Returns all related objects pointing to the current model the related.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L596'>get_field</a>(field_name)</tt>	Return a field instance given the name of a forward or reverse field.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L621'>get_base_chain</a>(model)</tt>	Return a list of parent classes leading to model ordered from closest to most distant ancestor.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L638'>get_parent_list</a>()</tt>	Returns all the ancestors of this model as a list ordered by mro.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L649'>get_ancestor_link</a>(ancestor)</tt>	Returns the field on the current model which points to the given "ancestor".
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L669'>get_path_to_parent</a>(parent)</tt>	Return a list of pathinfos containing the path from the current model to the parent model or an empty list if parent is not a.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L691'>get_path_from_parent</a>(parent)</tt>	Return a list of pathinfos containing the path from the parent model to the current model or an empty list if parent is not a.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L713'>_populate_directed_relation_graph</a>()</tt>	This method is used by each model to find its reverse objects as this.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L766'>get_fields</a>(include_parents,include_hidden)</tt>	Returns a list of fields associated to the model by default includes.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L780'>_get_fields</a>(forward,reverse,include_parents,include_hidden)</tt>	Internal helper function to return fields of the model.
<tt style='background-color:#E8E8E8;'> db.models.Options <a href=' /db/models/options.py#L882'>_property_names</a>()</tt>	Return a set of the names of the properties defined on the model.
<tt style='background-color:#E8E8E8;'> db.models.DeferredAttribute <a href=' /db/models/query_utils.py#L103'>__get__</a>(instance,cls)</tt>	Retrieves and caches the value from the datastore on the first lookup.
<tt style='background-color:#E8E8E8;'> db.models.DeferredAttribute <a href=' /db/models/query_utils.py#L121'>_check_parent_chain</a>(instance,name)</tt>	Check if the field value can be fetched from a parent field already loaded in the instance.
<tt style='background-color:#E8E8E8;'> db.models.RegisterLookupMixin <a href=' /db/models/query_utils.py#L165'>merge_dicts</a>(dicts)</tt>	Merge dicts in reverse to preference the order of the original list e g.
<tt style='background-color:#E8E8E8;'> db.models.RegisterLookupMixin <a href=' /db/models/query_utils.py#L191'>_unregister_lookup</a>(cls,lookup,lookup_name)</tt>	Remove given lookup from cls lookups for use in tests only as it's.
<tt style='background-color:#E8E8E8;'> db.models. <a href=' /db/models/query_utils.py#L202'>select_related_descend</a>(field,restricted,requested,load_fields)</tt>	Returns true if this field should be used to descend deeper for select_related() purposes.
<tt style='background-color:#E8E8E8;'> db.models. <a href=' /db/models/query_utils.py#L238'>refs_expression</a>(lookup_parts,annotations)</tt>	A helper method to check if the lookup_parts contains references to the given annotations set.
<tt style='background-color:#E8E8E8;'> db.models. <a href=' /db/models/query_utils.py#L252'>check_rel_lookup_compatibility</a>(model,target_opts,field)</tt>	Check that self model is compatible with target_opts compatibility.
<tt style='background-color:#E8E8E8;'> db.models.BaseManager <a href=' /db/models/manager.py#L37'>__str__</a>()</tt>	Return "app_label model_label manager_name".
<tt style='background-color:#E8E8E8;'> db.models.BaseManager <a href=' /db/models/manager.py#L41'>deconstruct</a>()</tt>	Returns a 5-tuple of the form (as_manager true manager_class queryset_class args kwargs).
<tt style='background-color:#E8E8E8;'> db.models.BaseManager <a href=' /db/models/manager.py#L124'>_set_creation_counter</a>()</tt>	Sets the creation counter value for this instance and increments the class-level copy.
<tt style='background-color:#E8E8E8;'> db.models.BaseManager <a href=' /db/models/manager.py#L146'>get_queryset</a>()</tt>	Returns a new queryset object subclasses can override this method to.
<tt style='background-color:#E8E8E8;'> db.models.Collector <a href=' /db/models/deletion.py#L81'>add</a>(objs,source,nullable,reverse_dependency)</tt>	Adds 'objs' to the collection of objects to be deleted if the call is.
<tt style='background-color:#E8E8E8;'> db.models.Collector <a href=' /db/models/deletion.py#L108'>add_field_update</a>(field,value,objs)</tt>	Schedules a field update 'objs' must be a homogeneous iterable.
<tt style='background-color:#E8E8E8;'> db.models.Collector <a href=' /db/models/deletion.py#L120'>can_fast_delete</a>(objs,from_field)</tt>	Determines if the objects in the given queryset-like can be fast-deleted.
<tt style='background-color:#E8E8E8;'> db.models.Collector <a href=' /db/models/deletion.py#L156'>get_del_batches</a>(objs,field)</tt>	Returns the objs in suitably sized batches for the used connection.
<tt style='background-color:#E8E8E8;'> db.models.Collector <a href=' /db/models/deletion.py#L168'>collect</a>(objs,source,nullable,collect_related)</tt>	Adds 'objs' to the collection of objects to be deleted as well as all parent instances.
<tt style='background-color:#E8E8E8;'> db.models.Collector <a href=' /db/models/deletion.py#L230'>related_objects</a>(related,objs)</tt>	Gets a queryset of objects related to objs via the relation related.
<tt style='background-color:#E8E8E8;'> db.models. <a href=' /db/models/__init__.py#L32'>permalink</a>(func)</tt>	Decorator that calls urls reverse() to return a url using parameters.
<tt style='background-color:#E8E8E8;'> db.models. <a href=' /db/models/utils.py#L4'>make_model_tuple</a>(model)</tt>	Takes a model or a string of the form "app_label modelname" and returns a.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L188'>__deepcopy__</a>(memo)</tt>	Deep copy of a queryset doesn't populate the cache.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L235'>__iter__</a>()</tt>	The queryset iterator protocol uses three nested iterators in the default case.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L260'>__getitem__</a>(k)</tt>	Retrieves an item or slice from the set of results.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L317'>iterator</a>()</tt>	An iterator over the results from applying this queryset to the database.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L324'>aggregate</a>()</tt>	Returns a dictionary containing the calculations aggregation over the current queryset.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L352'>count</a>()</tt>	Performs a select count() and returns the number of records as an integer.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L365'>get</a>()</tt>	Performs the query and returns a single object matching the given keyword arguments.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L386'>create</a>()</tt>	Creates a new object with the given kwargs saving it to the database and returning the created object.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L401'>bulk_create</a>(objs,batch_size)</tt>	Inserts each of the instances into the database this does *not* call.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L452'>get_or_create</a>(defaults)</tt>	Looks up an object with the given kwargs creating one if necessary.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L467'>update_or_create</a>(defaults)</tt>	Looks up an object with the given kwargs updating one with defaults if it exists otherwise creates a new one.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L489'>_create_object_from_params</a>(lookup,params)</tt>	Tries to create an object using passed params.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L507'>_extract_model_params</a>(defaults)</tt>	Prepares lookup kwargs that are valid model attributes params for creating a model instance based on given kwargs for use by.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L535'>_earliest_or_latest</a>(field_name,direction)</tt>	Returns the latest object according to the model's 'get_latest_by' option or optional given field_name.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L557'>first</a>()</tt>	Returns the first object of a query returns none if no match is found.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L566'>last</a>()</tt>	Returns the last object of a query returns none if no match is found.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L575'>in_bulk</a>(id_list)</tt>	Returns a dictionary mapping each of the given ids to the object with that id.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L590'>delete</a>()</tt>	Deletes the records in the current queryset.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L623'>_raw_delete</a>(using)</tt>	Deletes objects found from the given queryset in single direct sql query.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L631'>update</a>()</tt>	Updates all elements in the current queryset setting all the given fields to the appropriate values.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L649'>_update</a>(values)</tt>	A version of update that accepts field objects instead of field names.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L720'>dates</a>(field_name,kind,order)</tt>	Returns a list of date objects representing all available dates for the given field_name scoped to 'kind'.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L736'>datetimes</a>(field_name,kind,order,tzinfo)</tt>	Returns a list of datetime objects representing all available datetimes for the given field_name scoped to 'kind'.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L757'>none</a>()</tt>	Returns an empty queryset.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L769'>all</a>()</tt>	Returns a new queryset that is a copy of the current one this allows a.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L776'>filter</a>()</tt>	Returns a new queryset instance with the args anded to the existing set.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L783'>exclude</a>()</tt>	Returns a new queryset instance with not args anded to the existing set.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L802'>complex_filter</a>(filter_obj)</tt>	Returns a new queryset instance with filter_obj added to the filters.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L846'>select_for_update</a>(nowait,skip_locked)</tt>	Returns a new queryset instance that will select objects with a for update lock.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L860'>select_related</a>()</tt>	Returns a new queryset instance that will select related objects.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L882'>prefetch_related</a>()</tt>	Returns a new queryset instance that will prefetch the specified many-to-one and many-to-many related objects when the queryset is.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L899'>annotate</a>()</tt>	Return a query set in which the returned objects have been annotated with extra data or aggregations.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L941'>order_by</a>()</tt>	Returns a new queryset instance with the ordering changed.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L952'>distinct</a>()</tt>	Returns a new queryset instance that will select only distinct results.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L962'>extra</a>(select,where,params,tables)</tt>	Adds extra sql fragments to the query.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L973'>reverse</a>()</tt>	Reverses the ordering of the queryset.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L981'>defer</a>()</tt>	Defers the loading of data for certain fields until they are accessed.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L998'>only</a>()</tt>	Essentially the opposite of defer only the fields passed into this.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L1014'>using</a>(alias)</tt>	Selects which database this queryset should execute its query against.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L1026'>ordered</a>()</tt>	Returns true if the queryset is ordered -- i e has an order_by().
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L1039'>db</a>()</tt>	Return the database that will be used if this query is executed now.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L1050'>_insert</a>(objs,fields,return_id,raw)</tt>	Inserts a new record for the given model this provides an interface to.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L1064'>_batched_insert</a>(objs,fields,batch_size)</tt>	A little helper method for bulk_insert to insert the bulk one batch at a time.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L1106'>_next_is_sticky</a>()</tt>	Indicates that the next filter call and the one following that should be treated as a single filter.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L1120'>_merge_sanity_check</a>(other)</tt>	Checks that we are merging two comparable queryset classes.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L1133'>_merge_known_related_objects</a>(other)</tt>	Keep track of all known related objects from either queryset instance.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L1152'>_add_hints</a>()</tt>	Update hinting information for later use by routers.
<tt style='background-color:#E8E8E8;'> db.models.QuerySet <a href=' /db/models/query.py#L1160'>_has_filters</a>()</tt>	Checks if this queryset has any filtering going on note that this.
<tt style='background-color:#E8E8E8;'> db.models.RawQuerySet <a href=' /db/models/query.py#L1199'>resolve_model_init_order</a>()</tt>	Resolve the init field names and value positions.
<tt style='background-color:#E8E8E8;'> db.models.RawQuerySet <a href=' /db/models/query.py#L1256'>db</a>()</tt>	Return the database that will be used if this query is executed now.
<tt style='background-color:#E8E8E8;'> db.models.RawQuerySet <a href=' /db/models/query.py#L1261'>using</a>(alias)</tt>	Selects which database this raw queryset should execute its query against.
<tt style='background-color:#E8E8E8;'> db.models.RawQuerySet <a href=' /db/models/query.py#L1272'>columns</a>()</tt>	A list of model field names in the order they'll appear in the query results.
<tt style='background-color:#E8E8E8;'> db.models.RawQuerySet <a href=' /db/models/query.py#L1289'>model_fields</a>()</tt>	A dict mapping column names to model field names.
<tt style='background-color:#E8E8E8;'> db.models. <a href=' /db/models/query.py#L1353'>normalize_prefetch_lookups</a>(lookups,prefix)</tt>	Helper function that normalize lookups into prefetch objects.
<tt style='background-color:#E8E8E8;'> db.models. <a href=' /db/models/query.py#L1367'>prefetch_related_objects</a>(model_instances)</tt>	Populate prefetched object caches for a list of model instances based on the lookups/prefetch instances given.
<tt style='background-color:#E8E8E8;'> db.models. <a href=' /db/models/query.py#L1490'>get_prefetcher</a>(instance,through_attr,to_attr)</tt>	For the attribute 'through_attr' on the given instance finds an object that has a get_prefetch_queryset().
<tt style='background-color:#E8E8E8;'> db.models. <a href=' /db/models/query.py#L1537'>prefetch_one_level</a>(instances,prefetcher,lookup,level)</tt>	Helper function for prefetch_related_objects runs prefetches on all instances using the prefetcher object.
<tt style='background-color:#E8E8E8;'> db.models.fields.FileField <a href=' /db/models/fields/files.py#L284'>get_prep_value</a>(value)</tt>	Returns field's value prepared for saving into a database.
<tt style='background-color:#E8E8E8;'> db.models.fields.FileField <a href=' /db/models/fields/files.py#L292'>pre_save</a>(model_instance,add)</tt>	Returns field's value just before saving.
<tt style='background-color:#E8E8E8;'> db.models.fields.FileField <a href=' /db/models/fields/files.py#L320'>generate_filename</a>(instance,filename)</tt>	Apply if callable or prepend if a string upload_to to the filename then delegate further processing of the name to the storage backend.
<tt style='background-color:#E8E8E8;'> db.models.fields.ImageField <a href=' /db/models/fields/files.py#L437'>update_dimension_fields</a>(instance,force)</tt>	Updates field's width and height fields if defined.
<tt style='background-color:#E8E8E8;'> db.models.fields.ForwardManyToOneDescriptor <a href=' /db/models/fields/related_descriptors.py#L161'>__get__</a>(instance,cls)</tt>	Get the related instance through the forward relation.
<tt style='background-color:#E8E8E8;'> db.models.fields.ForwardManyToOneDescriptor <a href=' /db/models/fields/related_descriptors.py#L199'>__set__</a>(instance,value)</tt>	Set the related instance through the forward relation.
<tt style='background-color:#E8E8E8;'> db.models.fields.ReverseOneToOneDescriptor <a href=' /db/models/fields/related_descriptors.py#L363'>__get__</a>(instance,cls)</tt>	Get the related instance through the reverse relation.
<tt style='background-color:#E8E8E8;'> db.models.fields.ReverseOneToOneDescriptor <a href=' /db/models/fields/related_descriptors.py#L410'>__set__</a>(instance,value)</tt>	Set the related instance through the reverse relation.
<tt style='background-color:#E8E8E8;'> db.models.fields.ReverseManyToOneDescriptor <a href=' /db/models/fields/related_descriptors.py#L497'>__get__</a>(instance,cls)</tt>	Get the related objects through the reverse relation.
<tt style='background-color:#E8E8E8;'> db.models.fields.ReverseManyToOneDescriptor <a href=' /db/models/fields/related_descriptors.py#L518'>__set__</a>(instance,value)</tt>	Set the related objects through the reverse relation.
<tt style='background-color:#E8E8E8;'> db.models.fields. <a href=' /db/models/fields/related_descriptors.py#L537'>create_reverse_many_to_one_manager</a>(superclass,rel)</tt>	Create a manager for the reverse side of a many-to-one relation.
<tt style='background-color:#E8E8E8;'> db.models.fields. <a href=' /db/models/fields/related_descriptors.py#L781'>create_forward_many_to_many_manager</a>(superclass,rel,reverse)</tt>	Create a manager for the either side of a many-to-many relation.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L192'>__str__</a>()</tt>	Return "app_label model_label field_name" for fields attached to.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L203'>__repr__</a>()</tt>	Displays the module class and name of the field.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L223'>_check_field_name</a>()</tt>	Check if field name is valid i e 1) does not end with an.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L367'>select_format</a>(compiler,sql,params)</tt>	Custom format for select clauses for example gis columns need to be.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L375'>deconstruct</a>()</tt>	Returns enough information to recreate the field as a 4-tuple * the name of the field on the model if contribute_to_class has been run.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L463'>clone</a>()</tt>	Uses deconstruct() to clone a new copy of this field.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L505'>__reduce__</a>()</tt>	Pickling should return the model _meta fields instance of the field.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L521'>get_pk_value_on_save</a>(instance)</tt>	Hook to generate new pk values on save this method is called when.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L532'>to_python</a>(value)</tt>	Converts the input value into the expected python data type raising django.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L540'>validators</a>()</tt>	Some validators can't be created at field initialization time.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L564'>validate</a>(value,model_instance)</tt>	Validates value and throws validationerror subclasses should override.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L595'>clean</a>(value,model_instance)</tt>	Convert the value's type and run validation validation errors.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L606'>db_check</a>(connection)</tt>	Return the database column check constraint for this field for the provided connection.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L618'>db_type</a>(connection)</tt>	Return the database column data type for this field for the provided connection.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L644'>rel_db_type</a>(connection)</tt>	Return the data type that a related field pointing to this field should use.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L652'>db_parameters</a>(connection)</tt>	Extension of db_type(), providing a range of different return values type checks.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L685'>contribute_to_class</a>(cls,name,private_only,virtual_only)</tt>	Register the field with the model class it belongs to.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L716'>get_filter_kwargs_for_object</a>(obj)</tt>	Return a dict that when passed as kwargs to self model filter(), would.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L737'>pre_save</a>(model_instance,add)</tt>	Returns field's value just before saving.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L743'>get_prep_value</a>(value)</tt>	Perform preliminary non-db specific value checks and conversions.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L751'>get_db_prep_value</a>(value,connection,prepared)</tt>	Returns field's value prepared for interacting with the database backend.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L761'>get_db_prep_save</a>(value,connection)</tt>	Returns field's value prepared for saving into a database.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L768'>has_default</a>()</tt>	Returns a boolean of whether this field has a default value.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L774'>get_default</a>()</tt>	Returns the default value for this field.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L791'>get_choices</a>(include_blank,blank_choice,limit_choices_to)</tt>	Returns choices with a default blank choices included for use as selectfield choices for this field.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L830'>value_to_string</a>(obj)</tt>	Returns a string value of this field from the passed obj.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L837'>_get_flatchoices</a>()</tt>	Flattened version of choices tuple.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L851'>formfield</a>(form_class,choices_form_class)</tt>	Returns a django forms field instance for this database field.
<tt style='background-color:#E8E8E8;'> db.models.fields.Field <a href=' /db/models/fields/__init__.py#L889'>value_from_object</a>(obj)</tt>	Returns the value of this field in the given model instance.
<tt style='background-color:#E8E8E8;'> db.models.fields.DateField <a href=' /db/models/fields/__init__.py#L1183'>_check_fix_default_value</a>()</tt>	Adds a warning to the checks framework stating that using an actual date or datetime value is probably wrong it's only being evaluated on.
<tt style='background-color:#E8E8E8;'> db.models.fields.DateTimeField <a href=' /db/models/fields/__init__.py#L1325'>_check_fix_default_value</a>()</tt>	Adds a warning to the checks framework stating that using an actual date or datetime value is probably wrong it's only being evaluated on.
<tt style='background-color:#E8E8E8;'> db.models.fields.DecimalField <a href=' /db/models/fields/__init__.py#L1585'>format_number</a>(value)</tt>	Formats a number into a string with the requisite number of digits and decimal places.
<tt style='background-color:#E8E8E8;'> db.models.fields.PositiveIntegerRelDbTypeMixin <a href=' /db/models/fields/__init__.py#L2051'>rel_db_type</a>(connection)</tt>	Return the data type that a related field pointing to this field should use.
<tt style='background-color:#E8E8E8;'> db.models.fields.TimeField <a href=' /db/models/fields/__init__.py#L2174'>_check_fix_default_value</a>()</tt>	Adds a warning to the checks framework stating that using an actual time or datetime value is probably wrong it's only being evaluated on.
<tt style='background-color:#E8E8E8;'> db.models.fields.BinaryField <a href=' /db/models/fields/__init__.py#L2349'>value_to_string</a>(obj)</tt>	Binary data is serialized as base64.
<tt style='background-color:#E8E8E8;'> db.models.fields.ForeignObjectRel <a href=' /db/models/fields/reverse_related.py#L79'>target_field</a>()</tt>	When filtering against this relation returns the field on the remote model against which the filtering should happen.
<tt style='background-color:#E8E8E8;'> db.models.fields.ForeignObjectRel <a href=' /db/models/fields/reverse_related.py#L130'>get_choices</a>(include_blank,blank_choice)</tt>	Return choices with a default blank choices included for use as selectfield choices for this field.
<tt style='background-color:#E8E8E8;'> db.models.fields.ForeignObjectRel <a href=' /db/models/fields/reverse_related.py#L142'>is_hidden</a>()</tt>	Should the related object be hidden?.
<tt style='background-color:#E8E8E8;'> db.models.fields.ForeignObjectRel <a href=' /db/models/fields/reverse_related.py#L152'>set_field_name</a>()</tt>	Set the related field's name this is not available until later stages.
<tt style='background-color:#E8E8E8;'> db.models.fields.ManyToOneRel <a href=' /db/models/fields/reverse_related.py#L219'>get_related_field</a>()</tt>	Return the field in the 'to' object to which this relationship is tied.
<tt style='background-color:#E8E8E8;'> db.models.fields.ManyToManyRel <a href=' /db/models/fields/reverse_related.py#L283'>get_related_field</a>()</tt>	Return the field in the 'to' object to which this relationship is tied.
<tt style='background-color:#E8E8E8;'> db.models.fields. <a href=' /db/models/fields/related.py#L42'>resolve_relation</a>(scope_model,relation)</tt>	Transform relation into a model or fully-qualified model string of the form "app_label.
<tt style='background-color:#E8E8E8;'> db.models.fields. <a href=' /db/models/fields/related.py#L67'>lazy_related_operation</a>(function,model)</tt>	Schedule function to be called once model and all related_models have been imported and registered with the app registry.
<tt style='background-color:#E8E8E8;'> db.models.fields.RelatedField <a href=' /db/models/fields/related.py#L218'>_check_clashes</a>()</tt>	Check accessor and reverse query name clashes.
<tt style='background-color:#E8E8E8;'> db.models.fields.RelatedField <a href=' /db/models/fields/related.py#L350'>get_forward_related_filter</a>(obj)</tt>	Return the keyword arguments that when supplied to self.
<tt style='background-color:#E8E8E8;'> db.models.fields.RelatedField <a href=' /db/models/fields/related.py#L363'>get_reverse_related_filter</a>(obj)</tt>	Complement to get_forward_related_filter() return the keyword.
<tt style='background-color:#E8E8E8;'> db.models.fields.RelatedField <a href=' /db/models/fields/related.py#L382'>swappable_setting</a>()</tt>	Get the setting that this is powered from for swapping or none if it's not swapped in / marked with swappable=false.
<tt style='background-color:#E8E8E8;'> db.models.fields.RelatedField <a href=' /db/models/fields/related.py#L410'>get_limit_choices_to</a>()</tt>	Return limit_choices_to for this model field.
<tt style='background-color:#E8E8E8;'> db.models.fields.RelatedField <a href=' /db/models/fields/related.py#L421'>formfield</a>()</tt>	Pass limit_choices_to to the field being constructed.
<tt style='background-color:#E8E8E8;'> db.models.fields.RelatedField <a href=' /db/models/fields/related.py#L441'>related_query_name</a>()</tt>	Define the name that can be used to identify this related object in a table-spanning query.
<tt style='background-color:#E8E8E8;'> db.models.fields.RelatedField <a href=' /db/models/fields/related.py#L448'>target_field</a>()</tt>	When filtering against this relation returns the field on the remote model against which the filtering should happen.
<tt style='background-color:#E8E8E8;'> db.models.fields.ForeignObject <a href=' /db/models/fields/related.py#L690'>get_extra_descriptor_filter</a>(instance)</tt>	Return an extra filter condition for related object fetching when user does 'instance.
<tt style='background-color:#E8E8E8;'> db.models.fields.ForeignObject <a href=' /db/models/fields/related.py#L705'>get_extra_restriction</a>(where_class,alias,related_alias)</tt>	Return a pair condition used for joining and subquery pushdown the.
<tt style='background-color:#E8E8E8;'> db.models.fields.ForeignObject <a href=' /db/models/fields/related.py#L719'>get_path_info</a>()</tt>	Get path from this field to the related model.
<tt style='background-color:#E8E8E8;'> db.models.fields.ForeignObject <a href=' /db/models/fields/related.py#L727'>get_reverse_path_info</a>()</tt>	Get path from the related model to this field's model.
<tt style='background-color:#E8E8E8;'> db.models.fields.ForeignKey <a href=' /db/models/fields/related.py#L911'>get_reverse_path_info</a>()</tt>	Get path from the related model to this field's model.
<tt style='background-color:#E8E8E8;'> db.models.fields.ForeignKey <a href=' /db/models/fields/related.py#L950'>get_default</a>()</tt>	Here we check if the default value is an object and return the to_field if so.
<tt style='background-color:#E8E8E8;'> db.models.fields.ManyToManyField <a href=' /db/models/fields/related.py#L1520'>_get_path_info</a>(direct)</tt>	Called by both direct and indirect m2m traversal.
<tt style='background-color:#E8E8E8;'> db.models.fields.ManyToManyField <a href=' /db/models/fields/related.py#L1558'>_get_m2m_db_table</a>(opts)</tt>	Function that can be curried to provide the m2m table name for this relation.
<tt style='background-color:#E8E8E8;'> db.models.fields.ManyToManyField <a href=' /db/models/fields/related.py#L1571'>_get_m2m_attr</a>(related,attr)</tt>	Function that can be curried to provide the source accessor or db column name for the m2m table.
<tt style='background-color:#E8E8E8;'> db.models.fields.ManyToManyField <a href=' /db/models/fields/related.py#L1589'>_get_m2m_reverse_attr</a>(related,attr)</tt>	Function that can be curried to provide the related accessor or db column name for the m2m table.
<tt style='background-color:#E8E8E8;'> db.models.fields.ManyToManyField <a href=' /db/models/fields/related.py#L1677'>value_from_object</a>(obj)</tt>	Return the value of this field in the given model instance.
<tt style='background-color:#E8E8E8;'> db.models.functions.Greatest <a href=' /db/models/functions/base.py#L138'>as_sqlite</a>(compiler,connection)</tt>	Use the max function on sqlite.
<tt style='background-color:#E8E8E8;'> db.models.functions.Least <a href=' /db/models/functions/base.py#L158'>as_sqlite</a>(compiler,connection)</tt>	Use the min function on sqlite.
<tt style='background-color:#E8E8E8;'> db.models.functions.Substr <a href=' /db/models/functions/base.py#L199'>__init__</a>(expression,pos,length)</tt>	Expression the name of a field or an expression returning a string.
<tt style='background-color:#E8E8E8;'> db.models.sql.Join <a href=' /db/models/sql/datastructures.py#L60'>as_sql</a>(compiler,connection)</tt>	Generates the full left outer join sometable on sometable.
<tt style='background-color:#E8E8E8;'> db.models.sql.DeleteQuery <a href=' /db/models/sql/subqueries.py#L31'>delete_batch</a>(pk_list,using)</tt>	Set up and execute delete queries for all the objects in pk_list.
<tt style='background-color:#E8E8E8;'> db.models.sql.DeleteQuery <a href=' /db/models/sql/subqueries.py#L48'>delete_qs</a>(query,using)</tt>	Delete the queryset in one sql query if possible for simple queries.
<tt style='background-color:#E8E8E8;'> db.models.sql.UpdateQuery <a href=' /db/models/sql/subqueries.py#L95'>_setup_query</a>()</tt>	Runs on initialization and after cloning any attributes that would.
<tt style='background-color:#E8E8E8;'> db.models.sql.UpdateQuery <a href=' /db/models/sql/subqueries.py#L116'>add_update_values</a>(values)</tt>	Convert a dictionary of field name to value mappings into an update query.
<tt style='background-color:#E8E8E8;'> db.models.sql.UpdateQuery <a href=' /db/models/sql/subqueries.py#L138'>add_update_fields</a>(values_seq)</tt>	Append a sequence of field model value triples to the internal list that will be used to generate the update query.
<tt style='background-color:#E8E8E8;'> db.models.sql.UpdateQuery <a href=' /db/models/sql/subqueries.py#L150'>add_related_update</a>(model,field,value)</tt>	Adds name value to an update query for an ancestor model.
<tt style='background-color:#E8E8E8;'> db.models.sql.UpdateQuery <a href=' /db/models/sql/subqueries.py#L158'>get_related_updates</a>()</tt>	Returns a list of query objects one for each update required to an ancestor model.
<tt style='background-color:#E8E8E8;'> db.models.sql.InsertQuery <a href=' /db/models/sql/subqueries.py#L184'>insert_values</a>(fields,objs,raw)</tt>	Set up the insert query from the 'insert_values' dictionary the.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L40'>pre_sql_setup</a>()</tt>	Does any necessary class setup immediately prior to producing sql this.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L53'>get_group_by</a>(select,order_by)</tt>	Returns a list of 2-tuples of form sql params.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L165'>get_select</a>()</tt>	Returns three values - a list of 3-tuples of (expression sql params alias).
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L234'>get_order_by</a>()</tt>	Returns a list of 2-tuples of form (expr (sql params is_ref)) for the order by clause.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L351'>quote_name_unless_alias</a>(name)</tt>	A wrapper around connection ops quote_name that doesn't quote aliases.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L402'>as_sql</a>(with_limits,with_col_aliases)</tt>	Creates the sql for this query returns the sql string and list of.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L515'>get_default_columns</a>(start_alias,opts,from_parent)</tt>	Computes the default columns for selecting every field in the base model.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L560'>get_distinct</a>()</tt>	Returns a quoted list of fields to use in distinct on part of the query.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L583'>find_ordering_name</a>(name,opts,alias,default_order)</tt>	Returns the table alias the name might be ambiguous the alias will not be and column name for ordering by the given 'name' parameter.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L615'>_setup_joins</a>(pieces,opts,alias)</tt>	A helper method for get_order_by and get_distinct.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L630'>get_from_clause</a>()</tt>	Returns a list of strings that are joined together to go after the "from" part of the query as well as a list any extra parameters that.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L664'>get_related_selections</a>(select,opts,root_alias,cur_depth)</tt>	Fill in the information needed for a select_related query the current.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L794'>deferred_to_columns</a>()</tt>	Converts the self deferred_loading data structure to mapping of table.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L823'>results_iter</a>(results)</tt>	Returns an iterator over the results from executing this query.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L837'>has_results</a>()</tt>	Backends e g nosql can override this in order to use optimized.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLCompiler <a href=' /db/models/sql/compiler.py#L847'>execute_sql</a>(result_type,chunked_fetch)</tt>	Run the query against the database and returns the result s the.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLInsertCompiler <a href=' /db/models/sql/compiler.py#L940'>field_as_sql</a>(field,val)</tt>	Take a field and a value intended to be saved on that field and return placeholder sql and accompanying params.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLInsertCompiler <a href=' /db/models/sql/compiler.py#L972'>prepare_value</a>(field,value)</tt>	Prepare a value to be used in a query by resolving it if it is an expression and otherwise calling the field's get_db_prep_save().
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLInsertCompiler <a href=' /db/models/sql/compiler.py#L993'>pre_save_val</a>(field,obj)</tt>	Get the given field's value off the given obj pre_save() is used for.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLInsertCompiler <a href=' /db/models/sql/compiler.py#L1002'>assemble_as_sql</a>(fields,value_rows)</tt>	Take a sequence of n fields and a sequence of m rows of values generate placeholder sql and parameters for each field and value and.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLDeleteCompiler <a href=' /db/models/sql/compiler.py#L1113'>as_sql</a>()</tt>	Creates the sql for this query returns the sql string and list of.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLUpdateCompiler <a href=' /db/models/sql/compiler.py#L1129'>as_sql</a>()</tt>	Creates the sql for this query returns the sql string and list of.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLUpdateCompiler <a href=' /db/models/sql/compiler.py#L1184'>execute_sql</a>(result_type)</tt>	Execute the specified update returns the number of rows affected by.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLUpdateCompiler <a href=' /db/models/sql/compiler.py#L1205'>pre_sql_setup</a>()</tt>	If the update depends on results from other tables we need to do some munging of the "where" conditions to match the format required for.
<tt style='background-color:#E8E8E8;'> db.models.sql.SQLAggregateCompiler <a href=' /db/models/sql/compiler.py#L1250'>as_sql</a>()</tt>	Creates the sql for this query returns the sql string and list of.
<tt style='background-color:#E8E8E8;'> db.models.sql. <a href=' /db/models/sql/compiler.py#L1269'>cursor_iter</a>(cursor,sentinel,col_count)</tt>	Yields blocks of rows from a cursor and ensures the cursor is closed when done.
<tt style='background-color:#E8E8E8;'> db.models.sql.WhereNode <a href=' /db/models/sql/where.py#L30'>split_having</a>(negated)</tt>	Returns two possibly none nodes one for those parts of self that should be included in the where clause and one for those parts of.
<tt style='background-color:#E8E8E8;'> db.models.sql.WhereNode <a href=' /db/models/sql/where.py#L63'>as_sql</a>(compiler,connection)</tt>	Returns the sql version of the where clause and the value to be substituted in.
<tt style='background-color:#E8E8E8;'> db.models.sql.WhereNode <a href=' /db/models/sql/where.py#L128'>relabel_aliases</a>(change_map)</tt>	Relabels the alias values of any children 'change_map' is a dictionary.
<tt style='background-color:#E8E8E8;'> db.models.sql.WhereNode <a href=' /db/models/sql/where.py#L140'>clone</a>()</tt>	Creates a clone of the tree must only be called on root nodes (nodes.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L225'>__str__</a>()</tt>	Returns the query as a string of sql with the parameter values substituted in (use sql_with_params() to see the unsubstituted string).
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L236'>sql_with_params</a>()</tt>	Returns the query as an sql string and the parameters that will be substituted into the query.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L258'>get_meta</a>()</tt>	Returns the options instance (the model _meta) from which to start.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L266'>clone</a>(klass,memo)</tt>	Creates a copy of the current instance the 'kwargs' parameter can be.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L399'>get_aggregation</a>(using,added_aggregate_names)</tt>	Returns the dictionary with the values of the existing aggregations.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L492'>get_count</a>(using)</tt>	Performs a count() query using the current filter constraints.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L518'>combine</a>(rhs,connector)</tt>	Merge the 'rhs' query into the current one (with any 'rhs' effects being applied *after* (that is "to the right of") anything in the.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L617'>deferred_to_data</a>(target,callback)</tt>	Converts the self deferred_loading data structure to an alternate data.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L703'>table_alias</a>(table_name,create)</tt>	Returns a table alias for the given table_name and whether this is a new alias or not.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L729'>ref_alias</a>(alias)</tt>	Increases the reference count for this alias.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L733'>unref_alias</a>(alias,amount)</tt>	Decreases the reference count for this alias.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L737'>promote_joins</a>(aliases)</tt>	Promotes recursively the join type of given aliases and its children to an outer join.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L771'>demote_joins</a>(aliases)</tt>	Change join type from louter to inner for all joins in aliases.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L790'>reset_refcounts</a>(to_counts)</tt>	This method will reset reference counts for aliases so that they match.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L799'>change_aliases</a>(change_map)</tt>	Changes the aliases in change_map (which maps old-alias -> new-alias), relabelling any references to them in select columns and the where.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L835'>bump_prefix</a>(outer_query)</tt>	Changes the alias prefix to the next letter in the alphabet in a way that the outer query's aliases and this query's aliases will not.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L882'>get_initial_alias</a>()</tt>	Returns the first alias for this query after increasing its reference count.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L894'>count_active_tables</a>()</tt>	Returns the number of tables in this query with a non-zero reference count.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L902'>join</a>(join,reuse)</tt>	Returns an alias for the join in 'connection', either reusing an existing alias for that join or creating a new one.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L944'>join_parent_model</a>(opts,model,alias,seen)</tt>	Makes sure the given 'model' is joined in the query if 'model' isn't.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L978'>add_annotation</a>(annotation,alias,is_summary)</tt>	Adds a single annotation expression to the query.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1035'>solve_lookup_type</a>(lookup)</tt>	Solve the lookup type from the lookup (eg 'foobar__id__icontains').
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1055'>check_query_object_type</a>(value,opts,field)</tt>	Checks whether the object passed while querying is of the correct type.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1066'>check_related_objects</a>(field,value,opts)</tt>	Checks the type of object passed to query relations.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1091'>build_lookup</a>(lookups,lhs,rhs)</tt>	Tries to extract transforms and lookup from given lhs.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1118'>try_transform</a>(lhs,name,rest_of_lookups)</tt>	Helper method for build_lookup tries to fetch and initialize.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1132'>build_filter</a>(filter_expr,branch_negated,current_negated,can_reuse)</tt>	Builds a wherenode for a single filter clause but doesn't add it to this query.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1247'>add_q</a>(q_object)</tt>	A preprocessor for the internal _add_q() responsible for doing final.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1265'>_add_q</a>(q_object,used_aliases,branch_negated,current_negated)</tt>	Adds a q-object to the current filter.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1294'>names_to_path</a>(names,opts,allow_many,fail_on_missing)</tt>	Walks the list of names and turns them into pathinfo tuples note that.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1399'>setup_joins</a>(names,opts,alias,can_reuse)</tt>	Compute the necessary table joins for the passage through the fields given in 'names'.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1444'>trim_joins</a>(targets,joins,path)</tt>	The 'target' parameter is the final field being joined to 'joins' is the full list of join aliases.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1497'>split_exclude</a>(filter_expr,prefix,can_reuse,names_with_path)</tt>	When doing an exclude against any kind of n-to-many relation we need to use a subquery.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1570'>set_limits</a>(low,high)</tt>	Adjusts the limits on the rows retrieved we use low/high to set these.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1594'>clear_limits</a>()</tt>	Clears any existing limits.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1600'>can_filter</a>()</tt>	Returns true if adding filters to this instance is still possible.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1608'>clear_select_clause</a>()</tt>	Removes all fields from select clause.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1618'>clear_select_fields</a>()</tt>	Clears the list of fields to select (but not extra_select columns).
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1635'>add_distinct_fields</a>()</tt>	Adds and resolves the given fields to the query's "distinct on" clause.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1642'>add_fields</a>(field_names,allow_m2m)</tt>	Adds the given model fields to the select set the field names are.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1671'>add_ordering</a>()</tt>	Adds items from the 'ordering' sequence to the query's "order by" clause.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1696'>clear_ordering</a>(force_empty)</tt>	Removes any ordering settings if 'force_empty' is true there will be.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1706'>set_group_by</a>()</tt>	Expands the group by clause required by the query.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1725'>add_select_related</a>(fields)</tt>	Sets up the select_related data structure so that we only select certain related models (as opposed to all models when.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1741'>add_extra</a>(select,select_params,where,params)</tt>	Adds data to the various extra_* attributes for user-created additions to the query.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1774'>clear_deferred_loading</a>()</tt>	Remove any fields from the deferred loading set.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1780'>add_deferred_loading</a>(field_names)</tt>	Add the given list of model field names to the set of fields to exclude from loading from the database when automatic column selection.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1800'>add_immediate_loading</a>(field_names)</tt>	Add the given list of model field names to the set of fields to retrieve when the sql is executed ("immediate loading" fields).
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1824'>get_loaded_field_names</a>()</tt>	If any fields are marked to be deferred returns a dictionary mapping models to a set of names in those fields that will be loaded.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1843'>get_loaded_field_names_cb</a>(target,model,fields)</tt>	Callback used by get_deferred_field_names().
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1849'>set_annotation_mask</a>(names)</tt>	Set the mask of annotations that will actually be returned by the select.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1861'>set_extra_mask</a>(names)</tt>	Set the mask of extra select items that will be returned by select.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1908'>annotation_select</a>()</tt>	The ordereddict of aggregate columns that are not masked and should be used in the select clause.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L1943'>trim_start</a>(names_with_path)</tt>	Trims joins from the start of the join path the candidates for trim.
<tt style='background-color:#E8E8E8;'> db.models.sql.Query <a href=' /db/models/sql/query.py#L2010'>is_nullable</a>(field)</tt>	A helper to check if the given field should be treated as nullable.
<tt style='background-color:#E8E8E8;'> db.models.sql. <a href=' /db/models/sql/query.py#L2040'>get_order_dir</a>(field,default)</tt>	Returns the field name and direction for an order specification for.
<tt style='background-color:#E8E8E8;'> db.models.sql. <a href=' /db/models/sql/query.py#L2054'>add_to_dict</a>(data,key,value)</tt>	A helper function to add "value" to the set of values for "key", whether or not "key" already exists.
<tt style='background-color:#E8E8E8;'> db.models.sql. <a href=' /db/models/sql/query.py#L2065'>is_reverse_o2o</a>(field)</tt>	A little helper to check if the given field is reverse-o2o the field is.
<tt style='background-color:#E8E8E8;'> db.models.sql.JoinPromoter <a href=' /db/models/sql/query.py#L2094'>add_votes</a>(votes)</tt>	Add single vote per item to self votes parameter can be any.
<tt style='background-color:#E8E8E8;'> db.models.sql.JoinPromoter <a href=' /db/models/sql/query.py#L2101'>update_join_types</a>(query)</tt>	Change join types so that the generated query is as efficient as possible but still correct.
<tt style='background-color:#E8E8E8;'> db.migrations.Migration <a href=' /db/migrations/migration.py#L81'>mutate_state</a>(project_state,preserve)</tt>	Takes a projectstate and returns a new one with the migration's operations applied to it.
<tt style='background-color:#E8E8E8;'> db.migrations.Migration <a href=' /db/migrations/migration.py#L95'>apply</a>(project_state,schema_editor,collect_sql)</tt>	Takes a project_state representing all migrations prior to this one and a schema_editor for a live database and applies the migration.
<tt style='background-color:#E8E8E8;'> db.migrations.Migration <a href=' /db/migrations/migration.py#L132'>unapply</a>(project_state,schema_editor,collect_sql)</tt>	Takes a project_state representing all migrations prior to this one and a schema_editor for a live database and applies the migration.
<tt style='background-color:#E8E8E8;'> db.migrations. <a href=' /db/migrations/migration.py#L194'>swappable_dependency</a>(value)</tt>	Turns a setting value into a dependency.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationLoader <a href=' /db/migrations/loader.py#L54'>migrations_module</a>(cls,app_label)</tt>	Return the path to the migrations module for the specified app_label and a boolean indicating if the module is specified in.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationLoader <a href=' /db/migrations/loader.py#L67'>load_disk</a>()</tt>	Loads the migrations from all installed_apps from disk.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationLoader <a href=' /db/migrations/loader.py#L124'>get_migration</a>(app_label,name_prefix)</tt>	Gets the migration exactly named or raises graph nodenotfounderror.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationLoader <a href=' /db/migrations/loader.py#L128'>get_migration_by_prefix</a>(app_label,name_prefix)</tt>	Returns the migration s which match the given app label and name _prefix_.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationLoader <a href=' /db/migrations/loader.py#L172'>add_internal_dependencies</a>(key,migration)</tt>	Internal dependencies need to be added first to ensure __first__ dependencies find the correct root node.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationLoader <a href=' /db/migrations/loader.py#L196'>build_graph</a>()</tt>	Builds a migration dependency graph using both the disk and database.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationLoader <a href=' /db/migrations/loader.py#L276'>check_consistent_history</a>(connection)</tt>	Raise inconsistentmigrationhistory if any applied migrations have unapplied dependencies.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationLoader <a href=' /db/migrations/loader.py#L302'>detect_conflicts</a>()</tt>	Looks through the loaded graph and detects any conflicts - apps with more than one leaf migration.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationLoader <a href=' /db/migrations/loader.py#L316'>project_state</a>(nodes,at_end)</tt>	Returns a projectstate object representing the most recent state that the migrations we loaded represent.
<tt style='background-color:#E8E8E8;'> db.migrations. <a href=' /db/migrations/state.py#L34'>_get_related_models</a>(m)</tt>	Return all models that have a direct relationship to the given model.
<tt style='background-color:#E8E8E8;'> db.migrations. <a href=' /db/migrations/state.py#L55'>get_related_models_tuples</a>(model)</tt>	Return a list of typical (app_label model_name) tuples for all related models for the given model.
<tt style='background-color:#E8E8E8;'> db.migrations. <a href=' /db/migrations/state.py#L66'>get_related_models_recursive</a>(model)</tt>	Return all models that have a direct or indirect relationship to the given model.
<tt style='background-color:#E8E8E8;'> db.migrations.ProjectState <a href=' /db/migrations/state.py#L201'>clone</a>()</tt>	Returns an exact copy of this projectstate.
<tt style='background-color:#E8E8E8;'> db.migrations.ProjectState <a href=' /db/migrations/state.py#L225'>from_apps</a>(cls,apps)</tt>	Takes in an apps and returns a projectstate matching it.
<tt style='background-color:#E8E8E8;'> db.migrations.StateApps <a href=' /db/migrations/state.py#L335'>clone</a>()</tt>	Return a clone of this registry mainly used by the migration framework.
<tt style='background-color:#E8E8E8;'> db.migrations.ModelState <a href=' /db/migrations/state.py#L418'>from_model</a>(cls,model,exclude_rels)</tt>	Feed me a model get a modelstate representing it out.
<tt style='background-color:#E8E8E8;'> db.migrations.ModelState <a href=' /db/migrations/state.py#L566'>construct_managers</a>()</tt>	Deep-clone the managers using deconstruction.
<tt style='background-color:#E8E8E8;'> db.migrations.ModelState <a href=' /db/migrations/state.py#L580'>clone</a>()</tt>	Returns an exact copy of this modelstate.
<tt style='background-color:#E8E8E8;'> db.migrations.ModelState <a href=' /db/migrations/state.py#L591'>render</a>(apps)</tt>	Creates a model object from our current state into the given apps.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationRecorder <a href=' /db/migrations/recorder.py#L46'>ensure_schema</a>()</tt>	Ensures the table exists and has the correct schema.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationRecorder <a href=' /db/migrations/recorder.py#L61'>applied_migrations</a>()</tt>	Returns a set of app name of applied migrations.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationRecorder <a href=' /db/migrations/recorder.py#L68'>record_applied</a>(app,name)</tt>	Records that a migration was applied.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationRecorder <a href=' /db/migrations/recorder.py#L75'>record_unapplied</a>(app,name)</tt>	Records that a migration was unapplied.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationRecorder <a href=' /db/migrations/recorder.py#L82'>flush</a>()</tt>	Deletes all migration records useful if you're testing migrations.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L41'>changes</a>(graph,trim_to_apps,convert_apps,migration_name)</tt>	Main entry point to produce a list of applicable changes.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L53'>deep_deconstruct</a>(obj)</tt>	Recursive deconstruction for a field and its arguments.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L93'>only_relation_agnostic_fields</a>(fields)</tt>	Return a definition of the fields that ignores field names and what related fields actually relate to.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L108'>_detect_changes</a>(convert_apps,graph)</tt>	Returns a dict of migration plans which will achieve the change from from_state to to_state.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L202'>_prepare_field_lists</a>()</tt>	Prepare field lists and prepare a list of the fields that used through models in the old state so we can make dependencies.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L221'>_generate_through_model_map</a>()</tt>	Through model map generation.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L238'>_build_migration_list</a>(graph)</tt>	We need to chop the lists of operations up into migrations with dependencies on each other.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L329'>_sort_migrations</a>()</tt>	Reorder to make things possible the order we have already isn't bad.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L364'>check_dependency</a>(operation,dependency)</tt>	Returns true if the given operation depends on the given dependency false otherwise.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L435'>swappable_first_key</a>(item)</tt>	Sorting key function that places potential swappable models first in.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L455'>generate_renamed_models</a>()</tt>	Finds any renamed models and generates the operations for them and removes the old entry from the model lists.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L492'>generate_created_models</a>()</tt>	Find all new models both managed and unmanaged and make create operations for them as well as separate operations to create any.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L647'>generate_created_proxies</a>()</tt>	Makes createmodel statements for proxy models.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L681'>generate_deleted_models</a>()</tt>	Find all deleted models managed and unmanaged and make delete operations for them as well as separate operations to delete any.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L774'>generate_deleted_proxies</a>()</tt>	Makes deletemodel statements for proxy models.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L789'>generate_renamed_fields</a>()</tt>	Works out renamed fields.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L822'>generate_added_fields</a>()</tt>	Fields that have been added.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L860'>generate_removed_fields</a>()</tt>	Fields that have been removed.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L883'>generate_altered_fields</a>()</tt>	Fields that have been altered.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L1061'>generate_altered_options</a>()</tt>	Works out if any non-schema-affecting options have changed and.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L1141'>arrange_for_graph</a>(changes,graph,migration_name)</tt>	Takes in a result from changes() and a migrationgraph and fixes the names and dependencies of the changes so they.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L1190'>_trim_to_apps</a>(changes,app_labels)</tt>	Takes changes from arrange_for_graph and set of app labels and returns a modified set of changes which trims out as many migrations.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L1217'>suggest_name</a>(cls,ops)</tt>	Given a set of operations suggests a name for the migration they might represent.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationAutodetector <a href=' /db/migrations/autodetector.py#L1239'>parse_number</a>(cls,name)</tt>	Given a migration name tries to extract a number from the beginning of it.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationExecutor <a href=' /db/migrations/executor.py#L24'>migration_plan</a>(targets,clean_start)</tt>	Given a set of targets returns a list of (migration instance backwards?).
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationExecutor <a href=' /db/migrations/executor.py#L66'>_create_project_state</a>(with_applied_migrations)</tt>	Create a project state including all the applications without migrations and applied migrations if with_applied_migrations=true.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationExecutor <a href=' /db/migrations/executor.py#L84'>migrate</a>(targets,plan,state,fake)</tt>	Migrates the database up to the given targets.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationExecutor <a href=' /db/migrations/executor.py#L125'>_migrate_all_forwards</a>(state,plan,full_plan,fake)</tt>	Take a list of 2-tuples of the form migration instance false and apply them in the order they occur in the full_plan.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationExecutor <a href=' /db/migrations/executor.py#L150'>_migrate_all_backwards</a>(plan,full_plan,fake)</tt>	Take a list of 2-tuples of the form migration instance true and unapply them in reverse order they occur in the full_plan.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationExecutor <a href=' /db/migrations/executor.py#L211'>collect_sql</a>(plan)</tt>	Takes a migration plan and returns a list of collected sql statements that represent the best-efforts version of that plan.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationExecutor <a href=' /db/migrations/executor.py#L229'>apply_migration</a>(state,migration,fake,fake_initial)</tt>	Runs a migration forwards.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationExecutor <a href=' /db/migrations/executor.py#L256'>unapply_migration</a>(state,migration,fake)</tt>	Runs a migration backwards.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationExecutor <a href=' /db/migrations/executor.py#L276'>check_replacements</a>()</tt>	Mark replacement migrations applied if their replaced set all are.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationExecutor <a href=' /db/migrations/executor.py#L293'>detect_soft_applied</a>(project_state,migration)</tt>	Tests whether a migration has been implicitly applied - that the tables or columns it would create exist.
<tt style='background-color:#E8E8E8;'> db.migrations.DummyNode <a href=' /db/migrations/graph.py#L93'>promote</a>()</tt>	Transition dummy to a normal node and clean off excess attribs.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationGraph <a href=' /db/migrations/graph.py#L153'>add_dependency</a>(migration,child,parent,skip_validation)</tt>	This may create dummy nodes if they don't yet exist.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationGraph <a href=' /db/migrations/graph.py#L176'>remove_replaced_nodes</a>(replacement,replaced)</tt>	Removes each of the replaced nodes when they exist any.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationGraph <a href=' /db/migrations/graph.py#L216'>remove_replacement_node</a>(replacement,replaced)</tt>	The inverse operation to remove_replaced_nodes almost removes the.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationGraph <a href=' /db/migrations/graph.py#L257'>validate_consistency</a>()</tt>	Ensure there are no dummy nodes remaining in the graph.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationGraph <a href=' /db/migrations/graph.py#L270'>forwards_plan</a>(target)</tt>	Given a node returns a list of which previous nodes dependencies must be applied ending with the node itself.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationGraph <a href=' /db/migrations/graph.py#L290'>backwards_plan</a>(target)</tt>	Given a node returns a list of which dependent nodes dependencies must be unapplied ending with the node itself.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationGraph <a href=' /db/migrations/graph.py#L310'>iterative_dfs</a>(start,forwards)</tt>	Iterative depth first search for finding dependencies.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationGraph <a href=' /db/migrations/graph.py#L333'>root_nodes</a>(app)</tt>	Returns all root nodes - that is nodes with no dependencies inside their app.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationGraph <a href=' /db/migrations/graph.py#L344'>leaf_nodes</a>(app)</tt>	Returns all leaf nodes - that is nodes with no dependents in their app.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationGraph <a href=' /db/migrations/graph.py#L388'>make_state</a>(nodes,at_end,real_apps)</tt>	Given a migration node or nodes returns a complete projectstate for it.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationOptimizer <a href=' /db/migrations/optimizer.py#L15'>optimize</a>(operations,app_label)</tt>	Main optimization entry point pass in a list of operation instances.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationOptimizer <a href=' /db/migrations/optimizer.py#L44'>optimize_inner</a>(operations,app_label)</tt>	Inner optimization loop.
<tt style='background-color:#E8E8E8;'> db.migrations. <a href=' /db/migrations/topological_sort.py#L1'>topological_sort_as_sets</a>(dependency_graph)</tt>	Variation of kahn's algorithm 1962 that returns sets.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationQuestioner <a href=' /db/migrations/questioner.py#L27'>ask_initial</a>(app_label)</tt>	Should we create an initial migration for the app?.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationQuestioner <a href=' /db/migrations/questioner.py#L57'>ask_not_null_addition</a>(field_name,model_name)</tt>	Adding a not null field to a model.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationQuestioner <a href=' /db/migrations/questioner.py#L62'>ask_not_null_alteration</a>(field_name,model_name)</tt>	Changing a null field to not null.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationQuestioner <a href=' /db/migrations/questioner.py#L67'>ask_rename</a>(model_name,old_name,new_name,field_instance)</tt>	Was this field really renamed?.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationQuestioner <a href=' /db/migrations/questioner.py#L71'>ask_rename_model</a>(old_model_state,new_model_state)</tt>	Was this model really renamed?.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationQuestioner <a href=' /db/migrations/questioner.py#L75'>ask_merge</a>(app_label)</tt>	Do you really want to merge these migrations?.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationQuestioner <a href=' /db/migrations/questioner.py#L79'>ask_auto_now_add_addition</a>(field_name,model_name)</tt>	Adding an auto_now_add field to a model.
<tt style='background-color:#E8E8E8;'> db.migrations.InteractiveMigrationQuestioner <a href=' /db/migrations/questioner.py#L109'>_ask_default</a>(default)</tt>	Prompt for a default value.
<tt style='background-color:#E8E8E8;'> db.migrations.InteractiveMigrationQuestioner <a href=' /db/migrations/questioner.py#L149'>ask_not_null_addition</a>(field_name,model_name)</tt>	Adding a not null field to a model.
<tt style='background-color:#E8E8E8;'> db.migrations.InteractiveMigrationQuestioner <a href=' /db/migrations/questioner.py#L168'>ask_not_null_alteration</a>(field_name,model_name)</tt>	Changing a null field to not null.
<tt style='background-color:#E8E8E8;'> db.migrations.InteractiveMigrationQuestioner <a href=' /db/migrations/questioner.py#L193'>ask_rename</a>(model_name,old_name,new_name,field_instance)</tt>	Was this field really renamed?.
<tt style='background-color:#E8E8E8;'> db.migrations.InteractiveMigrationQuestioner <a href=' /db/migrations/questioner.py#L199'>ask_rename_model</a>(old_model_state,new_model_state)</tt>	Was this model really renamed?.
<tt style='background-color:#E8E8E8;'> db.migrations.InteractiveMigrationQuestioner <a href=' /db/migrations/questioner.py#L213'>ask_auto_now_add_addition</a>(field_name,model_name)</tt>	Adding an auto_now_add field to a model.
<tt style='background-color:#E8E8E8;'> db.migrations.MigrationWriter <a href=' /db/migrations/writer.py#L149'>as_string</a>()</tt>	Returns a string of the file contents.
<tt style='background-color:#E8E8E8;'> db.migrations.operations.Operation <a href=' /db/migrations/operations/base.py#L44'>deconstruct</a>()</tt>	Returns a 3-tuple of class import path (or just name if it lives under django.
<tt style='background-color:#E8E8E8;'> db.migrations.operations.Operation <a href=' /db/migrations/operations/base.py#L56'>state_forwards</a>(app_label,state)</tt>	Takes the state from the previous migration and mutates it so that it matches what this migration would perform.
<tt style='background-color:#E8E8E8;'> db.migrations.operations.Operation <a href=' /db/migrations/operations/base.py#L63'>database_forwards</a>(app_label,schema_editor,from_state,to_state)</tt>	Performs the mutation on the database schema in the normal forwards direction.
<tt style='background-color:#E8E8E8;'> db.migrations.operations.Operation <a href=' /db/migrations/operations/base.py#L70'>database_backwards</a>(app_label,schema_editor,from_state,to_state)</tt>	Performs the mutation on the database schema in the reverse direction - e.
<tt style='background-color:#E8E8E8;'> db.migrations.operations.Operation <a href=' /db/migrations/operations/base.py#L78'>describe</a>()</tt>	Outputs a brief summary of what the action does.
<tt style='background-color:#E8E8E8;'> db.migrations.operations.Operation <a href=' /db/migrations/operations/base.py#L84'>references_model</a>(name,app_label)</tt>	Returns true if there is a chance this operation references the given model name as a string with an optional app label for accuracy.
<tt style='background-color:#E8E8E8;'> db.migrations.operations.Operation <a href=' /db/migrations/operations/base.py#L96'>references_field</a>(model_name,name,app_label)</tt>	Returns true if there is a chance this operation references the given field name with an optional app label for accuracy.
<tt style='background-color:#E8E8E8;'> db.migrations.operations.Operation <a href=' /db/migrations/operations/base.py#L105'>allow_migrate_model</a>(connection_alias,model)</tt>	Returns if we're allowed to migrate the model.
<tt style='background-color:#E8E8E8;'> db.migrations.operations.Operation <a href=' /db/migrations/operations/base.py#L117'>reduce</a>(operation,in_between,app_label)</tt>	Return either a list of operations the actual operation should be replaced with or a boolean that indicates whether or not the specified.
<tt style='background-color:#E8E8E8;'> db.migrations.operations.CreateModel <a href=' /db/migrations/operations/models.py#L129'>model_to_key</a>(model)</tt>	Take either a model class or an "app_label modelname" string.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/inspect.py#L46'>get_func_full_args</a>(func)</tt>	Return a list of argument name default value tuples if the argument.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/inspect.py#L105'>func_accepts_var_args</a>(func)</tt>	Return true if function 'func' accepts positional arguments *args.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L58'>get_fixed_timezone</a>(offset)</tt>	Returns a tzinfo instance with a fixed offset from utc.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L72'>get_default_timezone</a>()</tt>	Returns the default time zone as a tzinfo instance.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L83'>get_default_timezone_name</a>()</tt>	Returns the name of the default time zone.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L93'>get_current_timezone</a>()</tt>	Returns the currently active time zone as a tzinfo instance.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L100'>get_current_timezone_name</a>()</tt>	Returns the name of the currently active time zone.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L107'>_get_timezone_name</a>(timezone)</tt>	Returns the name of timezone.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L124'>activate</a>(timezone)</tt>	Sets the time zone for the current thread.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L139'>deactivate</a>()</tt>	Unsets the time zone for the current thread.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L180'>template_localtime</a>(value,use_tz)</tt>	Checks if value is a datetime and converts it to local time if necessary.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L200'>localtime</a>(value,timezone)</tt>	Converts an aware datetime datetime to local time.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L224'>localdate</a>(value,timezone)</tt>	Convert an aware datetime to local time and return the value's date.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L237'>now</a>()</tt>	Returns an aware or naive datetime datetime depending on settings use_tz.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L251'>is_aware</a>(value)</tt>	Determines if a given datetime datetime is aware.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L264'>is_naive</a>(value)</tt>	Determines if a given datetime datetime is naive.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L277'>make_aware</a>(value,timezone,is_dst)</tt>	Makes a naive datetime datetime in a given time zone aware.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timezone.py#L295'>make_naive</a>(value,timezone)</tt>	Makes an aware datetime datetime naive in a given time zone.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/lorem_ipsum.py#L58'>sentence</a>()</tt>	Returns a randomly generated sentence of lorem ipsum text.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/lorem_ipsum.py#L73'>paragraph</a>()</tt>	Returns a randomly generated paragraph of lorem ipsum text.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/lorem_ipsum.py#L82'>paragraphs</a>(count,common)</tt>	Returns a list of paragraphs as returned by paragraph().
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/lorem_ipsum.py#L99'>words</a>(count,common)</tt>	Returns a string of count lorem ipsum words separated by a single space.
<tt style='background-color:#E8E8E8;'> utils.TimeFormat <a href=' /utils/dateformat.py#L69'>A</a>()</tt>	'am' or 'pm'.
<tt style='background-color:#E8E8E8;'> utils.TimeFormat <a href=' /utils/dateformat.py#L75'>B</a>()</tt>	Swatch internet time.
<tt style='background-color:#E8E8E8;'> utils.TimeFormat <a href=' /utils/dateformat.py#L98'>f</a>()</tt>	Time in 12-hour hours and minutes with minutes left off if they're zero.
<tt style='background-color:#E8E8E8;'> utils.TimeFormat <a href=' /utils/dateformat.py#L117'>G</a>()</tt>	Hour 24-hour format without leading zeros i e '0' to '23'.
<tt style='background-color:#E8E8E8;'> utils.TimeFormat <a href=' /utils/dateformat.py#L125'>H</a>()</tt>	Hour 24-hour format i e '00' to '23'.
<tt style='background-color:#E8E8E8;'> utils.TimeFormat <a href=' /utils/dateformat.py#L129'>i</a>()</tt>	Minutes i e '00' to '59'.
<tt style='background-color:#E8E8E8;'> utils.TimeFormat <a href=' /utils/dateformat.py#L133'>O</a>()</tt>	Difference to greenwich time in hours e g '+0200', '-0430'.
<tt style='background-color:#E8E8E8;'> utils.TimeFormat <a href=' /utils/dateformat.py#L150'>P</a>()</tt>	Time in 12-hour hours minutes and 'a m '/'p m ', with minutes left off.
<tt style='background-color:#E8E8E8;'> utils.TimeFormat <a href=' /utils/dateformat.py#L163'>s</a>()</tt>	Seconds i e '00' to '59'.
<tt style='background-color:#E8E8E8;'> utils.TimeFormat <a href=' /utils/dateformat.py#L167'>T</a>()</tt>	Time zone of this machine e g 'est' or 'mdt'.
<tt style='background-color:#E8E8E8;'> utils.TimeFormat <a href=' /utils/dateformat.py#L189'>u</a>()</tt>	Microseconds i e '000000' to '999999'.
<tt style='background-color:#E8E8E8;'> utils.TimeFormat <a href=' /utils/dateformat.py#L193'>Z</a>()</tt>	Time zone offset in seconds (i e '-43200' to '43200') the offset for.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L223'>b</a>()</tt>	Month textual 3 letters lowercase e g 'jan'.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L227'>c</a>()</tt>	Iso 8601 format example : '2008-01-02t10 30 00.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L238'>D</a>()</tt>	Day of the week textual 3 letters e g 'fri'.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L242'>E</a>()</tt>	Alternative month names as required by some locales proprietary extension.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L246'>F</a>()</tt>	Month textual long e g 'january'.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L250'>I</a>()</tt>	'1' if daylight savings time '0' otherwise.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L263'>j</a>()</tt>	Day of the month without leading zeros i e '1' to '31'.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L271'>L</a>()</tt>	Boolean for whether it is a leap year i e true or false.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L279'>M</a>()</tt>	Month textual 3 letters e g 'jan'.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L287'>N</a>()</tt>	Month abbreviation in associated press style proprietary extension.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L291'>o</a>()</tt>	Iso 8601 year number matching the iso week number w.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L295'>r</a>()</tt>	Rfc 5322 formatted date e g 'thu 21 dec 2000 16 01 07 +0200'.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L299'>S</a>()</tt>	English ordinal suffix for the day of the month 2 characters i e 'st', 'nd', 'rd' or 'th'.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L312'>t</a>()</tt>	Number of days in the given month i e '28' to '31'.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L316'>U</a>()</tt>	Seconds since the unix epoch january 1 1970 00 00 00 gmt.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L327'>W</a>()</tt>	Iso-8601 week number of year weeks starting on monday.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L356'>Y</a>()</tt>	Year 4 digits e g '1999'.
<tt style='background-color:#E8E8E8;'> utils.DateFormat <a href=' /utils/dateformat.py#L360'>z</a>()</tt>	Day of the year i e '0' to '365'.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/crypto.py#L29'>salted_hmac</a>(key_salt,value,secret)</tt>	Returns the hmac-sha1 of 'value', using a key generated from key_salt and a secret (which defaults to settings.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/crypto.py#L54'>get_random_string</a>(length,allowed_chars)</tt>	Returns a securely generated random string.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/crypto.py#L108'>_bin_to_long</a>(x)</tt>	Convert a binary string into a long integer.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/crypto.py#L117'>_long_to_bin</a>(x,hex_format_string)</tt>	Convert a long integer into a binary string.
<tt style='background-color:#E8E8E8;'> utils.MultiValueDict <a href=' /utils/datastructures.py#L77'>__getitem__</a>(key)</tt>	Returns the last data value for this key or [] if it's an empty list raises keyerror if not found.
<tt style='background-color:#E8E8E8;'> utils.MultiValueDict <a href=' /utils/datastructures.py#L121'>get</a>(key,default)</tt>	Returns the last data value for the passed key if key doesn't exist.
<tt style='background-color:#E8E8E8;'> utils.MultiValueDict <a href=' /utils/datastructures.py#L134'>_getlist</a>(key,default,force_list)</tt>	Return a list of values for the key.
<tt style='background-color:#E8E8E8;'> utils.MultiValueDict <a href=' /utils/datastructures.py#L152'>getlist</a>(key,default)</tt>	Return the list of values for the key if key doesn't exist return a.
<tt style='background-color:#E8E8E8;'> utils.MultiValueDict <a href=' /utils/datastructures.py#L178'>appendlist</a>(key,value)</tt>	Appends an item to the internal list associated with key.
<tt style='background-color:#E8E8E8;'> utils.MultiValueDict <a href=' /utils/datastructures.py#L182'>_iteritems</a>()</tt>	Yields key value pairs where value is the last item in the list associated with the key.
<tt style='background-color:#E8E8E8;'> utils.MultiValueDict <a href=' /utils/datastructures.py#L190'>_iterlists</a>()</tt>	Yields key list pairs.
<tt style='background-color:#E8E8E8;'> utils.MultiValueDict <a href=' /utils/datastructures.py#L194'>_itervalues</a>()</tt>	Yield the last value on every key list.
<tt style='background-color:#E8E8E8;'> utils.MultiValueDict <a href=' /utils/datastructures.py#L217'>copy</a>()</tt>	Returns a shallow copy of this object.
<tt style='background-color:#E8E8E8;'> utils.MultiValueDict <a href=' /utils/datastructures.py#L221'>update</a>()</tt>	Update() extends rather than replaces existing key lists.
<tt style='background-color:#E8E8E8;'> utils.MultiValueDict <a href=' /utils/datastructures.py#L242'>dict</a>()</tt>	Returns current object as a dict with singular values.
<tt style='background-color:#E8E8E8;'> utils.DictWrapper <a href=' /utils/datastructures.py#L308'>__getitem__</a>(key)</tt>	Retrieves the real value after stripping the prefix string if present.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/jslex.py#L22'>literals</a>(choices,prefix,suffix)</tt>	Create a regex from a space-separated list of literal choices.
<tt style='background-color:#E8E8E8;'> utils.Lexer <a href=' /utils/jslex.py#L51'>lex</a>(text)</tt>	Lexically analyze text.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/jslex.py#L187'>prepare_js_for_gettext</a>(js)</tt>	Convert the javascript source js into something resembling c for xgettext.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/regex_helper.py#L53'>normalize</a>(pattern)</tt>	Given a reg-exp pattern normalizes it to an iterable of forms that suffice for reverse matching.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/regex_helper.py#L212'>next_char</a>(input_iter)</tt>	An iterator that yields the next character from "pattern_iter", respecting escape sequences.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/regex_helper.py#L233'>walk_to_end</a>(ch,input_iter)</tt>	The iterator is currently inside a capturing group we want to walk to the.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/regex_helper.py#L254'>get_quantifier</a>(ch,input_iter)</tt>	Parse a quantifier from the input where "ch" is the first character in the quantifier.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/regex_helper.py#L291'>contains</a>(source,inst)</tt>	Returns true if the "source" contains an instance of "inst" false.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/regex_helper.py#L305'>flatten_result</a>(source)</tt>	Turns the given source sequence into a list of reg-exp possibilities and their arguments.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L62'>urlquote</a>(url,safe)</tt>	A version of python's urllib quote() function that can operate on unicode.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L73'>urlquote_plus</a>(url,safe)</tt>	A version of python's urllib quote_plus() function that can operate on.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L84'>urlunquote</a>(quoted_url)</tt>	A wrapper for python's urllib unquote() function that can operate on.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L93'>urlunquote_plus</a>(quoted_url)</tt>	A wrapper for python's urllib unquote_plus() function that can operate on.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L102'>urlencode</a>(query,doseq)</tt>	A version of python's urllib urlencode() function that can operate on.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L119'>cookie_date</a>(epoch_seconds)</tt>	Formats the time to ensure compatibility with netscape's cookie standard.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L133'>http_date</a>(epoch_seconds)</tt>	Formats the time to match the rfc1123 date format as specified by http rfc7231 section 7.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L147'>parse_http_date</a>(date)</tt>	Parses a date format as specified by http rfc7231 section 7 1 1 1.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L183'>parse_http_date_safe</a>(date)</tt>	Same as parse_http_date but returns none if the input is invalid.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L195'>base36_to_int</a>(s)</tt>	Converts a base 36 string to an int raises valueerror if the.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L213'>int_to_base36</a>(i)</tt>	Converts an integer to a base36 string.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L234'>urlsafe_base64_encode</a>(s)</tt>	Encodes a bytestring in base64 for use in urls stripping any trailing equal signs.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L242'>urlsafe_base64_decode</a>(s)</tt>	Decodes a base64 encoded string adding back any trailing equal signs that might have been stripped.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L254'>parse_etags</a>(etag_str)</tt>	Parse a string of etags given in an if-none-match or if-match header as defined by rfc 7232.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L268'>quote_etag</a>(etag_str)</tt>	If the provided string is already a quoted etag return it otherwise wrap.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L279'>is_same_domain</a>(host,pattern)</tt>	Return true if the host is either an exact match or a match to the wildcard pattern.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L298'>is_safe_url</a>(url,host,allowed_hosts,require_https)</tt>	Return true if the url is a safe redirection (i e it doesn't point to.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L334'>_urlparse</a>(url,scheme,allow_fragments)</tt>	Parse a url into 6 components <scheme>://<netloc>/<path>;<params>?<query>#<fragment>.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L354'>_urlsplit</a>(url,scheme,allow_fragments)</tt>	Parse a url into 5 components <scheme>://<netloc>/<path>?<query>#<fragment>.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/http.py#L411'>limited_parse_qsl</a>(qs,keep_blank_values,encoding,errors)</tt>	Return a list of key/value tuples parsed from query string.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/termcolors.py#L15'>colorize</a>(text,opts)</tt>	Returns your text enclosed in ansi graphics codes.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/termcolors.py#L60'>make_style</a>(opts)</tt>	Returns a function with default parameters for colorize().
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/termcolors.py#L139'>parse_color_setting</a>(config_string)</tt>	Parse a django_colors environment variable to produce the system palette the general form of a palette definition is.
<tt style='background-color:#E8E8E8;'> utils.SafeData <a href=' /utils/safestring.py#L41'>__html__</a>()</tt>	Returns the html representation of a string for interoperability.
<tt style='background-color:#E8E8E8;'> utils.SafeBytes <a href=' /utils/safestring.py#L55'>__add__</a>(rhs)</tt>	Concatenating a safe byte string with another safe byte string or safe unicode string is safe.
<tt style='background-color:#E8E8E8;'> utils.SafeBytes <a href=' /utils/safestring.py#L67'>_proxy_method</a>()</tt>	Wrap a call to a normal unicode method up so that we return safe results.
<tt style='background-color:#E8E8E8;'> utils.SafeText <a href=' /utils/safestring.py#L88'>__add__</a>(rhs)</tt>	Concatenating a safe unicode string with another safe byte string or safe unicode string is safe.
<tt style='background-color:#E8E8E8;'> utils.SafeText <a href=' /utils/safestring.py#L98'>_proxy_method</a>()</tt>	Wrap a call to a normal unicode method up so that we return safe results.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/safestring.py#L129'>mark_safe</a>(s)</tt>	Explicitly mark a string as safe for html output purposes the returned.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/safestring.py#L149'>mark_for_escaping</a>(s)</tt>	Explicitly mark a string as requiring html escaping upon output has no.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/dateparse.py#L55'>parse_date</a>(value)</tt>	Parses a string and return a datetime date.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/dateparse.py#L67'>parse_time</a>(value)</tt>	Parses a string and return a datetime time.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/dateparse.py#L85'>parse_datetime</a>(value)</tt>	Parses a string and return a datetime datetime.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/dateparse.py#L113'>parse_duration</a>(value)</tt>	Parses a duration string and returns a datetime timedelta.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/autoreload.py#L83'>gen_filenames</a>(only_new)</tt>	Returns a list of filenames referenced in sys modules and translation.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/autoreload.py#L154'>inotify_code_changed</a>()</tt>	Checks for changed code using inotify after being called.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/encoding.py#L31'>smart_text</a>(s,encoding,strings_only,errors)</tt>	Returns a text object representing 's' -- unicode on python 2 and str on python 3.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/encoding.py#L49'>is_protected_type</a>(obj)</tt>	Determine if the object instance is of a protected type.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/encoding.py#L58'>force_text</a>(s,encoding,strings_only,errors)</tt>	Similar to smart_text except that lazy instances are resolved to strings rather than kept as lazy objects.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/encoding.py#L100'>smart_bytes</a>(s,encoding,strings_only,errors)</tt>	Returns a bytestring version of 's', encoded as specified in 'encoding'.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/encoding.py#L112'>force_bytes</a>(s,encoding,strings_only,errors)</tt>	Similar to smart_bytes except that lazy instances are resolved to strings rather than kept as lazy objects.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/encoding.py#L170'>iri_to_uri</a>(iri)</tt>	Convert an internationalized resource identifier iri portion to a uri portion that is suitable for inclusion in a url.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/encoding.py#L200'>uri_to_iri</a>(uri)</tt>	Converts a uniform resource identifier uri into an internationalized resource identifier iri.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/encoding.py#L217'>escape_uri_path</a>(path)</tt>	Escape the unsafe characters from the path portion of a uniform resource identifier uri.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/encoding.py#L234'>repercent_broken_unicode</a>(path)</tt>	As per section 3 2 of rfc 3987 step three of converting a uri into an iri.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/encoding.py#L249'>filepath_to_uri</a>(path)</tt>	Convert a file system path to a uri portion that is suitable for inclusion in a url.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/encoding.py#L269'>get_system_encoding</a>()</tt>	The encoding of the default system locale but falls back to the given fallback encoding if the encoding is unsupported by python or could.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/html.py#L38'>escape</a>(text)</tt>	Returns the given text with ampersands quotes and angle brackets encoded for use in html.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/html.py#L73'>escapejs</a>(value)</tt>	Hex encodes characters for use in javascript strings.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/html.py#L79'>conditional_escape</a>(text)</tt>	Similar to escape(), except that it doesn't operate on pre-escaped strings.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/html.py#L92'>format_html</a>(format_string)</tt>	Similar to str format but passes all arguments through conditional_escape.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/html.py#L103'>format_html_join</a>(sep,format_string,args_generator)</tt>	A wrapper of format_html for the common case of a group of arguments that need to be formatted using the same format string and then joined using.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/html.py#L122'>linebreaks</a>(value,autoescape)</tt>	Converts newlines into <p> and <br />s.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/html.py#L153'>_strip_once</a>(value)</tt>	Internal tag stripping utility used by strip_tags.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/html.py#L170'>strip_tags</a>(value)</tt>	Returns the given html with all tags stripped.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/html.py#L187'>strip_spaces_between_tags</a>(value)</tt>	Returns the given html with spaces between tags removed.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/html.py#L193'>smart_urlquote</a>(url)</tt>	Quotes a url if it isn't already quoted.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/html.py#L229'>urlize</a>(text,trim_url_limit,nofollow,autoescape)</tt>	Converts any urls in text into clickable links.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/html.py#L351'>avoid_wrapping</a>(value)</tt>	Avoid text wrapping in the middle of a phrase by adding non-breaking spaces where there previously were normal spaces.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/html.py#L359'>html_safe</a>(klass)</tt>	A decorator that defines the __html__ method this helps non-django.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/module_loading.py#L9'>import_string</a>(dotted_path)</tt>	Import a dotted module path and return the attribute/class designated by the last name in the path.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/module_loading.py#L30'>autodiscover_modules</a>()</tt>	Auto-discover installed_apps modules and fail silently when not present.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/module_loading.py#L150'>module_dir</a>(module)</tt>	Find the name of the directory that contains a module if possible.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/duration.py#L18'>duration_string</a>(duration)</tt>	Version of str timedelta which is not english specific.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/decorators.py#L20'>method_decorator</a>(decorator,name)</tt>	Converts a function decorator into a method decorator.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/decorators.py#L96'>decorator_from_middleware_with_args</a>(middleware_class)</tt>	Like decorator_from_middleware but returns a function that accepts the arguments to be passed to the middleware_class.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/decorators.py#L112'>decorator_from_middleware</a>(middleware_class)</tt>	Given a middleware class not an instance returns a view decorator this.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/decorators.py#L121'>available_attrs</a>(fn)</tt>	Return the list of functools-wrappable attributes on a callable.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/numberformat.py#L10'>format</a>(number,decimal_sep,decimal_pos,grouping)</tt>	Gets a number as a number or string and returns it as a string using formats defined as arguments.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timesince.py#L20'>timesince</a>(d,now,reversed)</tt>	Takes two datetime objects and returns the time between d and now as a nicely formatted string e.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/timesince.py#L75'>timeuntil</a>(d,now)</tt>	Like timesince but returns a string measuring the time until the given time.
<tt style='background-color:#E8E8E8;'> utils.SimplerXMLGenerator <a href=' /utils/xmlutils.py#L14'>addQuickElement</a>(name,contents,attrs)</tt>	Convenience method for adding an element with no children.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/datetime_safe.py#L40'>new_date</a>(d)</tt>	Generate a safe date from a datetime date object.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/datetime_safe.py#L45'>new_datetime</a>(d)</tt>	Generate a safe datetime from a datetime date or datetime datetime object.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/_os.py#L35'>upath</a>(path)</tt>	Always return a unicode path.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/_os.py#L44'>npath</a>(path)</tt>	Always return a native path that is unicode on python 3 and bytestring on python 2.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/_os.py#L54'>safe_join</a>(base)</tt>	Joins one or more path components to the base path component intelligently.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/_os.py#L82'>symlinks_supported</a>()</tt>	A function to check if creating symlinks are supported in the host platform and/or if they are allowed to be created (e.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/formats.py#L51'>reset_format_cache</a>()</tt>	Clear any cached formats.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/formats.py#L62'>iter_format_modules</a>(lang,format_module_path)</tt>	Does the heavy lifting of finding format modules.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/formats.py#L91'>get_format_modules</a>(lang,reverse)</tt>	Returns a list of the format modules found.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/formats.py#L105'>get_format</a>(format_type,lang,use_l10n)</tt>	For a specific format type returns the format for the current language locale defaults to the format in the settings.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/formats.py#L154'>date_format</a>(value,format,use_l10n)</tt>	Formats a datetime date or datetime datetime object using a.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/formats.py#L165'>time_format</a>(value,format,use_l10n)</tt>	Formats a datetime time object using a localizable format.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/formats.py#L175'>number_format</a>(value,decimal_pos,use_l10n,force_grouping)</tt>	Formats a numeric value using localization settings if use_l10n is provided and is not none that will force the value to.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/formats.py#L196'>localize</a>(value,use_l10n)</tt>	Checks if value is a localizable type date number and returns it.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/formats.py#L219'>localize_input</a>(value,default)</tt>	Checks if an input value is a localizable type and returns it formatted with the appropriate formatting string of the current locale.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/formats.py#L244'>sanitize_separators</a>(value)</tt>	Sanitizes a value according to the current decimal and thousand separator setting.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/version.py#L10'>get_version</a>(version)</tt>	Returns a pep 440-compliant version number from version.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/version.py#L34'>get_main_version</a>(version)</tt>	Returns main version (x y[ z]) from version.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/version.py#L41'>get_complete_version</a>(version)</tt>	Returns a tuple of the django version if version argument is non-empty.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/version.py#L62'>get_git_changeset</a>()</tt>	Returns a numeric identifier of the latest git changeset.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/text.py#L23'>capfirst</a>(x)</tt>	Capitalize the first letter of a string.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/text.py#L37'>wrap</a>(text,width)</tt>	A word-wrap function that preserves existing line breaks expects that.
<tt style='background-color:#E8E8E8;'> utils.Truncator <a href=' /utils/text.py#L93'>chars</a>(num,truncate,html)</tt>	Returns the text truncated to be no longer than the specified number of characters.
<tt style='background-color:#E8E8E8;'> utils.Truncator <a href=' /utils/text.py#L117'>_text_chars</a>(length,truncate,text,truncate_len)</tt>	Truncates a string after a certain number of chars.
<tt style='background-color:#E8E8E8;'> utils.Truncator <a href=' /utils/text.py#L139'>words</a>(num,truncate,html)</tt>	Truncates a string after a certain number of words takes an optional.
<tt style='background-color:#E8E8E8;'> utils.Truncator <a href=' /utils/text.py#L151'>_text_words</a>(length,truncate)</tt>	Truncates a string after a certain number of words.
<tt style='background-color:#E8E8E8;'> utils.Truncator <a href=' /utils/text.py#L163'>_truncate_html</a>(length,truncate,text,truncate_len)</tt>	Truncates html to a certain number of chars not counting tags and comments or if words is true then to a certain number of words.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/text.py#L236'>get_valid_filename</a>(s)</tt>	Returns the given string converted to a string that can be used for a clean filename.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/text.py#L250'>get_text_list</a>(list_,last_word)</tt>	>>> get_text_list(['a', 'b', 'c', 'd']).
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/text.py#L274'>normalize_newlines</a>(text)</tt>	Normalizes crlf and cr newlines to just lf.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/text.py#L281'>phone2numeric</a>(phone)</tt>	Converts a phone number with letters into its numeric equivalent.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/text.py#L350'>smart_split</a>(text)</tt>	Generator that splits a string by spaces leaving quoted phrases together.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/text.py#L397'>unescape_string_literal</a>(s)</tt>	Convert quoted string literals to unquoted strings with escaped quotes and.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/text.py#L418'>slugify</a>(value,allow_unicode)</tt>	Convert to ascii if 'allow_unicode' is false convert spaces to hyphens.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/text.py#L435'>camel_case_to_spaces</a>(value)</tt>	Splits camelcase and converts to lower case also strips leading and.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/text.py#L443'>_format_lazy</a>(format_string)</tt>	Apply str format() on 'format_string' where format_string args.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/itercompat.py#L8'>is_iterable</a>(x)</tt>	A implementation independent way of checking for iterables.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/feedgenerator.py#L77'>get_tag_uri</a>(url,date)</tt>	Creates a taguri.
<tt style='background-color:#E8E8E8;'> utils.SyndicationFeed <a href=' /utils/feedgenerator.py#L120'>add_item</a>(title,link,description,author_email)</tt>	Adds an item to the feed all args are expected to be python unicode.
<tt style='background-color:#E8E8E8;'> utils.SyndicationFeed <a href=' /utils/feedgenerator.py#L171'>root_attributes</a>()</tt>	Return extra attributes to place on the root (i e feed/channel) element.
<tt style='background-color:#E8E8E8;'> utils.SyndicationFeed <a href=' /utils/feedgenerator.py#L178'>add_root_elements</a>(handler)</tt>	Add elements in the root (i e feed/channel) element called.
<tt style='background-color:#E8E8E8;'> utils.SyndicationFeed <a href=' /utils/feedgenerator.py#L185'>item_attributes</a>(item)</tt>	Return extra attributes to place on each item (i e item/entry) element.
<tt style='background-color:#E8E8E8;'> utils.SyndicationFeed <a href=' /utils/feedgenerator.py#L191'>add_item_elements</a>(handler,item)</tt>	Add elements on each item (i e item/entry) element.
<tt style='background-color:#E8E8E8;'> utils.SyndicationFeed <a href=' /utils/feedgenerator.py#L197'>write</a>(outfile,encoding)</tt>	Outputs the feed in the given encoding to outfile which is a file-like object.
<tt style='background-color:#E8E8E8;'> utils.SyndicationFeed <a href=' /utils/feedgenerator.py#L204'>writeString</a>(encoding)</tt>	Returns the feed in the given encoding as a string.
<tt style='background-color:#E8E8E8;'> utils.SyndicationFeed <a href=' /utils/feedgenerator.py#L212'>latest_post_date</a>()</tt>	Returns the latest item's pubdate or updateddate if no items.
<tt style='background-color:#E8E8E8;'> utils.Enclosure <a href=' /utils/feedgenerator.py#L233'>__init__</a>(url,length,mime_type)</tt>	All args are expected to be python unicode objects.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/ipv6.py#L11'>clean_ipv6_address</a>(ip_str,unpack_ipv4,error_message)</tt>	Cleans an ipv6 address string.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/ipv6.py#L93'>_sanitize_ipv4_mapping</a>(ip_str)</tt>	Sanitize ipv4 mapping in an expanded ipv6 address.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/ipv6.py#L130'>_unpack_ipv4</a>(ip_str)</tt>	Unpack an ipv4 address that was mapped in a compressed ipv6 address.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/ipv6.py#L149'>is_valid_ipv6_address</a>(ip_str)</tt>	Ensure we have a valid ipv6 address.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/ipv6.py#L217'>_explode_shorthand_ip_string</a>(ip_str)</tt>	Expand a shortened ipv6 address.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/ipv6.py#L260'>_is_shorthand_ip</a>(ip_str)</tt>	Determine if the address is shortened.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L43'>patch_cache_control</a>(response)</tt>	This function patches the cache-control header by adding all keyword arguments to it.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L92'>get_max_age</a>(response)</tt>	Returns the max-age from the response cache-control header as an integer (or none if it wasn't found or wasn't an integer.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L184'>_if_match_passes</a>(target_etag,etags)</tt>	Test the if-match comparison as defined in section 3 1 of rfc 7232.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L205'>_if_unmodified_since_passes</a>(last_modified,if_unmodified_since)</tt>	Test the if-unmodified-since comparison as defined in section 3 4 of.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L213'>_if_none_match_passes</a>(target_etag,etags)</tt>	Test the if-none-match comparison as defined in section 3 2 of rfc 7232.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L232'>_if_modified_since_passes</a>(last_modified,if_modified_since)</tt>	Test the if-modified-since comparison as defined in section 3 3 of rfc 7232.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L239'>patch_response_headers</a>(response,cache_timeout)</tt>	Add http caching headers to the given httpresponse expires and cache-control.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L270'>add_never_cache_headers</a>(response)</tt>	Adds headers to a response to indicate that a page should never be cached.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L278'>patch_vary_headers</a>(response,newheaders)</tt>	Adds or updates the "vary" header in the given httpresponse object.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L298'>has_vary_header</a>(response,header_query)</tt>	Checks to see if the response has a given header name in its vary header.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L309'>_i18n_cache_key_suffix</a>(request,cache_key)</tt>	If necessary adds the current locale or time zone to the cache key.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L326'>_generate_cache_key</a>(request,method,headerlist,key_prefix)</tt>	Returns a cache key from the headers given in the header list.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L339'>_generate_cache_header_key</a>(key_prefix,request)</tt>	Returns a cache key for the header cache.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L347'>get_cache_key</a>(request,key_prefix,method,cache)</tt>	Returns a cache key based on the request url and query it can be used.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/cache.py#L369'>learn_cache_key</a>(request,response,cache_timeout,key_prefix)</tt>	Learns what headers to take into account for some request url from the response object.
<tt style='background-color:#E8E8E8;'> utils.AdminEmailHandler <a href=' /utils/log.py#L129'>format_subject</a>(subject)</tt>	Escape cr and lf characters.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/six.py#L75'>_add_doc</a>(func,doc)</tt>	Add documentation to a function.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/six.py#L80'>_import_module</a>(name)</tt>	Import module returning the module after the last dot.
<tt style='background-color:#E8E8E8;'> utils._SixMetaPathImporter <a href=' /utils/six.py#L209'>is_package</a>(fullname)</tt>	Return true if the named module is a package.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/six.py#L486'>add_move</a>(move)</tt>	Add an item to six moves.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/six.py#L491'>remove_move</a>(name)</tt>	Remove item from six moves.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/six.py#L800'>with_metaclass</a>(meta)</tt>	Create a base class with a metaclass.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/six.py#L812'>add_metaclass</a>(metaclass)</tt>	Class decorator for creating a class with a metaclass.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/six.py#L828'>python_2_unicode_compatible</a>(klass)</tt>	A decorator that defines __unicode__ and __str__ methods under python 2.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/functional.py#L48'>lazy</a>(func)</tt>	Turns any callable into a lazy evaluated callable you need to give result.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/functional.py#L184'>lazystr</a>(text)</tt>	Shortcut for the common case of a lazy callable that returns str.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/functional.py#L200'>keep_lazy</a>()</tt>	A decorator that allows a function to be called with one or more lazy arguments.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/functional.py#L225'>keep_lazy_text</a>(func)</tt>	A decorator for functions that accept lazy arguments and return text.
<tt style='background-color:#E8E8E8;'> utils.LazyObject <a href=' /utils/functional.py#L278'>_setup</a>()</tt>	Must be implemented by subclasses to initialize the wrapped object.
<tt style='background-color:#E8E8E8;'> utils.LazyObject <a href=' /utils/functional.py#L303'>__getstate__</a>()</tt>	Prevent older versions of pickle from trying to pickle the __dict__ which in the case of a simplelazyobject may contain a lambda.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/functional.py#L357'>unpickle_lazyobject</a>(wrapped)</tt>	Used to unpickle lazy objects just return its argument which will be the.
<tt style='background-color:#E8E8E8;'> utils.SimpleLazyObject <a href=' /utils/functional.py#L372'>__init__</a>(func)</tt>	Pass in a callable that returns the object to be wrapped.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/functional.py#L415'>partition</a>(predicate,values)</tt>	Splits the values into two sets based on the return value of the function (true/false).
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/archive.py#L45'>extract</a>(path,to_path)</tt>	Unpack the tar or zip file at the specified path to the directory specified by to_path.
<tt style='background-color:#E8E8E8;'> utils.BaseArchive <a href=' /utils/archive.py#L102'>_copy_permissions</a>(mode,filename)</tt>	If the file in the archive has some permissions (this assumes a file won't be writable/executable without being readable), apply those.
<tt style='background-color:#E8E8E8;'> utils.BaseArchive <a href=' /utils/archive.py#L122'>has_leading_dir</a>(paths)</tt>	Returns true if all the paths have the same leading path name (i.
<tt style='background-color:#E8E8E8;'> utils.Node <a href=' /utils/tree.py#L21'>__init__</a>(children,connector,negated)</tt>	Constructs a new node if no connector is given the default will be.
<tt style='background-color:#E8E8E8;'> utils.Node <a href=' /utils/tree.py#L32'>_new_instance</a>(cls,children,connector,negated)</tt>	This is called to create a new instance of this class when we need new nodes or subclasses in the internal code in this class.
<tt style='background-color:#E8E8E8;'> utils.Node <a href=' /utils/tree.py#L53'>__deepcopy__</a>(memodict)</tt>	Utility method used by copy deepcopy().
<tt style='background-color:#E8E8E8;'> utils.Node <a href=' /utils/tree.py#L62'>__len__</a>()</tt>	The size of a node if the number of children it has.
<tt style='background-color:#E8E8E8;'> utils.Node <a href=' /utils/tree.py#L68'>__bool__</a>()</tt>	For truth value testing.
<tt style='background-color:#E8E8E8;'> utils.Node <a href=' /utils/tree.py#L77'>__contains__</a>(other)</tt>	Returns true is 'other' is a direct child of this instance.
<tt style='background-color:#E8E8E8;'> utils.Node <a href=' /utils/tree.py#L83'>add</a>(data,conn_type,squash)</tt>	Combines this tree and the data represented by data using the connector conn_type.
<tt style='background-color:#E8E8E8;'> utils.Node <a href=' /utils/tree.py#L127'>negate</a>()</tt>	Negate the sense of the root connector.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/deconstruct.py#L6'>deconstructible</a>()</tt>	Class decorator that allow the decorated class to be serialized by the migrations subsystem.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/template.py#L19'>blankout</a>(src,char)</tt>	Change every non-whitespace character to the given char.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/template.py#L42'>templatize</a>(src,origin,charset)</tt>	Turn a django template into something that is understood by xgettext it.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L51'>reset_cache</a>()</tt>	Reset global state when languages setting has been changed as some languages should no longer be accepted.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L63'>to_locale</a>(language,to_lower)</tt>	Turns a language name en-us into a locale name (en_us) if 'to_lower' is.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L81'>to_language</a>(locale)</tt>	Turns a locale name (en_us) into a language name en-us.
<tt style='background-color:#E8E8E8;'> utils.translation.DjangoTranslation <a href=' /utils/translation/trans_real.py#L102'>__init__</a>(language,domain,localedirs)</tt>	Create a gnutranslations() using many locale directories.
<tt style='background-color:#E8E8E8;'> utils.translation.DjangoTranslation <a href=' /utils/translation/trans_real.py#L143'>_new_gnu_trans</a>(localedir,use_null_fallback)</tt>	Returns a mergeable gettext gnutranslations instance.
<tt style='background-color:#E8E8E8;'> utils.translation.DjangoTranslation <a href=' /utils/translation/trans_real.py#L158'>_init_translation_catalog</a>()</tt>	Creates a base catalog using global django translations.
<tt style='background-color:#E8E8E8;'> utils.translation.DjangoTranslation <a href=' /utils/translation/trans_real.py#L165'>_add_installed_apps_translations</a>()</tt>	Merges translations from each installed app.
<tt style='background-color:#E8E8E8;'> utils.translation.DjangoTranslation <a href=' /utils/translation/trans_real.py#L180'>_add_local_translations</a>()</tt>	Merges translations defined in locale_paths.
<tt style='background-color:#E8E8E8;'> utils.translation.DjangoTranslation <a href=' /utils/translation/trans_real.py#L186'>_add_fallback</a>(localedirs)</tt>	Sets the gnutranslations() fallback with the default language.
<tt style='background-color:#E8E8E8;'> utils.translation.DjangoTranslation <a href=' /utils/translation/trans_real.py#L201'>merge</a>(other)</tt>	Merge another translation into this catalog.
<tt style='background-color:#E8E8E8;'> utils.translation.DjangoTranslation <a href=' /utils/translation/trans_real.py#L213'>language</a>()</tt>	Returns the translation language.
<tt style='background-color:#E8E8E8;'> utils.translation.DjangoTranslation <a href=' /utils/translation/trans_real.py#L217'>to_language</a>()</tt>	Returns the translation language name.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L222'>translation</a>(language)</tt>	Returns a translation object in the default 'django' domain.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L232'>activate</a>(language)</tt>	Fetches the translation object for a given language and installs it as the current translation object for the current thread.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L242'>deactivate</a>()</tt>	Deinstalls the currently active translation object so that further _ calls will resolve against the default translation object again.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L251'>deactivate_all</a>()</tt>	Makes the active translation object a nulltranslations() instance this is.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L261'>get_language</a>()</tt>	Returns the currently selected language.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L273'>get_language_bidi</a>()</tt>	Returns selected language's bidi layout.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L288'>catalog</a>()</tt>	Returns the current active catalog for further processing.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L304'>do_translate</a>(message,translation_function)</tt>	Translates 'message' using the given 'translation_function' name -- which will be either gettext or ugettext.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L332'>gettext</a>(message)</tt>	Returns a string of the translation of the message.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L358'>gettext_noop</a>(message)</tt>	Marks strings for translation but doesn't translate them now this can be.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L379'>ngettext</a>(singular,plural,number)</tt>	Returns a string of the translation of either the singular or plural based on the number.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L411'>all_locale_paths</a>()</tt>	Returns a list of paths to user-provides languages files.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L420'>check_for_language</a>(lang_code)</tt>	Checks whether there is a global language file for the given language code.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L440'>get_languages</a>()</tt>	Cache of settings languages in an ordereddict for easy lookups by key.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L448'>get_supported_language_variant</a>(lang_code,strict)</tt>	Returns the language-code that's listed in supported languages possibly selecting a more generic variant.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L483'>get_language_from_path</a>(path,strict)</tt>	Returns the language-code if there is a valid language-code found in the path.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L501'>get_language_from_request</a>(request,check_path)</tt>	Analyzes the request to find what language the user wants the system to show.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/trans_real.py#L549'>parse_accept_lang_header</a>(lang_string)</tt>	Parses the lang_string which is the body of an http accept-language header and returns a list of lang q-value ordered by 'q' values.
<tt style='background-color:#E8E8E8;'> utils.translation. <a href=' /utils/translation/__init__.py#L227'>_string_concat</a>()</tt>	Lazy variant of string concatenation needed for translations that are constructed from multiple parts.
<tt style='background-color:#E8E8E8;'> http.HttpRequest <a href=' /http/request.py#L76'>_get_raw_host</a>()</tt>	Return the http host using the environment or request headers skip.
<tt style='background-color:#E8E8E8;'> http.HttpRequest <a href=' /http/request.py#L95'>get_host</a>()</tt>	Return the http host using the environment or request headers.
<tt style='background-color:#E8E8E8;'> http.HttpRequest <a href=' /http/request.py#L115'>get_port</a>()</tt>	Return the port number for the request as a string.
<tt style='background-color:#E8E8E8;'> http.HttpRequest <a href=' /http/request.py#L132'>get_signed_cookie</a>(key,default,salt,max_age)</tt>	Attempts to return a signed cookie if the signature fails or the.
<tt style='background-color:#E8E8E8;'> http.HttpRequest <a href=' /http/request.py#L155'>get_raw_uri</a>()</tt>	Return an absolute uri from variables available in this request skip.
<tt style='background-color:#E8E8E8;'> http.HttpRequest <a href=' /http/request.py#L166'>build_absolute_uri</a>(location)</tt>	Builds an absolute uri from the location and the variables available in this request.
<tt style='background-color:#E8E8E8;'> http.HttpRequest <a href=' /http/request.py#L191'>_get_scheme</a>()</tt>	Hook for subclasses like wsgirequest to implement returns 'http' by.
<tt style='background-color:#E8E8E8;'> http.HttpRequest <a href=' /http/request.py#L221'>encoding</a>(val)</tt>	Sets the encoding used for get/post accesses if the get or post.
<tt style='background-color:#E8E8E8;'> http.HttpRequest <a href=' /http/request.py#L251'>parse_file_upload</a>(META,post_data)</tt>	Returns a tuple of post querydict files multivaluedict.
<tt style='background-color:#E8E8E8;'> http.HttpRequest <a href=' /http/request.py#L283'>_load_post_and_files</a>()</tt>	Populate self _post and self _files if the content-type is a form type.
<tt style='background-color:#E8E8E8;'> http.QueryDict <a href=' /http/request.py#L406'>fromkeys</a>(cls,iterable,value,mutable)</tt>	Return a new querydict with keys may be repeated from an iterable and values from value.
<tt style='background-color:#E8E8E8;'> http.QueryDict <a href=' /http/request.py#L490'>copy</a>()</tt>	Returns a mutable copy of this object.
<tt style='background-color:#E8E8E8;'> http.QueryDict <a href=' /http/request.py#L494'>urlencode</a>(safe)</tt>	Returns an encoded string of all query string arguments.
<tt style='background-color:#E8E8E8;'> http. <a href=' /http/request.py#L527'>bytes_to_text</a>(s,encoding)</tt>	Converts basestring objects to unicode using the given encoding illegally.
<tt style='background-color:#E8E8E8;'> http. <a href=' /http/request.py#L541'>split_domain_port</a>(host)</tt>	Return a domain port tuple from a given host.
<tt style='background-color:#E8E8E8;'> http. <a href=' /http/request.py#L563'>validate_host</a>(host,allowed_hosts)</tt>	Validate the given host for this site.
<tt style='background-color:#E8E8E8;'> http. <a href=' /http/cookie.py#L59'>parse_cookie</a>(cookie)</tt>	Return a dictionary parsed from a cookie header string.
<tt style='background-color:#E8E8E8;'> http.MultiPartParser <a href=' /http/multipartparser.py#L55'>__init__</a>(META,input_data,upload_handlers,encoding)</tt>	Initialize the multipartparser object.
<tt style='background-color:#E8E8E8;'> http.MultiPartParser <a href=' /http/multipartparser.py#L106'>parse</a>()</tt>	Parse the post data and break it into a files multivaluedict and a post multivaluedict.
<tt style='background-color:#E8E8E8;'> http.MultiPartParser <a href=' /http/multipartparser.py#L295'>handle_file_complete</a>(old_field_name,counters)</tt>	Handle all the signaling that takes place when a file is complete.
<tt style='background-color:#E8E8E8;'> http.MultiPartParser <a href=' /http/multipartparser.py#L306'>IE_sanitize</a>(filename)</tt>	Cleanup filename from internet explorer full paths.
<tt style='background-color:#E8E8E8;'> http.LazyStream <a href=' /http/multipartparser.py#L327'>__init__</a>(producer,length)</tt>	Every lazystream must have a producer when instantiated.
<tt style='background-color:#E8E8E8;'> http.LazyStream <a href=' /http/multipartparser.py#L372'>__next__</a>()</tt>	Used when the exact number of bytes to read is unimportant.
<tt style='background-color:#E8E8E8;'> http.LazyStream <a href=' /http/multipartparser.py#L389'>close</a>()</tt>	Used to invalidate/disable this lazy stream.
<tt style='background-color:#E8E8E8;'> http.LazyStream <a href=' /http/multipartparser.py#L401'>unget</a>(bytes)</tt>	Places bytes back onto the front of the lazy stream.
<tt style='background-color:#E8E8E8;'> http.LazyStream <a href=' /http/multipartparser.py#L414'>_update_unget_history</a>(num_bytes)</tt>	Updates the unget history as a sanity check to see if we've pushed back the same number of bytes in one chunk.
<tt style='background-color:#E8E8E8;'> http.BoundaryIter <a href=' /http/multipartparser.py#L549'>_find_boundary</a>(data,eof)</tt>	Finds a multipart boundary in data.
<tt style='background-color:#E8E8E8;'> http. <a href=' /http/multipartparser.py#L575'>exhaust</a>(stream_or_iterable)</tt>	Exhaust an iterator or stream.
<tt style='background-color:#E8E8E8;'> http. <a href=' /http/multipartparser.py#L586'>parse_boundary_stream</a>(stream,max_header_size)</tt>	Parses one and exactly one stream that encapsulates a boundary.
<tt style='background-color:#E8E8E8;'> http. <a href=' /http/multipartparser.py#L657'>parse_header</a>(line)</tt>	Parse the header into a key-value.
<tt style='background-color:#E8E8E8;'> http.HttpResponseBase <a href=' /http/response.py#L94'>serialize_headers</a>()</tt>	Http headers as a bytestring.
<tt style='background-color:#E8E8E8;'> http.HttpResponseBase <a href=' /http/response.py#L114'>_convert_to_charset</a>(value,charset,mime_encode)</tt>	Converts headers key/value to ascii/latin-1 native strings.
<tt style='background-color:#E8E8E8;'> http.HttpResponseBase <a href=' /http/response.py#L164'>has_header</a>(header)</tt>	Case-insensitive check for a header.
<tt style='background-color:#E8E8E8;'> http.HttpResponseBase <a href=' /http/response.py#L176'>set_cookie</a>(key,value,max_age,expires)</tt>	Sets a cookie.
<tt style='background-color:#E8E8E8;'> http.HttpResponseBase <a href=' /http/response.py#L220'>setdefault</a>(key,value)</tt>	Sets a header unless it has already been set.
<tt style='background-color:#E8E8E8;'> http.HttpResponseBase <a href=' /http/response.py#L235'>make_bytes</a>(value)</tt>	Turn a value into a bytestring encoded in the output charset.
<tt style='background-color:#E8E8E8;'> http.HttpResponse <a href=' /http/response.py#L312'>serialize</a>()</tt>	Full http message including headers as a bytestring.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L58'>populate</a>(installed_apps)</tt>	Loads application configurations and models.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L120'>check_apps_ready</a>()</tt>	Raises an exception if all apps haven't been imported yet.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L127'>check_models_ready</a>()</tt>	Raises an exception if all models haven't been imported yet.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L134'>get_app_configs</a>()</tt>	Imports applications and returns an iterable of app configs.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L141'>get_app_config</a>(app_label)</tt>	Imports applications and returns an app config for the given label.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L159'>get_models</a>(include_auto_created,include_swapped)</tt>	Returns a list of all installed models.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L179'>get_model</a>(app_label,model_name,require_ready)</tt>	Returns the model matching the given app_label and model_name.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L229'>is_installed</a>(app_name)</tt>	Checks whether an application with this name exists in the registry.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L238'>get_containing_app_config</a>(object_name)</tt>	Look for an app config containing a given object.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L257'>get_registered_model</a>(app_label,model_name)</tt>	Similar to get_model(), but doesn't require that an app exists with the given app_label.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L271'>get_swappable_settings_name</a>(to_string)</tt>	For a given model string (e g "auth user"), return the name of the.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L293'>set_available_apps</a>(available)</tt>	Restricts the set of installed apps used by get_app_config[s].
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L320'>unset_available_apps</a>()</tt>	Cancels a previous call to set_available_apps().
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L327'>set_installed_apps</a>(installed)</tt>	Enables a different set of installed apps for get_app_config[s].
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L352'>unset_installed_apps</a>()</tt>	Cancels a previous call to set_installed_apps().
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L360'>clear_cache</a>()</tt>	Clears all internal caches for methods that alter the app registry.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L376'>lazy_model_operation</a>(function)</tt>	Take a function and a number of ("app_label", "modelname") tuples and when all the corresponding models have been imported and registered.
<tt style='background-color:#E8E8E8;'> apps.Apps <a href=' /apps/registry.py#L415'>do_pending_operations</a>(model)</tt>	Take a newly-prepared model and pass it to each function waiting for it.
<tt style='background-color:#E8E8E8;'> apps.AppConfig <a href=' /apps/config.py#L58'>_path_from_module</a>(module)</tt>	Attempt to determine app's filesystem path from its module.
<tt style='background-color:#E8E8E8;'> apps.AppConfig <a href=' /apps/config.py#L85'>create</a>(cls,entry)</tt>	Factory that creates an app config from an entry in installed_apps.
<tt style='background-color:#E8E8E8;'> apps.AppConfig <a href=' /apps/config.py#L158'>get_model</a>(model_name,require_ready)</tt>	Returns the model with the given case-insensitive model_name.
<tt style='background-color:#E8E8E8;'> apps.AppConfig <a href=' /apps/config.py#L174'>get_models</a>(include_auto_created,include_swapped)</tt>	Returns an iterable of models.
<tt style='background-color:#E8E8E8;'> apps.AppConfig <a href=' /apps/config.py#L204'>ready</a>()</tt>	Override this method in subclasses to run code when django starts.
