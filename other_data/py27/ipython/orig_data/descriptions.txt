code	management saving related loading code magics editing
partial	ipython lexer partial tracebacks
help	helpformatter meet couple changes needs
chain	"add" commands handle calls chain instantiate execute dispatch add func usage optional (with
text	default text display validate data pretty-printer
osmagics	interact shell-type underlying functionality magics os
pylab	matplotlib's support pylab related magics
dollar	style names itpl attribute access allowing $foo formatter replacement
syntax	exception last extension holds value state
colorable	default_scheme classes subclass configurable
manager	organize sequence manage one prefilter manager 5 magic-related since copies 0 handles functionality extensions main events history-related jobs warnings upon object component collection callbacks ipython class pool threaded restores exiting filter place context deprecated backgrounded
stateless	function stateless transformer wrapper input implemented
unicode	separate_out subclass etc unicode separate_in validate
captured	containing stdout/err stringio simple object c three instance objects rich attributes display captured
completion	object split input line similar readline manner
syspath	appending sys second context directory path prepending
transformer	function stateless transformer transformers coroutine abstract transform wrapper token-based base user line-based input line implemented class
group	keywords add_argument_group() arguments store pass
struct	access attribute style dict subclass
la	latex tool object configuration store
appended	appending sys second context directory path
console	ipython code-blocks lexer console doctests
to	appending sys second context directory path prepending
rich	prompt subclass coloured hook base using display
usage	function etc magic arguments error
input	since color abstract sequences syntax ipython token-based ipython's escape implemented special transformer 0 ast wrapper source 5 input function transformers coroutine python object rejected base line-based accumulate execution class stateless splitter deprecated lines prompts recognizes
logger	different policies creation file logfile class
compiler	code statements compiled compiler interactive caches
tb	listtb holds shorthand color text module colors linux port ka-ping information yee's py subclass state print instead printer formattedtb outputs cgitb initialize optional fly exception last extension traceback list value calling mode allow called
vimeo	based vimeo id session video embedding ipython class
crash	detailed crash handlers customizable leaves sys applications report ipython excepthook disk
evaluate	updated used working current directory formatting values time need strings
void	used & - private signature marker parameter
db	dummy db black act hole history
tbtools	used traceback classes basic tools printer
background	classes function threaded jobs thread separate evaluate manage backgroundjob job base uses build background call run backgrounded expression class pool
not	requested use kernels may raw_input supported context ipython support frontends
execution	debugging code run_cell related :meth etc profiling call result magics execution interactiveshell
decorator	information argumentparser method add base decorators class
mod	dummy used module's namespace module assigned ipython's __dict__ must interactive
splitter	splitter python object lines syntax source ipython's split recognizes accumulate input line execution similar readline special manner
term	color input prompts sequences escape
magic	function tweaked needs magic magics argparse ipython couple use argumentparser mark possibly alias adjust arguments another helpformatter meet changes name
auto	fly control behaviors printer traceback various magics autox called
mixin	use less demo make visual classes clutter mixin
parameter	function represents parameter signature
list	information color traceback list print optional
colors	easily turn color colour escape colours maps prompts classes names substituted sequences input strings empty defines
try	try hook exception next
token	input token-based transformer wrapper
trap	manage sys object displayhook
defaults	keywords set_defaults() arguments store pass
expr	thread separate evaluate job uses background expression
output	manager stdout/err capturing context
htmlformatter	html formatter
tracer	debugging deprecated class local similar pdb
dir	manage profile object directory resources
slist	access derivative list special attributes
ptcompleter	adaptor provide prompt_toolkit ipython completions
win32shell	'with' runs shell command context
tee	output duplicate stdout/err class stream
prefilter	return inspect component transform prefilter handler user input line main
printer	representationprinter used calls python printer object reprs method objects pretty prettyprinter baseclass generate special
video	based vimeo youtube id session video embedding ipython class
result	info timeit magic returned run_cell object :meth call result run interactiveshell
arg	information argumentparser method add base wrapper decorators class define
implemented	requested use kernels may raw_input supported context ipython support frontends
event	callbacks manage events collection sequence
prompt	prompt subclass coloured hook base using display
denier	qt imports bad hook guard import
timeit	info timeit run returned ast object template timing magic execution fill
abc	interactiveshell abstract base class formatters
filler	timing execution ast template fill
avoid	paths protect manager unc command context execution
formatted	listtb fly printer traceback subclass calling allow called
importer	import shim hook
xtool	latex tool object configuration store
exit	quit added shell exit(), object namespace ways valid exit user close quit() autocallable
jpegformatter	formatter jpeg
template	timing execution ast template fill
import	qt imports bad hook guard import
formatter	markdown simple attribute abstract warning names helpformatter expressions needs errors configurable access formatter evaluation pretty-printer string couple javascript style objects know replacement class latex default allows formatters base $foo meet itpl changes display allowing
method	argumentparser class base wrapper method define
preserve	preserve keys set dictionary
lazy	updated used working current directory formatting values time need strings
full	string simple allows expressions formatter evaluation
iframe	generic notebook iframe ipython embed class
javascript	javascript formatter
job	classes function threaded jobs thread separate evaluate manage backgroundjob job base uses build background call run backgrounded expression class pool
base	classes accessors deprecated abstract since configurable backgroundjob 0 base 5 build ipython formatter class history
no	easily context turn deprecated colour colours maps manager classes names substituted nothing strings empty defines
ipython	traceback partial completions syntax demos ipython's bashlexer special whose console provide doctests wrapper linedemo input formatter around code-blocks adaptor processing variant objects know ipython class tracebacks applied splitter prompt_toolkit lexer pythonlexer processed recognizes display interactive
tz	tzinfo utc zero object offset
dispatcher	"add" commands handle calls chain instantiate execute dispatch add func usage optional (with
ipapp	detailed leaves sys ipython report excepthook disk
publisher	traited publishes stores display displaypublisher data class frontends
logging	logging related magics machinery
kwds	provide keywords sub-parser constructor
extension	manage system extensions magics ipython class
traceback	ipython traceback lexer partial tracebacks
timer	self timer explicitly uses inner class
zmqexit	needn't called explicitly exit ipython autocallable
context	nothing deprecated manager context
signature	function represents object overall signature
history	happens adding ui organize accessors thread database abstract takes history-related one access held without functionality writing place care class isn't history
provisional	warning unstable class features
op	nothing deprecated manager context
markdown	markdown formatter
saving	happens takes thread database writing held ui care isn't history
verbose	yee's outputs py module cgitb color text instead port ka-ping
color	formattedtb schemes shorthand name tables generic general color colors mode linux initialize handle scheme class struct
app	applications interactiveshell instances mixin start
bound	bind holds mapping call result signature :meth arguments
dispatch	set regexps dispatch lookup / strings match
loader	python profiles aware file ipython loader config
hook	prompt 0 displayhook deprecated coloured since subclass replace sys hook base 5 ipython using custom display
svgformatter	svg formatter
magics	control debugging code saving %%script variables pylab javascript/latex/svg/html related talking profiling magics lightweight displaying inputhookcontext defines magic-related management literals provide support namespace system writing cell instance handles added functionality various loading persistence manage aspects python user's editing object functions implementing running base logging scripts ipython central autox execution placeholder class types behaviors magic user-defined etc extensions machinery output runtime matplotlib's
table	tables schemes handle color general class
message	single holds call result showwarning()
ipy	happens code regardless autocalled always lexer primary ipython-like instances state 'autocall' variable class
autocall	regardless autocalled instances shell close happens quit ways namespace state valid exit 'autocall' added object user variable class explicitly exit(), always called needn't quit() ipython autocallable
working	creates directory temporary cwd sets
script	magic %%script cell talking running base magics scripts defines
json	string already-serialized list expects json dict json-able
wrapper	argumentparser class base wrapper method define
next	try hook exception next
process	control subprocesses execute pexpect
checker	handler input line inspect return
handler	control subprocesses execute crash handlers customizable leaves detailed sys applications report ipython pexpect excepthook disk
pngformatter	formatter png
basic	provide ipython functionality central magics
scheme	tables schemes handle struct generic general color scheme class name
store	python variables persistence lightweight
shell	instance shell run mixin embedded instances python interactiveshell inside abstract class applications base enhanced ipython sphinx start interactive
pretty	representationprinter used reprs objects pretty prettyprinter baseclass generate
coroutine	input transformer implemented wrapper coroutine
rejected	input transformer rejected ast
aware	python profiles aware file ipython loader config
failure	exception raise plugin installs knownfailureclass failing mark known knownfail error test class
controller	'with' runs shell command context
link	based embedding session link file ipython path local class e
ptlexer	bashlexer around wrapper pythonlexer
func	function run thread separate job call background uses
known	exception raise plugin installs knownfailureclass failing mark known knownfail error test class
sphinx	run embedded inside instance ipython sphinx
line	info whose executed associated separate demo variant single processed linedemo ipython input line class block
capturing	displaypublisher stores
info	info input single associated line
utc	tzinfo utc zero object offset
te	latex tool object configuration store
thread	happens takes thread database writing held ui care isn't history
embedded	run embedded inside instance ipython sphinx
plain	default pretty-printer
str	set regexps dispatch lookup / strings match
error	function requested use magic kernels may raw_input supported etc arguments context error ipython support frontends
prepended	sys second context directory path prepending
display	stores text manage displayed replace hook magics prompt displaypublisher writing displaying defines traited wraps literals subclass custom cell various types formatter javascript/latex/svg/html object coloured sys objects know ipython using validate data class frontends publishes displayhook base output display
interactive	shell mixin instances python interactiveshell abstract class applications base enhanced start interactive
lsstring	access derivative string special attributes
lexer	code-blocks lexer partial traceback doctests primary code ipython console ipython-like tracebacks
pdfformatter	pdf formatter
file	based embedding links session link file ipython path local class e
links	based embedding links session file ipython path local class e
shim	shim show moved module hook warning place import
defined	defined variable exception interactively magic_edit
demo	applied whose executed separate demo processing variant demos ipython's processed linedemo ipython input line class block interactive
uncpath	paths protect manager unc command context execution
parser	tweaked use colored format python argumentparser source magics ipython
argument	tweaked use add_argument() argumentparser add_argument_group() keywords arguments magics pass ipython store
warning	features show moved module manager warning shim result exiting errors holds copies class call place warnings upon showwarning() restores single formatters filter unstable context
io	containing stdout/err stringio simple object c three instance objects rich attributes display captured
null	ipython deprecated since 5 0
capture	manager stdout/err capturing context
jsonformatter	json formatter string
namespace	aspects user's manage namespace various magics
scribd	use start_page point scribd session params embedding ipython document starting class specify
accessor	adding accessors database abstract access without class history
arguments	argparse magic name bind holds mapping mark possibly adjust call arguments signature :meth result
ipcompleter	ipython-specific completer class extension features
test	exception raise failing mark known test
you	based youtube id session video embedding ipython class
document	use start_page point scribd session params embedding ipython document starting class specify
config	python profiles aware file ipython loader config
profile	profile object python manage profiles loader ipython file directory aware config resources
latex	latex formatter
temporary	creates directory temporary cwd sets
separate	separate_out subclass etc unicode separate_in validate
keys	preserve keys set dictionary
object	wraps text object displayed validate data display
directory	creates directory temporary cwd sets
user	added placeholder user-defined magics runtime
eval	string simple allows expressions formatter evaluation
dummy	dummy used module's db namespace module assigned history ipython's act __dict__ black hole must interactive
interactively	defined variable exception interactively magic_edit
macro	simple value class macros strings store
clear	use less demo make visual classes clutter mixin
stdin	requested use kernels may raw_input supported context ipython support frontends
pdb	load class readline modified pdb
alias	function storing magic object one callable alias details another
command	"add" context commands runs handle calls chain 'with' instantiate execute dispatch add shell command func usage optional (with
caching	code statements compiled compiler interactive caches
representation	printer calls python object pretty method special
audio	create audio object
tube	based youtube id session video embedding ipython class
