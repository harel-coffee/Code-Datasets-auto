function	all nodes upstream from ||| upstream nodes	count=1
function	the position of the ||| position	count=1
module	and sink nodes channels ||| document	count=1
module_class	(:class [class_2] ||| [module_1] [class_2]	count=4
function_arg	[function_1] the action ||| [arg_2] [function_1]	count=4
function	[function_1] wildcard filtering ||| [function_1] [function_2]	count=1
function	rectangle ||| rectangle	count=1
function	a runtime [function_2] ||| [function_2] [function_1]	count=1
function	invert the ||| invert	count=1
class	editor ||| widget	count=1
class	row ||| mosaic viz rank	count=1
class	the node title ||| node	count=1
function	cache [function_2] ||| [function_2] [function_1]	count=2
function	add a [function_2] ||| [function_2] [function_1]	count=2
function	the channels ||| channels	count=1
function	widget instance is visible ||| widget visible	count=1
module	the widgets ||| widgets	count=1
function	a wide format ||| wide	count=1
function	for setting the user ||| user	count=1
module	a ||| widgets data utils	count=2
module	current :attr ||| utils plot	count=1
module_class	a [module_1] [class_2] ||| [module_1] [class_2]	count=4
arg	variable on ||| variable	count=1
function	reflect the ||| node processing	count=1
function	the progress [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] [arg_2] ||| [arg_2] pos [arg_1]	count=4
function_arg	[function_1] the cs ||| [arg_2] [function_1]	count=1
function	[function_1] the diagonal ||| [function_1] [function_2]	count=1
function	current :attr ||| selection	count=1
function	qpainterpath 'styled' to indicate ||| path	count=1
function	to a [function_2] ||| [function_1] [function_2]	count=1
arg	title to list ||| title	count=1
class	remove ||| remove	count=1
function	pixmap if ||| pixmap	count=1
module	and return it's ||| canvas document	count=1
module	that belong to it ||| widgets utils	count=1
class	buttons [class_2] ||| [class_1] [class_2]	count=1
function	a wildcard [function_2] ||| [function_2] [function_1]	count=2
module	scheme ||| scheme	count=3
module	state source and sink ||| document	count=1
function	settings ||| settings	count=3
function_arg	[function_1] button ||| [arg_2] [function_1]	count=2
function	a helper function for ||| tip helper	count=1
function	if a category with ||| category	count=1
function	pause the updates ||| pause	count=1
class	flattening ||| tree item model	count=1
function	number of buttons/actions in ||| count	count=1
arg	the node ||| node	count=5
class	over the dendrogram ||| dendrogram	count=2
function_arg	layout the [arg_2] ||| [arg_2] [function_1]	count=4
function	register a ||| register category	count=1
class	state source and sink ||| links edit	count=1
class	apply an [class] given ||| [class]	count=1
function	save the model ||| save	count=1
function	into a wide ||| wide	count=1
class	and sink ||| links edit widget	count=1
module_class	[module_1] control ||| [module_1] [class_2]	count=2
module	return return the application ||| canvas canvas	count=1
function	for a disjoint set ||| disjoint set	count=1
module	from plot ||| utils plot	count=1
module	of the ||| widgets	count=1
module	widget ||| canvas scheme	count=2
function	[function_1] color for ||| [function_2] [function_1]	count=6
function_arg	a message [arg_2] ||| [arg_2] [function_1]	count=2
class	imputation method ||| impute	count=1
function	single [function] can have ||| set main [function]	count=1
function	[function_1] wildcard ||| [function_1] filter [function_2]	count=1
class	the entropy ||| entropy	count=1
function	visible columns ||| visible score columns	count=2
function	quick [function_2] ||| [function_1] [function_2]	count=4
arg	row and j-th ||| i j	count=1
function	[function_1] data ||| [function_2] [function_1]	count=4
class	new ||| new link action	count=1
function	params of ||| get params	count=1
function	main application icon ||| application icon	count=2
module	return return the ||| canvas canvas items	count=1
function	forgets [function_2] ||| [function_2] [function_1]	count=2
function	new node with ||| new	count=1
function_arg	stats for [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] tree structure ||| [function_1] [arg_2]	count=1
class	[class_1] the scheme ||| [class_2] [class_1]	count=2
class	create ||| quick category toolbar	count=1
function_arg	[function_1] item ||| [function_1] [arg_2]	count=7
function	checkable qaction for help ||| help action	count=1
function	a helper ||| helper	count=1
function	same ||| add	count=1
arg	qobject instance obj ||| obj name	count=1
arg	given in indices ||| indices	count=1
function	selection finished ||| selection finish	count=1
module	the current :attr selection_behavior ||| widgets	count=1
class	finish the interaction ||| interaction	count=1
arg	[arg_1] count cells ||| [arg_2] [arg_1]	count=3
class	[class_1] model ||| [class_1] [class_2]	count=3
function_arg	is the same mean [function_1] [arg_2] ||| regression mean model [function_1] [arg_2]	count=1
function	value of ||| combo value	count=1
function	remove a link (:class ||| remove link item	count=1
function	create and add ||| add	count=1
function_arg	[function_1] for adding ||| [arg_2] [function_1]	count=1
function	position of the ||| position	count=1
function_arg	selection finished [arg_2] ||| [arg_2] [function_1]	count=3
class	current :attr ||| owplot	count=1
function	[function_1] link ||| [function_1] [function_2]	count=2
function	the legend visibility ||| show legend	count=2
class	imputation method to ||| impute	count=1
function	a subset ||| subset	count=1
function	sink ||| sink	count=2
function	[function_1] input ||| cursor [function_1] [function_2]	count=1
arg	and execute ||| source_node sink_node initial_links	count=1
function	modified time as ||| module modified time	count=2
arg	node for regression trees ||| node	count=1
module	platform dependent orange ||| misc	count=1
class	and sink nodes ||| edit widget	count=1
function	the tool [function_2] ||| [function_1] [function_2]	count=1
module	render ||| canvas report	count=1
class	randomization of the ||| randomize	count=1
class	point ||| point rect	count=1
arg	model to filename ||| filename	count=1
function	the qaction ||| action	count=1
arg	:class qgraphicsscene scene ||| scene	count=1
class	qrect) in which to ||| splash screen	count=1
function	a runtime [function_2] ||| [function_1] [function_2]	count=1
module	editor state source and ||| canvas	count=1
arg	helper function ||| icon	count=1
function	a brief description ||| data brief	count=1
class	[class_1] shadow's ||| [class_2] [class_1]	count=1
class	the :class ~ ||| edit widget	count=1
function	in the completer ||| update completer	count=1
class	set ||| bar widget	count=3
function	have a valid ||| has valid	count=1
module	an ||| scheme	count=1
function	:attr ||| update	count=1
module	the current :attr ||| widgets utils	count=1
module_class	widget [class_2] ||| [module_1] [class_2]	count=2
class	for the tool ||| widget tool	count=2
class	[class_1] model into ||| [class_1] [class_2]	count=3
arg	data instances ||| e2	count=1
function_arg	the dissimilarity [arg_2] ||| [function_1] [arg_2]	count=1
class	[class_1] widget in ||| [class_1] [class_2]	count=3
class	widget action (from ||| widget	count=1
function	[function_1] enabled ||| [function_1] [function_2]	count=1
arg	descriptor ||| descriptor attrs	count=1
class	item draws it self ||| node anchor item	count=1
class	in the stack ||| stack widget	count=1
function	channel names visibility state ||| channel names visible	count=1
function_arg	[function_1] [arg_2] ||| [function_1] at scene pos [arg_2]	count=2
function_arg	select a [arg_2] ||| [function_1] view [arg_2]	count=2
class	[class_1] point ||| [class_2] [class_1]	count=2
function	[function_1] width ||| [function_1] [function_2]	count=2
function	the dynamic link ||| set dynamic	count=1
function_arg	[function_1] description ||| [function_1] module mtime [arg_2]	count=1
function	qaction [function_2] ||| [function_1] [function_2]	count=4
function	the value of :attr ||| update	count=1
class	entropy of distributions ||| entropy	count=1
module	and hides the plot ||| utils plot	count=1
class	the interaction ||| interaction	count=1
function	nodes in a ||| nodes	count=1
module	return the widget ||| canvas	count=1
module_class	[module_1] discretization of ||| [module_1] [class_2]	count=2
function	paint ||| paint	count=2
function	source model ||| source model	count=1
function	fix size so it ||| fix	count=1
function	set action to ||| set	count=1
function	permanent ||| show permanent	count=1
class	drop shadow's ||| drop shadow frame	count=1
function_arg	[function_1] [arg_2] ||| [function_1] data [arg_2]	count=1
arg	number into the ||| number suffix capitalize	count=1
function_arg	[function_1] page ||| [function_1] name [arg_2]	count=1
module	tooltip ||| utils plot	count=1
class	arrow as a ||| arrow	count=1
class	the toolbar ||| quick category toolbar	count=1
function_arg	[function_1] obj type ||| [arg_2] [function_1]	count=3
module	to [module_2] ||| [module_2] [module_1]	count=2
function_arg	started [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] the icon ||| [function_1] [function_2]	count=1
function	render a sequence of ||| render	count=1
arg	by group_var [arg_2] ||| [arg_1] [arg_2]	count=1
function	to the max ||| max	count=1
function	create the [function_2] ||| [function_2] [function_1]	count=5
arg	item as a ||| item	count=1
class	in the scheme ||| scheme edit widget	count=1
function	find an ||| find	count=1
arg	description desc into ||| desc	count=1
arg	x_axis [arg_2] ||| [arg_1] [arg_2]	count=1
class	shadow ||| shadow frame	count=1
function	the quick ||| quick	count=2
module	is present and ||| visualize	count=1
class	buttons to ||| resize tool	count=1
module	stored in the widgets ||| widgets data	count=1
function	label for ||| label	count=1
class	fit inside ||| bar	count=1
function	a brief ||| data brief	count=1
class	channels ||| links	count=1
arg	box with controls for ||| box	count=2
module	the plot ||| plot	count=3
arg	the index ||| index	count=1
function_arg	[function_1] [arg_2] ||| [function_1] ows stream [arg_2]	count=8
function	common plot ||| plot	count=1
function	old ows ||| v 1 0	count=1
class	forest ||| forest adapter	count=1
class	from source property ||| property	count=1
arg	[arg_1] [arg_2] ||| [arg_1] background [arg_2]	count=3
function	end the [function_2] ||| [function_1] [function_2]	count=4
module	all points ||| plot	count=1
function	save the model to ||| save	count=1
function	help ||| on help	count=1
module	a preview ||| preview	count=1
function	title text ||| title text	count=2
class	compute the entropy ||| entropy	count=1
function	[function_1] is visible ||| [function_1] [function_2]	count=1
class	item ||| link item	count=1
class	[class_1] as a ||| [class_1] [class_2]	count=4
module	the entire graph ||| widgets	count=1
arg	output ||| output	count=2
function	rectangle using ||| rectangle	count=1
function_arg	entropy of [arg_2] ||| [arg_2] [function_1]	count=2
class	discretization of ||| discretize	count=1
function	with a brief description ||| brief	count=1
function	find a ||| find	count=1
function	number of buttons/actions ||| count	count=1
function	restore any leftover ||| end	count=1
module	of the ||| widgets utils	count=1
function	(as a qbytearray) ||| save	count=1
module	current ||| plot	count=2
function	[function_1] learner for ||| [function_2] [function_1]	count=1
function	remove ||| remove node	count=2
function	features ||| set input features	count=1
module	schemenode) to the document ||| canvas document	count=1
function_arg	raw html ||| raw name html	count=1
module	to row ||| widgets	count=1
function	nodeitem) neighbor nodes ||| neighbor nodes	count=2
function	the icon ||| icon	count=1
arg	sourcerow from ||| sourcerow	count=1
class	source and sink ||| links edit widget	count=1
class	set ||| paged menu	count=1
function_arg	[function_1] color ||| [arg_2] [function_1]	count=1
function	of [function_2] ||| [function_2] [function_1]	count=4
function	the source/sink nodes ||| nodes	count=2
module	and return its ||| canvas gui	count=1
function	remove ||| remove action	count=1
module	schemenode) to the ||| canvas	count=1
function	visible inside the ||| visible	count=1
function	tree adapters in the ||| trees	count=1
class	text item ||| link item	count=1
function	label for [function_2] ||| [function_2] [function_1]	count=3
function	line [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] a subset ||| [function_2] [function_1]	count=1
arg	color [arg_2] ||| [arg_2] [arg_1]	count=7
arg	[arg_1] index ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] index from ||| [function_1] [arg_2]	count=3
function	in scene ||| scene	count=1
function	fragments for drawing ||| pixmap fragments	count=1
module	the editor state ||| document	count=1
module_class	[module_1] view ||| [module_1] [class_2]	count=2
function	[function] name ||| [function] name	count=3
function	set the quick ||| set quick	count=2
function	[function_1] paths for ||| [function_2] [function_1]	count=1
function	compute confusion [function_2] ||| [function_2] [function_1]	count=1
function	clear the editor ||| clear	count=1
module	items that belong to ||| widgets utils	count=1
function	create a qaction ||| create action	count=3
function_arg	[function_1] rows ||| [arg_2] [function_1]	count=2
arg	[arg_1] by group_var ||| [arg_2] [arg_1]	count=2
function	pen ||| pen	count=1
function	key for ||| index key	count=1
function_arg	[function_1] sourcerow from ||| [function_1] sourceparent [arg_2]	count=1
class	base ||| annotation	count=3
arg	given size [arg_2] ||| [arg_2] [arg_1]	count=1
function	a wide ||| wide	count=1
function	processing state flags ||| processing state	count=1
class	cached shadow ||| drop shadow frame	count=1
function	[function_1] environment variable ||| [function_1] [function_2]	count=3
arg	input keys ||| keys incremental	count=1
class	the computation ||| future watcher	count=1
function	box of the central ||| central	count=1
module_class	[module_1] anchor ||| [class_2] [module_1]	count=1
module	current ||| widgets utils	count=2
module	of ||| widgets utils	count=3
function_arg	[function_1] from stream ||| [function_1] scheme scheme [arg_2]	count=1
function	update the pixmap if ||| update pixmap	count=1
module	the ||| canvas items	count=5
module	filtering ||| canvas document	count=1
module	value ||| widgets	count=1
arg	scheme connected to the ||| scheme	count=1
function	[function_1] links ||| [function_1] [function_2]	count=1
class	heatmap rows which belong ||| heatmap	count=1
module	it to the ||| widgets utils plot	count=2
function	[function_1] line ||| cursor [function_1] [function_2]	count=1
function	remove a [function_2] ||| [function_1] [function_2]	count=4
function	the rectangle selection ||| rectangle selection	count=2
module	current :attr selection_behavior ||| utils plot	count=1
module	selects all points ||| plot	count=1
arg	output [arg_2] ||| [arg_1] [arg_2]	count=2
function	an [function_2] ||| [function_2] [function_1]	count=1
function	clusters ||| clusters	count=1
class	and sink ||| edit	count=1
function	compress ||| compress signals	count=2
function	widget description ||| widget desc to	count=1
function	learner params ||| get params	count=1
function	[function_1] names ||| [function_2] [function_1]	count=3
function	with a brief ||| brief	count=1
function	the value of ||| update	count=1
module	return an :obj ||| canvas	count=1
arg	name should ||| names name	count=1
class	into the grid ||| widget tool grid	count=1
module	return an existing ||| canvas	count=1
function	formated label ||| label	count=1
arg	in row in position ||| row	count=1
function	remove all links ||| remove node links	count=1
arg	pattern only items ||| pattern	count=1
function	distributions with discrete ||| distributions	count=1
module	all points in the ||| widgets utils	count=1
function	remove the ||| remove	count=5
class	a widget action ||| widget tool	count=1
arg	[arg_1] weight background ||| [arg_1] [arg_2]	count=3
function	properties ||| properties box	count=2
function	shape ||| shape	count=2
function	lines in the display ||| lines	count=1
class	geometry of the item ||| resize arrow annotation	count=1
function	the ||| add selection	count=2
module	add and [module] a ||| [module]	count=1
class	widget and scene ||| links edit widget	count=1
function	a control point ||| control point	count=2
function	fix [function_2] ||| [function_1] [function_2]	count=3
module	of ||| widgets utils plot	count=2
function	the scene ||| scene	count=1
arg	the output and ||| output	count=1
function	be ||| valid data	count=1
function	scheme scheme ||| scheme	count=1
module	value of :attr ||| widgets utils plot	count=1
function	node meta description ||| node meta	count=2
function	[function_1] channel ||| [function_1] [function_2]	count=1
function	and modified ||| module modified	count=1
function	iterator over widget ||| iter widget	count=2
function_arg	[function_1] [arg_2] ||| [function_1] sourceparent [arg_2]	count=8
function_arg	[function_1] sourcerow from ||| [arg_2] [function_1]	count=1
function	source ||| source	count=2
function	[function_1] a state ||| [function_2] [function_1]	count=1
function	is visible ||| visible	count=1
function	the value of a ||| combo value	count=1
arg	for the action from ||| action	count=1
function_arg	entropy of [arg_2] ||| [function_1] cls d [arg_2]	count=1
class	future ||| future	count=1
function	register a :class ||| register	count=2
function_arg	[function_1] node ||| [function_1] instance [arg_2]	count=1
function	update the cached ||| update	count=1
function	should the geometry ||| geometry	count=1
function	callback function immediately after ||| progress advance callback	count=1
arg	row in ||| row	count=1
function	source/sink nodes ||| nodes	count=2
arg	[arg_1] and buttons ||| [arg_2] [arg_1]	count=2
function	[function_1] [function_2] inside volume specified by ||| [function_1] [function_2]	count=1
arg	links [arg_2] ||| [arg_2] [arg_1]	count=2
class	[class_1] base point ||| [class_1] [class_2]	count=3
function	nodes in breadth first ||| nodes	count=1
arg	model ||| model	count=1
module	if ||| widgets utils	count=1
module	:obj orange data value ||| data	count=1
function	set to [function_2] ||| [function_1] auto adjust [function_2]	count=1
arg	name of an obj ||| obj name parent	count=1
function	[function_1] position ||| [function_2] [function_1]	count=2
function	a tool [function_2] ||| [function_2] [function_1]	count=3
class	current :attr selection_behavior ||| owplot	count=1
function	[function_1] new widget ||| [function_1] [function_2]	count=1
class	arrow as a string ||| arrow annotation	count=1
module_class	[module_1] scheme ||| [module_1] [class_2]	count=4
arg	of checkable buttons ||| orientation buttons widget nomargin	count=1
function	tuple ||| tuple	count=1
class	the rule passes ||| rule	count=2
module	updates the current ||| widgets utils plot	count=1
class	the current :attr ||| owplot	count=1
class	reload ||| owload model	count=1
function	[function_1] depth ||| [function_1] [function_2]	count=5
function	a default [function_2] ||| [function_2] [function_1]	count=4
class	following an [class_2] ||| [class_2] [class_1]	count=6
module	dictionary ||| widgets data utils	count=2
function	the tool button ||| tool button	count=2
function	fragments ||| pixmap fragments	count=1
arg	a module ||| module widget_name category_name distribution	count=1
class	heatmap rows which ||| heatmap	count=1
function	channels in ||| channels	count=1
class	item draws it self ||| item	count=1
function	a hash value that ||| hash dist	count=1
function	[function_1] icon ||| [function_1] [function_2]	count=8
function	a qaction ||| action	count=1
module	the ||| data utils	count=2
function	the widget ||| widget desc to std	count=1
function	[function] item if ||| ensure [function]	count=3
class	the dock (same as ||| collapsible dock	count=1
function	return the source ||| source	count=1
function	list of [function_2] ||| [function_2] [function_1]	count=4
class	a list ||| list	count=1
arg	input ||| input	count=1
function	all links ||| links	count=1
class	instance [class] ||| [class]	count=1
module	the entire ||| widgets utils	count=1
module	editor state ||| canvas document	count=1
class	source ||| item	count=1
function	tab ||| tab	count=5
arg	[arg_1] into the ||| [arg_2] [arg_1]	count=4
function	points in the ||| add	count=1
arg	table ||| table varlist idvarlist groupvarlist	count=1
function	from a ||| from data	count=1
function	quick help [function_2] ||| [function_1] [function_2]	count=1
function	set the item ||| set	count=1
function	set ||| set filter reg exp	count=1
function	clear the ||| clear progress advance	count=1
arg	qt model or a ||| model selected	count=1
function	the current ||| selection	count=1
function_arg	[function_1] sourcerow ||| [arg_2] [function_1]	count=1
class	process ||| widgets signal manager	count=1
function_arg	size [arg_2] ||| [function_1] size [arg_2]	count=1
function	[function_1] for column ||| [function_2] [function_1]	count=1
function	can the a dynamic ||| can enable dynamic	count=1
function_arg	[function_1] page ||| [arg_2] [function_1]	count=3
module	a qpainterpath ||| canvas canvas items	count=2
function	help ||| help action	count=2
function	information entropy induced ||| entropy	count=1
arg	the page (:class menupage) ||| page	count=1
arg	selection state ||| state	count=1
class	inside sloppy ||| bar widget	count=1
function_arg	[function_1] for data ||| [arg_2] [function_1]	count=1
class	data ||| data	count=1
function	[function_1] off-diagonal elements ||| [function_1] [function_2]	count=1
function	temp line target ||| link target	count=1
function_arg	rows starting [arg_2] ||| [arg_2] [function_1]	count=2
class	from the ||| canvas	count=3
module	[module_1] an ||| [module_1] [module_2]	count=2
class	the current ||| owplot	count=2
class	buttons ||| dynamic resize tool	count=1
module	channels ||| document	count=1
function	disable ||| disable	count=1
function_arg	[function_1] viewport ||| [arg_2] [function_1]	count=3
function_arg	[function_1] description ||| [arg_2] [function_1]	count=1
class	to selection ||| heatmap selection	count=1
function	the value ||| update	count=1
class	update ||| signal	count=1
function	the qaction instance for ||| action for	count=1
module	qmodelindex) ||| widgets data utils	count=1
function	quick [function_2] ||| [function_2] [function_1]	count=4
class	grid lines ||| grid	count=2
function_arg	tab at [arg_2] ||| [function_1] [arg_2]	count=1
arg	resulting data table ||| data	count=1
module_class	fixed [class_2] ||| [module_1] [class_2]	count=2
function	the [function] the ||| [function]	count=1
class	a tooltip with ||| tooltip manager	count=1
function	position ||| pos	count=3
function_arg	channels [arg_2] ||| [arg_2] [function_1]	count=1
function	selection updated ||| selection update	count=1
arg	by group_var group_key ||| group_var group_key	count=2
arg	title at index ||| index widget title	count=1
class	in the view ||| zoomable graphics view	count=1
arg	given [arg_2] ||| [arg_2] [arg_1]	count=2
function	critical message ||| message critical	count=1
class	return the ||| future	count=1
function	scheme to a ||| to	count=1
function	a critical message ||| message critical	count=1
function	owwidget ||| owwidget	count=1
function	local ||| at	count=1
function	channel names ||| channel names	count=2
class	if a tooltip with ||| tooltip manager	count=1
arg	number into the ||| number	count=2
function	reset the sloppy timeout ||| sloppy	count=1
function	nodeitem) neighbor [function_2] ||| [function_1] [function_2]	count=1
class	model ||| model	count=1
function	[function] model with ||| [function]	count=3
function	modified [function_2] ||| [function_2] [function_1]	count=3
class	set ||| item model	count=1
class	nodeitem) use ||| link	count=1
arg	for data split ||| data	count=1
function_arg	[function_1] a stream ||| [arg_2] [function_1]	count=3
function	cursor [function_1] [function_2] ||| [function_1] [function_2]	count=8
class	source ||| links	count=1
module_class	[module_1] [class_2] ||| [module_1] stack [class_2]	count=1
function	[function_1] columns ||| [function_2] [function_1]	count=3
arg	start_node (i ||| start_node	count=1
arg	policy and [arg_2] ||| [arg_2] [arg_1]	count=3
function	[function_1] the max ||| [function_2] [function_1]	count=1
class	buttons [class_2] ||| [class_2] [class_1]	count=1
function	path ||| path	count=1
module_class	[module_1] [class_2] ||| [module_1] gui [class_2]	count=1
class	instance that was previously ||| canvas scene	count=1
function	select a ||| select row	count=1
function_arg	[function_1] indexed ||| [arg_2] [function_1]	count=8
function_arg	value of [arg_2] ||| [arg_2] [function_1]	count=2
class	and ||| edit	count=1
function	replot ||| replot	count=1
module	and sink nodes ||| canvas document	count=1
function	subset of ||| subset	count=1
arg	if include_more_link is ||| desc include_more_link	count=1
class	signalmanager ||| widgets signal manager	count=1
function	[function_1] items ||| [function_2] [function_1]	count=1
module	and return its index ||| canvas	count=1
function	key ||| index key	count=1
function	likelihood [function_2] ||| [function_1] [function_2]	count=5
function	of indices ||| indices	count=2
function	removes all ||| remove all	count=1
class	[class_1] base ||| [class_1] [class_2]	count=5
arg	action from the ||| action	count=2
function	if set to ||| set	count=1
arg	draw borders ||| painter option index	count=1
function	the position of the ||| pos	count=1
arg	element based ||| element level	count=1
function	recently accessed [function_2] ||| [function_2] [function_1]	count=1
arg	background ||| background	count=1
function	search paths for ||| search paths	count=1
function	adds a tool tip ||| tool tip	count=1
arg	and buttons and ||| buttons	count=1
arg	source_node to [arg_2] ||| [arg_2] [arg_1]	count=4
function	[function_1] the links ||| [function_2] [function_1]	count=1
arg	checkable buttons and ||| buttons widget nomargin	count=1
arg	a stream in ||| stream pretty pickle_fallback	count=1
class	arrow is changed ||| arrow annotation	count=1
function	the widget description ||| widget desc	count=1
arg	with updated color ||| color	count=1
class	the item draws it ||| item	count=1
function	the scheme ||| scheme	count=1
function	[function_1] icon for ||| [function_2] [function_1]	count=3
module	the model ||| canvas application	count=2
function_arg	visible inside [arg_2] ||| [function_1] child [arg_2]	count=1
arg	scheme connected ||| scheme	count=1
function_arg	leaf [arg_2] ||| [function_1] [arg_2]	count=2
module	a ||| utils	count=1
module	points in the ||| widgets utils plot	count=1
class	buttons to [class_2] ||| [class_1] [class_2]	count=1
function	get the bounding box ||| rect	count=1
class	the arrow base ||| scheme arrow annotation	count=2
function	an ||| select	count=1
module	(:class schemenode) to the ||| canvas	count=1
function	position of ||| pos	count=2
class	which to edit the ||| edit	count=1
function	the number [function_2] ||| [function_2] [function_1]	count=2
class	create ||| tool box	count=1
function_arg	that is the same [function_1] [arg_2] ||| regression mean model [function_1] [arg_2]	count=1
arg	:class _signal for delivery ||| signals	count=1
arg	to event ||| event	count=3
function_arg	visible [arg_2] ||| [function_1] child [arg_2]	count=1
module	items position visibility ||| items	count=1
function	model ||| model	count=2
module	to the target ||| widgets	count=1
function	is this a dynamic ||| dynamic	count=1
function	tool tip if ||| tool tip	count=1
function	the geometry ||| geometry	count=2
function_arg	save [arg_2] ||| [function_1] [arg_2]	count=1
class	stack ||| stack widget	count=1
function_arg	axes [arg_2] ||| [function_1] [arg_2]	count=3
function	[function_1] help animation ||| [function_1] [function_2]	count=2
function	containing the position ||| position	count=1
function	restore any leftover state ||| end	count=1
class	buttons to fit inside ||| resize tool bar	count=1
function	line (qlinef ||| line	count=1
function	item ||| item	count=1
class	pixmap ||| fade pixmap	count=1
function	all ||| all	count=1
class	class to a rule ||| rule	count=1
class	the dock (same ||| dock	count=1
arg	start by count ||| start count	count=2
class	state source and ||| links edit widget	count=1
function_arg	point at index ||| point index	count=1
function	[function_1] palette for ||| [function_1] [function_2]	count=1
arg	with pen ||| pen	count=1
function	nodeitem instance from ||| from	count=1
function	the rectangle [function_2] ||| [function_2] [function_1]	count=4
class	controls ||| owconfusion	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] index [function_arg_2]	count=3
class	render tab ||| tab button	count=1
class	grid the ||| grid	count=1
arg	[arg] which ||| [arg]	count=1
function_arg	the given data ||| call data	count=1
class	arrow lines ||| arrow	count=1
function	control point [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] transformations zoom ||| [function_2] [function_1]	count=2
class	(:class qmodeindex) ||| quick	count=1
module	confusion ||| widgets evaluate	count=1
function_arg	the progress [arg_2] ||| [arg_2] [function_1]	count=1
class	of the computation ||| future	count=1
function	to ||| add	count=1
function	scheme ||| scheme	count=1
function	for the features ||| set input features	count=1
function	new ||| add	count=1
class	instance of ||| instance	count=1
class	text geometry ||| text annotation	count=1
class	in the ||| owplot	count=1
class	set ||| owlift curve	count=1
class	state source and sink ||| edit widget	count=1
module	current file ||| widgets model	count=1
function	and ||| filter and	count=1
arg	[arg_1] structure ||| [arg_1] [arg_2]	count=4
function	the learner for a ||| learner	count=1
module	entire ||| widgets utils	count=1
function	in a new tab ||| add item	count=1
arg	the start ||| start	count=1
function	[function_1] visibility ||| [function_2] [function_1]	count=6
function	[function_1] the off-diagonal ||| [function_2] [function_1]	count=1
function_arg	parts for [arg_2] ||| [function_1] [arg_2]	count=5
module	the ||| canvas scheme	count=4
class	editor state ||| links edit	count=1
class	node title ||| node	count=1
function_arg	linear gradient [arg_2] ||| [function_1] [arg_2]	count=1
class	this item ||| anchor item	count=1
function	fix a ||| fix	count=1
function	css [function_2] ||| [function_1] [function_2]	count=1
function	stop the ||| stop	count=1
arg	the execution of ||| timeout	count=1
class	if the link ||| link	count=1
function_arg	learner for [arg_2] ||| [function_1] [arg_2]	count=1
arg	source where the elements ||| source	count=1
module	source ||| document	count=1
function	to reflect ||| node processing	count=1
class	of ||| future watcher	count=1
class	the future ||| future	count=1
class	transformed [class] ||| [class]	count=3
module_class	[module_1] the layout ||| [module_1] stack [class_2]	count=1
arg	updated color [arg_2] ||| [arg_1] [arg_2]	count=4
function	[function_1] position ||| [function_1] [function_2]	count=2
function	visibility ||| show	count=1
function	section name ||| name	count=1
arg	source_node to sink_node if ||| source_node sink_node	count=1
function_arg	[function_1] constructing a ||| [function_1] node [arg_2]	count=2
function	default palette for ||| default palette	count=1
function	a default rule which ||| default rule	count=1
class	dock widget in ||| collapsible dock widget	count=2
module	tab and return ||| canvas	count=1
class	source and sink nodes ||| links edit widget	count=1
function	widget discovery ||| discovery	count=1
function_arg	[function_1] rows columns ||| [function_1] [arg_2]	count=2
arg	count cells ||| count	count=1
function_arg	entropy induced [arg_2] ||| [function_1] cuts sorted cls [arg_2]	count=1
function	for the features ||| input features	count=1
module	and sink ||| document	count=1
class	link and is dynamic_enabled ||| scheme link	count=1
module	points in the ||| widgets utils	count=1
function	constructs ||| init	count=2
function	scan [function_2] ||| [function_1] [function_2]	count=1
arg	for index from ||| index	count=1
function_arg	[function_1] [arg_2] ||| [function_1] cls d [arg_2]	count=5
module	all ||| widgets	count=1
function_arg	gradient [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] and column ||| [arg_2] [function_1]	count=3
function	as ||| get	count=1
function	[function_1] selection ||| [function_2] [function_1]	count=5
arg	model at index ||| index	count=1
module	to the ||| widgets utils plot	count=2
class	unordered set of ||| cn2unordered	count=1
class	text ||| scheme text	count=3
arg	of a table to ||| table	count=1
function_arg	[function_1] [arg_2] ||| [function_1] at [arg_2]	count=1
arg	end from ||| end	count=1
function	set the source/sink nodes ||| set nodes	count=2
class	set ||| anchor item	count=2
function_arg	parse a [arg_2] ||| [arg_2] [function_1]	count=1
module	to [module_2] ||| [module_1] [module_2]	count=10
function	grid ||| grid	count=1
function_arg	[function_1] [arg_2] ||| [function_1] wild card [arg_2]	count=1
function	remove the button for ||| remove action button	count=1
function	np [function] that ||| [function]	count=4
function	add ||| add	count=9
function	the tab button ||| tab	count=1
class	arrow arrow head ||| scheme arrow annotation	count=1
function	if possible ||| if possible	count=2
class	set ||| anchor point	count=1
arg	data split by ||| data	count=1
class	anchorable class ||| anchorable	count=1
class	insert ||| anchor item	count=1
class	the node ||| node	count=9
class	value from source property ||| property	count=1
module	[module_1] table ||| [module_1] [module_2]	count=2
class	view ||| item view key navigator	count=1
function	[function_1] widgets expanded ||| [function_1] [function_2]	count=1
arg	link in scheme connected ||| scheme	count=1
class	and sink ||| edit widget	count=1
function	angle between the two ||| angle	count=1
function	[function_1] the input ||| [function_2] [function_1]	count=1
function	set the regular expression ||| set filter reg exp	count=1
function	using axes ||| axes	count=1
class	zooming in ||| view	count=1
function	content of [function_2] ||| [function_2] [function_1]	count=2
function	message box asking ||| message	count=1
function	[function] inside ||| [function]	count=1
arg	to sink_node if ||| sink_node	count=1
module	selects all points ||| utils plot	count=1
function	[function_1] button/action ||| [function_2] [function_1]	count=4
function_arg	add the [arg_2] ||| [arg_2] [function_1]	count=6
class	result ||| future watcher	count=1
module	suitable ||| utils	count=1
function	initialize the ||| initialize widget	count=1
arg	a single ||| x	count=1
function	[function] input data's ||| refresh [function]	count=1
function_arg	[function_1] include_more_link is ||| [arg_2] [function_1]	count=1
module	selects all ||| utils plot	count=1
arg	execution of ||| timeout	count=1
class	the text geometry ||| text annotation	count=1
function	qwidget ||| widget	count=1
function	search paths for ||| search paths from	count=1
function	hierarchical clustering using a ||| dist matrix clustering	count=1
function_arg	[function_1] :meth set_plot_data ||| [arg_2] [function_1]	count=5
function	selects all points in ||| selection	count=1
class	update loop ||| manager	count=1
function	[function_1] channel ||| [function_2] [function_1]	count=1
function	notify the binding ||| notify changed	count=1
function_arg	find an [arg_2] ||| [function_1] at scene pos [arg_2]	count=2
function	update all ||| update	count=1
class	editor ||| links edit	count=1
class	body ||| node body item	count=1
module	return absolute filename ||| canvas	count=1
function	schemenode properties ||| node properties	count=2
arg	the data ||| data	count=2
function_arg	for column [arg_2] ||| [function_1] [arg_2]	count=1
function	create a new ||| create new	count=2
function	add a ||| add	count=3
function	params ||| get params	count=2
class	schemelink) from the scheme ||| scheme	count=1
function	the temp line target ||| link target	count=1
module	qpainterpath ||| canvas canvas items	count=2
arg	:meth set_plot_data its ||| x_index y_index z_index color_index	count=1
function_arg	[function_1] the points ||| [arg_2] [function_1]	count=1
function	points ||| selection	count=1
function	selects all ||| selection	count=1
function	the [function] ||| [function]	count=2
function	for common point properties ||| point properties	count=1
function	off-diagonal elements of ||| wrong	count=1
function	widget clear controls ||| clear	count=1
module	file ||| widgets	count=1
arg	a data table ||| table varlist	count=1
function	set the ||| set filter reg	count=1
class	anchor ||| anchor item	count=1
function	rows ||| select rows	count=1
function	value ||| update	count=1
class	item ||| annotation	count=1
class	page to [class] and ||| [class]	count=1
function	size [function_2] ||| [function_1] [function_2]	count=3
arg	[arg_1] position index ||| [arg_1] [arg_2]	count=1
class	link ||| link item	count=2
function	commit the current ||| commit	count=2
function	node meta ||| node meta	count=2
class	the body ||| body item	count=1
class	geometry state ||| resize text annotation	count=1
function	a tool tip ||| tool tip	count=1
arg	[arg_1] buttons ||| [arg_1] [arg_2]	count=1
function	[function_1] settings ||| [function_1] [function_2]	count=5
function	a triangle ||| triangle	count=1
function	extra ||| extra	count=1
function	link ||| link item	count=4
function_arg	[function_1] args ||| [function_1] [arg_2]	count=3
function	standard icon for a ||| standard icon	count=1
module	table ||| data	count=1
class	positive if zooming ||| graphics view	count=1
function_arg	key [arg_2] ||| [function_1] [arg_2]	count=3
class	display/edit ||| scheme info dialog	count=1
module	'literal') and return its ||| canvas scheme	count=1
module	the current file ||| widgets model	count=1
class	process ||| signal manager	count=1
function	distributions with ||| distributions	count=1
function	a rectangle ||| rect	count=1
function	[function_1] icon for ||| [function_1] [function_2]	count=3
function	the max [function_2] ||| [function_2] [function_1]	count=4
class	reset the ||| owconfusion	count=1
class	widget and ||| widget	count=1
arg	preserve sparsity ||| source_var source_place	count=1
class	:class ~ ||| edit	count=1
module	dictionary ||| data	count=1
arg	the data set ||| data	count=1
arg	[arg_1] group_key ||| [arg_2] [arg_1]	count=5
function	if the control ||| control	count=1
function	has the 'single' flag ||| conflicting single	count=1
function_arg	[function_1] the node ||| [function_1] [arg_2]	count=4
arg	(qstandarditemmodel) for the ||| rootindex	count=1
function	if the control ||| control active	count=1
class	[class_1] forest ||| [class_2] [class_1]	count=3
function	a wildcard filtering ||| filter wild card	count=2
function_arg	is visible [arg_2] ||| [arg_2] [function_1]	count=1
module	selects all points ||| utils	count=1
function	trim leading ||| trim leading	count=1
class	tooltip with the ||| tooltip	count=1
arg	given variable on ||| variable	count=1
arg	[arg_1] group_var group_key ||| [arg_2] [arg_1]	count=2
arg	the points a list ||| points	count=1
function	recalculate ||| recalculate	count=1
function	enable/disable ||| set enabled	count=1
function	[function_1] [function_2] ||| [function_1] [function_2]	count=1348
function	compress a list of ||| compress signals	count=1
function	the diagonal elements ||| correct	count=1
function	the printed contents of ||| info reg	count=1
function	qpainterpath of a ||| path	count=1
function	params ||| params	count=1
arg	size hint ||| size hint	count=1
function	scan the ||| scan	count=1
function	show ||| show	count=1
function	link (:class linkitem) ||| link item	count=1
arg	page (:class ||| page	count=1
function	helper function for ||| item tool tip helper	count=1
class	editor state source ||| links edit	count=1
function	triangle using current transform ||| draw triangle	count=1
class	return ||| future watcher	count=1
function_arg	brief description [arg_2] ||| [function_1] [arg_2]	count=1
class	input for ||| owvenn diagram	count=1
function	[function_1] remove ||| [function_1] [function_2]	count=1
function	valid ||| has valid	count=1
function	toward the end ||| end	count=1
function	title [function_2] ||| [function_2] [function_1]	count=1
class	remove ||| node item	count=2
module	instance ||| scheme	count=1
function	list for each instance ||| predict	count=2
function	fix size ||| fix size policy	count=1
function	expanded ||| expanded	count=1
function	the result of the ||| result	count=2
module_class	[module_1] result ||| [module_1] [class_2]	count=4
function	the sloppy timeout ||| sloppy	count=1
function	max depth and ||| max depth	count=2
function	helper function for ||| tool tip helper	count=1
module	and hides the plot ||| plot	count=1
module	of :attr theme_name ||| plot	count=1
class	instance from the ||| canvas	count=1
function	compress a list of ||| compress	count=1
arg	into ||| module mtime	count=1
function	color for ||| color cls	count=1
function	bound the ||| bound	count=1
class	polygon ||| polygon curve	count=1
arg	data split by group_var ||| data group_var	count=1
module	with numbers that ||| widgets utils	count=1
function	order until one fires ||| ordered	count=1
function	rectangle using ||| draw rectangle	count=1
module	for the current ||| canvas document	count=2
module_class	of the [class_2] ||| [module_1] [class_2]	count=2
function_arg	insert the [arg_2] ||| [function_1] [arg_2]	count=2
function	set pixmap [function_2] ||| [function_1] [function_2]	count=1
class	qmodeindex) item ||| quick	count=1
arg	name should not ||| names name	count=1
class	frame ||| text annotation	count=2
function	running i e ||| running	count=1
function	set the blending ||| set blending	count=3
function	set the width ||| set line width	count=1
arg	[arg_1] end into ||| [arg_1] [arg_2]	count=1
function	hash value ||| hash dist	count=1
arg	columns ||| columns	count=4
module	html with a ||| canvas report	count=1
function	a valid ||| valid	count=2
function	of all [function] ||| dependent [function]	count=3
module	tab and return ||| canvas gui	count=1
arg	[arg_1] sink_node ||| [arg_1] [arg_2]	count=1
arg	state ||| item state	count=1
function_arg	valid entry [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] level setting ||| [function_1] [arg_2]	count=1
function	filter ||| filter	count=2
function	channel [function_2] ||| [function_2] [function_1]	count=2
class	state source and ||| links	count=1
function	of the node ||| node	count=1
arg	if heatmap ||| heatmap	count=1
function_arg	[function_1] item (:class ||| [function_1] [arg_2]	count=1
module	plot coordinates along ||| utils plot	count=1
function_arg	selection started [arg_2] ||| [function_1] [arg_2]	count=3
class	splitter ||| splitter	count=1
class	executor ||| executor	count=1
function	[function_1] matrix ||| [function_2] [function_1]	count=1
function_arg	widget [arg_2] ||| [arg_2] [function_1]	count=3
arg	[arg_1] node ||| [arg_2] [arg_1]	count=2
class	for the selected widget ||| scheme edit widget	count=1
function	widget discovery and ||| discovery	count=1
class	over the item ||| node item	count=1
arg	that ||| widget	count=1
function	split the module ||| split	count=1
function	over the leaf nodes ||| leaves	count=1
module	state ||| canvas	count=1
class	[class_1] rounded ||| [class_2] [class_1]	count=4
arg	list of input keys ||| keys incremental	count=1
function	[function_1] the scene ||| [function_1] [function_2]	count=1
function	[function_1] all points ||| [function_2] [function_1]	count=1
arg	buttons and ||| buttons	count=1
arg	[arg_1] structure ||| [arg_2] [arg_1]	count=4
arg	links ||| links	count=1
function_arg	[function_1] icon ||| [function_1] tab icon index [arg_2]	count=1
module	editor state source and ||| document	count=1
function	the current :attr ||| selection	count=1
class	the ||| owplot	count=5
module	to show in the ||| widgets visualize	count=1
arg	handle receiving an array ||| values	count=1
function	[function] item ||| ensure [function]	count=3
arg	of checkable buttons ||| buttons widget nomargin	count=1
function	output :class anchorpoint ||| output anchor	count=2
class	is ||| point line	count=1
module	return target source ||| canvas	count=1
function	for ||| widget	count=1
function	tool button ||| tool button	count=2
module	return its ||| canvas	count=2
function_arg	category with name ||| category name	count=1
function	[function_1] animation ||| [function_2] [function_1]	count=3
class	link and is ||| link	count=1
class	:class ~ ||| scheme edit widget	count=1
module	document ||| document	count=3
function	set the selected ||| set selected	count=2
module	of :attr theme_name ||| widgets utils plot	count=1
function	the button for the ||| action button	count=1
module	current ||| document	count=5
arg	function for constructing ||| links_in links_out	count=1
function_arg	[function_1] at index ||| [function_1] action [arg_2]	count=3
function	[function_1] input ||| [function_2] [function_1]	count=1
arg	merged ||| var_extra_data	count=1
arg	[arg_1] [arg_2] ||| [arg_2] hint [arg_1]	count=9
function	:attr ||| selection	count=1
function	at ||| tool tip	count=1
function	application directory ||| dir	count=1
module	points ||| widgets utils	count=1
arg	[arg_1] buttons and ||| [arg_2] [arg_1]	count=1
module	get [module] ||| [module]	count=3
function	positions of anchor points ||| positions	count=1
module	and [module] a default ||| [module]	count=1
function	array of items ||| items	count=1
module	return the current ||| canvas	count=1
function	[function_1] blending ||| [function_1] [function_2]	count=1
arg	args ||| res index	count=1
function	the value of ||| value	count=1
arg	by :meth set_plot_data ||| x_index y_index z_index color_index	count=1
function	remove a ||| remove	count=1
arg	a stream ||| stream	count=1
function	an unordered set ||| unordered	count=1
function	clear ||| clear progress	count=1
function	re [function_2] ||| [function_2] [function_1]	count=1
class	the selected widget ||| widget	count=2
class	tool ||| widget tool	count=2
arg	direction is positive ||| direction	count=1
function	[function_1] their settings ||| [function_2] [function_1]	count=2
arg	given problem type ||| problem_type	count=1
function	color ||| color	count=4
function_arg	[function_1] at index ||| [function_1] [arg_2]	count=7
arg	of a table ||| name table	count=1
class	the executor ||| thread executor	count=1
function	that have a valid ||| valid	count=1
function	[function_1] source ||| [function_2] [function_1]	count=1
function	specific learner params ||| get params	count=1
class	translation and scale ||| owplot3d	count=1
function_arg	paste source ||| paste code source	count=1
class	unordered set of rules ||| cn2unordered	count=1
function	geometry of the ||| geometry	count=1
function	wildcard ||| wild card	count=1
function	brief ||| data brief	count=1
arg	[arg_1] hint ||| [arg_2] [arg_1]	count=3
class	set ||| suggest menu page	count=2
function_arg	[function_1] state ||| [function_1] [arg_2]	count=3
module	return return the ||| canvas canvas	count=1
class	annotation ||| text annotation	count=2
arg	weight ||| weight	count=1
function	the document modified ||| modified strict	count=1
function	parse a ||| parse	count=1
arg	index from ||| index	count=1
function	clear reset ||| clear	count=1
function_arg	button [arg_2] ||| [arg_2] [function_1]	count=4
function	extract column from ||| column	count=1
module	theme_name ||| utils	count=1
function	activate parent ||| activate parent	count=2
class	in the view ||| view	count=1
function_arg	given [arg_2] ||| [arg_2] [function_1]	count=1
function	geometry ||| geometry	count=3
arg	object in [arg_2] ||| [arg_2] pos [arg_1]	count=1
function_arg	[function_1] widget ||| [arg_2] [function_1]	count=4
function_arg	[function_1] color weight ||| [function_1] baseformat [arg_2]	count=1
class	[class_1] layout ||| [class_2] [class_1]	count=1
function	of data ||| data	count=1
module	editor state source and ||| canvas document	count=1
class	inside ||| bar widget	count=1
class	an action ||| tool tree	count=1
function	[function] grip ||| [function] grip	count=1
arg	of the node for ||| node	count=1
module	and ||| document	count=3
function	the visible columns ||| visible score columns	count=2
function_arg	parts [arg_2] ||| [function_1] [arg_2]	count=5
function	[function_1] number of ||| [function_2] [function_1]	count=1
function	[function_1] node meta ||| [function_1] [function_2]	count=3
function	basic ||| basic	count=1
class	the random ||| random	count=1
arg	name should not be ||| name	count=1
function	processing [function_2] ||| [function_2] [function_1]	count=1
class	a owwidget ||| widget manager	count=1
function_arg	visible [arg_2] ||| [arg_2] [function_1]	count=1
arg	start by ||| start	count=1
function	get [function_2] ||| [function_1] [function_2]	count=5
function_arg	that is the same [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
module	menu ||| canvas document	count=1
function	:class orange ||| orange	count=1
function	triangle ||| triangle	count=1
arg	i-t row and j-th ||| i j	count=1
class	discretization ||| discretization	count=1
function	return the [function_1] [function_2] ||| [function_2] [function_1]	count=2
function	the row consists of ||| row	count=1
function	content of the ||| info	count=1
function	key for ||| key	count=1
arg	at index ||| index	count=14
function	node item animation ||| node animation	count=2
arg	obj using format ||| obj	count=1
class	applies a list ||| list	count=1
function	schemenode [function_2] ||| [function_2] [function_1]	count=1
function	main application [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] visible ||| [function_2] [function_1]	count=2
function	a valid entry for ||| valid entry	count=1
module	items position visibility ||| canvas canvas items	count=1
class	scale translation ||| owplot3d	count=2
function	column from ||| get column	count=1
function	the selection [function_2] ||| [function_1] [function_2]	count=1
arg	color [arg_2] ||| [arg_1] [arg_2]	count=4
arg	folds ||| folds	count=1
function	flattened ||| flattened	count=1
module	list of ||| scheme	count=1
function	plot transformations zoom ||| plot transformations	count=2
class	the item draws it ||| anchor item	count=1
arg	[arg_1] a table ||| [arg_2] [arg_1]	count=4
function	[function] grip in ||| [function] grip	count=1
function	[function_1] enabled state ||| [function_2] [function_1]	count=1
function	forgets plot ||| clear plot	count=2
class	icon ||| edit links node	count=1
module	in ||| utils	count=1
function	all points ||| add selection	count=1
function	and calculate the ||| calculate	count=1
module	loop ||| canvas	count=1
function	[function_1] items ||| [function_1] [function_2]	count=1
function	an array of items ||| set items	count=1
module	the ||| plot	count=5
class	the ||| owload model	count=1
module	updates ||| widgets utils	count=1
function_arg	[function_1] the node ||| [function_1] processing state [arg_2]	count=1
function	returns the graph transform ||| transform for	count=1
function	processing_state to reflect the ||| node processing	count=1
function	selects [function_2] ||| [function_1] [function_2] area	count=1
function	loader ||| loader	count=1
class	and sink nodes channels ||| widget	count=1
function	extra columns that ||| reduced extra	count=1
arg	-180 to 180 ||| point1 point2	count=1
arg	output (:class [arg_2] ||| [arg_1] [arg_2]	count=2
module	all points in the ||| widgets utils plot	count=1
arg	[arg_1] end ||| [arg_1] [arg_2]	count=5
function	selection started ||| selection start	count=1
module_class	[module_1] [class_2] ||| [module_1] canvas [class_2]	count=3
function	this a dynamic ||| dynamic	count=1
class	value of :attr ||| owplot	count=1
arg	for mod_path ||| mod_path distribution	count=1
module	the ||| model	count=1
function	and remove ||| and remove	count=2
function	scan [function_2] ||| [function_2] [function_1]	count=1
class	the random [class_2] ||| [class_2] [class_1]	count=1
function	color [function_2] ||| [function_1] [function_2]	count=1
function	search ||| search	count=1
function	range ||| range	count=1
arg	distribution [arg_2] ||| [arg_2] [arg_1]	count=2
function	the position ||| pos	count=1
class	dock [class_2] ||| [class_1] [class_2]	count=2
arg	updated color [arg_2] ||| [arg_1] background [arg_2]	count=1
class	selection ||| selection manager	count=5
class	update ||| manager	count=1
function	are enabled ||| enabled	count=2
function	[function_1] enumerate ||| [function_1] [function_2]	count=1
module_class	arrow [class_2] ||| [module_1] [class_2]	count=1
module	update loop ||| scheme	count=1
function	domain ||| get domain	count=1
function	[function] row ||| [function]	count=3
function_arg	extract column [arg_2] ||| [arg_2] [function_1]	count=3
function	the bounding ||| rect	count=1
arg	output [arg_2] ||| [arg_2] [arg_1]	count=2
class	in the widget ||| widget	count=1
function	with the same ||| add	count=1
module	for ||| widgets data	count=1
arg	data table ||| table	count=1
function	to plot ||| to plot	count=2
function_arg	category with [arg_2] ||| [arg_2] [function_1]	count=1
module	graph ||| widgets utils plot	count=2
function	the connection ||| connection	count=1
function	linear gradient ||| gradient	count=1
module	not ||| widgets	count=1
function	[function_1] widget ||| [function_1] [function_2]	count=7
module	lines ||| widgets utils plot	count=1
arg	the description ||| description distribution	count=1
class	the page ||| quick menu	count=1
arg	link (:class schemelink) ||| link	count=1
module	and return it's ||| canvas	count=1
function_arg	a brief [arg_2] ||| [arg_2] [function_1]	count=1
class	parameters ||| base editor	count=1
function	current :attr selection_behavior ||| add selection	count=1
function	start a [function_2] ||| [function_1] [function_2]	count=3
class	cached drop ||| drop	count=1
function	the parameters of the ||| parameters	count=1
function	and modified time as ||| module modified time	count=1
function	the graph transform ||| transform	count=1
class	channels ||| edit	count=1
function	set the tool button ||| set tool button	count=1
function	start a control ||| start control	count=2
module	preview ||| preview	count=1
function	a grid ||| grid	count=1
function_arg	axes x_axis and ||| for axes x_axis	count=1
class	input for a ||| diagram	count=1
class	edit the ||| edit widget	count=1
class	the text [class_2] ||| [class_2] [class_1]	count=1
function	set a list ||| set	count=2
arg	table into a ||| table varlist idvarlist groupvarlist	count=1
class	the current :attr selection_behavior ||| owplot	count=1
function	control [function_2] ||| [function_2] [function_1]	count=5
class	cache ||| widget discovery	count=4
function	the node [function_2] ||| [function_2] [function_1]	count=6
function	rectangle selection mode where ||| rectangle selection	count=1
function	metrics depending on the ||| metrics	count=1
arg	start ||| start	count=3
function	the averages [function_2] ||| [function_2] [function_1]	count=1
arg	obj type ||| obj	count=1
class	executor and free all ||| executor	count=1
class	linkitem) from the scene ||| canvas scene	count=1
function	the visible [function_2] ||| [function_1] [function_2]	count=3
function	delete ||| delete widget	count=2
function	the array of indices ||| indices	count=2
function	printed contents of ||| node info reg	count=1
module	node ||| canvas items	count=3
arg	variables ||| variables	count=1
module_class	[module_1] polygon ||| [module_1] [class_2]	count=2
function	of the central widget ||| central widget	count=1
function	deleting the [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] stream ||| [arg_2] [function_1]	count=2
class	a ||| base editor	count=1
class	index ||| paged menu	count=1
function	compress a list ||| compress	count=1
class	flattening ||| item model	count=1
module	updates the current ||| utils plot	count=1
class	of the matrix ||| matrix	count=2
function	the domain ||| domain	count=1
function	the cache have a ||| cache has	count=1
function	[function_1] widget ||| [function_2] [function_1]	count=7
module	sink nodes channels ||| document	count=1
arg	in iterable ||| iterable	count=1
function	start [function_2] ||| [function_1] [function_2]	count=3
module	nodes ||| document	count=1
arg	iterable ||| iterable	count=1
module	return ||| canvas canvas	count=12
function_arg	[function_1] node processing_state ||| [arg_2] [function_1]	count=1
function	name title ||| name	count=1
module	of the computation ||| widgets	count=1
class	set ||| owheat map	count=1
function	the control is ||| is control	count=1
function	an item ||| item	count=1
arg	x array ||| cls x	count=1
function	show and ||| links	count=1
function	hints ||| role hints	count=1
function_arg	the same mean value [function_1] [arg_2] ||| regression mean model [function_1] [arg_2]	count=1
class	the cached drop ||| drop	count=1
arg	node processing_state to ||| node	count=1
arg	variable the variable whose ||| variable	count=2
function_arg	entry for [arg_2] ||| [arg_2] [function_1]	count=1
arg	to the data ||| data	count=1
function	row consists of attributes ||| row	count=1
function	clear controls ||| clear	count=1
arg	rows given in indices ||| indices	count=1
module	in the ||| utils	count=1
function_arg	a brief [arg_2] ||| [function_1] [arg_2]	count=1
module	return ||| canvas document	count=12
module	in ||| widgets utils plot	count=2
arg	the name should not ||| name	count=1
class	registry ||| quick category toolbar	count=1
module	[module_1] be ||| [module_1] [module_2]	count=2
arg	[arg_1] y_axis ||| [arg_2] [arg_1]	count=1
function	meta description ||| meta	count=1
function	tip if ||| tip	count=1
arg	for data [arg_2] ||| [arg_1] [arg_2]	count=2
function	at ||| item at	count=1
class	get the widget ||| widget	count=1
function	[function_1] visible columns ||| [function_1] [function_2]	count=1
function	an message ||| message	count=1
function	whether vertical ||| is x	count=1
function	selected style flags ||| selected	count=1
module_class	menu [class_2] ||| [module_1] [class_2]	count=1
function	forgets plot [function_2] ||| [function_2] [function_1]	count=1
arg	with name and ||| name	count=1
function	register a :class categorydescription ||| register	count=1
function	over ||| iter	count=1
function	process ||| process	count=1
class	point ||| point	count=2
function	selects ||| selection	count=1
class	page ||| quick menu	count=3
class	return the ||| base	count=1
class	that subclass the ||| graphics view	count=1
arg	show and execute ||| source_node sink_node initial_links	count=1
function	directory where [function_2] ||| [function_2] [function_1]	count=2
arg	return counts of values ||| max_val weights minlength	count=1
class	dock (same ||| dock	count=1
arg	it sums to ||| out	count=1
function	current :attr selection_behavior ||| add	count=1
class	root ||| widget tool grid	count=1
function	link (:class linkitem) ||| link	count=1
class	and apply [class] given ||| [class]	count=1
class	to the scheme ||| scheme edit widget	count=1
function	[function_1] row ||| [function_2] [function_1]	count=1
module	return ||| canvas registry	count=10
arg	given variable on the ||| variable	count=1
function	[function_1] for regression ||| [function_2] [function_1]	count=4
class	pending ||| signal manager	count=1
function	each given instance ||| predict	count=1
function	instance from a ||| from	count=1
function	over the leaf ||| leaves	count=1
module	sample ||| canvas items	count=1
class	positive if zooming ||| view	count=1
function	layout ||| layout	count=3
module	a node to the ||| canvas	count=1
class	pixmap ||| pixmap	count=1
class	widget description ||| qt widget registry	count=2
class	insert ||| welcome dialog	count=1
function	the action role this ||| action	count=1
arg	given size hint ||| size hint	count=2
module	the ||| widgets	count=27
arg	a precomputed ||| linkage	count=1
function	calculate the actual ||| calculate actual	count=3
arg	data set ||| data	count=1
class	widget ||| owconfusion matrix	count=1
module_class	[module_1] [class_2] ||| [module_1] control [class_2]	count=1
function	selects all points ||| add	count=1
function_arg	helper if [arg_2] ||| [arg_2] [function_1]	count=2
function	legend visibility ||| show legend	count=2
arg	of an obj ||| obj	count=1
function	delete the owbasewidget ||| delete	count=1
class	the window ||| window	count=1
function_arg	insert widget [arg_2] ||| [arg_2] [function_1]	count=3
arg	to 180 ||| point1 point2	count=1
function	[function_1] control ||| [function_1] [function_2]	count=2
function	[function_1] ratio statistic ||| [function_1] [function_2]	count=1
module_class	[module_1] tab ||| [class_2] [module_1]	count=1
function_arg	[function_1] distance matrix ||| [function_1] [arg_2]	count=3
arg	the name ||| name	count=1
class	the arrow arrow head ||| scheme arrow annotation	count=1
module	the ||| data	count=1
arg	title [arg_2] ||| [arg_2] widget [arg_1]	count=1
function	rows starting ||| rows	count=1
function	directory ||| dir	count=3
function	modified ||| module modified	count=1
function	set action ||| set	count=1
function	number [function_2] ||| [function_2] [function_1]	count=2
function	true then the geometry ||| geometry	count=1
arg	the number ||| number suffix	count=2
function	scheme's serialization version string ||| sniff version	count=1
function	belong to each ||| samples in	count=1
class	containing the actions ||| quick menu	count=1
function	message box asking the ||| message	count=1
function	the exception instance ||| exception	count=1
function	dynamic enabled ||| dynamic enabled	count=2
function	mean value [function] ||| [function]	count=1
function	[function_1] a link ||| [function_2] [function_1]	count=2
function	progress ||| progress	count=2
class	as a string ||| annotation	count=1
function_arg	[function_1] with actions ||| [function_1] [arg_2]	count=3
function	settings directory ||| settings dir	count=2
arg	for adding a ||| force_replace	count=1
arg	of baseformat ||| baseformat	count=1
class	dendrogram ||| dendrogram	count=2
function	the data set by ||| set features	count=1
arg	with rootindex as ||| rootindex	count=1
arg	and alignment ||| alignment	count=1
class	the arrow [class_2] ||| [class_1] [class_2]	count=7
arg	sourcerow under [arg_2] ||| [arg_2] [arg_1]	count=2
class	interaction this is called ||| user interaction	count=1
arg	by group_var [arg_2] ||| [arg_2] [arg_1]	count=1
arg	so child ||| child	count=1
module_class	[module_1] page ||| [module_1] menu [class_2]	count=1
class	an :class ||| canvas scene	count=1
arg	specified text, orientation and ||| text orientation	count=1
function	[function_1] basic ||| [function_2] [function_1]	count=1
module_class	the [module_1] [class_2] ||| canvas [module_1] [class_2]	count=1
module	editor state ||| canvas	count=1
function	brief description of ||| data brief	count=1
function	insert a ||| insert	count=2
function	new widget with ||| new	count=1
arg	outputsignal) and input (:class ||| input	count=1
function	[function_1] the sink ||| [function_1] [function_2]	count=1
class	the node ||| links node	count=1
arg	of different colors ||| color_data	count=1
function	[function_1] an item ||| [function_1] [function_2]	count=1
function	[function_1] columns of ||| [function_2] [function_1]	count=3
module	find ||| canvas document	count=1
function	(class schemenode) scheduled for ||| pending	count=1
arg	by rows [arg_2] ||| [arg_2] [arg_1]	count=1
arg	background and font ||| background	count=1
class	to selection ||| heatmap selection manager	count=1
module	update ||| canvas	count=1
class	tooltip with the same ||| tooltip manager	count=1
class	the ||| signal	count=2
function	nodes on the update ||| update	count=1
function	link (:class ||| link item	count=1
class	for the node ||| links node	count=1
function	point [function_2] ||| [function_1] [function_2]	count=5
class	update loop ||| signal	count=1
arg	timeout ||| timeout	count=1
class	and ||| edit widget	count=1
function	learner params ||| params	count=1
function	[function_1] filter ||| [function_2] [function_1]	count=1
arg	source_node [arg_2] ||| [arg_1] [arg_2]	count=3
function	depth and ||| depth	count=1
function_arg	[function_1] page (:class ||| [arg_2] [function_1]	count=1
function	the input line if ||| input line	count=1
function	the pixmap ||| pixmap	count=1
class	the ||| edit widget	count=1
class	value ||| owplot	count=1
class	to edit ||| edit widget	count=1
function	for common plot settings ||| plot settings	count=1
arg	[arg_1] given size ||| [arg_2] [arg_1]	count=2
module	the current ||| widgets model	count=1
arg	index from the ||| index	count=1
class	[class_1] as ||| [class_2] [class_1]	count=4
module	[module] parent ||| [module]	count=6
function_arg	re-emit the [arg_2] ||| [arg_2] [function_1]	count=3
class	entire ||| owplot	count=1
function	label [function_2] ||| [function_2] [function_1]	count=3
function	in the ||| add	count=1
function	[function_1] meta description ||| [function_2] [function_1]	count=6
class	computation ||| future watcher	count=1
function	entropy of ||| entropy	count=1
class	for height in ||| dendrogram widget	count=1
class	the arrow arrow head ||| arrow	count=1
function	[function_1] the tab ||| [function_2] [function_1]	count=2
function	point edit ||| point edit	count=2
class	geometry ||| arrow annotation	count=1
module	with numbers that ||| widgets	count=1
class	grid ||| plot grid	count=2
function	fix the position of ||| fix pos	count=1
function	fix size so ||| fix size	count=1
class	sink ||| widget	count=1
function	ratio [function_2] ||| [function_2] [function_1]	count=4
function	[function_1] remove ||| [function_2] [function_1]	count=1
arg	a [arg] ||| [arg] color background	count=1
arg	serialize obj ||| obj	count=1
function	environment variable ||| env	count=1
arg	combo box to ||| combo	count=1
arg	of checkable buttons ||| orientation buttons widget	count=1
function	but don't delete it ||| take	count=1
function	tracked info/warning/error message state ||| widget state	count=1
function	selected default ||| default	count=1
module	:attr theme_name ||| widgets utils plot	count=1
module	return the [module] ||| [module]	count=2
module	it to the ||| widgets utils	count=2
function	a subset of data ||| subset data	count=1
module	new tab and return ||| canvas	count=1
function	[function_1] progress ||| [function_1] [function_2]	count=1
class	the menu ||| paged menu	count=1
class	creates an ||| owplot	count=2
arg	each of the columns ||| columns	count=1
module	it to ||| widgets utils	count=1
function_arg	[function_1] adding ||| [function_1] scheme links [arg_2]	count=2
arg	table into ||| table varlist idvarlist	count=1
arg	scheme_file ||| scheme_file	count=1
function	set quick [function_2] ||| [function_1] [function_2]	count=1
function	connection ||| connection	count=1
function	[function_1] text ||| [function_2] [function_1]	count=6
class	the layout ||| layout	count=1
function_arg	key for [arg_2] ||| [arg_2] [function_1]	count=3
function	the heatmap ||| heatmap	count=1
class	selected widget ||| edit widget	count=1
class	the item ||| item	count=5
arg	descriptor ||| descriptor	count=2
class	creates an :obj owbutton ||| owplot gui	count=1
module	and return ||| canvas registry	count=1
module	number of ||| gui	count=1
module	for widget ||| data	count=1
class	if ||| future	count=1
function	current control point ||| control point	count=2
function	[function_1] interaction ||| [function_2] [function_1]	count=4
class	for drawing the grid ||| grid	count=1
function_arg	[function_1] execute the ||| [function_1] [arg_2]	count=2
function	averages [function_2] ||| [function_1] [function_2]	count=1
class	state ||| widget	count=1
module	the updates ||| canvas scheme	count=1
arg	hint ||| hint	count=1
arg	of checkable buttons ||| buttons widget	count=1
function	quick help animation ||| quick help animation	count=1
function	node [function_2] ||| [function_1] [function_2]	count=8
function	position ||| position	count=1
function	path') and update ||| update	count=1
function_arg	[function_1] helper ||| [function_1] [arg_2]	count=1
module	the value of ||| widgets utils	count=1
module_class	return target [class_2] ||| [module_1] utils [class_2]	count=1
function	hints to be ||| hints	count=1
arg	action ||| action	count=2
function_arg	all links [arg_2] ||| [function_1] [arg_2]	count=1
module	the ||| document	count=1
function	current widget changed ||| current changed	count=1
class	state source and sink ||| edit	count=1
function	set the [function_2] ||| [function_1] [function_2]	count=54
function	region of ||| sloppy region	count=1
class	arrow as ||| arrow	count=1
arg	and input (:class inputsignal) ||| input	count=1
function_arg	[function_1] in view ||| [function_1] [arg_2]	count=1
module	return it's ||| canvas document	count=1
arg	[arg_1] background ||| [arg_2] [arg_1]	count=2
module_class	[module_1] binding ||| [module_1] utils [class_2]	count=1
function	clear reset [function_2] ||| [function_1] [function_2]	count=1
function	to reflect the ||| processing	count=1
module	updates ||| utils	count=1
class	the dock (same as ||| dock	count=1
function	a subset of ||| subset	count=1
function_arg	widget [arg_2] ||| [function_1] category [arg_2]	count=2
arg	scheme ||| scheme error_handler	count=1
function	a disjoint [function_2] ||| [function_2] [function_1]	count=1
arg	box ||| box	count=2
module	items ||| widgets unsupervised	count=1
arg	[arg] which contain ||| [arg]	count=1
function_arg	to a [arg_2] ||| [function_1] ows stream scheme [arg_2]	count=3
function	a link (:class linkitem) ||| link	count=1
class	and sink nodes ||| edit	count=1
module	parse a scheme ||| scheme	count=1
function	title text font ||| font	count=1
function	each instance all ||| predict	count=2
module	the current :attr selection_behavior ||| utils	count=1
function	the current index ||| current	count=2
module	node to the ||| canvas	count=1
module	selects ||| utils plot	count=2
arg	the number ||| number	count=2
class	updates ||| signal	count=1
class	the generated [class] is ||| owrule [class]	count=1
function	[function_1] content of ||| [function_1] node [function_2]	count=1
function	instance from [function_2] ||| [function_1] [function_2]	count=3
function_arg	[function_1] hint ||| [arg_2] [function_1]	count=1
module	to the plot how ||| widgets utils plot	count=1
arg	box with ||| widget box	count=2
module	return true if the ||| canvas	count=1
function_arg	progress value ||| progress value	count=1
arg	with title to ||| title	count=1
class	the legend ||| legend	count=1
arg	a data table into ||| table varlist	count=1
arg	[arg_1] base_color ||| [arg_2] [arg_1]	count=2
module	of the ||| canvas	count=1
function	runtime [function_2] ||| [function_1] [function_2]	count=2
arg	a stream in ||| stream	count=1
function	application style's standard icon ||| standard icon	count=1
module	set ||| canvas document	count=1
arg	sourcerow under ||| sourcerow	count=1
function	calculate the [function_2] ||| [function_2] [function_1]	count=1
function	in ||| add item	count=1
function	a triangle using ||| draw triangle	count=1
class	the editor ||| widget	count=1
class	:class ||| line edit	count=1
arg	start_node ||| start_node	count=1
function	exclusive ||| exclusive	count=1
arg	data [arg_2] ||| [arg_2] [arg_1]	count=3
arg	item view if it ||| view	count=1
function_arg	the value [arg_2] ||| [function_1] [arg_2]	count=1
class	the updates ||| signal manager	count=1
function	remove the ||| remove action	count=1
module	return an source ||| canvas	count=1
arg	a table to ||| table	count=1
function	[function_1] selected default ||| [function_1] [function_2]	count=1
function	parse ||| parse	count=1
class	arrow as ||| arrow annotation	count=2
function	tool tip if a ||| add tool tip	count=1
function	standard icon for ||| standard icon	count=2
function	result ||| result	count=2
function	[function_1] to ||| [function_1] [function_2]	count=1
class	from the [class_2] ||| [class_1] [class_2]	count=2
class	with ||| quick	count=1
function	exist in this ||| has	count=1
function	to a [function_2] ||| [function_2] [function_1]	count=1
function	align nodes ||| align	count=1
function	to ||| scheme to	count=1
function	add a :class ||| add	count=1
module	the ||| scheme	count=2
arg	name ||| name	count=8
module	that [module_2] ||| [module_1] [module_2]	count=2
function	register a :class widgetdescription ||| register	count=1
function	the tab [function_2] ||| [function_2] [function_1]	count=2
function	curve that ||| curve	count=1
module	a ||| data utils	count=2
function	end ||| end	count=3
function	the cell at ||| cell	count=1
function	dynamic link ||| set dynamic	count=1
class	instance to the ||| canvas	count=1
arg	content of ||| header_rows header_columns	count=1
arg	page ||| page	count=2
function	initialize ||| initialize	count=2
function_arg	gradient [arg_2] ||| [function_1] base_color [arg_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] scheme scheme [arg_2]	count=6
module	updates the ||| widgets utils	count=1
function	of recently accessed ||| recent scheme	count=2
arg	indices ||| left right indices	count=1
function_arg	plan [arg_2] ||| [arg_2] [function_1]	count=7
arg	[arg_1] axis ||| [arg_2] [arg_1]	count=4
function	[function_1] source/sink nodes ||| [function_1] [function_2]	count=2
arg	arr along given axis ||| x weights axis dtype	count=1
function	initialize ||| initialize widget	count=1
function	processing [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] name ||| [arg_2] [function_1]	count=4
class	baseline of the arrow ||| arrow	count=1
module	sure to ||| widgets model	count=1
function	qwidget instance for the ||| widget for	count=1
arg	given node ||| node x	count=1
function_arg	scheme to [arg_2] ||| [function_1] ows stream scheme [arg_2]	count=2
module	[module_1] number ||| [module_1] [module_2]	count=2
function	commit the current contents ||| commit	count=1
arg	the node in ||| node	count=1
function	the learner ||| learner	count=1
function_arg	zoom level setting ||| zoom zoom_level	count=1
arg	obj ||| obj	count=6
arg	for node ||| node	count=2
arg	a a stream in ||| stream pretty	count=1
module	editor ||| canvas document	count=2
module	on the :func scheme ||| scheme	count=1
function	default rule which mimics ||| default rule	count=1
function	[function_1] the actual ||| [function_1] [function_2]	count=4
class	update ||| heatmap widget	count=1
function	tab [function_2] ||| [function_2] [function_1]	count=3
arg	start by count cells ||| start count	count=1
function	arrow style ||| arrow style	count=1
module	determine ||| classification	count=2
function	[function_1] button ||| [function_2] [function_1]	count=7
class	source ||| edit	count=1
class	start ||| scheme edit widget	count=1
class	over the item ||| item	count=1
function_arg	category [arg_2] ||| [function_1] [arg_2]	count=2
arg	we calculate ||| axis	count=1
function	containing the cell at ||| cell	count=1
function	list of recently accessed ||| recent scheme list	count=1
function	if the control is ||| is control	count=1
arg	the page ||| page	count=1
function	parameters [function_2] ||| [function_2] [function_1]	count=2
function	generate ||| generate	count=1
class	names text item ||| link item	count=1
function	instance for ||| for	count=3
function	:attr theme_name ||| update	count=1
function	data input to ||| data	count=1
class	content into view ||| view	count=1
arg	displayed at position ||| position	count=1
arg	name [arg_2] ||| [arg_2] [arg_1]	count=2
arg	text the text may ||| text	count=1
arg	the number into the ||| number suffix	count=2
class	annotation text ||| text annotation	count=2
function	possible ||| possible	count=1
arg	its index ||| text icon tooltip	count=1
class	the executor and ||| thread executor	count=1
function	[function_1] item animation ||| [function_2] [function_1]	count=3
arg	of 8 qrectf ||| pixmap_rect shadow_rect	count=1
function	maximum number of ||| maximum	count=1
class	the arrow is ||| arrow	count=1
module	transformed value is returned ||| preprocess	count=1
class	for ||| dendrogram widget	count=1
function	clear reset the scene ||| clear scene	count=1
class	the grid ||| plot grid	count=1
function	[function_1] names ||| [function_1] [function_2]	count=3
class	mean value of ||| mean	count=1
module_class	[module_1] root ||| [module_1] gui [class_2]	count=1
module	reshape ||| widgets visualize	count=1
class	of ||| watcher	count=1
class	if a tooltip ||| tooltip manager	count=1
arg	of a table ||| table	count=1
function	the title ||| title	count=1
function	input line ||| input line	count=2
arg	[arg] specified ||| category value [arg]	count=1
class	the manager ||| manager	count=1
function	value ||| value	count=1
arg	data split [arg_2] ||| [arg_2] [arg_1]	count=2
arg	[arg_1] orange scheme ||| [arg_2] [arg_1]	count=6
module	modules source filename ||| registry	count=1
function	search paths for the ||| search paths from description	count=1
arg	state ||| state	count=2
function	[function_1] node ||| [function_2] [function_1]	count=8
function	to the section name ||| get widget name	count=1
function	connect ||| connect nodes	count=1
function	current widget changed ||| on current changed	count=3
function	hierarchical clustering using a ||| clustering	count=1
module	value of :attr ||| utils	count=1
arg	updated color weight background ||| color background weight	count=1
function	the current index by ||| current	count=1
class	forest ||| forest	count=2
class	interpolated ||| cross fade	count=1
function	update the visibility of ||| update	count=1
class	schedule ||| signal manager	count=2
function	current index ||| current	count=2
arg	updated color weight ||| color background weight	count=1
function	[function_1] quick ||| [function_1] [function_2]	count=1
arg	include_more_link ||| desc include_more_link	count=1
class	the control [class_2] ||| [class_2] [class_1]	count=1
function	text ||| text	count=4
module	parse ||| canvas scheme	count=1
function	[function_1] directory ||| [function_2] [function_1]	count=3
function	a python tuple literal ||| tuple eval	count=1
function	transformation ||| transformation	count=1
function_arg	[function_1] columns ||| [arg_2] [function_1]	count=5
function	[function] inside volume ||| select [function]	count=1
function	for tab ||| tab	count=2
function	[function] input ||| refresh [function]	count=1
module	or 'literal') and return ||| canvas scheme	count=1
arg	a :class element based ||| element level	count=1
arg	checkable buttons and ||| orientation buttons widget nomargin	count=1
arg	inside the viewport ||| xmargin ymargin	count=1
function	indices ||| merge indices	count=1
arg	a plot to ||| name plot	count=1
function	hash value that ||| hash dist	count=1
function	a node meta description ||| node meta	count=1
module	current :attr ||| plot	count=1
function	clear reset the ||| clear	count=1
function	expanded state ||| expanded	count=1
class	return the ||| future watcher	count=1
function	paths for ||| paths from	count=1
class	size ||| window size	count=1
arg	tree [arg_2] ||| [arg_1] [arg_2]	count=1
module_class	of [class_2] ||| [module_1] [class_2]	count=1
class	the ||| owconfusion	count=1
function	set the node ||| set	count=1
function	return a qrectf ||| rect	count=1
function	and ||| edit links	count=2
function	[function_1] graph ||| [function_1] [function_2]	count=1
module	return it's index ||| canvas	count=2
class	if zooming in ||| view	count=1
arg	given sourcerow ||| sourcerow	count=1
function	index ||| current index	count=1
function	set the current shown ||| set current	count=1
arg	execution of the :class ||| timeout	count=1
module	it to ||| widgets	count=1
function	[function_1] name for ||| [function_2] [function_1]	count=1
module	sample ||| canvas canvas items	count=1
function	[function_1] line ||| [function_1] [function_2]	count=4
arg	representation of the scheme ||| scheme	count=1
function_arg	name for obj ||| name obj	count=2
function	parameters as a ||| parameters	count=1
arg	(:class outputsignal) and input ||| input	count=1
function	the user interaction ||| user interaction	count=1
function	[function_1] parent ||| [function_2] [function_1]	count=1
function	of columns in the ||| columns	count=1
class	dock (same as setexpanded ||| collapsible dock widget	count=1
arg	checkable buttons and connects ||| orientation buttons widget nomargin	count=1
class	reset the widget ||| matrix	count=1
class	arrow is changed with ||| arrow annotation	count=1
module_class	invalidate [class_2] ||| [module_1] stack [class_2]	count=1
module	array with numbers ||| widgets utils	count=1
function	the averages [function_2] ||| [function_1] [function_2]	count=1
arg	plot to ||| name plot	count=1
class	a ||| base	count=1
class	tabs in the toolbox ||| tool box	count=1
function	register ||| register widget	count=2
class	set ||| graphics heatmap widget	count=2
function	the links ||| links	count=1
module	plot coordinates along the ||| utils plot	count=1
function	item animation ||| animation	count=2
arg	model or a view ||| model	count=1
arg	:class element [arg_2] ||| [arg_1] [arg_2] indent	count=1
function	move the [function_2] ||| [function_2] [function_1]	count=3
module	value of ||| widgets utils plot	count=1
function	schemes ||| schemes	count=1
function	the widget ||| widget desc to std item	count=1
function	default text ||| default text	count=2
module	that belong to ||| widgets utils	count=1
function	names visibility state ||| names visible	count=1
function	[function_1] position of ||| [function_1] [function_2]	count=2
function	the visible [function_2] ||| [function_2] [function_1]	count=3
function_arg	name [arg_2] ||| [function_1] [arg_2]	count=4
class	in the toolbox ||| tool box	count=2
class	widget ||| widget tool	count=2
function_arg	is the same mean [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	window transparency supported by ||| transparency supported	count=1
function	selects all points in ||| add	count=1
function	diagonal elements of ||| correct	count=1
arg	channel as link if ||| link	count=1
class	render tab ||| box tab button	count=1
class	scheme is displayed ||| scheme edit	count=1
module_class	compute discretization ||| preprocess discretization	count=1
module	table ||| widgets data	count=1
function_arg	a helper [arg_2] ||| [arg_2] [function_1]	count=2
arg	to sink_node ||| sink_node	count=1
function	of data input to ||| data	count=1
arg	constructing ||| links_in links_out	count=1
function	line ||| line	count=2
module	items that belong ||| utils	count=1
class	the arrow as a ||| scheme arrow annotation	count=2
function	the visible ||| visible score	count=1
class	is the dock ||| collapsible dock	count=1
function	[function_1] recently accessed ||| [function_2] [function_1]	count=4
class	reset the ||| owconfusion matrix	count=1
arg	item from the ||| item	count=1
arg	[arg_1] buttons ||| [arg_2] [arg_1]	count=1
function	[function_1] tool button ||| [function_1] [function_2]	count=1
class	dock (same as ||| dock	count=1
module	dictionary ||| widgets data	count=1
function	the diagonal ||| correct	count=1
function	get the bounding ||| rect	count=1
module	items ||| widgets visualize	count=2
function	paths for the category/widgetdescription ||| paths from description	count=1
arg	list of :class _signal ||| signals	count=1
class	instance [class] exception ||| [class]	count=1
class	the item draws it ||| node anchor item	count=1
class	arrow as a ||| scheme arrow	count=1
module	[module_1] belong to ||| [module_2] [module_1]	count=4
function	environment ||| env	count=1
function	calculate ||| calculate	count=1
class	paint ||| item delegate	count=1
module	of ||| utils	count=2
module_class	[module_1] arrow base ||| [module_1] [class_2]	count=2
module	the value ||| plot	count=1
function	show an message box ||| message	count=1
function	cache ||| cache has	count=1
function	label ||| label	count=2
module	of :attr ||| utils	count=1
class	arrow lines start and ||| scheme arrow annotation	count=1
function	contents have changed ||| changed	count=1
function_arg	[function_1] stream in ||| [function_1] ows stream scheme [arg_2]	count=2
function	[function_1] grid ||| [function_1] [function_2]	count=2
arg	if descriptor ||| descriptor	count=1
function	axis ||| axis	count=1
arg	check if descriptor ||| descriptor	count=1
function	compute basic [function_2] ||| [function_2] [function_1]	count=4
class	drop shadow ||| drop shadow	count=3
function	ratio [function_2] ||| [function_1] [function_2]	count=4
function	paint ||| paint event	count=2
module	state source and sink ||| canvas	count=1
module	uniform ||| canvas items	count=1
function	using axes ||| for axes	count=1
function	leaf nodes ||| leaves	count=1
function	the position ||| position	count=1
class	for which the manager ||| manager	count=1
arg	and execute the editlinksdialog ||| source_node sink_node initial_links	count=1
module	plot coordinates ||| utils plot	count=1
function	:attr selection_behavior ||| selection	count=1
arg	action at position ||| position	count=1
function	the node color for ||| node color	count=2
function	returns next 'possible' attribute ||| next	count=1
class	set ||| channel anchor	count=1
class	mean value of the ||| mean	count=1
arg	data table into ||| table varlist idvarlist groupvarlist	count=1
arg	the given columns ||| columns	count=1
function	a list ||| list	count=1
function	set the has ||| set has	count=2
function	raw ||| raw	count=1
function	set the regular expression ||| set	count=1
class	editor state ||| links edit widget	count=1
class	all points ||| owplot	count=1
module	value of :attr theme_name ||| utils plot	count=1
arg	a tree ||| tree	count=1
function	selection mode where ||| selection	count=1
function	extra columns that will ||| compute reduced extra	count=1
function	true if the control ||| control	count=1
function_arg	[function_1] the columns ||| [function_1] [arg_2]	count=3
class	the random forest ||| random forest	count=1
arg	for variables ||| variables	count=1
arg	with title [arg_2] ||| [arg_2] widget [arg_1]	count=1
function	a new widget ||| new	count=1
arg	in the merged ||| var_extra_data	count=1
rep	[module_class_1] of button ||| [module_class_1] [function_arg_2]	count=1
function	shape [function_2] ||| [function_2] [function_1]	count=2
function	checkable qaction for help ||| help	count=1
class	edit ||| edit	count=1
function	processing state flags for ||| node processing state	count=1
function	learner params of ||| get params	count=1
class	text annotation ||| text annotation	count=1
arg	the icon ||| icon	count=1
module	orange data ||| data	count=1
module	and return ||| canvas preview	count=1
arg	weight background and font ||| background weight	count=1
function	return a [function] ||| [function]	count=3
arg	the value ||| value	count=2
arg	the icon for ||| icon	count=1
module	current :attr selection_behavior ||| plot	count=1
class	an ||| tool tree	count=1
arg	x [arg_2] ||| [arg_2] [arg_1]	count=1
arg	number into the ||| number suffix	count=2
function	connect ||| connect	count=1
class	control point ||| control point rect	count=1
function	widget ||| widget desc to	count=1
module	the entire ||| widgets	count=1
function	current control point edit ||| control point edit	count=1
function	the widget description ||| widget	count=1
function_arg	current index [arg_2] ||| [function_1] [arg_2]	count=2
class	geometry of the item ||| arrow annotation	count=1
arg	single ||| x	count=1
function_arg	return [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
module	plot ||| widgets utils plot	count=7
function	message state ||| widget state	count=1
arg	for node ||| node message	count=1
function	set ||| set selected	count=1
function	update the property value ||| update	count=1
function	the title [function_2] ||| [function_1] [function_2]	count=1
function	prune ||| prune	count=1
function	an [function_2] ||| [function_1] [function_2]	count=1
class	elements of the matrix ||| owconfusion matrix	count=2
class	buttons ||| resize tool	count=1
function	parent ||| parent	count=1
function_arg	index of [arg_2] ||| [function_1] [arg_2]	count=3
function	set the :class ||| set scheme	count=1
function	an instance ||| scheme	count=1
class	is positive if zooming ||| graphics view	count=1
class	the text ||| text	count=4
function	global ||| global	count=1
class	update ||| graphics heatmap widget	count=1
arg	table ||| table varlist	count=1
function	paths for the ||| paths	count=1
function_arg	the channels [arg_2] ||| [arg_2] [function_1]	count=1
function	hint is ||| hint	count=1
function	the end ||| end pos	count=1
arg	stream and populate ||| stream	count=1
function	a critical ||| critical	count=1
module	tooltip ||| widgets utils plot	count=1
class	and sink nodes ||| widget	count=1
arg	an object in ||| order type	count=1
class	qrect) in ||| splash screen	count=1
function	[function_1] tab ||| [function_2] [function_1]	count=3
function_arg	[function_1] direction is ||| [function_1] [arg_2]	count=1
function	size [function_2] ||| [function_2] [function_1]	count=3
arg	with [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] model for ||| [function_1] [function_2]	count=2
function	meta ||| meta	count=1
module	return the widget ||| canvas gui	count=1
function	a helper ||| tip helper	count=1
class	a starting ||| search strategy	count=1
class	the mean value of ||| mean	count=1
class	the ||| future watcher	count=2
arg	content [arg_2] ||| [arg_2] [arg_1]	count=4
function	exp a [function] node ||| is [function]	count=1
function	tab button for ||| tab button	count=2
function	in a new ||| add item	count=1
function	source model for the ||| source model	count=1
class	the arrow is changed ||| arrow	count=1
arg	adding [arg_2] ||| [arg_2] [arg_1]	count=4
rep	[module_class_1] of button ||| [module_class_1] index [function_arg_2]	count=1
function	points in ||| add selection	count=1
arg	node for ||| node	count=1
module	in the ||| plot	count=1
function_arg	[function_1] [arg_2] ||| [function_1] tab icon index [arg_2]	count=2
function_arg	linear gradient [arg_2] ||| [function_1] base_color [arg_2]	count=2
arg	axis ||| x weights axis	count=1
function	[function_1] css linear ||| [function_2] [function_1]	count=1
module	updates the ||| utils	count=1
module	current ||| utils plot	count=4
function_arg	[function_1] html to ||| [arg_2] [function_1]	count=1
arg	execution ||| timeout	count=1
function	on the update ||| update	count=1
function_arg	[function_1] start_node ||| [arg_2] [function_1]	count=1
arg	[arg_1] columns ||| [arg_1] [arg_2]	count=2
function	radius ||| radius	count=2
function	size ||| size	count=10
function	np [function] that supports ||| [function]	count=4
module_class	[module_1] [class_2] ||| [module_1] utils [class_2]	count=3
arg	sink_node if there are ||| sink_node	count=1
class	return a checkable qaction ||| canvas	count=1
function_arg	[function_1] link (:class ||| [arg_2] [function_1]	count=4
function	[function_1] blending ||| [function_2] [function_1]	count=1
function_arg	[function_1] distribution ||| [arg_2] [function_1]	count=3
class	arrow lines start and ||| arrow annotation	count=1
function_arg	layout [arg_2] ||| [arg_2] [function_1]	count=3
module	selects ||| plot	count=1
class	legend ||| legend	count=1
module	the widget ||| evaluate	count=1
arg	for index ||| index	count=1
module	[module_1] plot coordinates ||| [module_1] [module_2]	count=6
module	classification ||| classification	count=1
arg	in indices ||| left right indices string_cols	count=1
module	if not ||| widgets	count=1
function	hints to ||| hints	count=1
function	instance from [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] selection rects ||| [function_2] [function_1]	count=1
class	set ||| menu page	count=4
function_arg	helper [arg_2] ||| [function_1] node [arg_2]	count=2
function	averages [function_2] ||| [function_2] [function_1]	count=1
function	compute [function_2] ||| [function_1] [function_2]	count=5
class	instance to the scene ||| canvas scene	count=1
function	quick help animation ||| set quick help animation	count=1
function	region of the ||| region	count=1
class	the widget ||| owconfusion	count=1
arg	[arg_1] links ||| [arg_2] [arg_1]	count=2
function	has [function_2] ||| [function_1] blocking state [function_2]	count=1
function	set the progress ||| set	count=1
function	set a subset of ||| set subset	count=1
function	return the [function_1] [function_2] the ||| [function_2] [function_1]	count=2
class	the random forest ||| skl random forest adapter	count=1
class	set ||| links node	count=2
function	cancelled ||| is cancelled	count=1
function	tracked info/warning/error message state ||| state	count=1
class	scheme ||| scheme edit widget	count=3
class	window [class_2] ||| [class_2] [class_1]	count=2
function_arg	curve that [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	paste [arg_2] ||| [function_1] code [arg_2]	count=1
function	blending factor between ||| blending factor	count=2
function	adds ||| add	count=1
function	triangle using ||| triangle	count=1
function_arg	wildcard filtering [arg_2] ||| [arg_2] [function_1]	count=1
class	invalidate the [class_2] ||| [class_1] [class_2]	count=1
function	value of a ||| combo value	count=1
function_arg	[function_1] icon for ||| [function_1] tab icon index [arg_2]	count=1
function	the quick ||| set quick	count=1
function	[function_1] ratio ||| [function_2] [function_1]	count=1
function_arg	to [arg_2] ||| [function_1] ows stream [arg_2]	count=1
function_arg	old ows [arg_2] ||| [arg_2] [function_1]	count=2
class	clear ||| custom rule learner	count=1
function	layout the ||| linear layout	count=1
arg	[arg] can be ||| [arg]	count=3
module	instance for ||| scheme	count=1
function	the constructor and calculate ||| calculate	count=1
function	[function_1] name for ||| [function_1] [function_2]	count=1
function	and [function_2] ||| [function_1] [function_2]	count=1
arg	for obj type ||| obj	count=1
function	the node [function_2] ||| [function_1] [function_2]	count=6
function	animation ||| animation	count=1
function	points ||| points	count=2
function_arg	[function_1] hint ||| [function_1] size [arg_2]	count=1
function	theme_name ||| update	count=1
function	if [function_2] ||| [function_1] [function_2]	count=1
class	source ||| widget	count=1
arg	a qt model or ||| model	count=1
function_arg	[function_1] points ||| [function_1] [arg_2]	count=1
class	new ||| new link	count=1
class	reset ||| owconfusion	count=1
module	graph ||| plot	count=1
function	for each instance rules ||| predict	count=1
function	a tool [function_2] ||| [function_1] [function_2]	count=3
class	the ||| base	count=1
module	file ||| model	count=1
arg	draws a ||| position0 position1 position2 color0	count=1
module	the current ||| plot	count=2
module	return an iterator over ||| widgets visualize	count=1
module	the current :attr ||| utils plot	count=1
function	set a wildcard filtering ||| set filter wild card	count=1
arg	scheme from stream ||| stream	count=1
function	selection [function_2] ||| [function_1] [function_2]	count=1
function	of ||| update	count=1
class	create ||| new link action	count=1
arg	rows [arg_2] ||| [arg_1] [arg_2]	count=1
function	hierarchical clustering using ||| dist matrix clustering	count=1
function	score ||| score	count=1
class	controls ||| matrix	count=1
function	a [function] ||| [function]	count=10
function	render ||| render items	count=2
class	arrow as ||| scheme arrow annotation	count=3
arg	given size [arg_2] ||| [arg_1] [arg_2]	count=1
class	the update ||| manager	count=1
arg	color and alignment ||| alignment color	count=3
function	output ||| output	count=2
function	for the ||| widget	count=1
class	arrow as a start ||| arrow	count=1
function	update of a ||| update	count=1
function	load ||| load	count=1
function	:class qtextcharformat with updated ||| update char format	count=1
function	[function_1] model ||| [function_1] [function_2]	count=2
function_arg	[function_1] row in ||| [arg_2] [function_1]	count=1
class	tree a list ||| tree	count=1
arg	[arg_1] by group_var ||| [arg_1] [arg_2]	count=2
function	names ||| names	count=1
function	set ||| set	count=159
arg	instance cluster ||| cluster level height	count=1
function	[function_1] basic ||| [function_1] [function_2]	count=1
function	the default [function_2] ||| [function_2] [function_1]	count=1
arg	an object in a ||| order type	count=1
function_arg	entropy induced [arg_2] ||| [arg_2] [function_1]	count=1
function	result of the computation ||| result	count=1
function	[function_1] connection ||| [function_2] [function_1]	count=1
module	return ||| data	count=1
function	interaction ||| interaction	count=1
arg	table to ||| name table	count=1
function	add a link ||| add link	count=3
function	set the button ||| set button	count=2
class	widget ||| qt widget	count=1
function	from a [function_2] ||| [function_2] [function_1]	count=3
arg	in a tree structure ||| tree branches	count=1
arg	add a plot ||| name plot	count=1
function_arg	[function_1] [arg_2] ||| [function_1] obj [arg_2]	count=3
function	[function_1] the position ||| [function_2] [function_1]	count=1
function	insert category ||| insert	count=1
function	a new widget with ||| new	count=1
module	return the number of ||| canvas gui	count=1
function	enable/disable the dynamic ||| dynamic	count=1
function	[function_1] tool ||| [function_2] [function_1]	count=1
module	create and return ||| canvas canvas items	count=2
function	bounding box of ||| rect	count=1
class	return ||| future	count=1
function	orange ||| orange to	count=1
function	in a uniform ||| uniform	count=1
function_arg	[function_1] distribution ||| [function_1] cls d [arg_2]	count=3
function	removes ||| remove	count=1
class	arrow lines start ||| arrow annotation	count=1
module_class	[module_1] binding ||| [module_1] [class_2]	count=1
function	set the regular expression ||| set filter reg	count=1
class	tab ||| box tab	count=1
class	:attr ||| owplot	count=2
arg	node in on ||| node	count=1
function	to a a ||| scheme to	count=1
function	has ||| on	count=3
module	[module_1] to ||| [module_2] [module_1]	count=4
function	invert the [function_2] ||| [function_1] [function_2]	count=1
arg	from the model ||| model	count=1
class	an [class] given ||| [class]	count=1
function	sync ||| sync	count=1
class	sink nodes channels ||| links edit widget	count=1
function	[function_1] icon ||| [function_2] [function_1]	count=8
arg	qstyle ||| standard_pixmap	count=1
function	align nodes [function_2] ||| [function_1] [function_2]	count=3
function	the max ||| max	count=1
module_class	[module_1] point ||| [module_1] [class_2]	count=1
function	[function_1] owwidget ||| [function_1] [function_2]	count=3
function	[function_1] basic stats ||| [function_2] [function_1]	count=1
function	extra ||| reduced extra	count=1
module	source and sink ||| canvas	count=1
function	activate [function_2] ||| [function_1] [function_2]	count=1
function_arg	icon [arg_2] ||| [function_1] [arg_2]	count=1
module_class	menu [class_2] ||| [module_1] menu [class_2]	count=1
arg	source where ||| source	count=1
function_arg	[function_1] action from ||| [function_1] [arg_2]	count=3
function_arg	[function_1] for widget ||| [function_1] [arg_2]	count=4
function	their settings ||| settings	count=1
function	cache have ||| cache	count=1
module	value of ||| widgets utils	count=1
function	learner ||| get learner	count=1
function	reset the widget clear ||| clear	count=1
function_arg	[function_1] [arg_2] ||| [function_1] wide [arg_2]	count=6
function	with a brief ||| data brief	count=1
class	the tree ||| tree	count=1
function	clear all ||| clear	count=1
arg	checkable buttons ||| buttons	count=1
function_arg	[function_1] [arg_2] ||| [function_1] base_color [arg_2]	count=12
function	initialize the ||| initialize	count=1
function	[function_1] of ||| [function_2] [function_1]	count=2
arg	the output [arg_2] ||| [arg_1] [arg_2]	count=1
function	named entry from the ||| meta entry	count=1
module	return the ||| canvas canvas	count=12
class	a :class ||| canvas scene	count=1
arg	with title to list ||| title	count=1
module	a qpainterpath ||| canvas items	count=2
class	the dock ||| collapsible dock widget	count=1
arg	a data table into ||| table varlist idvarlist groupvarlist	count=1
function	to [function_2] ||| [function_2] [function_1]	count=6
class	the ||| owload	count=1
function	drawing a shadow ||| shadow pixmap	count=1
arg	anchor ||| anchor	count=1
module	selects ||| widgets	count=1
function	helper function for ||| helper	count=1
function	parameters as ||| parameters	count=1
module_class	[module_1] [class_2] ||| [module_1] arrow [class_2]	count=1
class	add ||| quick menu	count=1
function_arg	[function_1] [arg_2] ||| [function_1] module mtime [arg_2]	count=2
arg	name and ||| name	count=1
function	a uniform ||| uniform	count=1
arg	based ||| level	count=1
arg	a data table into ||| table	count=1
class	zooming ||| graphics view	count=1
function	bounding ||| rect	count=1
function	update the domain hints ||| update domain role hints	count=1
function	[function_1] properties ||| [function_2] [function_1]	count=9
module	create a qpainterpath ||| items	count=2
function	interpret the data ||| features	count=1
arg	the size policy and ||| policy	count=1
function_arg	layout the points ||| linear layout points	count=2
class	executor and free ||| executor	count=1
function	the cache have ||| cache has	count=1
function_arg	[function_1] :class _signal ||| [function_1] [arg_2]	count=1
function	method for [function_2] ||| [function_2] [function_1]	count=1
class	set ||| canvas tool dock	count=1
arg	content of [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	[function_1] if include_more_link ||| [function_1] [arg_2]	count=1
class	tab only on a ||| tab bar	count=1
class	controls ||| owconfusion matrix	count=1
class	the view ||| zoomable graphics view	count=1
function	class information entropy induced ||| entropy	count=1
class	:class qgraphicsobject ||| item	count=1
function	the widget clear controls ||| clear	count=1
class	is ||| signal manager	count=1
function	statistic for given distributions ||| statistic	count=1
function	remove [function_2] ||| [function_2] [function_1]	count=6
function	create a [function_2] ||| [function_2] [function_1]	count=10
function	bind this ||| bind	count=1
function	paths for ||| paths	count=1
module	selects all ||| plot	count=1
function	method [function_2] ||| [function_1] [function_2]	count=2
function	of all parents ||| parents	count=1
function_arg	plan for [arg_2] ||| [function_1] [arg_2]	count=1
arg	show [arg_2] ||| [arg_1] [arg_2]	count=1
function	a node [function_2] ||| [function_1] [function_2]	count=2
function	search paths ||| search paths	count=1
function	identity modelview transform a ||| 2d mode	count=1
arg	output and ||| output	count=1
function	the message text ||| text	count=1
arg	given sourcerow under parent ||| sourcerow	count=1
module	[module_1] items ||| [module_1] [module_2]	count=2
arg	items selection state ||| item state	count=1
module	node ||| canvas canvas items	count=3
arg	[arg_1] into category ||| [arg_2] [arg_1]	count=2
function	generate a ||| generate	count=1
arg	link if ||| link	count=1
function_arg	visible inside [arg_2] ||| [arg_2] [function_1]	count=1
module	plot ||| utils plot	count=15
module_class	[module_1] shadow ||| [module_1] [class_2]	count=4
class	the mean value ||| mean	count=1
function	can the a ||| can	count=1
function	widgets expanded ||| expanded	count=1
function	remove the widget ||| remove	count=1
module_class	[module_1] source property ||| [module_1] [class_2]	count=2
function	instance from a node ||| from node	count=1
module	a qpainterpath ||| items	count=2
module	return the title description ||| canvas	count=1
function	tip ||| tip	count=1
arg	icon for ||| icon	count=1
class	widget ||| widget tool grid	count=1
class	baseline of the arrow ||| arrow item	count=1
function	text geometry used in ||| text geometry	count=1
function	compositing manager running ||| compositing enabled	count=1
module	the updates ||| scheme	count=1
class	drawing the grid lines ||| plot grid	count=1
arg	with color [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	for the [arg_2] ||| [function_1] instance [arg_2]	count=1
module_class	current sloppy [class_2] ||| [class_2] [module_1]	count=1
module	the value of ||| utils	count=1
function_arg	[function_1] [arg_2] ||| [function_1] category [arg_2]	count=4
function	widget settings [function_2] ||| [function_2] [function_1]	count=1
function_arg	printed contents [arg_2] ||| [arg_2] [function_1]	count=2
class	button ||| welcome dialog	count=1
function	setting the user interaction ||| set user interaction	count=1
module_class	[module_1] scheme ||| canvas [module_1] [class_2]	count=1
class	which the manager ||| manager	count=1
class	the matrix ||| matrix	count=2
function_arg	disjoint set [arg_2] ||| [function_1] label [arg_2]	count=1
arg	(:class menupage) with name ||| name	count=1
arg	p ||| p	count=2
class	a tooltip with ||| tooltip	count=1
module	return the ||| canvas	count=76
arg	data split ||| data	count=1
arg	in d ||| d	count=1
class	the editor state source ||| edit widget	count=1
function	[function_1] title text ||| [function_2] [function_1]	count=1
function	all points ||| selection	count=1
class	state of the node ||| node	count=1
function_arg	find an [arg_2] ||| [arg_2] [function_1]	count=3
function	graph ||| graph	count=1
class	the ||| links edit	count=1
arg	object in [arg_2] ||| [arg_2] [arg_1]	count=1
class	view ||| view	count=2
module	the current ||| canvas document	count=4
function_arg	[function_1] [arg_2] ||| [function_1] scheme links [arg_2]	count=4
function	[function_1] the icon ||| [function_2] [function_1]	count=1
function	[function_1] meta description ||| [function_1] [function_2]	count=6
arg	for widget ||| widget text icon tooltip	count=1
class	to edit the ||| edit widget	count=1
function	for [function_2] ||| [function_1] [function_2]	count=1
function	printed contents ||| node info reg	count=1
function	statistic ||| statistic	count=1
class	the tool grid the ||| tool grid	count=1
function	the currently highlighted ||| hover	count=1
arg	for index from the ||| index	count=1
function	set the action role ||| set action	count=1
class	an action we ||| tool tree	count=1
module	data value ||| data	count=1
arg	rules ||| rules	count=1
arg	stream in orange scheme ||| scheme stream pretty	count=1
module	corresponding scheme ||| scheme	count=1
arg	for obj type or ||| obj	count=1
class	between which to edit ||| edit	count=1
module	scheme ||| canvas scheme	count=3
function	widget instance is ||| widget	count=1
class	get ||| skl tree adapter	count=1
function_arg	value [arg_2] ||| [function_1] [arg_2]	count=1
function	qpainterpath of ||| path	count=1
function	[function_1] source/sink nodes ||| [function_2] [function_1]	count=2
function	calculate the [function_2] ||| [function_1] [function_2]	count=1
function	of lines in the ||| lines	count=1
module	subclass) instance to the ||| canvas	count=1
function	deleting the [function_2] ||| [function_2] [function_1]	count=1
function	help ||| help	count=5
class	random forest ||| skl random forest adapter	count=1
module	updates ||| widgets utils plot	count=2
class	a dictionary ||| base	count=1
class	dock ||| dock widget	count=1
arg	point ||| point	count=1
function	rule ||| rule	count=2
function	the hierarchical clustering ||| clustering	count=1
arg	qt model or ||| model selected	count=1
arg	from ||| category_name	count=1
function_arg	[function_1] [arg_2] ||| [function_1] instance [arg_2]	count=2
function	the node ||| node	count=4
arg	set of checkable buttons ||| buttons widget nomargin	count=1
module	if possible ||| canvas utils	count=1
arg	delete the start end ||| start end	count=1
function	the source/sink nodes (:class ||| nodes	count=2
function	control point edit ||| control point edit	count=3
module	transformed ||| preprocess	count=3
class	into view ||| view	count=1
class	a ||| edit widget	count=6
arg	a number of folds ||| folds	count=1
module	plot owlegend ||| plot	count=1
function	set a [function_2] ||| [function_1] [function_2]	count=11
class	set ||| tool grid	count=4
module	:attr selection_behavior ||| widgets	count=1
arg	color weight ||| color background weight	count=1
function	stop the update ||| stop	count=1
class	the item ||| annotation	count=1
class	initialize ||| viz rank	count=1
function	[function_1] data input ||| [function_2] [function_1]	count=3
function	to the section name ||| widget name	count=1
function	source/sink nodes (:class ||| nodes	count=2
class	a new ||| new link action	count=1
arg	description of data ||| data	count=1
module	selection_behavior ||| utils plot	count=2
function	on the ||| on	count=1
function	completely recalculated ||| invalidate	count=1
function	[function_1] a disjoint ||| [function_2] [function_1]	count=3
function	cache dictionary ||| cache	count=1
class	compress ||| signal manager	count=1
class	creates ||| owplot gui	count=9
arg	rows given in indices ||| left right indices	count=1
function	single [function] ||| set main [function]	count=1
function_arg	index of page ||| index of page	count=1
module	return its ||| canvas gui	count=1
module	or 'literal') and return ||| canvas	count=1
function_arg	[function_1] constructing ||| [arg_2] [function_1]	count=2
module	for ||| data	count=1
module	return true ||| canvas document	count=1
function_arg	[function_1] [arg_2] ||| [function_1] child [arg_2]	count=11
function	fix [function_2] ||| [function_2] [function_1]	count=3
class	the scheme ||| scheme edit	count=5
arg	policy and the ||| policy	count=1
function	is the ||| is	count=2
module	return its string ||| canvas scheme	count=1
class	create ||| text annotation	count=1
function_arg	a [function_1] [arg_2] ||| [function_1] [arg_2]	count=37
module	to the ||| widgets	count=5
function	link (:class ||| link	count=1
function	tab [function_2] ||| [function_1] [function_2]	count=3
class	state source and sink ||| links edit widget	count=1
class	channel names text item ||| item	count=1
function	selection_behavior ||| selection	count=1
module	samples data ||| data	count=1
function	a link (:class ||| link	count=1
arg	entry for mod_path ||| mod_path distribution	count=1
function	a default palette ||| default palette	count=1
module	and sink nodes channels ||| canvas	count=1
function	all [function] ||| dependent [function]	count=3
arg	contents so child ||| child	count=1
class	new ||| node item	count=1
arg	use _augment_indices to ||| var_data extra_map as_string	count=2
function	[function_1] new ||| [function_2] [function_1]	count=1
module	item to the document ||| canvas document	count=1
function	the tool ||| tool	count=1
function	paths for the category/widgetdescription ||| paths from	count=1
function	reshape a ||| reshape	count=1
arg	the description into ||| module mtime description distribution	count=1
function	a legend ||| legend	count=1
function	nodeitem ||| node items	count=1
class	binding ||| binding	count=1
class	points in the ||| owplot	count=1
function	for common point properties ||| point properties box	count=1
function	the scheme scheme ||| scheme	count=1
class	tab only on ||| tab bar	count=1
module	the ||| canvas canvas	count=15
module	return absolute filename for ||| canvas	count=1
arg	path ||| path	count=1
arg	stream and populate a ||| stream	count=1
function	urls ||| drag enter event	count=2
function	selection mode ||| selection	count=1
module	and sink ||| canvas document	count=1
module	instance ||| canvas scheme	count=1
function	control is ||| is control active	count=1
arg	the execution of the ||| timeout	count=1
function	search paths for ||| search paths from description	count=1
module	the current selection to ||| widgets	count=1
class	depending on the expanded ||| collapsible dock	count=1
function_arg	helper function [arg_2] ||| [arg_2] [function_1]	count=4
function	a drag ||| drag	count=1
arg	the widget ||| widget	count=1
module_class	return the [class_2] ||| [module_1] preview [class_2]	count=1
function	selection rects ||| selection rects	count=2
arg	add a plot to ||| name plot	count=1
function_arg	set value to ||| set value	count=1
function	set the tab button ||| set tab	count=1
module	of the computation ||| utils	count=1
module	of ||| scheme	count=1
function	paths ||| paths	count=1
class	and sink nodes channels ||| links	count=1
module	state source and ||| canvas document	count=1
class	to [class] ||| [class]	count=2
function	select the ||| select	count=2
module	from plot [module_2] ||| [module_1] [module_2]	count=4
arg	[arg_1] sums to ||| [arg_2] [arg_1]	count=1
function	the leaf nodes ||| leaves	count=1
function_arg	[function_1] action ||| [function_1] [arg_2]	count=3
function	neighbor [function_2] ||| [function_1] [function_2]	count=1
module	value of ||| widgets	count=1
function	add ||| add page	count=1
class	the dendrogram ||| dendrogram	count=2
class	(:class linkitem) from the ||| canvas	count=1
class	property ||| bound property	count=1
arg	content of a ||| header_rows header_columns	count=1
function	available [function] ||| refresh [function]	count=3
function	ui ||| ui	count=1
function_arg	brief [arg_2] ||| [arg_2] [function_1]	count=1
function	channels ||| channels	count=2
class	set ||| tool tree	count=1
function	:class qtextcharformat ||| update char format	count=1
module	items that ||| utils	count=1
module	return the state of ||| canvas canvas items	count=1
function_arg	[function_1] node ||| [arg_2] [function_1]	count=6
function	the current :attr selection_behavior ||| selection	count=1
function_arg	standard icon [arg_2] ||| [arg_2] [function_1]	count=1
class	zooming in otherwise ||| zoomable graphics view	count=1
function	set the baseline of ||| set	count=1
function	the progress [function_2] ||| [function_1] [function_2]	count=1
class	zooming in otherwise negative ||| zoomable graphics view	count=1
class	source and ||| links edit widget	count=1
class	entropy of distributions in ||| entropy	count=1
function_arg	[function_1] module ||| [function_1] [arg_2]	count=4
class	root ||| tool tree	count=1
function	each instance ||| predict	count=2
class	widget ||| links edit widget	count=1
function	compress a list ||| compress signals	count=1
function	run the [function_2] ||| [function_2] [function_1]	count=2
function_arg	rows [arg_2] ||| [function_1] [arg_2]	count=1
class	pixmap ||| cross fade pixmap	count=1
class	random forest ||| skl random forest	count=1
class	the content into view ||| view	count=1
arg	by group_var ||| group_var	count=1
function	[function_1] link's runtime ||| [function_1] [function_2]	count=1
arg	an ancestor [arg] ||| [arg]	count=2
function_arg	[function_1] position ||| [arg_2] [function_1]	count=2
function	extra columns that ||| extra	count=1
function	range iterator ||| range	count=1
function	the current control ||| control	count=1
function	if set ||| set	count=2
function	move the [function_2] ||| [function_1] [function_2]	count=3
arg	start end into ||| start end	count=2
function	extra columns ||| extra	count=1
arg	:class element [arg_2] ||| [arg_2] [arg_1]	count=1
function	the anchor ||| anchor	count=2
class	[class_1] as a ||| [class_2] [class_1]	count=4
function	start [function_2] ||| [function_2] [function_1]	count=3
function_arg	[function_1] scheme format ||| [function_1] etree [arg_2]	count=1
function	[function_1] is visible ||| [function_2] [function_1]	count=1
arg	draws ||| position0 position1 position2 color0	count=1
function_arg	schedule a [arg_2] ||| [arg_2] [function_1]	count=1
function	a valid [function_2] ||| [function_1] [function_2]	count=2
function	all ||| add	count=1
arg	different colors ||| color_data	count=1
module	to ||| widgets data utils	count=2
arg	base_color ||| base_color	count=1
arg	[arg_1] sink_node if ||| [arg_1] [arg_2]	count=1
arg	[arg_1] item view ||| [arg_2] [arg_1]	count=4
function	pixmap transformation ||| transformation	count=1
arg	the given [arg] returns ||| [arg]	count=1
function	disjoint ||| disjoint	count=1
module	state source ||| canvas	count=1
function	the zoom ||| zoom	count=1
function	node color ||| node color cls	count=2
function_arg	[function_1] include_more_link ||| [arg_2] [function_1]	count=1
class	sloppy button a tab ||| tab	count=1
function	regression ||| reg	count=1
arg	checkable buttons and ||| buttons	count=1
function	[function_1] visible columns ||| [function_2] [function_1]	count=1
arg	at index start by ||| start	count=1
module_class	to [class_2] ||| [module_1] [class_2]	count=2
arg	array x ||| x	count=1
class	sink nodes channels ||| edit	count=1
function	shown in a flattened ||| flattened	count=1
function	of items ||| set items	count=1
function	dendrogram widgets ||| dendrogram widgets	count=2
module	controls ||| widgets	count=1
function	[function_1] heatmap ||| [function_2] [function_1]	count=1
arg	the qt item view ||| view	count=1
arg	a [arg] ||| [arg]	count=3
function	line [function_2] ||| [function_2] [function_1]	count=1
arg	stream in orange scheme ||| scheme stream pretty pickle_fallback	count=1
function_arg	[function_1] helper function ||| [function_1] [arg_2]	count=1
function	instance is visible inside ||| visible	count=1
class	tab ||| tool box	count=2
class	to [class] and ||| [class]	count=2
module	selects all points ||| widgets	count=1
function	application style's standard ||| standard	count=1
function	:class qtextcharformat ||| char format	count=1
function	if ||| if	count=1
arg	widgetregistry ||| entry_point cached	count=1
arg	from stream and populate ||| stream	count=1
function	time as ||| time	count=1
arg	:class _signal for ||| signals	count=1
class	tab only ||| tab	count=1
function_arg	[function_1] points a ||| [arg_2] [function_1]	count=1
function	[function_1] central widget ||| [function_2] [function_1]	count=2
function	select ||| select	count=4
class	sink ||| links edit	count=1
function	scheme scheme from a ||| scheme	count=1
module	[module_1] document ||| [module_1] [module_2]	count=22
function_arg	model for [arg_2] ||| [arg_2] [function_1]	count=1
class	point symbol ||| owlegend	count=2
arg	with title [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] pos ||| [function_1] scene [arg_2]	count=1
class	a new ||| widget	count=1
class	geometry of the ||| resize arrow annotation	count=1
function	category with ||| category	count=1
class	source [class_2] ||| [class_2] [class_1]	count=2
function	a brief description of ||| brief	count=1
class	entire graph ||| owplot	count=1
arg	links to ||| links	count=1
function	activate [function_2] ||| [function_2] [function_1]	count=1
module	hides the plot ||| widgets utils plot	count=1
function	subset of data input ||| subset data	count=1
function	set the progress indicator ||| set	count=1
function	calculate a hash value ||| hash	count=1
arg	a stream in orange ||| stream pretty pickle_fallback	count=1
arg	x ||| x	count=2
class	input ||| owvenn diagram	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2]	count=176
arg	if node is [arg_1] [arg_2] ||| is ancestor [arg_1] [arg_2]	count=2
function	the graph ||| graph	count=1
module	thread to the target ||| widgets utils	count=1
function	pause ||| pause	count=1
arg	in indices ||| right indices string_cols	count=1
arg	links to [arg_2] ||| [arg_2] [arg_1]	count=2
function	new widget ||| new	count=1
function	run [function_2] ||| [function_2] [function_1]	count=1
class	following an ||| classifier	count=1
function	document modified ||| modified strict	count=1
class	the buttons to fit ||| tool	count=1
function	class information entropy ||| entropy	count=1
class	and sink nodes channels ||| links edit widget	count=1
function_arg	[function_1] name of ||| [arg_2] [function_1]	count=1
arg	x array [arg_2] ||| [arg_2] [arg_1]	count=2
function	item animation enabled state ||| animation enabled	count=1
module	transformed value is ||| preprocess	count=1
module	of :attr ||| widgets utils	count=1
class	from the source model ||| item model	count=1
arg	the start end ||| start end	count=2
arg	handle receiving an ||| values	count=1
class	menu ||| menu	count=1
class	the arrow is changed ||| arrow annotation	count=1
arg	descriptor env ||| descriptor env	count=2
class	end ||| scheme edit widget	count=1
function	valid [function_2] ||| [function_2] [function_1]	count=2
arg	if include_more_link ||| include_more_link	count=1
class	menu ||| paged menu	count=1
function	to each ||| samples in	count=1
function	the cell ||| cell	count=1
function	text that is added ||| extension	count=1
class	only display the legend ||| legend	count=1
function	stop ||| stop	count=1
module	that belong [module_2] ||| [module_2] [module_1]	count=2
class	implementation of ||| widgets	count=1
function	all suitable attributes for ||| source attributes	count=1
class	root ||| tool grid	count=1
arg	[arg_1] table to ||| [arg_2] [arg_1]	count=4
arg	of the child ||| child	count=1
function	identity modelview transform a ||| set 2d mode	count=1
function	remove output ||| remove output	count=1
arg	stream in orange ||| stream pretty pickle_fallback	count=1
class	the widget and ||| edit widget	count=1
arg	rows ||| rows	count=1
arg	specified text, orientation ||| text orientation	count=1
module	to plot coordinates ||| widgets utils plot	count=2
class	the random ||| skl random	count=1
function	description from a ||| description	count=1
class	of the arrow ||| scheme arrow annotation	count=1
module	return true if ||| canvas	count=2
function_arg	confusion matrix [arg_2] ||| [function_1] [arg_2]	count=1
class	update ||| owsieve diagram	count=1
arg	cs distribution ||| cs	count=1
arg	a box with controls ||| widget box	count=2
function	into the scheme ||| scheme	count=1
module	[module_1] current focused ||| [module_1] [module_2]	count=2
function	valid entry for ||| has valid entry	count=2
class	widget ||| widget tool box	count=1
function	insert widget ||| insert widget	count=1
function	the geometry of the ||| geometry	count=1
function	set the sink ||| set sink	count=3
function	lines in the ||| lines	count=1
class	creates an :obj owtoolbar ||| owplot	count=1
module	sets the plot ||| utils plot	count=1
arg	insert the number ||| number suffix capitalize	count=1
arg	handler for the ||| attr_list	count=1
arg	and y_axis ||| y_axis	count=1
function	of the learner ||| get learner	count=1
function	[function_1] quick help ||| [function_1] [function_2]	count=1
class	current [class] ||| [class]	count=3
function_arg	to source ||| to source	count=1
function	the panning ||| panning	count=1
arg	checkable buttons and ||| buttons widget	count=1
module	if possible ||| utils	count=1
function_arg	[function_1] source ||| [arg_2] [function_1]	count=4
class	start ||| edit widget	count=1
function	the dynamic link ||| dynamic	count=1
class	should ||| body item	count=1
function	[function_1] selection mode ||| [function_2] [function_1]	count=2
module	adds it to the ||| widgets	count=2
arg	:class _signal ||| signals	count=1
function	params of a ||| get params	count=1
module	[module_1] to ||| [module_1] [module_2]	count=4
function	current control [function_2] ||| [function_1] [function_2]	count=3
arg	description ||| description distribution	count=1
arg	object in a ||| order type	count=1
function	selects all ||| add	count=1
module	is the ||| canvas	count=2
function	tool tip if ||| add tool tip	count=2
function	for tab [function_2] ||| [function_1] [function_2]	count=1
module_class	control [class_2] ||| [module_1] control [class_2]	count=1
function	max ||| max	count=1
module	the ||| utils plot	count=10
arg	source where the ||| source	count=1
function	[function_1] tool ||| [function_1] [function_2]	count=1
arg	name the name ||| names name	count=1
arg	and buttons and adds ||| buttons	count=1
module	current :attr ||| widgets utils	count=1
arg	a combo box ||| combo	count=1
function	tab button [function_2] ||| [function_1] [function_2]	count=1
function	the input [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] the position ||| [function_1] [function_2]	count=1
arg	with the given sourcerow ||| sourcerow	count=1
function	with a legend ||| legend	count=1
function	run the ||| run	count=1
arg	the output [arg_2] ||| [arg_2] [arg_1]	count=1
function	cell at ||| cell	count=1
class	a tooltip ||| tooltip manager	count=1
function	state ||| state	count=7
function	[function_1] of data ||| [function_2] [function_1]	count=3
class	tree ||| tree	count=2
class	the text [class_2] ||| [class_1] [class_2]	count=1
function	set to ||| set	count=1
function	extra ||| compute reduced extra	count=1
function	for the owbasewidget ||| for widget	count=1
function	reset ||| reset	count=2
class	[class] exception was ||| [class]	count=1
function	[function_1] nodes ||| [function_2] [function_1]	count=4
function	commit the current item ||| commit	count=1
function	runtime ||| runtime	count=2
function	their settings ||| widget settings	count=1
function	array of indices ||| indices	count=2
function_arg	[function_1] node ||| [function_1] processing state [arg_2]	count=1
arg	nodes in a tree ||| tree	count=1
function	re enumerate ||| re enumerate selections	count=2
class	of the arrow arrow ||| arrow annotation	count=1
module	file ||| widgets model	count=2
function	color for regression ||| color reg	count=3
function	widget changed ||| changed	count=1
arg	as link if ||| link	count=1
module	items ||| canvas canvas items	count=2
arg	widget state from ||| widget	count=1
class	state ||| links edit	count=1
module	[module_1] be ||| [module_2] [module_1]	count=2
module	entire graph ||| utils plot	count=1
function_arg	disjoint set [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	row with ||| row actions background	count=1
function	return the hierarchical clustering ||| matrix clustering	count=1
class	create ||| category toolbar	count=1
function	remove all selected items ||| remove selected	count=1
function	and modified ||| modified	count=1
class	set ||| animated stacked widget	count=1
arg	add content of ||| header_rows header_columns	count=1
function	info/warning/error message state ||| widget state	count=1
function	a tool tip ||| add tool tip	count=2
module	to the plot ||| widgets utils plot	count=2
arg	key to value ||| key value	count=3
class	tool grid ||| tool grid	count=2
function	is visible inside the ||| visible	count=1
function	to recalculate its ||| recalculate	count=1
function	a link (:class linkitem) ||| link item	count=1
arg	return [arg] ||| [arg]	count=1
function_arg	raw [arg_2] ||| [function_1] [arg_2]	count=2
arg	name of ||| name	count=1
function	hash value ||| hash	count=1
arg	model or a ||| model selected	count=1
module	the "zoom" ||| widgets	count=1
module_class	[module_1] scheme ||| [class_2] [module_1]	count=1
function	plan ||| links plan	count=1
function	a shadow ||| shadow pixmap	count=1
function	of recently accessed ||| recent	count=1
function	features ||| features	count=1
module	is the [module_2] ||| [module_1] [module_2]	count=2
class	current ||| model	count=1
function_arg	tab [arg_2] ||| [function_1] [arg_2]	count=1
arg	appear in the merged ||| var_extra_data	count=1
function_arg	hierarchical clustering [arg_2] ||| [function_1] [arg_2]	count=1
module	current sloppy button a ||| document	count=1
class	the stack and ||| animated stacked	count=1
arg	scheme format ||| scheme error_handler	count=1
function	learner params of a ||| get params	count=1
function	tuple containing the position ||| position	count=1
function	[function_1] entry for ||| [function_1] [function_2]	count=4
function	directory where widgets ||| dir	count=1
arg	will be adjusted whenever ||| autoadjust	count=1
function	the selected ||| selected	count=1
arg	a table ||| name table	count=1
function	method for [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] for node ||| [function_1] [arg_2]	count=2
function	shift all ||| shift	count=1
function_arg	the button [arg_2] ||| [function_1] [arg_2]	count=2
arg	of distribution d ||| cls d axis	count=2
module	the :func scheme ||| scheme	count=1
module	the current :attr ||| plot	count=1
function	set the [function_2] ||| [function_2] [function_1]	count=59
class	is ||| control point line	count=1
function	depth ||| depth	count=2
module	:attr theme_name ||| widgets utils	count=1
class	the :class ~ ||| scheme edit widget	count=1
function_arg	qaction at [arg_2] ||| [function_1] [arg_2]	count=1
class	pixmap ||| cross fade pixmap widget	count=1
function	[function_1] the geometry ||| [function_2] [function_1]	count=1
module	it to ||| widgets utils plot	count=1
function	return the parameters as ||| parameters	count=1
function	an iterator over widget ||| iter widget	count=1
function_arg	at index ||| tool tip index	count=1
class	edit ||| edit widget	count=1
function_arg	using axes [arg_2] ||| [arg_2] [function_1]	count=3
module	updates the current ||| plot	count=1
class	current translation and ||| owplot3d	count=1
function	return the result ||| result	count=2
arg	check if descriptor ||| descriptor attrs	count=1
function	the learner ||| get learner	count=1
function	widgets ||| widgets	count=2
function	rectangle using current ||| draw rectangle	count=1
class	buttons to fit ||| tool	count=1
arg	color [arg_2] ||| [arg_1] background [arg_2]	count=1
function	quick help ||| quick help	count=3
function	[function_1] factor ||| [function_1] [function_2]	count=1
module	this is the model ||| canvas application	count=1
module	reset ||| widgets evaluate	count=2
module	the [module] ||| [module]	count=2
arg	saved scheme from stream ||| stream	count=1
class	into the grid ||| tool grid	count=1
function	update the visible columns ||| update visible score columns	count=1
function	order ||| order	count=1
class	set ||| disable filter	count=1
function_arg	name for [arg_2] ||| [function_1] [arg_2]	count=4
class	the interaction ||| user interaction	count=1
arg	list of 8 qrectf ||| pixmap_rect shadow_rect	count=1
function	the tab button ||| tab button	count=2
function	[function_1] content ||| [function_1] node [function_2]	count=1
module_class	[module_1] the layout ||| [module_1] [class_2]	count=1
module	:attr ||| widgets utils plot	count=4
class	a :class ||| scene	count=1
function_arg	helper [arg_2] ||| [function_1] [arg_2]	count=2
function	new output [function_2] ||| [function_1] [function_2]	count=1
class	needs ||| owpythagoras tree	count=1
function	processing state flags for ||| processing state	count=1
class	stack and ||| animated stacked	count=1
class	insert ||| tool grid	count=1
function	[function_1] the central ||| [function_2] widget [function_1]	count=2
function_arg	[function_1] the description ||| [function_1] module mtime [arg_2]	count=1
class	[class_1] scene ||| [class_1] [class_2]	count=6
class	generate ||| rule learner	count=1
module	entire graph ||| plot	count=1
class	the current ||| model	count=1
arg	the variable whose ||| variable	count=2
function_arg	select a [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] node ||| [function_1] [function_2]	count=4
class	set ||| fade pixmap widget	count=2
class	selection_behavior ||| owplot	count=1
module	the value of ||| plot	count=1
arg	ancestor [arg] ||| [arg]	count=2
module_class	[module_1] over ||| [module_1] [class_2]	count=2
function	dynamic [function_2] ||| [function_1] [function_2]	count=1
arg	an ancestor [arg] is upstream ||| [arg]	count=1
function	the quick [function_2] ||| [function_2] [function_1]	count=3
module	maps ||| plot	count=1
function	css linear gradient ||| css gradient	count=3
module	the value of :attr ||| utils	count=1
arg	by heatmap_widget due to ||| heatmap_widget	count=2
class	selection ||| heatmap selection	count=1
class	arrow ||| arrow item	count=3
function	button for the ||| button	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] tab [function_arg_2]	count=1
function	entry ||| entry	count=3
function	[function] value ||| add [function]	count=1
function	get the contents of ||| get	count=1
function	replot the ||| replot	count=1
function	color [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] with name ||| [arg_2] [arg_1]	count=4
arg	the name should not ||| names name	count=1
function	set to true ||| set	count=1
class	widget ||| matrix	count=1
function	adds a tool tip ||| add tool tip	count=1
function_arg	[function_1] data split ||| [arg_2] [function_1]	count=1
class	selected widget ||| scheme edit widget	count=1
function	from a node meta ||| from node meta	count=1
function_arg	qaction at position ||| action at position	count=1
arg	have [arg] ||| x_data y_data [arg]	count=1
function	max depth slider is ||| depth	count=1
function	selection mode where the ||| selection	count=1
arg	color weight background and ||| color background weight	count=1
class	the current file ||| model	count=1
function	[function_1] widgets expanded ||| [function_2] [function_1]	count=1
module	points in the ||| plot	count=1
function	[function_1] default ||| [function_2] [function_1]	count=3
function	add the value of ||| combo value	count=1
arg	pixmap ||| pixmap	count=1
function	statistic for ||| statistic	count=1
arg	file like object proxy ||| color background weight italic	count=1
arg	thread (a :class qthread) ||| thread	count=1
function_arg	[function_1] of distribution ||| [function_1] cls d [arg_2]	count=2
function	anchor ||| anchor	count=4
function	printed contents ||| info reg	count=1
arg	[arg_1] input channels ||| [arg_2] [arg_1]	count=2
class	[class_1] shadow's ||| [class_1] [class_2]	count=1
class	the rule passes the ||| rule	count=2
function	select all ||| select from	count=1
function	available [function] input data's ||| refresh [function]	count=1
function	[function_1] paths ||| [function_1] [function_2]	count=1
module	current ||| widgets	count=3
class	text annotation ||| scheme text annotation	count=2
arg	description of data table ||| data	count=1
class	arrow [class_2] ||| [class_2] [class_1]	count=7
module	nodes channels ||| canvas document	count=1
function	[function_1] transformations zoom ||| [function_1] [function_2]	count=2
arg	qt model or ||| model	count=1
function	points positions ||| positions	count=1
function	and fits ||| and fit	count=1
function	columns of ||| columns	count=1
function	[function_1] the links ||| [function_1] [function_2]	count=1
function	visibility state ||| names visible	count=1
module_class	[module_1] sink ||| [module_1] [class_2]	count=2
function_arg	and [arg_2] ||| [arg_2] [function_1]	count=3
class	window rounded ||| frameless window	count=2
function	[function_1] [function_2] value ||| [function_1] [function_2]	count=2
arg	obj using format ('json' ||| obj	count=1
function	qaction instance for ||| action for	count=4
class	the buttons [class_2] ||| [class_1] [class_2]	count=1
arg	indices ||| indices string_cols	count=1
module	selection_behavior ||| plot	count=1
class	the annotation ||| annotation	count=3
module	controls ||| evaluate	count=1
function	[function_1] has ||| [function_1] [function_2]	count=1
arg	widget state from the ||| widget	count=1
module	the value ||| widgets utils	count=1
function_arg	at [arg_2] ||| [arg_2] [function_1]	count=3
arg	position index ||| index	count=1
arg	of a :class element ||| element	count=1
arg	of :class _signal for ||| signals	count=1
module	hierarchical clustering ||| clustering	count=1
arg	x [arg_2] ||| [arg_1] axis [arg_2]	count=1
function	heatmap widgets ||| heatmap widgets	count=2
function_arg	widget description desc ||| widget category desc	count=1
module	list of ||| items	count=2
function	the default [function_2] ||| [function_1] [function_2]	count=1
function_arg	index of [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] execute ||| [function_1] [arg_2]	count=2
arg	[arg] can ||| [arg]	count=3
class	rounded ||| frameless	count=1
function	plot settings ||| plot settings box	count=2
function	main application [function_2] ||| [function_2] [function_1]	count=1
function_arg	progress [arg_2] ||| [arg_2] [function_1]	count=1
function	information [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] meta ||| [function_2] [function_1]	count=6
function	from ||| from mime	count=1
function	extract column ||| column	count=1
function	each instance all rules ||| predict	count=1
function	[function_1] of data ||| [function_1] [function_2]	count=3
class	dock (same ||| dock widget	count=1
arg	point to the ||| point	count=1
function	for tab [function_2] ||| [function_2] [function_1]	count=1
module	of ||| utils plot	count=2
function	[function_1] items in ||| [function_1] [function_2]	count=1
function	[function_1] link's runtime ||| [function_2] [function_1]	count=1
function	bounding box of the ||| rect	count=1
class	set ||| preview dialog	count=1
arg	points of different colors ||| color_data	count=1
module	return the object ||| canvas	count=1
arg	node is an ancestor [arg_1] [arg_2] ||| is ancestor [arg_1] [arg_2]	count=2
arg	points ||| points	count=1
function	the number of ||| count	count=1
function	new output [function_2] ||| [function_2] [function_1]	count=1
function	with the schemenode properties ||| node properties	count=1
arg	name of [arg_2] ||| [arg_2] [arg_1]	count=2
function	standard [function_2] ||| [function_1] [function_2]	count=3
class	[class] and ||| [class]	count=2
function	index ||| index	count=6
module	current :attr selection_behavior ||| widgets utils	count=1
function	list of nodes ||| nodes	count=1
arg	start end from ||| start end	count=2
class	if the link ||| scheme link	count=1
module	explains to the plot ||| widgets utils plot	count=1
arg	a stream ||| stream pretty pickle_fallback	count=1
function_arg	the given [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] hint is ||| [function_2] [function_1]	count=1
module	trim ||| canvas help	count=2
module_class	[module_1] discretization ||| [module_1] [class_2]	count=2
function_arg	[function_1] direction ||| [arg_2] [function_1]	count=1
function	native or css ||| set native	count=2
function	[function_1] the widget ||| [function_2] [function_1]	count=1
function	reload ||| reload	count=1
arg	data table ||| table varlist idvarlist	count=1
module	return the modules ||| canvas registry	count=2
function	enabled ||| enabled	count=5
module_class	[module_1] scheme is ||| [module_1] [class_2]	count=2
function	transition animation ||| animation	count=1
module	all points in the ||| utils plot	count=1
arg	data table into a ||| table	count=1
module	value of :attr theme_name ||| utils	count=1
class	executor ||| thread executor	count=1
function	hints to be ||| role hints	count=1
function	run the default ||| run	count=1
class	discretization of the given ||| discretization	count=1
module	updates ||| utils plot	count=2
arg	stream in ||| stream pretty	count=1
arg	that was previously added ||| scheme_annotation	count=1
class	[class_1] fit inside ||| [class_1] [class_2]	count=2
function	[function_1] transformation ||| [function_1] [function_2]	count=1
function_arg	removes [arg_2] ||| [arg_2] [function_1]	count=3
arg	true if link ||| link	count=1
class	sink ||| link item	count=1
arg	group_var [arg_2] ||| [arg_1] [arg_2]	count=1
arg	to the scheme ||| scheme	count=1
module	widget ||| widgets evaluate	count=2
class	edit the links ||| links edit	count=1
function	set a filter ||| set filter	count=2
function	for each instance all ||| predict	count=2
class	node ||| node item	count=4
module	number ||| gui	count=1
arg	table into ||| table varlist idvarlist groupvarlist	count=1
arg	count ||| count	count=2
arg	dict ||| saved	count=1
class	channels ||| edit widget	count=1
function_arg	[function_1] a module ||| [arg_2] [function_1]	count=4
function	create a new ||| add	count=1
arg	the node for regression ||| node	count=1
function	[function] in ||| cell [function]	count=2
function_arg	[function_1] [arg_2] sizes ||| [function_1] data [arg_2] label_data	count=3
arg	item ||| item	count=7
class	editor widgets back ||| info edit	count=1
arg	package ||| package	count=1
function	applies inverse of the ||| map	count=1
class	anchor ||| node anchor item	count=2
function	[function_1] link (:class ||| [function_2] [function_1]	count=1
function	basic stats ||| basic stats	count=2
function	[function_1] input line ||| [function_2] [function_1]	count=1
function_arg	widgets expanded [arg_2] ||| [arg_2] [function_1]	count=1
module_class	if the [class_2] ||| [module_1] visualize [class_2]	count=1
arg	:meth set_plot_data ||| x_index y_index z_index color_index	count=1
module	nodes channels ||| document	count=1
function	the items ||| items	count=1
function	finished ||| finished	count=2
function_arg	a [function_1] [arg_2] ||| [function_1] scheme links [arg_2]	count=7
arg	partitioning the cs ||| cs	count=1
class	buttons to fit inside ||| dynamic resize tool bar	count=1
function	points in ||| selection	count=1
function	filename and modified ||| modified	count=1
class	widget where ||| widget	count=1
class	the dock [class_2] ||| [class_2] [class_1]	count=2
arg	name should not ||| name	count=1
class	tool grid the ||| widget tool grid	count=2
arg	page (:class [arg_2] ||| [arg_2] [arg_1]	count=4
function	popup ||| quick	count=1
function	default text geometry used ||| default text geometry	count=1
function_arg	insert [arg_2] ||| [function_1] [arg_2]	count=2
class	node ||| scheme node	count=1
function_arg	[function_1] in link ||| [arg_2] [function_1]	count=2
function	[function_1] nodeitem ||| [function_2] [function_1]	count=1
class	the editor state source ||| links edit widget	count=1
arg	the given sourcerow under ||| sourcerow	count=1
class	contained in the stack ||| stack widget	count=1
function	is ||| is	count=12
function	return the [function] ||| [function]	count=2
class	randomization ||| randomize	count=1
class	set ||| scheme link	count=1
function	user ||| set user	count=1
module	to it ||| widgets	count=1
function	[function_1] the sink ||| [function_2] [function_1]	count=1
function	region of ||| calc sloppy region	count=1
function	fix a module filename ||| fix	count=1
class	the arrow base point ||| arrow annotation	count=1
arg	[arg_1] env ||| [arg_1] [arg_2]	count=1
function	ows v 2 0 ||| ows stream	count=1
arg	row in an ||| row	count=1
function	[function_1] the learner ||| [function_1] [function_2]	count=1
class	widget and ||| edit widget	count=1
arg	destrow under parent destparent ||| destparent	count=1
function_arg	[function_1] item view ||| [function_1] [arg_2]	count=3
function_arg	[function_1] node processing_state ||| [function_1] processing state [arg_2]	count=1
function	class value as an ||| get class	count=1
module	graph ||| widgets	count=1
module_class	[module_1] source binding ||| [module_1] utils [class_2]	count=1
arg	action from ||| action	count=2
arg	[arg_1] an ||| [arg_2] [arg_1]	count=1
arg	for the action ||| action	count=1
class	text ||| text	count=7
function_arg	[function_1] key to ||| [function_1] [arg_2]	count=4
function_arg	[function_1] [arg_2] ||| [function_1] rect row [arg_2]	count=3
function	cache ||| cache	count=5
function	set the link's runtime ||| set runtime	count=1
class	the interpolated ||| cross fade	count=1
class	the drop shadow's ||| drop shadow frame	count=2
function	in ||| add	count=1
class	[class_1] shadow ||| [class_1] [class_2]	count=3
function	angle between ||| angle	count=1
module	return the current focused ||| canvas document	count=1
arg	widget ||| widget	count=6
function_arg	[function_1] sourcerow ||| [function_1] sourceparent [arg_2]	count=1
function	for the tab ||| tab	count=1
function_arg	remove the [arg_2] ||| [arg_2] [function_1]	count=1
function	diagonal elements ||| correct	count=1
class	to edit [class_2] ||| [class_2] [class_1]	count=2
arg	[arg_1] value ||| [arg_2] [arg_1]	count=1
arg	end into the ||| end	count=1
class	the executor and free ||| thread executor	count=1
arg	the name should ||| name	count=1
module	all points in the ||| widgets	count=1
function	depth slider is ||| depth	count=1
arg	the number into ||| number	count=2
arg	entry point group ||| entry_point_group	count=1
class	text geometry ||| scheme text annotation	count=2
arg	data table to ||| name data	count=1
function	unique ||| unique	count=2
function	bound ||| bound	count=1
arg	for spearman's and absolute ||| absolute	count=1
function	rule which mimics a ||| rule	count=1
function	[function_1] widget discovery ||| [function_1] [function_2]	count=1
function	[function_1] maximum number ||| [function_2] [function_1]	count=1
function	belong to each leaf ||| samples in leaves	count=1
arg	the description ||| description	count=1
class	which to edit the ||| edit widget	count=1
function	create [function_2] ||| [function_1] [function_2]	count=3
function	processing_state to reflect ||| node processing	count=1
function	the leaf ||| leaves	count=1
function	state (as a qbytearray) ||| save state	count=1
class	set ||| edit widget	count=4
function_arg	[function_1] table ||| [arg_2] [function_1]	count=1
function	to the [function_2] ||| [function_2] [function_1]	count=3
class	new ||| new	count=1
class	tab ||| box tab button	count=1
module	the current selection ||| widgets	count=1
class	the widget ||| links edit widget	count=1
function	likelihood ||| likelihood	count=1
function	clear remove all ||| clear	count=1
class	tab ||| box	count=1
class	of ||| owplot	count=1
arg	data split [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] a stream ||| [function_1] ows stream scheme [arg_2]	count=3
function	then the geometry ||| geometry	count=1
function_arg	data set [arg_2] ||| [arg_2] [function_1]	count=2
class	[class] path scene ||| [class]	count=3
function_arg	[function_1] key ||| [function_1] [arg_2]	count=4
module	nodes channels ||| canvas	count=1
arg	(:class schemenode) to title ||| title	count=1
arg	keys ||| keys incremental	count=1
function	[function_1] widgets ||| [function_2] [function_1]	count=2
arg	the start [arg_2] ||| [arg_2] [arg_1]	count=1
module	items position ||| canvas canvas items	count=1
module	a ||| data	count=1
function_arg	[function_1] tree ||| [arg_2] [function_1]	count=1
class	sink nodes channels ||| links edit	count=1
arg	[arg_1] and y_axis ||| [arg_1] [arg_2]	count=1
function	selection_behavior ||| add selection	count=1
class	is positive if zooming ||| zoomable graphics view	count=1
class	inside sloppy ||| bar	count=1
function	render ||| render	count=1
arg	value from ||| value	count=1
function	paste ||| paste	count=1
function	introduce ||| creates	count=1
function	set pixmap [function_2] ||| [function_2] [function_1]	count=1
arg	the value from data ||| value	count=1
function	[function_1] dissimilarity ||| [function_2] [function_1]	count=1
class	tab ||| tab bar	count=2
function_arg	set [arg_2] ||| [arg_2] [function_1]	count=5
function	set the tool ||| set tool	count=2
function	reshape a data ||| reshape	count=1
module	and hides the plot ||| widgets utils plot	count=1
class	arrow arrow head points ||| scheme arrow annotation	count=1
function_arg	[function_1] stream in ||| [arg_2] [function_1]	count=2
function_arg	row [arg_2] ||| [function_1] [arg_2]	count=1
arg	the node in on ||| node	count=1
function	and calculate the actual ||| calculate actual	count=1
function	add the value ||| value	count=1
function_arg	at position ||| at position	count=1
class	the ||| manager	count=2
function	switch ||| switch	count=1
function_arg	the geometry [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] distance matrix ||| [arg_2] [arg_1]	count=8
function	of the averages stripe ||| averages stripe	count=1
function	the pixmap if ||| pixmap	count=1
function	register a :class categorydescription ||| register category	count=1
module	in the ||| widgets utils plot	count=1
function	processing state flags ||| node processing state	count=1
function	the specific learner params ||| params	count=1
function	zeros ||| zeros	count=1
module	return it's ||| canvas canvas items	count=1
module	return ||| canvas scheme	count=16
module_class	[module_1] flattening ||| [module_1] [class_2]	count=2
function	a triangle ||| draw triangle	count=1
function	positions of anchor ||| positions	count=1
function_arg	[function_1] table into ||| [arg_2] [function_1]	count=1
function	set the node ||| set node	count=2
function	add the ||| add page	count=1
class	value [class] ||| [class]	count=1
function_arg	find an [arg_2] ||| [function_1] at [arg_2]	count=1
class	dock (same as setexpanded ||| collapsible dock	count=1
function	update the printed contents ||| update node info reg	count=1
function	qrectf ||| row rect	count=1
function	current control ||| control	count=1
module	this thread to the ||| widgets	count=1
function	rectangle using current transform ||| draw rectangle	count=1
function_arg	finished [arg_2] ||| [arg_2] [function_1]	count=3
arg	a stream in orange ||| stream	count=1
arg	the given sourcerow ||| sourcerow	count=1
module	updates the ||| widgets utils plot	count=1
arg	obj ||| obj name	count=1
class	widget will ||| widget	count=1
function	[function_1] tip ||| [function_2] [function_1]	count=3
module	return the ||| utils	count=2
class	the owwidget ||| manager	count=2
arg	of checkable buttons and ||| orientation buttons widget nomargin	count=1
arg	function ||| func	count=1
function_arg	[function_1] data and ||| [arg_2] [function_1]	count=2
arg	model or a view ||| model selected	count=1
module	items position visibility and ||| canvas items	count=1
module	samples data ||| widgets data	count=1
function	[function_1] update ||| [function_1] [function_2]	count=1
function	instance for ||| widget for	count=2
function	merge ||| merge	count=2
function	of indices ||| merge indices	count=1
module_class	[module_1] font ||| [module_1] [class_2]	count=2
function	a disjoint [function_2] ||| [function_1] [function_2]	count=1
arg	checkable buttons and connects ||| orientation buttons	count=1
class	source and sink nodes ||| links edit	count=1
function	setline ||| auto adjust	count=1
class	in the random forest ||| skl random forest adapter	count=1
class	true the tab widget ||| widget	count=1
module	dictionary ||| utils	count=1
function	return the exception instance ||| exception	count=1
function	calculate [function_2] ||| [function_1] [function_2]	count=1
function	standard [function_2] ||| [function_2] [function_1]	count=3
module	entire graph ||| widgets	count=1
module	clustering ||| clustering	count=1
arg	data [arg_2] ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] index ||| [arg_2] [function_1]	count=9
function_arg	name value ||| name value	count=1
function	[function_1] pixmap if ||| [function_1] [function_2]	count=1
function	widget description ||| widget desc	count=1
function	wildcard filtering ||| filter wild card	count=2
class	update ||| tab bar widget	count=1
function	[function_1] edit interaction ||| [function_1] [function_2]	count=5
function	value of :attr theme_name ||| update	count=1
function	likelihood ratio ||| likelihood ratio	count=2
function	[function_1] wildcard filtering ||| [function_2] [function_1]	count=1
function	for each instance ||| predict	count=2
class	[class_1] annotation ||| [class_2] [class_1]	count=1
class	state ||| edit widget	count=1
module	items that belong to ||| widgets utils plot	count=1
function	the graph transform ||| transform for	count=1
function	a subset [function_2] ||| [function_2] [function_1]	count=3
arg	menupage) with name and ||| name	count=1
function	the progress ||| progress	count=2
function	selection ||| selection	count=9
function	returns the graph transform ||| transform	count=1
function	mock [function_2] ||| [function_2] [function_1]	count=1
class	arrow lines ||| scheme arrow annotation	count=1
function_arg	[function_1] adding a ||| [arg_2] [function_1]	count=2
class	nodes ||| edit widget	count=1
function	clear remove all the ||| clear	count=1
function	compute basic ||| compute basic	count=2
function	nodeitem ||| node item	count=1
class	tab widget will ||| widget	count=1
function_arg	single [function_1] [arg_2] shapes and sizes ||| [function_1] [arg_2]	count=3
arg	set of checkable buttons ||| orientation buttons	count=1
function	the legend ||| legend	count=1
function	create a [function_2] ||| [function_1] [function_2]	count=10
function	the source [function_2] ||| [function_2] [function_1]	count=4
module_class	[module_1] source binding ||| [module_1] [class_2]	count=1
module_class	[module_1] [class_2] ||| [module_1] preview [class_2]	count=1
module	transformed nodes ||| preprocess	count=1
function	clear the ||| clear	count=2
class	the selected widget ||| edit widget	count=1
function	[function_1] learner for ||| [function_1] [function_2]	count=1
function	select [function_2] ||| [function_1] [function_2]	count=6
function_arg	cell at [arg_2] ||| [function_1] rect [arg_2]	count=1
function	return a qrectf ||| row rect	count=1
function	size hint is the ||| size hint	count=1
arg	number ||| number suffix	count=2
arg	[arg_1] package ||| [arg_2] [arg_1]	count=2
function	set the icon ||| set icon	count=3
function_arg	dynamic [arg_2] ||| [arg_2] [function_1]	count=4
arg	[arg] of ||| widget [arg]	count=2
class	the size grip is ||| window size grip	count=1
function	all points ||| add	count=1
arg	sums to ||| out	count=1
function	the transition animation ||| set animation	count=1
function	input [function_2] ||| [function_1] [function_2]	count=2
function	qaction at ||| action at	count=2
module	return ||| canvas utils	count=2
arg	[arg_1] sink_node if ||| [arg_2] [arg_1]	count=1
arg	the given [arg] returns a ||| [arg]	count=1
class	nodeitem) use ||| link item	count=1
function_arg	environment variable [arg_2] ||| [function_1] [arg_2]	count=3
class	starting ||| search strategy	count=1
class	drawing the grid ||| grid	count=1
arg	values [arg_2] ||| [arg_1] [arg_2]	count=1
function	reflect ||| node processing	count=1
function	of data input ||| data	count=1
arg	use _augment_indices ||| var_data extra_map as_string	count=2
function	[function_1] central ||| [function_2] [function_1]	count=1
function	visible columns of the ||| visible score columns	count=1
arg	button widget ||| button	count=1
class	source and sink ||| edit	count=1
function	value of a ||| value	count=1
arg	mod_path ||| mod_path	count=3
class	schemelink) to the scheme ||| scheme	count=1
function	select the off-diagonal elements ||| select wrong	count=1
function	orange widgets entry point ||| entry point	count=1
function	[function_1] or css ||| [function_2] [function_1]	count=2
arg	execute the editlinksdialog ||| source_node sink_node initial_links	count=2
module	the ||| canvas document	count=4
function_arg	[function_1] given sourcerow ||| [arg_2] [function_1]	count=1
function	sync the ||| sync	count=1
function_arg	[function_1] start_node (i ||| [function_1] [arg_2]	count=1
function_arg	given data ||| call data	count=1
function	[function_1] processing ||| [function_1] [function_2]	count=1
function	the content [function_2] ||| [function_2] [function_1]	count=2
function	a default rule ||| default rule	count=2
function	single [function] can ||| set main [function]	count=1
function	update the title ||| update title	count=3
class	set ||| line edit	count=1
function	the widget description ||| widget desc to std	count=1
module	to ||| visualize	count=2
module	return all ||| canvas utils	count=1
function	a triangle using current ||| triangle	count=1
module	widgets for the ||| canvas	count=1
function	widget [function_2] ||| [function_2] [function_1]	count=4
function	a flattened ||| flattened	count=1
function	each [function_2] ||| [function_2] [function_1]	count=1
arg	background and ||| background	count=1
function	[function_1] a disjoint ||| [function_2] set [function_1]	count=3
arg	for mod_path ||| mod_path	count=2
function	visibility of the averages ||| averages	count=1
class	filtering ||| suggest	count=1
function_arg	[function_1] x_axis and ||| [arg_2] [function_1]	count=4
arg	checkable buttons and connects ||| buttons	count=1
function	leading ||| leading	count=1
function	control [function_2] ||| [function_1] [function_2]	count=5
function	a link (:class ||| link item	count=1
module	the corresponding scheme ||| canvas scheme	count=1
function	set the depth ||| set	count=1
class	[class] of ||| preprocessor [class]	count=2
module	to ||| widgets utils	count=3
arg	return counts ||| max_val weights minlength	count=1
function_arg	[function_1] the index ||| [arg_2] [function_1]	count=3
module	transformed value ||| preprocess	count=1
class	random [class_2] ||| [class_1] [class_2]	count=1
module	'literal') and return ||| canvas scheme	count=1
class	of the widget where ||| bar widget	count=1
class	state source and sink ||| widget	count=1
class	sink nodes ||| edit	count=1
function	item animation [function_2] ||| [function_2] [function_1]	count=1
function_arg	re-emit the action ||| on triggered action	count=2
module	that belong to it ||| widgets utils plot	count=1
function	off-diagonal ||| wrong	count=1
function_arg	point [arg_2] ||| [arg_2] [function_1]	count=1
class	the stack ||| stack widget	count=1
function	fix the ||| fix	count=1
function	if ||| has	count=1
function	reimplemented from ||| from	count=1
arg	a qstyle ||| standard_pixmap	count=1
class	property bindings ||| property	count=1
function	applies ||| map	count=1
class	arrow is changed ||| arrow	count=1
function	selects ||| add selection	count=1
function	the title text ||| title text	count=2
arg	insert the number into ||| number	count=2
class	editor state ||| widget	count=1
class	positive if zooming in ||| graphics view	count=1
arg	using a precomputed ||| linkage	count=1
module	return ||| canvas canvas items	count=9
function	[function_1] linear gradient ||| [function_1] [function_2]	count=4
arg	show ||| text title informative_text	count=3
arg	destparent ||| destparent	count=1
function_arg	annotation instance [arg_2] ||| [function_1] [arg_2]	count=1
function	the section name ||| get widget name	count=1
function	paths for the ||| paths from	count=1
class	if zooming in ||| graphics view	count=1
arg	distribution ||| axis	count=1
class	a widget action (from ||| widget	count=1
function	all points in the ||| selection	count=1
class	the arrow as ||| scheme arrow	count=1
class	invalidate the [class_2] ||| [class_2] [class_1]	count=1
class	view ||| zoomable graphics view	count=1
function	the cache ||| cache has	count=1
function	create a new ||| new	count=1
arg	[arg_1] index ||| [arg_2] [arg_1]	count=1
arg	name ||| name parent	count=1
class	the annotation [class_2] ||| [class_2] [class_1]	count=2
class	arrow arrow head ||| arrow annotation	count=1
module	qpainterpath ||| canvas items	count=2
arg	input (:class ||| input	count=1
function	modified ||| modified	count=1
module	return the ||| canvas canvas items	count=18
arg	a data table into ||| table varlist idvarlist	count=1
arg	execution of the ||| timeout	count=1
function	the current :attr ||| add selection	count=1
function	the section name ||| name	count=1
function	select the [function_2] ||| [function_1] [function_2]	count=8
function_arg	tab [arg_2] ||| [function_1] action [arg_2]	count=1
class	title of the item ||| item	count=1
function	update [function_2] ||| [function_2] [function_1]	count=6
class	the dock [class_2] ||| [class_1] [class_2]	count=2
function	that belong to each ||| samples in	count=1
arg	sourcerow under parent sourceparent ||| sourceparent sourcerow	count=1
class	rows to selection ||| selection	count=1
function	[function_1] the diagonal ||| [function_2] [function_1]	count=1
function	:class orange ||| orange to	count=1
class	state source and sink ||| links	count=1
function	[function_1] line ||| [function_2] [function_1]	count=5
function	[function_1] plot ||| [function_2] [function_1]	count=2
module_class	[module_1] node is ||| [module_1] [class_2]	count=2
arg	the action ||| action	count=2
class	set ||| owtree graph	count=1
function	stats for each of ||| stats	count=1
function	update the property ||| update	count=1
function_arg	[function_1] a tree ||| [arg_2] [function_1]	count=2
class	that subclass [class_2] ||| [class_2] [class_1]	count=2
module	instances ||| widgets evaluate	count=1
function	for common plot settings ||| plot settings box	count=1
function_arg	[function_1] distribution d ||| [function_1] [arg_2]	count=3
arg	the name ||| names name	count=1
module	and ||| canvas	count=1
arg	of checkable buttons and ||| buttons widget	count=1
function	[function_1] paths ||| [function_2] [function_1]	count=1
class	filtering ||| suggest menu page	count=1
module	the current ||| utils plot	count=2
class	randomization of ||| randomize	count=1
module	the ||| widgets utils plot	count=10
function_arg	a row [arg_2] ||| [arg_2] [function_1]	count=2
function	and calculate [function_2] ||| [function_2] [function_1]	count=1
class	create ||| new text annotation	count=1
class	(:class qmodeindex) item ||| quick	count=1
class	the editor ||| links edit	count=1
class	names text item ||| item	count=1
arg	by i ||| i	count=1
function	[function_1] text ||| [function_1] [function_2]	count=6
module	reset the widget ||| widgets evaluate	count=1
function_arg	unique [arg_2] ||| [function_1] [arg_2]	count=1
arg	source_node to ||| source_node	count=1
function	default ||| default	count=6
function	settings/properties with the schemenode ||| node	count=1
function	hints to ||| role hints	count=1
class	nodeitem) ||| link	count=1
arg	pen ||| pen	count=2
function	each [function_2] ||| [function_1] [function_2]	count=1
module	value of ||| utils	count=1
module	to ||| widgets	count=13
function_arg	[function_1] button widget ||| [function_1] [arg_2]	count=2
arg	the description into the ||| module mtime description distribution	count=1
function_arg	column from [arg_2] ||| [function_1] [arg_2]	count=3
function	the off-diagonal ||| wrong	count=1
arg	scheme connected to ||| scheme	count=1
function_arg	description [arg_2] ||| [function_1] [arg_2]	count=1
module	of :attr theme_name ||| widgets	count=1
class	[class_1] description ||| [class_1] [class_2]	count=2
function	scene coordinates using axes ||| axes	count=1
arg	[arg_1] to sink_node ||| [arg_2] [arg_1]	count=1
module	a ||| canvas registry	count=1
arg	tree structure ||| tree branches	count=2
function	[function_1] tab ||| [function_1] [function_2]	count=1
arg	[arg] shapes ||| x_data y_data [arg]	count=3
function	set the dissimilarity ||| set disimilarity	count=3
function	set the name of ||| set	count=1
function_arg	[function_1] for obj ||| [arg_2] [function_1]	count=3
function	factor between 0 ||| factor	count=1
class	the console ||| console	count=1
function_arg	[function_1] of data ||| [arg_2] [function_1]	count=3
module	return true if a ||| canvas registry	count=1
function	qpainterpath 'styled' to ||| path	count=1
function	[function_1] item animation ||| [function_1] [function_2]	count=3
class	reimplemented from ||| widgets	count=1
arg	region reg using ||| reg	count=1
arg	for constructing ||| links_in links_out	count=1
function	basic [function_2] ||| [function_1] [function_2]	count=4
function	2 ||| pixmap2	count=1
function	of lines ||| lines	count=1
function_arg	[function_1] [arg_2] shapes and sizes ||| [function_1] data x_data y_data [arg_2] label_data	count=1
class	formated ||| output view	count=1
function	widget ||| widget data	count=1
module	this thread to the ||| widgets utils	count=1
function_arg	[function_1] [arg_2] ||| [function_1] i [arg_2]	count=4
function_arg	[function_1] row in ||| [function_1] view [arg_2]	count=1
function	the permutation giver by ||| permutation	count=1
function	scan the scheme file ||| scan	count=1
arg	insert the number into ||| number suffix	count=2
module	the current ||| utils	count=2
class	node ||| node body	count=1
arg	item from ||| item	count=1
arg	description desc into category ||| category desc	count=1
module	[module] a ||| [module]	count=5
module	that ||| utils plot	count=2
function	an item with ||| item	count=1
function	specific learner params of ||| get params	count=1
function	hash value that ||| hash	count=1
function	label for [function_2] ||| [function_2] set [function_1]	count=1
function	[function_1] owwidget ||| [function_2] [function_1]	count=3
arg	[arg_1] count cells ||| [arg_1] [arg_2]	count=3
function	[function_1] diagonal ||| [function_1] [function_2]	count=1
arg	elementtree instance of an ||| etree	count=1
function	[function_1] progress ||| [function_2] [function_1]	count=1
function	annotation items ||| annotation items	count=2
arg	constructing a standard tooltip ||| links_in links_out	count=1
arg	a stream in orange ||| stream pretty	count=1
function	from ||| from	count=9
class	geometry ||| resize arrow annotation	count=1
class	[class_1] model into ||| [class_2] [class_1]	count=3
module	reset the widget ||| evaluate	count=1
function_arg	from [arg_2] ||| [function_1] [arg_2]	count=1
function	name title of the ||| name	count=1
arg	stream in ||| stream	count=1
function	subset [function_2] ||| [function_2] [function_1]	count=3
function	replot the entire ||| replot	count=1
function	set the annotation's font ||| set	count=1
arg	arr along given axis ||| axis dtype	count=1
function_arg	of [arg_2] ||| [arg_2] [function_1]	count=3
arg	the channel name ||| channel	count=1
class	a widget ||| widget tool	count=1
function	the parameters of ||| parameters	count=1
module	points in the ||| utils plot	count=1
arg	stream in orange ||| stream	count=1
function_arg	[function_1] a qstyle ||| [function_1] [arg_2]	count=4
class	the buttons to ||| tool	count=1
class	the widget ||| widget tool	count=1
function	color theme depending on ||| update theme	count=1
module	from the ||| widgets	count=1
class	the editor state ||| edit widget	count=1
function	helper function for ||| node item tool tip helper	count=1
module	with ||| widgets	count=3
function	[function_1] qt css ||| [function_1] [function_2]	count=1
function	to data ||| to data	count=2
function	set widget ||| set widget	count=1
function	[function_1] a link ||| [function_1] [function_2]	count=2
arg	index ||| index	count=7
arg	fragment based on the ||| stop finalstop	count=1
function	control point edit interaction ||| control point edit	count=1
function	set the ||| set filter	count=3
function_arg	[function_1] data ||| [arg_2] [function_1]	count=7
function	helper function ||| tip helper	count=1
function	annotation instance ||| annotation	count=1
module	return its index ||| canvas gui	count=1
function	button/action ||| column	count=1
function	all links ||| node links	count=1
function_arg	a message helper ||| message icon	count=1
module	state source and ||| canvas	count=1
arg	data instances [arg_2] ||| [arg_1] [arg_2]	count=1
function	depth and update ||| depth	count=1
function_arg	[function_1] link ||| [arg_2] [function_1]	count=6
function	extract column ||| get column	count=1
arg	given [arg] returns ||| [arg]	count=2
class	node title the ||| node	count=1
function_arg	[function_1] obj ||| [function_1] [arg_2]	count=3
module	and adds it to ||| widgets	count=1
function	max depth ||| max depth	count=2
arg	into the ||| module mtime	count=1
arg	obj using ||| obj	count=1
function	set the annotation's ||| set	count=1
class	the node ||| node item	count=2
function	where along the anchor ||| anchor	count=1
class	creates ||| owplot	count=6
function_arg	[function_1] qstyle ||| [arg_2] [function_1]	count=4
function	qualified [function_2] ||| [function_2] [function_1]	count=2
function	common point ||| point	count=1
class	the update loop ||| signal manager	count=1
arg	arr along given ||| dtype	count=1
function	common plot [function_2] ||| [function_2] [function_1]	count=1
function	has [function_2] ||| [function_2] [function_1]	count=3
function	the array of indices ||| merge indices	count=1
function	[function_1] offset ||| [function_1] [function_2]	count=3
arg	values [arg_2] ||| [arg_2] [arg_1]	count=1
module	and return a ||| canvas document	count=1
class	in the grid ||| grid	count=1
arg	array so it sums ||| out	count=1
function	color for [function_2] ||| [function_2] [function_1]	count=1
module_class	[module_1] nodeitem) ||| [module_1] [class_2]	count=2
arg	policy [arg_2] ||| [arg_2] [arg_1]	count=3
module	role this is the ||| canvas	count=1
function	[function_1] [function_2] ||| [function_1] filter [function_2]	count=1
module	in the ||| utils plot	count=1
arg	a dict ||| saved	count=1
function	add the value ||| combo value	count=1
class	an action ||| tree	count=1
function	a triangle using ||| triangle	count=1
class	the entire ||| owplot	count=1
arg	the value from ||| value	count=1
arg	size policy [arg_2] ||| [arg_2] [arg_1]	count=3
module	selection_behavior ||| utils	count=1
module	current ||| widgets model	count=2
arg	instance obj ||| obj name	count=1
function_arg	icon for [arg_2] ||| [function_1] [arg_2]	count=1
function	update the node color ||| node color cls	count=1
function	button for the ||| action button	count=1
class	console ||| python console	count=1
function	[function_1] in scene ||| [function_2] [function_1]	count=2
function	available [function] input ||| refresh [function]	count=1
function	an array of items ||| items	count=1
function	hints to be stored ||| role hints	count=1
function	[function_1] qaction ||| [function_2] [function_1]	count=2
class	nodeitem) ||| link item	count=1
function	split the ||| split	count=2
function	get the learner for ||| get learner	count=1
arg	for the node ||| node	count=2
module	(:class ||| items	count=2
arg	page [arg] ||| [arg] page title	count=1
arg	[arg_1] links to ||| [arg_2] [arg_1]	count=2
function_arg	set by [arg_2] ||| [arg_2] [function_1]	count=3
module	orange data value ||| data	count=1
arg	start end from the ||| start end	count=1
function	common point properties ||| point properties	count=1
class	the widget ||| matrix	count=1
function	learner for a ||| learner	count=1
function	the maximum number ||| maximum	count=1
arg	to the data set ||| data	count=1
function	create [function_2] ||| [function_2] [function_1]	count=3
function	factor between 0 0 ||| factor	count=1
arg	distributions in d ||| d	count=1
function	to the input line ||| to input line	count=1
class	a widget action ||| widget tool grid	count=1
function	[function_1] changed ||| [function_1] [function_2]	count=1
function	to recalculate its offset ||| recalculate offset	count=1
function	the tab button for ||| tab button	count=1
module	return true if ||| canvas document	count=1
module	with numbers ||| widgets utils	count=1
function	scene ||| scene	count=2
function_arg	move [arg_2] ||| [function_1] sourceparent [arg_2]	count=2
function	evaluate ||| evaluate	count=1
function	commit ||| commit	count=1
module	value of :attr theme_name ||| widgets	count=1
arg	the size policy ||| policy	count=1
class	control ||| control	count=2
function	or css styled :class ||| set	count=1
function_arg	reshape a [arg_2] ||| [function_1] wide [arg_2]	count=3
function	iterator over [function_2] ||| [function_1] [function_2]	count=1
class	to edit the ||| edit	count=1
class	matrix ||| matrix	count=2
function	[function_1] properties ||| [function_1] [function_2]	count=9
function_arg	:class qtextcharformat [arg_2] ||| [function_1] baseformat [arg_2]	count=6
function	[function_1] line if ||| [function_2] [function_1]	count=5
class	owwidget ||| manager	count=4
module	that [module_2] ||| [module_2] [module_1]	count=2
arg	name should not be ||| names name	count=1
function	enable/disable the dynamic link ||| dynamic	count=1
arg	a combo box to ||| combo	count=1
function	triangle ||| draw triangle	count=1
function	list [function_2] ||| [function_2] [function_1]	count=6
class	current translation and scale ||| owplot3d	count=1
module	sink nodes ||| document	count=1
arg	the merged ||| var_extra_data	count=1
function	rule which mimics ||| rule	count=1
function	central ||| central	count=2
arg	from stream ||| stream	count=1
function	render a sequence ||| render items	count=1
function_arg	[function_1] a precomputed ||| [arg_2] [function_1]	count=2
function	select [function_2] ||| [function_2] [function_1]	count=6
function	set the processing ||| set processing	count=2
class	apply an [class] ||| [class]	count=3
arg	in view ||| view	count=1
module	source and ||| canvas	count=1
function	[function_1] anchor ||| [function_1] [function_2]	count=1
arg	[arg_1] input (:class ||| [arg_1] [arg_2]	count=1
arg	helper ||| icon	count=1
module	to ||| widgets data	count=1
function	refresh ||| refresh	count=1
function	schedule a ||| schedule	count=1
function	tab button ||| tab button	count=3
class	edit the ||| edit	count=1
function	sloppy timeout ||| sloppy	count=1
function	the 'single' flag ||| conflicting single link	count=1
function_arg	the dissimilarity [arg_2] ||| [arg_2] [function_1]	count=1
class	buttons/actions in the grid ||| tool grid	count=1
function	add the ||| add	count=1
arg	show ||| text title informative_text details	count=1
module	return an entrypoint ||| canvas	count=1
class	source and sink ||| edit widget	count=1
function	statistic for given ||| statistic	count=1
function	can ||| can	count=1
class	in the random forest ||| random forest	count=1
function_arg	[function_1] filename ||| [function_1] [arg_2]	count=1
function	set the default ||| set default	count=2
arg	given ||| x	count=1
function	search paths ||| search paths from	count=1
module	stored in the widgets ||| widgets	count=1
function	update the domain ||| update domain	count=1
module	from hierarchical clustering ||| clustering	count=1
class	initialize ||| widget manager	count=1
arg	[arg_1] weight ||| [arg_2] [arg_1]	count=3
function	a link ||| link	count=3
class	the widget ||| widget manager	count=1
function	default widget discovery and ||| discovery	count=1
module	value of :attr theme_name ||| widgets utils	count=1
function_arg	show and [arg_2] ||| [function_1] [arg_2]	count=3
function	start the ||| start	count=1
function	paths ||| paths from	count=1
arg	show a ||| text title informative_text details	count=1
function_arg	[function_1] to filename ||| [arg_2] [function_1]	count=1
class	the widget where ||| widget	count=1
module	[module_1] belong to ||| [module_1] [module_2]	count=4
class	the tool grid the ||| widget tool grid	count=1
arg	content of a table ||| table header_rows header_columns	count=1
arg	the variable whose ||| variable lookup_table	count=1
module	return the ||| canvas document	count=10
arg	in scheme connected to ||| scheme	count=1
arg	indexed by i ||| i n simplify	count=2
function	to be passed to ||| change	count=1
arg	in indices ||| left right indices	count=1
arg	content of a table ||| name table header_rows header_columns	count=1
function_arg	[function_1] by rows ||| [function_1] [arg_2]	count=2
function	[function] of the ||| [function]	count=2
arg	used serialization format ('literal', ||| format prettyprint pickle_fallback	count=1
class	the dock widget in ||| dock widget	count=1
class	the dock ||| collapsible dock	count=2
class	the arrow base point ||| scheme arrow annotation	count=1
module	can ||| canvas scheme	count=1
function	the source model ||| source model	count=2
function	points toward the end ||| end	count=1
class	[class_1] geometry ||| [class_1] [class_2]	count=2
module	the value ||| utils plot	count=1
function	set the current selected ||| set	count=1
arg	key to [arg_2] ||| [arg_2] [arg_1]	count=1
module_class	i e [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	parameters ||| parameters	count=1
module	to the ||| widgets utils	count=3
function	reshape ||| reshape	count=1
function	style's standard [function_2] ||| [function_1] [function_2]	count=3
function	setting the user ||| set user	count=1
class	:class ||| item	count=1
function_arg	instance for [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] the viewport ||| [function_1] child [arg_2]	count=4
function	likelihood ratio statistic ||| likelihood ratio statistic	count=3
function	tool tip ||| add tool tip	count=2
arg	[arg_1] hint ||| [arg_1] [arg_2]	count=3
module	[module_1] return ||| [module_1] [module_2]	count=3
module	the editor state ||| canvas document	count=1
class	cell ||| graphics heatmap widget	count=1
arg	stream ||| stream	count=3
function_arg	insert [arg_2] ||| [function_1] module mtime [arg_2]	count=1
class	to the [class_2] ||| [class_1] [class_2]	count=1
class	zooming in ||| graphics view	count=1
module	and [module_2] ||| [module_2] [module_1]	count=5
class	update ||| heatmap selection manager	count=1
class	sink ||| links edit widget	count=1
arg	number into ||| number suffix capitalize	count=1
function	application log directory ||| log dir	count=1
function	the diagonal elements of ||| correct	count=1
class	geometry of the ||| arrow annotation	count=1
arg	child ||| child	count=2
class	points in ||| owplot	count=1
arg	checkable buttons ||| orientation buttons widget nomargin	count=1
function	the given ||| call	count=1
function	save the ||| save	count=1
module	invert ||| canvas canvas items	count=1
function	the tool [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] pattern ||| [arg_2] [function_1]	count=4
class	item ||| node anchor item	count=2
function_arg	[function_1] value ||| [arg_2] [function_1]	count=5
function_arg	[function_1] name ||| [function_1] obj [arg_2]	count=1
function	[function_1] selected default ||| [function_2] [function_1]	count=1
arg	table ||| name table	count=1
function	blending [function_2] ||| [function_1] [function_2]	count=4
module	return ||| canvas preview	count=1
function	links ||| links	count=1
module	return an :obj ordereddict ||| canvas report	count=1
function	domain hints to ||| domain role hints	count=1
function	[function_1] entry ||| [function_1] [function_2]	count=4
function	true if the control ||| control active	count=1
arg	show a ||| text title informative_text	count=2
function	off-diagonal elements ||| wrong	count=1
class	the grid ||| widget tool grid	count=3
arg	a precomputed distance matrix ||| matrix linkage	count=1
class	widget action (from a ||| widget tool grid	count=1
function	start a [function_2] ||| [function_2] [function_1]	count=3
class	entropy ||| entropy mdl	count=2
module	the update loop ||| scheme	count=1
arg	[arg_1] to value ||| [arg_1] [arg_2]	count=1
function	a dynamic ||| dynamic enabled	count=1
function	a control [function_2] ||| [function_2] [function_1]	count=2
arg	:class element ||| element	count=1
class	and sink nodes channels ||| links edit	count=1
function	widget ||| ensure widget	count=1
function	extract column from ||| get column	count=1
function	label for a ||| label	count=1
class	dock widget ||| collapsible dock widget	count=2
function	iterator over [function_2] ||| [function_2] [function_1]	count=1
class	node title ||| node item	count=1
module	return its ||| canvas scheme	count=1
function	icon for ||| icon	count=1
class	a owwidget ||| manager	count=1
function	line (qlinef in ||| line	count=1
function	fragments for ||| fragments	count=1
arg	distance matrix ||| matrix	count=3
function	plot settings ||| plot settings	count=1
module	selects all ||| utils	count=1
arg	return values [arg_2] ||| [arg_1] [arg_2]	count=1
function	the user [function_2] ||| [function_2] [function_1]	count=1
class	arrow as a start ||| arrow annotation	count=1
function_arg	insert the [arg_2] ||| [function_1] module mtime [arg_2]	count=1
function_arg	[function_1] object in ||| [arg_2] [function_1]	count=1
class	needs ||| owpythagoras	count=1
function	[function_1] runtime ||| [function_1] [function_2]	count=1
function	the parameters as a ||| parameters	count=1
arg	pattern ||| pattern	count=1
module	value of :attr ||| plot	count=1
function	category ||| category	count=2
function	a qwidget instance for ||| widget for	count=1
arg	links to the ||| links	count=1
function	valid entry ||| valid entry	count=1
class	index ||| tool grid	count=1
class	create ||| new node action	count=1
function	set the fill color ||| set	count=1
function	all the items ||| items	count=1
function_arg	widgets expanded state ||| expanded state	count=1
function	a rectangle using ||| draw rectangle	count=1
function	fix size so ||| fix size policy	count=1
function	compress ||| compress	count=1
module	from plot [module_2] ||| [module_2] [module_1]	count=4
function_arg	[function_1] [arg_2] ||| [function_1] cuts sorted cls [arg_2]	count=9
class	widgetsscheme instance to ||| widget manager	count=1
arg	key ||| key	count=1
class	geometry ||| text annotation	count=1
function	the entropy of ||| entropy	count=1
arg	sums ||| out	count=1
class	the tool ||| widget tool	count=2
function	search paths for the ||| search paths from	count=1
function	[function_1] rule which ||| [function_2] [function_1]	count=3
arg	a plot to ||| plot	count=1
function	a mock [function_2] ||| [function_1] [function_2]	count=1
class	annotation [class_2] ||| [class_2] [class_1]	count=2
arg	qobject instance obj ||| obj	count=1
arg	target thread (a ||| thread	count=1
module_class	[module_1] base ||| [module_1] [class_2]	count=1
function	return the cell ||| cell	count=1
module	return the ||| widgets data utils	count=1
class	buttons to fit ||| dynamic resize tool	count=1
class	input for ||| diagram	count=1
function	[function_1] menu ||| [function_1] [function_2]	count=2
function_arg	button for [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	[function_1] [arg_2] ||| [function_1] matrix [arg_2]	count=6
function	of np [function] that supports ||| [function]	count=4
function	axes ||| for axes	count=1
arg	a box ||| box	count=2
function	information ||| information	count=1
function	from a ||| from	count=4
function_arg	leaf nodes [arg_2] ||| [arg_2] [function_1]	count=2
module_class	[module_1] the ||| [module_1] scheme [class_2]	count=1
function	the source model for ||| source model	count=1
function	dendrogram ||| dendrogram	count=1
function	update ||| node update	count=1
class	the tab widget ||| widget	count=1
module	a preview ||| canvas preview	count=1
arg	a module ||| module	count=1
arg	size policy and ||| policy	count=1
function	quick ||| set quick	count=1
module	the editor state source ||| canvas	count=1
arg	so it sums to ||| out	count=1
class	to selection ||| selection manager	count=1
function_arg	size [arg_2] ||| [arg_2] [function_1]	count=1
function	the action ||| action	count=2
function	point edit interaction for ||| point edit	count=1
function	old ows ||| scheme v 1 0	count=1
arg	the number into the ||| number suffix capitalize	count=1
module	the editor ||| canvas	count=1
class	state source ||| edit widget	count=1
function	set an instance of ||| set scheme	count=1
function	merge the ||| merge	count=1
class	text items in ||| graphics simple text list	count=1
module	to the [module_2] ||| [module_1] [module_2]	count=14
class	state source ||| links edit widget	count=1
arg	instance and initialize it ||| cls	count=1
function	properties ||| properties	count=2
module	the [module_2] ||| [module_1] [module_2]	count=24
function	[function_1] statistic ||| [function_1] [function_2]	count=2
class	drawing the grid lines ||| grid	count=1
function	hierarchical clustering using a ||| matrix clustering	count=1
function	of ||| of	count=2
function_arg	plan for [arg_2] ||| [arg_2] [function_1]	count=8
function	set ||| set data	count=2
arg	circle shaped background ||| background_color	count=1
class	set ||| flattened tree item model	count=1
arg	a widget or category ||| cls desc	count=1
function_arg	:class qtextcharformat [arg_2] ||| [arg_2] [function_1]	count=6
arg	the start [arg_2] ||| [arg_1] [arg_2]	count=1
arg	alignment ||| alignment	count=1
arg	scaled to [min max] ||| min max	count=1
function	named entry from ||| meta entry	count=1
class	if the rule passes ||| rule	count=2
function	align nodes [function_2] ||| [function_2] [function_1]	count=3
function	legend [function_2] ||| [function_2] [function_1]	count=2
function	data ||| plot data	count=1
class	entropy ||| entropy	count=1
class	button a tab ||| tab	count=1
function_arg	geometry [arg_2] ||| [arg_2] [function_1]	count=1
function	shape [function_2] ||| [function_1] [function_2]	count=2
function	updates the current ||| update	count=1
class	set ||| welcome dialog	count=1
function	current ||| update	count=1
class	disable ||| owpythagorean forest	count=1
arg	module ||| module widget_name category_name distribution	count=1
function	basic stats for each ||| basic stats	count=1
function	[function_1] default text ||| [function_1] [function_2]	count=1
class	return the ||| watcher	count=1
function	depth slider is changed ||| depth	count=1
arg	widget at index ||| index	count=2
function	likelihood ratio statistic for ||| likelihood ratio statistic	count=1
module	and return ||| canvas gui	count=2
module	the update ||| scheme	count=1
function_arg	insert widget [arg_2] ||| [function_1] category [arg_2]	count=2
class	set ||| node body item	count=1
class	the rule ||| rule	count=2
function	font for ||| font	count=1
class	[class_1] base point ||| [class_2] [class_1]	count=3
function	all points in ||| add selection	count=1
arg	[arg_1] category ||| [arg_2] [arg_1]	count=2
module	new tab and return ||| canvas gui	count=1
function	the schemenode properties ||| node properties	count=2
class	is ||| scheme node	count=1
function	removes ||| remove curve	count=1
class	default ||| text annotation	count=1
arg	and j-th ||| i j	count=1
function	update of a single ||| update	count=1
arg	the description into the ||| module mtime description	count=1
function	deleting [function_2] ||| [function_2] [function_1]	count=1
module	find and ||| document	count=1
arg	the execution ||| timeout	count=1
function	the widget ||| widget desc to	count=1
function	[function_1] disjoint set ||| [function_2] [function_1]	count=4
arg	8 qrectf ||| pixmap_rect shadow_rect	count=1
class	scores view ||| owrank	count=1
class	arrow as a start ||| scheme arrow annotation	count=1
function	is the document modified ||| is modified strict	count=1
arg	its index ||| icon tooltip	count=1
class	for the node ||| scheme node	count=1
function	the domain hints to ||| domain role hints	count=1
class	page to the ||| menu	count=1
function_arg	[function_1] rows ||| [function_1] [arg_2]	count=2
arg	set of checkable buttons ||| orientation buttons widget	count=1
function	[function_1] number of ||| [function_1] column [function_2]	count=1
function	factor ||| factor	count=1
function	[function_1] edit ||| [function_2] [function_1]	count=5
arg	[arg_1] it sums ||| [arg_2] [arg_1]	count=1
module	the update ||| canvas	count=1
module	data ||| data	count=2
rep	[module_class_1] of page ||| [module_class_1] index [function_arg_2]	count=1
function	tab at ||| tab tool tip	count=2
function	instance [function_2] ||| [function_2] [function_1]	count=4
class	dock (same ||| collapsible dock widget	count=1
class	a dictionary ||| base editor	count=1
class	from the grid ||| tool grid	count=1
module	entire ||| widgets utils plot	count=2
class	the widget where hover/move ||| widget	count=1
class	dock ||| collapsible dock	count=2
module	from the ||| canvas	count=1
class	set ||| proxy model	count=1
function_arg	a message [arg_2] ||| [function_1] [arg_2]	count=2
function	items ||| anchored items	count=1
function	update the ||| update node	count=2
class	from the scheme ||| scheme edit	count=2
class	pause ||| signal manager	count=1
arg	from data ||| data	count=1
arg	obj type or function ||| obj	count=1
function	all the items ||| anchored items	count=1
function	type of the ||| type	count=1
function_arg	stats for [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] tree structure ||| [arg_2] [function_1]	count=1
class	toolbar ||| scheme edit widget	count=1
class	the item ||| node item	count=1
function	points ||| add selection	count=1
class	updates ||| signal manager	count=1
arg	description into ||| module mtime description distribution	count=1
class	is ||| node	count=1
arg	format ||| format	count=1
function	constructor and calculate the ||| calculate	count=1
arg	[arg_1] sink_node ||| [arg_2] [arg_1]	count=1
class	body ||| node body	count=1
class	progress ||| progress bar mixin	count=1
function	a mock [function_2] ||| [function_2] [function_1]	count=1
function	schedule a list of ||| schedule	count=1
function	[function_1] state ||| [function_2] [function_1]	count=2
function	widget instance [function_2] ||| [function_2] [function_1]	count=3
function	deleting the ||| on delete	count=1
class	the current file ||| owload model	count=1
module	the value ||| widgets	count=1
function_arg	linear gradient [arg_2] ||| [arg_2] [function_1]	count=3
module	if the ||| widgets	count=1
function	qaction instance for the ||| action for	count=1
function	return the [function_1] [function_2] in the ||| [function_2] [function_1]	count=2
class	to the scheme ||| scheme edit	count=2
module	that belong to ||| widgets utils plot	count=3
module_class	[module_1] pending ||| [module_1] [class_2]	count=4
function	the hierarchical clustering ||| matrix clustering	count=1
function	the current ||| add	count=1
arg	obj into a string ||| obj	count=1
function	different ||| set rf	count=1
function	a helper ||| tool tip helper	count=1
class	[class_1] the links ||| [class_2] [class_1]	count=8
class	node title the ||| node item	count=1
module	updates the current ||| widgets utils	count=1
function	the current selected default ||| default	count=1
class	links ||| links	count=1
class	filtering ||| suggest menu	count=1
class	arrow arrow ||| scheme arrow annotation	count=1
class	update ||| signal manager	count=1
class	qrect) in which ||| splash screen	count=1
arg	factor ||| factor	count=2
function	to a grid ||| to grid	count=3
function_arg	[function_1] constructing a ||| [arg_2] [function_1]	count=2
function	generate a default rule ||| generate default rule	count=1
module	qpainterpath ||| items	count=2
class	widget ||| scheme edit widget	count=1
function	tab ||| tab icon	count=1
function	formated label [function_2] ||| [function_2] [function_1]	count=3
class	which to edit ||| edit	count=1
module	nodes ||| canvas	count=1
arg	group_var ||| group_var	count=1
arg	x ||| cls x	count=1
function	an item in ||| select item	count=1
function	title [function_2] ||| [function_1] [function_2]	count=1
function	iterator over ||| iter	count=1
class	for the node ||| edit links node	count=1
function	lines ||| lines	count=1
class	toolbox ||| widget tool box	count=1
function_arg	insert [arg_2] ||| canvas document paged menu [function_1] page [arg_2] icon	count=1
class	discretization ||| discretize	count=1
class	the editor state source ||| edit	count=1
class	state ||| edit	count=1
function	[function_1] environment variable ||| [function_2] [function_1]	count=3
function	end the current ||| end	count=1
function	and ||| links	count=2
arg	description into the ||| module mtime description	count=1
module_class	return target [class_2] ||| [module_1] [class_2]	count=1
function_arg	insert category [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] changed ||| [function_1] blocking state [function_2]	count=1
class	node ||| graph node	count=3
function	[function_1] off-diagonal ||| [function_1] [function_2]	count=1
function	changed with setline ||| auto adjust	count=1
function	default palette for a ||| default palette	count=1
class	node is ||| node	count=1
arg	a string in ||| string	count=1
arg	from data and ||| data	count=1
arg	:class widgetregistry ||| entry_point cached	count=1
class	central ||| zoomable graphics view	count=1
function	an nodeitem instance from ||| from	count=1
class	arrow ||| scheme arrow annotation	count=2
function	annotation [function_2] ||| [function_1] [function_2]	count=2
function	split ||| split	count=3
arg	use anchor ||| anchor	count=1
function	current :attr ||| add	count=1
function	select the diagonal ||| select correct	count=3
function	domain hints to be ||| domain role hints	count=1
function	mode ||| mode	count=2
arg	tooltip ||| tooltip	count=1
function	confusion ||| confusion	count=1
module	[module_1] to data ||| [module_1] [module_2]	count=1
function	following [function] ||| [function]	count=2
function	the channel ||| channel	count=1
function	the named entry from ||| meta entry	count=1
function	create and add a ||| add	count=1
function_arg	update [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	the same mean value [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
module	current :attr selection_behavior ||| widgets utils plot	count=1
function	number of button/action ||| column count	count=3
module	control ||| canvas canvas items	count=1
function	params of a given ||| params	count=1
module	current :attr selection_behavior ||| utils	count=1
function_arg	[function_1] item from ||| [function_1] [arg_2]	count=1
function	[function] can ||| set main [function]	count=1
module	of :attr theme_name ||| utils	count=1
function	[function_1] [function_2] ||| [function_1] column [function_2]	count=2
function	position of the ||| pos	count=2
function_arg	[function_1] the item ||| [arg_2] [function_1]	count=1
function	to each [function_2] ||| [function_2] [function_1]	count=1
class	value of ||| owplot	count=1
arg	data table into a ||| table varlist idvarlist groupvarlist	count=1
class	source ||| edit widget	count=1
module	state source and sink ||| canvas document	count=1
function	compute confusion matrix ||| confusion matrix	count=2
function	clear the editor state ||| clear	count=1
function	fix a module ||| fix	count=1
function	the has ||| has	count=1
function	controls for common point ||| point	count=1
function	get the tree adapters ||| get trees	count=1
class	input ||| diagram	count=1
class	node ||| links node	count=1
arg	source (instance of abstractboundproperty) ||| source	count=1
class	the buttons ||| tool	count=1
module	points in ||| utils	count=1
function	whether ||| is	count=1
function	helper ||| item tool tip helper	count=1
function	update the [function_2] ||| [function_2] [function_1]	count=20
function	[function_1] bar ||| [function_1] [function_2]	count=1
function_arg	set by [arg_2] ||| [function_1] features [arg_2]	count=3
arg	an ancestor [arg] is ||| [arg]	count=1
class	true if the rule ||| rule	count=2
arg	an iterotor over keys ||| var as_string	count=1
class	widget action ||| widget	count=1
function	[function_1] current control ||| [function_2] [function_1]	count=1
function	button ||| button	count=7
function	[function_1] default rule ||| [function_1] [function_2]	count=1
module	array with numbers that ||| widgets	count=1
function	the central [function_2] ||| [function_2] [function_1]	count=1
class	sink nodes ||| links	count=1
class	clear ||| rule learner	count=1
module	in the widgets settings ||| widgets	count=1
function	paint the ||| paint	count=1
class	create ||| node action	count=1
function	[function_1] source ||| [function_1] [function_2]	count=1
function_arg	the leaf [arg_2] ||| [arg_2] [function_1]	count=2
class	all points in the ||| owplot	count=1
class	executor and free all ||| thread executor	count=1
function	filtering ||| filter	count=1
function	cancel the the call ||| cancel	count=1
arg	an index (:class ||| index	count=1
function	and ||| and	count=2
arg	baseformat ||| baseformat	count=1
function_arg	[function_1] [arg_2] ||| [function_1] node [arg_2]	count=18
function_arg	[function_1] index from ||| [arg_2] [function_1]	count=3
arg	show and execute the ||| scheme source_node sink_node initial_links	count=1
function	brief description ||| data brief	count=1
class	a widget ||| widget	count=2
function	[function_1] content of ||| [function_2] [function_1]	count=1
function	search paths for the ||| search paths	count=1
function	in the ||| selection	count=1
class	the widget and scene ||| links edit widget	count=1
arg	data instances we calculate ||| e2 axis	count=1
function	a helper function ||| item tool tip helper	count=1
function	[function_1] color ||| [function_2] [function_1]	count=6
function	scan update ||| scan update	count=2
function	sink name ||| sink name	count=1
function	[function_1] diagonal ||| [function_2] [function_1]	count=1
class	toolbar ||| edit widget	count=1
function	pixmap ||| pixmap	count=2
arg	a tree structure ||| tree branches	count=2
function	cache directory ||| cache dir	count=2
class	sink nodes ||| widget	count=1
function	qaction [function_2] ||| [function_2] [function_1]	count=4
arg	widget ||| widget text icon	count=1
function	of ||| scheme	count=1
function	draw the ||| draw	count=1
arg	adding a list of ||| force_replace	count=1
class	set ||| cross fade pixmap widget	count=2
arg	of input keys ||| keys incremental	count=1
function_arg	qualified name [arg_2] ||| [arg_2] [function_1]	count=3
class	[class_1] inside ||| [class_2] [class_1]	count=2
class	of the arrow base ||| scheme arrow annotation	count=1
arg	[arg_1] the base_color ||| [arg_2] [arg_1]	count=2
function	a helper function ||| tool tip helper	count=1
module	selects all ||| widgets utils	count=1
arg	stream in [arg_2] ||| [arg_2] [arg_1]	count=2
arg	links to the scheme ||| scheme links	count=1
function	valid entry ||| has valid entry	count=2
module	update ||| canvas scheme	count=2
function	[function_1] possible ||| [function_1] [function_2]	count=1
function	label [function_2] ||| [function_2] set [function_1]	count=1
class	of ||| widgets	count=1
module	current ||| canvas document	count=2
arg	[arg_1] and buttons ||| [arg_1] [arg_2]	count=2
function	set a ||| set	count=9
class	widget ||| owconfusion	count=1
function	insert ||| insert	count=8
function	a hash value that ||| hash	count=1
function	[function_1] rankmodel ||| [function_2] [function_1]	count=1
function	compress a ||| compress signals	count=1
module	all points in ||| utils plot	count=1
arg	given [arg] set ||| [arg]	count=1
function	in the completer ||| completer	count=1
function	widget ||| widget desc	count=1
function	fix size ||| fix	count=1
module	the current :attr ||| widgets	count=1
function	[function_1] for column ||| [function_1] [function_2]	count=1
function	[function_1] link (:class ||| [function_1] [function_2]	count=1
function	edit interaction for ||| edit	count=1
class	imputation method to the ||| impute	count=1
arg	a widget or category ||| desc	count=1
function	set to [function_2] ||| [function_2] [function_1]	count=1
function	paths ||| paths from description	count=2
function	rename ||| rename	count=1
arg	d ||| cls d	count=1
function	leaf nodes in a ||| leaves	count=1
function	add [function_2] ||| [function_1] [function_2]	count=1
class	tab ||| tab button	count=1
function	the general validator's requirements ||| is valid	count=1
module	with numbers ||| widgets	count=1
class	set ||| scheme edit widget	count=4
arg	page (:class menupage) ||| page	count=1
module	raised by the ||| widgets	count=1
function	set the :class ||| set	count=1
module	points in ||| utils plot	count=1
function	a link ||| link item	count=2
function	printed contents of the ||| node info reg	count=1
function	the widget clear ||| clear	count=1
class	between the ||| links edit	count=1
arg	if include_more_link ||| desc include_more_link	count=1
function	started ||| start	count=1
function	returns next 'possible' attribute ||| get next name	count=1
function	reimplemented from ||| from mime	count=1
module	selects ||| widgets utils plot	count=2
class	to the [class_2] ||| [class_2] [class_1]	count=1
function	a valid entry for ||| has valid entry	count=1
function_arg	[function_1] name of ||| [function_1] obj [arg_2]	count=1
class	tool ||| tool	count=2
class	[class_1] layout ||| [class_1] [class_2]	count=1
function_arg	[function_1] with ||| [function_1] actions [arg_2]	count=3
class	bound ||| selection action	count=1
function	node ||| node	count=5
class	widget description ||| widget registry	count=1
function	a valid [function_2] ||| [function_2] [function_1]	count=2
arg	behavior ||| behavior	count=1
module	return the widget previously ||| canvas	count=1
function	the parameters ||| parameters	count=1
function	link's runtime ||| runtime	count=1
module	data to scene ||| widgets	count=1
function	:attr selection_behavior ||| add	count=1
function	ratio statistic for given ||| ratio statistic	count=1
function	[function_1] point ||| [function_2] [function_1]	count=10
class	[class_1] geometry ||| [class_2] [class_1]	count=2
arg	the page (:class ||| page	count=1
class	to edit the links ||| links edit widget	count=1
function	[function_1] rule ||| [function_2] [function_1]	count=3
module	[module_1] return an ||| [module_1] [module_2]	count=2
arg	indices ||| left right indices string_cols	count=1
function	[function_1] rects ||| [function_2] [function_1]	count=3
class	of ||| future	count=1
function	columns in ||| columns	count=1
function	[function] of ||| [function]	count=3
module	all ||| widgets utils plot	count=2
class	schemenode) from the scheme ||| scheme	count=1
function_arg	[function_1] scheme ||| [arg_2] [function_1]	count=1
class	buttons to ||| dynamic resize tool	count=1
class	remove ||| tool grid	count=1
function_arg	[function_1] [arg_2] ||| [function_1] ows stream scheme [arg_2]	count=21
function	[function_1] from the ||| [function_2] [function_1]	count=1
class	for the arrow as ||| arrow annotation	count=1
function_arg	scheme to [arg_2] ||| [function_1] ows stream [arg_2]	count=1
function	button for ||| action button	count=1
function	for common point ||| point	count=1
function	output [function_2] ||| [function_2] [function_1]	count=1
function	current ||| add selection	count=1
function	set the connection ||| set connection	count=2
function	the max depth and ||| max depth	count=1
function	containing the position of ||| position	count=1
class	for drawing the grid ||| plot grid	count=1
module_class	[module_1] root ||| [module_1] [class_2]	count=1
function	[function_1] the blending ||| [function_2] [function_1]	count=1
module	the value of ||| utils plot	count=1
class	the updates ||| signal	count=1
arg	tooltip for ||| tooltip	count=1
arg	list of links to ||| links	count=1
function_arg	of button ||| of button	count=1
class	update ||| node item	count=1
function	new ||| new	count=4
module_class	[module_1] current widget ||| [module_1] scheme [class_2]	count=1
function	[function_1] maximum number ||| [function_1] [function_2]	count=1
module	the widgets ||| widgets data	count=1
class	widget action (from a ||| widget tool	count=1
arg	precomputed distance matrix ||| matrix linkage	count=2
function	pixmap if its construction ||| pixmap	count=1
function_arg	the entropy [arg_2] ||| [function_1] [arg_2]	count=1
function	update the pixmap ||| update pixmap	count=2
module_class	[module_1] shadow ||| [module_1] drop [class_2]	count=3
class	[class] given ||| [class]	count=2
function	the specific learner params ||| get params	count=1
module	all points in ||| plot	count=1
class	random forest ||| random forest adapter	count=1
class	property bindings appearing in ||| property	count=1
module	reset the ||| widgets	count=1
arg	and input ||| input	count=1
function_arg	[function_1] combo box ||| [function_1] [arg_2]	count=2
class	the matrix ||| owconfusion matrix	count=2
function	[function_1] all points ||| [function_1] [function_2] area	count=1
function	the channel [function_2] ||| [function_2] [function_1]	count=1
function	region ||| region	count=1
arg	and execute ||| scheme source_node sink_node initial_links	count=1
class	widgetsscheme instance ||| widget manager	count=1
arg	[arg_1] obj ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] color ||| [function_1] baseformat [arg_2]	count=1
function	[function_1] link ||| [function_2] [function_1]	count=4
function	qt css ||| css	count=1
function	points ||| add	count=1
function	likelihood ratio [function_2] ||| [function_2] [function_1]	count=4
function_arg	insert widget [arg_2] ||| [function_1] [arg_2]	count=1
arg	the output ||| output	count=1
function	control ||| control active	count=1
function	[function_1] help ||| [function_2] [function_1]	count=5
function	control ||| control	count=3
function	clear ||| clear progress advance	count=1
function	[function_1] set by ||| [function_2] [function_1]	count=8
arg	end into ||| end	count=1
function_arg	[function_1] for data ||| [function_1] [arg_2]	count=1
arg	background and font properties ||| background	count=1
function	the value ||| value	count=1
class	editor state source and ||| widget	count=1
function_arg	rows starting [arg_2] ||| [function_1] [arg_2]	count=1
module	by the ||| widgets	count=1
function	of recently accessed schemes ||| recent schemes	count=1
function	neighbor nodes ||| neighbor nodes	count=2
function	input [function_2] ||| [function_2] [function_1]	count=2
function	the title [function_2] ||| [function_2] [function_1]	count=1
function	can the ||| can	count=1
function	entropy induced ||| entropy	count=1
function	items ||| set items	count=1
function	palette for a ||| palette	count=1
function	depth slider ||| depth	count=1
function	rects ||| rects	count=1
function	be ||| data	count=2
function_arg	[function_1] distance matrix ||| [arg_2] [function_1]	count=3
arg	row in [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] node for ||| [function_1] [arg_2]	count=1
function_arg	tab at [arg_2] ||| [arg_2] [function_1]	count=1
function	index of ||| index of	count=2
function	a valid entry ||| valid entry	count=1
arg	[arg_1] scheme ||| [arg_2] [arg_1]	count=12
function_arg	[function_1] [arg_2] ||| [function_1] rect [arg_2]	count=3
class	widget [class_2] ||| [class_1] [class_2]	count=1
function	interleave elements of ||| interleave	count=1
class	if zooming ||| view	count=1
function	tool ||| add tool	count=1
arg	of data table to ||| name data	count=1
function	qwidget [function_2] ||| [function_1] [function_2]	count=2
function	hints to be stored ||| hints	count=1
function	to ||| to	count=7
function	common point [function_2] ||| [function_2] [function_1]	count=1
arg	a a stream in ||| stream	count=1
module	return an source ||| canvas gui	count=1
class	from ||| node item	count=2
module	the ||| utils	count=8
function	widget instance [function_2] ||| [function_1] [function_2]	count=3
module	the current ||| widgets	count=4
function_arg	a dynamic [arg_2] ||| [function_1] [arg_2]	count=4
module	in ||| plot	count=1
function_arg	to [arg_2] ||| [arg_2] [function_1]	count=7
module_class	[module_1] shadow's ||| [module_1] drop [class_2]	count=1
module	invert ||| canvas items	count=1
function_arg	curve that [arg_2] ||| main [function_1] data [arg_2] label_data	count=3
module	editor state ||| document	count=1
function_arg	value of [arg_2] ||| [function_1] [arg_2]	count=2
arg	a a stream in ||| stream pretty pickle_fallback	count=1
class	of the item ||| item	count=1
function_arg	zoom [arg_2] ||| [function_1] [arg_2]	count=1
function	the off-diagonal elements of ||| wrong	count=1
function_arg	[function_1] x_axis ||| [arg_2] [function_1]	count=4
class	the arrow as a ||| arrow annotation	count=2
arg	link (:class ||| link	count=1
module	of ||| plot	count=1
function	current ||| current	count=2
class	the scene ||| canvas scene	count=3
function	[function_1] changed ||| [function_1] processing state [function_2]	count=1
module	vertex ||| utils plot	count=1
class	size [class_2] ||| [class_2] [class_1]	count=1
arg	[arg_1] preserve sparsity ||| [arg_1] [arg_2]	count=2
arg	a circle shaped background ||| icon background_color	count=1
module	the entire graph ||| widgets utils plot	count=1
function	select the diagonal elements ||| select correct	count=1
function	a default [function_2] ||| [function_1] [function_2]	count=4
function	find ||| find item	count=1
function	fragments for drawing ||| fragments	count=1
function	the data set ||| set features	count=2
function	plan for ||| add links plan	count=1
function	css ||| css	count=1
arg	a table ||| table	count=1
module	the computation ||| utils	count=1
function	when the legend visibility ||| show legend	count=1
function	cache have a ||| cache has	count=1
class	a new ||| new	count=1
function	with the schemenode ||| node	count=1
function	array of indices ||| combine indices	count=1
function	for a disjoint ||| disjoint	count=1
function	brief ||| brief	count=1
module	of the ||| canvas items	count=1
function	visible ||| visible	count=1
class	the source model ||| item model	count=2
function	to ||| change	count=1
function	(class nodeitem) neighbor nodes ||| neighbor nodes	count=1
function_arg	leaf [arg_2] ||| [arg_2] [function_1]	count=2
module	all items that belong ||| utils plot	count=1
function_arg	[function_1] for adding ||| [function_1] scheme links [arg_2]	count=1
function	the transition animation ||| animation	count=1
class	value ||| transformation	count=1
arg	the model ||| model	count=1
class	the body ||| body	count=1
arg	points a list ||| points	count=1
class	of the computation ||| watcher	count=1
arg	data ||| data selected_indices	count=1
class	the control point ||| control point	count=1
arg	widget or category ||| cls desc	count=1
class	for the arrow as ||| scheme arrow annotation	count=1
function_arg	[function_1] of distribution ||| [arg_2] [function_1]	count=2
class	stack ||| menu stack widget	count=1
module	array with ||| widgets utils	count=1
function	the ||| selection	count=2
class	[class_1] grid the ||| [class_1] [class_2]	count=3
module	return ||| canvas	count=65
class	the tab ||| box	count=1
function_arg	save [arg_2] ||| [arg_2] [function_1]	count=1
function	set the regular ||| set filter reg	count=1
function	message text ||| text	count=1
function	bound the [function_2] ||| [function_1] [function_2]	count=1
function_arg	axes [arg_2] ||| [arg_2] [function_1]	count=3
class	widget in ||| widget	count=1
class	the drop [class_2] ||| [class_2] [class_1]	count=4
arg	model or ||| model	count=1
class	set ||| owpythagoras tree	count=1
function	modified time as a ||| module modified time	count=1
class	geometry state to ||| resize text annotation	count=1
module	updates ||| plot	count=1
class	[class_1] inside ||| [class_1] [class_2]	count=2
function	dissimilarity ||| disimilarity	count=1
module	update ||| scheme	count=1
class	nodes channels ||| links edit widget	count=1
module	create a qpainterpath ||| canvas items	count=2
class	arrow ||| arrow	count=10
class	the widget ||| widget tool box	count=1
module_class	[module_1] control point ||| [module_1] [class_2]	count=2
module_class	compute discretization of ||| preprocess discretization	count=1
function	update [function_2] ||| [function_1] [function_2]	count=6
function	instance is visible ||| visible	count=1
function	[function_1] button for ||| [function_1] [function_2]	count=3
function	tree adapters in ||| trees	count=1
function	action ||| action	count=4
function	points in the ||| selection	count=1
arg	data and [arg_2] ||| [arg_2] [arg_1]	count=1
function	end the current control ||| end control	count=1
function	set page to ||| set	count=1
arg	x array so ||| x	count=1
function	interpret the data set ||| set features	count=1
arg	child in ||| child	count=1
function	a copy ||| copy	count=1
class	[class_1] grid the ||| [class_2] [class_1]	count=3
class	the widget and ||| links edit widget	count=1
function	plot [function_2] ||| [function_1] [function_2]	count=2
function	all 'orange widget' entry ||| widgets entry points	count=1
function	[function_1] time as ||| [function_2] [function_1]	count=4
arg	table ||| table	count=2
module	reimplemented ||| widgets	count=2
module	theme_name ||| widgets utils	count=1
class	inside sloppy region ||| bar	count=1
function_arg	channels in [arg_2] ||| [arg_2] [function_1]	count=1
module	:attr ||| utils	count=2
function	leaf nodes in ||| leaves	count=1
function_arg	move [arg_2] ||| [arg_2] [function_1]	count=3
class	tool [class_2] ||| [class_1] [class_2]	count=3
arg	an obj ||| obj	count=1
class	the splitter ||| splitter	count=1
module	[module_1] plot ||| [module_1] [module_2]	count=12
rep	return :class [function_arg_2] ||| [module_class_1] [function_arg_2]	count=2
class	for the arrow ||| arrow	count=1
module	selects ||| utils	count=1
arg	of links ||| links	count=1
function	a tool ||| add tool	count=1
function	graph transform ||| transform	count=1
function	[function_1] action ||| [function_2] [function_1]	count=2
class	channels ||| widget	count=1
module	the entire graph ||| plot	count=1
arg	updated color ||| color	count=1
function	of items ||| items	count=1
function	compute ||| compute	count=2
arg	start by [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] data ||| [function_1] [function_2]	count=4
arg	fragment based on ||| stop finalstop	count=1
function	add a list ||| list	count=1
function	[function_1] the averages ||| [function_2] [function_1]	count=1
function	hierarchical clustering ||| clustering	count=1
module_class	the current [class_2] ||| [module_1] [class_2]	count=2
arg	adding a [arg_2] ||| [arg_2] [arg_1]	count=6
module	of the ||| utils	count=1
class	resource matching ||| resource loader	count=1
arg	size policy ||| policy	count=1
module	to row ||| widgets data	count=1
module	return the ||| canvas scheme	count=5
arg	[arg_1] group_var group_key ||| [arg_1] [arg_2]	count=2
function	the items ||| anchored items	count=1
class	that subclass ||| graphics view	count=1
function	message box ||| message	count=2
class	page ||| menu	count=2
module_class	[module_1] tab ||| [module_1] [class_2]	count=7
arg	point to ||| point	count=1
function	instance for the ||| widget for	count=1
function	set the ||| set current	count=1
class	a widget action ||| widget	count=1
arg	for constructing a ||| links_in links_out	count=1
function	delete the owbasewidget instance ||| delete	count=1
function	set quick menu ||| set quick menu	count=2
class	color for the arrow ||| arrow	count=1
function	cancel the ||| cancel	count=1
function	[function_1] subset of ||| [function_2] [function_1]	count=1
function	column from ||| column	count=1
class	set ||| body item	count=2
module	computation ||| utils	count=1
function_arg	[function_1] [arg_2] ||| [function_1] label [arg_2]	count=4
function	updates the ||| update	count=1
function	[function_1] css linear ||| [function_1] [function_2]	count=1
function	[function_1] the title ||| [function_1] [function_2]	count=1
function	a qaction instance for ||| action for	count=1
class	instance ||| instance	count=2
module	return an ||| canvas report	count=1
class	the stack ||| menu stack widget	count=1
function	[function_1] statistic for ||| [function_1] [function_2]	count=2
module	instance from the ||| canvas	count=1
function	from a list of ||| from data	count=1
function_arg	[function_1] rows columns ||| [arg_2] [function_1]	count=2
class	widget ||| widget discovery	count=1
module	points in ||| widgets utils plot	count=1
module	thread to the ||| widgets	count=1
function	cache have a valid ||| cache has valid	count=1
arg	qt item view if ||| view	count=1
module_class	return [class_2] ||| [module_1] scheme [class_2]	count=1
module	editor ||| canvas	count=1
class	dock ||| dock	count=2
function	introduce a ||| creates	count=1
function	[function_1] a subset ||| [function_1] [function_2]	count=1
function_arg	widget description [arg_2] ||| [function_1] [arg_2]	count=1
class	item draws it self ||| anchor item	count=1
class	schemelink) from the scheme ||| scheme edit	count=1
class	for the tool grid ||| tool grid	count=2
function	in expanded state if ||| expanded	count=1
class	to edit ||| edit	count=1
class	random ||| skl random	count=1
function_arg	gradient [arg_2] ||| [function_1] [arg_2]	count=1
function	an ||| on select	count=1
function	with setline ||| auto adjust	count=1
class	set ||| owfeature constructor	count=1
arg	with name ||| name	count=1
class	vertex attribute ||| vertex	count=1
arg	title ||| title	count=3
class	the buttons ||| resize tool	count=1
class	depending on ||| collapsible dock	count=1
function	the dynamic ||| set dynamic	count=1
function	range in a uniform ||| uniform linear	count=1
arg	module ||| cls module	count=1
module_class	[module_1] input ||| [module_1] [class_2]	count=2
function	subset [function_2] ||| [function_1] [function_2]	count=3
module_class	[module_1] icon ||| [module_1] [class_2]	count=2
function	set the content ||| set node info	count=1
function	[function_1] tab button ||| [function_2] [function_1]	count=2
class	the arrow ||| arrow annotation	count=2
function	clear reset [function_2] ||| [function_2] [function_1]	count=1
arg	for data [arg_2] ||| [arg_2] [arg_1]	count=2
module	all points in the ||| plot	count=1
function	position of ||| position	count=1
function_arg	entry [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] domain hints ||| [function_1] [function_2]	count=1
function	run [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] constructing ||| [function_1] node [arg_2]	count=2
module	sure to ||| widgets	count=1
function	the selection [function_2] ||| [function_2] [function_1]	count=1
class	signalmanager ||| signal manager	count=1
class	a tooltip with the ||| tooltip	count=1
module_class	[module_1] item ||| [module_1] preview [class_2]	count=1
class	size ||| size	count=1
arg	combo box ||| combo	count=1
function	adds a tool ||| tool	count=1
function	a qt css ||| css	count=1
arg	[arg_1] based ||| [arg_2] [arg_1]	count=4
class	the item ||| node anchor item	count=1
function	all points ||| points	count=1
arg	obj type or ||| obj	count=1
module	source and sink ||| document	count=1
class	editor widgets back to ||| info edit	count=1
module	source and ||| document	count=1
function	[function_1] off-diagonal elements ||| [function_2] [function_1]	count=1
function	input channels (:class inputsignal) ||| input channels	count=1
function	[function_1] the visible ||| [function_2] [function_1]	count=1
class	to display/edit ||| info edit	count=1
arg	a data table ||| table varlist idvarlist groupvarlist	count=1
function	set ||| set scheme	count=2
class	a widget action (from ||| widget tool	count=1
function	link reset from the ||| link reset	count=1
class	creates an :obj owtoolbar ||| owplot gui	count=1
function_arg	[function_1] include_more_link is ||| [function_1] [arg_2]	count=1
arg	of distributions in d ||| d	count=1
function	the source ||| source	count=2
class	have ||| widget tool box	count=2
class	set ||| icon item	count=3
function	max depth ||| depth	count=1
module	if it ||| widgets visualize utils	count=1
function	source/sink nodes (:class schemenode ||| nodes	count=2
function	an item in ||| on select item	count=2
function	to a ||| scheme to	count=1
function_arg	[function_1] mod_path ||| [arg_2] [function_1]	count=5
arg	the scheme ||| scheme	count=2
arg	it sums ||| out	count=1
class	inside sloppy region and ||| bar widget	count=1
function	register ||| register category	count=2
module	return it's index ||| canvas canvas	count=1
function_arg	parse a [arg_2] ||| [function_1] scheme scheme [arg_2]	count=1
function	icon for a ||| icon	count=1
function	[function_1] parent ||| [function_1] [function_2]	count=1
function	create the [function_2] ||| [function_1] [function_2]	count=5
arg	position ||| position	count=1
arg	variable whose ||| variable	count=2
function	user [function_2] ||| [function_1] [function_2]	count=1
class	the value ||| owplot	count=1
function	a qaction [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] the cs ||| [function_1] cuts sorted cls [arg_2]	count=1
function	specific learner params of ||| params	count=1
class	the editor state source ||| links edit	count=1
function	dynamic ||| enable dynamic	count=1
function_arg	for column [arg_2] ||| [arg_2] [function_1]	count=1
function	this a dynamic ||| dynamic enabled	count=1
function	list of ||| scheme list	count=2
class	channels ||| links edit widget	count=1
arg	node of ||| node	count=1
function	a disjoint ||| disjoint	count=1
function_arg	[function_1] the points ||| [function_1] [arg_2]	count=1
arg	split by group_var group_key ||| group_var group_key	count=1
module_class	return the [class_2] ||| [module_1] application [class_2]	count=1
function	graph transform ||| transform for	count=1
arg	precomputed [arg_2] ||| [arg_2] [arg_1]	count=2
function	current selection ||| selection	count=1
function	offset ||| offset	count=1
function	a rectangle using ||| rectangle	count=1
class	to display/edit ||| info dialog	count=1
class	scheme is ||| scheme edit	count=1
function_arg	set [arg_2] ||| [function_1] label [arg_2]	count=1
class	vbo and prepares ||| buffer	count=1
function	maps point, which can ||| map to graph	count=1
module	the value of :attr ||| widgets	count=1
function	schemenode [function_2] ||| [function_1] [function_2]	count=1
module	html with ||| report	count=1
function	show and ||| edit links	count=1
class	value of the argument ||| transformation	count=1
function	point [function_2] ||| [function_2] [function_1]	count=5
module	make sure to ||| widgets model	count=1
function_arg	a row with ||| row actions background	count=1
module	value of ||| utils plot	count=1
function_arg	[function_1] args ||| [arg_2] [function_1]	count=3
class	the random forest ||| random forest adapter	count=1
function	data input to highlight ||| data	count=1
module	qmodelindex) ||| data utils	count=1
function_arg	key [arg_2] ||| [arg_2] [function_1]	count=3
function	target class or coloring ||| colors	count=1
function	the node color ||| node color cls	count=2
function	widget settings directory ||| widget settings dir	count=3
class	set ||| scheme node	count=1
class	an action we ||| tree	count=1
arg	the widget ||| widget text	count=1
arg	and absolute ||| absolute	count=1
function	[function_1] edit interaction ||| [function_2] [function_1]	count=5
function	or css ||| set	count=1
function	range in a uniform ||| uniform	count=1
function	size ||| size policy	count=1
function	tab button [function_2] ||| [function_2] [function_1]	count=1
class	arrow as a string ||| scheme arrow annotation	count=1
function_arg	[function_1] the node ||| [arg_2] [function_1]	count=6
module	the update loop ||| canvas	count=1
function	scan the scheme ||| scan	count=1
module	create a qpainterpath ||| canvas canvas items	count=2
function_arg	[function_1] [arg_2] ||| [function_1] label i [arg_2]	count=4
module	qmodeindex) ||| canvas document	count=1
class	to display/edit ||| scheme info dialog	count=1
function	add the value of ||| value	count=1
function	blending ||| blending	count=2
arg	action from the layout ||| action	count=1
module	state to the document ||| canvas document	count=1
function	rectangle using current ||| rectangle	count=1
class	the widget and scene ||| widget	count=1
arg	stream ||| stream pretty pickle_fallback	count=1
function	fragments for drawing a ||| fragments	count=1
arg	[arg_1] and y_axis ||| [arg_2] [arg_1]	count=1
function	widget settings [function_2] ||| [function_1] [function_2]	count=1
module_class	of pending ||| scheme signal manager	count=1
class	grid ||| grid	count=7
arg	with actions ||| actions background	count=2
module	instance to the ||| canvas	count=1
module	selects all points ||| widgets utils plot	count=1
function	new node with a ||| new	count=1
function	[function_1] data input ||| [function_1] [function_2]	count=3
module	be ||| widgets	count=2
function	the printed contents ||| node info reg	count=1
module	array with numbers ||| widgets	count=1
arg	start end ||| start end	count=6
function	[function_1] help animation ||| [function_2] [function_1]	count=2
function	reimplemented from ||| from mime data	count=1
arg	to title ||| title	count=1
function	update all the items ||| update anchored items	count=1
function	a control ||| control	count=1
module	:attr selection_behavior ||| widgets utils	count=1
function	subset of [function_2] ||| [function_1] [function_2]	count=4
function	the update ||| update	count=1
class	the arrow [class_2] ||| [class_2] [class_1]	count=7
function	and modified time as ||| modified time	count=1
module	[module_1] return ||| [module_2] [module_1]	count=3
class	the future ||| future watcher	count=1
function	[function_1] the input ||| cursor [function_1] [function_2]	count=1
function	[function_1] actual ||| [function_1] [function_2]	count=3
function	and :class orange ||| orange to	count=1
class	has ||| text widget	count=1
function	entry for ||| entry	count=1
function_arg	[function_1] html ||| [function_1] [arg_2]	count=1
function	the a dynamic ||| dynamic	count=1
function	remove a [function_2] ||| [function_2] [function_1]	count=4
class	between which to edit ||| edit widget	count=1
module	sink ||| canvas	count=1
class	the dock (same ||| collapsible dock widget	count=1
function	set the central ||| set central	count=3
function	quick menu ||| quick menu	count=2
function_arg	dissimilarity [arg_2] ||| [function_1] [arg_2]	count=1
function	reload the current ||| reload	count=1
function	[function_1] links ||| [function_2] [function_1]	count=1
arg	if timeout ||| timeout	count=1
function_arg	re-emit [arg_2] ||| [function_1] [arg_2]	count=3
class	creates an :obj owbutton ||| owplot	count=1
function	align nodes to ||| align to	count=2
function	fix the [function_2] ||| [function_2] [function_1]	count=3
class	the console ||| python console	count=1
function	[function_1] rule ||| [function_1] [function_2]	count=3
module_class	current [class_2] ||| canvas [module_1] [class_2]	count=1
module_class	return the [class_2] ||| [module_1] gui drop [class_2]	count=1
function	state [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] current shown ||| [function_1] [function_2]	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=225
function	native or css styled ||| set native	count=1
function	callback function immediately after ||| callback	count=1
function	named ||| meta	count=1
function	description from ||| description	count=1
class	source and ||| links	count=1
class	reset ||| owconfusion matrix	count=1
class	widget where hover/move events ||| widget	count=1
function	annotation ||| annotation	count=2
function	factor between ||| factor	count=1
arg	thread ||| thread	count=1
function	tool [function_2] ||| [function_1] [function_2]	count=4
arg	show an ||| text title informative_text details	count=1
function_arg	[function_1] level setting ||| [arg_2] [function_1]	count=1
function	update ||| update	count=28
module	updates ||| canvas scheme	count=2
function	the array of indices ||| combine indices	count=1
module	entire ||| utils	count=1
class	the page ||| menu	count=1
class	and point symbol ||| owlegend	count=1
function	point in local coordinates ||| pos at	count=1
class	exception instance [class] exception was ||| [class]	count=1
function	in a ||| item	count=1
function_arg	[function_1] item (:class ||| [arg_2] [function_1]	count=1
function	rows starting with ||| rows	count=1
function	points in ||| add	count=1
arg	given columns ||| columns	count=1
module	adds it to the ||| widgets utils plot	count=2
function	wide format ||| wide	count=1
arg	items of seq ||| seq	count=1
function_arg	widget [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	is visible [arg_2] ||| [function_1] child [arg_2]	count=1
class	in the random forest ||| skl random forest	count=1
class	nodes ||| links edit widget	count=1
function	blending factor between 0 ||| blending factor	count=1
arg	and buttons ||| buttons	count=1
arg	[arg_1] to sink_node ||| [arg_1] [arg_2]	count=1
class	[class] exception ||| [class]	count=1
arg	[arg_1] background and ||| [arg_2] [arg_1]	count=2
class	rule ||| rule	count=3
function	current widget [function_2] ||| [function_1] [function_2]	count=1
arg	source_node to sink_node ||| source_node sink_node	count=3
class	[class_1] grip is ||| [class_1] [class_2]	count=2
function	[function] model ||| [function]	count=3
function_arg	axes x_axis ||| for axes x_axis	count=1
function	each instance rules are ||| predict	count=1
class	invalidate the layout ||| stack layout	count=2
arg	start by [arg_2] ||| [arg_1] [arg_2]	count=2
arg	[arg_1] y_axis ||| [arg_1] [arg_2]	count=1
function	domain ||| domain	count=3
function	size hint is ||| size hint	count=2
class	of the computation ||| future watcher	count=1
class	central ||| graphics view	count=1
function	[function_1] matrix ||| [function_1] [function_2]	count=1
function	[function_1] factor between ||| [function_1] [function_2]	count=1
function	name and module ||| module	count=1
function	max [function_2] ||| [function_1] [function_2]	count=4
function	is the [function_2] ||| [function_2] [function_1]	count=1
arg	the number ||| number suffix capitalize	count=1
function	[function_1] from the ||| [function_1] [function_2]	count=1
function	link ||| link	count=6
function	menu ||| menu	count=1
class	for height ||| dendrogram widget	count=1
module	the current :attr ||| widgets utils plot	count=1
function	row consists of ||| row	count=1
function_arg	set [arg_2] ||| [function_1] label i [arg_2]	count=1
class	size [class_2] ||| [class_1] [class_2]	count=1
class	the buttons [class_2] ||| [class_2] [class_1]	count=1
function	arrow ||| arrow	count=2
function	selects all points ||| selection	count=1
class	view ||| view key navigator	count=1
function	paths for the ||| paths from description	count=1
function	extra columns that will ||| reduced extra	count=1
arg	[arg_1] an ||| [arg_1] [arg_2]	count=1
class	all points in ||| owplot	count=1
arg	if heatmap is provided ||| heatmap clear	count=1
class	the control [class_2] ||| [class_1] [class_2]	count=1
rep	[module_class_1] of page ||| [module_class_1] [function_arg_2]	count=1
function	and update the ||| update	count=1
function	update the visible ||| update visible score	count=3
class	entropy of ||| entropy	count=1
function	[function_1] entry ||| [function_2] [function_1]	count=4
function	invert ||| invert	count=1
class	text item ||| item	count=1
function	the legend [function_2] ||| [function_2] [function_1]	count=2
module	a scheme ||| scheme	count=1
function	point properties ||| point properties	count=1
arg	x array [arg_2] ||| [arg_1] axis [arg_2]	count=2
arg	and execute the ||| scheme source_node sink_node initial_links	count=1
module	value ||| widgets utils plot	count=2
function	return the hierarchical clustering ||| clustering	count=1
function	the widget ||| widget desc	count=1
function	[function_1] color ||| [function_1] [function_2]	count=6
class	:class ~ ||| scheme edit	count=1
arg	0 over the axis ||| axis	count=1
function	parameters of [function_2] ||| [function_2] [function_1]	count=2
function	a helper function for ||| node item tool tip helper	count=1
class	the link ||| link item	count=1
class	set ||| stacked widget	count=1
function	invert the [function_2] ||| [function_2] [function_1]	count=1
function	widget instance is ||| ensure widget	count=1
function	positions ||| positions	count=1
function	qualified ||| qualified	count=1
function	update the selection ||| update selection	count=2
module	translation ||| utils plot	count=1
function_arg	[function_1] source (instance ||| [function_1] [arg_2]	count=1
function	modified time as a ||| modified time	count=1
class	the widget and ||| widget	count=1
function_arg	for [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] at index ||| [arg_2] [function_1]	count=10
class	items ||| graphics	count=1
function	the default widget discovery ||| discovery	count=1
function	the pixmap if its ||| pixmap	count=1
class	the editor state ||| edit	count=1
function	params of a ||| params	count=1
module	in the widgets settings ||| widgets data	count=1
arg	adding a ||| force_replace	count=1
function	for common plot ||| plot	count=1
function	the tab [function_2] ||| [function_1] [function_2]	count=2
function	the rectangle [function_2] ||| [function_1] [function_2]	count=4
class	invalidate the ||| stack	count=1
function	cache [function_2] ||| [function_1] [function_2]	count=2
module	(:class ||| canvas items	count=2
function_arg	[function_1] state ||| [arg_2] [function_1]	count=3
module	all items that belong ||| utils	count=1
arg	indexed [arg_2] ||| [arg_2] [arg_1]	count=2
class	widgetsscheme instance to manage ||| widget manager	count=1
class	arrow arrow ||| arrow annotation	count=1
class	file ||| model	count=1
arg	event ||| event	count=3
module_class	[module_1] widget ||| [module_1] scheme [class_2]	count=1
class	nodes channels ||| widget	count=1
function	fix size so ||| fix	count=1
module	reset the ||| evaluate	count=1
function	all ||| selection	count=1
module	data ||| widgets data	count=1
function_arg	[function_1] columns ||| [function_1] count [arg_2]	count=2
arg	from data [arg_2] ||| [arg_2] [arg_1]	count=1
function	qt css [function_2] ||| [function_1] [function_2]	count=1
function	the link's runtime ||| runtime	count=1
function_arg	[function_1] pattern ||| [function_1] wild card [arg_2]	count=1
class	of the node ||| node	count=2
function	annotation items in ||| annotation items	count=2
function	dynamic ||| dynamic	count=4
function	[function_1] palette ||| [function_2] [function_1]	count=1
function	from ||| from mime data	count=2
function	[function_1] domain hints ||| [function_2] [function_1]	count=1
function	[function_1] entry for ||| [function_2] [function_1]	count=4
arg	link ||| link value	count=1
class	move ||| item view key navigator	count=1
function_arg	[function_1] filename ||| [arg_2] [function_1]	count=1
module	to scene ||| widgets	count=1
module	return the ||| canvas gui	count=9
class	join ||| owmerge data	count=1
class	arrow ||| arrow annotation	count=4
function	set the ||| set filter reg exp	count=1
function	initialize the tracked info/warning/error ||| initialize widget	count=1
function	set the regular ||| set	count=1
function	package ||| package	count=1
function_arg	[function_1] description into ||| [function_1] [arg_2]	count=1
class	the editor state source ||| widget	count=1
class	of the arrow as ||| scheme arrow	count=1
module	plot owlegend ||| utils plot	count=1
arg	given in indices ||| indices string_cols	count=1
module	(:class ||| canvas canvas items	count=2
class	containing the ||| quick menu	count=1
function	message state ||| state	count=1
arg	a list of links ||| links	count=1
function_arg	channels in link ||| channels link	count=2
module	plot how to ||| utils plot	count=1
module	items ||| items	count=2
arg	link in scheme ||| scheme	count=1
arg	rows given in indices ||| indices string_cols	count=1
arg	buttons and adds ||| buttons	count=1
function	re-emit ||| on triggered	count=1
function	[function_1] node meta ||| [function_2] [function_1]	count=3
arg	a given problem type ||| problem_type	count=1
function	[function_1] factor between ||| [function_2] [function_1]	count=1
class	source binding ||| binding	count=1
arg	instance (:class scheme) ||| error_handler allow_pickle_data	count=1
arg	a box with controls ||| box	count=2
function_arg	[function_1] for constructing ||| [function_1] node [arg_2]	count=2
function_arg	[function_1] table into ||| [function_1] wide [arg_2]	count=1
class	for the selected widget ||| edit widget	count=1
function	the quick help animation ||| quick help animation	count=1
module	all points in the ||| utils	count=1
module	computation ||| widgets utils	count=2
class	the current ||| owload	count=1
function	of columns ||| columns	count=1
arg	[arg_1] count ||| [arg_2] [arg_1]	count=3
module_class	[module_1] index ||| [module_1] [class_2]	count=4
arg	name the name ||| name	count=1
module	busy ||| canvas scheme	count=1
class	the executor ||| executor	count=1
function	user interaction ||| set user interaction	count=2
class	connect ||| link action	count=1
arg	name the name should ||| names name	count=1
function	deleting ||| on delete	count=1
class	file ||| owload model	count=1
module	get ||| canvas help	count=1
function	default rule which ||| default rule	count=2
class	value of ||| transformation	count=1
module	selects all points in ||| widgets	count=1
function	native or ||| set native	count=2
function	[function_1] statistic for ||| [function_2] [function_1]	count=2
module_class	[module_1] a tab ||| [module_1] [class_2]	count=3
arg	in x ||| x	count=1
function_arg	helper if include_more_link ||| helper desc include_more_link	count=2
function	height ||| height	count=1
class	of the scores view ||| owrank	count=1
class	stack ||| animated stacked	count=3
function	current :attr selection_behavior ||| selection	count=1
arg	the cs ||| cs	count=1
module	the computation ||| widgets	count=1
function	to list the parameters ||| parameters	count=1
module	[module_1] plot how ||| [module_1] [module_2]	count=4
module	:attr theme_name ||| plot	count=1
class	from the [class_2] ||| [class_2] [class_1]	count=2
function_arg	matrix [arg_2] ||| [function_1] [arg_2]	count=1
function	current widget ||| current	count=1
class	vertex attribute bindings ||| vertex	count=1
class	sink ||| links	count=1
module	plot how ||| utils plot	count=1
class	editor state source ||| widget	count=1
function	the blending ||| blending	count=1
function	to a a ||| to	count=1
function	data ||| features	count=1
function	save ||| save	count=3
function	user interaction ||| user interaction	count=1
function	[function_1] the blending ||| [function_1] [function_2]	count=1
class	of the widget ||| bar widget	count=1
function_arg	[function_1] for mod_path ||| [function_1] [arg_2]	count=5
function	the number of button/action ||| column count	count=1
module	in the ||| canvas	count=1
module	platform dependent ||| misc	count=1
function	re [function_2] ||| [function_1] [function_2]	count=1
function	printed contents of ||| info reg	count=1
class	scheme is ||| scheme	count=1
class	edit [class_2] ||| [class_2] [class_1]	count=2
function	rectangle [function_2] ||| [function_2] [function_1]	count=4
function	calculate the ||| calculate	count=1
function	maps point, which can ||| map to	count=1
function_arg	extract column [arg_2] ||| [function_1] [arg_2]	count=3
function	heatmap [function_2] ||| [function_2] [function_1]	count=1
arg	descriptor ||| descriptor attrs metas	count=1
arg	from a scheme_file ||| scheme_file	count=1
module	all items that ||| utils	count=1
function	fragments for drawing a ||| pixmap fragments	count=1
module	the current ||| widgets utils	count=2
function	for setting the user ||| set user	count=1
class	page to the ||| quick menu	count=1
arg	stream in orange scheme ||| scheme stream	count=1
function_arg	[function_1] the action ||| [function_1] [arg_2]	count=4
class	return a ||| canvas	count=1
function_arg	category with [arg_2] ||| [function_1] [arg_2]	count=1
arg	and execute the ||| source_node sink_node initial_links	count=1
function	have a valid entry ||| has valid entry	count=1
function	shadow ||| shadow	count=1
function	transformations zoom ||| transformations	count=1
arg	the axis axis_id ||| axis_id	count=2
class	from the page ||| quick menu	count=1
class	move ||| standard item model	count=1
function	remove ||| remove	count=21
function	fix the position ||| fix pos	count=3
module	return an entrypoint iterator ||| canvas	count=1
class	editor state source and ||| links edit widget	count=1
function	[function_1] [function_2] ||| [function_2] widget [function_1]	count=8
function_arg	helper function [arg_2] ||| [function_1] node [arg_2]	count=3
function	from the ||| from	count=3
function	a hash value ||| hash dist	count=1
function	set a [function_2] ||| [function_1] filter [function_2]	count=1
class	from the source ||| item	count=1
class	of the ||| future watcher	count=1
function	the parameters as ||| parameters	count=1
function	[function_1] default ||| [function_1] [function_2]	count=3
function	the schemenode [function_2] ||| [function_1] [function_2]	count=1
function	default rule ||| default rule	count=2
function	qgraphicsobject set ||| set	count=1
arg	of :class _signal ||| signals	count=1
function	[function_1] button for ||| [function_2] [function_1]	count=3
function	[function_1] set ||| [function_1] [function_2]	count=2
function_arg	[function_1] button ||| [function_1] [arg_2]	count=2
class	arrow arrow head ||| arrow	count=1
function	generate a default ||| generate default	count=2
class	dock ||| collapsible dock widget	count=1
class	apply [class] given ||| [class]	count=1
class	link and ||| scheme link	count=1
module	:attr theme_name ||| utils	count=1
function_arg	filtering [arg_2] ||| [function_1] wild card [arg_2]	count=1
module_class	[module_1] [class_2] ||| [module_1] gui drop [class_2]	count=1
function_arg	layout the [arg_2] ||| [function_1] [arg_2]	count=4
function	button ||| action button	count=1
arg	insert the number ||| number	count=2
arg	tree [arg_2] ||| [arg_2] [arg_1]	count=1
function	reload the ||| reload	count=1
function	of nodes in ||| nodes	count=1
class	the executor and free ||| executor	count=1
class	for the tool grid ||| widget tool grid	count=2
class	[class_1] description ||| [class_2] [class_1]	count=2
function	action [function_2] ||| [function_2] [function_1]	count=2
module_class	drop [class_2] ||| [module_1] [class_2]	count=4
class	of the tree ||| tree	count=1
function_arg	[function_1] indexed ||| [function_1] i [arg_2]	count=4
module	[module_1] modules source ||| [module_1] [module_2]	count=2
class	the arrow as ||| arrow	count=1
function	trailing ||| trailing	count=1
function	start position of the ||| start pos	count=1
function	drawing a shadow ||| shadow	count=1
class	return ||| canvas	count=1
function	quick ||| quick	count=3
class	the editor state ||| links edit widget	count=1
module	and [module] a ||| [module]	count=1
module	change in the ||| canvas	count=1
module	the value of ||| widgets utils plot	count=1
function_arg	single [function_1] [arg_2] and sizes ||| [function_1] data [arg_2] label_data	count=2
module	vertex ||| widgets utils plot	count=1
class	theme_name ||| owplot	count=1
class	update ||| owheat map	count=2
function	[function_1] tip ||| [function_1] [function_2]	count=3
function	parameters of ||| parameters	count=1
function	[function_1] scene ||| [function_1] [function_2]	count=1
function_arg	[function_1] item ||| [arg_2] [function_1]	count=7
function	all selected items in ||| selected	count=1
arg	name of an ||| name	count=1
function	[function_1] the actual ||| [function_2] [function_1]	count=4
function	trim ||| trim	count=2
class	return ||| watcher	count=1
function	get ||| get	count=4
function	adds [function_2] ||| [function_1] [function_2]	count=3
function_arg	[function_1] module ||| [arg_2] [function_1]	count=4
function	cancel ||| cancel	count=2
function	[function_1] [function_2] ||| [function_1] auto adjust [function_2]	count=5
arg	output and [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] position of ||| [function_2] [function_1]	count=2
function	all selected items ||| selected	count=1
function	code into ||| code	count=1
function	[function_1] animation ||| [function_1] [function_2]	count=3
class	the arrow is ||| arrow annotation	count=1
function	current [function_2] ||| [function_2] [function_1]	count=1
module_class	fixed widget ||| canvas application widget	count=1
arg	existing link in scheme ||| scheme	count=1
class	widget and scene ||| edit widget	count=1
function	a [function] ||| blocking [function]	count=2
function_arg	selection finished [arg_2] ||| [function_1] [arg_2]	count=3
function	a size ||| set size	count=1
module	iterator over ||| widgets visualize	count=1
class	between ||| links edit	count=2
function	[function_1] the node ||| [function_2] [function_1]	count=4
class	of the arrow as ||| arrow annotation	count=1
function	if set to true ||| set	count=1
module	of :attr ||| utils plot	count=1
function_arg	[function_1] source ||| [function_1] code [arg_2]	count=1
function	css linear [function_2] ||| [function_2] [function_1]	count=1
arg	of checkable buttons and ||| orientation buttons	count=1
class	dock (same as setexpanded ||| dock widget	count=1
arg	x_axis and y_axis ||| x_axis y_axis	count=3
function	[function_1] number ||| [function_2] [function_1]	count=1
class	the widget ||| owconfusion matrix	count=1
function	[function_1] the visible ||| [function_1] [function_2]	count=1
arg	data and preserve sparsity ||| data source_var source_place	count=1
module	selection_behavior ||| widgets utils	count=1
arg	output (:class outputsignal) and ||| output	count=1
module	the editor state source ||| document	count=1
function	quickmenu quickmenu popup menu ||| quick menu	count=1
function_arg	disjoint set [arg_2] ||| [function_1] label i [arg_2]	count=1
arg	checkable buttons ||| buttons widget nomargin	count=1
arg	[arg_1] by i ||| [arg_2] [arg_1]	count=2
module	return the number ||| canvas gui	count=2
function	the channel names ||| channel names	count=2
function	render a sequence of ||| render items	count=1
module	a dictionary ||| data utils	count=1
function	notify ||| notify changed	count=1
arg	of the columns ||| columns	count=1
module	a [module] ||| canvas canvas [module]	count=2
function	calculate [function_2] ||| [function_2] [function_1]	count=1
function	fragments ||| fragments	count=1
class	widget action ||| widget tool grid	count=1
module	sink ||| document	count=1
function	the default text ||| default text	count=2
function_arg	a helper [arg_2] ||| [function_1] node [arg_2]	count=2
module	the widget state ||| widgets	count=2
arg	the item (:class ||| item	count=1
module	of :attr ||| widgets	count=1
module	compute ||| preprocess	count=2
function	dynamic link ||| dynamic	count=1
class	buttons/actions in the grid ||| grid	count=1
function	[function_1] line if ||| [function_1] [function_2]	count=4
class	updates ||| manager	count=1
class	an :class ~ ||| canvas scene	count=1
function_arg	single [function_1] [arg_2] shapes and sizes ||| [function_1] data x_data y_data [arg_2] label_data	count=1
arg	rules to ||| rules	count=1
arg	a tree [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	save the [arg_2] ||| [arg_2] [function_1]	count=1
arg	construct a new ||| id	count=1
module	split ||| widgets visualize	count=1
function	[function_1] point edit ||| [function_1] [function_2]	count=4
function	widget settings ||| widget settings	count=2
function	shape from the ||| shape from	count=2
class	end ||| edit widget	count=1
function_arg	[function_1] obj type ||| [function_1] [arg_2]	count=3
function_arg	started [arg_2] ||| [function_1] [arg_2]	count=3
function	return all suitable attributes ||| attributes	count=1
module	belong to it ||| widgets	count=1
function	select the off-diagonal ||| select wrong	count=3
function	key ||| key	count=2
arg	element [arg_2] ||| [arg_2] [arg_1]	count=1
module	to data coordinates along ||| widgets	count=1
module	creates ||| widgets utils plot	count=9
arg	the axis ||| axis	count=1
function	update the graph ||| update graph	count=2
function	hint is the ||| hint	count=1
function	the action role ||| action	count=1
arg	element [arg_2] ||| [arg_1] [arg_2] indent	count=1
class	:class ||| edit	count=2
module	arrow ||| canvas items	count=3
function	set the channel ||| set channel	count=2
function	a state ||| state	count=1
function	data [function_2] ||| [function_2] [function_1]	count=4
class	dock widget in ||| dock widget	count=1
class	tab ||| tab	count=3
class	the :class widgetsscheme instance ||| widget manager	count=1
module	the entire graph ||| utils plot	count=1
function	to be passed ||| change	count=1
function	in a ||| add item	count=1
arg	data table ||| data	count=2
arg	if node is an [arg_1] [arg_2] ||| is ancestor [arg_1] [arg_2]	count=2
arg	:meth set_plot_data its arguments ||| x_index y_index z_index color_index	count=1
class	editor state source and ||| edit	count=1
module_class	the [module_1] [class_2] ||| [module_1] [class_2]	count=1
arg	structure ||| branches	count=1
function	the rectangle ||| rectangle	count=1
function	link reset from ||| link reset	count=1
arg	axis axis_id ||| axis_id	count=2
module	the current ||| widgets utils plot	count=2
function	[function_1] offset ||| [function_2] [function_1]	count=3
arg	policy and the given ||| policy	count=1
function	parse a saved ||| parse	count=1
arg	add content of a ||| header_rows header_columns	count=1
function	new widget with a ||| new	count=1
function	rectangle selection mode ||| rectangle selection	count=2
class	arrow arrow head points ||| scheme arrow	count=1
function	title human readable string ||| title	count=1
function_arg	entropy of [arg_2] ||| [function_1] [arg_2]	count=1
module	selection_behavior ||| widgets	count=1
function	nammin ||| nanmin	count=1
function	all suitable attributes for ||| attributes	count=1
function	a dynamic ||| dynamic	count=2
function	notify the binding ||| notify	count=1
function	native ||| native	count=1
module	value of ||| plot	count=1
module	all ||| utils	count=1
module	[module_1] to it ||| [module_2] [module_1]	count=3
function_arg	[function_1] helper ||| [arg_2] [function_1]	count=1
class	the node ||| edit links node	count=1
function	[function] can have ||| set main [function]	count=1
module	from data to plot ||| widgets utils plot	count=1
function	pixmap if its ||| pixmap	count=1
class	the controlled widget ||| splitter resizer	count=1
arg	method compatible with owbasewidget ||| channelname value signal_id	count=1
function	set the default text ||| set default text	count=1
function_arg	dissimilarity [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] heatmap ||| [function_1] [function_2]	count=1
class	set ||| edit links dialog	count=2
class	text items in the ||| graphics simple text list	count=1
class	widget ||| bar widget	count=2
function	[function_1] learner ||| [function_2] [function_1]	count=5
class	arrow arrow head ||| scheme arrow	count=1
arg	return values ||| values	count=1
function	qpainterpath 'styled' ||| path	count=1
arg	sourcerow [arg_2] ||| [arg_2] [arg_1]	count=4
arg	checkable buttons and connects ||| buttons widget	count=1
class	updates the ||| owplot	count=1
function	line if ||| line	count=1
arg	obj into ||| obj	count=1
function	:class anchorpoint ||| anchor	count=1
function	selection_behavior ||| add	count=1
function	type ||| type	count=1
function	applies inverse ||| map	count=1
function	[function_1] domain ||| [function_2] [function_1]	count=1
function	likelihood [function_2] ||| [function_2] [function_1]	count=5
function	[function_1] [function_2] inside volume specified by ||| [function_1] [function_2] area	count=1
class	update ||| owtree graph	count=1
module	find and return an ||| canvas document	count=1
arg	description into the ||| module mtime description distribution	count=1
class	the tab widget will ||| widget	count=1
function	[function_1] regression ||| [function_2] [function_1]	count=4
function	a size ||| size	count=1
class	the size [class_2] ||| [class_2] [class_1]	count=1
arg	set of checkable buttons ||| buttons widget	count=1
module_class	return all [class_2] ||| [module_1] [class_2]	count=6
arg	[arg_1] value ||| [arg_1] [arg_2]	count=1
module	make sure to ||| widgets	count=1
function	[function_1] selection ||| [function_1] [function_2]	count=5
arg	title to ||| title	count=1
function	[function_1] widgets ||| [function_1] [function_2]	count=2
module	sink ||| canvas document	count=2
arg	node is an ancestor [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	button/action columns ||| column count columns	count=1
class	widget action (from ||| widget tool	count=1
module_class	[module_1] [class_2] ||| [module_1] menu [class_2]	count=1
module_class	[module_1] button ||| [module_1] [class_2]	count=2
class	as ||| annotation	count=1
function	the entropy ||| entropy	count=1
arg	description desc [arg_2] ||| [arg_2] [arg_1]	count=2
function	return the hierarchical clustering ||| dist matrix clustering	count=1
function	[function_1] wildcard ||| [function_2] [function_1]	count=1
class	buttons to ||| tool	count=1
function	[function_1] widget changed ||| [function_2] [function_1]	count=1
arg	link (:class ||| link value	count=1
function	delete the ||| delete widget	count=1
module	the entire ||| plot	count=1
function	the user [function_2] ||| [function_1] [function_2]	count=1
class	set ||| item disable filter	count=1
function_arg	[function_1] x_axis ||| [function_1] [arg_2]	count=4
class	tree ||| tool tree	count=1
class	all source property bindings ||| property	count=1
function_arg	[function_1] [arg_2] ||| [function_1] etree [arg_2]	count=2
function	hierarchical clustering using ||| matrix clustering	count=1
function	sync the widget settings/properties ||| sync	count=1
class	the arrow ||| arrow	count=8
function_arg	using axes x_axis ||| for axes x_axis	count=1
function	from a list ||| from	count=1
module	if ||| canvas utils	count=1
class	source and sink ||| links	count=1
class	the random forest ||| skl random forest	count=1
arg	description of data table ||| name data	count=1
class	paint ||| bordered item delegate	count=1
function	can ||| can enable	count=1
function	description for ||| description	count=1
arg	instance ||| level	count=1
arg	[arg_1] at index ||| [arg_2] [arg_1]	count=2
function	move the ||| move	count=1
function	update the title text ||| update title text	count=1
class	from the scene ||| canvas scene	count=4
module	from data to ||| widgets	count=1
function	to the max depth ||| max depth	count=1
function	widget description ||| widget desc to std item	count=1
function	in ||| item	count=1
class	exception instance [class] exception ||| [class]	count=1
class	of the ||| watcher	count=1
module_class	current sloppy [class_2] ||| [module_1] [class_2]	count=1
class	editor state source ||| links edit widget	count=1
class	the source [class_2] ||| [class_1] [class_2]	count=2
class	the ||| matrix	count=1
class	set ||| tree item model	count=1
arg	by partitioning the cs ||| cs	count=1
function	set the current ||| set	count=1
function_arg	set the [arg_2] ||| [function_1] tab icon index [arg_2]	count=2
class	the dock ||| dock	count=2
function	central widget ||| central widget	count=1
module	current sloppy button ||| document	count=1
module	and [module_2] ||| [module_1] [module_2]	count=5
arg	values ||| values	count=1
module	is ||| canvas gui	count=1
function	remove all links for ||| remove node links	count=1
arg	item view if ||| view	count=1
class	instance that was previously ||| scene	count=1
function	the qaction [function_2] ||| [function_1] [function_2]	count=1
function	to each leaf ||| samples in leaves	count=2
function	[function] cursor ||| [function] cursor to input	count=1
function	set the regular ||| set filter	count=1
class	a dictionary ||| editor	count=1
function	current [function_2] ||| [function_1] [function_2]	count=1
arg	by rows columns ||| rows columns	count=2
module_class	current [class_2] ||| [module_1] [class_2]	count=7
module	of the plot ||| utils plot	count=1
arg	pattern only items matching ||| pattern	count=1
function	processing_state to reflect ||| processing	count=1
class	update ||| bar widget	count=1
class	random forest ||| random forest	count=1
arg	[arg_1] to event ||| [arg_2] [arg_1]	count=2
class	drop ||| drop	count=5
function	data set ||| set features	count=2
arg	stream ||| stream pretty	count=1
arg	[arg] shapes and ||| x_data y_data [arg]	count=3
function	of indices ||| combine indices	count=1
class	buttons ||| tool	count=1
class	shadow's ||| shadow frame	count=1
class	dictionary ||| editor	count=1
class	anchor ||| node item	count=1
function	orange widgets entry ||| entry	count=1
class	sink nodes channels ||| links	count=1
class	remove ||| tool box	count=1
function	from a :class schemenode ||| from	count=1
arg	[arg_1] end from ||| [arg_2] [arg_1]	count=1
module	update loop ||| canvas scheme	count=1
class	the stack ||| animated stacked	count=3
class	from the grid ||| widget tool grid	count=1
module	entire ||| widgets	count=1
function	compute [function_2] ||| [function_2] [function_1]	count=5
function	heatmap [function_2] ||| [function_1] [function_2]	count=1
module	theme_name ||| plot	count=1
function	the domain ||| domain role	count=1
function	current ||| selection	count=1
class	the buttons to ||| resize tool	count=1
arg	[arg_1] weight background ||| [arg_2] [arg_1]	count=3
class	to selection ||| selection	count=1
module	and all items that ||| utils	count=1
module	the widgets settings ||| widgets	count=1
function_arg	the tab [arg_2] ||| [arg_2] [function_1]	count=1
module	items position visibility and ||| canvas canvas items	count=1
class	source ||| links edit widget	count=1
function	create a qt ||| create	count=1
function_arg	the value [arg_2] ||| [arg_2] [function_1]	count=1
arg	size ||| size	count=2
module	return the modules source ||| canvas registry	count=1
function	add a row ||| add row	count=2
function	neighbor [function_2] ||| [function_2] [function_1]	count=1
function	the dynamic ||| dynamic	count=1
class	set ||| tab bar widget	count=3
function	the features ||| set input features	count=1
module	tuple ||| canvas scheme	count=1
function_arg	[function_1] page ||| [function_1] [arg_2]	count=2
module	theme_name ||| widgets utils plot	count=2
function_arg	column from data ||| get column data	count=2
class	the ||| edit	count=1
function	a runtime environment variable ||| runtime env	count=1
function	policy ||| policy	count=1
function	the position of ||| position	count=1
function_arg	insert the [arg_2] ||| [arg_2] [function_1]	count=3
function	has the 'single' flag ||| conflicting single link	count=1
class	the selected widget ||| scheme edit widget	count=1
class	and ||| links edit	count=1
function	widget instance is visible ||| ensure widget visible	count=1
class	an [class] ||| [class]	count=3
module	and sink nodes ||| document	count=1
class	the size [class_2] ||| [class_1] [class_2]	count=1
function	of the central ||| central	count=1
module	value of :attr ||| utils plot	count=1
function	plot [function_2] ||| [function_2] [function_1]	count=2
class	the widget ||| widget	count=8
module_class	[module_1] [class_2] ||| [module_1] visualize [class_2]	count=3
class	item draws it ||| node anchor item	count=1
function	number of [function_2] ||| [function_2] [function_1]	count=2
class	elements of the matrix ||| matrix	count=2
module	[module_1] current ||| [module_1] [module_2]	count=12
class	the source model into ||| item model	count=1
arg	or category ||| desc	count=1
class	of :attr theme_name ||| owplot	count=1
function	formated label [function_2] ||| [function_2] set [function_1]	count=1
class	toolbox ||| tool box	count=3
function	forgets [function_2] ||| [function_1] [function_2]	count=2
function_arg	channels [arg_2] ||| [function_1] [arg_2]	count=1
class	geometry of ||| arrow annotation	count=1
function	a helper ||| node item tool tip helper	count=1
class	creates a ||| owplot gui	count=2
function	to each [function_2] ||| [function_1] [function_2]	count=1
function	learner for ||| learner	count=1
arg	key [arg_2] ||| [arg_1] [arg_2]	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=281
function	a node [function_2] ||| [function_2] [function_1]	count=2
function	all points in the ||| add selection	count=1
function	[function_1] title ||| [function_1] [function_2]	count=1
function	all suitable attributes ||| attributes	count=1
function_arg	single [function_1] [arg_2] and sizes ||| main [function_1] data [arg_2] label_data	count=1
arg	if heatmap is ||| heatmap clear	count=1
function	method [function_2] ||| [function_2] [function_1]	count=2
function	selects all points ||| select points	count=1
function	create a mock owwidget ||| mock error owwidget	count=1
function	shift all ||| shift grid	count=1
class	selects all points in ||| owplot	count=1
arg	node of child ||| node	count=1
function	is visible inside ||| visible	count=1
module	to ||| widgets visualize	count=2
function_arg	[function_1] with ||| [arg_2] [function_1]	count=3
arg	the number into the ||| number	count=2
module	interleave ||| widgets data	count=1
module_class	return the widget ||| canvas application widget	count=1
arg	data and ||| data	count=1
arg	to the size policy ||| policy	count=1
function	[function_1] selected ||| [function_1] [function_2]	count=1
module	points ||| widgets	count=1
function_arg	for tab [arg_2] ||| [function_1] [arg_2]	count=1
function	the content of ||| info	count=1
function_arg	category [arg_2] ||| [arg_2] [function_1]	count=2
arg	and preserve sparsity ||| source_var source_place	count=1
function	color for ||| color	count=2
function	[function_1] leaf ||| [function_2] [function_1]	count=4
function	bounding [function_2] ||| [function_2] widget [function_1]	count=1
function	to the section name ||| name	count=1
function	search [function_2] ||| [function_1] [function_2]	count=4
function	commit the ||| commit	count=1
function	key ||| from key	count=1
class	future ||| future watcher	count=1
module	all points in ||| widgets	count=1
module	of the computation ||| widgets utils	count=1
module	the entire graph ||| utils	count=1
function	evaluate the ||| evaluate	count=1
function_arg	[function_1] a module ||| [function_1] [arg_2]	count=4
arg	an index ||| index	count=1
module	return ||| widgets data	count=1
class	set ||| links dialog	count=2
function	update the ||| update	count=21
function	helper ||| tip helper	count=1
class	in the random ||| skl random	count=1
module_class	[module_1] [class_2] ||| [module_1] scheme [class_2]	count=3
function	notify the binding of ||| notify	count=1
arg	description into ||| module mtime description	count=1
function	parse a saved scheme ||| parse	count=1
function	the content of the ||| info	count=1
module	adds it to ||| widgets utils	count=1
function	the hierarchical clustering using ||| matrix clustering	count=1
class	the node ||| scheme node	count=1
module	:attr theme_name ||| utils plot	count=1
function	input line if ||| input line	count=2
function	ratio statistic ||| ratio statistic	count=2
module	items that [module_2] ||| [module_1] [module_2]	count=2
module	return the ||| widgets data	count=1
arg	given size ||| size	count=1
module	return true ||| canvas registry	count=1
function	forgets ||| clear	count=1
class	has ||| graphics text widget	count=1
function	nodes ||| nodes	count=5
function	render a ||| render items	count=1
function	replot the entire graph ||| replot	count=1
function	[function_1] item in ||| [function_1] [function_2]	count=1
function	scheme scheme from ||| scheme	count=1
function	node color for regression ||| node color reg	count=1
function_arg	[function_1] description desc ||| [arg_2] [function_1]	count=2
class	the source ||| item	count=1
function	at ||| tool	count=1
function	[function_1] widget discovery ||| [function_2] [function_1]	count=1
class	loop ||| signal	count=1
arg	show and execute ||| scheme source_node sink_node initial_links	count=1
function	[function_1] basic stats ||| [function_1] [function_2]	count=1
function	old ows ||| parse scheme v 1 0	count=1
function	the central widget ||| central widget	count=2
function_arg	[function_1] columns ||| [function_1] [arg_2]	count=3
class	:class ||| scene	count=3
class	editor state ||| edit widget	count=1
function	[function_1] gradient ||| [function_1] [function_2]	count=4
arg	(qstandarditemmodel) ||| rootindex	count=1
function	to the ||| to	count=1
class	have ||| tool box	count=2
class	is the dock widget ||| collapsible dock widget	count=1
module	is present ||| visualize	count=1
module	fix ||| canvas gui	count=1
function	remove a link ||| remove link item	count=3
arg	[arg_1] an obj ||| [arg_2] [arg_1]	count=2
module	selects all points in ||| utils plot	count=1
arg	start end into the ||| start end	count=1
function	a valid entry ||| has valid entry	count=2
class	the drop ||| drop	count=4
class	zooming in otherwise ||| graphics view	count=1
function_arg	environment variable key ||| env key	count=1
class	set ||| path object	count=2
function	set the anchor ||| set anchor	count=2
function_arg	[function_1] [arg_2] and sizes ||| [function_1] [arg_2]	count=3
class	zooming in otherwise negative ||| graphics view	count=1
function	blending [function_2] ||| [function_2] [function_1]	count=4
function	the tree adapters ||| trees	count=1
function	learner ||| learner	count=1
class	the ||| editor	count=1
arg	the action from the ||| action	count=2
function	a [function] ||| create [function]	count=2
arg	stream in ||| stream pretty pickle_fallback	count=1
module	:func scheme ||| scheme	count=1
function	set permanent help ||| permanent help	count=1
function	edit ||| edit	count=1
class	of the arrow base ||| arrow annotation	count=1
function	save their settings ||| widget settings	count=1
arg	of checkable buttons ||| orientation buttons	count=1
function	from ||| from data	count=2
class	baseschemeannotation) to the scheme ||| scheme	count=1
arg	by rows [arg_2] ||| [arg_1] [arg_2]	count=1
function	[function_1] settings directory ||| [function_1] [function_2]	count=1
arg	from package ||| package category_name	count=2
function	set the [function_2] ||| [function_1] column [function_2]	count=2
class	selects all points ||| owplot	count=1
arg	description into 'registry' list ||| desc	count=1
module	value ||| widgets utils	count=1
arg	[arg_1] d ||| [arg_2] [arg_1]	count=4
function_arg	the progress [arg_2] ||| [function_1] [arg_2]	count=1
function	brush ||| brush	count=1
module	a dictionary ||| utils	count=1
function	common point [function_2] ||| [function_1] [function_2]	count=1
class	display over the item ||| item	count=1
class	inserted in the toolbox ||| tool box	count=1
function	[function_1] subset of ||| [function_1] [function_2]	count=1
function	color ||| color cls	count=1
class	the arrow arrow head ||| scheme arrow	count=1
function	position in ||| pos	count=1
function	tip if a ||| tip	count=1
arg	from a dict ||| saved	count=1
function	fill color ||| color	count=1
module	the computation ||| widgets utils	count=1
function	helper function ||| tool tip helper	count=1
arg	link if the ||| link	count=1
function	extra columns that will ||| extra	count=1
module	in ||| widgets	count=1
function	shape from ||| shape from	count=2
function_arg	name [arg_2] ||| [arg_2] [function_1]	count=4
function	[function_1] leaf ||| [function_1] [function_2]	count=4
arg	the name should ||| names name	count=1
class	display/edit ||| info edit	count=1
function	[function_1] tree adapters ||| [function_1] [function_2]	count=1
function	extra columns ||| compute reduced extra	count=1
class	show ||| splash screen	count=1
class	geometry of ||| resize arrow annotation	count=1
module	to data ||| widgets	count=1
function	set of all parents ||| parents	count=1
function	application directory ||| dir base	count=1
function	source filename and modified ||| module modified	count=1
module	creates ||| utils plot	count=12
function_arg	learner for [arg_2] ||| [arg_2] [function_1]	count=1
class	body ||| body item	count=1
function	[function_1] bar ||| [function_2] [function_1]	count=1
function	point size ||| point size	count=2
module	to scene coordinates ||| widgets	count=1
module	the value ||| utils	count=1
class	the update loop ||| manager	count=1
arg	for the node in ||| node	count=1
class	and sink ||| links edit	count=1
module	reset the widget ||| widgets	count=1
arg	region reg using the ||| reg	count=1
function	the printed contents of ||| node info reg	count=1
function	helper ||| helper	count=2
arg	add a plot to ||| plot	count=1
class	a tab ||| tab	count=1
function	recalculate its ||| recalculate	count=1
module	corresponding scheme ||| canvas scheme	count=1
class	clear ||| edit widget	count=1
function	the bounding [function_2] ||| [function_2] widget [function_1]	count=1
function	start ||| start	count=4
function	labels ||| labels	count=1
class	arrow arrow head points ||| arrow annotation	count=1
module	calculate ||| classification	count=1
function	and add a ||| add	count=1
function	the cache ||| cache	count=1
arg	direction is ||| direction	count=1
arg	checkable buttons and ||| orientation buttons widget	count=1
class	source [class_2] ||| [class_1] [class_2]	count=2
class	sink nodes ||| links edit widget	count=1
class	to the ||| canvas	count=2
module	was the ||| widgets	count=1
arg	widget ||| widget text	count=2
class	the editor ||| links	count=1
function	all parents ||| parents	count=1
class	the links ||| links	count=1
arg	the points a ||| points	count=1
module_class	[module_1] widget ||| [module_1] application [class_2]	count=1
function	[function_1] a runtime ||| [function_1] [function_2]	count=1
function	a mock owwidget ||| mock error owwidget	count=2
class	a new ||| new link	count=1
arg	a :class element ||| element	count=1
arg	a stream in ||| stream pretty	count=1
module	[module_1] current sloppy ||| [module_1] [module_2]	count=2
function	with a brief description ||| data brief	count=1
module	an iterator over ||| widgets visualize	count=1
class	the update ||| signal manager	count=1
class	the ||| future	count=2
function	the control ||| control active	count=1
module	and return its ||| canvas scheme	count=1
function	settings [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] paths for ||| [function_1] [function_2]	count=1
arg	page (:class menupage) with ||| page	count=1
module	points ||| widgets utils plot	count=2
class	model into ||| model	count=1
function	[function_1] a qaction ||| [function_1] [function_2]	count=1
function	create ||| create	count=9
function	permutation giver by ||| permutation	count=1
function	widget description ||| widget desc to std	count=1
module	the editor ||| canvas document	count=1
module	current ||| utils	count=2
function	[function_1] hint is ||| [function_1] [function_2]	count=1
function	[function_1] the averages ||| [function_1] [function_2]	count=1
class	set ||| sort filter proxy model	count=1
module	and return its index ||| canvas gui	count=1
function	have a valid entry ||| valid entry	count=1
module_class	[module_1] link ||| [module_1] [class_2]	count=2
arg	x_axis [arg_2] ||| [arg_2] [arg_1]	count=1
function	re ||| re	count=1
function	control point ||| control point	count=4
arg	along the axis axis_id ||| axis_id	count=2
module	current file ||| widgets	count=1
function	helper if ||| helper	count=1
class	item ||| item	count=9
module	the item to the ||| canvas	count=1
arg	a qt model or ||| model selected	count=1
arg	[arg_1] end from ||| [arg_1] [arg_2]	count=1
class	editor state source ||| links	count=1
class	dock (same ||| collapsible dock	count=1
function_arg	[function_1] the columns ||| [arg_2] [function_1]	count=3
arg	[arg_1] given size ||| [arg_2] hint [arg_1]	count=2
class	[class_1] grip is ||| [class_2] [class_1]	count=2
class	the buttons to fit ||| resize tool	count=1
class	flattening ||| flattened tree item model	count=1
module_class	[module_1] toolbox ||| [module_1] [class_2]	count=2
function_arg	of button/action columns ||| column count columns	count=1
module	widget ||| widgets	count=1
arg	[arg_1] sums ||| [arg_1] axis [arg_2]	count=1
module	links ||| canvas document	count=1
arg	stream in orange ||| stream pretty	count=1
module	selects all ||| widgets utils plot	count=1
function	number of ||| count	count=4
function	get the [function_2] ||| [function_2] [function_1]	count=6
module	in the ||| widgets	count=1
function	for column ||| for column	count=2
class	grip is ||| grip	count=1
arg	scheme ||| scheme	count=5
class	in the grid ||| tool grid	count=2
arg	node in on the ||| node	count=1
arg	table into ||| table	count=1
function	distributions with discrete attributes ||| distributions	count=1
function_arg	add the [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	current index [arg_2] ||| [arg_2] [function_1]	count=2
class	return ||| base	count=1
arg	of the scheme ||| scheme	count=1
module	is the model ||| canvas application	count=2
function	the current ||| update	count=1
arg	table ||| table varlist idvarlist	count=1
function	the end ||| end	count=1
function	copy ||| copy	count=1
function_arg	[function_1] :meth set_plot_data ||| [function_1] [arg_2]	count=4
function	subset ||| subset	count=1
class	the editor state ||| widget	count=1
function	filename also make sure ||| filename	count=1
module	returns the ||| widgets	count=1
arg	of links [arg_2] ||| [arg_2] [arg_1]	count=2
function	controls for common plot ||| plot	count=1
function	visible [function_2] ||| [function_1] [function_2]	count=3
function	subset of data ||| subset data	count=3
function	path') and update the ||| update	count=1
function_arg	to a [arg_2] ||| [function_1] ows stream [arg_2]	count=1
module	nodes ||| canvas document	count=2
function_arg	[function_1] object in ||| [function_1] at scene pos [arg_2]	count=1
arg	we calculate ||| axis impute	count=1
function_arg	[function_1] action ||| [arg_2] [function_1]	count=3
module	return ||| widgets data utils	count=2
module	update the ||| canvas	count=1
function	color for [function_2] ||| [function_1] [function_2]	count=1
module	the "zoom" slider ||| widgets	count=1
module	in ||| utils plot	count=2
function	from a list ||| from data	count=1
arg	selection state ||| item state	count=1
class	bound ||| rectangle selection action	count=1
class	input for a list ||| diagram	count=1
module_class	drop [class_2] ||| [module_1] drop [class_2]	count=4
function	current control [function_2] ||| [function_2] [function_1]	count=3
module	a file and return ||| canvas	count=1
class	the editor state source ||| links	count=1
function	removed ||| removed	count=1
module	the ||| evaluate	count=1
function	load the scheme scheme ||| scheme	count=1
function	has ||| has	count=1
function	a widget ||| widget	count=1
function	points in the ||| add selection	count=1
function	the printed contents ||| info reg	count=1
function	schedule a list ||| schedule	count=1
class	set ||| node item	count=4
function	[function_1] new ||| [function_1] [function_2]	count=1
class	widget and ||| links edit widget	count=1
arg	under parent sourceparent ||| sourceparent	count=1
function	the button ||| button	count=2
function	list the parameters ||| parameters	count=1
function	column ||| column	count=2
class	return the ||| editor	count=1
module	[module_1] model ||| [module_1] [module_2]	count=8
function	link (:class linkitem) from ||| link	count=1
arg	copy of baseformat ||| baseformat	count=1
function_arg	[function_1] start_node ||| [function_1] [arg_2]	count=1
function	adds [function_2] ||| [function_2] [function_1]	count=3
module_class	[module_1] arrow ||| [module_1] [class_2]	count=6
function	[function_1] connection ||| [function_1] [function_2]	count=1
module	buttons ||| canvas gui	count=3
function	the data [function_2] ||| [function_2] [function_1]	count=4
function	the averages stripe ||| averages stripe	count=2
module	dictionary ||| widgets	count=1
function	normalize ||| normalize	count=1
arg	from data [arg_2] ||| [arg_1] [arg_2]	count=1
class	vertex ||| vertex	count=1
class	console ||| console	count=1
class	sink nodes ||| edit widget	count=1
function_arg	[function_1] link (:class ||| [function_1] [arg_2]	count=4
class	arrow lines ||| scheme arrow	count=1
module	return an iterator ||| canvas registry	count=1
function	binding for property ||| binding for	count=1
function	[function_1] learner ||| [function_1] [function_2]	count=1
function	set pixmap transformation ||| set transformation	count=2
arg	sink_node if there ||| sink_node	count=1
function	[function_1] filter ||| [function_1] [function_2]	count=1
arg	and column ||| column	count=1
function	description text ||| description	count=1
function	current selected default ||| default	count=1
function	a [function_1] [function_2] ||| [function_1] [function_2]	count=30
module	all points ||| widgets utils	count=1
class	current file ||| owload model	count=1
function	[function_1] tab button ||| [function_1] [function_2]	count=2
function	palette ||| set palette	count=2
class	register ||| widget registry	count=2
function	instance ||| instance	count=3
class	the widget [class_2] ||| [class_1] [class_2]	count=1
function	nodes in breadth ||| nodes	count=1
module	the widgets settings ||| widgets data	count=1
function	[function_1] column ||| [function_2] [function_1]	count=2
class	set ||| edit links node	count=2
module	'literal') and return ||| canvas	count=1
class	the size ||| size	count=1
function	widget ||| widget desc to std	count=1
function	given ||| call	count=1
module	a ||| widgets	count=1
module	items position ||| canvas items	count=1
function	averages ||| averages	count=1
function	rectangle selection ||| rectangle selection	count=2
class	editor state source ||| edit	count=1
function	[function_1] for the ||| [function_2] [function_1]	count=2
function_arg	[function_1] for constructing ||| [arg_2] [function_1]	count=2
module_class	invalidate [class_2] ||| [module_1] [class_2]	count=1
function	each instance rules ||| predict	count=1
function	[function_1] row ||| [function_1] [function_2]	count=1
function	source filename and modified ||| modified	count=1
class	which to edit ||| edit widget	count=1
function	a helper function for ||| tool tip helper	count=1
function	[function_1] instance for ||| [function_2] [function_1]	count=8
class	an :class ||| scene	count=1
function	[function_1] point for ||| [function_1] [function_2]	count=3
function	instance for the ||| widget instance	count=2
module	the document ||| canvas document	count=6
class	inside sloppy region and ||| bar	count=1
class	set ||| canvas scene	count=2
function	node color [function_2] ||| [function_1] [function_2]	count=1
function	cache have ||| cache has	count=1
function	set the [function_2] ||| [function_1] node [function_2]	count=3
arg	if heatmap is provided ||| heatmap	count=1
arg	if node is an [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
module	in the widgets ||| widgets data	count=1
function	add ||| graph add	count=1
function	the features ||| input features	count=1
module	dictionary ||| data utils	count=2
arg	a data table ||| table varlist idvarlist	count=1
class	widget where hover/move ||| bar widget	count=1
function	the source [function_2] ||| [function_1] [function_2]	count=4
function	current ||| on current	count=1
class	selects ||| owplot	count=1
class	the node ||| graph node	count=2
module	plot how to interpret ||| utils plot	count=1
function_arg	[function_1] given sourcerow ||| [function_1] sourceparent [arg_2]	count=1
class	tooltip with the ||| tooltip manager	count=1
function	brief description of ||| brief	count=1
function	action role this ||| action	count=1
module	and sink nodes ||| canvas	count=1
function	the ||| update	count=2
function	[function_1] for ||| [function_1] [function_2]	count=1
module	[module_1] [module_2] ||| [module_2] [module_1]	count=56
class	text [class_2] ||| [class_2] [class_1]	count=2
module	return ||| canvas application	count=8
function	to the ||| add	count=1
function_arg	valid entry [arg_2] ||| [arg_2] [function_1]	count=1
arg	y_axis ||| y_axis	count=1
module	updates the current ||| widgets	count=1
function_arg	[function_1] [arg_2] ||| [function_1] baseformat [arg_2]	count=18
function_arg	button at index ||| button index	count=1
class	[class_1] widget in ||| [class_2] [class_1]	count=3
arg	by rows ||| rows	count=1
function_arg	a row [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] the dissimilarity ||| [function_2] [function_1]	count=1
function	a helper function ||| node item tool tip helper	count=1
function	generate a [function_2] ||| [function_2] [function_1]	count=5
arg	checkable buttons ||| orientation buttons	count=1
arg	thread (a :class ||| thread	count=1
function	fix size so it ||| fix size policy	count=1
function	point properties ||| point properties box	count=2
function_arg	selection started [arg_2] ||| [arg_2] [function_1]	count=3
function	widget clear ||| clear	count=1
function	wildcard [function_2] ||| [function_2] [function_1]	count=2
module_class	the [class_2] ||| [module_1] canvas [class_2]	count=3
module	return true if the ||| canvas document	count=1
function	on ||| on	count=1
function_arg	save the [arg_2] ||| [function_1] [arg_2]	count=1
function	max depth slider ||| depth	count=1
arg	rect ||| rect	count=1
function	[function_1] meta ||| [function_1] [function_2]	count=6
function	set the name ||| set	count=1
function	find ||| find	count=2
arg	widget state ||| widget	count=1
arg	[arg_1] end into ||| [arg_2] [arg_1]	count=1
function_arg	single [function_1] [arg_2] shapes and sizes ||| [function_1] data [arg_2] label_data	count=1
function_arg	for tab [arg_2] ||| [arg_2] [function_1]	count=1
arg	box with controls for ||| widget box	count=2
class	qmodeindex) ||| quick	count=1
module	source and ||| canvas document	count=1
module	entire graph ||| widgets utils plot	count=1
function	valid entry for ||| valid entry	count=1
class	activate ||| item view key navigator	count=1
function	should the geometry of ||| geometry	count=1
class	dock [class_2] ||| [class_2] [class_1]	count=2
function	common plot settings ||| plot settings	count=1
module	return ||| widgets	count=2
module	belong to ||| widgets	count=1
arg	target thread (a :class ||| thread	count=1
function	be the current shown ||| current	count=1
class	scheme ||| scheme	count=9
arg	data instances we calculate ||| e2 axis impute	count=1
function	is a ||| is	count=1
function	is changed with setline ||| auto adjust	count=1
function	the node item animation ||| node animation	count=1
class	baseschemeannotation) to the scheme ||| scheme edit widget	count=1
class	sink nodes channels ||| edit widget	count=1
class	the window [class_2] ||| [class_2] [class_1]	count=2
arg	link ||| link	count=3
class	update ||| owselect attributes	count=1
class	discretization of ||| discretization	count=1
arg	direction is positive if ||| direction	count=1
arg	the child ||| child	count=1
function_arg	[function_1] for obj ||| [function_1] [arg_2]	count=3
module	all points ||| widgets utils plot	count=1
arg	stream and ||| stream	count=2
class	send ||| widgets signal manager	count=1
function	font for the ||| font	count=1
function	mock ||| mock error	count=1
arg	button ||| button	count=1
function	rectangle ||| rect	count=3
function	forgets plot [function_2] ||| [function_1] [function_2]	count=1
function_arg	the tab [arg_2] ||| [function_1] action [arg_2]	count=1
arg	does ||| distribution	count=1
class	invalidate ||| stack	count=1
function	current index by ||| current	count=1
function_arg	filtering [arg_2] ||| [arg_2] [function_1]	count=1
function	nanmean ||| nanmean	count=1
arg	[arg_1] we calculate ||| [arg_1] [arg_2]	count=1
module	of :attr ||| widgets utils plot	count=1
class	sync ||| widgets scheme	count=1
function	the schemenode ||| node	count=1
function	notify ||| notify	count=1
function	toward the end ||| end pos	count=1
class	for ||| widget	count=1
arg	the given variable on ||| variable	count=1
function	information message box ||| message information	count=2
arg	output (:class [arg_2] ||| [arg_2] [arg_1]	count=2
function	section name ||| widget name	count=1
arg	checkable buttons ||| orientation buttons widget	count=1
arg	variable the variable whose ||| variable lookup_table	count=1
function_arg	[function_1] action from ||| [arg_2] [function_1]	count=3
class	display/edit ||| info dialog	count=1
function_arg	[function_1] for widget ||| [arg_2] [function_1]	count=4
class	state source ||| widget	count=1
function_arg	paste [arg_2] ||| [arg_2] [function_1]	count=1
function	reset the ||| reset	count=1
function	the selection ||| selection	count=3
arg	[arg_1] weight ||| [arg_1] background [arg_2]	count=3
function	run ||| run	count=3
class	preserving the arrow ||| arrow	count=1
function	[function_1] css ||| [function_2] [function_1]	count=1
function	update the selection rects ||| update selection rects	count=1
arg	split by group_var ||| group_var	count=1
function	[function_1] control point ||| [function_1] [function_2]	count=2
module_class	compute [class_2] ||| [module_1] [class_2]	count=8
function	triangle using ||| draw triangle	count=1
function	code into the ||| code	count=1
function	a html formated label ||| label	count=1
function	qt css [function_2] ||| [function_2] [function_1]	count=1
function	the rectangle selection mode ||| rectangle selection	count=1
class	text ||| simple text list	count=2
function_arg	description from [arg_2] ||| [function_1] [arg_2]	count=1
function	qt css linear gradient ||| css gradient	count=1
class	page to [class] ||| [class]	count=1
function	expand ||| expand	count=1
function_arg	layout [arg_2] ||| [function_1] [arg_2]	count=3
function	set pixmap ||| set	count=1
arg	direction ||| direction	count=1
function	diagonal ||| correct	count=1
module	signal if the ||| widgets	count=1
function	end the [function_2] ||| [function_2] [function_1]	count=4
arg	for widget ||| widget text icon	count=1
arg	by :meth set_plot_data its ||| x_index y_index z_index color_index	count=1
class	display populates the scene ||| canvas scene	count=1
function	drag ||| drag	count=1
arg	for the channel name ||| channel	count=1
function	user [function_2] ||| [function_2] [function_1]	count=1
class	the current [class] ||| [class]	count=3
function_arg	given [arg_2] ||| [function_1] [arg_2]	count=1
module	to the target ||| widgets utils	count=1
module	lines ||| utils plot	count=1
function	quick help ||| set quick help	count=2
class	state source and ||| widget	count=1
function_arg	[function_1] widget ||| [function_1] [arg_2]	count=4
arg	show [arg_2] ||| [arg_2] [arg_1]	count=1
class	source property ||| property	count=2
class	nodes ||| widget	count=1
arg	start_node (i e ||| start_node	count=1
function	width ||| line width	count=2
function	node color ||| node color	count=3
function	[function_1] settings directory ||| [function_2] [function_1]	count=1
module	fixed ||| application	count=1
class	state source ||| links edit	count=1
function_arg	button/action [arg_2] ||| [function_1] count [arg_2]	count=1
module	editor ||| document	count=1
arg	widget or category ||| desc	count=1
function	start position of ||| start pos	count=2
function_arg	[function_1] if include_more_link ||| [arg_2] [function_1]	count=1
function	off-diagonal elements of the ||| wrong	count=1
function	[function_1] palette for ||| [function_2] [function_1]	count=1
function	[function_1] point for ||| [function_2] [function_1]	count=3
class	tree a list ||| tool tree	count=1
function	[function_1] button ||| [function_1] [function_2]	count=7
module	return the current ||| canvas document	count=2
function	metrics depending on ||| metrics	count=1
class	tool grid ||| widget tool grid	count=4
module	return an ||| canvas	count=5
function	items in the completer ||| update completer	count=1
function	remove the ||| remove item	count=1
arg	tree ||| tree	count=1
module	points in the ||| widgets	count=1
arg	[arg_1] group_var ||| [arg_1] [arg_2]	count=2
function	method for column ||| method for column	count=3
function	the widget description ||| widget desc to	count=1
arg	a qobject instance obj ||| obj	count=1
function	fix ||| fix size policy	count=1
function	insert category ||| insert category	count=1
function_arg	column from [arg_2] ||| [arg_2] [function_1]	count=3
module	of :obj orange data ||| data	count=1
class	layout ||| layout	count=1
module	return an :obj ordereddict ||| canvas	count=1
function	overloads paint ||| paint	count=1
function	[function_1] diagonal elements ||| [function_1] [function_2]	count=1
class	property ||| abstract bound property	count=2
function	the max [function_2] ||| [function_1] [function_2]	count=4
arg	given in indices ||| left right indices	count=1
arg	output (:class ||| output	count=1
function	set [function_2] ||| [function_2] [function_1]	count=19
class	selection ||| selection	count=1
class	shadow ||| drop shadow frame	count=1
class	the ||| canvas	count=9
class	zooming in ||| zoomable graphics view	count=1
function	[function_1] sink ||| [function_2] [function_1]	count=1
function	in local coordinates ||| pos at	count=1
module	the editor state ||| canvas	count=1
arg	checkable buttons ||| buttons widget	count=1
function	selects [function_2] ||| [function_2] [function_1]	count=1
function	the actual ||| actual	count=1
class	value of the ||| transformation	count=1
class	widget action (from a ||| widget	count=1
arg	for widget ||| widget text	count=1
function	changed (progressbarinit/finished) ||| changed	count=1
class	learner ||| learner	count=1
function	for the ||| for	count=3
function	iterator over the leaf ||| leaves	count=1
function	view has a current ||| current	count=1
function	recently accessed schemes ||| recent schemes	count=2
function	result of ||| result	count=2
class	source and sink nodes ||| edit	count=1
function	plan ||| add links plan	count=1
function	[function_1] stats ||| [function_2] [function_1]	count=2
class	this item ||| item	count=1
function	[function_1] environment ||| [function_1] [function_2]	count=1
function	filename and modified ||| module modified	count=1
arg	[arg_1] position index ||| [arg_2] [arg_1]	count=1
module	items that belong ||| utils plot	count=1
function	in expanded state ||| expanded	count=1
module	theme_name ||| utils plot	count=2
function_arg	to [arg_2] ||| [function_1] ows stream scheme [arg_2]	count=2
class	style the link ||| link	count=1
class	the dock (same ||| collapsible dock	count=1
function	all suitable attributes ||| source attributes	count=1
function	bounding box [function_2] ||| [function_2] widget [function_1]	count=1
function_arg	[function_1] scheme format ||| [arg_2] [function_1]	count=1
function	remove the button ||| remove action button	count=1
class	and ||| links	count=1
function_arg	[function_1] helper function ||| [arg_2] [function_1]	count=1
module	editor state source ||| document	count=1
function	title ||| title	count=4
arg	x_axis and ||| x_axis	count=1
function	zoom ||| zoom	count=3
class	arrow base point ||| arrow annotation	count=1
function	can the a ||| can enable	count=1
module	modules ||| registry	count=1
function	style ||| style	count=1
module	to plot ||| widgets utils plot	count=2
class	the dock (same as ||| collapsible dock widget	count=1
function	set page to be ||| set	count=1
arg	mod_path ||| mod_path distribution	count=1
arg	[arg_1] preserve sparsity ||| [arg_2] [arg_1]	count=2
function	interleave ||| interleave	count=1
class	arrow [class_2] ||| [class_1] [class_2]	count=7
module	array with ||| widgets	count=1
function	a subset [function_2] ||| [function_1] [function_2]	count=3
function	helper function ||| node item tool tip helper	count=1
function	reflect the ||| processing	count=1
function	nodeitem) neighbor ||| neighbor	count=1
function	the number ||| count	count=1
arg	method compatible with owbasewidget ||| widget channelname value signal_id	count=1
arg	returns data ||| data	count=1
function	a rectangle using current ||| draw rectangle	count=1
module	removes ||| utils plot	count=1
function	[function_1] help ||| [function_1] [function_2]	count=5
function	update of ||| update	count=1
function_arg	value [arg_2] ||| [arg_2] [function_1]	count=1
function	qualified name for ||| qualified name	count=1
function	stripe ||| stripe	count=1
arg	in indices ||| indices string_cols	count=1
function	matrix ||| matrix	count=1
arg	checkable buttons and connects ||| buttons widget nomargin	count=1
function	the position of ||| pos	count=1
function	the current control point ||| control point	count=1
function	[function] the ||| [function]	count=1
function	the ||| add	count=2
function	nammax ||| nanmax	count=1
module_class	[module_1] base ||| [module_1] arrow [class_2]	count=1
arg	add content [arg_2] ||| [arg_2] [arg_1]	count=4
class	update ||| selection manager	count=1
function	region of the ||| calc sloppy region	count=1
module	all points in ||| widgets utils plot	count=1
module_class	[module_1] a tab ||| [class_2] [module_1]	count=1
function	rename was requested for ||| on rename action	count=1
class	zooming in otherwise ||| view	count=1
function_arg	dissimilarity distance matrix ||| disimilarity matrix	count=1
function	[function_1] currently highlighted ||| [function_1] [function_2]	count=1
function	columns in the ||| columns	count=1
class	the arrow arrow ||| scheme arrow annotation	count=1
class	add rows to selection ||| selection	count=1
arg	table to ||| table	count=1
arg	[arg] future ||| [arg]	count=1
module	selects all ||| widgets	count=1
function_arg	description [arg_2] ||| [arg_2] [function_1]	count=1
class	the text geometry ||| scheme text annotation	count=2
function	widget ||| widget desc to std item	count=2
function	tab button icon ||| tab icon	count=2
module	items position visibility and ||| items	count=1
module	to the ||| canvas	count=10
function_arg	[function_1] [arg_2] shapes and sizes ||| [function_1] [arg_2]	count=3
module	the entire ||| utils	count=1
function	help [function_2] ||| [function_1] [function_2]	count=1
function	expanded state if ||| expanded	count=1
function	a brief description ||| brief	count=1
function_arg	[function_1] for index ||| [function_1] [arg_2]	count=1
arg	resulting from the execution ||| timeout	count=1
class	the size grip is ||| size grip	count=1
function	input ||| input	count=4
function	setting the user ||| user	count=1
function	a runtime ||| runtime	count=1
module	current :attr ||| widgets	count=1
function	[function_1] columns ||| [function_1] [function_2]	count=3
function	the [function] ||| get widget name [function]	count=1
module	of the ||| canvas canvas	count=1
arg	x array so it ||| cls x	count=1
module	all points in ||| utils	count=1
class	arrow brush ||| arrow annotation	count=1
function	modified [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] selection mode ||| [function_1] [function_2]	count=2
function	widgets save their settings ||| widget settings	count=1
module	border ||| canvas gui	count=1
class	arrow lines start ||| scheme arrow	count=1
function_arg	[function_1] page (:class ||| [function_1] name [arg_2]	count=1
function	qualified [function_2] ||| [function_1] [function_2]	count=2
module	and all items that ||| utils plot	count=1
function	nodeitem) neighbor [function_2] ||| [function_2] [function_1]	count=1
function	write scheme to ||| scheme to	count=1
module	return ||| widgets utils	count=2
class	create ||| link action	count=2
class	of the arrow arrow ||| scheme arrow	count=1
function	[function_1] qt css ||| [function_2] [function_1]	count=1
class	reset the ||| matrix	count=1
function	scheme to a ||| scheme to	count=1
function	and modified [function_2] ||| [function_1] [function_2]	count=3
function	point for ||| point	count=1
module	all points ||| utils	count=1
function_arg	entry for [arg_2] ||| [function_1] [arg_2]	count=1
function	helper ||| tool tip helper	count=1
function_arg	plan [arg_2] ||| [function_1] scheme [arg_2]	count=3
module	of the plot ||| plot	count=1
function	set to true then ||| set	count=1
function	register ||| register	count=2
function_arg	[function_1] icon for ||| [arg_2] [function_1]	count=1
function	the user interaction ||| set user interaction	count=2
function	[function_1] environment ||| [function_2] [function_1]	count=1
function	update ||| update node	count=2
function	the hierarchical clustering using ||| clustering	count=1
class	of text items in ||| graphics simple text list	count=1
function_arg	[function_1] stream ||| [function_1] ows stream scheme [arg_2]	count=2
class	arrow arrow ||| scheme arrow	count=1
arg	a stream [arg_2] ||| [arg_2] [arg_1]	count=2
arg	node for regression ||| node	count=1
arg	a stream ||| stream pretty	count=1
class	dock (same as ||| collapsible dock	count=1
arg	in a tree ||| tree	count=1
function_arg	raw html to ||| raw name html	count=1
class	add ||| welcome dialog	count=1
class	initialize ||| mosaic viz rank	count=1
class	arrow lines start and ||| arrow	count=1
arg	instance ||| registry	count=1
function	tab button ||| tab	count=1
function	to be ||| change	count=1
module	all widgets for the ||| canvas	count=1
class	set ||| pixmap widget	count=2
module	and adds it to ||| widgets utils	count=1
function	method for ||| method for	count=2
function	the current :attr ||| add	count=1
function	actual ||| actual	count=1
function	params of a given ||| get params	count=1
arg	data table ||| name data	count=1
arg	for constructing a standard ||| links_in links_out	count=1
arg	x_axis and [arg_2] ||| [arg_1] [arg_2]	count=1
arg	if node is [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function	to the input ||| to input	count=1
module_class	return the [class_2] ||| [module_1] scheme [class_2]	count=1
class	a widget ||| widget manager	count=1
function	domain ||| domain role	count=1
class	zooming ||| zoomable graphics view	count=1
class	mean value ||| mean	count=1
module	loop ||| canvas scheme	count=2
function	basic stats for ||| basic stats	count=2
class	the grid lines ||| grid	count=1
function	icon size ||| icon size	count=4
function	formated ||| formated	count=1
module	selects all points in ||| plot	count=1
class	the item draws ||| anchor item	count=1
function	returns next 'possible' attribute ||| next name	count=1
class	is the dock widget ||| dock widget	count=1
function	[function_1] [function_2] ||| [function_2] set [function_1]	count=7
function_arg	helper if [arg_2] ||| [function_1] [arg_2]	count=2
module	return the ||| widgets	count=2
function	urls ||| drag enter	count=1
class	return ||| base editor	count=1
function	the channels in ||| channels	count=1
class	tooltip with ||| tooltip manager	count=1
function	[function_1] currently highlighted ||| [function_2] [function_1]	count=1
function	node color for ||| node color cls	count=2
function	updates ||| update	count=2
function_arg	[function_1] [arg_2] sizes ||| [function_1] [arg_2]	count=3
class	the transformed [class] ||| [class]	count=3
class	arrow is changed with ||| arrow	count=1
class	widget ||| widget	count=19
function	new output :class anchorpoint ||| new output anchor	count=1
function_arg	brief [arg_2] ||| [function_1] [arg_2]	count=1
function	instance for the ||| for	count=2
function	the quick help ||| quick help	count=3
function	search paths ||| search paths from description	count=1
arg	the viewport ||| xmargin ymargin	count=1
class	[class_1] as ||| [class_1] [class_2]	count=4
arg	a data table ||| table	count=1
class	[class] path ||| [class]	count=3
class	and sink nodes ||| links	count=1
arg	value from data ||| value	count=1
function_arg	[function_1] [arg_2] ||| [function_1] count [arg_2]	count=2
function_arg	standard icon [arg_2] ||| [function_1] [arg_2]	count=1
function	set the progress ||| set progress	count=2
class	tree a ||| tool tree	count=1
function	toolbar ||| toolbar	count=1
class	current ||| owplot	count=2
function	from a list of ||| from	count=1
function_arg	[function_1] with actions ||| [arg_2] [function_1]	count=3
function	[function_1] number ||| [function_1] column [function_2]	count=1
class	the arrow as a ||| scheme arrow	count=1
arg	a tree [arg_2] ||| [arg_1] [arg_2]	count=1
module	items position visibility ||| canvas items	count=1
module	return ||| canvas gui	count=9
function	[function_1] title ||| [function_2] [function_1]	count=1
function	the hierarchical clustering ||| dist matrix clustering	count=1
function	the data ||| features	count=1
function	[function_1] name ||| [function_2] [function_1]	count=1
class	item draws ||| anchor item	count=1
function_arg	tab at index ||| tab icon index	count=1
function	recently accessed ||| recent	count=2
class	in the stack ||| menu stack widget	count=1
function	at ||| at	count=4
arg	[arg_1] input ||| [arg_2] [arg_1]	count=1
arg	to sink_node if there ||| sink_node	count=1
module	update loop ||| canvas	count=1
function	for the ||| for widget	count=1
class	node ||| node	count=14
arg	from [arg_2] ||| [arg_2] [arg_1]	count=2
arg	serialize obj using ||| obj	count=1
function	rows ||| rows	count=2
function_arg	of button/action [arg_2] ||| [function_1] count [arg_2]	count=1
function	maps point, which ||| map to graph	count=1
function	[function_1] depth and ||| [function_2] [function_1]	count=5
function	result of the :class ||| result	count=1
class	:attr theme_name ||| owplot	count=1
class	arrow lines start and ||| scheme arrow	count=1
function	[function_1] action role ||| [function_2] [function_1]	count=1
function	control is ||| is control	count=1
arg	table into ||| table varlist	count=1
function	create the tab button ||| create tab button	count=1
module	all example workflows ||| application workflows	count=1
class	a widget ||| widget tool grid	count=1
function_arg	[function_1] include_more_link ||| [function_1] [arg_2]	count=1
function	of lines in ||| lines	count=1
class	value of :attr theme_name ||| owplot	count=1
class	property ||| property	count=3
class	source and sink ||| widget	count=1
function	returns whether vertical ||| is x	count=1
function_arg	from a [arg_2] ||| [arg_2] [function_1]	count=1
class	the widget and scene ||| edit widget	count=1
function	dendrogram [function_2] ||| [function_1] [function_2]	count=1
function	action for [function_2] ||| [function_2] [function_1]	count=2
class	draw ||| owparallel graph	count=1
class	heatmap rows ||| heatmap scene	count=1
module	:attr selection_behavior ||| utils plot	count=1
class	[class_1] point ||| [class_1] [class_2]	count=2
function	css linear ||| css	count=1
function	a helper function ||| tip helper	count=1
function	helper ||| node item tool tip helper	count=1
function	the widgets expanded ||| expanded	count=1
function	for tab at ||| tab tool	count=1
arg	output and input channels ||| output input	count=1
function	disable the ||| disable	count=1
class	schemenode) from the scheme ||| scheme edit	count=1
function	user ||| user	count=1
class	of :attr ||| owplot	count=1
class	selects all ||| owplot	count=1
function	remove selection ||| remove selection	count=2
class	editor ||| links	count=1
arg	of checkable buttons ||| buttons	count=1
module	to plot coordinates along ||| widgets utils plot	count=1
function	[function_1] title text ||| [function_1] [function_2]	count=1
function	update the rankmodel ||| update rank model	count=1
module	the updates ||| canvas	count=1
function	indices ||| combine indices	count=1
function_arg	re-emit the [arg_2] ||| [function_1] [arg_2]	count=3
class	[class_1] widget ||| [class_1] [class_2]	count=3
function	selects all points ||| add selection	count=1
function	update all the ||| update	count=1
class	color for the arrow ||| scheme arrow	count=1
module	over ||| widgets visualize	count=1
class	tool grid the ||| tool grid	count=1
function	[function_1] stripe ||| [function_1] [function_2]	count=5
arg	of folds ||| folds	count=1
class	node ||| scheme edit widget	count=1
class	the node title ||| node item	count=1
class	and sink nodes channels ||| edit	count=1
module	the value ||| widgets utils plot	count=1
function	selects ||| add	count=1
arg	the specified text, orientation ||| text orientation	count=1
function	settings [function_2] ||| [function_2] [function_1]	count=1
class	the dock widget in ||| collapsible dock widget	count=1
function	[function_1] line if ||| cursor [function_1] [function_2]	count=1
class	or none if no ||| future watcher	count=1
arg	computation if timeout ||| timeout	count=1
class	geometry ||| annotation	count=1
module	in the ||| widgets utils	count=1
arg	policy ||| policy	count=1
class	the annotation ||| text annotation	count=2
arg	sourcerow from [arg_2] ||| [arg_2] [arg_1]	count=2
function	entropy induced by ||| entropy	count=1
function	positions of ||| positions	count=1
class	loop ||| manager	count=1
function	[function_1] quick ||| [function_2] [function_1]	count=1
arg	if link ||| link	count=1
arg	[arg_1] [arg_2] ||| [arg_1] axis [arg_2]	count=10
arg	append the widget ||| widget text	count=1
arg	(qstandarditemmodel) for ||| rootindex	count=1
module	list ||| items	count=2
class	the view ||| graphics view	count=1
arg	rows given in indices ||| right indices string_cols	count=1
arg	category ||| cls desc	count=1
function	rankmodel ||| rank model	count=1
module	current ||| model	count=1
arg	from sourceparent ||| sourceparent	count=1
module_class	[module_1] node ||| [module_1] [class_2]	count=12
class	are node ||| node	count=1
class	[class] the ||| flattened tree item [class]	count=1
function_arg	[function_1] points ||| [arg_2] [function_1]	count=1
module	thread to the target ||| widgets	count=1
class	tooltip ||| tooltip	count=1
function	run the [function_2] ||| [function_1] [function_2]	count=2
function	register a :class ||| register widget	count=1
function_arg	key for [arg_2] ||| [function_1] [arg_2]	count=3
class	geometry state to ||| text annotation	count=1
function	the off-diagonal elements ||| wrong	count=1
function	move ||| move row	count=1
function_arg	removes item from ||| remove curve item	count=1
class	[class_1] model ||| [class_2] [class_1]	count=3
function_arg	confusion matrix [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] execute the ||| [arg_2] [function_1]	count=2
module	the ||| widgets data	count=1
module_class	[module_1] pending ||| [class_2] [module_1]	count=2
function	for the ||| item for	count=1
arg	delete the start ||| start	count=1
function_arg	row [arg_2] ||| [arg_2] [function_1]	count=2
arg	execute ||| scheme source_node sink_node initial_links	count=1
function	channel [function_2] ||| [function_1] [function_2]	count=2
class	of the arrow ||| arrow	count=4
function	the button for the ||| button	count=1
function	current shown ||| current	count=3
arg	the region reg using ||| reg	count=1
arg	returns data ||| data selected_indices	count=1
function_arg	the progress value ||| progress value	count=1
class	pixmap ||| pixmap widget	count=1
class	the node title the ||| node item	count=1
arg	include_more_link is ||| include_more_link	count=1
class	inside sloppy region ||| bar widget	count=1
class	source and ||| widget	count=1
function_arg	all links [arg_2] ||| [arg_2] [function_1]	count=1
function	geometry (same as rect ||| geometry	count=1
function_arg	[function_1] source ||| [function_1] [arg_2]	count=3
arg	points a list of ||| points	count=1
function	widget [function_2] ||| [function_1] [function_2]	count=4
function_arg	[function_1] in view ||| [arg_2] [function_1]	count=1
function	[function_1] subset ||| [function_1] [function_2]	count=1
function	[function_1] model ||| [function_2] [function_1]	count=2
function	specific learner params ||| params	count=1
function_arg	[function_1] icon ||| [arg_2] [function_1]	count=1
function_arg	[function_1] name ||| [function_1] [arg_2]	count=3
function	to reflect the ||| node processing	count=1
function	[function_1] model for ||| [function_2] [function_1]	count=2
function	[function_1] item in ||| [function_2] [function_1]	count=1
function	visible columns of ||| visible score columns	count=2
module	and return it's index ||| canvas	count=1
function	split the module name ||| split	count=1
function	[function_1] scene ||| [function_2] [function_1]	count=3
function	pause the ||| pause	count=1
function	set the ||| set anchor	count=1
arg	a plot ||| name plot	count=1
function	select all ||| select	count=1
arg	a precomputed [arg_2] ||| [arg_2] [arg_1]	count=2
function	on the update ||| node update	count=1
arg	from -180 to 180 ||| point1 point2	count=1
function	an iterator over ||| workflow entry points	count=1
function	data input ||| data	count=1
class	the link ||| scheme link	count=1
arg	descriptor [arg_2] ||| [arg_2] [arg_1]	count=1
class	source and sink nodes ||| edit widget	count=1
function	modified time as ||| modified time	count=1
class	the editor state ||| links edit	count=1
arg	a module ||| cls module	count=1
class	add rows to selection ||| selection manager	count=1
class	the dock widget ||| collapsible dock widget	count=2
function_arg	rows starting [arg_2] ||| [function_1] sourceparent [arg_2]	count=1
class	link ||| scheme link	count=3
function	dynamic [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] sums ||| [arg_2] [arg_1]	count=1
arg	[arg_1] and input ||| [arg_2] [arg_1]	count=1
class	state source ||| links	count=1
arg	box with controls ||| box	count=2
module	for the ||| canvas	count=1
function	bound the selection ||| bound selection	count=2
class	dock widget ||| dock widget	count=1
arg	output and [arg_2] ||| [arg_1] [arg_2]	count=1
class	an :class ~ ||| scene	count=1
class	heatmap rows which belong ||| heatmap scene	count=1
arg	source_node ||| source_node	count=1
function	interleave elements ||| interleave	count=1
arg	an ||| details	count=1
function	the input ||| input	count=1
module	dendrogram ||| widgets unsupervised	count=2
arg	input channels ||| input	count=1
function	rename was requested ||| on rename action	count=1
arg	description into 'registry' ||| desc	count=1
function	[function_1] width ||| [function_2] [function_1]	count=2
function_arg	[function_1] source where ||| [arg_2] [function_1]	count=2
module	and return ||| canvas document	count=4
function	a default ||| default	count=1
module	the ||| canvas	count=61
function	[function_1] enabled ||| [function_2] [function_1]	count=1
function	width of ||| line width	count=1
class	the toolbox ||| tool box	count=2
class	of the arrow arrow ||| arrow	count=1
class	control [class_2] ||| [class_2] [class_1]	count=1
function	in ||| add selection	count=1
function	get the [function_2] ||| [function_1] [function_2]	count=6
class	order until one fires ||| cn2classifier	count=1
module	with numbers that represent ||| widgets	count=1
function	recalculate its [function_2] ||| [function_2] [function_1]	count=1
function	deleting [function_2] ||| [function_1] [function_2]	count=1
module	the value of :attr ||| utils plot	count=1
class	arrow as ||| scheme arrow	count=1
arg	[arg_1] actions ||| [arg_2] [arg_1]	count=2
class	widget where hover/move ||| widget	count=1
class	is ||| edit widget	count=1
class	the current file ||| owload	count=1
arg	constructing a ||| links_in links_out	count=1
class	loop ||| signal manager	count=1
function	in a uniform ||| uniform linear	count=1
arg	list from a dict ||| saved	count=1
arg	weight background and ||| background weight	count=2
function	domain hints ||| domain role hints	count=1
function	render a sequence ||| render	count=1
function	thumbnail svg string ||| thumbnail	count=1
class	the annotation text ||| text annotation	count=2
arg	item as ||| item	count=1
function	forgets plot transformations zoom ||| clear plot transformations	count=1
module	a ||| widgets data	count=1
function	text geometry used ||| text geometry	count=1
module	string ||| canvas scheme	count=1
function	annotation [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] for node ||| [arg_2] [function_1]	count=2
arg	distribution d ||| cls d axis	count=2
class	page ||| paged menu	count=1
function	[function_1] schemes ||| [function_1] [function_2]	count=4
function_arg	plan [arg_2] ||| [function_1] [arg_2]	count=1
class	editor state source and ||| edit widget	count=1
arg	in scheme ||| scheme	count=1
function_arg	parts [arg_2] ||| [arg_2] [function_1]	count=5
function	[function_1] set ||| [function_2] [function_1]	count=10
class	set ||| dendrogram widget	count=2
arg	as an xml ||| pickle_fallback	count=1
class	updates ||| owplot	count=1
class	instance for ||| widget	count=1
class	the ||| widgets	count=1
arg	variable on the ||| variable	count=1
class	executor and ||| thread executor	count=1
function	a dynamic ||| enable dynamic	count=1
class	generated [class] is ||| owrule [class]	count=1
class	pixmap ||| fade pixmap widget	count=1
function_arg	[function_1] and column ||| [function_1] rect row [arg_2]	count=3
arg	if heatmap is ||| heatmap	count=1
class	the dock (same ||| dock widget	count=1
function	get [function_2] ||| [function_2] [function_1]	count=5
module	and ||| plot	count=1
function_arg	[function_1] start_node (i ||| [arg_2] [function_1]	count=1
function	[function_1] quick help ||| [function_2] [function_1]	count=1
module	thread to the ||| widgets utils	count=1
arg	key [arg_2] ||| [arg_2] [arg_1]	count=1
module	sink nodes ||| canvas	count=1
module	in the widgets ||| widgets	count=1
class	symbol ||| owlegend	count=1
class	display the legend ||| legend	count=1
module	return ||| utils	count=2
function	a [function] ||| [function] link	count=3
class	widget where ||| bar widget	count=1
function_arg	row with actions ||| row actions background	count=1
function	helper function ||| item tool tip helper	count=1
arg	handle receiving ||| values	count=1
arg	item (:class nodeitem) ||| item	count=1
function	the a dynamic ||| enable dynamic	count=1
class	:class ||| canvas scene	count=1
function	render a ||| render	count=1
arg	the number into ||| number suffix capitalize	count=1
module	[module_1] [module_2] a ||| [module_2] [module_1]	count=2
arg	element based on ||| element level indent	count=1
function	list of recently accessed ||| recent	count=1
arg	name of ||| name parent	count=1
module	html with ||| canvas report	count=1
class	linkitem) from the ||| canvas	count=1
function	item in ||| item	count=1
function	[function_1] the dissimilarity ||| [function_1] [function_2]	count=1
function	set ||| set selected items	count=2
function_arg	helper [arg_2] ||| [arg_2] [function_1]	count=4
module	plot owlegend ||| widgets utils plot	count=1
module	to ||| widgets evaluate	count=2
function_arg	row [arg_2] ||| [function_1] actions [arg_2]	count=1
arg	box with ||| box	count=2
function	transform ||| transform for	count=1
class	an ||| tree	count=1
arg	[arg_1] [arg_2] on ||| [arg_1] [arg_2] indent	count=4
arg	thread (a ||| thread	count=1
class	the arrow as ||| arrow annotation	count=2
function_arg	select a [arg_2] ||| [arg_2] [function_1]	count=3
function	shadow ||| shadow pixmap	count=1
function_arg	description from [arg_2] ||| [arg_2] [function_1]	count=1
function	select a ||| select	count=1
function	python tuple literal ||| tuple eval	count=1
class	render tab ||| box tab	count=1
function	default [function_2] ||| [function_2] [function_1]	count=13
class	input ||| scheme node	count=1
arg	:class widgetregistry instance ||| entry_point cached	count=1
function	[function_1] the central ||| [function_2] [function_1]	count=3
function	the control ||| control	count=1
function	font ||| font	count=1
class	tooltip with ||| tooltip	count=1
function	the node color ||| node color	count=3
function	create a copy ||| copy	count=1
class	the entropy of distributions ||| entropy	count=1
arg	source_node [arg_2] ||| [arg_2] [arg_1]	count=3
class	arrow lines start ||| arrow	count=1
module_class	[module_1] shadow ||| [module_1] gui drop [class_2]	count=1
arg	function for constructing a ||| links_in links_out	count=1
module	[module_1] to it ||| [module_1] [module_2]	count=3
function	uniform ||| uniform linear	count=1
function	value ||| combo value	count=1
function_arg	single [function_1] [arg_2] sizes ||| [function_1] [arg_2]	count=3
class	input for a ||| owvenn diagram	count=1
module	items ||| canvas items	count=2
function	applies current ||| map	count=1
function_arg	[function_1] table ||| [function_1] wide [arg_2]	count=1
class	the control point ||| control point rect	count=2
module	entire ||| utils plot	count=2
function_arg	[function_1] data split ||| [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] code [arg_2]	count=1
class	display/edit ||| scheme info edit	count=1
function	action for the tab ||| tab action	count=1
class	interaction ||| interaction	count=1
function_arg	[function_1] color weight ||| [arg_2] [function_1]	count=1
module	and [module] ||| [module]	count=2
class	style the link ||| link item	count=1
module	that belong [module_2] ||| [module_1] [module_2]	count=2
function	clear ||| clear	count=3
module	hides the plot ||| utils plot	count=1
class	is ||| scheme edit widget	count=1
module	that belong ||| utils	count=1
function	blocking ||| blocking	count=1
function	[function_1] possible ||| [function_2] [function_1]	count=1
function_arg	for the [arg_2] ||| [arg_2] [function_1]	count=1
arg	icon ||| icon	count=1
class	shadow ||| shadow	count=4
class	the drop shadow ||| drop shadow widget	count=6
class	of the arrow ||| arrow item	count=2
module	and return ||| canvas canvas	count=1
arg	index start by ||| start	count=1
function	angle between the ||| angle	count=1
module	array with numbers that ||| widgets utils	count=1
function	content of ||| info	count=1
arg	and input (:class ||| input	count=1
function	[function_1] instance for ||| [function_1] [function_2]	count=8
function	parameters as a dictionary ||| parameters	count=1
arg	start [arg_2] ||| [arg_2] [arg_1]	count=7
function	method ||| method	count=2
class	update loop ||| signal manager	count=1
class	a tooltip with the ||| tooltip manager	count=1
arg	return ||| data	count=1
class	is the dock ||| dock	count=1
arg	rows columns ||| rows columns	count=2
arg	the description [arg_2] ||| [arg_2] [arg_1]	count=4
function	items in ||| items	count=1
function	[function_1] processing ||| [function_2] [function_1]	count=1
class	tab only ||| tab bar	count=1
arg	data and [arg_2] ||| [arg_1] [arg_2]	count=1
module	sink nodes channels ||| canvas document	count=1
function	[function_1] has ||| [function_2] [function_1]	count=1
class	the arrow ||| arrow item	count=2
arg	title [arg_2] ||| [arg_2] [arg_1]	count=1
class	widget and scene ||| widget	count=1
function	qaction ||| action	count=3
function	set ||| set current	count=1
arg	output (:class outputsignal) ||| output	count=1
function	tree adapters ||| trees	count=1
function	along the anchor ||| anchor	count=1
arg	of checkable buttons and ||| buttons	count=1
function	depth and update appropriate ||| depth	count=1
function	get the contents ||| get	count=1
function	load a preprocessor ||| load	count=1
function_arg	at [arg_2] ||| [function_1] [arg_2]	count=2
function	get the ||| get	count=4
function	averages stripe ||| averages stripe	count=2
class	[class] in ||| scheme [class]	count=2
module	state ||| document	count=1
function	set a [function_2] ||| [function_2] [function_1]	count=12
function	[function_1] a state ||| [function_1] [function_2]	count=1
class	translation and ||| owplot3d	count=1
module	return absolute ||| canvas	count=1
function	of nodes ||| nodes	count=1
function	[function_1] subset ||| [function_2] [function_1]	count=1
module	return its string representation ||| canvas scheme	count=1
module	and return its string ||| canvas scheme	count=1
function	the scheme scheme from ||| scheme	count=1
function_arg	[function_1] execute ||| [arg_2] [function_1]	count=2
arg	or category ||| cls desc	count=1
class	cell ||| heatmap widget	count=1
arg	policy and ||| policy	count=1
function_arg	progress [arg_2] ||| [function_1] [arg_2]	count=1
arg	name of an obj ||| obj name	count=1
function	returns next 'possible' attribute ||| get next	count=1
arg	with title ||| title	count=2
module	[module_1] number of ||| [module_1] [module_2]	count=2
function	message ||| message	count=4
class	progress ||| bar mixin	count=1
function	set heading ||| set	count=1
class	graph ||| owplot	count=1
module	graph ||| widgets utils	count=1
function	(class nodeitem) neighbor ||| neighbor	count=1
function	[function_1] depth ||| [function_2] [function_1]	count=5
function	items in the completer ||| completer	count=1
module	the current file ||| widgets	count=1
function	instance for ||| widget instance	count=2
module_class	[module_1] page to ||| [module_1] [class_2]	count=2
function	[function] fixed ||| [function] fixed	count=1
module	entire graph ||| utils	count=1
function	show an message ||| message	count=1
function	an message box asking ||| message	count=1
module	the plot ||| widgets utils plot	count=3
module_class	[module_1] page ||| [module_1] [class_2]	count=3
function	maps point, ||| map to graph	count=1
function	set channel ||| set channel	count=1
class	from the node ||| node	count=1
function	[function_1] new widget ||| [function_2] [function_1]	count=1
function_arg	tab button [arg_2] ||| [function_1] [arg_2]	count=2
function	the bounding box ||| rect	count=1
function	finished ||| finish	count=1
function	a current ||| current	count=1
module_class	[module_1] new ||| [module_1] [class_2]	count=4
arg	of the node ||| node	count=1
module	disjoint ||| widgets visualize	count=1
arg	[arg_1] into ||| [arg_2] [arg_1]	count=4
function	scene coordinates using axes ||| for axes	count=1
module_class	[module_1] signal ||| [module_1] visualize [class_2]	count=3
module	reset ||| widgets	count=1
function	[function_1] default text ||| [function_2] [function_1]	count=1
arg	string in ||| string	count=1
class	the drop [class_2] ||| [class_1] [class_2]	count=4
function	running i e has ||| running	count=1
arg	have [arg] shapes and ||| x_data y_data [arg]	count=1
arg	in indices ||| indices	count=1
module	:attr selection_behavior ||| widgets utils plot	count=1
function	data ||| data	count=4
function	color theme depending on ||| theme	count=1
function	subset of [function_2] ||| [function_2] [function_1]	count=4
function	set a subset ||| set subset	count=3
function	[function_1] pixmap if ||| [function_2] [function_1]	count=1
module	value ||| utils	count=1
function	for help ||| help action	count=1
class	apply [class] ||| [class]	count=2
function	rows starting with the ||| rows	count=1
function	[function_1] visible inside ||| [function_2] [function_1]	count=1
function	create the qaction ||| create action	count=2
module	points in ||| widgets utils	count=1
function_arg	reshape a [arg_2] ||| [arg_2] [function_1]	count=3
module	future ||| widgets utils	count=1
arg	name the name should ||| name	count=1
function	the widget ||| widget	count=4
function	has [function_2] ||| [function_1] processing state [function_2]	count=2
class	[class_1] grid ||| [class_1] [class_2]	count=6
function	the channel [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] for regression ||| [function_1] [function_2]	count=4
function	a rectangle using current ||| rectangle	count=1
arg	[arg_1] group_key ||| [arg_1] [arg_2]	count=5
arg	item view ||| view	count=2
arg	[arg_1] the scheme ||| [arg_2] [arg_1]	count=10
class	to the scheme ||| scheme	count=3
class	remove ||| edit widget	count=1
class	rows to selection ||| heatmap selection manager	count=1
module	the widget ||| widgets evaluate	count=1
function	palette ||| palette	count=3
function_arg	[function_1] the viewport ||| [arg_2] [function_1]	count=4
function	[function_1] from ||| [function_2] [function_1]	count=1
function	default [function_2] ||| [function_1] [function_2]	count=13
function	develop a ||| initialise	count=1
class	get ||| tree adapter	count=1
function	[function_1] or ||| [function_2] [function_1]	count=2
function	[function] processing ||| [function] processing	count=1
arg	indices ||| right indices string_cols	count=1
function	for the features ||| features	count=1
class	[class_1] [class_2] the ||| [class_1] [class_2]	count=6
function	[function] inside ||| select [function]	count=1
function	set the number ||| set column count	count=1
function	standard icon ||| standard icon	count=2
class	the editor ||| edit	count=1
function	instance for the corresponding ||| widget for	count=1
class	set ||| collapsible dock widget	count=1
class	the item draws ||| node anchor item	count=1
module	creates a ||| widgets utils plot	count=1
function	load a ||| load	count=1
module	drop ||| canvas gui	count=5
arg	[arg_1] input ||| [arg_1] [arg_2]	count=1
module	adds it to the ||| widgets utils	count=2
module_class	list of [class_2] ||| [class_2] [module_1]	count=2
function_arg	widgets expanded [arg_2] ||| [function_1] [arg_2]	count=1
class	sink nodes ||| links edit	count=1
function	[function] in ||| [function]	count=3
class	the editor ||| links edit widget	count=1
module	a file and return ||| canvas preview	count=1
function	changed ||| changed	count=4
function	the visible columns of ||| visible score columns	count=1
arg	with color and alignment ||| alignment color	count=1
class	nodes channels ||| links edit	count=1
module	adds it to ||| widgets utils plot	count=1
function	selected ||| selected	count=3
module	points in ||| plot	count=1
class	channel names text item ||| link item	count=1
arg	name should ||| name	count=1
function	select ||| select row	count=1
function	metrics depending ||| metrics	count=1
function	the max depth ||| max depth	count=2
arg	in link ||| link	count=1
function_arg	the channels [arg_2] ||| [function_1] [arg_2]	count=1
arg	contents of an index ||| index	count=1
function_arg	insert [arg_2] ||| [arg_2] [function_1]	count=4
function	update the visibility ||| update	count=1
function	remove [function_2] ||| [function_1] [function_2]	count=4
function	over widget ||| iter widget	count=1
module	the ||| widgets data utils	count=2
class	rules ||| rule	count=3
class	of the matrix ||| owconfusion matrix	count=2
function	set the action ||| set action	count=4
function_arg	[function_1] direction is ||| [arg_2] [function_1]	count=1
arg	source ||| source	count=3
arg	description [arg_2] ||| [arg_2] [arg_1]	count=4
arg	the items selection state ||| item state	count=1
function	columns ||| columns	count=2
class	the buttons to fit ||| dynamic resize tool	count=1
module	select ||| widgets unsupervised	count=1
function	confusion matrix ||| confusion matrix	count=1
module_class	[module_1] [class_2] ||| [module_1] drop [class_2]	count=4
function	[function_1] at ||| [function_1] [function_2]	count=3
arg	of a combo box ||| combo	count=1
module	arrow ||| canvas canvas items	count=3
module	reset ||| evaluate	count=1
module	return the ||| data utils	count=1
class	grid ||| tool grid	count=5
function_arg	[function_1] description desc ||| [function_1] category [arg_2]	count=2
module_class	[module_1] signal ||| [module_1] [class_2]	count=3
function	the qaction [function_2] ||| [function_2] [function_1]	count=1
arg	instance obj ||| obj	count=1
function_arg	[function_1] item view ||| [arg_2] [function_1]	count=3
class	scheme is displayed ||| scheme	count=1
function	of recently accessed schemes ||| recent scheme	count=1
arg	source (instance ||| source	count=1
function	remove the widget ||| remove item	count=1
module	and ||| canvas document	count=2
class	the body ||| node body	count=1
function_arg	[function_1] html to ||| [function_1] [arg_2]	count=1
function_arg	update the [arg_2] ||| [function_1] processing state [arg_2]	count=3
module	points ||| plot	count=1
function	set a runtime ||| set runtime	count=3
function	size ||| set size	count=1
function	this ||| this	count=1
module	and return an ||| canvas document	count=2
module	items that ||| utils plot	count=1
function	helper function for ||| tip helper	count=1
module	return an ||| canvas registry	count=1
class	from the node ||| graph node	count=1
function	constructor and calculate ||| calculate	count=1
class	grid lines ||| plot grid	count=2
function	the hierarchical clustering using ||| dist matrix clustering	count=1
function	[function_1] default rule ||| [function_2] [function_1]	count=1
arg	viewport ||| xmargin ymargin	count=1
function	item animation [function_2] ||| [function_1] [function_2]	count=1
arg	scheme format ||| scheme	count=1
arg	for adding a list ||| force_replace	count=1
function	rotation ||| rotation	count=1
class	the entire graph ||| owplot	count=1
arg	sourceparent ||| sourceparent	count=2
function_arg	scheme to [arg_2] ||| [arg_2] [function_1]	count=3
module_class	list of [class_2] ||| [module_1] [class_2]	count=2
function	[function_1] directory ||| [function_1] [function_2]	count=3
function_arg	single [function_1] [arg_2] and sizes ||| [function_1] [arg_2]	count=3
arg	the child in the ||| child	count=1
function	valid ||| valid	count=2
module	points ||| utils	count=1
class	arrow lines ||| arrow annotation	count=1
function	'single' flag ||| conflicting single	count=1
module_class	[module_1] widget ||| [module_1] [class_2]	count=4
function	mock owwidget ||| mock error owwidget	count=2
arg	number of folds ||| folds	count=1
function	the central ||| central	count=2
arg	insert the number ||| number suffix	count=2
function	common plot settings ||| plot settings box	count=2
function	show the message text ||| text	count=1
class	insert ||| widget registry	count=2
module	select ||| widgets data	count=1
function	a row ||| row	count=1
function	[function_1] gradient ||| [function_2] [function_1]	count=4
function	to the [function_2] ||| cursor [function_1] [function_2]	count=3
class	base point ||| annotation	count=1
class	the widget description ||| widget registry	count=1
function	create a qt css ||| create css	count=1
function_arg	[function_1] from data ||| [arg_2] [function_1]	count=2
function	the node color for ||| node color cls	count=1
function	qwidget instance for ||| widget for	count=2
module	the current sloppy ||| canvas document	count=2
function	icon [function_2] ||| [function_1] [function_2]	count=2
class	the cached shadow ||| drop shadow frame	count=1
arg	[arg_1] at index ||| [arg_2] widget [arg_1]	count=2
function_arg	data set [arg_2] ||| [function_1] [arg_2]	count=2
function	of the averages ||| averages	count=1
function_arg	wildcard filtering [arg_2] ||| [function_1] [arg_2]	count=1
function	settings ||| widget settings	count=1
function	[function_1] widget changed ||| [function_1] [function_2]	count=1
function	notify the ||| notify	count=1
module	symbol ||| utils plot	count=1
function	:class qtextcharformat with updated ||| char format	count=1
class	if zooming in otherwise ||| view	count=1
class	[class_1] base ||| [class_2] [class_1]	count=5
class	set ||| link action	count=1
function	[function_1] pixmap ||| [function_2] [function_1]	count=1
function_arg	[function_1] tree ||| [function_1] [arg_2]	count=1
function	a qrectf ||| rect	count=1
arg	linkage using a precomputed ||| linkage	count=1
arg	data table into ||| table	count=1
function	:class qtextcharformat with ||| update char format	count=1
class	source and sink ||| links edit	count=1
function	to [function_2] ||| [function_1] [function_2]	count=3
class	the dock widget ||| dock widget	count=1
class	an action we need ||| tool tree	count=1
class	size grip is ||| size grip	count=1
function	a node meta ||| node meta	count=2
function	trim trailing ||| trim trailing	count=1
module	the current :attr selection_behavior ||| utils plot	count=1
module	fix ||| canvas registry	count=1
function	enable/disable the dynamic link ||| set dynamic	count=1
function	[function_1] current shown ||| [function_2] [function_1]	count=1
arg	a qobject instance obj ||| obj name	count=1
function_arg	[function_1] source where ||| [function_1] [arg_2]	count=2
arg	filename ||| filename	count=2
function	set heading as ||| set	count=1
arg	category ||| category	count=2
class	[class_1] fit inside ||| [class_2] [class_1]	count=2
module	points in ||| widgets	count=1
function_arg	set [arg_2] ||| [function_1] [arg_2]	count=1
module	[module_1] return an ||| [module_2] [module_1]	count=2
arg	scheme ||| scheme error_handler widget_registry	count=1
function_arg	matrix args ||| matrix res index	count=1
arg	transforms the value from ||| value	count=1
function	has a current ||| current	count=1
class	qlistview ||| variables list item view	count=1
class	for height ||| widget	count=1
class	dock (same as ||| dock widget	count=1
class	move ||| item model	count=1
module	the entire ||| widgets utils plot	count=1
function_arg	cell at [arg_2] ||| [arg_2] [function_1]	count=1
function	the 'single' flag ||| conflicting single	count=1
function	stats for ||| stats	count=1
function_arg	the geometry [arg_2] ||| [function_1] [arg_2]	count=1
function	create a ||| create	count=6
module_class	[module_1] nodeitem) use ||| [module_1] [class_2]	count=2
function	the tab ||| tab	count=2
function_arg	button [arg_2] ||| [function_1] [arg_2]	count=4
module_class	[module_1] scene ||| [module_1] [class_2]	count=3
arg	given in indices ||| left right indices string_cols	count=1
arg	x array so it ||| x	count=1
module	selection_behavior ||| widgets utils plot	count=2
class	for the selected widget ||| widget	count=1
function	parts ||| parts	count=1
class	the view ||| view	count=1
function	[function_1] selected ||| [function_2] [function_1]	count=1
function	position in scene ||| scene pos	count=3
class	input for a list ||| owvenn diagram	count=1
function	title of ||| title	count=1
arg	[arg_1] from sourceparent ||| [arg_2] [arg_1]	count=2
function	[function_1] a grid ||| [function_1] [function_2]	count=2
module	a dictionary ||| widgets	count=1
arg	[arg] is upstream ||| [arg]	count=1
function	information entropy ||| entropy	count=1
function	a message ||| message	count=1
module_class	return the [class_2] ||| [module_1] gui [class_2]	count=1
module	the current ||| model	count=1
module	selects all points ||| widgets utils	count=1
arg	link (:class schemelink) be ||| link	count=1
function	a triangle using current ||| draw triangle	count=1
module	current focused :class ||| document	count=1
function	description ||| description	count=3
function_arg	removes item ||| remove curve item	count=1
function	indices ||| indices	count=2
function	a valid ||| has valid	count=1
arg	in indices ||| right indices	count=1
arg	spearman's and absolute ||| absolute	count=1
function	[function_1] settings ||| [function_2] [function_1]	count=5
function	activate ||| activate	count=1
arg	a row in ||| row	count=1
function	for ||| for	count=6
function_arg	[function_1] data and ||| [function_1] [arg_2]	count=2
arg	over the axis ||| axis	count=1
class	translation ||| owplot3d	count=1
function	enabled state ||| enabled	count=1
function	set page ||| set	count=1
class	draw ||| owbox plot	count=1
class	widget action (from ||| widget tool grid	count=1
arg	key to ||| key	count=1
function	learner params of a ||| params	count=1
function	sync the widget ||| sync	count=1
arg	x array so ||| cls x	count=1
arg	if include_more_link is ||| include_more_link	count=1
function	from a ||| from module	count=1
module	the entire graph ||| widgets utils	count=1
arg	[arg_1] we calculate ||| [arg_2] [arg_1]	count=1
arg	the given size ||| size	count=1
function	source model for ||| source model	count=1
arg	instance cluster ||| cluster level height condition	count=1
arg	the contents so child ||| child	count=1
function	[function_1] a qaction ||| [function_2] [function_1]	count=1
class	generated [class] is used ||| owrule [class]	count=1
function	paths for ||| paths from description	count=1
module	return an :obj ||| canvas report	count=1
function_arg	[function_1] index ||| [function_1] [arg_2]	count=9
class	:class widgetsscheme instance ||| widget manager	count=1
module	to ||| widgets model	count=2
function	a brief description of ||| data brief	count=1
arg	of distribution [arg_2] ||| [arg_2] [arg_1]	count=2
module	value of :attr ||| widgets utils	count=1
function	[function_1] nodeitem ||| [function_1] [function_2]	count=1
arg	into category ||| category	count=1
class	(:class qpainterpath) ||| object	count=1
function_arg	[function_1] adding ||| [arg_2] [function_1]	count=2
function	[function_1] stripe ||| [function_2] [function_1]	count=5
function	return the [function] ||| get widget name [function]	count=1
class	of the arrow as ||| arrow	count=1
module	:attr selection_behavior ||| utils	count=1
function_arg	icon [arg_2] ||| [arg_2] [function_1]	count=1
function	:attr selection_behavior ||| add selection	count=1
function_arg	tab at index ||| tab action index	count=1
module	reset the ||| widgets evaluate	count=1
function	[function_1] graph ||| [function_2] [function_1]	count=1
class	between ||| links edit widget	count=1
class	state source ||| edit	count=1
class	this item ||| node anchor item	count=1
class	state ||| links edit widget	count=1
module	all ||| utils plot	count=2
class	the tool [class_2] ||| [class_2] [class_1]	count=3
function	a node ||| node	count=1
module	value of :attr theme_name ||| plot	count=1
function	cancel the the ||| cancel	count=1
function	bound the [function_2] ||| [function_2] [function_1]	count=1
class	the widget ||| edit widget	count=1
module	of the plot ||| widgets utils plot	count=1
function	torgerson ||| torgerson	count=1
class	vertex attribute bindings opengl ||| vertex	count=1
module	return an existing link ||| canvas	count=1
arg	in scheme connected ||| scheme	count=1
module	source and sink nodes ||| canvas	count=1
function_arg	parts for [arg_2] ||| [arg_2] [function_1]	count=5
function	triangle using current transform ||| triangle	count=1
function	save their settings ||| settings	count=1
module	state source ||| canvas document	count=1
function	tool ||| tool	count=3
function	array of items ||| set items	count=1
arg	data table into a ||| table varlist	count=1
arg	size policy and the ||| policy	count=1
module	hides the plot ||| plot	count=1
function	[function_1] plot ||| [function_1] [function_2]	count=2
arg	orange scheme ||| scheme	count=1
module	current focused ||| document	count=1
class	text [class_2] ||| [class_1] [class_2]	count=2
module	of :attr theme_name ||| utils plot	count=1
arg	the resulting data table ||| data	count=1
class	font ||| link item	count=1
function	[function_1] ratio ||| [function_1] [function_2]	count=1
function	each leaf ||| samples in leaves	count=2
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=1149
function_arg	[function_1] for index ||| [arg_2] [function_1]	count=1
function	a helper function for ||| helper	count=1
class	set ||| splitter resizer	count=1
function	update the node ||| node	count=2
class	contained in the stack ||| menu stack widget	count=1
class	buttons to [class_2] ||| [class_2] [class_1]	count=1
arg	child in the workflow ||| child	count=1
arg	data table into ||| table varlist idvarlist	count=1
function	ratio statistic for ||| ratio statistic	count=2
arg	buttons ||| buttons	count=1
module	sets the plot ||| plot	count=1
function	wide ||| wide	count=1
function_arg	dynamic [arg_2] ||| [function_1] [arg_2]	count=4
function	[function_1] schemes ||| [function_2] [function_1]	count=4
function	and fits the ||| and fit	count=1
function	notify the ||| notify changed	count=1
arg	obj into a ||| obj	count=1
class	nodes channels ||| edit widget	count=1
function_arg	[function_1] :class _signal ||| [arg_2] [function_1]	count=1
class	has ||| widget manager	count=1
function	reflect ||| processing	count=1
module	[module_1] modules ||| [module_1] [module_2]	count=2
function	start a control point ||| start control point	count=1
class	editor ||| edit widget	count=1
function	value of ||| update	count=1
class	rows to selection ||| selection manager	count=1
function_arg	[function_1] [arg_2] ||| [function_1] view [arg_2]	count=2
function	rectangle using current transform ||| rectangle	count=1
arg	model or a ||| model	count=1
module	the table ||| widgets data	count=2
module_class	return the ||| canvas scheme widgets	count=1
class	instance [class] exception was ||| [class]	count=1
function	generate a [function_2] ||| [function_1] [function_2]	count=5
arg	data table to ||| data	count=1
function	[function_1] central ||| [function_1] [function_2]	count=1
function	load a preprocessor list ||| load	count=1
function	updated ||| update	count=2
class	nodes ||| links	count=1
function	stats ||| stats	count=1
module	control ||| canvas items	count=1
module_class	of [class_2] ||| [class_2] [module_1]	count=1
function	common point properties ||| point properties box	count=2
class	the scheme ||| scheme	count=7
function	set [function_2] ||| [function_1] [function_2]	count=19
module	channels ||| canvas document	count=2
class	item draws it ||| anchor item	count=1
class	in the random ||| random	count=1
class	page ||| page	count=1
class	the grid ||| tool grid	count=5
class	all ||| owplot	count=1
function	default orange widgets entry ||| default entry	count=1
module	data to plot ||| widgets utils plot	count=2
arg	object in ||| order type	count=1
arg	have [arg] shapes ||| x_data y_data [arg]	count=1
module	the ||| widgets model	count=2
function	update the [function_2] ||| [function_1] [function_2]	count=20
class	finish the interaction ||| user interaction	count=1
function	[function_1] channel names ||| [function_1] [function_2]	count=1
arg	color and ||| color	count=1
class	arrow ||| scheme arrow	count=4
function	[function_1] time as ||| [function_1] [function_2]	count=4
arg	source_node to [arg_2] ||| [arg_1] [arg_2]	count=4
arg	box ||| widget box	count=2
module	selects all points in ||| widgets utils	count=1
function	all ||| add selection	count=1
function	processing state ||| processing state	count=2
function	widgets save their settings ||| settings	count=1
module	points ||| utils plot	count=2
module	state source and ||| document	count=1
function	model for ||| model	count=2
function	needs to recalculate its ||| recalculate	count=1
class	if zooming ||| zoomable graphics view	count=1
function	initialize the ||| init	count=2
arg	futures computation if timeout ||| timeout	count=1
module	:attr ||| widgets utils	count=2
module	a dictionary ||| widgets data	count=1
function	compute the entropy ||| entropy	count=1
class	instance of :obj orange ||| instance	count=1
function	[function_1] statistic ||| [function_2] [function_1]	count=2
arg	to value ||| value	count=1
arg	qt model or a ||| model	count=1
class	[class_1] grid ||| [class_2] [class_1]	count=6
module	and sink ||| canvas	count=1
function_arg	point [arg_2] ||| [function_1] [arg_2]	count=1
function	points toward the end ||| end pos	count=1
class	drawing the grid ||| plot grid	count=1
arg	can have [arg] shapes and ||| x_data y_data [arg]	count=1
class	node ||| node body item	count=1
class	state source and ||| links edit	count=1
class	the :class ~ ||| edit	count=1
function	[function_1] :class anchorpoint ||| [function_1] [function_2]	count=3
function	widget ||| widget	count=13
arg	of data table to ||| data	count=1
function	a toolbar ||| toolbar	count=1
module	item to the ||| canvas	count=1
function_arg	[function_1] the node ||| [function_1] instance [arg_2]	count=1
function	plan ||| plan	count=1
function	basic [function_2] ||| [function_2] [function_1]	count=4
function	current :attr ||| add selection	count=1
function_arg	printed contents [arg_2] ||| [function_1] [arg_2]	count=2
module	of the ||| canvas canvas items	count=1
module	data to scene coordinates ||| widgets	count=1
module	from plot to ||| widgets utils plot	count=2
module	points in the ||| utils	count=1
class	set ||| tool dock	count=1
class	set ||| tool box	count=2
function	[function_1] column ||| [function_1] [function_2]	count=2
arg	group_key ||| group_key	count=1
function_arg	annotation instance [arg_2] ||| [arg_2] [function_1]	count=1
class	editor state source ||| edit widget	count=1
function	[function_1] factor ||| [function_2] [function_1]	count=1
module	the value of :attr ||| widgets utils plot	count=1
module	scheme ||| canvas application	count=1
function	re-emit the ||| on triggered	count=1
function	parameters of the learner ||| get learner parameters	count=1
class	creates an ||| owplot gui	count=2
function	all links for ||| node links	count=1
function	the tab button icon ||| tab icon	count=1
function_arg	the entropy [arg_2] ||| [function_1] cls d [arg_2]	count=1
module	entire ||| plot	count=1
class	editor state ||| links	count=1
class	buttons to fit inside ||| tool bar	count=1
class	the arrow as a ||| arrow	count=1
arg	the base_color ||| base_color	count=1
function_arg	plan [arg_2] ||| [function_1] scheme links [arg_2]	count=3
arg	and input channels ||| input	count=1
arg	does the ||| distribution	count=1
arg	sourcerow from sourceparent ||| sourceparent sourcerow	count=3
arg	page [arg_2] ||| [arg_2] [arg_1]	count=2
function	is the size ||| size	count=1
function	[function_1] off-diagonal ||| [function_2] [function_1]	count=1
module	return the ||| canvas application	count=3
class	scene ||| scene	count=3
module	the value of :attr ||| plot	count=1
arg	execute the editlinksdialog ||| scheme source_node sink_node initial_links	count=1
module	that ||| utils	count=1
function_arg	[function_1] [arg_2] and sizes ||| [function_1] data [arg_2] label_data	count=3
class	current widget ||| widget	count=1
function	initialize the tracked ||| initialize widget	count=1
function	a new ||| add	count=1
arg	for adding ||| force_replace	count=1
class	reset the widget ||| owconfusion	count=1
class	the ||| model	count=1
class	manager ||| manager	count=1
function	fix the [function_2] ||| [function_1] [function_2]	count=3
class	connect ||| new link action	count=1
class	body ||| body	count=1
function	hash value that can ||| hash	count=1
arg	absolute ||| absolute	count=1
module	the update loop ||| canvas scheme	count=1
module	source ||| widgets data	count=1
function_arg	of page ||| of page	count=1
function	line width ||| line width	count=2
arg	color and [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] [function_2] ||| [function_1] blocking state [function_2]	count=1
function	the value of ||| combo value	count=1
function	the widget description ||| widget desc to std item	count=1
class	owwidget ||| widget manager	count=5
arg	its ||| title icon tooltip	count=1
class	edit the links ||| links edit widget	count=2
module	:attr ||| plot	count=2
function_arg	unique [arg_2] ||| [arg_2] [function_1]	count=1
class	rows to selection ||| heatmap selection	count=1
arg	updated color [arg_2] ||| [arg_2] [arg_1]	count=5
module	current :attr ||| widgets utils plot	count=1
class	following an unordered set ||| cn2unordered classifier	count=1
function	max depth and update ||| max depth	count=1
function	runtime [function_2] ||| [function_2] [function_1]	count=2
class	of the widget where ||| widget	count=1
class	dictionary ||| base	count=1
function	visible [function_2] ||| [function_2] [function_1]	count=3
module	return all source ||| canvas	count=1
function	[function_1] of button/action ||| [function_2] [function_1]	count=4
class	source model ||| item model	count=2
function	a qt css linear ||| css	count=1
function	tool [function_2] ||| [function_2] [function_1]	count=4
function	directory where ||| dir	count=1
function	[function_1] at ||| [function_2] [function_1]	count=3
function_arg	hierarchical clustering [arg_2] ||| [function_1] matrix [arg_2]	count=1
class	the registry ||| quick category toolbar	count=1
class	the update ||| signal	count=1
function	line (qlinef in object ||| line	count=1
class	nodes ||| links edit	count=1
arg	of data table ||| data	count=1
function	update all the ||| update anchored	count=1
module	to the document ||| canvas document	count=6
function	set enabled ||| set enabled	count=1
arg	of an index (:class ||| index	count=1
function_arg	[function_1] [arg_2] ||| [function_1] actions [arg_2]	count=3
class	the property ||| abstract bound property	count=1
function	start position ||| start pos	count=2
function	to interpret the data ||| features	count=1
arg	node ||| node message	count=1
function	[function_1] state ||| [function_1] [function_2]	count=2
function	[function_1] point ||| [function_1] [function_2]	count=10
arg	the action at position ||| position	count=1
module_class	return the [class_2] ||| [module_1] [class_2]	count=55
arg	plot to ||| plot	count=1
function	angle ||| angle	count=1
module	editor state source ||| canvas document	count=1
function	a qwidget [function_2] ||| [function_1] [function_2]	count=2
function	path (:class qpainterpath) ||| path	count=1
module	return the object referenced ||| canvas	count=1
class	arrow is ||| arrow	count=1
arg	content ||| header_rows header_columns	count=1
module	find and [module_2] ||| [module_1] [module_2]	count=4
function	into a wide format ||| wide	count=1
function_arg	[function_1] data table ||| [function_1] wide [arg_2]	count=1
function	an instance of ||| scheme	count=1
class	set ||| new link action	count=1
arg	[arg_1] sourceparent ||| [arg_2] [arg_1]	count=6
function	depth to the max ||| max	count=1
module_class	[module_1] arrow brush ||| [module_1] [class_2]	count=2
function	compress a ||| compress	count=1
function	package name and module ||| module	count=1
function	[function_1] tip if ||| [function_2] [function_1]	count=3
function_arg	[function_1] to filename ||| [function_1] [arg_2]	count=1
function	helper function ||| helper	count=1
class	[class_1] scene ||| [class_2] [class_1]	count=6
function_arg	button/action [arg_2] ||| [arg_2] [function_1]	count=1
module	the editor ||| document	count=1
class	matrix ||| owconfusion matrix	count=2
function	html formated label ||| label	count=1
class	widget action ||| widget tool	count=1
function	[function_1] anchor ||| [function_2] [function_1]	count=1
arg	and execute the editlinksdialog ||| scheme source_node sink_node initial_links	count=1
arg	sums to 1 0 ||| out	count=1
function_arg	[function_1] a precomputed ||| [function_1] matrix [arg_2]	count=2
function_arg	helper function [arg_2] ||| [function_1] [arg_2]	count=1
function	the control is ||| is control active	count=1
class	set ||| graphics icon item	count=3
class	a ||| scheme edit widget	count=3
class	nodes ||| edit	count=1
class	tooltip ||| tooltip manager	count=2
class	list ||| list	count=1
arg	return values [arg_2] ||| [arg_2] [arg_1]	count=1
arg	[arg_1] name and ||| [arg_2] [arg_1]	count=2
module	return its string ||| canvas	count=1
class	if zooming ||| graphics view	count=1
class	of the arrow ||| scheme arrow	count=2
function_arg	to source (instance ||| to source	count=1
function_arg	[function_1] [arg_2] ||| [function_1] name [arg_2]	count=4
arg	an xml ||| pickle_fallback	count=1
arg	with rootindex as the ||| rootindex	count=1
module	source ||| canvas document	count=2
module	and return ||| canvas canvas items	count=2
arg	data ||| data	count=12
class	file ||| owload	count=1
function_arg	[function_1] a qstyle ||| [arg_2] [function_1]	count=4
arg	a a stream ||| stream pretty	count=1
class	tree a ||| tree	count=1
function_arg	single [function_1] [arg_2] sizes ||| main [function_1] data [arg_2] label_data	count=1
class	coordinates ||| point	count=1
class	set ||| link item	count=1
function	[function_1] document modified ||| [function_1] [function_2]	count=1
class	editor state ||| edit	count=1
arg	[arg_1] [arg_2] on ||| [arg_1] [arg_2]	count=4
arg	link if the channel ||| link	count=1
class	instance of :obj ||| instance	count=1
function_arg	[function_1] node ||| [function_1] [arg_2]	count=4
module	data to [module_2] ||| [module_1] [module_2]	count=8
arg	values in array x ||| x	count=1
function	action for ||| action	count=1
class	editor ||| links edit widget	count=1
module	return the ||| widgets utils	count=1
function	time as a tuple ||| time	count=1
function	layout ||| linear layout	count=1
arg	return [arg] ||| data [arg]	count=1
module_class	[module_1] shadow's ||| [module_1] [class_2]	count=1
function	qwidget [function_2] ||| [function_2] [function_1]	count=2
function_arg	rows [arg_2] ||| [arg_2] [function_1]	count=1
arg	description ||| description	count=1
function_arg	[function_1] [arg_2] ||| [function_1] scene [arg_2]	count=1
module_class	[module_1] :class ||| [module_1] [class_2]	count=2
function_arg	[function_1] link ||| [function_1] [arg_2]	count=6
module	and return its ||| canvas	count=2
module_class	return [class_2] ||| [module_1] [class_2]	count=8
function_arg	[function_1] position ||| [function_1] [arg_2]	count=2
function	recalculate its offset ||| recalculate offset	count=2
function_arg	[function_1] obj ||| [arg_2] [function_1]	count=3
function	[function_1] ratio statistic ||| [function_2] [function_1]	count=1
module	create ||| canvas gui	count=1
function_arg	[function_1] indexed ||| [function_1] label i [arg_2]	count=4
function_arg	for [arg_2] ||| [function_1] instance [arg_2]	count=1
function	plot ||| plot	count=3
function	extra columns ||| reduced extra	count=1
module	all points ||| utils plot	count=1
function_arg	[function_1] qstyle ||| [function_1] [arg_2]	count=4
module	and adds it to ||| widgets utils plot	count=1
function	[function_1] columns of ||| [function_1] [function_2]	count=3
function	currently highlighted ||| hover	count=1
function	a qaction [function_2] ||| [function_1] [function_2]	count=2
function_arg	schedule a [arg_2] ||| [function_1] [arg_2]	count=1
function	nodeitem instance from a ||| from	count=1
class	for the arrow ||| scheme arrow	count=1
function	[function_1] a node ||| [function_2] [function_1]	count=3
arg	given in indices ||| right indices string_cols	count=1
function	likelihood ratio [function_2] ||| [function_1] [function_2]	count=4
function	to a ||| to	count=2
module	the entire ||| utils plot	count=1
function	console using pythonw exe ||| fix win pythonw std stream	count=1
function	is the [function_2] ||| [function_1] [function_2]	count=1
module	source and sink nodes ||| canvas document	count=1
function	learner params of ||| params	count=1
function	of columns in ||| columns	count=1
function	[function_1] a node ||| [function_1] [function_2]	count=3
module	input signal if the ||| widgets	count=1
module	current :attr selection_behavior ||| widgets	count=1
function	css linear [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] scheme ||| [function_1] etree [arg_2]	count=1
function	[function] inside volume ||| [function]	count=1
function	hierarchical clustering ||| dist matrix clustering	count=1
arg	given [arg] set returns ||| [arg]	count=1
function	scheme to a a ||| to	count=1
function	[function_1] sink ||| [function_1] [function_2]	count=1
module	value ||| utils plot	count=2
module	items position ||| items	count=1
arg	description desc ||| desc	count=1
function_arg	icon for [arg_2] ||| [arg_2] [function_1]	count=1
module	a [module] ||| canvas [module]	count=1
module	and sink nodes channels ||| canvas document	count=1
function	[function_1] :class anchorpoint ||| [function_2] [function_1]	count=3
arg	[arg_1] group_var ||| [arg_2] [arg_1]	count=2
function	set the ||| set	count=106
module	source and sink ||| canvas document	count=1
arg	qt item view ||| view	count=1
arg	html ||| html	count=1
function	metrics ||| metrics	count=1
arg	entry for mod_path ||| mod_path	count=1
function_arg	[function_1] points a ||| [function_1] [arg_2]	count=1
function	button for ||| button	count=2
module	the widget ||| widgets	count=3
class	the link ||| link	count=2
module	find and return ||| canvas document	count=2
function_arg	model for [arg_2] ||| [function_1] [arg_2]	count=1
arg	sourcerow ||| sourcerow	count=2
module	return an ||| canvas scheme	count=2
function	[function_1] the title ||| [function_2] [function_1]	count=1
function	axes ||| axes	count=1
function	maps point, which ||| map to	count=1
module	state source ||| document	count=1
function	end ||| end pos	count=1
module_class	[module_1] clear ||| [module_1] [class_2]	count=12
function	node_item's (class nodeitem) neighbor ||| neighbor	count=1
module	return return the application ||| canvas canvas items	count=1
class	the text ||| scheme text	count=2
function	channel ||| channel	count=3
function	columns of the ||| columns	count=1
function	name for ||| name	count=1
class	the owwidget ||| widget manager	count=2
function	visible inside ||| visible	count=1
class	to display/edit ||| scheme info edit	count=1
function	compute basic stats ||| compute basic stats	count=3
function	[function_1] control ||| [function_2] [function_1]	count=2
module	controls ||| widgets evaluate	count=2
module	widgets for the current ||| canvas document	count=1
arg	in arr along given ||| dtype	count=1
function	extra columns that ||| compute reduced extra	count=1
function	current widget ||| on current	count=1
class	selected widget ||| widget	count=2
arg	[arg_1] input (:class ||| [arg_2] [arg_1]	count=1
class	stop ||| signal manager	count=1
function	the current shown ||| current	count=2
module	theme_name ||| widgets	count=1
module_class	if the [class_2] ||| [module_1] [class_2]	count=1
arg	color ||| color	count=3
function	item with the same ||| add	count=1
function_arg	set the [arg_2] ||| [arg_2] [function_1]	count=2
class	a tab button ||| tab bar	count=1
class	discretization of the ||| discretize	count=1
function	value of ||| value	count=1
class	compute the entropy of ||| entropy	count=1
class	item draws ||| node anchor item	count=1
class	[class_1] vertex attribute ||| [class_2] [class_1]	count=2
class	widget ||| widget manager	count=2
function	content of the node ||| node info	count=1
module_class	[module_1] default ||| [module_1] [class_2]	count=2
function	[function_1] from ||| [function_1] [function_2]	count=1
function_arg	old ows [arg_2] ||| [function_1] etree [arg_2]	count=2
class	instance ||| scheme	count=1
function	the same ||| add	count=1
class	a resource matching ||| resource loader	count=1
class	in the scheme ||| scheme edit	count=1
function_arg	column [arg_2] ||| [function_1] [arg_2]	count=4
module	is ||| visualize	count=1
class	node ||| edit links node	count=1
class	item draws ||| item	count=1
function	default widget discovery ||| discovery	count=1
class	activate ||| view key navigator	count=1
module	loop ||| scheme	count=1
class	schemelink) to the scheme ||| scheme edit	count=1
function_arg	to a [arg_2] ||| [arg_2] [function_1]	count=4
module	instances ||| evaluate	count=1
function	box ||| box	count=2
arg	weight background ||| background weight	count=2
function	for regression ||| reg	count=1
arg	show and execute the ||| source_node sink_node initial_links	count=1
function	[function_1] dissimilarity ||| [function_1] [function_2]	count=1
class	display over the item ||| node item	count=1
function	if [function_2] ||| [function_2] [function_1]	count=1
function	initialize the tracked ||| initialize	count=1
function	and :class orange ||| orange	count=1
function	the default ||| default	count=1
class	inside ||| bar	count=2
arg	for widget ||| widget	count=1
class	to edit the links ||| links edit	count=1
function	deleting the widget ||| on delete widget	count=3
function	a [function] node ||| is [function]	count=1
arg	points a ||| points	count=1
function	scheme to ||| scheme to	count=1
arg	key to [arg_2] ||| [arg_1] [arg_2]	count=1
arg	execute the ||| source_node sink_node initial_links	count=2
function	and module ||| module	count=1
module	the plot ||| utils plot	count=3
function	set the source ||| set source	count=2
function_arg	single [function_1] [arg_2] sizes ||| [function_1] data [arg_2] label_data	count=2
module	was raised by the ||| widgets	count=1
function	tmp anchor at the ||| tmp anchor	count=1
arg	indices ||| right indices	count=1
function	stop the update loop ||| stop	count=1
class	the editor widgets back ||| info edit	count=1
function	[function_1] color for ||| [function_1] [function_2]	count=6
function	has changed ||| changed	count=1
class	the editor ||| edit widget	count=1
class	the executor and ||| executor	count=1
arg	x array ||| x	count=1
class	if zooming in otherwise ||| graphics view	count=1
class	description ||| registry	count=1
function_arg	[function_1] by rows ||| [arg_2] [function_1]	count=2
function	[function_1] a grid ||| [function_2] [function_1]	count=2
module	html ||| report	count=1
function	bounding [function_2] ||| [function_2] [function_1]	count=3
class	normalize ||| entropy mdl	count=1
class	an action we need ||| tree	count=1
module	return an ||| canvas gui	count=1
function	widget description from ||| widget description	count=1
class	the value of :attr ||| owplot	count=1
module	selects all points in ||| utils	count=1
class	delete ||| widget manager	count=1
function	signal ||| signal	count=1
arg	stream [arg_2] ||| [arg_2] [arg_1]	count=2
class	page to ||| quick menu	count=1
arg	by heatmap_widget due ||| heatmap_widget	count=2
module_class	[module_1] item ||| [module_1] [class_2]	count=1
arg	the node processing_state to ||| node	count=1
class	nodes channels ||| links	count=1
class	source property bindings ||| property	count=1
module	the editor state source ||| canvas document	count=1
module	to ||| widgets utils plot	count=1
function	adds an item with ||| add item	count=1
arg	widgetregistry instance ||| entry_point cached	count=1
function	the button for ||| action button	count=1
class	[class] processing ||| [class]	count=1
function	[function_1] nodes ||| [function_1] [function_2]	count=4
arg	color weight background ||| color background weight	count=2
function_arg	instance for [arg_2] ||| [function_1] [arg_2]	count=2
function	name ||| name	count=4
function_arg	[function_1] the index ||| [function_1] [arg_2]	count=3
arg	group_var group_key ||| group_var group_key	count=2
function	[function_1] stats ||| [function_1] [function_2]	count=2
function	delete the owbasewidget ||| delete widget	count=1
arg	number ||| number suffix capitalize	count=1
function	region of ||| region	count=1
module	the update ||| canvas scheme	count=1
arg	given node ||| node x y	count=2
class	while preserving the arrow ||| arrow	count=1
class	the arrow base ||| arrow annotation	count=3
function	expand the ||| expand	count=1
class	widget where hover/move events ||| bar widget	count=1
module	in ||| widgets utils	count=1
arg	qmodelindex for the given ||| key_path	count=1
function	plain ||| plain	count=1
class	return ||| editor	count=1
function	dendrogram ||| from dendrogram	count=1
module	channels ||| canvas	count=1
class	target source binding ||| binding	count=1
class	clear ||| owconfusion matrix	count=1
class	interaction ||| user interaction	count=1
module_class	[module_1] [class_2] ||| [module_1] application [class_2]	count=1
function	panning ||| panning	count=1
function	remove the :class ||| remove	count=1
function	the geometry of ||| geometry	count=1
class	return the ||| base editor	count=1
class	annotation ||| annotation	count=4
function	dynamic ||| dynamic enabled	count=1
arg	the items selection state ||| state	count=1
module	find and [module_2] ||| [module_2] [module_1]	count=4
class	random ||| random	count=1
function	of :attr theme_name ||| update	count=1
function	orange ||| orange	count=1
arg	[arg_1] event ||| [arg_1] [arg_2]	count=2
function	:class qtextcharformat with ||| char format	count=1
function	calculate a hash value ||| hash dist	count=1
arg	the model at index ||| index	count=1
class	:attr selection_behavior ||| owplot	count=1
function	string ||| string	count=1
function	hash value that can ||| hash dist	count=1
function	fix ||| fix	count=3
function	geometry of ||| geometry	count=1
function_arg	plan for [arg_2] ||| [function_1] scheme [arg_2]	count=3
function	:attr ||| add selection	count=1
module	to be ||| widgets visualize	count=4
module_class	current [class_2] ||| [class_2] [module_1]	count=2
module	source ||| canvas	count=1
function	set permanent help ||| show permanent help	count=1
function	edges that stem from ||| graph edges	count=1
module_class	[module_1] point ||| [module_1] control [class_2]	count=1
function	info/warning/error message state ||| state	count=1
function	[function_1] rankmodel ||| [function_1] [function_2]	count=1
function_arg	raw [arg_2] ||| [arg_2] [function_1]	count=2
class	item ||| anchor item	count=2
function	point edit interaction ||| point edit	count=2
class	the :class ~ ||| scheme edit	count=1
class	item draws it ||| item	count=1
module	html with a ||| report	count=1
arg	sums to 1 ||| out	count=1
arg	d ||| d	count=1
function	hierarchical clustering using ||| clustering	count=1
function	for [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] count ||| [arg_1] [arg_2]	count=3
function_arg	tab [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	hierarchical clustering [arg_2] ||| [arg_2] [function_1]	count=2
function	set the baseline ||| set	count=1
function	a helper function ||| helper	count=1
function	paths for the category/widgetdescription ||| paths	count=1
class	sink ||| edit	count=1
function	remove a link ||| remove link	count=1
arg	as link if the ||| link	count=1
class	shadow ||| shadow widget	count=3
class	the size ||| window size	count=1
function	items ||| items	count=4
class	toolbar ||| quick category toolbar	count=1
function	a brief ||| brief	count=1
function_arg	the button [arg_2] ||| [arg_2] [function_1]	count=2
module	modules source filename and ||| registry	count=1
class	widget ||| edit widget	count=2
function	[function_1] message box ||| [function_2] [function_1]	count=2
class	in the scheme ||| scheme	count=1
arg	execute the ||| scheme source_node sink_node initial_links	count=1
function	[function_1] stats for ||| [function_1] [function_2]	count=2
module	source and sink nodes ||| document	count=1
function	the result of ||| result	count=2
function	row consists ||| row	count=1
function_arg	qaction at [arg_2] ||| [arg_2] [function_1]	count=1
function	row ||| row	count=2
function	state ||| widget state	count=2
function	the button ||| action button	count=1
function	description for the ||| description	count=1
class	set ||| heatmap widget	count=2
function	and fits the content ||| and fit	count=1
class	clear ||| links edit widget	count=1
function	the section name ||| widget name	count=1
function_arg	using axes [arg_2] ||| [function_1] [arg_2]	count=3
class	[class_1] annotation ||| [class_1] [class_2]	count=1
arg	for obj ||| obj	count=1
arg	scheme format ||| scheme error_handler widget_registry	count=1
class	set ||| filter proxy model	count=1
module	editor state source ||| canvas	count=1
arg	of the child in ||| child	count=1
arg	html to ||| html	count=1
arg	by its index ||| column_index	count=1
module	return its index ||| canvas	count=1
module	if ||| utils	count=1
function	a wildcard ||| wild card	count=1
function	[function_1] visible ||| [function_1] [function_2]	count=2
function	clear the ||| clear progress	count=1
function	collapsed ||| collapsed	count=1
function_arg	leaf nodes [arg_2] ||| [function_1] [arg_2]	count=2
arg	of data table ||| name data	count=1
module	all points in ||| widgets utils	count=1
function	[function_1] rule which ||| [function_1] [function_2]	count=3
module	return the state ||| canvas canvas items	count=1
module	a dictionary ||| widgets data utils	count=1
arg	indexed ||| n simplify	count=1
function	cursor [function] ||| move cursor [function] input	count=1
module	return true ||| canvas	count=2
function	set ||| set anchor	count=1
function	[function_1] rects ||| [function_1] [function_2]	count=3
function	the current :attr selection_behavior ||| add	count=1
arg	for the given columns ||| columns	count=1
class	heatmap rows which ||| heatmap scene	count=1
function	style's standard icon for ||| standard icon	count=1
function	point ||| point	count=6
function	[function_1] [function_2] ||| [function_1] node [function_2]	count=3
class	dock (same as ||| collapsible dock widget	count=1
function_arg	name for [arg_2] ||| [arg_2] [function_1]	count=4
function	set ||| set filter	count=3
class	if a tooltip with ||| tooltip	count=1
class	drop shadow ||| drop shadow widget	count=3
function	[function_1] channel names ||| [function_2] [function_1]	count=1
module	:attr selection_behavior ||| plot	count=1
module	of :attr ||| plot	count=1
function	[function_1] tip if ||| [function_1] [function_2]	count=3
function	set a list of ||| set	count=2
class	the arrow arrow ||| arrow	count=1
arg	end ||| end	count=3
class	the source [class_2] ||| [class_2] [class_1]	count=2
class	[class_1] anchorable class ||| [class_2] [class_1]	count=2
class	should ||| body	count=1
function	bounding box ||| rect	count=1
module	return the title ||| canvas	count=1
class	item ||| node item	count=2
function	formated label for ||| label	count=1
function	'single' flag ||| conflicting single link	count=1
class	a save ||| owsave	count=1
class	source and ||| links edit	count=1
function	create a mock ||| mock error	count=1
class	with a ||| quick	count=1
class	state source and ||| edit widget	count=1
function	ows v 2 0 ||| ows	count=1
arg	from stream and ||| stream	count=1
function	rectangle [function_2] ||| [function_1] [function_2]	count=4
function	the current ||| add selection	count=1
arg	items selection state ||| state	count=1
function	[function_1] regression ||| [function_1] [function_2]	count=4
function	each ||| samples in	count=1
function	[function_1] menu ||| [function_2] [function_1]	count=2
class	arrow is ||| arrow annotation	count=1
function	select the [function_2] ||| [function_2] [function_1]	count=8
function_arg	geometry [arg_2] ||| [function_1] [arg_2]	count=1
class	arrow base ||| scheme arrow annotation	count=2
function	params of ||| params	count=1
module	to data coordinates ||| widgets	count=1
arg	item (:class ||| item	count=1
function	return the result of ||| result	count=2
module	from plot to data ||| widgets utils plot	count=1
class	set ||| widget tool grid	count=1
class	widget [class_2] ||| [class_2] [class_1]	count=1
function	the features ||| features	count=1
function	[function_1] the geometry ||| [function_1] auto adjust [function_2]	count=1
function	for help ||| help	count=1
arg	draws a ||| position0 position1 position2	count=1
function	position [function_2] ||| [function_2] [function_1]	count=2
function	and update ||| update	count=1
class	the generated [class] is used ||| owrule [class]	count=1
class	iterate over the dendrogram ||| dendrogram	count=2
class	discretization of the ||| discretization	count=1
function	named ||| meta property	count=1
function_arg	at [arg_2] ||| [function_1] scene [arg_2]	count=1
function	the bounding box of ||| rect	count=1
arg	sourcerow under parent ||| sourcerow	count=1
function_arg	[function_1] [arg_2] to ||| [function_1] [arg_2]	count=2
class	selected ||| dendrogram widget	count=1
function	set the fill ||| set	count=1
function	[function_1] an item ||| [function_2] [function_1]	count=1
module	and ||| utils plot	count=1
function	hint is the maximum ||| hint	count=1
function	the dissimilarity ||| disimilarity	count=1
function	[function_1] stats for ||| [function_2] [function_1]	count=2
module	translation ||| widgets utils plot	count=1
function_arg	single [function_1] [arg_2] shapes and sizes ||| main [function_1] data [arg_2] label_data	count=1
class	source and ||| edit	count=1
function	get the learner ||| get learner	count=3
function	array of indices ||| merge indices	count=1
function	node [function_2] ||| [function_2] [function_1]	count=8
arg	of an index ||| index	count=1
class	shutdown [class] ||| [class]	count=3
class	source and sink nodes ||| links	count=1
arg	model or ||| model selected	count=1
function_arg	channels in [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	of button/action [arg_2] ||| [arg_2] [function_1]	count=1
function	settings ||| settings box	count=2
arg	an item view ||| view	count=1
module	it to the ||| widgets	count=2
class	widget ||| widget registry	count=1
function	register a :class widgetdescription ||| register widget	count=1
function	from a node ||| from node	count=2
module	widget ||| canvas application	count=2
class	points ||| owplot	count=1
arg	and the given size ||| size	count=1
class	item ||| preview browser	count=1
function	for each given instance ||| predict	count=1
arg	the points ||| points	count=1
function	set by ||| set	count=1
arg	number into ||| number suffix	count=2
function	distributions ||| distributions	count=1
arg	[arg_1] table ||| [arg_2] [arg_1]	count=4
class	dictionary ||| base editor	count=1
module	widget ||| evaluate	count=1
function	a shadow ||| shadow	count=1
function	the completer ||| update completer	count=1
function_arg	[function_1] viewport ||| [function_1] child [arg_2]	count=3
class	and apply [class] ||| [class]	count=2
class	the dock (same as ||| dock widget	count=1
function	register a :class ||| register category	count=1
function	python literal ||| literal	count=1
class	and sink ||| links	count=1
module	changed [module] ||| [module]	count=1
class	and sink ||| widget	count=1
function	the current :attr selection_behavior ||| add selection	count=1
module	to scene coordinates using ||| widgets	count=1
class	interaction this is called ||| interaction	count=1
function_arg	[function_1] from data ||| [function_1] [arg_2]	count=2
class	window ||| window	count=1
function	palette for ||| palette	count=1
function	[function_1] action role ||| [function_1] [function_2]	count=1
arg	node ||| node	count=12
arg	with ||| background	count=1
function	in ||| selection	count=1
module	instance for ||| canvas scheme	count=1
function	[function_1] depth and ||| [function_1] [function_2]	count=5
arg	policy and [arg_2] ||| [arg_2] hint [arg_1]	count=1
module	return it's index ||| canvas document	count=1
arg	the node for ||| node	count=1
function	the parameters [function_2] ||| [function_2] [function_1]	count=2
arg	start [arg_2] ||| [arg_1] [arg_2]	count=7
module	all points ||| widgets	count=1
function	content ||| info	count=1
arg	of checkable buttons and ||| orientation buttons widget	count=1
class	selection ||| heatmap selection manager	count=5
arg	the node processing_state ||| node	count=1
function	data set by ||| set features	count=2
class	:class ~ ||| edit widget	count=1
class	in the random forest ||| random forest adapter	count=1
class	the tool grid ||| widget tool grid	count=4
arg	env ||| env	count=1
arg	given sourcerow under ||| sourcerow	count=1
arg	include_more_link ||| include_more_link	count=1
arg	target thread ||| thread	count=1
function	the progress bar ||| progress bar	count=2
function	('item path') and update ||| update	count=1
class	the arrow as ||| scheme arrow annotation	count=3
class	channels ||| links edit	count=1
arg	number ||| number	count=2
module	the current file ||| model	count=1
function	entropy induced by partitioning ||| entropy	count=1
arg	a box with ||| box	count=2
function_arg	[function_1] [arg_2] ||| regression mean model [function_1] [arg_2]	count=1
function	identity modelview transform ||| set 2d mode	count=1
arg	link (:class schemelink) ||| link value	count=1
function	return the source model ||| source model	count=1
function	paint the ||| paint event	count=1
module	and return the ||| canvas	count=1
class	link and is ||| scheme link	count=1
function	cell ||| cell	count=2
function_arg	the given [arg_2] ||| [arg_2] [function_1]	count=1
module	to row ||| widgets data utils	count=1
function	transparency ||| transparency	count=1
function	advance ||| advance	count=1
function_arg	[function_1] direction ||| [function_1] [arg_2]	count=1
arg	draws ||| position0 position1 position2	count=1
function	enable/disable the dynamic ||| set dynamic	count=1
module	the ||| widgets evaluate	count=2
function	cache have a ||| cache	count=1
class	heatmap rows ||| heatmap	count=1
class	[class_1] text ||| [class_2] [class_1]	count=4
module	:attr theme_name ||| widgets	count=1
function	set the widgets expanded ||| set expanded	count=1
function	neighbor ||| neighbor	count=1
function	[function_1] enumerate ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] processing state [arg_2]	count=6
arg	[arg_1] based ||| [arg_1] [arg_2] indent	count=4
function	nodes in ||| nodes	count=2
arg	descriptor [arg_2] ||| [arg_1] [arg_2]	count=1
module	the items ||| canvas items	count=1
class	the ||| widget	count=1
class	for height in ||| widget	count=1
function	node color for ||| node color	count=3
function	uniform ||| uniform	count=1
function	widget description from a ||| widget description	count=1
function	return the [function] the ||| [function]	count=1
arg	add a plot ||| plot	count=1
function	set a state ||| set state	count=3
class	arrow base point ||| scheme arrow annotation	count=2
function_arg	removes [arg_2] ||| [function_1] [arg_2]	count=3
module	[module_1] to data ||| [module_2] [module_1]	count=1
class	signal ||| owsieve diagram	count=1
arg	given ||| x y	count=1
class	the widget [class_2] ||| [class_2] [class_1]	count=1
function	quick help [function_2] ||| [function_2] [function_1]	count=1
function	thumbnail svg string for ||| thumbnail	count=1
class	current ||| owload	count=1
function	entropy ||| entropy	count=2
function	and add ||| add	count=1
function	valid [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] from stream ||| [arg_2] [function_1]	count=1
class	set ||| node anchor item	count=2
function_arg	insert category [arg_2] ||| [function_1] [arg_2]	count=2
function	layout the ||| layout	count=2
function_arg	a row [arg_2] ||| [function_1] actions [arg_2]	count=1
arg	with color and ||| color	count=1
arg	[arg_1] event ||| [arg_2] [arg_1]	count=2
function	[function_1] name ||| [function_1] [function_2]	count=1
arg	number into ||| number	count=2
function	was ||| on	count=1
function	selects all ||| add selection	count=1
class	add rows to selection ||| heatmap selection manager	count=1
class	computation ||| future	count=1
class	a widget action (from ||| widget tool grid	count=1
function	scan ||| scan	count=2
function	enumerate ||| enumerate selections	count=1
class	executor and ||| executor	count=1
class	link and ||| link	count=1
function	version ||| version	count=1
arg	node in ||| node	count=1
arg	end from the ||| end	count=1
function	to [function_2] ||| cursor [function_1] [function_2]	count=3
function	[function_1] input line ||| cursor [function_1] [function_2]	count=1
function	the quick help animation ||| set quick help animation	count=1
function	for ||| for widget	count=2
function	key ||| index from key	count=1
function	data ||| on data	count=1
module	'literal') and return its ||| canvas	count=1
class	the ||| signal manager	count=2
module	value of :attr theme_name ||| widgets utils plot	count=1
arg	[arg_1] alignment ||| [arg_2] [arg_1]	count=4
function	html formated label for ||| label	count=1
function_arg	[function_1] updated color ||| [function_1] baseformat [arg_2]	count=1
module	entire graph ||| widgets utils	count=1
arg	data table ||| table varlist idvarlist groupvarlist	count=1
function	initialize the tracked info/warning/error ||| initialize	count=1
arg	a box ||| widget box	count=2
function	[function_1] the off-diagonal ||| [function_1] [function_2]	count=1
arg	can have [arg] ||| x_data y_data [arg]	count=1
function	identity modelview transform ||| 2d mode	count=1
module_class	[module_1] anchor ||| [module_1] [class_2]	count=3
class	nodes channels ||| edit	count=1
module	return the [module_2] ||| [module_1] [module_2]	count=18
function_arg	[function_1] item from ||| [arg_2] [function_1]	count=1
class	arrow as a start ||| scheme arrow	count=1
function	set the depth to ||| set	count=1
class	size grip is ||| window size grip	count=2
function	end the ||| end	count=2
function	common plot [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] the item ||| [function_1] [arg_2]	count=1
class	qrect) ||| splash screen	count=1
arg	of links to the ||| links	count=1
arg	180 ||| point1 point2	count=1
function	scheme to ||| to	count=1
module	explains to the ||| widgets	count=1
function	gradient ||| gradient	count=1
function	when the legend ||| legend	count=1
arg	insert the number into ||| number suffix capitalize	count=1
function	[function_1] items in ||| [function_2] [function_1]	count=1
class	all source property ||| property	count=1
function	to reflect ||| processing	count=1
function	:attr ||| add	count=1
function	dendrogram [function_2] ||| [function_2] [function_1]	count=1
arg	rows given in indices ||| right indices	count=1
function_arg	[function_1] key to ||| [arg_2] [function_1]	count=4
module	value ||| plot	count=1
class	insert ||| node anchor item	count=1
function	region ||| sloppy region	count=1
function	return all suitable attributes ||| source attributes	count=1
function	a filter ||| filter	count=1
class	reset ||| matrix	count=1
function	[function_1] changed (progressbarinit/finished) ||| [function_2] [function_1]	count=1
function	if the control is ||| is control active	count=1
function	[function_1] the central ||| [function_1] [function_2]	count=1
function	start a ||| start	count=1
arg	source (instance of ||| source	count=1
function	insert the ||| insert	count=1
class	set ||| scheme text annotation	count=1
function_arg	remove the [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] columns ||| [arg_2] [arg_1]	count=2
module	and return an existing ||| canvas document	count=1
function	[function_1] qaction ||| [function_1] [function_2]	count=2
class	executor and free ||| thread executor	count=1
class	render tab ||| tab	count=1
function_arg	the leaf [arg_2] ||| [function_1] [arg_2]	count=2
class	of the ||| future	count=1
function	[function_1] visible inside ||| [function_1] [function_2]	count=1
function	widget instance ||| widget	count=1
class	and ||| widget	count=1
function	visible ||| visible score	count=1
function_arg	[function_1] [arg_2] ||| [function_1] action [arg_2]	count=3
class	[class_1] [class_2] ||| [class_1] [class_2]	count=142
arg	a plot ||| plot	count=1
function	fix ||| fix size	count=1
function	help animation ||| help animation	count=2
function	of np [function] that ||| [function]	count=4
function	output [function_2] ||| [function_1] [function_2]	count=1
function	write scheme to ||| to	count=1
arg	[arg] of widgets ||| widget [arg]	count=2
module	if it ||| utils	count=1
function	all points in ||| add	count=1
class	arrow as a ||| scheme arrow annotation	count=3
class	select ||| search algorithm	count=1
arg	[arg_1] end ||| [arg_2] [arg_1]	count=5
function	the cache have a ||| cache	count=1
arg	tooltip for the node ||| node	count=1
function	add a [function_2] ||| [function_1] [function_2]	count=2
function	ratio ||| ratio	count=1
function	[function_1] actual ||| [function_2] [function_1]	count=3
arg	parent sourceparent ||| sourceparent	count=1
function	write scheme to a ||| scheme to	count=1
module	data to ||| widgets	count=2
arg	add content ||| header_rows header_columns	count=1
function_arg	[function_1] updated color ||| [arg_2] [function_1]	count=1
class	computation ||| watcher	count=1
arg	policy [arg_2] ||| [arg_2] hint [arg_1]	count=1
function	css [function_2] ||| [function_2] [function_1]	count=1
function	a control [function_2] ||| [function_1] [function_2]	count=2
class	insert ||| sequence flow	count=1
function	for the owbasewidget ||| for	count=1
function_arg	qualified name [arg_2] ||| [function_1] [arg_2]	count=3
class	arrow arrow head points ||| arrow	count=1
module	return ||| canvas report	count=1
function	remove all ||| clear	count=2
module_class	[module_1] frame ||| [module_1] [class_2]	count=4
class	the updates ||| manager	count=1
module	sink nodes channels ||| canvas	count=1
class	controlled widget ||| splitter resizer	count=1
function_arg	return a [function_1] [arg_2] ||| [function_1] [arg_2]	count=12
function	maps point, ||| map to	count=1
function	formated label for a ||| label	count=1
function_arg	[function_1] key ||| [arg_2] [function_1]	count=4
class	the item draws ||| item	count=1
function_arg	[function_1] precomputed ||| [arg_2] [function_1]	count=1
class	the computation ||| future	count=1
arg	checkable buttons and connects ||| orientation buttons widget	count=1
module_class	the widget [class_2] ||| [module_1] [class_2]	count=2
arg	check if descriptor ||| descriptor attrs metas	count=1
class	positive if zooming in ||| view	count=1
class	the item ||| anchor item	count=1
module	scheme ||| canvas document	count=5
class	a rule ||| rule	count=1
function	processing ||| processing	count=4
class	geometry state ||| text annotation	count=1
function	[function_1] edit ||| [function_1] [function_2]	count=5
function	delete the owbasewidget instance ||| delete widget	count=1
class	the arrow arrow head ||| arrow annotation	count=1
arg	return counts of ||| max_val weights minlength	count=1
arg	index start by count ||| start count	count=1
arg	[arg] is ||| [arg]	count=1
function	plan for ||| links plan	count=1
function	[function_1] document modified ||| [function_2] [function_1]	count=1
function_arg	column [arg_2] ||| [arg_2] [function_1]	count=4
function	compute basic stats for ||| compute basic stats	count=1
arg	name ||| names name	count=1
function	set the heatmap ||| set heatmap	count=2
function	[function_1] a runtime ||| [function_2] [function_1]	count=1
function	region of the ||| sloppy region	count=1
function	qrectf ||| rect	count=1
function	set the widget ||| set widget	count=2
function	adds an item ||| add item	count=2
module	:obj orange data ||| data	count=1
class	process ||| widget discovery	count=1
function	the bounding [function_2] ||| [function_2] [function_1]	count=3
module_class	[module_1] the ||| [module_1] [class_2]	count=1
class	link and is dynamic_enabled ||| link	count=1
class	to a rule ||| rule	count=1
arg	name of an ||| name parent	count=1
function	default palette ||| default palette	count=1
function	a uniform ||| uniform linear	count=1
function	control point [function_2] ||| [function_2] [function_1]	count=3
module	border ||| gui	count=1
arg	[arg_1] input channels ||| [arg_1] [arg_2]	count=2
function	the sink ||| sink	count=1
function	[function_1] the learner ||| [function_2] [function_1]	count=7
arg	in view ||| view row_indices command	count=1
arg	from the execution of ||| timeout	count=1
function	[function_1] update ||| [function_2] [function_1]	count=1
function	remove input ||| remove input	count=1
arg	table into a ||| table varlist	count=1
class	state ||| links	count=1
class	the ||| watcher	count=2
function	delete ||| delete	count=1
arg	module ||| module	count=1
arg	for data ||| data	count=1
function	list of nodes in ||| nodes	count=1
class	in the view ||| graphics view	count=1
function	[function_1] current control ||| [function_1] [function_2]	count=1
arg	it sums to 1 ||| out	count=1
function	hints ||| hints	count=1
arg	include_more_link is ||| desc include_more_link	count=1
function	qualified name ||| qualified name	count=1
arg	[arg_1] and alignment ||| [arg_2] [arg_1]	count=4
function_arg	finished [arg_2] ||| [function_1] [arg_2]	count=3
arg	given [arg] returns a ||| [arg]	count=2
class	zooming ||| view	count=1
function	(class schemenode) scheduled ||| pending	count=1
function	set the quick help ||| set quick help	count=1
function	for tab ||| tab icon	count=1
function_arg	[function_1] [arg_2] ||| [function_1] size [arg_2]	count=1
arg	in orange scheme ||| scheme	count=1
class	tab button ||| tab bar	count=1
module	a dictionary ||| data	count=1
function	qpainterpath ||| path	count=2
arg	of checkable buttons and ||| buttons widget nomargin	count=1
class	editor state source and ||| links	count=1
function	current ||| add	count=1
function	[function_1] tool button ||| [function_2] [function_1]	count=1
function	the user ||| set user	count=1
module	new ||| canvas document	count=1
class	the arrow ||| scheme arrow	count=3
module	adds it to ||| widgets	count=1
class	to fit inside ||| bar	count=1
arg	html to ||| name html	count=1
class	the scores view ||| owrank	count=1
module	updates the ||| widgets	count=1
function	search [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] pos ||| [arg_2] [function_1]	count=1
arg	x_axis and [arg_2] ||| [arg_2] [arg_1]	count=1
function	instance from ||| from	count=1
class	creates a ||| owplot	count=3
function_arg	a dynamic [arg_2] ||| [arg_2] [function_1]	count=4
function	visibility ||| visible	count=1
function	main application ||| application	count=1
module	given a preview ||| canvas preview	count=1
function	scroll ||| scroll	count=1
module	the value of :attr ||| widgets utils	count=1
function	send ||| send	count=1
class	source model into ||| item model	count=1
class	tab only on ||| tab	count=1
function_arg	[function_1] [arg_2] ||| [function_1] scheme [arg_2]	count=3
class	current file ||| model	count=1
function	transform ||| transform	count=1
class	page to ||| menu	count=1
function	a qwidget [function_2] ||| [function_2] [function_1]	count=2
function	example ||| example	count=1
class	vbo and prepares vertex ||| vertex buffer	count=1
function	from ||| from module	count=2
function	printed contents of the ||| info reg	count=1
function	information entropy induced by ||| entropy	count=1
arg	plot ||| plot	count=1
function	set the channel names ||| set channel names	count=1
arg	for adding [arg_2] ||| [arg_2] [arg_1]	count=4
module	current ||| widgets utils plot	count=4
function_arg	the entropy [arg_2] ||| [arg_2] [function_1]	count=2
function	setting the user interaction ||| user interaction	count=1
class	control [class_2] ||| [class_1] [class_2]	count=1
function	list ||| list	count=2
module	model ||| application	count=2
class	the update loop ||| signal	count=1
module	return [module_2] ||| [module_1] [module_2]	count=2
function	remove a link (:class ||| remove link	count=1
function	fix size so it ||| fix size	count=1
arg	the item (:class nodeitem) ||| item	count=1
class	as a string (#rgb, ||| annotation	count=1
function	selects ||| select	count=1
function	[function_1] [function_2] ||| [function_2] [function_1]	count=163
class	control point ||| control point	count=3
class	the tool grid ||| tool grid	count=2
function_arg	[function_1] combo box ||| [arg_2] [function_1]	count=2
class	registry ||| widget registry	count=2
function	log ||| log	count=1
class	if a tooltip ||| tooltip	count=1
function	[function_1] control point ||| [function_2] [function_1]	count=2
function	an message box ||| message	count=1
arg	data from a scheme_file ||| scheme_file	count=1
function	update ||| update anchored	count=1
function	for tab at ||| tab tool tip	count=2
function	show the ||| show	count=1
function	item to ||| item	count=1
class	and sink nodes channels ||| edit widget	count=1
module_class	creates a [class_2] ||| [module_1] [class_2]	count=2
arg	from the execution ||| timeout	count=1
function	of nodes in a ||| nodes	count=1
arg	input (:class inputsignal) ||| input	count=1
function	the domain hints ||| domain role hints	count=1
function	set heading as the ||| set	count=1
module	current sloppy ||| document	count=1
class	containing ||| quick menu	count=1
arg	a a stream ||| stream pretty pickle_fallback	count=1
function	runtime environment ||| runtime env	count=2
function	or ||| set	count=1
function	general validator's requirements ||| is valid	count=1
class	to the scene ||| canvas scene	count=2
function	the cache have ||| cache	count=1
function	selection [function_2] ||| [function_2] [function_1]	count=1
arg	so it sums ||| out	count=1
arg	a a stream ||| stream	count=1
function	from a :class ||| from	count=1
function	[function_1] runtime ||| [function_2] [function_1]	count=1
arg	data table ||| table varlist	count=1
class	the entropy of ||| entropy	count=1
class	zooming in otherwise negative ||| view	count=1
class	the widget where ||| bar widget	count=1
class	the random [class_2] ||| [class_1] [class_2]	count=1
function_arg	environment variable [arg_2] ||| [arg_2] [function_1]	count=3
function	completer ||| update completer	count=1
function_arg	[function_1] node for ||| [arg_2] [function_1]	count=1
class	reset the widget ||| owconfusion matrix	count=1
function	diagonal elements of the ||| correct	count=1
function	time as a ||| time	count=1
class	[class_1] widget ||| [class_2] [class_1]	count=3
module	this is the ||| canvas	count=1
function	stats for each ||| stats	count=1
arg	the model to filename ||| filename	count=1
class	editor state source and ||| links edit	count=1
function	is this a dynamic ||| dynamic enabled	count=1
class	geometry ||| resize text annotation	count=1
arg	a :class qgraphicsscene scene ||| scene	count=1
function	and identity modelview transform ||| 2d mode	count=1
arg	the cs distribution ||| cs	count=1
function	move ||| move	count=3
arg	adding a list ||| force_replace	count=1
arg	group_var [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] the scene ||| [function_2] [function_1]	count=1
arg	execute ||| source_node sink_node initial_links	count=2
function	remove link ||| link remove	count=2
function	for drawing a shadow ||| shadow pixmap	count=1
function	the row ||| row	count=1
function	rule which ||| rule	count=1
arg	data table into ||| table varlist	count=1
module	:attr ||| widgets	count=2
function	the user ||| user	count=1
module_class	[module_1] property bindings ||| [module_1] [class_2]	count=2
class	unordered set ||| cn2unordered	count=1
class	scheme ||| scheme edit	count=8
function_arg	to [arg_2] ||| [function_1] [arg_2]	count=4
class	the ||| owconfusion matrix	count=1
class	[class_1] unordered set ||| [class_2] [class_1]	count=2
module	updates the current ||| utils	count=1
function	the result ||| result	count=2
class	the buttons to ||| dynamic resize tool	count=1
class	the control ||| control	count=1
arg	[arg_1] parent sourceparent ||| [arg_2] [arg_1]	count=6
arg	precomputed ||| linkage	count=1
function_arg	[function_1] :meth set_plot_data ||| [function_1] features [arg_2]	count=1
class	data ||| scale data	count=1
class	the widget description ||| qt widget registry	count=2
function	position in [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] to value ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] x_axis and ||| [function_1] [arg_2]	count=4
function_arg	zoom [arg_2] ||| [arg_2] [function_1]	count=1
class	link ||| link	count=4
function	and calculate ||| calculate	count=1
arg	[arg_1] it sums ||| [arg_1] axis [arg_2]	count=1
module	for the [module_2] ||| [module_1] [module_2]	count=2
class	of the widget ||| widget	count=1
arg	the widget at index ||| index	count=1
arg	the number into ||| number suffix	count=2
arg	rows given in indices ||| left right indices string_cols	count=1
module	the current :attr ||| utils	count=1
function	an unordered set of ||| unordered	count=1
arg	[arg_1] buttons and ||| [arg_1] [arg_2]	count=1
class	send ||| signal manager	count=1
function	data ||| set plot data	count=1
function	[function] if ||| [function]	count=3
module	a change in the ||| canvas	count=1
module	preview ||| canvas preview	count=1
arg	given in indices ||| right indices	count=1
arg	[arg_1] env ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] data table ||| [arg_2] [function_1]	count=1
function	the button for ||| button	count=1
class	depending ||| collapsible dock	count=1
function	coordinates using axes ||| for axes	count=1
function	style's standard [function_2] ||| [function_2] [function_1]	count=3
class	[class_1] forest ||| [class_1] [class_2]	count=3
class	of the item ||| arrow annotation	count=1
function	[function_1] action ||| [function_1] [function_2]	count=2
class	over ||| widget discovery	count=1
module	and return it's index ||| canvas document	count=1
class	arrow lines start ||| scheme arrow annotation	count=1
function	number ||| count	count=4
module	invalidate ||| canvas gui	count=1
arg	the given size hint ||| size hint	count=1
class	[class_1] [class_2] ||| [class_2] [class_1]	count=38
class	of the arrow arrow ||| scheme arrow annotation	count=1
function	tool tip ||| tool tip	count=1
function	the value ||| combo value	count=1
function	recently accessed [function_2] ||| [function_1] [function_2]	count=1
module	updates ||| canvas	count=1
class	grid ||| widget tool grid	count=3
function	register a ||| register	count=2
arg	a box with ||| widget box	count=2
function	widget instance ||| ensure widget	count=1
class	the value of ||| owplot	count=1
function	palette for a node ||| palette	count=1
function	name title of ||| name	count=1
arg	a row in an ||| row	count=1
function	or css styled ||| set	count=1
function	a helper function for ||| item tool tip helper	count=1
function	edit interaction ||| edit	count=1
arg	is upstream [arg] ||| node [arg]	count=2
function	attributes ||| attributes	count=1
function	mock [function_2] ||| [function_1] [function_2]	count=1
function	qt css linear ||| css	count=1
function_arg	parts for data ||| parts data	count=2
function	the selection rects ||| selection rects	count=2
class	current translation ||| owplot3d	count=1
function	completer ||| completer	count=1
module	return ||| data utils	count=2
arg	link (:class schemelink) be ||| link value	count=1
function	[function_1] pixmap ||| [function_1] [function_2]	count=1
class	the arrow ||| scheme arrow annotation	count=1
function	and [function_2] ||| [function_2] [function_1]	count=1
function	information message ||| message information	count=1
function	exception instance ||| exception	count=1
arg	circle shaped background ||| icon background_color	count=1
function	set the regular expression ||| set filter	count=1
function	parts for ||| parts	count=1
function	[function_1] to ||| [function_2] [function_1]	count=1
function	a mock ||| mock error	count=1
module	with numbers that represent ||| widgets utils	count=1
class	the grid ||| grid	count=2
function_arg	[function_1] a tree ||| [function_1] [arg_2]	count=2
class	the computation ||| watcher	count=1
module_class	i e [module_1] [class_2] processing ||| [module_1] [class_2]	count=2
function_arg	[function_1] distribution d ||| [arg_2] [function_1]	count=3
arg	the entry point group ||| entry_point_group	count=1
arg	append the widget ||| widget	count=1
function	align nodes to a ||| align to	count=1
function	[function_1] filtering ||| [function_2] [function_1]	count=4
arg	in row in ||| row	count=1
arg	[arg_1] of links ||| [arg_2] [arg_1]	count=4
function_arg	move [arg_2] ||| [function_1] [arg_2]	count=1
module	add and [module] a default ||| [module]	count=1
module	graph ||| utils plot	count=2
function	a new ||| new	count=2
module	items that [module_2] ||| [module_2] [module_1]	count=2
function	be ||| set valid data	count=1
arg	plot ||| name plot	count=1
class	row ||| viz rank	count=1
arg	the description into ||| module mtime description	count=1
class	the body ||| node body item	count=1
function	icon ||| icon	count=8
class	rule passes ||| rule	count=2
class	depending on the ||| collapsible dock	count=1
arg	handler for ||| attr_list	count=1
module	data to plot coordinates ||| widgets utils plot	count=1
class	for the tool ||| tool	count=2
arg	a table to ||| name table	count=1
function	a tool tip if ||| tool tip	count=1
function	axis and ||| axis	count=1
arg	:class element based ||| element level	count=1
module	value of :attr ||| widgets	count=1
function	legend ||| legend	count=3
class	the ||| base editor	count=1
class	rule passes the ||| rule	count=2
function	[function_1] tree adapters ||| [function_2] [function_1]	count=1
function	removes all tips ||| remove all	count=1
class	for the node ||| node	count=2
class	add rows to selection ||| heatmap selection	count=1
class	save ||| owsave	count=2
class	current file ||| owload	count=1
function_arg	[function_1] button widget ||| [arg_2] [function_1]	count=2
function	tool tip if a ||| tool tip	count=1
module	with ||| widgets utils	count=3
function	plan for ||| plan	count=1
class	exception instance [class] ||| [class]	count=1
function_arg	[function_1] description into ||| [arg_2] [function_1]	count=1
class	the grid lines ||| plot grid	count=1
function	set the maximum number ||| set maximum	count=1
module	symbol ||| widgets utils plot	count=1
function	current widget [function_2] ||| [function_2] [function_1]	count=1
function_arg	plan for [arg_2] ||| [function_1] scheme links [arg_2]	count=4
function	the leaf nodes in ||| leaves	count=1
arg	widget ||| widget text icon tooltip	count=1
function	the tree adapters in ||| trees	count=1
class	positive if zooming in ||| zoomable graphics view	count=1
arg	checkable buttons and ||| orientation buttons	count=1
function	the value of a ||| value	count=1
arg	indices ||| indices	count=2
class	current ||| owload model	count=1
function_arg	[function_1] of data ||| [function_1] [arg_2]	count=3
class	tab only on a ||| tab	count=1
module_class	[module_1] scene ||| [module_1] canvas [class_2]	count=3
module	plot ||| plot	count=5
arg	from a module ||| module widget_name category_name distribution	count=1
function	the central [function_2] ||| [function_1] [function_2]	count=1
function	clusters from ||| clusters	count=1
arg	category ||| desc	count=1
class	updates the current ||| owplot	count=1
function	legend ||| show legend	count=1
function_arg	[function_1] in x ||| [arg_2] [function_1]	count=4
module	sink nodes ||| canvas document	count=1
function	from a [function_2] ||| [function_1] [function_2]	count=3
function	can the ||| can enable	count=1
function	result of the ||| result	count=2
class	view ||| graphics view	count=1
arg	rows [arg_2] ||| [arg_2] [arg_1]	count=1
module	and return ||| canvas scheme	count=1
arg	[arg_1] to event ||| [arg_1] [arg_2]	count=2
arg	the item ||| item	count=1
arg	html ||| name html	count=1
function	[function_1] domain ||| [function_1] [function_2]	count=1
function_arg	widget description [arg_2] ||| [arg_2] [function_1]	count=1
function	and identity modelview transform ||| set 2d mode	count=1
function	a python literal ||| literal	count=1
function	processing_state to reflect the ||| processing	count=1
function	with reason ||| reason	count=1
class	and sink nodes ||| links edit widget	count=1
function_arg	[function_1] [arg_2] ||| [function_1] features [arg_2]	count=5
class	positive if zooming ||| zoomable graphics view	count=1
function	compute confusion ||| confusion	count=1
function	link (:class linkitem) from ||| link item	count=1
function	find an ||| find item	count=1
module	create and return ||| canvas canvas	count=1
function	in a new tab ||| item	count=1
function	[function_1] linear gradient ||| [function_2] [function_1]	count=4
module	return an iterator ||| canvas	count=1
function	[function_1] the widget ||| [function_1] [function_2]	count=1
module	the value of ||| widgets	count=1
arg	sink_node ||| sink_node	count=1
module	file and return ||| canvas preview	count=1
module	and ||| widgets utils plot	count=1
module_class	[module_1] property ||| [module_1] [class_2]	count=2
function	set the ||| set scheme	count=1
arg	row [arg] ||| row [arg]	count=1
function	width of the ||| line width	count=1
class	a ||| widget	count=11
function	[function_1] selection rects ||| [function_1] [function_2]	count=1
function	expanded state if true ||| expanded	count=1
arg	buttons and adds it ||| buttons	count=1
arg	use _augment_indices to compute ||| var_data extra_map as_string	count=2
function_arg	entry [arg_2] ||| [arg_2] [function_1]	count=1
arg	of data ||| data	count=1
class	from the scheme ||| scheme	count=2
arg	cs ||| cs	count=1
class	the node title the ||| node	count=1
module	the current :attr selection_behavior ||| widgets utils plot	count=1
class	arrow base ||| arrow annotation	count=4
function_arg	from [arg_2] ||| [arg_2] [function_1]	count=1
function	widget description ||| widget	count=1
function	dynamic ||| set dynamic	count=1
module_class	control [class_2] ||| [module_1] [class_2]	count=1
function	in the ||| add selection	count=1
module	return it's index ||| canvas canvas items	count=1
function_arg	of [arg_2] ||| [function_1] [arg_2]	count=3
function	[function_1] to a ||| [function_1] [function_2]	count=1
function	set quick [function_2] ||| [function_2] [function_1]	count=1
arg	text the text ||| text	count=1
class	set ||| text annotation	count=2
arg	table into a ||| table	count=1
function	set the currently highlighted ||| set hover	count=1
function	create a new widget ||| create new	count=1
module	the current sloppy button ||| canvas document	count=1
function_arg	[function_1] in x ||| regression mean model [function_1] [arg_2]	count=4
class	the item ||| arrow annotation	count=1
function	action role ||| action	count=1
function	the processing ||| processing	count=1
function	directory where widgets save ||| dir	count=1
function	the schemenode [function_2] ||| [function_2] [function_1]	count=1
module	and return ||| canvas	count=6
class	is positive if zooming ||| view	count=1
class	editor ||| edit	count=1
module_class	[module_1] current widget ||| [module_1] [class_2]	count=1
module	the current :attr selection_behavior ||| plot	count=1
function	type of ||| type	count=1
function	a hash value ||| hash	count=1
module	selects all points in ||| widgets utils plot	count=1
module	of ||| widgets	count=2
class	arrow arrow ||| arrow	count=1
function	the content ||| info	count=1
function	node color [function_2] ||| [function_2] [function_1]	count=1
arg	data table into a ||| table varlist idvarlist	count=1
class	the current ||| owload model	count=1
function_arg	[function_1] mod_path ||| [function_1] [arg_2]	count=5
function_arg	[function_1] data ||| [function_1] [arg_2]	count=7
function_arg	tab button [arg_2] ||| [arg_2] [function_1]	count=2
module	html ||| canvas report	count=1
class	[class_1] shadow ||| [class_2] [class_1]	count=3
function	the size ||| size	count=1
function_arg	index of button ||| index of button	count=1
arg	arr along given axis ||| weights axis dtype	count=1
function	region ||| calc sloppy region	count=1
class	sink ||| edit widget	count=1
module	updates ||| scheme	count=1
class	property bindings appearing ||| property	count=1
arg	handler ||| attr_list	count=1
module	return the ||| data	count=1
function	column ||| get column	count=1
function_arg	a [function_1] [arg_2] ||| [function_1] scheme [arg_2]	count=6
class	random [class_2] ||| [class_2] [class_1]	count=1
class	the editor state ||| links	count=1
arg	axis ||| weights axis	count=1
function	permanent ||| permanent	count=1
function	update all ||| update anchored	count=1
module	that belong ||| utils plot	count=1
function	section name ||| get widget name	count=1
function	[function_1] for ||| [function_2] [function_1]	count=3
function	the quick help ||| set quick help	count=2
function	an iterator over ||| iter	count=1
class	source ||| links edit	count=1
function	all points in the ||| add	count=1
arg	if descriptor ||| descriptor attrs	count=1
function	the learner for ||| learner	count=1
class	creates an :obj ||| owplot	count=2
function	style's standard ||| standard	count=1
function	as a python literal ||| literal	count=1
function	the current selection ||| selection	count=1
function	new output ||| new output	count=1
arg	of a table to ||| name table	count=1
function	set an instance ||| set scheme	count=1
function	nodes on the update ||| node update	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] [function_arg_2]	count=6
module_class	the [class_2] ||| [module_1] [class_2]	count=25
arg	can have [arg] shapes ||| x_data y_data [arg]	count=1
function	in a new ||| item	count=1
function	register a ||| register widget	count=1
function	all points in ||| selection	count=1
class	if zooming in ||| zoomable graphics view	count=1
function	return a rectangle ||| rect	count=1
function_arg	set [arg_2] ||| [function_1] features [arg_2]	count=2
module	message ||| canvas gui	count=4
module	the corresponding scheme ||| scheme	count=1
function	[function_1] transformation ||| [function_2] [function_1]	count=1
function	scheme to a a ||| scheme to	count=1
function	update the domain ||| update domain role	count=2
arg	the action from ||| action	count=2
function	a qualified name ||| qualified name	count=1
arg	the child in ||| child	count=1
module	return it's ||| canvas canvas	count=1
function	brief description ||| brief	count=1
class	state ||| scheme node	count=1
arg	value ||| value	count=7
function	[function_1] the max ||| [function_1] [function_2]	count=1
function	create the tab ||| create tab	count=2
function	the maximum number of ||| maximum	count=1
function	maximum number ||| maximum	count=1
arg	weight [arg_2] ||| [arg_2] [arg_1]	count=8
function_arg	and [arg_2] ||| [function_1] [arg_2]	count=3
module	updates the ||| plot	count=1
function	notify the binding of ||| notify changed	count=1
class	node is ||| node item	count=1
function	coordinates using axes ||| axes	count=1
class	tab widget ||| widget	count=1
function	bar ||| bar	count=1
module	state to the ||| canvas	count=1
class	the anchorable class ||| anchorable	count=1
function_arg	for the node ||| widget instance node	count=2
arg	to filename ||| filename	count=1
function	standard ||| standard	count=1
class	the drop shadow ||| drop shadow	count=3
module	updates the ||| utils plot	count=1
module	group the ||| widgets	count=1
function	widget description ||| widget description	count=1
class	the menu ||| menu	count=1
function	the quick [function_2] ||| [function_1] [function_2]	count=3
function	compute basic [function_2] ||| [function_1] [function_2]	count=4
arg	the page [arg_2] ||| [arg_2] [arg_1]	count=2
arg	child in the ||| child	count=1
class	the tool ||| tool	count=2
module	return the pickled ||| canvas	count=1
module	all ||| plot	count=1
class	item ||| arrow annotation	count=1
class	state source and ||| edit	count=1
function	[function_1] css ||| [function_1] [function_2]	count=1
arg	ancestor [arg] is ||| [arg]	count=1
module	all items that ||| utils plot	count=1
module	[module_1] [module_2] ||| [module_1] [module_2]	count=112
arg	list of links ||| links	count=1
arg	[arg_1] [arg_2] ||| [arg_2] widget [arg_1]	count=2
module	the ||| canvas canvas items	count=5
function	critical ||| critical	count=1
arg	unichar ||| unichar	count=1
function_arg	update [arg_2] ||| [function_1] processing state [arg_2]	count=3
function	initialize ||| init	count=2
function	[function_1] diagonal elements ||| [function_2] [function_1]	count=1
arg	set of checkable buttons ||| buttons	count=1
function	font for the channel ||| font	count=1
class	as a ||| annotation	count=1
function	value [function] ||| [function]	count=1
arg	for data split by ||| data	count=1
function	update the node color ||| node color	count=2
function	add [function_2] ||| [function_2] [function_1]	count=1
function	develop ||| initialise	count=1
function	[function] in the ||| [function]	count=3
module	and return its string ||| canvas	count=1
module	return its string representation ||| canvas	count=1
module	state ||| canvas document	count=2
function	join ||| join	count=1
function_arg	[function_1] html ||| [arg_2] [function_1]	count=1
arg	[arg_1] and input ||| [arg_1] [arg_2]	count=1
function	remove ||| remove item	count=1
class	the buttons ||| dynamic resize tool	count=1
function	and calculate [function_2] ||| [function_1] [function_2]	count=1
function_arg	brief description [arg_2] ||| [arg_2] [function_1]	count=1
arg	given sourcerow [arg_2] ||| [arg_2] [arg_1]	count=2
function	an item with title ||| item	count=1
arg	schemenode) to title ||| title	count=1
class	return a checkable ||| canvas	count=1
function_arg	re-emit [arg_2] ||| [arg_2] [function_1]	count=3
arg	a scheme_file ||| scheme_file	count=1
arg	a circle shaped background ||| background_color	count=1
function	blending factor ||| blending factor	count=2
function	the row consists ||| row	count=1
arg	if descriptor ||| descriptor attrs metas	count=1
module	the ||| widgets utils	count=9
arg	for a qstyle ||| standard_pixmap	count=1
function	handle cell ||| cell	count=1
arg	[arg_1] name ||| [arg_2] [arg_1]	count=2
function	callback function immediately after ||| advance callback	count=1
class	dock (same as setexpanded ||| dock	count=1
function	runtime environment variable ||| runtime env	count=2
class	source and ||| edit widget	count=1
function	table and :class orange ||| orange to	count=1
function	cursor [function_1] [function_2] ||| cursor [function_1] [function_2]	count=8
arg	actions ||| actions	count=1
class	add ||| edit widget	count=1
function	returns whether ||| is	count=1
class	the widget ||| qt widget	count=1
arg	channel name ||| channel	count=1
function	the input line ||| input line	count=2
function_arg	show and [arg_2] ||| [arg_2] [function_1]	count=3
function	[function] fixed string ||| [function] fixed	count=1
function	invalidate ||| invalidate	count=1
class	baseschemeannotation) to the scheme ||| scheme edit	count=1
arg	in view ||| view row_indices	count=1
function	schemenode ||| node	count=1
arg	upstream [arg] ||| node [arg]	count=2
function	help [function_2] ||| [function_2] [function_1]	count=1
function	native [function_2] ||| [function_2] [function_1]	count=8
arg	element ||| element	count=1
class	tool [class_2] ||| [class_2] [class_1]	count=3
function	the averages ||| averages	count=1
class	the tool [class_2] ||| [class_1] [class_2]	count=3
class	if the rule ||| rule	count=2
class	:class widgetsscheme instance to ||| widget manager	count=1
arg	scheme from stream and ||| stream	count=1
arg	of distribution ||| axis	count=1
arg	serialize obj using format ||| obj	count=1
arg	node processing_state ||| node	count=1
module	creates a ||| utils plot	count=1
function	from ||| drag	count=1
function	[function_1] size ||| [function_2] [function_1]	count=3
class	the scheme ||| scheme edit widget	count=2
arg	size policy [arg_2] ||| [arg_2] hint [arg_1]	count=1
class	a tooltip ||| tooltip	count=1
function	all links for ||| links	count=1
class	in ||| owplot	count=1
function	qaction for help ||| help action	count=1
function	tab at ||| tab tool	count=1
function	create the ||| create	count=2
class	source and sink nodes ||| widget	count=1
arg	adding ||| force_replace	count=1
function	pythonw ||| pythonw	count=1
function_arg	[function_1] precomputed ||| [function_1] matrix [arg_2]	count=1
class	if zooming in otherwise ||| zoomable graphics view	count=1
function	style's standard icon ||| standard icon	count=2
class	a ||| editor	count=1
arg	menupage) with name ||| name	count=1
module	all ||| widgets utils	count=1
function	reload the current file ||| reload	count=1
function	a disjoint set ||| disjoint set	count=2
class	for the item ||| item	count=1
function	a category with ||| category	count=1
module	updates ||| widgets	count=1
function	for drawing a shadow ||| shadow	count=1
function	selects all points in ||| add selection	count=1
module	return all source ||| canvas utils	count=1
function	and modified [function_2] ||| [function_2] [function_1]	count=3
function	a qrectf ||| row rect	count=1
function	a tool tip if ||| add tool tip	count=1
function	max [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] adding a ||| [function_1] scheme links [arg_2]	count=2
function	[function_1] [function_2] ||| [function_1] processing state [function_2]	count=2
function	fragments for ||| pixmap fragments	count=1
function_arg	update the [arg_2] ||| [arg_2] [function_1]	count=3
function	triangle using current ||| triangle	count=1
arg	sink_node if ||| sink_node	count=1
function	set ||| set filter reg	count=1
function	[function_1] changed ||| [function_2] [function_1]	count=3
class	the widget where hover/move ||| bar widget	count=1
function	set the regular ||| set filter reg exp	count=1
module	of :attr theme_name ||| widgets utils	count=1
arg	box with controls ||| widget box	count=2
function	model for the ||| model	count=2
function	[function_1] content ||| [function_2] [function_1]	count=1
function	the input [function_2] ||| [function_2] [function_1]	count=2
module	given a preview ||| preview	count=1
function	in a flattened ||| flattened	count=1
arg	ancestor [arg] is upstream ||| [arg]	count=1
class	the ||| links	count=1
class	sink nodes channels ||| widget	count=1
module	modules source ||| registry	count=1
class	and sink nodes ||| links edit	count=1
module_class	sure to [class_2] ||| [module_1] [class_2]	count=2
module	file and return ||| canvas	count=1
class	tab ||| tab bar widget	count=1
function	compute confusion [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] [arg_2] ||| canvas document paged menu [function_1] page [arg_2] icon	count=1
function_arg	of button widget ||| of button	count=1
class	lines ||| plot	count=1
function	list the parameters of ||| parameters	count=1
function_arg	[function_1] pattern ||| [function_1] [arg_2]	count=3
function_arg	from a [arg_2] ||| [function_1] [arg_2]	count=1
arg	level setting ||| zoom_level	count=1
function_arg	[function_1] value ||| [function_1] [arg_2]	count=5
function	the completer ||| completer	count=1
arg	in array x ||| x	count=1
class	and ||| links edit widget	count=1
arg	constructing a standard ||| links_in links_out	count=1
arg	axis ||| axis	count=2
arg	table into a ||| table varlist idvarlist	count=1
function_arg	[function_1] [arg_2] shapes and sizes ||| [function_1] data [arg_2] label_data	count=2
function	sample ||| sample	count=1
class	the window rounded ||| frameless window	count=2
function	draw ||| draw	count=1
function_arg	[function_1] source (instance ||| [arg_2] [function_1]	count=1
function	have a valid ||| valid	count=2
function	start a drag from ||| start drag	count=1
class	the dock ||| dock widget	count=1
function	[function_1] to a ||| [function_2] [function_1]	count=1
function	table and :class orange ||| orange	count=1
function	the update ||| node update	count=1
arg	variable whose ||| variable lookup_table	count=1
class	arrow as a ||| arrow annotation	count=2
class	of the item ||| annotation	count=1
class	the arrow arrow ||| scheme arrow	count=1
function	parameters of the ||| parameters	count=1
function	reversed ||| reversed	count=1
function	point for loading ||| point	count=1
function_arg	add the [arg_2] ||| [function_1] name [arg_2]	count=4
arg	[arg_1] sums to ||| [arg_1] axis [arg_2]	count=1
function_arg	[function_1] the description ||| [arg_2] [function_1]	count=1
function	action for the ||| action	count=1
arg	outputsignal) and input ||| input	count=1
module	to show ||| widgets visualize	count=1
function	leaf ||| leaves	count=2
function	set quick ||| set quick	count=1
function	of :attr ||| update	count=1
module	selects ||| widgets utils	count=1
function	recalculate its [function_2] ||| [function_1] [function_2]	count=1
function	action role this is ||| action	count=1
function	recently accessed schemes ||| recent	count=1
function	disjoint set ||| disjoint set	count=1
module	return true if a ||| canvas	count=1
function	[function_1] point edit ||| [function_2] [function_1]	count=4
function	width ||| width	count=1
class	the arrow arrow ||| arrow annotation	count=1
function	a qwidget ||| widget	count=1
function	write scheme to a ||| to	count=1
function	[function_1] interaction ||| [function_1] [function_2]	count=4
class	set ||| quick menu	count=1
class	of the arrow ||| arrow annotation	count=1
arg	colors ||| color_data	count=1
function	adds a tool ||| add tool	count=1
module	if it ||| visualize utils	count=1
arg	x_axis ||| x_axis	count=1
function	lines in ||| lines	count=1
function	hierarchical clustering ||| matrix clustering	count=1
function	[function_1] palette ||| [function_1] [function_2]	count=1
function	the class information entropy ||| entropy	count=1
module	:attr ||| utils plot	count=4
function	[function_1] size ||| [function_1] [function_2]	count=3
function	value of :attr ||| update	count=1
function	transition animation ||| set animation	count=1
function	[function_1] changed (progressbarinit/finished) ||| [function_1] processing state [function_2]	count=1
module	return true if ||| canvas registry	count=1
module	return it's ||| canvas	count=2
module	graph ||| utils	count=1
function	fix size ||| fix size	count=1
function	model for the qt ||| model	count=1
module	current :attr ||| utils	count=1
arg	if heatmap ||| heatmap clear	count=1
module	the items ||| canvas canvas items	count=2
function	qaction for help ||| help	count=1
function	handle zoom event ||| handle zoom	count=1
arg	with color ||| color	count=1
function	applies inverse of ||| map	count=1
function	for ||| item for	count=1
function_arg	[function_1] in link ||| [function_1] [arg_2]	count=2
module	uniform ||| canvas canvas items	count=1
function	of button/action ||| column	count=1
class	creates an :obj ||| owplot gui	count=2
class	source property bindings appearing ||| property	count=1
function_arg	button for [arg_2] ||| [function_1] [arg_2]	count=4
class	tooltip with the same ||| tooltip	count=1
class	registry ||| registry	count=2
module_class	return [class_2] ||| [module_1] utils [class_2]	count=1
function	features ||| input features	count=1
arg	of links to ||| links	count=1
function	bounding box [function_2] ||| [function_2] [function_1]	count=3
function	triangle using current ||| draw triangle	count=1
function	delete the ||| delete	count=1
arg	data instances [arg_2] ||| [arg_2] [arg_1]	count=1
function	tmp anchor at ||| tmp anchor	count=1
module	the current :attr selection_behavior ||| widgets utils	count=1
module_class	arrow [class_2] ||| [module_1] arrow [class_2]	count=1
arg	pos ||| pos	count=2
function	schedule ||| schedule	count=1
function	compute the entropy of ||| entropy	count=1
module	fixed ||| canvas application	count=1
module	return the widget previously ||| canvas gui	count=1
function	[function_1] enabled state ||| [function_1] [function_2]	count=1
module	return all ||| canvas	count=1
class	default ||| new text annotation	count=1
class	of the arrow as ||| scheme arrow annotation	count=1
function	[function_1] grid ||| [function_2] [function_1]	count=2
class	set ||| dock widget	count=1
arg	the columns ||| columns	count=1
function_arg	matrix [arg_2] ||| [arg_2] [function_1]	count=1
module	current file ||| model	count=1
module	computation ||| widgets	count=1
class	the ||| links edit widget	count=1
arg	partitioning the cs distribution ||| cs	count=1
function	a helper ||| item tool tip helper	count=1
function_arg	[function_1] for mod_path ||| [arg_2] [function_1]	count=5
function	icon [function_2] ||| [function_2] [function_1]	count=2
function	a tool ||| tool	count=1
function	heatmap ||| heatmap	count=2
arg	set of checkable buttons ||| orientation buttons widget nomargin	count=1
class	from the page ||| menu	count=1
class	buttons to fit ||| resize tool	count=1
function	content [function_2] ||| [function_2] [function_1]	count=2
module	return target ||| canvas	count=1
function	progress bar ||| progress bar	count=1
module	for widget ||| widgets data	count=1
arg	transforms the value ||| value	count=2
function_arg	entry for mod_path ||| entry mod_path	count=2
class	the widget ||| bar widget	count=1
module	to show in ||| widgets visualize	count=1
