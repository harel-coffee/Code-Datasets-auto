function_arg	[function_1] value of ||| [arg_2] [function_1]	count=1
arg	[arg_1] with right ||| [arg_2] [arg_1]	count=3
function	the number ||| get	count=1
function	for multiplication with numpy ||| array wrap	count=1
function_arg	converts an [arg_2] ||| [arg_2] [function_1]	count=4
module	object or ||| io fits	count=1
module_class	this [class_2] ||| [module_1] [class_2]	count=2
class	this column [class_2] ||| [class_2] [class_1]	count=1
module	called by the ||| io fits	count=1
function	nousek ||| nousek	count=2
arg	iterable and/or text ||| cards copy	count=1
function	trap masked ||| use str for masked	count=1
class	a raw table ||| rec	count=1
function_arg	[function_1] the minor ||| [function_1] ticks [arg_2]	count=1
function	to convert ||| normalize	count=1
class	state ||| state	count=2
class	equation of state w ||| cdm	count=1
function	string formatted ||| string	count=2
function	find rows corresponding ||| find	count=1
function	call to a ||| receive call	count=1
module	the pedantic ||| io	count=1
class	data line ||| data	count=1
function_arg	[function_1] val1 and ||| [function_1] [arg_2]	count=1
arg	comment lines after ||| lines	count=1
class	listeners ||| notifier mixin	count=3
arg	from an ||| cls iterable value	count=2
function	and show it ||| show	count=1
function	~numpy ndarray to ||| to file like	count=1
function	an oversampled ||| oversample	count=2
function	variance ||| circvar	count=1
arg	as calling start, ||| text wrap attrib	count=1
function	handling [function] ||| convert [function]	count=2
arg	angle represented as ||| angle	count=1
module	in the header ||| io fits hdu	count=1
class	ipac table see ||| ipac header	count=1
function_arg	add subtract [arg_2] ||| [arg_2] [function_1]	count=1
function	for ||| make skyoffset cls	count=1
module	effective ||| cosmology	count=1
function	diff between ||| diff keyword	count=1
function	validation for ||| validation	count=1
function	from geodetic ||| from geodetic	count=2
function	of indentation levels the ||| get indentation	count=1
module	the coldefs ||| io	count=1
arg	rows a join_type of ||| join_type col_name_map	count=1
arg	[arg_1] lat ||| [arg_2] [arg_1]	count=4
class	location [class_2] ||| coordinates [class_2] [class_1]	count=1
arg	and no ||| input	count=1
module	into ||| coordinates	count=1
module	if the future ||| utils compat futures	count=1
arg	elements at the given ||| axis mode	count=1
module	this class ||| coordinates	count=1
class	[class] based on ||| [class]	count=1
class	when either model in ||| model meta	count=1
arg	j meaning icrs j2000 ||| resp_data	count=1
class	an ||| earth	count=1
function	the barycentric [function_2] ||| [function_2] [function_1]	count=2
function	a cosmology [function_2] ||| [function_1] [function_2]	count=3
function	center ||| center	count=1
module_class	compress the [class_2] ||| [module_1] [class_2]	count=2
class	modifies the ||| fitter	count=1
function	unit [function_2] ||| [function_1] [function_2]	count=4
module	initializes ||| compat	count=1
function	kpc corresponding [function_2] ||| [function_1] [function_2]	count=2
function_arg	parallel [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg] don't use ||| [arg]	count=1
class	returns the ||| xmlwriter	count=1
function_arg	[function_1] value ||| [arg_2] [function_1]	count=20
arg	specified package exists and ||| pkg default_cfg_dir_or_fn version	count=1
module	and its unit ||| units	count=1
function	[function_1] physical type ||| [function_2] [function_1]	count=11
class	to expected attribute class ||| frame attribute	count=1
arg	returns the scale ||| other	count=1
class	the in-order names of ||| base	count=1
module	propagation ||| nddata	count=1
function	fill [function_2] ||| [function_1] [function_2]	count=4
function	copy is not equivalent ||| copy	count=1
function	class ||| of site	count=2
function	file is currently in ||| get	count=1
function_arg	rename a [arg_2] ||| [function_1] keyword [arg_2]	count=1
function_arg	write method [arg_2] ||| [function_1] [arg_2]	count=2
arg	the given urls blocks ||| urls cache show_progress timeout	count=1
function	the scale of the ||| scale	count=1
class	file ||| xmlwriter	count=1
function	to a [function_2] ||| [function_1] [function_2] filename filter_level filter_origin	count=1
function	exclude any items in ||| exclude	count=1
function_arg	class for [arg_2] ||| [function_1] table [arg_2]	count=1
function	same physical type as ||| same physical type	count=1
function	filename or file-like object ||| file	count=1
class	fromhdulist(), but creates a ||| fits hdu	count=1
class	uri to ||| link	count=1
module	the wrapped function ||| io	count=1
function	method being intended for ||| message	count=1
class	tuple with ||| base	count=1
module	the field-specifier ||| io fits	count=1
function	units with the ||| get units with	count=2
arg	using ||| str_fmt	count=1
arg	input skycoord args ||| args	count=1
function	[function_1] [function_2] ||| [function_1] comoving [function_2]	count=3
module_class	the _basediff class ||| io fits base	count=2
function	[function_1] cutout ||| [function_2] [function_1]	count=2
module	column values as strings ||| io ascii	count=1
arg	the given urls blocks ||| urls cache show_progress	count=1
arg	jd2 from a time ||| time	count=1
function_arg	[function_1] different size ||| [function_1] 2d [arg_2]	count=2
function_arg	[function_1] this object's ||| [arg_2] [function_1]	count=1
module	from a file ||| io fits	count=1
arg	with a kernel ||| kernel	count=1
class	for each data line ||| base data	count=1
arg	initialize ||| names dtype n_cols	count=1
module	[module] file-like object ||| [module]	count=1
function	a string for ||| make transform	count=1
arg	simplest possible composite unit ||| max_depth include_prefix_units	count=1
function	of strings ||| string	count=1
function_arg	source [arg_2] ||| [arg_2] [function_1]	count=12
class	the compressed image format ||| comp image hdu	count=1
function	model fit ||| fit	count=1
arg	and exclude_names to ||| exclude_names	count=1
function_arg	worker [arg_2] ||| [function_1] [arg_2]	count=1
function	their bounding box ||| bounding box	count=2
module	of state at z=0 ||| cosmology	count=1
function	a filename ||| get file	count=1
module	underlying type of ||| votable	count=1
class	return a new compound ||| compound	count=1
module	futures in the given ||| compat futures	count=1
arg	[arg_1] some ||| [arg_2] [arg_1]	count=3
function	fits file ||| file	count=1
class	hdu that is ||| hdu	count=1
function	the mtype binding ||| declare	count=1
class	[class_1] cutoff ||| [class_1] [class_2]	count=2
module	frame ||| coordinates builtin_frames	count=2
arg	from the standard locations ||| data_name	count=2
function	object in a particular ||| jd12	count=1
class	of state w ||| w0wa	count=1
function_arg	binomial proportion [arg_2] ||| [arg_2] [function_1]	count=4
function	a string for ||| make transform graph	count=1
module	all the ||| io	count=1
module	the two arrays ||| io fits	count=1
module	the necessary ||| coordinates	count=1
module	futures in the given ||| utils compat futures	count=1
function	convert a set of ||| to pixel	count=1
function	units with the same ||| units with same	count=1
class	unknown ||| unknown	count=1
module	the type converters ||| io	count=1
arg	input row ||| row	count=1
arg	fitshdu ||| compress	count=2
arg	[arg] s , ||| s [arg]	count=3
function	for a ||| skyoffset cls	count=1
class	with the in-order ||| base	count=1
function	have a prefix ||| prefix	count=1
class	of the ||| time	count=1
function	24 ||| hour	count=1
class	daophot [class_2] ||| [class_2] [class_1]	count=1
class	the [class] must be ||| [class]	count=1
module	[module_1] the header ||| [module_1] [module_2]	count=1
arg	join_type of 'exact' ||| join_type	count=2
function	object from another ||| from	count=1
function	to unicode if a ||| to	count=1
class	a ||| representation	count=1
arg	image_r image_g and image_b ||| image_r image_g image_b	count=1
function_arg	write method of ||| write table	count=1
function_arg	[function_1] or dtd ||| [function_1] [arg_2]	count=4
module	list [module_2] ||| [module_1] [module_2]	count=1
class	resource ||| resource	count=3
function	to given ||| r to	count=1
function	the footprint ||| calc footprint	count=1
function_arg	[function_1] msg-tag ||| [arg_2] [function_1]	count=1
class	[class_1] header ||| [class_1] [class_2]	count=6
function	possibility of ||| itemsize	count=1
class	representation [class] name ||| [class]	count=1
function	generate a latex representation ||| repr latex	count=1
module	[module] may be ||| [module]	count=1
arg	one dimensional ||| x	count=1
module	more hdu need ||| io fits hdu	count=1
function_arg	grid parameters [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] (_header) to ||| [function_1] data [arg_2]	count=3
module	futures in the ||| utils compat futures	count=1
arg	equivalent semantics given by ||| datasum_keyword	count=1
class	a parameter ||| parameter	count=1
module	the items ||| io fits	count=1
function	unit ||| units	count=1
arg	key and ||| key default	count=1
function	format functions ||| format functions	count=4
arg	lines for special ||| lines depth	count=1
arg	[arg_1] right ||| [arg_2] [arg_1]	count=6
arg	a version ||| a b	count=1
module	the converter function ||| io ascii	count=1
function	pad the ||| pad	count=1
arg	astropy io fits ||| relax key	count=1
class	transformation ||| identity	count=1
function	this ||| of	count=1
function	pixel distances (in ||| pixel	count=1
function	"best" match ||| best match	count=2
function	alias long names ||| aliases	count=1
function	convolve ||| convolve	count=1
function	of a column ||| column	count=1
function	with a new ||| rename	count=1
arg	[arg_1] package and ||| [arg_2] [arg_1]	count=2
function	given format ||| format	count=1
class	are required by extension ||| extension	count=1
function	give [function_2] ||| [function_2] [function_1]	count=2
function	a new class ||| cls	count=1
arg	:class table object ||| table	count=1
function	classmethod to convert a ||| normalize keyword	count=1
module	parses [module] vo warning ||| [module]	count=1
arg	function or ||| function	count=3
module	affects scalars/sections also clears ||| extern configobj	count=1
function	list of [function_2] ||| [function_2] [function_1]	count=6
function	that index ||| from index	count=2
arg	longer than strlen and ||| input strlen	count=1
arg	to key in ||| key	count=1
function	[function_1] nousek ||| [function_2] [function_1]	count=10
function	kraft ||| mpmath kraft	count=1
function	decorator for ||| as decorator	count=1
function	[function_1] subclass of ||| [function_1] [function_2]	count=5
function	the data ||| get pkg data	count=3
module	coerces and/or verifies the ||| io	count=1
function	of warnings warn() calls ||| warnings	count=1
function	replaces the ||| doc	count=1
function	[function_1] header names ||| [function_1] [function_2]	count=1
function	function quantity class ||| quantity class	count=2
module	formatting table ||| table	count=1
function	for a ||| make skyoffset cls	count=1
module	equation of state w ||| cosmology	count=1
function	keyword [function_2] ||| [function_1] [function_2]	count=2
module	installed and ||| core	count=1
arg	converting ||| dtype	count=1
function	to draw only the ||| draw	count=1
module	clears comments ||| extern configobj	count=1
module	element ||| votable	count=6
function_arg	[function_1] minor ||| [arg_2] [function_1]	count=1
function	signature object for the ||| signature	count=1
function	index or zero ||| index of	count=1
module	the outputter attribute ||| io ascii	count=1
function	then ||| format	count=1
function	readable ||| get readable	count=1
module	but creates ||| io fits hdu	count=1
arg	in val1 and ||| val1 val2	count=1
function	[function_1] [function_2] ||| init [function_1] [function_2]	count=7
module	the ||| io	count=158
arg	fit data to ||| y z	count=3
function	multiplication ||| wrap	count=1
function	transformation between ||| transform	count=1
function	create a new ||| create	count=1
module	use ||| coordinates	count=1
function	integers ||| int	count=1
function	latitude [function] from ||| get [function]	count=1
class	state w r ||| w0wa	count=1
module	returning the ||| io fits	count=1
function	needed to pad the ||| pad	count=1
function	class that is the ||| cls	count=1
function	ut1 - ||| delta ut1	count=1
arg	val2 ||| val2	count=3
function	matches of ||| match to	count=1
module	the columns and ||| io	count=1
arg	raises unitserror ||| allow_dimensionless	count=1
module	[module] file-like ||| [module]	count=1
arg	if ||| f	count=1
function	[function_1] copy ||| [function_1] [function_2]	count=3
module_class	fits file ||| io fits file	count=1
function	a ccd ||| oir ccd	count=1
module	[module_1] lomb-scargle model ||| [module_1] [module_2]	count=2
module_class	[module_1] header __setitem__ ||| [module_1] [class_2]	count=6
function	spectral [function_2] ||| [function_2] [function_1]	count=1
arg	values along the given ||| values mask	count=1
function_arg	[function_1] corrections ||| [arg_2] [function_1]	count=2
function_arg	that index refers ||| from index idx	count=1
function	[function_1] a subclass ||| [function_1] bounding box [function_2]	count=1
function	burrows ||| burrows	count=2
class	that this ||| valid	count=1
arg	card [arg] existing ||| card [arg]	count=1
module	returned by [module] over an ||| io [module]	count=1
function	kpc corresponding to ||| kpc comoving per	count=1
class	to the compressed image ||| comp image hdu	count=1
function_arg	notification to [arg_2] ||| [arg_2] [function_1]	count=3
function	a numpy array ||| array	count=1
arg	fromhdulist(), but creates a ||| cls	count=1
module	retrieves the ||| utils	count=1
arg	shape to a dictionary ||| shape	count=1
class	verification ||| verify	count=1
arg	using various sets ||| read_kwargs format fast_reader	count=1
module	returns ||| utils xml	count=2
function	binary_ ||| binoutput	count=1
function	find all rows matching ||| find	count=1
arg	utility method ||| card_len	count=1
module	the field-specifier of ||| io	count=1
module	deviation using [module] median absolute ||| [module]	count=1
function_arg	[function_1] new unit ||| [function_1] [arg_2]	count=1
function	type of the ||| type	count=1
function	create a new ||| make skyoffset	count=1
module	default ||| time	count=1
module	given file or ||| utils	count=1
arg	given beautifulsoup ||| soup	count=1
arg	package [arg_2] ||| [arg_1] [arg_2]	count=1
module	for serializing in the ||| io	count=1
arg	specific mtype [arg_2] ||| [arg_2] [arg_1]	count=1
module	indices and return ||| table	count=1
class	number of coefficients in ||| polynomial model	count=1
arg	[arg_1] access url ||| [arg_1] [arg_2]	count=3
function	unless no further ||| read next	count=1
function	default ||| attr default	count=1
function	2d kernel ||| kernel arrays 2d	count=1
function	of a filename or ||| get file	count=1
module	a version ||| extern configobj	count=1
module	a new ~astropy units ||| units	count=1
function_arg	[function_1] of mtype ||| [arg_2] [function_1]	count=2
function	hour value ||| hours to	count=1
module_class	for [module_1] [class_2] ||| [module_1] [class_2]	count=4
module	if ||| fits hdu	count=2
function	poisson parameter ||| poisson	count=1
function	convert to ||| to	count=2
arg	value to any ||| value	count=1
function	class of ||| make skyoffset cls	count=1
arg	[arg] must all ||| [arg] join_type uniq_col_name	count=3
class	[class_1] [class_2] is used by ||| [class_1] [class_2] repr	count=1
class	creates ||| hdu	count=1
module	after the column ||| io	count=1
class	either model in ||| model meta	count=1
module	the pedantic setting ||| io votable	count=1
module	accesses an hdu ||| io fits hdu	count=2
function	position of earth parameters ||| earth position	count=1
function	in the given range ||| range	count=1
function	hour value ||| hours	count=1
function	[function_1] [function_2] ||| [function_2] arrays [function_1]	count=1
class	fitshdu fromhdulist(), but ||| hdu	count=1
module	in the first step ||| io ascii	count=1
module	specified by the ||| io	count=1
class	hdu that is not ||| hdu	count=1
function	dark energy ||| w0	count=1
module	the ||| visualization	count=1
module	use with ||| builtin_frames	count=1
arg	val [arg_2] ||| time get time fmt [arg_1] [arg_2]	count=7
function	critical density in ||| critical density	count=2
module	rotate ||| visualization wcsaxes	count=1
arg	a mask of ||| mask	count=1
module	in ||| xml	count=1
function	latitude of the ||| latitude	count=1
class	time the partial ||| predictor	count=1
function	format a [function_2] ||| [function_2] [function_1]	count=3
class	state at ||| w0wa cdm	count=1
function	stop the ||| stop	count=1
function	function to trap ||| use str for	count=1
function	type of ||| type	count=3
function	[function_1] axis ||| [function_1] [function_2]	count=2
function_arg	with the [arg_2] ||| [function_1] signature [arg_2]	count=1
function	python [function_2] ||| [function_1] [function_2]	count=1
function	a data file ||| pkg data	count=1
function	the coordinate package's docstring ||| graph docs	count=1
class	of this ||| nddata	count=1
function	the possible wildcarded subtypes ||| get mtype subtypes	count=1
module	it gets the decimal ||| io fits	count=1
module	specified value ||| extern configobj	count=1
function	class ||| of	count=1
arg	given value ||| value	count=3
module	fits file using the ||| io fits	count=1
module	a file on ||| fits	count=1
function	values [function_2] ||| [function_2] [function_1]	count=2
function	generates ||| transform	count=1
function_arg	column meta [arg_2] ||| [arg_2] [function_1]	count=1
class	proxy to ||| proxy	count=9
arg	on size ||| size	count=1
module	one parameter set ||| modeling	count=1
function	or not a custom [function_1] [function_2] to this model by ||| modeling model [function_2] [function_1]	count=1
arg	table most ||| table guess	count=2
arg	requires h5py <http //h5py ||| output path compression	count=1
arg	include_names and [arg_2] ||| [arg_2] [arg_1]	count=3
module	to convert ||| fits	count=1
arg	binding table the specified ||| declare	count=2
arg	fitshdu from a file ||| filename compress	count=1
module	default bounding_box limits ||| modeling	count=1
function_arg	[function_1] using ||| [function_1] [arg_2]	count=1
arg	base 10 ||| v	count=1
arg	with given name ||| name	count=1
arg	file-like object ||| fileobj endcard	count=1
module	write ||| io misc	count=1
function	specific class of ||| make skyoffset	count=1
function	unit and adjust physical ||| and adjust physical	count=1
function	returns a string ||| string	count=2
module	classmethod ||| io	count=1
module	a decorator [module_2] ||| [module_2] [module_1]	count=4
function	like fitshdu ||| fromfile	count=1
arg	left input/output [arg_2] ||| [arg_2] [arg_1]	count=1
module_class	[module_1] hdulist was ||| [module_1] [class_2]	count=6
function	the input ||| input	count=1
function	replace ||| replace	count=1
function	trap [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] column's ||| [arg_2] [function_1]	count=1
module	the first ||| io	count=1
arg	self [arg] ||| [arg]	count=1
class	overrides ||| time	count=1
function	[function_1] from header ||| [function_2] [function_1]	count=4
class	this item to ||| item	count=1
arg	a specific mtype to ||| mtype	count=1
function	registered units with the ||| units with	count=1
function	possible ||| possible	count=2
function	in which ||| in true	count=1
function	the inverse of ||| inverse	count=1
module	and return the contents ||| io	count=1
class	special ||| earth location attribute	count=1
module	the necessary units ||| coordinates	count=1
module	the same as the ||| io	count=1
function	fitshdu fromhdulist(), ||| fromfile	count=1
arg	cards to the ||| cards	count=1
function	number of ||| get	count=1
module	current configobj as ||| configobj	count=1
module_class	the card ||| io fits card	count=1
function	string ||| degrees to string	count=1
function	an oversampled ||| oversample 2d	count=1
function_arg	utc [arg_2] ||| [arg_2] [function_1]	count=2
function	the visual properties ||| ticklabel	count=1
module	physical unit ||| units	count=2
function	rotate ||| rotate	count=1
class	if the future ||| future	count=1
arg	namespace ||| namespace	count=2
class	column is for ||| column	count=1
function	class of origin ||| make skyoffset cls	count=1
function	equation of state ||| w0	count=1
module	generates a ||| coordinates builtin_frames	count=1
module	and minor axes ||| visualization wcsaxes	count=2
function	a new ||| make skyoffset cls	count=1
function	function but ||| function	count=1
function	data ||| data	count=14
arg	than strlen [arg_2] ||| [arg_2] [arg_1]	count=8
arg	axis ||| axis	count=4
module_class	[module_1] [class_2] are not defined ||| [module_1] [class_2]	count=2
arg	before [arg_2] ||| [arg_2] [arg_1]	count=2
arg	value to ||| value	count=1
arg	table [arg_2] ||| [arg_1] [arg_2]	count=5
function	frame ||| make skyoffset cls	count=1
class	this item to a ||| item	count=1
class	like ||| hdu	count=1
function	model [function] been assigned ||| [function] user	count=1
module_class	[module_1] hdulist ||| [module_1] fits hdu [class_2]	count=2
module	coordinates using a ||| coordinates	count=1
class	to search a header ||| header	count=1
function	[function_1] difference ||| [function_2] [function_1]	count=4
module	with the ||| io fits	count=1
arg	[arg] for ||| data_class [arg]	count=1
class	either model ||| model	count=1
function	contains html content see ||| html	count=1
function	long [function_2] ||| [function_1] [function_2]	count=1
function	astropy table ||| table	count=1
module	if the user requested ||| io fits	count=1
arg	are valid converters ||| col converters	count=1
function_arg	[function_1] [arg_2] ||| [function_1] val1 [arg_2]	count=3
arg	the standard locations for ||| data_name	count=2
arg	between this coordinate ||| other	count=1
module	configobj as a file ||| configobj	count=1
function_arg	[function_1] frequency ||| [function_1] [arg_2]	count=1
function	[function_1] column meta ||| [function_1] [function_2]	count=1
class	unit ||| function unit	count=3
module_class	[module_1] [class_2] ||| [module_1] base [class_2]	count=1
module	also ||| configobj	count=2
arg	an ||| key	count=1
function	verify that the value ||| verify	count=2
function	the alias long names ||| aliases	count=1
arg	representation of this frame's ||| new_representation in_frame_units	count=1
function_arg	utility [function_1] [arg_2] ||| [function_1] [arg_2] assume_regular_frequency	count=2
arg	join_type of ||| join_type col_name_map	count=1
class	file on ||| fits	count=1
function	the site [function_2] ||| [function_1] [function_2]	count=4
module	current samp ||| vo samp	count=1
module	a ||| io fits	count=6
function	site registry the ||| get site registry	count=2
class	object's ||| nddata array	count=1
module	to time a ||| utils	count=1
class	fix ||| masked column	count=1
arg	object from ||| cls	count=1
function	function but [function_2] ||| [function_2] [function_1]	count=2
function	then ||| doc	count=1
function	does a map ||| map	count=1
function	transformation between ||| get transform	count=1
arg	calls binding table the ||| declare	count=1
arg	multiply two ||| value operation	count=1
class	write the table ||| table	count=1
arg	binnings this is a ||| a bins range	count=1
arg	right ||| right	count=4
arg	and image_b ||| image_b	count=1
function	to noise ratio for ||| to noise oir	count=1
function	to be resized ||| flush resize	count=1
function	radians to [function_2] ||| [function_1] [function_2]	count=1
function	signature object ||| signature	count=1
class	of this object's data ||| nddata	count=1
class	fromhdulist(), but ||| fits	count=1
function	matches ||| match	count=5
module	the default behavior ||| time	count=1
function	besselian ||| besselian	count=1
function	parse ||| parse	count=6
function	update the 'checksum' ||| update	count=1
arg	data based ||| nrows config	count=2
module	on ||| fits hdu	count=2
module	affects scalars/sections also ||| extern	count=1
arg	represent that value ||| value	count=1
module	configobj instance and ||| configobj	count=1
class	[class_1] partial ||| [class_1] time [class_2]	count=1
function	make a ||| make	count=1
function	units with ||| units with	count=1
function	a copy of the ||| copy	count=1
arg	key and return ||| key default	count=1
class	stretch ||| inverted log stretch	count=1
function	linear ||| linear	count=1
function	spectral [function_2] ||| [function_1] [function_2]	count=1
class	of bytes that this ||| valid	count=1
arg	a numpy array ||| array	count=1
arg	to the given row ||| row	count=1
function	to the specified ||| no transdata	count=1
arg	[arg_1] a function ||| [arg_2] [arg_1]	count=3
arg	function ||| data_class function force	count=2
function	we create ||| create	count=1
arg	the given model ||| model	count=1
class	injects [class] and ||| [class]	count=1
function	its indices to ||| indices	count=1
module	[module] since ||| [module]	count=1
function	[function_1] valid url ||| [function_1] [function_2]	count=1
function	grid parameters ||| frequency grid	count=1
module	from the given ||| utils	count=1
arg	the given data ||| data	count=1
module_class	[module_1] table ||| [module_1] hdu [class_2]	count=1
module	clears ||| configobj	count=1
function	at least one massive ||| has massive	count=1
function	generates a summary ||| summary	count=1
module	the new ||| io fits hdu	count=1
class	of the sorted array ||| sorted array	count=1
function	a proper [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] meta ||| [function_2] [function_1]	count=2
function	latex [function_2] ||| [function_2] [function_1]	count=6
function_arg	a reader [arg_2] ||| [function_1] [arg_2]	count=1
arg	position ||| position	count=1
arg	[arg_1] a specified ||| [arg_2] [arg_1]	count=2
function	[function] format object ||| [function]	count=2
function_arg	file-like object [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] type of ||| [function_1] table [arg_2]	count=3
module	fits file ||| fits	count=7
module	of ||| utils xml	count=2
module	append [module] file if ||| [module]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] lsq ssr [arg_2]	count=3
module	[module_1] hdu ||| [module_1] [module_2]	count=12
function	as running or ||| running or	count=1
arg	among one or more ||| colnames engine unique	count=1
function	kraft burrows and ||| mpmath kraft burrows	count=2
function	stokes ||| stokes	count=1
class	equation of ||| w0wa	count=2
function	create ||| make	count=1
function	retrieves the contents of ||| contents	count=1
function_arg	change a [arg_2] ||| [arg_2] [function_1]	count=1
class	logarithmic ||| log unit	count=1
function	[function_1] returns ||| [function_2] [function_1]	count=6
function	of skycoord coordinates into ||| skycoord	count=1
function	remove the given ||| remove	count=1
module	a field-specifier to ||| io fits	count=1
arg	obj of ||| obj	count=1
arg	z the hubble parameter ||| z	count=4
module	to time ||| utils	count=1
function	its tables and ||| and	count=1
function	columns ||| columns	count=4
class	fromhdulist(), ||| fits	count=1
function	bscale/bzero from ||| scale info	count=1
arg	for given dates ||| jd1 jd2 return_status	count=1
arg	object of this class ||| cls	count=1
function	[function_1] difference in ||| [function_1] [function_2]	count=4
function	add the checksum and ||| add	count=1
function	retrieves the ||| get file	count=1
arg	key and return the ||| key default	count=1
function	from [function_2] ||| [function_1] [function_2]	count=3
arg	in output ||| table output	count=1
function	for the axis label ||| axislabel	count=1
function	validation ||| validation	count=1
function	add_catalog but the ||| by url	count=1
function	string for use with ||| make transform	count=1
arg	method standard ||| private_key xmlrpc_addr	count=1
module	here because [module] and ||| [module]	count=1
module	class ||| builtin_frames	count=2
function	for dark energy ||| ode	count=1
arg	a file-like object ||| fileobj endcard overwrite	count=1
function	with ||| array prepare	count=2
arg	[arg_1] package ||| [arg_1] [arg_2]	count=2
function	calculate a sidereal time ||| sidereal time	count=1
class	for ||| model meta	count=1
arg	fromhdulist(), but creates ||| cls	count=1
class	resource_ ||| resource	count=1
function	class for this ||| convert col for	count=1
function	header block ||| block	count=1
function	read ||| read	count=5
function	getsubscribedclients ||| get subscribed clients	count=1
module	the outputter attribute ||| io	count=1
function_arg	[function_1] copy ||| [arg_2] [function_1]	count=2
function	astropy source ||| astropy source	count=2
arg	using bscale/bzero ||| type option bscale bzero	count=1
module	use with the coordinate ||| builtin_frames	count=1
module	get an hdu ||| fits hdu	count=2
function	creates a ||| fromfile	count=1
function	mime ||| mime	count=1
function	convert a set ||| to pixel	count=1
arg	metadata key and ||| key	count=1
module	also affects scalars/sections also ||| configobj	count=1
function	dictionary with the information ||| info	count=1
arg	state ||| state	count=1
function	will write to ||| filebytes	count=1
function_arg	[function_1] row from ||| [function_1] [arg_2]	count=3
arg	[arg_1] or after ||| [arg_2] [arg_1]	count=1
module_class	[module_1] [class_2] (ascii=none means unspecified but ||| [module_1] [class_2] determine formats cls format	count=4
arg	along a [arg] ||| [arg] out	count=2
function	special ||| convert	count=3
arg	deprecate a _renamed_ function ||| old_name new_name since arg_in_kwargs	count=1
function_arg	[function_1] the out ||| [function_1] [arg_2]	count=3
function	add a value ||| add	count=1
class	model classes ||| model meta	count=2
class	initialize the header ||| rdb header	count=1
class	of dark ||| w0wa cdm	count=1
function	[function_1] source distribution ||| [function_1] [function_2]	count=2
function_arg	[function_1] hdu ||| [arg_2] [function_1]	count=1
arg	from the ||| cls	count=1
arg	left and ||| left	count=2
arg	if [arg] ||| [arg]	count=6
function	[function_1] polygon ||| [function_2] [function_1]	count=1
class	value for the ||| base	count=1
function	to format the unit ||| unit	count=1
function	specified ||| to	count=2
arg	by taking the ||| x_range y_range	count=2
function	not all hdus ||| hdus	count=1
arg	scale try ||| scale	count=1
arg	by using bscale/bzero ||| type option bscale bzero	count=1
module	the default writing ||| io ascii	count=1
class	stretch ||| sinh stretch	count=1
arg	position from a ||| position mode	count=1
function	to xml ||| to xml	count=2
function_arg	type as [arg_2] ||| [arg_2] [function_1]	count=1
function	is the table ||| table	count=1
class	ipac table see ||| ipac	count=1
module	scalars/sections also clears comments ||| extern	count=1
function_arg	delete given [arg_2] ||| [function_1] [arg_2]	count=3
function	and the worker ||| queue manangement worker	count=1
module	[module_1] using the ||| [module_1] [module_2]	count=1
module	that may contain ||| io	count=1
function_arg	write out [arg_2] ||| [function_1] [arg_2]	count=1
function	proportion ||| proportion	count=1
arg	memmap object if any ||| output_verify verbose closed	count=1
module	contain ||| fits	count=1
function	to value in physical ||| to physical	count=1
function	with function ||| function	count=1
function	replaces ||| format	count=1
function	[function_1] float radians ||| [function_1] [function_2]	count=2
function_arg	the specified [arg_2] ||| [arg_2] [function_1]	count=2
arg	with [arg] ||| checksum checksum_keyword [arg]	count=2
function	entry [function_2] ||| [function_2] [function_1]	count=1
class	scalars/sections also clears ||| section	count=1
module	read the hdu ||| io fits	count=1
function	upon a unit change ||| unit	count=1
module	saving [module] since ||| [module]	count=1
module	[module_1] of the ||| [module_1] [module_2]	count=4
arg	the 'sep' parameter ||| h precision pad sep	count=1
module	cosmology have at ||| cosmology	count=1
arg	a known observatory/site ||| cls site_name	count=1
function	file-like ||| get file	count=1
function	and set [function_2] ||| [function_2] [function_1]	count=1
module	to [module] hdulist, indexed ||| [module]	count=1
function_arg	input [arg_2] ||| [function_1] [arg_2]	count=4
module_class	[module_1] image ||| [module_1] comp [class_2]	count=1
function_arg	list [arg_2] ||| [function_1] value [arg_2]	count=1
function	registry ||| registry	count=2
function	precession matrix from one ||| precession matrix	count=1
function_arg	[function_1] this is ||| [arg_2] [function_1]	count=2
function	matches any ||| match header	count=3
arg	[arg] of the ||| [arg]	count=2
class	registry ||| registry	count=5
function	reading [function_2] ||| [function_1] [function_2]	count=5
function_arg	[function_1] of obj ||| [arg_2] [function_1]	count=4
function	[function_1] a package ||| six meta path importer [function_1] [function_2] fullname	count=1
function	value of ||| value	count=1
class	as this [class_2] ||| [class_2] [class_1]	count=2
function	list of all ||| find	count=1
function	[function_1] html ||| [function_1] [function_2]	count=1
function	notification ||| notification	count=1
function_arg	subclass of [arg_2] ||| [arg_2] [function_1]	count=3
arg	the desired ||| func args kwargs varargs	count=1
arg	standard locations [arg_2] ||| [arg_1] [arg_2]	count=5
function	possible wildcarded subtypes ||| get mtype subtypes	count=1
function	ut1 - ||| ut1	count=1
arg	method ||| private_key recipient_id msg_tag message	count=1
arg	your [arg] as ||| [arg]	count=1
function	can have ||| can have	count=2
module	file on ||| io	count=1
module	for [module] constant ||| [module]	count=1
module	formatting table columns ||| table	count=1
class	creates a ||| fits	count=1
module	and ||| coordinates	count=2
class	is ||| base coordinate frame	count=1
arg	given key [arg_2] ||| [arg_2] [arg_1]	count=1
class	unit (e g 'length') ||| function unit	count=1
function	a list of integers ||| int list	count=1
arg	[arg_1] around some ||| [arg_2] [arg_1]	count=1
function	positive index or ||| positive index	count=1
function_arg	ut1-utc [arg_2] ||| [function_1] [arg_2]	count=2
arg	msg-tag ||| msg_tag	count=1
arg	set the unit by ||| unit	count=1
module	other units ||| units	count=1
function	and b ||| combine a b	count=1
class	return an ||| earth location	count=1
function_arg	a diff [arg_2] ||| [arg_2] [function_1]	count=2
function	value can ||| can	count=1
function	units (or the special ||| convert	count=3
module	index_of ||| hdu	count=1
module	a specific class ||| coordinates	count=1
module	to convert ||| io	count=1
module	[module_1] using the ||| [module_2] [module_1]	count=1
function	slices for ||| slices	count=1
class	return an ||| earth	count=1
function_arg	response to [arg_2] ||| [function_1] msg_tag [arg_2]	count=3
function	with ||| graph	count=1
class	cutout array ||| cutout2d	count=1
function	the first [function_2] ||| [function_1] [function_2]	count=4
function	median [function_2] ||| [function_2] [function_1]	count=1
arg	the fitted and constrained ||| fps	count=1
function	warnings warn() calls ||| warnings	count=1
module	the futures ||| futures	count=1
function	this frame was ||| is frame	count=1
function	as a ||| as	count=2
function	a decorator ||| as decorator	count=1
arg	names [arg_1] [arg_2] ||| names [arg_1] [arg_2]	count=6
function	is linked to ||| tied	count=1
function	in which ra ||| in true	count=1
module	checks ||| nddata	count=1
function	name ||| of	count=1
function	for a specific ||| make	count=1
module	like ||| io fits	count=1
module	decorated ||| utils	count=1
class	list of strings ||| list	count=1
arg	offsets with one offset ||| offsets	count=1
function	string for use with ||| graph	count=1
function	model fit ||| periodic fit	count=1
function	convert [function_2] ||| [function_1] [function_2]	count=4
function	package ||| package	count=1
class	either model in ||| compound model meta	count=1
function	return a generator that ||| str vals	count=1
function	a decimal hour value ||| hours	count=1
arg	that the value ||| value min max	count=2
class	a stretch ||| power dist stretch	count=2
class	check that the ||| function	count=1
function	a list of all ||| find	count=1
function	votable ||| votable	count=3
function	file-like object ||| get	count=1
function	from a list ||| from list	count=1
class	image ||| image hdu	count=1
arg	index ||| index	count=2
module	at the ||| io	count=4
class	for the ||| base	count=1
arg	mtype to a ||| mtype	count=1
arg	of the [arg] ||| [arg] right keys	count=1
class	the location for the ||| earth location	count=1
function	writable file-like object suitable ||| to writable	count=1
function	[function_1] writer ||| [function_2] [function_1]	count=1
arg	table the specified mtype ||| mtype	count=2
module	lookup the :class ||| io votable	count=1
arg	a field-specifier ||| cls	count=1
function	verify that the ||| verify	count=2
function	the unit ||| unit	count=4
function	transverse ||| transverse	count=1
module	the decimal ||| io fits	count=1
module	the referenced object must ||| io	count=1
module	or ||| fits	count=2
arg	pixel to world coordinates ||| pixel	count=1
module	file ||| utils xml	count=2
function	with a functionquantity ||| array	count=1
function	merge column ||| merge col	count=2
function_arg	[function_1] if ||| [function_1] mode [arg_2]	count=3
class	initialize the header ||| header	count=3
function	density in ||| density	count=1
function	returns a string ||| to string	count=2
class	[class] and ||| [class]	count=1
class	compressed image ||| comp image hdu	count=1
function	ascii table columns ||| ascii	count=1
function	allclose that [function_2] ||| [function_2] [function_1]	count=2
function	kpc corresponding ||| kpc proper per	count=1
module	format for the ||| io ascii	count=1
function	set the visual properties ||| set ticklabel	count=1
module	fromhdulist(), but ||| io fits hdu	count=1
module	of the ||| io votable	count=30
arg	[arg_1] specified ||| [arg_2] [arg_1]	count=2
class	list of strings with ||| list	count=1
module	the two ||| io fits	count=1
function	view as ||| view	count=1
module	minor axes in ||| wcsaxes	count=2
arg	[arg_1] a local ||| [arg_1] [arg_2]	count=4
arg	of fields are ||| fields	count=1
function	[function_1] [function_2] for ||| [function_1] [function_2]	count=8
arg	specified value ||| value	count=1
function	new row before ||| insert row	count=1
arg	interval in bins ||| success bins range	count=2
module	comments ||| configobj	count=1
class	cylindrical ||| cylindrical	count=1
function	reference ||| getitem	count=1
module	hdu's data part ||| hdu	count=1
module	deal ||| function	count=1
arg	confidence interval [arg_2] ||| [arg_2] [arg_1]	count=1
module_class	the [class_2] ||| [module_1] hdu table [class_2]	count=1
function	has enough space to ||| check free space in dir	count=1
class	from ||| hdu	count=1
arg	col str_vals ||| cols	count=1
class	compressed ||| comp	count=1
module	required to fix the ||| io	count=1
arg	[arg] on ||| [arg]	count=2
function	__str__ ||| format str	count=1
function_arg	return [function_1] [arg_2] ||| visualization wcsaxes wcsaxes [function_1] transform [arg_2]	count=7
class	the point s ||| representation	count=1
function	string to a ||| string	count=1
function	get slices for ||| slices	count=1
function	of the absorption distance ||| abs distance	count=2
arg	a data ||| data	count=2
function	from ||| generate	count=1
function	has no [function] ||| [function]	count=1
function	retrieving indexed rows in ||| iloc	count=1
arg	the [arg] ||| [arg] min	count=1
function	bind ||| bind receive	count=3
arg	bic ||| n_params n_samples	count=2
function_arg	physical type [arg_2] ||| [arg_2] [function_1]	count=1
module	convert a ||| io	count=1
module	summary of the ||| io fits	count=1
function	~numpy ndarray to ||| array to file	count=1
function	check that the ||| array prepare	count=1
function_arg	[function_1] file-like object ||| [arg_2] [function_1]	count=3
module	the normal ||| io fits	count=1
class	the file ||| xmlwriter	count=1
arg	may contain ||| cls	count=1
function	space to ||| space	count=1
function	data file ||| get pkg data	count=1
function	a ||| skyoffset cls	count=2
function	set the ||| set format	count=1
arg	this class for a ||| cls	count=1
module	clear configobj instance and ||| extern configobj	count=1
arg	check that the value ||| value min	count=2
function	array to an array ||| to	count=1
module	against the appropriate votable ||| io	count=1
function	call to ||| call	count=1
module	samp ||| samp	count=17
arg	or after an ||| after replace	count=1
arg	the sky offset frame ||| framecls	count=1
function	[function_1] write method ||| [function_2] [function_1]	count=2
arg	value ||| cls value	count=2
arg	x [arg_2] ||| [arg_2] [arg_1]	count=6
function_arg	column object [arg_2] ||| [function_1] [arg_2]	count=3
function	set the [function_2] ||| [function_1] [function_2]	count=3
module_class	the [class_2] ||| [module_1] votable votable [class_2]	count=1
function	[function_1] unit ||| [function_1] [function_2]	count=5
function	power ||| validate power	count=1
module	for use with ||| builtin_frames	count=1
function	the currently running ||| running	count=1
module	[module] custom write ||| [module]	count=3
function	use with the coordinate ||| transform	count=1
arg	lines for special ||| lines	count=1
function	currently connected ||| connected	count=1
class	calculate [class] datasum card ||| [class]	count=1
arg	make sure model ||| model	count=1
function	[function_1] deprecated this ||| [function_2] [function_1]	count=6
arg	that value ||| value	count=1
function	of perigee of ||| of perigee	count=1
arg	like fitshdu ||| cls filename	count=1
function	is called at ||| array	count=1
function	the size of ||| size	count=1
arg	an option for outputting ||| names funcs	count=1
arg	angle ||| angle	count=2
function	source distribution or ||| source	count=1
function	class of ||| skyoffset	count=1
function_arg	column definitions [arg_2] ||| [function_1] [arg_2]	count=1
module	get an [module_2] ||| [module_1] [module_2]	count=2
arg	the values in row_map ||| row_map	count=1
function	of the table ||| table as needed	count=1
module	future ||| compat futures	count=4
module	class ||| coordinates builtin_frames	count=4
function	around a supplied ||| search around	count=2
function	notification ||| receive notification	count=1
class	of the ||| representation	count=2
function	angular [function_2] ||| [function_2] [function_1]	count=3
function	the inverse ||| inverse	count=2
function	one in which ||| in	count=1
function	string formatted ||| degrees to string	count=1
module	iterate through ||| table	count=1
class	by ||| earth	count=1
arg	perform a join [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	unicode [arg_2] ||| [arg_2] [function_1]	count=3
class	that ||| section	count=1
module	decimal hour value and ||| coordinates	count=1
function	by querying ||| of	count=1
function	a number split ||| split	count=1
function	[function_1] copy ||| [function_2] [function_1]	count=3
function	unit change ||| unit	count=1
function	a 3-tuple or 2-tuple ||| tuple	count=1
module	the custom ||| io ascii	count=1
arg	valid converters ||| col converters	count=1
class	this ||| location	count=1
function	specific class ||| skyoffset cls	count=1
function	as running [function_2] ||| [function_1] [function_2]	count=2
module	a string ||| coordinates	count=1
function	[function_1] columns ||| [function_2] [function_1]	count=2
function	[function_1] hours ||| [function_1] [function_2]	count=5
class	associated with the executor ||| executor	count=1
function	origin frame ||| skyoffset	count=1
function	writable ||| writable	count=1
module	operation that accesses an ||| io fits	count=1
function	[function_1] cache directory ||| [function_1] [function_2]	count=4
arg	fields are unique ||| fields	count=1
class	is a cartesianrepresentation with ||| cartesian representation	count=1
function	can deal with ||| array	count=1
arg	exclude_names [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	a minimum [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	to an hour ||| to dms h	count=1
module	unit parameters ||| units	count=1
function	[function_1] representation ||| [function_2] [function_1]	count=6
function	2d [function_2] ||| [function_2] arrays [function_1]	count=1
module	describing [module_2] ||| [module_1] [module_2]	count=2
arg	a file if ||| file	count=1
arg	calculated for ||| when override_datasum blocking	count=1
function	comoving [function] distance ||| comoving [function]	count=1
arg	range n ||| n	count=1
module_class	[module_1] transform ||| [module_1] [class_2]	count=2
class	but ||| fits	count=1
module	similar to list ||| fits	count=3
class	for subsequent use ||| base inputter	count=2
function	pixel [function] ||| proj plane pixel [function]	count=1
module	get an [module_2] ||| [module_2] [module_1]	count=2
class	of the signature ||| signature	count=1
arg	before or after an ||| before after replace	count=1
class	an object ||| location	count=1
arg	poisson count rate ||| n b cl	count=2
module	the appropriate ||| io	count=2
function	break up long ||| format long	count=1
function	bin width ||| knuth bin width	count=2
arg	left and right ||| left right	count=3
arg	requested julian date ||| jd algorithm	count=1
class	by this values_ ||| values	count=1
module	the ||| builtin_frames	count=2
arg	a specified platescale ||| platescale	count=1
class	hdu data ||| valid hdu	count=1
function	the physical ||| get physical	count=1
arg	to mark ||| name since message alternative	count=1
function	longitude [function_2] ||| [function_1] [function_2]	count=2
arg	of ||| table	count=1
function	a specific class of ||| make	count=1
class	calculate [class] ||| [class]	count=2
function	a string ||| degrees to string	count=1
function	hash for a file ||| hash	count=1
arg	this method [arg] called ||| [arg]	count=1
function	value ||| value	count=5
class	used for cross-referencing ||| coo sys	count=1
function	[function_1] have arbitrary ||| [function_1] [function_2]	count=4
arg	size based on size ||| size	count=1
module	fits [module_2] ||| [module_2] [module_1]	count=1
arg	[arg_1] val2 as ||| [arg_2] [arg_1]	count=3
module	given the ||| io	count=1
arg	and exclude_names ||| exclude_names	count=1
function	[function_1] corresponding to ||| [function_1] comoving [function_2]	count=1
function	[function_1] comoving ||| [function_1] [function_2]	count=1
module	of the positions it ||| io votable	count=1
module	file is ||| utils xml	count=1
function_arg	match for [arg_2] ||| [function_1] [arg_2]	count=1
arg	current instance ||| data copy_data	count=1
function	transverse comoving [function_2] ||| [function_2] [function_1]	count=2
class	a file on ||| fits hdu	count=1
module	field-specifier to ||| fits	count=1
function	for ||| skyoffset cls	count=1
arg	class--equivalent [arg] __name__ ||| [arg]	count=1
function_arg	discretize [arg_2] ||| [function_1] center 2d [arg_2]	count=4
module	the count of ||| io	count=1
module	the locations ||| io fits	count=1
function	new class that is ||| make skyoffset	count=1
class	the bst in the ||| bst	count=1
class	state ||| cdm	count=2
module	parses [module] vo ||| [module]	count=1
function	[function_1] content ||| [function_2] [function_1]	count=4
arg	one for a y ||| y	count=1
module	for a specific class ||| coordinates builtin_frames	count=1
function	this frame was created ||| is frame attr	count=1
function	d itervalues() ||| itervalues	count=1
function	apparent position ||| apparent body position	count=1
module	after the ||| io ascii	count=1
arg	ufunc can ||| context	count=1
module	in this [module] group ||| [module]	count=1
function	matrix from [function_2] ||| [function_2] [function_1]	count=3
arg	angle [arg_2] ||| coordinates rotation matrix [arg_1] axis [arg_2]	count=1
arg	estimated or analytically derived ||| log_likelihood	count=1
function	cosmology ||| get cosmology	count=1
arg	a unitswarning about ||| standard_name format_decomposed	count=1
class	dark ||| w0wa cdm	count=3
function	of the data files ||| data	count=2
class	legendre ||| legendre2d	count=1
function	display [function_2] ||| [function_1] [function_2]	count=2
function_arg	diff [arg_2] ||| [function_1] attr [arg_2]	count=2
arg	ufunc can deal ||| context	count=1
function	two polar motion components ||| polar motion	count=1
function	for use with ||| transform	count=1
arg	that the value ||| value	count=4
function	is currently ||| running	count=1
function	extract ||| extract	count=1
arg	position [arg] the ||| index vals [arg]	count=1
function_arg	given [arg_2] ||| [function_1] indices [arg_2]	count=2
function_arg	[function_1] key and ||| [function_1] [arg_2]	count=1
class	tuple with the ||| representation	count=1
arg	to ||| cls	count=2
function	frame ||| skyoffset cls	count=1
module	this cosmology have at ||| cosmology	count=1
module	check the ||| io fits	count=1
module	installed and it ||| core	count=1
function	create a new ||| skyoffset cls	count=1
function	origin frame ||| make skyoffset cls	count=1
function	transform this ||| transform	count=1
class	converter ||| converter	count=1
arg	a and b ||| b	count=1
function	metadata merge ||| merge	count=1
function	origin to ||| r	count=1
function_arg	[function_1] frame ||| visualization wcsaxes wcsaxes [function_1] transform [arg_2]	count=3
function	from an existing ||| init from	count=1
module	that may contain a ||| io fits	count=1
function	writable file-like object suitable ||| convert to writable	count=1
module	that also ||| configobj	count=1
function	a float or none ||| float or none	count=1
arg	urls blocks until ||| urls	count=1
function	adjust ||| adjust	count=1
class	after rather than before ||| commented	count=1
function	used for reallocating ||| resize strategy	count=1
module	is handled in the ||| io	count=1
module	the given list ||| utils	count=1
class	object's ||| nddata	count=1
function	and nousek ||| nousek	count=2
arg	card to [arg_2] ||| [arg_1] useblanks bottom [arg_2]	count=1
function	data to ||| data	count=2
class	is a quantity with ||| quantity frame	count=1
function_arg	specified [arg_2] ||| [function_1] [arg_2]	count=1
class	this [class_2] ||| [class_2] [class_1]	count=16
module_class	compressed [class_2] ||| [class_2] [module_1]	count=4
function	fit at ||| periodic fit	count=1
function	set whether the tick ||| set ticklabel	count=1
module	if the ||| io fits	count=4
function	apparent position ||| get apparent body position	count=1
class	component ||| earth location	count=3
function	class for ||| site	count=1
arg	for the package ||| package	count=2
module	a new ||| coordinates builtin_frames	count=1
class	t ||| w0wa cdm	count=1
function	to a ||| array to file like	count=1
arg	[arg_1] metadata objects ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] row from ||| [arg_2] [function_1]	count=3
function	into one in which ||| in	count=1
class	by ||| location	count=1
function	adjust physical [function_2] ||| [function_2] [function_1]	count=1
arg	given data ||| data	count=1
module	port ||| vo samp	count=1
arg	[arg_1] of x ||| [arg_1] [arg_2]	count=1
arg	fitshdu ||| cls filename compress	count=1
function	ut1 - [function_2] ||| [function_2] [function_1]	count=1
function	two ||| two	count=1
function	registry the first ||| registry	count=1
function	fix ||| fix value	count=1
function	[function_1] node associated ||| [function_2] [function_1]	count=1
class	w ||| cdm	count=1
arg	[arg] this ||| [arg]	count=3
arg	lines for ||| lines depth	count=1
function_arg	[function_1] given index ||| [arg_2] [function_1]	count=1
arg	[arg_1] exclude_names to ||| [arg_1] [arg_2]	count=1
function	numpy ~numpy ndarray ||| array	count=1
arg	dimension ((y_low y_high), (x_low ||| factor	count=1
function	filename for the data ||| get pkg data filename	count=1
function	the decorated ||| format	count=1
module	table columns ||| table	count=1
module	[module] delimiter and ||| [module]	count=1
module	the listener's ||| io fits	count=1
function	binomial proportion and confidence ||| binom proportion	count=1
module	ndarray [module] the ||| [module]	count=1
function	initializes ||| init	count=1
function	by name ||| of site	count=1
class	part ||| corrupted	count=1
module	value that may ||| io	count=1
module	be given as keyword ||| utils	count=1
function	decode ascii strings to ||| to	count=1
arg	state of the ||| state	count=1
class	columns ||| like hdu	count=1
function	density in grams per ||| density	count=1
class	from value in logarithmic ||| log	count=1
arg	wcs ||| wcs	count=1
arg	the value calculated for ||| blocking	count=1
module_class	[module_1] [class_2] ||| [module_1] votable votable [class_2]	count=4
arg	from lines ||| lines	count=1
function	returns a writable file-like ||| to writable	count=1
class	special ||| coordinate attribute	count=1
class	function for ||| base	count=1
arg	left [arg_2] ||| [arg_1] [arg_2]	count=1
arg	[arg_1] with right ||| [arg_1] [arg_2]	count=3
function_arg	groups for [arg_2] ||| [function_1] by [arg_2]	count=2
function_arg	[function_1] coordinate transformation ||| [arg_2] [function_1]	count=1
function	trap [function_2] ||| [function_1] [function_2]	count=2
function	indent ||| indent	count=1
arg	coldefs ||| columns	count=1
function	a votable field ||| votable	count=1
function	add a ||| add	count=5
function	upon a unit ||| unit	count=1
function	data cache directory ||| download cache	count=2
function	[function] elements ||| iter [function]	count=1
function	data object ||| data	count=1
module	size of the ||| io votable	count=2
function	based on kraft ||| mpmath kraft	count=1
function	convert ||| convert	count=7
arg	urls blocks until ||| urls cache	count=1
class	a file ||| fits	count=1
class	a stretch ||| hist eq stretch	count=1
arg	value ||| value missing	count=1
module	configobj as a file ||| extern configobj	count=1
function	unit summary docs in ||| iter unit summary	count=1
function	[function_1] pixel ||| [function_1] [function_2]	count=1
arg	exclude_names ||| exclude_names	count=1
function	style regions [function] ||| footprint to [function]	count=3
module	for all coordinates ||| coordinates	count=2
function_arg	mantissa [arg_2] ||| [arg_2] [function_1]	count=1
function	it ||| doc	count=1
function	find ut1 - ||| ut1	count=1
arg	mtype ||| mtype	count=6
arg	or multiply two kernels ||| kernel value	count=1
module	read ||| vo samp	count=1
function	[function_1] value ||| [function_1] [function_2]	count=4
arg	to hold the data ||| nrows	count=1
function	warn or ||| warn or	count=2
module	currently ||| utils xml	count=2
arg	copy is ||| copy	count=1
module	[module] that have ||| [module]	count=3
function	same physical [function_2] ||| [function_1] [function_2]	count=2
arg	unit by ||| unit	count=1
function	dtype for a list ||| dtype	count=2
function_arg	meta [arg_2] ||| [arg_2] [function_1]	count=1
function	convert ||| to	count=3
function	its mantissa and ||| mantissa	count=1
arg	in val1 to jd1 ||| val1	count=1
arg	[arg] to ||| [arg]	count=3
module	the domain see ||| io	count=2
function	a power to ||| power	count=1
arg	value does not change ||| value	count=1
arg	[arg] larger ||| array_large array_small [arg]	count=2
function	that the ||| array	count=1
function	change ||| change	count=1
module	format for the type ||| io	count=1
function	copy ||| copy	count=13
function_arg	frame from [arg_2] ||| [arg_2] [function_1]	count=3
class	stretch ||| inverted power dist stretch	count=1
class	named ||| irreducible	count=1
module_class	dictionary detailing information about [module_1] [class_2] within any associated file ||| [module_1] [class_2]	count=2
class	of the dark energy ||| w0wa cdm	count=1
class	hdulist ||| hdulist	count=6
arg	the current instance ||| data copy_data	count=1
function	points to indices ||| indices	count=1
arg	((y_low y_high), (x_low ||| factor	count=1
function	a map operation ||| map	count=1
function	appropriate line ||| line	count=1
module	classmethod to convert a ||| io fits	count=1
module	true when the ||| io	count=1
function	footprint of the image ||| calc footprint	count=1
function	possibility of unicode ||| itemsize	count=1
function	ndarray to a ||| array to	count=1
class	the location for ||| earth location	count=1
function	a ||| graph	count=1
module	generates ||| coordinates builtin_frames	count=2
function	[function_1] image ||| [function_2] [function_1]	count=1
function	the bases of ||| bases	count=1
function	length ||| convert to and validate length	count=1
function	of groups in the ||| groups	count=1
arg	the fractional remainder ||| factor divisor	count=1
class	fitshdu fromhdulist(), ||| fits hdu	count=1
function	hash of a column ||| hash	count=1
module	on the bscale ||| io fits hdu	count=1
class	two model [class_2] ||| [class_1] [class_2]	count=4
function	source used for ||| reference	count=1
function	bind a specific ||| bind receive	count=3
module	return true if the ||| utils	count=1
function	downloads multiple files in ||| download files in	count=1
class	for each data ||| base data	count=3
function	histogram bin width ||| bin width	count=1
function	the first [function_2] ||| [function_2] [function_1]	count=4
function	calculate the apparent ||| get apparent body	count=1
function	the visual properties for ||| ticklabel	count=1
module	each of ||| votable	count=1
arg	name and access url ||| name url	count=1
function	[function] for ||| [function]	count=6
function	change a ||| change	count=1
class	the pivot ||| wpwa cdm	count=1
arg	index ||| index name rename_duplicate	count=1
function	and then formats it ||| format doc	count=1
function	on a matplotlib ||| on	count=1
function	a valid mime ||| mime	count=1
class	for propagation ||| nduncertainty	count=1
module	fitshdu fromhdulist(), but ||| hdu	count=1
function_arg	get groups [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	input value ||| input value	count=1
function	iterate through possible ||| possible	count=1
module	[module] since they ||| [module]	count=1
function	or directory is ||| is	count=1
module_class	the votable specification that [module_1] [class_2] uses ||| [module_1] [class_2] version	count=1
module	default behavior ||| time	count=1
module	a decorator that defines ||| extern bundled	count=1
function	grid parameters ||| grid	count=1
function	this [function] the table ||| group [function]	count=1
module	output the ||| io	count=1
function	name of ||| dtype info name	count=1
arg	observed counts ||| sigma background	count=1
class	checks if the ||| nduncertainty	count=1
class	a ||| fits hdu	count=4
module	a file on ||| fits hdu	count=1
arg	for a y ||| y	count=1
module	a ||| coordinates	count=5
function	[function_1] stokes axis ||| [function_2] [function_1]	count=1
module	the header with ||| io fits	count=1
function	[function_1] a column ||| [function_2] [function_1]	count=1
class	clears ||| section	count=1
arg	ndarrays ||| arrs	count=1
function	get the [function_2] ||| [function_1] [function_2]	count=7
function	all of the data ||| data	count=2
function	set of catalog ||| to catalog	count=1
class	write summary information about ||| info	count=1
module_class	the table [class_2] ||| [module_1] [class_2]	count=2
function_arg	[function_1] specified frame ||| visualization wcsaxes wcsaxes [function_1] transform [arg_2]	count=3
arg	a given size ||| size	count=1
module	the user requested it ||| io fits	count=1
function	of the cutout array ||| cutout	count=1
class	interval ||| interval	count=1
function	role ||| role	count=1
function	center of the ||| center	count=2
arg	is a ||| a bins range	count=1
class	[class_1] [class_2] ||| [class_2] [class_1] match header cls header	count=3
arg	included in output ||| output	count=1
function	get a signature object ||| signature	count=1
arg	[arg_1] [arg_2] must all ||| table vstack [arg_2] [arg_1]	count=1
function	of the data ||| get pkg data	count=2
class	may ||| card	count=1
module	the ||| io fits scripts	count=1
function	class for ||| of	count=1
function	[function_1] density ||| [function_2] [function_1]	count=5
function	_lookup_by_attr_factory, but ||| lookup by	count=1
function	retrieves a data ||| get pkg data	count=1
function	[function_1] meta ||| [function_1] [function_2]	count=2
function	class of ||| skyoffset cls	count=1
function	decorator ||| as decorator	count=2
function	version of get ||| get	count=1
arg	value where ||| value	count=1
function	new class that is ||| cls	count=1
function	barycentric [function_2] ||| [function_1] [function_2]	count=2
arg	[arg] to ||| cls [arg]	count=2
arg	a solar system body ||| body time ephemeris	count=1
function	unix wildcard pattern ||| out subfmt	count=1
arg	in the given unit ||| unit	count=1
class	of the coordinate ||| base coordinate	count=1
function_arg	copy those [arg_2] ||| [function_1] [arg_2]	count=1
module	be called when the ||| utils	count=1
module	tuple ||| coordinates	count=2
class	return ||| base	count=1
function	result ||| result	count=1
arg	angle around [arg_2] ||| coordinates rotation matrix [arg_1] [arg_2]	count=1
function	[function_1] indices from ||| [function_1] interpolate [function_2]	count=1
class	the native in-memory datatype ||| converter	count=1
function	of the cutout ||| cutout	count=1
function	or file-like ||| file	count=1
function	unit ||| unit	count=7
class	the unit ||| unit	count=3
function	strings to ||| a to	count=1
function	reading image [function_2] ||| [function_2] [function_1]	count=4
arg	mtype to ||| mtype	count=1
function_arg	[function_1] a card's ||| [function_1] keyword [arg_2]	count=1
arg	coordinate transformation ||| fromsys tosys transform	count=1
class	of the current mapping ||| mapping	count=1
function	a ||| get	count=1
function_arg	call to [arg_2] ||| [arg_2] [function_1]	count=3
function	function to trap masked ||| use str for masked	count=1
function	the long [function_2] ||| [function_1] [function_2]	count=1
arg	sky offset frame for ||| framecls	count=1
arg	but creates a fitshdu ||| cls filename compress	count=1
function	the main ||| main	count=1
arg	other object ||| other	count=1
arg	axis ||| coord_type coord_wrap	count=1
module_class	[module_1] [class_2] that are not defined ||| [module_1] votable [class_2] extra	count=1
class	diff ||| diff	count=1
module	string with [module] ||| [module]	count=3
function	[function_1] booleans ||| [function_2] [function_1]	count=4
arg	keyword value ||| keyword	count=1
function	prefix ||| prefix	count=2
function	on kraft [function_2] ||| [function_1] [function_2]	count=8
arg	an array with a ||| array	count=1
function	string ||| to string	count=3
module	a version of ||| extern configobj	count=1
arg	keywords and ||| header	count=1
function	integrand [function_2] ||| [function_2] distance [function_1]	count=1
function	arbitrary ||| arbitrary	count=1
module	that is the ||| builtin_frames	count=1
module	of the ||| io fits hdu	count=2
module	if the user requested ||| io fits hdu	count=1
function	number of indentation levels ||| get indentation	count=1
arg	to uppercase ||| cls	count=1
module	function or method takes ||| vo samp	count=1
module	compress the ||| io fits hdu	count=1
arg	[arg_1] to end ||| [arg_1] [arg_2]	count=1
function	ticks are ||| ticks	count=1
function_arg	[function_1] mtype ||| [function_1] notification [arg_2]	count=1
function	list of resources ||| resources	count=1
function	the coordinate ||| transform graph	count=1
module	value and ||| coordinates	count=1
function	computes the circular variance ||| circvar	count=1
arg	[arg_1] axis ||| [arg_2] [arg_1]	count=4
arg	supplied value ||| value	count=2
function	too long ||| long	count=1
function	temporary file [function] which should ||| tmp [function]	count=1
function	to draw ||| draw	count=1
arg	fastbasic to output a ||| output	count=1
module	an xml ||| xml	count=1
function	one file/buffer ||| writedata direct copy	count=1
function_arg	[function_1] specific mtype ||| [function_1] receive message [arg_2]	count=1
arg	[arg_1] val2 must ||| [arg_2] [arg_1]	count=1
function	a field-specifier ||| keyword	count=1
module	the string ||| io fits	count=1
function	hdf5 file ||| table hdf5	count=1
function	split it [function_2] ||| [function_2] [function_1]	count=2
function	utility [function] ||| [function]	count=3
arg	of val1 and val2 ||| val1 val2	count=1
function	self return [function_2] ||| [function_2] [function_1]	count=2
function	the elevation ||| theta	count=1
function	one catalog of given ||| catalog	count=1
class	from the graph ||| graph	count=1
function_arg	[function_1] the other ||| [function_1] [arg_2]	count=6
module	fromhdulist(), but creates a ||| io	count=1
class	as [class] ||| err [class]	count=3
function	of the decorated object ||| format	count=1
module	value of the ||| io	count=1
function	show it [function_2] ||| [function_1] [function_2]	count=2
function	valid mime content ||| mime content	count=1
class	if the ||| nduncertainty	count=1
function	grid parameters from a ||| frequency grid	count=1
module	the type ||| io	count=1
class	the data ||| hdu	count=1
function	determine the dtype ||| dtype	count=1
module	the size of the ||| io votable	count=1
function	return an object ||| site	count=1
class	either model in the ||| model	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=510
function	draw the ||| draw	count=1
module	an entire ||| utils	count=1
arg	card's ||| oldkeyword newkeyword force	count=1
module	of rows in the ||| io fits	count=1
module	comments and ||| extern configobj	count=1
class	moffat ||| moffat2d	count=2
class	representation [class] ||| [class]	count=1
module	in the ascii format ||| io fits	count=2
function	create a ||| skyoffset cls	count=1
function	a specific ||| skyoffset	count=1
module_class	~astropy modeling [class_2] ||| [module_1] [class_2]	count=6
module_class	table [class_2] ||| [module_1] table [class_2]	count=1
class	dict [class] ||| sky [class]	count=1
function	angular ||| angular	count=2
function	break up long string ||| long image	count=1
module	strings ||| io ascii	count=1
function	single hdu from the ||| hdu	count=1
class	to spherical polar coordinates ||| unit spherical	count=1
function	string-like ||| string	count=1
function_arg	[function_1] [arg_2] ||| [function_1] angle [arg_2]	count=4
function	class's __getitem__, such that ||| get copy on getitem shim	count=1
class	a field-specifier to uppercase ||| card	count=1
function_arg	file-like object [arg_2] ||| [function_1] mode [arg_2]	count=1
arg	calls binding table ||| declare	count=1
class	raw table ||| rec	count=1
module	hdulist ||| fits hdu	count=2
function	a new ||| skyoffset cls	count=1
function	deepcopy ||| deepcopy	count=1
function	a new ||| skyoffset	count=1
arg	of the function to ||| weights x	count=1
function	the data files in ||| data	count=2
arg	a given ||| cls	count=1
function	float ||| float	count=2
module	use with ||| coordinates builtin_frames	count=1
class	replace string values ||| base	count=1
function	fromhdulist(), but creates ||| fromfile	count=1
module	of ||| cosmology	count=3
function	by a given ||| lookup by	count=1
module	verifies the object *p* ||| io	count=1
class	image format and to ||| image	count=1
module	field-specifier to uppercase ||| io	count=1
class	r t a ||| w0wa cdm	count=1
function	for the data ||| pkg data	count=1
function	the extent of ||| extent	count=1
module	just copy the ||| io	count=1
function	object ||| file	count=1
function	index ||| index of	count=2
arg	[arg_1] specified keys ||| [arg_2] [arg_1]	count=2
module	the column name line ||| io	count=1
module	format ||| units format	count=2
module_class	strings for each ||| io ascii base	count=1
function	angular [function_2] ||| [function_1] [function_2]	count=2
function	a data file from ||| data	count=1
module	the domain defined by ||| io	count=1
function	energy equation ||| w0	count=1
class	hdu that is not ||| valid hdu	count=1
arg	[arg_1] end ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] binom proportion [arg_2]	count=3
function	with the coordinate ||| graph	count=1
class	in-order ||| base	count=1
module	of this object's data ||| nddata	count=1
module	object of this ||| coordinates	count=1
module	mapping parameter names ||| modeling	count=3
function	signature ||| signature	count=1
arg	[arg_1] hdu ||| hdulist setitem [arg_1] [arg_2]	count=1
function	use with the coordinate ||| transform graph	count=1
function	all [function] in ||| iter [function]	count=1
function	but the catalog is ||| catalog by	count=1
function	parallel from the given ||| parallel	count=1
function	get grid parameters ||| get frequency grid	count=1
function	is *not* ||| supports correlated	count=1
class	in this table ||| table base hdu	count=2
function_arg	[function_1] of mtype ||| [function_1] [arg_2]	count=2
class	at the [class] redshift zp ||| [class]	count=1
arg	or file-like object ||| fileobj	count=1
module	data portion of the ||| io fits	count=2
function	from the z-axis ||| rho	count=1
function	pad ||| pad	count=1
function_arg	for this [arg_2] ||| [arg_2] [function_1]	count=1
function	names ||| type names	count=1
function	polygon ||| polygon	count=1
module	classmethod ||| io fits	count=2
module	either the simple ||| io fits hdu	count=1
function	the data cache directory ||| download cache	count=1
function	time [function_2] ||| [function_2] [function_1]	count=1
function	list of registered units ||| units	count=1
module	of only irreducible units ||| units	count=1
module_class	dictionary detailing information about [module_1] [class_2] any associated file ||| [module_1] hdu [class_2] hdu fileinfo	count=2
function	[function_1] box we ||| [function_2] [function_1]	count=4
function	file against a schema ||| schema	count=1
class	time object in the ||| time astropy time	count=1
function	stop ||| stop	count=1
module	bulk of the ||| io fits	count=1
class	unit ||| unit base	count=4
function	signal to ||| signal to	count=2
module	column values as strings ||| ascii	count=1
arg	a [arg] ||| [arg] item	count=2
module	of the coosys_ element ||| io votable	count=1
class	from ||| base column format	count=1
function_arg	[function_1] and val2 ||| [function_1] val1 [arg_2]	count=1
module	depending on the ||| io	count=1
module	after the column name ||| io	count=1
arg	keywords with [arg] ||| checksum checksum_keyword [arg]	count=2
module	id_ [module] ||| [module]	count=1
class	the progress bar ||| utils progress bar	count=2
function	is a valid mime ||| mime	count=1
function	also generally the ||| abbrev	count=1
function	from another [function_2] ||| [function_2] [function_1]	count=1
arg	provides a local ||| show_progress remote_timeout	count=1
function_arg	table writer [arg_2] ||| [function_1] [arg_2]	count=1
function	barycentric [function_2] ||| [function_2] [function_1]	count=2
class	a ||| fits	count=2
arg	the given model ||| cls model	count=1
function	return lines ||| lines	count=1
arg	of col ||| col	count=1
arg	convert 3 arrays image_r ||| image_r	count=1
function	warn or raise ||| warn or raise	count=3
class	[class_1] data ||| [class_2] [class_1]	count=7
function_arg	the worker [arg_2] ||| [function_1] [arg_2]	count=1
arg	output a line with ||| output	count=1
function	constellation ||| get constellation	count=1
class	tuple with ||| base representation	count=1
module	using ||| misc	count=1
function_arg	[function_1] metadata key ||| [function_1] [arg_2]	count=1
module	a new class that ||| builtin_frames	count=1
function	[function_1] density ||| [function_1] [function_2]	count=5
arg	col_name_map ||| col_name_map	count=2
function_arg	[function_1] [arg_2] ||| [function_1] hms [arg_2]	count=5
module	units ||| units format	count=1
function	the coordinate ||| transform	count=1
class	a ||| pool	count=1
function	the coordinate ||| make	count=1
module	uppercase ||| io fits	count=2
function_arg	[function_1] the desired ||| [arg_2] [function_1]	count=7
module	in the xml ||| io	count=1
module	the file is ||| utils xml	count=1
function	we create [function_2] ||| [function_1] bounding box [function_2]	count=2
module	index_of ||| fits hdu	count=1
function	index of ||| index	count=1
class	class ||| earth location	count=2
function	fit a function to ||| fit	count=1
function	update the ||| update column	count=1
module	the end of the ||| io	count=1
module	a file ||| io fits	count=1
function_arg	[function_1] val1 ||| [arg_2] [function_1]	count=2
arg	some [arg_2] ||| [arg_2] [arg_1]	count=2
function	value to an integer ||| int	count=1
module_class	computes on-sky ||| coordinates sky coord	count=1
function	hash of a ||| hash	count=1
function	same sort order as ||| sort	count=1
function	delete_catalog [function_2] ||| [function_1] [function_2]	count=1
arg	a field-specifier to uppercase ||| cls	count=1
module	just copy the ||| io fits	count=1
class	datetime object ||| time datetime	count=1
function	rename ||| rename	count=2
function	function quantity [function_2] ||| [function_1] [function_2]	count=3
function_arg	[function_1] lines ||| [function_1] header [arg_2]	count=1
function	gets the site registry ||| site registry	count=1
function	self return ||| time	count=1
module	but creates ||| io fits	count=1
function	the decorated object ||| format doc	count=1
module_class	the :class [class_2] ||| [module_1] [class_2]	count=2
class	scalars/sections also ||| section	count=1
function	coosys_ ||| coosys	count=1
function_arg	[function_1] given unit ||| [function_1] [arg_2]	count=4
function_arg	bin width [arg_2] ||| [arg_2] [function_1]	count=1
arg	fast [arg] ||| t y [arg]	count=1
function	core records [function] which ||| [function]	count=1
function_arg	[function_1] given key ||| [arg_2] [function_1]	count=2
function	parameter for dark matter ||| odm	count=1
arg	for a given ||| cls	count=1
module_class	in the [class_2] ||| [module_1] votable votable [class_2]	count=1
module	get ||| vo samp	count=1
function_arg	jd2 from [arg_2] ||| [function_1] [arg_2]	count=6
arg	try to ||| format_spec	count=1
module_class	dictionary detailing information about [module_1] [class_2] hdu within any associated ||| [module_1] hdu [class_2] hdu fileinfo	count=3
class	class for ||| base	count=1
class	daophot header ||| daophot header	count=2
module	check the ||| io fits hdu	count=1
function	precession matrix [function_2] ||| [function_2] [function_1]	count=2
arg	:class table object that ||| table	count=1
class	[class_1] data line ||| [class_2] [class_1]	count=1
function	return [function_2] ||| [function_2] [function_1]	count=3
module_class	the info ||| io votable info	count=1
module	[module_1] fits block ||| [module_1] [module_2]	count=4
arg	display a single ||| fout	count=1
arg	processes ||| processes	count=1
function	worker ||| manangement worker	count=2
function	light [function_2] ||| [function_2] [function_1]	count=2
arg	mask ||| mask	count=1
arg	and returns the compositetransform ||| fromsys tosys	count=1
function	bayesian information [function_2] ||| [function_1] [function_2]	count=2
class	of ||| w0wa	count=3
function	[function_1] volume ||| [function_1] [function_2]	count=2
module	as the ||| io fits	count=1
module	the ||| io fits	count=129
module	the file ||| utils xml	count=1
module	[module] given *args ||| [module]	count=3
module	fromhdulist(), but ||| hdu	count=1
function	for ||| skyoffset	count=1
function	read and parse ||| read	count=2
function	give ||| is	count=1
function	info_ ||| info	count=1
class	time ||| time	count=2
function	column format object from ||| from	count=1
module_class	[module_1] image ||| [module_1] hdu [class_2]	count=1
function	and the worker ||| worker	count=1
class	image data as opposed ||| image	count=1
function	hdf5 file this ||| hdf5	count=1
function	information [function_2] ||| [function_1] [function_2]	count=2
module	chain return the ||| io fits	count=1
module	xml file against a ||| xml	count=1
module	override the ||| io ascii	count=2
function	the table ||| table	count=2
class	raise vdtvaluetooshorterror('jed') ||| too short	count=1
arg	that the ufunc ||| obj context	count=1
class	behavior ||| time	count=1
module	the given file ||| io	count=1
function_arg	[function_1] given data ||| [arg_2] [function_1]	count=1
arg	nearest ||| catalogcoord nthneighbor	count=2
function	polar motion [function_2] ||| [function_1] [function_2]	count=1
function	transverse comoving ||| comoving	count=1
class	from a file on ||| fits hdu	count=1
function	of the data files ||| get pkg data	count=2
module	match the ||| io fits	count=1
function_arg	[function_1] class1 ||| [arg_2] [function_1]	count=2
module	the domain ||| io	count=3
class	for the unit ||| unit	count=1
arg	package and provides the ||| package	count=1
class	partial function for ||| predictor	count=1
function_arg	all the [arg_2] ||| [arg_2] [function_1]	count=1
class	box sequence against the ||| box	count=1
function	read the ||| read	count=1
module	directly either ||| hdu	count=1
module	a string for use ||| coordinates builtin_frames	count=1
class	diff ||| base diff	count=1
arg	for ||| cls	count=1
module	true if the ||| utils	count=1
function	at z=0 ||| w0	count=1
function_arg	[function_1] table ||| [arg_2] [function_1]	count=4
function	time to mjd ||| mjd	count=1
function	position of [function_2] ||| [function_2] [function_1]	count=4
module	field-specifier to uppercase ||| io fits	count=1
module	returning the count of ||| io	count=1
function	indices ||| indices	count=4
module	files the ||| io fits	count=1
function	[function_1] [function_2] ||| six meta path importer [function_1] [function_2] fullname	count=2
function	the absorption [function_2] ||| [function_1] [function_2]	count=2
function	get the first ||| get first	count=3
function	the bitpix value ||| bitpix	count=1
function	same physical [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] a file ||| [function_1] [function_2] filename filter_level filter_origin	count=1
function	a specific ||| make	count=1
function	if a config file ||| unedited config file	count=1
function_arg	[function_1] other object ||| [function_1] [arg_2]	count=4
arg	the column name [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
module	vo ||| vo	count=8
module	implement ||| fits	count=1
module_class	of [module_1] [class_2] element ||| [module_1] [class_2]	count=3
function	type as the ||| type	count=1
module_class	[module_1] data ||| [module_1] [class_2]	count=4
function	specific class ||| make skyoffset	count=1
module_class	the fits [class_2] ||| [module_1] [class_2]	count=4
module	the number ||| utils xml	count=1
function	radians [function_2] ||| [function_2] [function_1]	count=4
arg	unit in ||| unit	count=1
arg	call ||| recipient_id msg_tag	count=1
arg	a bit ||| field recformat	count=1
function	a data file from ||| get pkg data	count=1
arg	[arg_1] and val2 ||| [arg_2] [arg_1]	count=4
class	the in-order ||| base representation	count=1
class	model in the operation ||| model	count=1
function	corresponding ||| per	count=2
arg	in table converted to ||| table	count=1
module	a list [module_2] ||| [module_2] [module_1]	count=1
class	tuple with the ||| base representation	count=1
class	[class_1] hdus ||| [class_1] [class_2] match header cls header	count=3
class	new [class] ||| [class]	count=1
module	given as keyword ||| utils	count=1
arg	a [arg] ||| cls [arg]	count=2
module	also affects scalars/sections ||| extern configobj	count=1
arg	by ||| cls	count=1
class	a header ||| header	count=3
module	hdu need ||| hdu	count=1
function	bounding_box defined ||| create bounding box	count=1
function	for curvature ||| ok	count=1
module	verifies the ||| io	count=1
module	that ||| extern configobj	count=9
arg	python operator (represented by ||| mcls operator left right	count=1
function	rename a column ||| rename column	count=3
function	[function_1] and nousek ||| [function_2] [function_1]	count=10
function	x y [function] index ||| [function]	count=1
module	else ||| constants	count=1
module	on the ||| io	count=2
module	with the comment regexp ||| io	count=1
function	copy those which ||| copy	count=1
arg	[arg_1] val2 format ||| [arg_2] [arg_1]	count=1
module_class	[module_1] listeners list ||| [module_1] [class_2]	count=2
function	of state at z=0 ||| w0	count=1
function	meta data ||| meta	count=1
function	frame was created with ||| is frame	count=1
class	[class_1] [class_2] ||| [class_2] model [class_1]	count=2
class	the in-order names of ||| representation	count=1
class	column is ||| column	count=1
module	for serialization in the ||| io	count=1
module	the header/data ||| io	count=1
function	[function_1] string-like ||| [function_2] [function_1]	count=1
arg	[arg_1] [arg_2] ||| time [arg_1] [arg_2]	count=6
function_arg	contained [arg_2] ||| [arg_2] [function_1]	count=3
arg	a method to ||| method	count=1
function	the distance ||| distance	count=1
function	directly [function_1] [function_2] ||| [function_1] [function_2]	count=2
arg	fromhdulist(), but ||| cls filename	count=1
module	validates an xml file ||| utils xml	count=1
class	registry ||| site registry	count=1
module	a fits file and ||| fits	count=1
module	all the ||| io fits	count=1
module	file against the appropriate ||| io	count=1
class	location of ||| earth location	count=1
function	cache directory [function_2] ||| [function_2] [function_1]	count=1
function_arg	add a key ||| add key	count=2
class	time in ||| time	count=1
class	[class_1] this unit ||| [class_2] [class_1]	count=1
class	the coordinate ||| base coordinate	count=1
function	[function_1] the physical ||| [function_2] type [function_1]	count=3
function	[function_1] information criterion ||| [function_2] [function_1]	count=2
class	a header ||| daophot header	count=1
module	strings ||| ascii	count=2
module	wrap the ||| io	count=1
function	the mime content type ||| content type	count=1
function	the data files in ||| get pkg data	count=2
function	set pm [function_2] ||| [function_1] [function_2]	count=1
module_class	[module_1] signature ||| [module_1] [class_2]	count=1
class	cartesianrepresentation ||| cartesian representation	count=1
function	[function_1] header names ||| [function_2] [function_1]	count=1
module_class	[module_1] file ||| [module_1] [class_2] version	count=1
function	polar motion ||| pm	count=1
function	scale [function_2] ||| [function_1] [function_2]	count=1
arg	against the given model ||| model	count=1
module	given indices and return ||| table	count=1
arg	fitshdu from ||| filename compress	count=1
class	return ||| dict	count=1
function	enable logging of ||| enable exception logging	count=1
function	matches any extension ||| match header	count=2
class	deal with a functionquantity ||| function	count=1
function	comoving kpc [function_2] ||| [function_2] [function_1]	count=3
function_arg	grid parameters [arg_2] ||| [function_1] [arg_2] assume_regular_frequency	count=3
function_arg	[function_1] confidence interval ||| [arg_2] [function_1]	count=1
function	allclose that returns ||| not allclose	count=1
arg	of different size ||| array_1 array_2	count=1
arg	fitshdu ||| filename	count=1
function	model at the given ||| model	count=1
function	slice from self ||| from slice	count=2
class	the ||| function quantity	count=2
arg	given urls blocks until ||| urls cache show_progress timeout	count=1
function_arg	[function_1] float ||| [arg_2] [function_1]	count=4
function	ignore sigint until ||| ignore sigint	count=1
module	comments and ||| extern	count=1
arg	card [arg] ||| card [arg] after	count=1
arg	convert a string ||| s	count=1
function	fix ||| fix	count=2
module	the coosys_ element used ||| io	count=1
arg	table table ||| cls votable table	count=1
function	coordinate package's docstring ||| make transform graph docs	count=1
module	of the data ||| io votable	count=2
function	create ||| skyoffset	count=1
function_arg	[function_1] processes ||| [arg_2] [function_1]	count=3
function	exists ||| filename	count=1
function	2d kernel arrays ||| kernel arrays 2d	count=2
function_arg	get grid [arg_2] ||| [function_1] [arg_2] assume_regular_frequency	count=3
arg	perform a join [arg_1] [arg_2] ||| join [arg_1] [arg_2]	count=2
module	in the header ||| io fits	count=1
function	[function_1] physical ||| [function_1] [function_2]	count=10
function	class for ||| for	count=1
module	wrap the x ||| io	count=1
arg	the compositetransform for ||| fromsys tosys	count=1
function	object from [function_2] ||| [function_1] [function_2] format cls format	count=1
class	image format ||| image hdu	count=1
module_class	of the header ||| io fits header	count=3
function	[function_1] ticks ||| [function_1] [function_2]	count=2
function_arg	for [arg_2] ||| [arg_2] [function_1]	count=1
function	this frame was created ||| frame	count=1
class	cutoff ||| cutoff	count=2
function	make a new ||| make	count=1
function	function ||| evaluate	count=1
function	keyword ||| keyword	count=3
class	update ||| table like hdu	count=2
class	certain kind of header ||| header	count=1
function	format the unit ||| iter unit	count=1
module	the field-specifier ||| io	count=1
arg	to mark a ||| name since message alternative	count=1
class	based [class] ||| [class]	count=1
function	[function_1] raise ||| [function_2] [function_1]	count=2
arg	deprecated unit in a ||| unit	count=1
arg	by the specified keys ||| keys	count=1
module	in the xml file ||| io	count=1
module	the underlying type of ||| votable	count=1
function_arg	[function_1] current instance ||| [arg_2] [function_1]	count=2
arg	the optical/ir using a ||| t source_eps sky_eps dark_eps	count=1
function	quantity [function_2] ||| [function_1] [function_2]	count=3
arg	[arg_1] after an ||| header relativeinsert card [arg_1] [arg_2]	count=1
class	client and ||| client	count=1
function	[function_1] none ||| [function_2] [function_1]	count=5
function	the unit ||| iter unit	count=1
function	if it is ||| is	count=2
class	table ||| ascii col	count=1
arg	an [arg_2] ||| hdulist setitem [arg_1] [arg_2]	count=1
function	recformats ||| cmp recformats	count=1
class	a ||| card	count=2
function	value that may contain ||| normalize keyword	count=1
function_arg	[function_1] (dtype ||| [function_1] [arg_2]	count=4
arg	include_names and ||| include_names	count=1
module	a functionquantity ||| function	count=1
function	an object of this ||| site	count=1
module	file is ||| utils	count=1
arg	check that [arg_2] ||| [arg_2] [arg_1]	count=2
module	create a new ||| coordinates builtin_frames	count=1
function	readfrom and fromstring ||| readfrom	count=1
arg	convert a keyword value ||| keyword	count=1
function	[function_1] in a ||| [function_2] [function_1]	count=3
class	unit (e ||| function unit base	count=1
arg	astropy table table ||| votable table	count=1
function	to a float ||| float	count=1
function	contained ||| set jds	count=1
arg	coordinate transformation to the ||| transform	count=1
class	the graph ||| transform graph	count=2
function	site ||| get site	count=1
function	the airmass ||| secz	count=1
function	but [function_2] ||| [function_2] [function_1]	count=4
module	either the ||| io	count=1
arg	deal with a functionquantity ||| obj	count=1
module	can deal ||| function	count=1
arg	the requested julian date ||| jd algorithm	count=1
arg	a join_type of ||| join_type col_name_map	count=1
function_arg	[function_1] the minor ||| [arg_2] [function_1]	count=1
class	class for a ||| location	count=1
class	[class_1] subsequent use ||| [class_1] [class_2]	count=1
class	current hdu ||| valid hdu	count=1
function	convert a set of ||| to	count=1
module_class	[module_1] hdulist ||| [module_1] [class_2]	count=12
arg	values along the ||| values mask	count=1
module	from a ||| fits	count=1
function	hdf5 file ||| hdf5	count=1
arg	ufunc can ||| obj context	count=1
module	the file ||| utils	count=1
function	numpy recformats ||| cmp recformats	count=1
class	fitshdu fromhdulist(), but ||| fits hdu	count=1
module	a new class ||| builtin_frames	count=1
module	fitshdu fromhdulist(), but creates ||| fits	count=1
module	the user ||| io fits	count=1
module_class	units [class_2] ||| [module_1] [class_2]	count=2
arg	[arg] of ||| [arg]	count=2
module	xml file ||| xml	count=1
arg	key data ||| key data	count=2
module	from the header ||| io fits	count=2
function	specific class of origin ||| cls	count=1
function	[0 60] if ||| check minute	count=1
module	of dark ||| cosmology	count=1
arg	from the given urls ||| urls cache show_progress	count=1
function	decorated object and ||| doc	count=1
function	[function_1] a table ||| [function_1] [function_2]	count=1
module_class	[module_1] fk5 ||| [module_1] [class_2]	count=2
function	a specific ||| make skyoffset	count=1
function	a length ||| and validate length	count=1
arg	an astropy io fits ||| relax key	count=1
function	obliquity ||| obliquity	count=1
function_arg	fit [arg_2] ||| [function_1] [arg_2]	count=1
module	values [module] have ||| [module]	count=1
arg	x y onto an ||| x y	count=1
function	items as a ||| items	count=1
class	table-like hdus must provide ||| like hdu	count=1
function_arg	[function_1] function ||| [function_1] mtype [arg_2]	count=2
function	powers of ||| powers	count=1
class	a stretch ||| contrast bias stretch	count=2
function_arg	bind a [arg_2] ||| [function_1] receive message [arg_2]	count=4
function_arg	[function_1] of ndarrays ||| [arg_2] [function_1]	count=1
function	rows in ||| rows	count=1
arg	elements at the given ||| axis	count=1
arg	given index ||| index	count=1
function_arg	continuous variable [arg_2] ||| [function_1] binom proportion [arg_2]	count=1
class	set ||| coordinate helper	count=3
function	diameter distance ||| diameter distance	count=2
module	with [module] keyword ||| [module]	count=1
arg	method to ||| method	count=1
function	calculate the apparent position ||| apparent body position	count=1
class	groups in [class] ||| [class]	count=1
class	tree ||| tree	count=1
class	key-value ||| info	count=1
function	or a property or ||| property	count=1
module	possibly on the ||| io fits hdu	count=1
arg	based on ||| config	count=1
function	one besselian ||| besselian	count=1
function	with the [function_2] ||| [function_2] [function_1]	count=4
module	may ||| io	count=1
module	the attributes ||| io	count=1
arg	with the given key ||| key	count=1
module	next fits block ||| fits	count=1
arg	position from a ||| position	count=1
arg	mark a public ||| name since message alternative	count=1
module	the positions it must ||| io	count=1
function	rename [function_2] ||| [function_2] [function_1]	count=1
function	a file on ||| fromfile	count=1
arg	converted ||| equivalencies	count=1
arg	displaying images with matplotlib ||| stretch power asinh_a	count=1
module	clears comments and configspec ||| extern	count=1
function	a single hdu ||| hdu	count=1
class	associated with [class_2] ||| [class_2] [class_1]	count=1
arg	contain a field-specifier ||| cls	count=1
function	mixin [function] that are ||| has mixin [function]	count=1
function_arg	[function_1] correctly represent ||| [arg_2] [function_1]	count=2
class	a new skycoord ||| sky coord	count=1
module	card in [module] hdu ||| [module]	count=1
module	[module_1] the referenced ||| [module_1] [module_2]	count=2
class	from the parent dict ||| dict	count=1
function	wait ||| wait	count=1
function	on an oversampled ||| oversample 2d	count=1
arg	given urls ||| urls cache show_progress	count=1
module	module ||| extern bundled	count=1
function	from the specified ||| get	count=1
module	but creates a ||| fits hdu	count=1
function	from a remote ||| remote	count=1
function_arg	[function_1] [arg_2] ||| [function_1] name [arg_2]	count=1
arg	val1 to ||| val1	count=1
function	specific class of origin ||| make skyoffset	count=1
function	the absorption ||| abs	count=2
arg	function ||| amplitude	count=2
function_arg	write comment [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	take val and convert/reshape [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
function	its tables and ||| and params	count=1
class	dark ||| cdm	count=2
module	checks if ||| nddata	count=1
function	ut1 - utc ||| delta ut1 utc	count=1
function	the possible wildcarded subtypes ||| mtype subtypes	count=1
class	outer ellipse not ||| elliptical frame	count=1
module	minor axes ||| wcsaxes	count=2
function	numpy allclose ||| not allclose	count=1
module	a string for use ||| coordinates	count=1
arg	coordinate transformation to ||| tosys transform	count=1
function	[function_1] masked ||| [function_1] [function_2]	count=4
function	all ||| find	count=1
function	a filename ||| get	count=1
function	the shape ||| shape	count=1
arg	outputting ||| names funcs	count=1
function_arg	definitions [arg_2] ||| [function_1] coldefs [arg_2]	count=1
function	of the config ||| config	count=1
arg	given urls ||| urls cache	count=1
function_arg	model fit [arg_2] ||| [function_1] [arg_2]	count=1
class	[class_1] frame a ||| [class_1] [class_2]	count=2
module	physical units ||| units	count=1
arg	name and [arg_2] ||| [arg_2] [arg_1]	count=1
class	this skycoord ||| sky coord	count=2
class	quantity ||| quantity	count=14
function_arg	write [arg_2] ||| [function_1] [arg_2]	count=2
function	to trap ||| use str for	count=1
class	the partial ||| predictor	count=1
function	filename for the data ||| pkg data filename	count=1
arg	position and velocity and ||| time	count=1
module	the scaling ||| io fits	count=1
class	names ||| base	count=1
function	fit at a ||| fit	count=1
function	[function_1] that the ||| [function_2] [function_1]	count=3
arg	combination of iers_a ||| cls iers_a	count=1
module	and minor axes in ||| wcsaxes	count=2
module	return all data ||| table	count=1
function	a writable file-like object ||| to writable	count=1
function	radians to ||| radians to	count=6
function	rows sorted by ||| sorted data	count=1
function_arg	[function_1] refers to ||| [function_1] [arg_2]	count=5
function	return an object of ||| of	count=1
function	[function_1] interpolation ||| [function_1] [function_2]	count=2
class	stretch ||| log stretch	count=2
function	[function_1] same ||| [function_1] [function_2]	count=5
class	get ||| coordinate helper	count=1
function	the apparent ||| get apparent body	count=1
function	header so excluding array ||| verify keywords	count=1
class	with the ||| base representation	count=1
class	z=0 ||| cdm	count=1
function	index or zero ||| index	count=1
module	specific class of ||| builtin_frames	count=1
function_arg	from the [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] file-like object ||| [function_1] arr [arg_2]	count=3
arg	utility method to search ||| card_len	count=1
class	individual [class] functions once ||| [class]	count=2
function	minimum ||| min	count=2
function	or file-like object ||| get	count=1
module	class of origin ||| coordinates	count=1
function	corresponding [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2] assume_regular_frequency	count=8
class	for a cds ||| cds	count=1
module	file against the ||| io votable	count=1
function	create a new ||| make skyoffset cls	count=1
class	with ||| function quantity	count=2
function	of a filename or ||| get	count=1
function	"representation attributes" ||| representation attrs	count=1
function	file can be ||| file	count=1
function	ut1-utc ||| ut1 utc	count=2
class	return an instance with ||| shaped like ndarray	count=2
function	sip ||| read sip	count=1
function	[function] and ||| numpy to [function]	count=2
function	masked [function_2] ||| [function_1] [function_2]	count=1
module	initializes a ||| utils compat	count=1
class	progress bar via ||| progress bar	count=2
module	contain a field-specifier to ||| fits	count=1
function	the checksum ||| checksum	count=1
arg	a given namespace ||| namespace	count=1
class	fitshdu ||| hdu	count=1
class	an error ||| config obj	count=1
function	specific class ||| cls	count=1
class	(out of ||| or spinner	count=1
function	precession [function_2] ||| [function_2] [function_1]	count=9
function	a diff between ||| report diff	count=1
class	file ||| hdu	count=1
module	not one of the ||| io	count=1
function	string formatted as ||| to string	count=2
function	given a ||| subpixel	count=1
arg	like fitshdu fromhdulist(), but ||| cls	count=1
function	split ||| split	count=1
class	unit (e g ||| unit base	count=1
function	of ||| site	count=1
module	units that ||| units	count=1
function	power to ||| power	count=1
function	[function_1] first sentence ||| [function_1] [function_2]	count=1
module	in the document ||| io	count=2
function_arg	[function_1] body body ||| [arg_2] [function_1]	count=3
module	associated fits file and ||| fits hdu	count=1
arg	writes ||| sep endcard padding	count=1
module	the simple ||| io fits hdu	count=1
function	inplace division ||| itruediv	count=1
arg	a fitshdu ||| filename compress	count=1
function	check ||| check	count=1
class	with the in-order names ||| representation	count=1
class	proxy ||| proxy	count=10
function_arg	unicode (dtype ||| unicode python3_only	count=1
class	coefficients ||| hermite2d	count=1
module	is the ||| coordinates builtin_frames	count=1
function	[function_1] to unicode ||| [function_1] [function_2]	count=2
function	data [function_2] ||| [function_2] [function_1]	count=2
function	tag is the table ||| identify table	count=1
function	returns a string representation ||| repr	count=2
module	copy the columns and ||| io fits	count=1
function	from a numpy record ||| from	count=1
module	exclude ||| vo validator	count=1
arg	complete ||| fs timeout return_when	count=1
function	dtype of ||| dtype	count=1
arg	but creates a fitshdu ||| compress	count=1
module	create a new class ||| builtin_frames	count=1
function	probably contains html ||| probably html	count=2
function	if a config ||| unedited config	count=1
arg	raises a unitswarning about ||| standard_name format_decomposed	count=1
class	csv [class_2] ||| [class_2] [class_1]	count=1
function	unit and ||| and	count=1
function	a new class ||| skyoffset	count=1
function	the configspec on ||| configspec	count=1
arg	fitshdu [arg_2] ||| [arg_2] [arg_1]	count=4
function	hour minute second tuple ||| hms	count=1
function	get grid ||| get frequency grid	count=1
arg	either downloads or loads ||| cls force_download force_builtin	count=1
module	possibly on the ||| io fits	count=1
function	is a [function_2] ||| [function_1] [function_2]	count=8
function	= wp ||| zp	count=1
function	convert a power to ||| power	count=1
module	config ||| extern configobj	count=1
function	value that ||| normalize keyword	count=1
class	[class] at ||| [class]	count=2
module	in formatting table ||| table	count=1
arg	a new fitshdu from ||| compress	count=1
arg	file ||| cls filename	count=1
function	contains html content ||| html	count=1
class	card image for fixable ||| card	count=1
arg	y onto ||| y	count=1
arg	returns the compositetransform ||| fromsys tosys	count=1
class	data should be converted ||| hdu	count=1
arg	image_g ||| image_g	count=1
arg	or after an ||| after	count=1
function	the parser (through use ||| empty	count=1
function	with [function_2] ||| [function_1] [function_2]	count=4
arg	a keyword ||| cls keyword	count=1
function	[function_1] mantissa ||| [function_2] [function_1]	count=1
module	a dtype object or ||| io fits	count=1
function_arg	criterion [arg_2] ||| [function_1] log_likelihood [arg_2]	count=4
function	determines if a config ||| config	count=1
function	hdf5 ||| hdf5	count=1
function	pynbody ||| in units	count=2
function	card and handle invalid ||| card	count=1
function	with the ||| graph	count=1
function	if a config ||| config	count=1
function	reading image data ||| scaled image data	count=1
function	parameter for curvature ||| ok	count=1
module	object and ||| utils	count=1
module_class	dictionary detailing information about [module_1] [class_2] hdu within any associated ||| [module_1] [class_2]	count=3
module_class	returns the [class_2] ||| [module_1] [class_2]	count=4
class	component ||| cartesian	count=3
function	data file from the ||| pkg data	count=1
class	hdu ||| valid hdu	count=3
class	cds header ||| cds header	count=2
function	valid mime [function_2] ||| [function_2] [function_1]	count=1
arg	file if not loaded ||| file	count=1
module	with ||| units	count=1
function	may ||| normalize	count=1
function	any extension hdu that ||| header	count=1
function	the physical ||| physical	count=2
function	[function_1] float radians ||| [function_2] [function_1]	count=2
function_arg	[function_1] [arg_2] ||| frame [function_1] to [arg_2]	count=2
function	[function_1] parallel ||| [function_2] [function_1]	count=2
function_arg	the minimum fits column [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
function	valid mime ||| check mime	count=1
class	return an object ||| earth	count=1
function	read a table ||| read	count=1
module	string for use with ||| builtin_frames	count=1
function	as running [function_2] ||| [function_2] [function_1]	count=2
function	update ||| update doc	count=1
class	deal with ||| function quantity	count=1
arg	given format ||| format	count=2
function	cache directory [function_2] ||| [function_2] download [function_1]	count=1
class	of state w r ||| w0wa cdm	count=1
class	the ||| quantity	count=1
function	[function_1] and nousek ||| [function_1] [function_2]	count=10
function	fit at a given ||| periodic fit	count=1
module	directly ||| fits hdu	count=1
arg	with a ||| obj	count=1
function	this class for ||| of	count=1
function	the data [function_2] ||| [function_1] [function_2]	count=1
function	:class link objects pointers ||| links	count=1
class	fitshdu fromhdulist(), but creates ||| fits hdu	count=1
module	affects scalars/sections also ||| extern configobj	count=1
class	read the table ||| table hdu	count=1
function_arg	[function_1] flag for ||| [arg_2] [function_1]	count=9
module	match the ||| io fits hdu	count=1
function	converters and then ||| and	count=1
function	this ||| site	count=1
arg	function ||| amplitude mean	count=1
function	a linear ||| linear	count=1
module	having either the ||| io	count=1
arg	object from a ||| cls image	count=1
arg	fitted and constrained parameters ||| fps	count=1
function	the first sentence from ||| first sentence	count=1
class	a ||| executor	count=1
class	value that may ||| card	count=1
class	the default ||| time	count=1
function	reload a ||| reload	count=1
module	resize when flushing the ||| io fits	count=1
module	gets the ||| io fits	count=1
arg	to a bit array ||| field recformat	count=1
module	override the default ||| io	count=2
function	absorption distance ||| abs distance	count=4
function	be a float or ||| float or	count=1
function	a view ||| new view	count=1
function	old ||| convert	count=1
module	the listener's state ||| io fits	count=1
module	check that ||| units function	count=1
class	data should be ||| hdu	count=1
class	for this coordinate ||| coordinate helper	count=2
function	retrieves the contents ||| contents	count=1
function	the unit [function_2] ||| [function_1] [function_2]	count=4
function	this object around a ||| search around	count=1
function	convert between pixel ||| pixel	count=1
class	quantity with ||| quantity	count=3
function	interpolate polar motions ||| pm xy	count=1
class	between -90 ||| latitude	count=1
arg	given astropy table table ||| votable table	count=1
function	the footprint of the ||| calc footprint	count=1
arg	increment or ||| increment	count=1
class	for cross-referencing ||| coo sys	count=1
function	the same [function_2] ||| [function_2] [function_1]	count=3
class	for a cds header ||| cds header	count=1
arg	world to pixel coordinates ||| world	count=1
arg	to a function or ||| function declare	count=2
class	the header ||| rdb header	count=1
function	declare the ||| declare	count=1
function_arg	[function_1] val1 to ||| [function_1] [arg_2]	count=1
arg	associated ||| packageormod	count=1
arg	a column's ||| col_name new_name	count=1
function	is based on kraft ||| mpmath kraft	count=1
function	path ||| path	count=2
function	from merging ||| get	count=2
arg	of floats ||| min max	count=1
function_arg	[function_1] mtype ||| [function_1] [arg_2]	count=1
arg	birthday ||| birthday	count=1
arg	by some [arg] ||| [arg] axis	count=1
function	config ||| config	count=2
module	resize when flushing the ||| io	count=1
class	a list of strings ||| list	count=1
function	content ||| content	count=1
module	client ||| vo samp	count=9
class	a fits_rec ||| rec	count=1
class	a stretch ||| power stretch	count=1
module	either the simple or ||| io fits	count=1
function	a string to ||| string	count=1
module	vo samp ||| vo samp	count=10
class	image data ||| image base hdu	count=1
arg	the current instance ||| copy_data	count=1
arg	x y ||| x y	count=2
function	propagation ||| convert uncertainty	count=1
function	if the ||| convert uncertainty	count=1
function	get ||| get frequency	count=1
class	stream ||| streaming hdu	count=1
function	get groups ||| table group by	count=2
arg	like fitshdu fromhdulist(), but ||| cls filename	count=1
function	check that ||| check	count=1
class	functionquantity ||| quantity	count=1
arg	key and its ||| key	count=1
module	functionquantity ||| units function	count=2
function	center of the pixel ||| center	count=1
module	but creates ||| fits	count=1
module	the header of ||| io	count=2
function	matches [function_2] ||| [function_1] [function_2]	count=4
function	like _lookup_by_attr_factory, but looks ||| by	count=1
function	all [function] ||| iter [function]	count=1
function	check that the ||| prepare	count=1
arg	of self [arg] has ||| [arg]	count=1
module_class	strings [class_2] ||| [module_1] [class_2]	count=8
module	[module] in this ||| [module]	count=3
module	setting astropy utils ||| utils	count=1
function	keyword value ||| value	count=1
function	the worker ||| manangement worker	count=1
class	run [class_2] ||| [class_1] time [class_2]	count=1
arg	around some [arg_2] ||| [arg_2] [arg_1]	count=2
function	get ||| by	count=1
arg	n of x ||| n x out	count=3
class	w r t ||| cdm	count=1
class	table-like data ||| table like	count=1
module	rows in the hdu's ||| io fits hdu	count=1
function_arg	density [arg_2] ||| [arg_2] [function_1]	count=1
function	property or method ||| property	count=1
function	physical [function_2] ||| [function_1] [function_2]	count=5
module_class	hdu's data part ||| hdu corrupted hdu	count=1
function	the pixel ||| pixel scales	count=1
function_arg	to a [arg_2] ||| [function_1] arr [arg_2]	count=1
function_arg	indices to [arg_2] ||| [function_1] col_slice [arg_2]	count=2
function	delete bscale/bzero from header ||| header scale	count=1
function	least one massive ||| has massive	count=1
module	fits format ||| io fits	count=1
module	the associated [module_2] ||| [module_1] [module_2]	count=6
class	data [class_2] ||| [class_2] [class_1]	count=2
module	to [module] hdulist, ||| [module]	count=1
function	get the [function_2] ||| [function_2] [function_1]	count=7
arg	can represent that value ||| value	count=1
arg	[arg] larger array ||| array_large array_small [arg]	count=2
function	converters and then copy ||| and copy	count=1
module_class	the [class_2] ||| [module_1] fits hdu [class_2]	count=1
class	in logarithmic ||| log	count=2
arg	coordinate transformation to the ||| tosys transform	count=1
function	object of this ||| of site	count=1
function	[function_1] the data ||| [function_2] [function_1]	count=2
arg	or a file-like object ||| fileobj endcard	count=1
class	location ||| earth location	count=2
function_arg	a list [arg_2] ||| [arg_2] [function_1]	count=1
arg	removes a coordinate transform ||| fromsys tosys transform	count=1
function_arg	to an [arg_2] ||| [function_1] dms [arg_2]	count=1
function	binary ||| binary	count=1
function	be emitted by ||| exception	count=1
function	filename ||| file	count=1
function	sets the return ||| set	count=1
arg	and sanitized keyword args ||| args	count=1
function_arg	val and convert/reshape to [function_1] [arg_2] ||| time [function_1] val [arg_2]	count=3
module	in the ||| io	count=18
arg	fastbasic to output a ||| table output	count=1
arg	binnings this is a ||| a	count=1
function	an hdf5 file ||| table hdf5	count=1
arg	key in sorted ||| key	count=1
function	to unregister ||| unregister	count=1
arg	lines ||| lines	count=7
module	and angular units given ||| units	count=1
class	fromhdulist(), but creates ||| fits	count=1
function_arg	grid [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] arrays of ||| [function_1] [function_2]	count=1
module	names of ||| coordinates	count=1
module	of a filename ||| utils	count=1
module	get ||| stats lombscargle implementations	count=1
function	contents of ||| get file contents	count=1
arg	model [arg_2] ||| [arg_2] [arg_1]	count=15
module	by the ||| io fits	count=2
function	as a representation ||| as	count=1
function	valid mime content ||| check mime content	count=1
class	individual [class] functions ||| [class]	count=2
class	if this [class] has no ||| base coordinate [class]	count=1
class	corresponding to this ||| base	count=1
module	the data of ||| io	count=1
module	with a functionquantity ||| units	count=1
module	a specific class ||| coordinates builtin_frames	count=1
module	configuration setting astropy utils ||| utils	count=1
arg	the current instance ||| order data copy_data	count=1
arg	convert a ||| cls	count=1
function_arg	binary [arg_2] ||| [arg_2] [function_1]	count=1
function	write a diff between ||| diff keyword	count=1
module	proper unit parameters ||| units	count=1
arg	to a specified value ||| value	count=1
class	t ||| w0wa	count=1
arg	strlen and no ||| input strlen	count=2
module	the in-order names of ||| coordinates	count=1
class	and time it ||| time	count=1
function	object from ||| from	count=1
function	pm ||| pm	count=1
module	keyword value from the ||| io fits	count=1
module	by the fitsinfo ||| io fits	count=1
function	gcrs ||| gcrs	count=1
function_arg	to unicode [arg_2] ||| [function_1] [arg_2]	count=3
class	stretch ||| inverted contrast bias stretch	count=1
function	return the bases of ||| bases	count=1
function	for use ||| make	count=1
class	[class] if the ||| alias [class]	count=3
class	for ||| earth location	count=2
module	:meth ~astropy vo samp ||| vo samp	count=5
arg	finals2000a * file provided ||| cls file readme	count=1
module	axes in the ||| visualization wcsaxes	count=2
module	also clears ||| configobj	count=1
function_arg	[function_1] [arg_2] ||| [function_1] header [arg_2]	count=4
function	table instance from ||| from	count=1
class	index to agree with ||| index	count=1
function	polar motion [function_2] ||| [function_2] [function_1]	count=1
function	of the ||| doc	count=1
module	using the ||| io fits	count=1
function	model fit at ||| fit	count=1
function	return the precession matrix ||| precession matrix	count=2
module_class	a dictionary detailing information [module_1] [class_2] within any associated file ||| [module_1] hdu [class_2] hdu fileinfo	count=1
class	column specifically those ||| column	count=1
function	source-included data ||| data	count=1
function	information [function_2] ||| [function_2] [function_1]	count=2
arg	sum of val1 and ||| val1	count=1
module	or not the ||| io fits	count=3
function	value to a float ||| float	count=1
class	sliced ||| sliced	count=1
arg	converted values ||| other value equivalencies	count=2
module_class	[module_1] resource_ element ||| [module_1] votable [class_2] extra	count=1
module	the file is ||| utils	count=1
function	mjd ||| as needed	count=1
function_arg	transform this [arg_2] ||| [arg_2] [function_1]	count=1
module	either the simple or ||| io	count=1
arg	the given [arg] ||| array_large [arg] position	count=1
class	version of ||| section	count=1
class	timing results without repetition ||| time predictor	count=1
function_arg	the special [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	reader [arg_2] ||| [function_1] [arg_2]	count=2
function	a property or ||| property	count=1
function_arg	[function_1] type of ||| [arg_2] [function_1]	count=3
function	[function_1] currently connected ||| [function_2] [function_1]	count=1
module	for the ||| io votable	count=1
arg	data by using bscale/bzero ||| type option bscale bzero	count=1
module	the x format ||| io	count=1
arg	time values in mjd ||| mjd	count=1
function	a public attribute as ||| attribute	count=1
function	[function_1] of skycoord ||| [function_2] [function_1]	count=2
module_class	[module_1] [class_2] are not defined ||| [module_1] votable [class_2] extra	count=1
class	from the graph ||| transform graph	count=1
module	a new ||| coordinates	count=1
function	footprint ||| footprint	count=1
function	html content see ||| html	count=1
function	class that is ||| skyoffset	count=1
arg	val1 to jd1 ||| val1 val2	count=1
module	the scaling flags ||| io fits	count=1
class	two model classes or ||| model meta	count=1
arg	overlapping part ||| large_array_shape small_array_shape position mode	count=1
module_class	returns a dictionary detailing [module_1] [class_2] any associated file ||| [module_1] hdu [class_2] hdu fileinfo	count=1
class	time ||| time astropy time	count=1
function	critical [function_2] ||| [function_2] [function_1]	count=4
module_class	[module_1] card image ||| [module_1] [class_2]	count=14
module	[module_1] that defines ||| [module_2] [module_1]	count=2
function	kernel arrays ||| kernel arrays	count=2
module	the current samp ||| samp	count=4
arg	to convert a ||| cls	count=1
module	fromhdulist(), but creates ||| io fits hdu	count=1
function	create a new class ||| cls	count=1
class	smoothly broken [class_1] [class_2] ||| [class_1] [class_2]	count=1
function	of this ||| site	count=1
function	contain a field-specifier to ||| normalize	count=1
function	signal [function_2] ||| [function_2] [function_1]	count=5
class	hdu should be ||| hdu	count=1
function	possible wildcarded subtypes of ||| get mtype subtypes	count=1
class	object ||| location	count=1
function	object ||| doc	count=1
module	decorator that ||| extern bundled	count=2
function	reading image data from ||| get scaled image data	count=1
arg	[arg_1] around some ||| coordinates rotation matrix [arg_1] axis [arg_2]	count=1
function	and b columns ||| b columns	count=1
arg	creates a ||| cls	count=1
function	list of the values ||| values	count=1
arg	on the provided data ||| data sigma	count=1
module	to fix the ||| io	count=1
function	remove ||| close	count=1
class	run time ||| run time	count=1
class	r t ||| w0wa	count=1
function	specific ||| skyoffset	count=1
class	converts spherical ||| spherical	count=1
arg	dimensional ||| x	count=1
function_arg	but with [arg_2] ||| [arg_2] [function_1]	count=1
module	with ||| units function	count=2
function	kpc [function_2] ||| [function_1] proper [function_2]	count=3
function	or ||| file	count=1
function	and then formats ||| format	count=1
function_arg	new index [arg_2] ||| [arg_2] [function_1]	count=1
function	of blank cards at ||| countblanks	count=1
class	the default behavior of ||| time	count=1
class	instantiated ||| extension	count=1
arg	a deprecated unit ||| unit	count=1
module	in a given format ||| units format	count=1
function	diff ||| diff	count=1
arg	given position in ||| position	count=1
arg	fitshdu from ||| cls filename compress	count=1
class	is especially useful for ||| splitter	count=1
class	a stretch ||| bias stretch	count=2
function	a field-specifier to uppercase ||| keyword	count=1
arg	rows to the ||| rows	count=1
function	the currently running ||| get running	count=1
arg	two filter kernels ||| kernel	count=1
function	that may contain ||| normalize	count=1
module_class	[module_1] class ||| [module_1] [class_2]	count=6
function	[function_1] to noise ||| [function_2] [function_1]	count=1
function	update [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] model ||| [function_1] sidereal time [arg_2]	count=3
function	[function_1] or ||| [function_1] [function_2]	count=7
function	to temporarily enable ||| enable	count=1
function	first iterates over ||| iter	count=1
arg	given urls blocks ||| urls cache	count=1
arg	the given urls ||| urls cache show_progress timeout	count=1
function_arg	with [arg_2] ||| [function_1] signature [arg_2]	count=1
module	or method takes ||| vo samp	count=1
function	[function_1] class corresponding ||| [function_1] [function_2]	count=2
module	the same ||| io	count=1
module	[module] file if ||| io [module]	count=2
module	number ||| utils xml	count=2
class	an ||| earth location	count=2
class	for this ||| base	count=2
module	of the hdus in ||| io fits	count=1
function	its tables and ||| fields and	count=1
class	like fitshdu fromhdulist(), ||| fits hdu	count=1
function	of all the attributes ||| attributes	count=1
function	units ||| get units	count=1
function	a dict ||| dict	count=1
arg	the given row ||| row	count=1
function	keyword repeat [function_2] ||| [function_1] [function_2]	count=2
function	config file ||| config file	count=1
class	[class] that ||| [class]	count=1
function	ut1 - ||| get delta ut1	count=1
function_arg	[function_1] the axis ||| [function_1] [arg_2]	count=1
module	fromhdulist(), but creates a ||| io fits	count=1
function_arg	convolve [arg_2] ||| [function_1] [arg_2]	count=4
function	data files in a ||| get pkg data	count=2
module	angular units given a ||| units	count=1
arg	on the m ||| m	count=1
module	on the ||| io votable	count=1
function_arg	unicode [arg_2] ||| [function_1] [arg_2]	count=3
function	based on kraft burrows ||| mpmath kraft burrows	count=1
function	one in which ||| in true	count=1
function	[function_1] sentence from ||| [function_1] [function_2]	count=3
arg	sure model ||| model	count=1
function	celestial) returns pixel ||| proj plane pixel area	count=1
arg	field-specifier to ||| cls	count=1
function	travel time correction to ||| travel time	count=1
function	determine the dtype that ||| dtype for	count=1
function_arg	of column name ||| column name	count=1
arg	and b ||| b	count=1
function	to the cutout array ||| cutout	count=1
function_arg	in parallel [arg_2] ||| [function_1] [arg_2]	count=1
module	is currently ||| xml	count=1
function	same sort order ||| sort	count=1
arg	increment or decrement ||| increment	count=1
class	a stretch ||| inverted log stretch	count=1
module	each of [module_2] ||| [module_1] [module_2]	count=3
function	keyword repeat tuple that ||| keyword from	count=1
arg	from obj ||| obj	count=1
class	kernel ||| kernel	count=2
module	the header/data [module_2] ||| [module_1] [module_2] append filename data header	count=1
class	version of column ||| column	count=1
function	name of the ||| dtype info name	count=1
arg	uncertainties are compatible ||| other_uncert	count=1
module	info objects for the ||| io	count=1
function	angle in radians to ||| radians to	count=3
class	converts spherical ||| unit spherical	count=2
function	[function_1] kernel ||| [function_2] arrays [function_1]	count=1
function	reading image data from ||| scaled image data	count=1
class	an error according ||| obj	count=1
module	like ||| fits hdu	count=2
function_arg	[function_1] scale ||| [arg_2] [function_1]	count=1
class	this frame a dict ||| coordinate frame	count=1
module	state at ||| cosmology	count=3
arg	model by taking the ||| model x_range factor	count=1
function	a transformation between two ||| transform	count=1
arg	like fitshdu ||| filename	count=1
class	split line ||| splitter	count=1
function	is linked ||| tied	count=1
function	check ||| array prepare	count=2
module	tuple with the ||| coordinates	count=1
module	the type converters ||| io ascii	count=1
module	[module_1] hdu by ||| [module_1] [module_2]	count=8
arg	filter kernels ||| kernel	count=1
module	get [module] ||| [module]	count=2
function	field and the ||| update field	count=1
module	fromhdulist(), ||| io	count=1
module	and to match the ||| io fits hdu	count=1
arg	of self [arg] ||| [arg]	count=1
arg	interval [arg_2] ||| [arg_1] [arg_2]	count=1
module_class	the card image ||| io fits card	count=3
class	x_high)) ||| gaussian2d	count=1
function	object around ||| around	count=1
function	of options ||| option	count=1
function	[function_1] votable ||| [function_2] [function_1]	count=4
function_arg	[function_1] urls ||| [arg_2] [function_1]	count=3
module	having either the ||| io fits	count=1
class	current hdu data ||| valid hdu	count=1
arg	shape to ||| shape	count=1
module_class	[module_1] [class_2] values ||| [module_1] ascii [class_2] call lines	count=1
function	of the decorated ||| doc	count=1
function	spectral ||| spectral	count=1
arg	at the given indices ||| indices axis mode	count=1
module	append [module_1] [module_2] file if filename exists ||| [module_1] [module_2]	count=3
function	column ||| coldefs	count=1
function_arg	[function_1] the value ||| [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| table [function_1] [arg_2]	count=27
class	and modifies the ||| fitter	count=1
function	[function] format ||| [function]	count=2
module	and possibly on the ||| io fits hdu	count=1
class	default ||| time	count=1
module	the ||| utils xml	count=4
arg	left input/output labels ||| left	count=1
function_arg	[function_1] x ||| [function_1] [arg_2]	count=1
module	configobj as a ||| extern configobj	count=1
arg	the x coordinates and ||| x	count=1
function	ascii strings to ||| a to	count=1
function	[function_1] registry the ||| [function_2] [function_1]	count=3
function_arg	[function_1] copy is ||| time [function_1] val [arg_2]	count=2
function_arg	[function_1] units ||| [function_1] equivalent units [arg_2]	count=3
module	astropy utils ||| utils	count=2
function	fitshdu ||| fromfile	count=1
function	a filename or ||| get	count=1
function_arg	[function_1] [arg_2] ||| io ascii [function_1] [arg_2]	count=5
function	masked values ||| masked values	count=2
class	of ||| xmlwriter	count=1
function	factor ||| factor	count=1
class	array with ||| base	count=1
function	[function_1] masked values ||| [function_1] [function_2]	count=4
function	lines ||| process lines	count=1
module	against the appropriate ||| io	count=1
module	a list [module_2] ||| [module_1] [module_2]	count=1
class	a skycoord ||| coord	count=1
class	image ||| image	count=5
function	a new [function_2] ||| [function_1] [function_2]	count=1
module	[module_1] fits file ||| [module_1] [module_2]	count=2
module	wcs ||| wcs	count=1
function	sidereal [function_2] ||| [function_1] [function_2]	count=3
arg	known observatory/site by name ||| site_name	count=1
function	difference in ||| difference	count=1
function	set ut1-utc ||| ut1 utc	count=1
function	of the table ||| table	count=1
function	in si ||| si	count=2
function	have correct class for ||| for	count=1
module	executing ||| compat futures	count=2
class	t a ||| w0wa	count=1
function	new index ||| add index	count=2
arg	val1 and [arg_2] ||| [arg_2] [arg_1]	count=8
function	from header ||| update header	count=1
function	the x ||| x	count=2
function	wraps which ||| wraps	count=1
function	time in ||| time	count=1
function_arg	[function_1] frame ||| transform [function_1] [arg_2]	count=4
class	frame a dict ||| frame	count=1
function	write a diff ||| report diff keyword	count=1
module_class	of the [class_2] ||| [module_1] [class_2] extra	count=3
module	return an ||| coordinates	count=1
arg	creates a ||| cls filename	count=1
class	mtypes the client ||| sampclient	count=1
function	or not a custom [function_1] [function_2] assigned to this model ||| [function_2] [function_1]	count=1
class	run [class_2] ||| [class_1] [class_2]	count=4
class	in-order ||| representation	count=1
function	[function_1] package ||| six meta path importer [function_1] [function_2] fullname	count=1
arg	keyword value ||| cls keyword	count=1
module	value in the first ||| io	count=1
function	the lookback time ||| lookback time	count=2
function_arg	[function_1] in bins ||| [function_1] x [arg_2]	count=2
function	function quantity class corresponding ||| quantity class	count=1
function	disconnect from ||| disconnect	count=2
function	number split it into ||| split	count=1
module	false : ||| nddata	count=1
function	logging [function_2] ||| [function_2] [function_1]	count=2
class	format ||| ascii column format	count=1
module	physical units ||| units format	count=1
module	an hdu [module_2] ||| [module_1] [module_2]	count=2
module	by the fits ||| io fits	count=2
function	meta ||| meta	count=1
function	file is currently ||| get	count=1
class	clears comments and ||| section	count=1
function	deprecated this creates ||| deprecated	count=1
arg	may contain a field-specifier ||| cls	count=1
function	a ||| of	count=1
module_class	of the [class_2] ||| [module_1] ascii [class_2] call lines	count=2
arg	evaluating [arg] on ||| [arg]	count=2
function	[function_1] [function_2] ||| core astropy logger [function_1] [function_2] filename filter_level filter_origin	count=1
class	based [class] essentially acts ||| [class]	count=1
function	and correspond [function] that ||| numpy [function] votable	count=1
function	file or file-like object ||| fileobj	count=1
arg	the ufunc can ||| context	count=1
module	fits card ||| fits scripts	count=1
class	this coordinate ||| base coordinate frame	count=1
function	to given ||| to	count=1
function	version of clear ||| clear	count=1
module	domain of ||| votable	count=1
function_arg	get slices [arg_2] ||| [arg_2] [function_1]	count=1
module	the file for ||| io fits	count=1
function	field ||| update field	count=1
module	a new class that ||| coordinates	count=1
arg	a function or ||| function declare metadata	count=2
function	"best" [function_2] ||| [function_2] [function_1]	count=2
module_class	hdu's data ||| hdu corrupted hdu	count=1
function	groups in ||| groups	count=1
function	and ||| add and	count=1
function	not a length ||| convert to and validate length	count=1
function	two numpy recformats using ||| cmp recformats	count=1
function	instance from a string ||| from string	count=1
function	slice from ||| from slice	count=2
class	log [class_2] ||| [class_1] [class_2]	count=2
function_arg	for [arg_2] ||| [function_1] table [arg_2]	count=1
function	its contents ||| contents	count=1
module	check ||| function	count=1
arg	[arg] larger ||| array_large shape [arg]	count=1
arg	m ||| m	count=1
function	empirical [function] parametrized by ||| p0 [function]	count=1
function	searchsorted or use a ||| searchsorted	count=1
arg	table most of ||| table guess	count=2
arg	given urls blocks ||| urls	count=1
arg	a fitshdu from a ||| filename compress	count=1
function_arg	element this ||| element tag	count=1
function	of registered units ||| get units	count=1
module	the algorithm ||| io fits	count=1
arg	write_comments [arg] since ||| [arg]	count=1
arg	and constrained parameters ||| fps	count=1
function	copy over the default ||| default	count=1
module	value and returns a ||| coordinates	count=1
function_arg	ipython's pretty [arg_2] ||| [function_1] [arg_2]	count=1
class	[class_1] bar to ||| utils [class_1] [class_2]	count=2
class	z=0 ||| w0wa cdm	count=2
function	that may contain a ||| keyword	count=1
function_arg	[function_1] key ||| [function_1] [arg_2]	count=4
module	file is currently ||| utils	count=1
function	as a prefix ||| prefix	count=1
function	[function_1] matrix from ||| [function_2] [function_1]	count=1
function	with ||| prepare	count=1
function	a table instance from ||| from	count=1
function	response to a ||| response	count=1
arg	standard locations for the ||| data_name	count=2
module	angular units with a ||| units	count=1
module	that ||| coordinates builtin_frames	count=2
module	directly either a ||| fits hdu	count=1
arg	and ||| input	count=1
function	column object ||| column	count=1
arg	in ||| range	count=1
function	of this class ||| of	count=1
module	by the fitsinfo script ||| io fits scripts	count=1
function	get ||| get scale	count=1
module	elements ||| io votable	count=1
function	angular [function_2] ||| [function_1] [function_2] distance	count=1
function	a length ||| validate length	count=1
function	state at z=0 ||| w0	count=1
function	ones belonging to ||| to	count=1
class	of this object's ||| nddata	count=1
module	creates a ||| io	count=1
function_arg	type as [arg_2] ||| [function_1] [arg_2]	count=1
function	class that ||| cls	count=1
function	[function_1] interpolation ||| [function_2] [function_1]	count=2
function	new class that is ||| skyoffset	count=1
arg	fitted and constrained ||| fps	count=1
function	returns a writable file-like ||| convert to writable	count=1
class	the composite ||| composite	count=3
arg	format [arg_2] ||| [arg_2] [arg_1]	count=3
function	mapping representing the inverse ||| inverse	count=1
function	on-sky ||| sky	count=1
function	to indices given ||| subpixel indices	count=2
function	is ||| is	count=18
function	size in bytes of ||| size	count=4
function	get the first sentence ||| get first sentence	count=1
function	frame into one in ||| in true	count=1
module	may contain ||| io fits	count=1
arg	[arg_1] a table ||| [arg_2] names [arg_1]	count=1
function_arg	copy of [arg_2] ||| [function_1] [arg_2]	count=1
arg	table ||| cls table	count=1
function	is ||| skyoffset cls	count=1
function	directly in [function_1] [function_2] ||| [function_1] [function_2]	count=4
arg	large ||| cutout_position	count=1
function	field-specifier ||| keyword	count=1
function	first sentence ||| first sentence	count=2
arg	this frame ||| frame	count=1
function	that [function_2] ||| [function_1] [function_2]	count=1
class	to this sorted ||| sorted	count=1
function	[function_1] to ||| [function_1] [function_2]	count=22
function	kpc corresponding [function_2] ||| [function_2] [function_1]	count=2
arg	specific [arg] don't ||| [arg]	count=1
module	that accesses an ||| io fits	count=1
function	uniquely identifies [function_2] ||| [function_2] [function_1]	count=5
module	from fits ||| fits	count=1
module	the current configobj as ||| configobj	count=1
arg	specific msg-tag ||| msg_tag	count=1
module	read the hdu ||| io	count=1
class	dark energy equation ||| cdm	count=4
function	power to a ||| power	count=1
arg	function or class ||| function	count=3
function	object ||| format doc	count=1
class	but creates ||| fits hdu	count=1
function	[*required*] the xml id ||| id	count=1
function	of the ||| format doc	count=1
function	number of catalogs in ||| len	count=1
function	convert the input ||| coords	count=1
module	of the hdus ||| io	count=1
module_class	[module_1] data ||| [module_1] corrupted [class_2]	count=5
function	representation of ||| repr	count=1
function	with the ||| with	count=2
function	split it ||| split	count=1
function	astropy ||| astropy	count=1
function	as [function_2] ||| [function_2] [function_1]	count=1
function	[function] between ||| [function]	count=2
module	as having either the ||| io	count=1
function	[function_1] source ||| [function_2] [function_1]	count=10
function	handle spectral density ||| spectral density	count=2
function	noise ratio for source ||| noise oir	count=1
arg	output a line with ||| table output	count=1
class	a ||| process pool	count=1
class	the value for ||| base	count=1
function	[function_1] integers ||| [function_2] [function_1]	count=4
function	binary table's data ||| data	count=1
module	an index into the ||| io	count=1
module	xmlwriter ||| utils xml	count=1
function	[function_1] matrix for ||| [function_1] [function_2]	count=3
arg	is a ||| a bins range weights	count=1
module	through the ||| io fits	count=1
function	function used to calculate ||| efunc	count=3
arg	raises unitserror if not ||| allow_dimensionless	count=1
function	the footprint ||| footprint	count=1
arg	if withclosing ||| withclosing	count=1
class	[class_1] is especially ||| [class_1] [class_2]	count=1
function	and adjust ||| and adjust	count=1
module	file is currently in ||| xml	count=1
module	cards matching the ||| io fits	count=1
function	fit a function ||| fit	count=1
function	string it will pad ||| fromstring	count=1
function	ndarray to ||| array to file	count=1
function	[function_1] given ||| [function_2] [function_1]	count=8
arg	_boundingbox with ||| cls func sig	count=1
function	[function_1] of column ||| [function_1] [function_2]	count=1
arg	left and right tables ||| left right	count=1
function	transverse proper kpc ||| kpc proper	count=2
function_arg	[function_1] [arg_2] comments to ||| [function_1] [arg_2]	count=8
function	[function] smaller array ||| [function]	count=2
function	existing function but with ||| function with	count=1
module	the list of ||| io	count=1
arg	a list of ndarrays ||| arrs	count=1
function	[function] of ||| representation [function]	count=3
function	the circular variance ||| circvar	count=1
class	initializes ||| executor	count=1
arg	[arg_1] hdulist ||| [arg_2] [arg_1]	count=2
function	[function_1] names ||| [function_2] [function_1]	count=5
function	fill value of ||| fill value	count=2
function_arg	specified [arg_2] ||| transform [function_1] [arg_2]	count=1
function	box we ||| box	count=1
function	given astropy [function_2] ||| [function_1] [function_2]	count=1
function	apparent ||| get apparent body	count=1
function	a specific class of ||| skyoffset	count=1
function	retrieves the ||| file	count=1
function	of this class for ||| of	count=1
function	load observatory database from ||| downloaded sites	count=1
arg	from ||| cls fileobj sep	count=1
function	all [function] ||| get [function] with physical	count=2
module	a specific ||| coordinates	count=1
class	of dark energy ||| cdm	count=1
arg	a join_type ||| join_type	count=2
module	the comment regexp ||| io	count=1
function	set [function_2] ||| [function_2] [function_1]	count=2
function	its tables and nested ||| fields and params	count=1
function	[function_1] value ||| [function_2] [function_1]	count=4
function	then copy ||| copy	count=1
function_arg	of column [arg_2] ||| [function_1] [arg_2]	count=1
module	check ||| units	count=1
module	that defines ||| extern	count=1
class	internal function for ||| image base	count=1
function	the bitpix value in ||| bitpix	count=1
function	of equivalencies ||| equivalencies	count=1
class	is a quantity with ||| quantity frame attribute	count=1
function	write a table ||| write table	count=2
module	in the first step ||| io	count=1
function_arg	[function_1] in ||| [function_1] x success bins [arg_2]	count=2
arg	body body relative ||| body time ephemeris	count=1
module	or more hdu ||| fits hdu	count=1
arg	function called by ||| args	count=1
class	file on ||| fits hdu	count=1
arg	labels with right ||| right	count=1
arg	[arg_1] array by ||| [arg_2] [arg_1]	count=3
module_class	[module_1] verification ||| [module_1] [class_2]	count=4
module	execute the ||| io fits	count=1
class	initialize a column ||| column	count=1
function	to pad ||| pad	count=1
function	object in a particular ||| get jd12	count=1
function	record-valued ||| if rvkc	count=1
arg	idx [arg] ||| idx [arg]	count=3
function	object and then formats ||| doc	count=1
module	the count of ||| io fits	count=1
function_arg	[function_1] frame ||| [function_1] [arg_2]	count=2
arg	not included in output ||| output	count=1
function	median [function_2] ||| [function_1] [function_2]	count=1
function	source code ||| code	count=1
class	this sorted [class_2] ||| [class_2] [class_1]	count=1
arg	using knuth's rule ||| data return_bins quiet	count=1
arg	output where output ||| output	count=1
function	and returns its contents ||| contents	count=1
function	for the data ||| data	count=1
module	in the hdu's ||| io fits hdu	count=1
arg	method ||| method	count=3
function	find the [function_2] ||| [function_2] [function_1]	count=3
arg	in filename ||| filename	count=1
class	table-like hdus ||| like hdu	count=1
module_class	[module_1] stream ||| [module_1] [class_2]	count=2
function	an hdf5 ||| table hdf5	count=1
function	convenience function for w ||| w	count=1
module	args start with the ||| io	count=1
class	trapezoid ||| trapezoid	count=1
function	astropy [function_2] ||| [function_1] [function_2]	count=3
module	hdu's data ||| hdu	count=1
function	reset ||| reset	count=2
module	[module] coldefs ||| [module]	count=1
arg	docstring of the ||| docstring	count=1
function_arg	[function_1] column ||| [arg_2] [function_1]	count=2
function	it into its mantissa ||| mantissa	count=1
function	return an object ||| of	count=1
module	fitshdu fromhdulist(), but ||| io fits hdu	count=1
arg	an array ||| array	count=1
function	the same type ||| equivalent	count=1
module	[module] have ||| [module]	count=3
arg	or after ||| after	count=1
arg	unit of an operation ||| unit	count=1
module	generate a warning for ||| coordinates builtin_frames	count=1
function	a readable ||| readable	count=1
module	clears comments and configspec ||| extern configobj	count=1
module	as specified [module] ||| [module]	count=3
module	for explanations of the ||| io fits	count=3
function	display ||| display	count=1
function_arg	[function_1] [arg_2] ||| [function_1] sidereal time [arg_2]	count=3
module	table that ||| ascii	count=1
function	fits ||| to fits	count=1
module	contain a ||| fits	count=1
arg	that may ||| cls	count=1
class	in this table ||| table like hdu	count=1
arg	mjd and the time ||| mjd	count=1
function	hour minute second to ||| hms to	count=1
class	current unit ||| unit	count=1
function	or file-like ||| get	count=1
class	bar to the given ||| bar	count=3
function_arg	reader for data_format ||| reader data_format data_class	count=2
class	creates a ||| fits hdu	count=1
arg	string from ||| cls fileobj sep	count=1
function	this [function] ||| group [function]	count=1
function	only inside ||| temp	count=1
class	state w ||| w0wa cdm	count=1
function	of earth parameters ||| earth	count=1
class	unit (e g 'length') ||| unit base	count=1
class	nx2 array ||| wcspixel2world	count=1
arg	by rows a join_type ||| join_type	count=1
arg	have a mask ||| mask	count=1
function	in the range ||| range	count=3
function	a new class that ||| make	count=1
module	may contain a ||| fits	count=1
function	over all [function] elements ||| iter [function]	count=1
function	the same [function_2] ||| [function_1] [function_2]	count=3
function	config file ||| unedited config file	count=1
arg	the nearest ||| catalogcoord nthneighbor	count=2
arg	specified ||| item	count=1
module	copy the columns ||| io	count=1
function	contain a field-specifier to ||| normalize keyword	count=1
function	control how [function] ||| [function] cleaning	count=3
module	classmethod ||| fits	count=1
module	spec do [module] opposite if ||| [module]	count=1
arg	val1 and ||| val1 val2	count=1
arg	val2 as ||| val2	count=1
function	energy ||| w0	count=1
function	a list of booleans ||| bool list	count=1
function	the dtype [function_2] ||| [function_2] [function_1]	count=2
function	can deal ||| array	count=1
function	of clear ||| clear	count=1
function	registry the ||| registry	count=1
arg	include_names ||| include_names	count=1
function	existing function [function_2] ||| [function_1] [function_2]	count=2
function	for use with the ||| graph	count=1
function	z = wp ||| zp	count=1
module	units so they appear ||| units	count=1
module	definition parameters in the ||| io fits	count=1
class	the number ||| xmlwriter	count=1
function	is the ||| skyoffset	count=1
function	of the long names ||| long names	count=1
class	a ||| function	count=1
module	[module] in ||| [module]	count=6
module	string ||| coordinates	count=1
arg	around some axis ||| axis unit	count=2
function	readfrom and ||| readfrom	count=1
module	a ~astropy io ||| io	count=2
function	we create a ||| create	count=1
module	is a valid xml ||| utils xml	count=1
function	get attributes ||| getattr	count=1
module	affects ||| extern configobj	count=2
function	length ||| length	count=1
function_arg	reader for [arg_2] ||| [function_1] [arg_2]	count=1
function	coordinates back ||| orig	count=1
function	the parse ||| parse	count=1
arg	interval given ||| interval	count=2
module	file is ||| xml	count=1
module	current configobj ||| configobj	count=1
function_arg	rename [arg_2] ||| [function_1] keyword [arg_2]	count=1
class	object of this class ||| location	count=1
function_arg	[function_1] given frequency ||| [function_1] [arg_2]	count=2
arg	a join_type of ||| join_type	count=2
function	logging of ||| exception logging	count=1
function	find all rows ||| find	count=1
module	the ||| nddata	count=1
function	and show it in ||| show in	count=1
function	as a representation object ||| as	count=1
function	frame was created ||| frame attr	count=1
arg	classmethod to ||| cls	count=1
arg	url ||| url	count=1
function	object is [function_2] ||| [function_2] [function_1]	count=1
function	package's docstring ||| make transform graph docs	count=1
module	the 'mode' string of ||| io fits	count=1
arg	keyword value that may ||| keyword	count=1
arg	read [arg] and ||| [arg]	count=1
function	all [function] elements in ||| iter [function]	count=1
module	[module_1] votable ||| [module_1] [module_2]	count=16
arg	sum of val1 ||| val1	count=1
function	masked ||| masked	count=1
class	modifies the parameter ||| fitter	count=1
function	density/critical density of neutrinos ||| onu0	count=1
arg	above idx [arg] ||| idx [arg]	count=3
function	open in binary ||| binary	count=1
function	to call ||| call	count=1
module	returns the number ||| xml	count=1
function	a new class that ||| skyoffset cls	count=1
module	the header ||| io fits hdu	count=2
function	slice ||| slice	count=4
module	the coordinate class with ||| coordinates	count=1
function	will have no inverse ||| inverse	count=1
arg	inputs or raise vdtparamerror ||| names values to_float	count=1
function	[function_1] besselian epoch ||| [function_2] [function_1]	count=2
arg	list of fields ||| fields	count=1
function	nddata instance ||| support nddata	count=1
function	from an existing ||| from	count=1
class	data should be ||| comp image hdu	count=1
function	check that ||| array prepare	count=1
class	_compoundmodel when either model ||| model	count=1
arg	internal _format scale ||| scale	count=1
class	[class_1] time ||| [class_1] [class_2]	count=1
function	delete bscale/bzero [function_2] ||| [function_2] [function_1]	count=2
function	class for this type ||| col for	count=1
class	index ||| index	count=8
function	[function_1] the indices ||| [function_2] [function_1]	count=1
function	this class for ||| of site	count=1
function	transformation between two coordinate ||| transform	count=1
arg	table object to an ||| table	count=1
function_arg	to [arg_2] ||| [function_1] arr [arg_2]	count=1
function_arg	[function_1] bic given ||| [function_1] log_likelihood [arg_2]	count=3
function	[function_1] a record-valued ||| [function_1] [function_2]	count=1
function	constellation ||| constellation	count=1
function	eccentricity of the ||| eccentricity	count=1
function	[function_1] raise ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] exponent [arg_2]	count=14
module	can be given ||| utils	count=1
function	[function_1] physical unit ||| [function_2] [function_1]	count=3
function	name ||| dtype info name	count=1
module	or more hdu ||| io fits hdu	count=1
function_arg	position [arg_2] ||| [arg_2] [function_1]	count=2
function	interpolation ||| 1d	count=1
arg	a particular pixscale ||| pixscale	count=1
class	transform ||| wcsworld2pixel transform	count=1
class	time object ||| time	count=1
function	get either the hub ||| get	count=1
function	needed to pad ||| pad	count=1
function	critical density ||| critical density	count=2
module	for use with the ||| coordinates builtin_frames	count=1
arg	the x ||| x	count=1
arg	namespace this is used ||| namespace	count=1
function_arg	[function_1] [arg_2] ||| [function_1] by [arg_2]	count=4
arg	value and ||| value	count=2
arg	new ||| merge_attributes	count=1
arg	content of the children ||| iterator config	count=1
function	the decorated ||| format doc	count=1
module	html ||| vo validator	count=1
function	angle in radians ||| radians	count=3
arg	the ufunc can deal ||| obj context	count=1
arg	lines after ||| lines	count=1
function	to an array ||| to	count=1
class	object's data ||| array	count=1
module	that sets sequence if ||| extern configobj	count=1
function	conversions on any other ||| other	count=1
arg	in the optical/ir using ||| t source_eps sky_eps dark_eps	count=1
module	elements in the ||| io	count=1
arg	a fitshdu ||| compress	count=1
module	the bscale value as ||| io fits	count=1
arg	and/or comment and/or position ||| comment before	count=1
function	get slices ||| slices	count=1
function	a ||| prepare	count=1
arg	after ||| after	count=1
module	sets the attributes of ||| io	count=1
class	in this table ||| table base	count=1
arg	data based on ||| nrows config	count=2
class	to cylindrical polar ||| cylindrical	count=1
module	scalars/sections also clears ||| configobj	count=1
class	class ||| header	count=1
function	specific ||| cls	count=1
function	values of all cards ||| values	count=1
function	in 3d ||| 3d	count=1
class	the coordinate ||| coordinate	count=1
function	of this class ||| of site	count=1
arg	namespace this is ||| namespace	count=1
module	a ~astropy io votable ||| io votable	count=2
class	names to their ||| model	count=1
function	[function] that are ||| has mixin [function]	count=1
function	convert ||| normalize keyword	count=2
function	upon removal [function] ||| update [function]	count=1
function_arg	proportion [arg_2] ||| [function_1] x [arg_2]	count=3
function	card and handle ||| card	count=1
module	through the ||| io fits hdu	count=1
function	signature object for ||| signature	count=1
function	restore default ||| restore	count=1
arg	file if not ||| file cache	count=1
module	about [module] ||| [module]	count=2
function	ut1 - [function] this ||| get delta ut1 [function]	count=1
function	data as ||| data	count=1
class	return the client ||| sampclient	count=1
function	find the [function_2] ||| [function_1] [function_2]	count=3
module	or more hdu need ||| hdu	count=1
module	of the hdus ||| io fits	count=1
arg	begin [arg_2] ||| [arg_2] [arg_1]	count=1
module	application ||| vo samp	count=1
module	decorator ||| bundled	count=1
arg	deprecated unit in ||| unit	count=1
module	clear configobj instance ||| extern configobj	count=1
arg	method ||| private_key	count=7
function	to noise ||| to noise	count=1
class	an error according to ||| obj	count=1
function_arg	write a [arg_2] ||| [function_1] hdf5 [arg_2]	count=4
function	of origin frame ||| cls	count=1
function	transform [function] ||| [function]	count=2
module	on ||| hdu	count=1
module	deal with a ||| function	count=1
function	derivatives ||| fit deriv	count=2
module	new class ||| builtin_frames	count=1
function	one in [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] list ||| [function_1] string [function_2]	count=1
class	log parabola ||| log parabola1d	count=4
function	return the total intensity ||| intensity	count=1
module	the _basediff ||| io	count=1
module	next fits ||| fits	count=1
function	return the bases ||| bases	count=2
function	kraft burrows and nousek ||| mpmath kraft burrows nousek	count=1
arg	north between this skycoord ||| other	count=1
arg	function ||| function	count=7
function	mime [function_2] ||| [function_1] [function_2] type content_type	count=1
function	of earth parameters ||| prepare earth	count=1
arg	[arg_1] indices ||| [arg_2] [arg_1]	count=8
arg	reply ||| msg_id	count=1
class	this class ||| earth	count=1
class	the header ||| header	count=4
function	that may contain a ||| normalize	count=1
function	a ||| keyword	count=2
function	[function_1] proportion and ||| [function_2] [function_1]	count=1
function	the catalog is created ||| catalog	count=1
function	recursively iterate over all ||| iter	count=1
module	serializing in the tabledata_ ||| io	count=1
function	to noise ||| to noise oir	count=2
function	return a view ||| new view	count=1
module	that ||| io fits	count=2
function	a table writer ||| writer	count=1
function	handle ||| handle	count=2
class	this ||| simplex lsqfitter	count=1
class	in this ||| base hdu	count=1
function	numpy recformats using ||| cmp recformats	count=1
function	inverse of the ||| inverse	count=1
function_arg	index [arg_2] ||| [function_1] [arg_2]	count=3
class	of unit ||| function unit	count=1
function	file on ||| fromfile	count=1
function	apparent ||| get apparent	count=1
class	a cds [class_2] ||| [class_2] [class_1]	count=1
module	a new class ||| coordinates builtin_frames	count=1
arg	wcs wcs ||| wcs origin mode	count=1
class	converts this ||| base	count=2
class	an ||| obj	count=1
class	one dimensional line ||| linear1d	count=1
module	the given ||| io	count=1
function	bayesian information [function_2] ||| [function_2] [function_1]	count=2
class	of the future ||| future	count=1
module	of a fits file ||| fits	count=1
arg	class for a given ||| cls	count=1
function	like _lookup_by_attr_factory, but ||| lookup by	count=1
class	implements any unknown ||| unknown	count=1
function	write a string ||| write string	count=3
module	as specified by the ||| io	count=1
function_arg	[function_1] wrap_angle ||| [function_1] [arg_2]	count=1
function	transformation between two ||| get transform	count=1
module	either the ||| io fits	count=1
module	object or ||| fits	count=1
function_arg	response [arg_2] ||| [arg_2] [function_1]	count=2
class	field instance ||| field	count=2
class	time in the cache ||| time	count=1
module	is currently in ||| utils	count=1
class	to the registry ||| site registry	count=1
arg	[arg_1] y onto ||| [arg_2] [arg_1]	count=1
module	[module_1] from the ||| [module_2] [module_1]	count=4
function	coordinate ||| make transform graph	count=1
function	ra and dec ||| apparent position	count=1
function	histogram bin [function_2] ||| [function_1] [function_2]	count=1
arg	confidence interval given ||| interval	count=1
function	records [function] which ||| [function]	count=1
module	deal ||| units function	count=2
class	partial ||| predictor	count=2
arg	after an ||| after replace	count=1
function	close ||| close	count=2
function	the lookback time ||| tfunc	count=1
function	with appropriate ||| base	count=1
function_arg	[function_1] value of ||| [function_1] [arg_2]	count=1
function	class of ||| make skyoffset	count=1
arg	method standard ||| private_key	count=1
function	[function_1] column object ||| [function_1] [function_2]	count=1
class	spherical polar coordinates ||| physics spherical	count=1
module	sure it gets the ||| io fits	count=1
function	the input ||| coords	count=1
module_class	case-insensitive with respect to [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	to ||| array to file like	count=1
arg	of val1 and ||| val1	count=1
function	or raise ||| or raise	count=2
arg	modify ||| col_slice	count=2
arg	a join_type ||| join_type col_name_map	count=1
function	read iers-a table from ||| read	count=1
module	the futures in the ||| futures	count=1
function_arg	indices [arg_2] ||| [function_1] col_slice [arg_2]	count=2
class	quantity view ||| quantity	count=1
function	of ||| skyoffset cls	count=1
module	of the ||| io fits	count=18
class	copy of the row ||| row	count=1
class	model __call__ to ||| model	count=1
function	allclose ||| not allclose	count=1
class	display row ||| row	count=1
function	"best" ||| best	count=1
function	[function_1] ticks ||| [function_2] [function_1]	count=2
function	can ||| prepare	count=1
function	create a new class ||| make	count=1
function	to its initial state ||| set defaults	count=1
function	[function_1] to hours ||| [function_1] [function_2]	count=4
function	in transverse comoving ||| comoving	count=1
function	origin frame ||| skyoffset cls	count=1
function	diameter ||| diameter	count=2
function	contain a ||| normalize keyword	count=1
arg	formatted string representation ||| max_lines show_name show_unit	count=1
function	enabled in the unit ||| add enabled	count=1
function	class of origin frame ||| make	count=1
arg	matches the value ||| value	count=1
module	: ||| nddata	count=4
function_arg	array [arg_2] ||| time make [function_1] [arg_2]	count=2
function	: [function] for ||| [function]	count=1
module	[module] keyword_indices dict ||| [module]	count=3
module	that ||| builtin_frames	count=1
function	mixin [function] that ||| has mixin [function]	count=1
function	grid parameters from ||| grid	count=1
class	a functionquantity ||| function quantity	count=1
module	comments to [module] ||| [module]	count=1
function	[function_1] but with ||| [function_2] [function_1]	count=5
module	ascii files the ||| io fits	count=1
module	returns the ||| io	count=2
module	table ||| fits hdu	count=1
module	but ||| io fits	count=1
module	the corresponding python object ||| io	count=1
module	the header of a ||| io	count=2
function	then copy those ||| copy	count=1
function	a single hdu from ||| hdu	count=1
class	[class_1] is especially ||| [class_2] [class_1]	count=1
class	state ||| w0wa cdm	count=3
module	[module_1] hdus in ||| [module_1] [module_2]	count=2
class	w r t ||| w0wa cdm	count=1
class	a quantity view ||| quantity	count=1
class	this [class_2] ||| [class_1] [class_2]	count=11
function	[function_1] but ||| [function_1] [function_2]	count=3
class	the value for the ||| base	count=1
module	one parameter ||| modeling	count=1
arg	contain ||| cls	count=1
function	float or [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] column ||| [function_2] [function_1]	count=7
module	if the given ||| utils	count=1
class	run time in the ||| run time	count=1
module	the positions ||| io	count=1
function_arg	write comment [arg_2] ||| [function_1] header [arg_2]	count=2
function	from ||| remove	count=1
class	this coordinate ||| sky coord	count=2
module	the number of ||| xml	count=1
function	node associated with the ||| node	count=1
function	[function_1] any extension ||| [function_1] [function_2]	count=1
function_arg	bind [arg_2] ||| [function_1] receive message [arg_2]	count=3
function	a string for use ||| make transform	count=1
module	from the ||| io fits hdu	count=3
class	to csv ||| csv	count=1
function	differential comoving [function_2] ||| [function_2] [function_1]	count=1
function	the node associated with ||| node	count=1
module	the ||| utils	count=16
function	ut1 - [function_2] ||| [function_1] [function_2]	count=1
function	load observatory database ||| downloaded sites	count=1
function	mean [function_2] ||| [function_1] [function_2]	count=3
function	mode ||| mode	count=1
class	associated with [class_2] ||| [class_1] [class_2]	count=1
function	table header ||| header	count=1
function	process ||| process	count=1
function	physical quantity it represents ||| get physical type	count=1
class	convert datetime object ||| time datetime	count=1
arg	given astropy table table ||| table	count=1
function	"representation attributes" for specifying ||| representation attrs	count=1
function	header ||| header	count=4
module	of the ||| utils	count=2
arg	using a ||| str_fmt	count=1
class	listeners of some particular ||| notifier mixin	count=1
function	constellation s ||| get constellation	count=1
arg	check that the value ||| value min max	count=3
function	[function_1] tick ||| [function_1] [function_2]	count=1
module	for ||| coordinates	count=3
arg	cards ||| cards	count=1
function	any other ||| other	count=1
function	a ||| skyoffset	count=2
function	hdf5 file this ||| table hdf5	count=1
function	split it into ||| split	count=1
module_class	to implement [class_2] ||| [module_1] [class_2]	count=6
module	append [module] file ||| [module]	count=1
function	[function] the ||| group [function]	count=1
class	data ||| array	count=1
function	for this ||| convert col for	count=1
function_arg	[function_1] comment lines ||| [function_1] header [arg_2]	count=1
class	bintablehdu ||| hdu	count=1
function	converts spherical ||| spherical	count=1
module	initializes ||| utils compat	count=1
class	uncertainty propagation ||| unknown uncertainty	count=1
function	to a ||| to file like	count=1
class	the hdu ||| valid hdu	count=1
arg	confidence interval in ||| range	count=1
module	a ||| compat futures	count=2
module	the table ||| io ascii	count=10
class	with the ||| representation	count=1
function	site registry the ||| site registry	count=1
module	the decorated object ||| utils	count=1
function	float [function_2] ||| [function_1] [function_2]	count=2
module	parameter names ||| modeling	count=3
arg	to a bit ||| field recformat	count=1
arg	state of ||| state	count=1
function	object that partially ||| partial	count=1
function	subclass of ||| subclass	count=1
class	fitshdu fromhdulist(), but creates ||| hdu	count=1
module	returns the number ||| io fits	count=1
function	the ||| format doc	count=2
arg	new coordinate transformation to ||| fromsys tosys transform	count=1
module	valid xml ||| xml	count=1
module	an a list ||| fits	count=1
function	mime ||| check mime	count=1
function_arg	of all [arg_2] ||| [function_1] equivalent units [arg_2]	count=1
function	the center of ||| center 2d	count=1
module	like fitshdu fromhdulist(), but ||| hdu	count=1
arg	[arg_1] and kwargs ||| [arg_2] [arg_1]	count=1
module	the custom ||| io	count=1
arg	a function on ||| function	count=1
function	for multiplication with ||| wrap	count=1
module	for use with the ||| coordinates	count=1
module	also affects ||| extern	count=1
function	from ||| get model	count=1
function_arg	entire element [arg_2] ||| [function_1] [arg_2]	count=5
arg	integer offsets with one ||| offsets	count=1
class	the individual [class] functions ||| [class]	count=2
function	for use with the ||| make transform graph	count=1
function	the center of ||| center 1d	count=1
arg	the end ||| end	count=1
function_arg	[function_1] (_header) ||| [arg_2] [function_1]	count=3
function	estimate of the airmass ||| secz	count=1
class	is ||| model meta	count=1
class	and ||| section	count=1
arg	[arg] array ||| [arg]	count=3
class	this class ||| location	count=1
class	the coordinate ||| coordinate frame	count=1
function	[function_1] arbitrary ||| [function_2] [function_1]	count=5
function	return difference ||| time difference	count=2
module	at ||| cosmology	count=3
function_arg	[function_1] overlapping part ||| [arg_2] [function_1]	count=2
function_arg	to a [arg_2] ||| [function_1] hours h [arg_2]	count=1
function	always returning a positive ||| positive	count=1
module	number ||| utils	count=1
class	box ||| box	count=1
module	defined by the fits ||| io fits	count=1
module	class of ||| coordinates	count=1
function	_lookup_by_attr_factory, but looks in ||| by	count=1
class	from a ||| hdu	count=1
function	can ||| can	count=1
class	of state w r ||| w0wa	count=1
function	photons ||| ogamma0	count=1
module	the input ||| io fits	count=1
module	of dark energy equation ||| cosmology	count=1
function	the data files ||| pkg data	count=2
module	contains any [module] or image ||| [module]	count=1
module	get [module] and ||| [module]	count=1
class	subsequent use ||| inputter	count=1
class	read ||| iers a	count=1
function_arg	with the [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
class	with a functionquantity ||| function quantity	count=1
function	set pm source ||| pm source	count=2
function	with the information ||| info	count=1
arg	the given urls ||| urls cache	count=1
module	to uppercase ||| fits	count=1
function_arg	[function_1] angle represented ||| [arg_2] [function_1]	count=1
arg	if val ||| val	count=1
module	_update_<notification> method with the ||| io fits	count=1
arg	given hdulist [arg_2] ||| [arg_2] [arg_1]	count=2
arg	the given indices ||| indices axis	count=1
arg	a method to the ||| method	count=1
function	find ||| find	count=1
arg	row_map ||| row_map	count=1
arg	model by taking the ||| model x_range y_range	count=2
function	a view of ||| view	count=1
module	a ||| extern configobj	count=2
function	create a new ||| skyoffset	count=1
arg	some [arg] ||| [arg]	count=1
class	check that ||| function quantity	count=1
function	be emitted ||| exception	count=1
function	[function_1] fits ||| [function_2] [function_1]	count=2
function	and adjust physical ||| and adjust physical	count=1
class	the ||| time	count=2
class	deal with a functionquantity ||| quantity	count=1
arg	set [arg_1] [arg_2] to ||| hdulist setitem [arg_1] [arg_2]	count=1
function	an astropy [function_2] ||| [function_2] [function_1]	count=3
class	extension ||| extension	count=1
class	each [class] the ||| table [class]	count=1
function	from ||| from table	count=1
function	critical density in grams ||| critical density	count=1
module	hdu from the ||| io fits hdu	count=6
function_arg	dut arg = ut1 [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
module	used to implement ||| fits	count=1
module	the values for any ||| io fits	count=1
class	hdus [class_2] ||| [class_2] [class_1] match header cls header	count=3
arg	of val1 ||| val1	count=1
class	executor ||| executor	count=1
function	file-like ||| file	count=1
function	node associated ||| node	count=1
module	the first ~astropy ||| io	count=1
function	class that is the ||| skyoffset cls	count=1
module	executor ||| utils compat futures	count=1
function	override to draw ||| draw	count=1
function	write [function_2] ||| [function_1] [function_2]	count=3
function_arg	[function_1] value and ||| [arg_2] [function_1]	count=4
function	the worker ||| queue manangement worker	count=1
module	the [module_2] ||| [module_1] [module_2] append filename data header	count=1
function	defines the applicability ||| type	count=1
class	class for [class_2] ||| [class_2] [class_1]	count=1
module	more hdu ||| io fits hdu	count=1
class	quantity [class] z=0 ||| [class]	count=1
module	dark energy equation of ||| cosmology	count=2
function	data ||| download	count=1
arg	given indices ||| indices axis mode	count=2
module	file-like ||| utils	count=1
function	use ||| transform	count=1
function_arg	interpolate ut1-utc [arg_2] ||| [function_1] [arg_2]	count=2
module	directly ||| io fits hdu	count=1
class	the config ||| config	count=1
arg	[arg_1] y ||| [arg_2] [arg_1]	count=1
class	a tuple with ||| base representation	count=1
module	a database ||| client	count=1
arg	any hdu in filename ||| filename	count=1
arg	given the value of ||| value	count=1
module	modeling ||| modeling	count=2
class	of this ||| array	count=1
class	[class_1] on earth ||| [class_2] [class_1]	count=4
module	the next fits ||| io fits	count=1
function	of origin frame ||| make skyoffset	count=1
module	the number ||| utils	count=1
function	_lookup_by_attr_factory, but looks ||| lookup by	count=1
arg	lon ||| lon	count=1
class	summary information about ||| info	count=1
module	them in the ||| io votable	count=1
module	from an ||| io fits	count=1
function	coordinate ||| make	count=1
function_arg	[function_1] arg ||| [arg_2] [function_1]	count=1
module	the current configobj ||| extern configobj	count=1
function	header ||| update header	count=1
function	is running ||| check running	count=1
function	origin ||| cls	count=1
module	similarly to [module] ||| [module]	count=3
class	r ||| w0wa cdm	count=1
module_class	limits [class_2] ||| [module_1] [class_2]	count=2
function	long ||| long	count=1
function	input data ||| data	count=1
class	array ||| cutout2d	count=1
arg	[arg_1] some axis ||| [arg_2] [arg_1]	count=1
function	returns its contents ||| contents	count=1
function	the ||| skyoffset cls	count=1
function	[function_1] values ||| [function_1] [function_2]	count=5
function	raise an exception depending ||| raise	count=1
arg	val2 format ||| val2 format	count=2
function	functionquantity ||| array	count=1
class	the ||| representation	count=2
module	an ||| io votable	count=1
function_arg	to this [arg_2] ||| [function_1] [arg_2]	count=3
function	a string formatted ||| degrees to string	count=1
class	datetime object ||| datetime	count=1
function	rename a [function_2] ||| [function_2] [function_1]	count=1
class	a stretch ||| eq stretch	count=1
function	[function_1] summary docs ||| [function_2] [function_1]	count=4
function	a ~numpy ndarray to ||| to	count=1
function	[function_1] votable ||| [function_1] [function_2]	count=3
function_arg	return a [function_1] [arg_2] ||| [function_1] [arg_2]	count=7
class	state w r t ||| w0wa	count=1
class	the [class_1] [class_2] ||| [class_1] [class_2]	count=8
module	associated fits file ||| fits	count=1
class	of the instance ||| base representation	count=1
module	the decorated object and ||| utils	count=1
module	when saving [module] since ||| [module]	count=1
function	in which [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] copy is ||| [arg_2] [function_1]	count=2
function	[function_1] indices ||| [function_1] interpolate [function_2]	count=1
function_arg	utility [function_1] [arg_2] array parameters ||| [function_1] [arg_2] assume_regular_frequency	count=2
class	end of the index ||| sliced index	count=1
arg	from the given urls ||| urls cache	count=1
arg	at the given ||| axis mode	count=1
arg	matrix ||| matrix	count=2
arg	iers_a ||| cls iers_a	count=1
function	the parse method ||| parse	count=1
class	and two model ||| model	count=1
module	and angular units ||| units	count=2
module	from ||| hdu	count=1
module	a filename or ||| utils	count=1
function	inverse [function_2] ||| [function_2] [function_1]	count=2
class	3-tuple for ||| base	count=1
function	[function_1] [function_2] type syntactically at least ||| [function_1] [function_2]	count=4
arg	data from lines as ||| lines	count=1
function	filename ||| get file	count=1
class	this sorted [class_2] ||| [class_1] [class_2]	count=1
function	with [function_2] ||| [function_2] [function_1]	count=4
class	stretch ||| bias stretch	count=2
arg	to output ||| output	count=1
function	convert ascii table format ||| convert ascii	count=1
function_arg	unicode (dtype kind='u') ||| unicode python3_only	count=1
arg	n of x ||| n x	count=1
module_class	implement header __setitem__ ||| io fits header	count=1
module	replaces ||| utils	count=1
arg	[arg_1] [arg_2] pair ||| [arg_1] [arg_2]	count=3
function	possible wildcarded subtypes ||| subtypes	count=1
function_arg	[function_1] new frame ||| [function_1] [arg_2]	count=1
function	generates ||| transform graph	count=1
class	[class_1] data line ||| [class_1] [class_2]	count=1
function	like __eq__, the hash ||| hash	count=1
class	bind [class] ||| [class]	count=3
function	from a given ||| generate	count=1
function	transverse comoving kpc ||| kpc comoving	count=2
module	value that may contain ||| io	count=1
function	numpy array [function_2] ||| [function_1] [function_2]	count=2
class	[class] as specified ||| [class]	count=3
function	data from a file ||| data	count=1
function_arg	[function_1] function ||| [function_1] msg_tag [arg_2]	count=1
module	of the column ||| io votable	count=2
function	[function] s in ||| [function]	count=1
function	[function_1] floating number ||| [function_2] [function_1]	count=1
arg	deal with ||| obj	count=1
function_arg	[function_1] [arg_2] ||| [function_1] model [arg_2]	count=5
module	of the ||| coordinates	count=1
class	compressed image format and ||| comp image hdu	count=1
class	the data ||| image hdu	count=1
class	setter ||| custom	count=1
class	a uri to an ||| link	count=1
function	kraft [function_2] ||| [function_1] [function_2]	count=8
module	default behavior of the ||| time	count=1
module_class	[module_1] listeners ||| [module_1] [class_2]	count=2
class	hdu ||| hdu	count=6
arg	[arg_1] the package ||| [arg_1] [arg_2]	count=4
function	check that [function_2] ||| [function_2] [function_1]	count=2
function	meta data for ||| meta	count=1
class	index ||| sliced index	count=2
function	for a ||| make skyoffset	count=1
function	type converters and ||| and	count=1
function	kraft burrows ||| kraft burrows	count=3
arg	local ||| show_progress remote_timeout	count=1
function_arg	kernel arrays [arg_2] ||| [arg_2] [function_1]	count=1
arg	lat ||| lat	count=1
module	configobj instance and restore ||| extern configobj	count=1
arg	values ||| values	count=4
arg	write ||| write	count=1
function	angle of ||| angle	count=1
function	metaclass ||| add metaclass	count=1
class	result ||| fast commented	count=1
function	class that ||| skyoffset cls	count=1
function	cutout ||| cutout	count=3
function_arg	file-like object if ||| fileobj mode f	count=1
module_class	not the header ||| io fits header	count=1
module_class	true : [class_2] ||| [module_1] [class_2]	count=6
class	z=0 ||| w0wa	count=1
arg	body body relative to ||| body time ephemeris	count=1
arg	the m ||| m	count=1
class	a unit ||| unit base	count=1
function	update the data ||| update	count=2
function	class for a ||| site	count=1
arg	file ||| cls	count=1
class	names of the ||| representation	count=1
function	for ||| of site	count=2
module	return [module] ||| [module]	count=3
function_arg	a join [arg_2] ||| [arg_2] [function_1]	count=5
arg	coordinate transform ||| tosys transform	count=1
class	of dark ||| w0wa	count=1
arg	a data array by ||| data block_size	count=1
module	and returns the ||| io fits	count=1
function	error ||| error	count=1
module	of the ||| time	count=1
function	add ||| add transform	count=2
function	to convert ||| keyword	count=1
function	a diff between ||| diff keyword	count=1
function	and latitude [function] from kwargs ||| get [function]	count=1
function	a new ||| make	count=1
function	and then [function_2] ||| [function_1] [function_2]	count=4
module	state w r t ||| cosmology	count=1
function	that is ||| make skyoffset cls	count=1
arg	display ||| fout	count=1
function_arg	[function_1] given urls ||| [arg_2] [function_1]	count=3
arg	given [arg] ||| array_large [arg]	count=2
module	a database [module_2] ||| [module_2] [module_1]	count=3
arg	a file-like object ||| fileobj endcard	count=1
class	cartesianrepresentation with the correct ||| cartesian representation	count=1
function	fit ||| do fit	count=1
module	returns the number of ||| xml	count=1
module_class	[module_1] signature from ||| [class_2] [module_1]	count=1
function	to the x ||| to	count=1
arg	removes ||| ignore_missing remove_all	count=1
function	minute second to ||| hms to	count=4
class	to this sorted array ||| sorted array	count=1
function	b columns ||| b columns	count=1
module	current configobj as a ||| configobj	count=1
function	boundarguments object that partially ||| partial	count=1
arg	on specified keys ||| keys join_type	count=1
class	[class] if ||| alias [class]	count=3
class	image data ||| image base	count=1
function	~numpy ndarray to ||| to file	count=1
arg	a file ||| file cache	count=1
arg	[arg] don't ||| [arg]	count=1
arg	object from a raw ||| cls image	count=1
module_class	from the [class_2] ||| [module_1] [class_2]	count=9
class	pivot ||| wpwa	count=1
arg	key as ||| key	count=1
class	opened with ||| base	count=1
function	the file ||| get	count=1
class	file on ||| hdu	count=1
function	[function_1] column ||| [function_1] [function_2] format cls format	count=3
function	to temporarily log ||| log	count=1
module	flushing the file ||| io fits	count=1
class	data should be converted ||| image hdu	count=1
module	a given format ||| units format	count=1
class	of ||| base	count=1
function	such a thing exists ||| mode	count=1
function	[function_1] noise ratio ||| [function_1] [function_2]	count=2
class	names ||| representation	count=1
class	uri ||| link	count=1
function	[function] scalar ||| scalar [function]	count=1
class	row as a ||| row	count=1
module	copy the columns and ||| io	count=1
function_arg	writer [arg_2] ||| [function_1] [arg_2]	count=1
function	function but with the ||| function with	count=1
function	a latex representation of ||| repr latex	count=1
arg	val1 [arg_2] ||| [arg_1] [arg_2]	count=3
function	of coordinate ||| coordinate	count=1
function	to [function_2] ||| [function_1] [function_2] filename filter_level filter_origin	count=1
function	enabled in the unit ||| enabled	count=2
module	given format ||| format	count=1
class	[class_1] attribute ||| [class_1] [class_2]	count=5
function	recursively [function] ||| [function]	count=1
function	[function_1] corresponding to ||| [function_1] proper [function_2]	count=1
function	array with the ascii ||| ascii	count=1
function	[function_1] functions ||| [function_1] [function_2]	count=2
function	from one besselian ||| besselian	count=1
module	evaluate the ||| stats	count=1
arg	a bit array ||| field recformat	count=1
function	is currently connected ||| is connected	count=2
function	update the data ||| update column	count=1
arg	north between this ||| other	count=1
function_arg	val1 [arg_2] ||| [function_1] val1 [arg_2]	count=3
function	the long ||| long	count=1
arg	deprecated unit in ||| s unit	count=1
function_arg	[function_1] a subsampling ||| [arg_2] [function_1]	count=5
function	the configspec on subsections ||| set configspec	count=1
function	the coordinate package's docstring ||| make transform graph docs	count=1
module	[module_1] associated fits ||| [module_1] [module_2]	count=2
function	[function_1] corresponding to ||| [function_2] [function_1]	count=10
function	no bounding box ||| bounding box	count=1
module	vo catalog ||| vo	count=1
class	but ||| hdu	count=1
arg	model [arg_2] ||| [arg_1] [arg_2]	count=15
function	[function_1] minor ||| [function_1] [function_2]	count=1
function	create a new array ||| create	count=1
function_arg	[function_1] specific msg-tag ||| [arg_2] [function_1]	count=1
arg	_format scale and ||| scale	count=1
function	[function_1] column object ||| [function_2] [function_1]	count=1
module	the appropriate votable ||| io votable	count=1
function	temporary file [function] which ||| tmp [function]	count=1
function	object to ||| to	count=1
function	the physical type of ||| physical type	count=1
class	the column ||| base column	count=1
function	will write ||| filebytes	count=1
function	parameters constant-valued columns ||| params	count=1
function	table ||| table	count=12
function	for ||| convert uncertainty	count=1
function	contain ||| keyword	count=1
class	the partial function for ||| predictor	count=1
function	lookback time in ||| lookback time	count=2
function	too long ||| format long	count=1
arg	values before ||| values	count=1
arg	table table ||| table	count=1
function	to [function_2] ||| [function_2] [function_1]	count=11
arg	a _renamed_ function ||| old_name new_name since arg_in_kwargs	count=1
module	start with the ||| io	count=2
module	to ||| io	count=2
module	[module_1] the column ||| [module_2] [module_1]	count=3
class	state w ||| cdm	count=1
arg	and no word ||| input	count=1
arg	a key [arg_2] ||| [arg_2] [arg_1]	count=1
function	a ||| of site	count=2
function	the cutout array ||| cutout	count=3
function	values with ||| fill values	count=2
function	it is a votable ||| is votable	count=1
function	find the ||| find	count=1
function	class that is the ||| skyoffset	count=1
function_arg	[function_1] [arg_2] ||| [function_1] x success bins [arg_2]	count=8
function_arg	[function_1] [arg_2] ||| [function_1] col_slice [arg_2]	count=8
arg	given ||| cls	count=1
function	frame ||| skyoffset	count=1
class	keywords in the header ||| header	count=1
module	unit registry ||| units	count=2
function	the constellation s ||| get constellation	count=1
module	[module] for ||| [module]	count=3
function	in a datablock ||| multiline	count=1
class	to expected [class_2] ||| [class_2] [class_1]	count=2
function	2d ||| 2d	count=1
function	get either ||| get	count=1
function	a ~numpy ndarray to ||| to file	count=1
module	check matches the ||| extern configobj	count=1
function	scalar coordinate ||| coord type	count=1
function	a config file can ||| unedited config file	count=1
arg	the x coordinates ||| x	count=1
function	coordinate ||| coord type	count=1
function_arg	[function_1] different size ||| [function_1] [arg_2]	count=1
module	from a file ||| hdu	count=1
function_arg	[function_1] to ||| [function_1] [arg_2]	count=1
function	[function_1] comoving volume ||| [function_1] [function_2]	count=1
arg	specific [arg] ||| [arg]	count=1
class	law ||| law1d	count=4
class	to spherical ||| spherical	count=3
class	unit (e g 'length') ||| unit	count=1
module	just copy the columns ||| io	count=1
function	an oversampled grid ||| oversample	count=2
function	a generator that returns ||| get str vals	count=1
function	create a ||| make skyoffset cls	count=1
function	binomial proportion and ||| binom proportion	count=2
module	get an hdu from ||| fits hdu	count=1
arg	supplied key as a ||| key	count=1
function	a config [function_2] ||| [function_1] [function_2]	count=4
function	comoving kpc corresponding to ||| kpc comoving per	count=1
function	[function_1] patch ||| [function_2] [function_1]	count=4
function_arg	string [arg_2] ||| [arg_2] [function_1]	count=2
function	return a cosmology ||| cosmology	count=1
function	mass ||| mass	count=1
function	a specific class ||| skyoffset cls	count=1
function	generates a string for ||| make transform	count=1
module	to uppercase ||| io	count=1
module	for the ||| io	count=2
module	can deal with ||| units	count=1
function	reading image data ||| get scaled image data	count=1
module	the [module] of arguments ||| [module]	count=1
function	mime content type ||| content type	count=2
arg	given urls blocks until ||| urls cache show_progress	count=1
function	set true if ||| set	count=1
function_arg	proportion and [arg_2] ||| [function_1] x success bins [arg_2]	count=1
arg	of this class ||| cls	count=1
class	_compoundmodel when either model ||| compound model	count=1
arg	by taking the average ||| x_range y_range factor	count=1
function	powers ||| powers	count=2
class	to spherical ||| physics spherical	count=1
function	return ||| time	count=1
arg	and memmap object ||| output_verify verbose closed	count=1
arg	the function to account ||| x	count=1
function	bscale/bzero from header ||| update header scale info	count=1
function	an astropy ||| astropy	count=1
module	from a file on ||| fits hdu	count=1
function	is a votable ||| is votable	count=3
function	the contents ||| contents	count=1
module	create a new ||| coordinates	count=1
module	class of origin ||| builtin_frames	count=1
function_arg	flush [arg_2] ||| [function_1] [arg_2]	count=1
function	given a number split ||| split	count=1
function	[function_1] type as ||| with [function_1] [function_2]	count=1
class	equation of state w ||| w0wa cdm	count=1
module	vo services ||| vo	count=1
module	as the ||| io	count=1
function	or class [function_2] ||| [function_2] [function_1]	count=2
arg	given [arg_1] [arg_2] ||| time get time fmt [arg_1] [arg_2]	count=7
function	may contain a ||| normalize keyword	count=1
arg	given hdulist object ||| cls hdulist	count=2
arg	fitshdu from a ||| filename compress	count=1
function	a property ||| property	count=1
arg	for a ||| cls	count=1
function	a data ||| get pkg data	count=1
function_arg	[function_1] model ||| [arg_2] [function_1]	count=19
function	instance from a given ||| from table	count=1
function	contents ||| get file contents	count=1
arg	for the x coordinates ||| x	count=1
function	[function_1] corresponding ||| [function_1] proper [function_2]	count=1
class	new [class] the ||| [class]	count=1
module	an object with the ||| io	count=1
module	and configspec ||| extern configobj	count=1
function	maximum value ||| max	count=2
function	version ||| version	count=1
module	the data as a ||| io fits hdu	count=1
function	a single ||| parse	count=1
function	a cosmology instance from ||| cosmology from	count=1
function	with a ||| array	count=1
function	[function_1] unit ||| [function_2] [function_1]	count=5
module	type of [module_2] ||| [module_1] [module_2]	count=1
function	[function_1] [function_2] checkout ||| [function_1] [function_2]	count=3
function	returning a positive ||| positive	count=1
module	of the hdus in ||| io	count=1
module	fromhdulist(), but ||| io fits	count=1
module	on the pedantic ||| io votable	count=1
arg	at a given frequency ||| t y dy frequency	count=1
function	of origin frame ||| skyoffset	count=1
function	fromhdulist(), but creates a ||| fromfile	count=1
arg	by performing ||| x_range	count=1
module	method in the parent ||| io fits scripts	count=1
class	[class_1] spherical ||| [class_2] [class_1]	count=1
function	[function_1] hours ||| [function_2] [function_1]	count=5
function	existing function but ||| function	count=1
module	the coordinate ||| builtin_frames	count=1
class	of the frame ||| frame	count=2
module	file on ||| fits	count=1
function	into one in which ||| in true coordinates	count=1
arg	in ||| mask	count=1
function	of skycoord ||| skycoord	count=1
arg	after an ||| after	count=1
function_arg	indices to [arg_2] ||| [arg_2] [function_1]	count=2
arg	memmap ||| output_verify verbose closed	count=1
arg	[arg_1] format and ||| [arg_1] [arg_2]	count=1
function	create a new ||| cls	count=1
class	dark energy ||| w0wa	count=2
function	writable ||| convert to writable	count=1
function_arg	[function_1] card's ||| [function_1] keyword [arg_2]	count=1
arg	function on ||| function	count=1
function_arg	[function_1] specific mtype ||| [function_1] call [arg_2]	count=1
function	kraft burrows ||| mpmath kraft burrows	count=2
module	[module] _get_converter except ||| [module]	count=1
function	a unit ||| unit	count=1
function	as [function_2] ||| [function_1] [function_2]	count=1
module	axes ||| visualization wcsaxes	count=2
arg	a join_type of 'exact' ||| join_type col_name_map	count=1
module	them in the *array* ||| io	count=1
function	to noise ratio ||| to noise oir	count=2
module	but creates ||| io	count=1
class	column specifically those that ||| column	count=1
module	~astropy io votable ||| io votable	count=4
class	initializes ||| pool	count=1
arg	other is of same ||| other	count=1
class	cds [class_2] ||| [class_1] [class_2]	count=1
module	and returns the number ||| io fits	count=1
arg	by taking ||| x_range	count=2
function	reading image ||| scaled image	count=1
function	like :func add_catalog but ||| by	count=1
function	argument ||| argument	count=1
function	equation of state at ||| w0	count=1
function	extent of ||| extent	count=1
function	display minor ticks ||| display minor ticks	count=3
function	the site registry the ||| site registry	count=1
arg	with a functionquantity ||| obj	count=1
arg	lon [arg_2] ||| [arg_2] [arg_1]	count=1
function	a field-specifier ||| normalize keyword	count=1
arg	to other ||| other equivalencies	count=2
function	[function_1] instance from ||| [function_2] [function_1]	count=3
function	the dtype that ||| dtype for	count=2
module	in the *array* and ||| io votable	count=1
module	whitespace at the ||| io	count=4
function_arg	[function_1] a float ||| [arg_2] [function_1]	count=4
arg	a polynomial [arg] which ||| [arg]	count=1
function	write a diff between ||| report diff keyword	count=1
function	removal [function] ||| update [function]	count=1
arg	[arg_1] format ||| [arg_2] [arg_1]	count=3
module	creates ||| io	count=1
function	version of clear that ||| clear	count=1
module	may contain ||| fits	count=1
function	[function_1] density in ||| [function_1] [function_2]	count=1
function	new ||| make skyoffset cls	count=1
function	the [function] ||| [function]	count=4
arg	by taking ||| x_range y_range	count=2
module	in the default ||| io	count=1
function	cache directory and ||| get download cache	count=1
class	[class_1] data ||| [class_1] [class_2]	count=1
arg	model ||| model x y	count=1
function	two [function] more numpy ||| [function]	count=1
arg	a method ||| method	count=1
arg	hdu into ||| hdu	count=1
function	formats ||| format doc	count=1
function	[function_1] polygon such ||| [function_1] [function_2]	count=1
class	for the unit ||| named unit	count=1
function	filename for ||| filename	count=1
module	comments and configspec ||| extern	count=1
class	state at z=0 ||| w0wa	count=1
class	using a ||| base	count=1
arg	a ||| a b rtol atol	count=1
function	formats ||| formats	count=2
function	a table [function_2] ||| [function_2] [function_1]	count=2
arg	coordinate transformation to ||| transform	count=1
function	value ||| keyword	count=1
function	attributes for a votable ||| votable	count=1
arg	structured ||| data names dtype n_cols	count=1
function	validate ||| validate	count=5
class	the frame ||| frame	count=2
function	any mixin [function] that ||| has mixin [function]	count=1
class	raw ||| rec	count=1
module	the positions it ||| io	count=1
class	of this object's data ||| array	count=1
function	the ||| convert	count=1
arg	package and provides the ||| package encoding cache	count=1
function	convert [function_2] ||| [function_2] [function_1]	count=6
function	name of the ||| name	count=2
function	class of origin ||| make	count=1
function	[function_1] type ||| [function_1] [function_2]	count=13
class	model ||| compound model meta	count=2
module	[module] file ||| io [module]	count=2
class	but creates ||| hdu	count=1
class	transform [class_2] ||| [class_1] [class_2]	count=1
module	fitshdu fromhdulist(), ||| hdu	count=1
function_arg	return [function_1] [arg_2] ||| [function_1] [arg_2]	count=7
arg	the specified frame ||| frame	count=1
class	of ||| representation	count=5
module_class	of [module_1] [class_2] ||| [module_1] [class_2]	count=11
arg	inserts a new card [arg_1] [arg_2] existing card used to ||| header relativeinsert card [arg_1] [arg_2]	count=2
arg	account for model constraints ||| model	count=1
function	delete given ||| delete attribute	count=1
class	this is a mixin-safe ||| base	count=1
function	generator that returns a ||| get str vals	count=1
class	replace string values in ||| base	count=1
function	in [function_2] ||| [function_1] [function_2]	count=4
arg	to output where output ||| output	count=1
function	for ||| transform graph	count=1
function	copy ||| copy r	count=1
class	expression ||| expression	count=1
function	the powers ||| powers	count=2
class	with a ||| function	count=1
function	[function_1] dict ||| [function_1] [function_2]	count=1
function	an object of this ||| of	count=1
class	this skycoord contains ||| sky coord	count=2
class	format read by bintablehdu ||| hdu	count=1
class	equation of state ||| w0wa	count=2
function	kraft burrows and nousek ||| kraft burrows nousek	count=2
arg	other ||| other	count=6
function	ref is ||| ref	count=1
function	[function_1] nousek in ||| [function_2] [function_1]	count=10
class	[class_1] power ||| [class_1] [class_2]	count=5
module	parameters in the ascii ||| io fits	count=1
function_arg	[function_1] model ||| [function_1] oversample 2d [arg_2]	count=1
module	file and return the ||| io	count=1
function	index of [function_2] ||| [function_1] [function_2]	count=1
function_arg	from [arg_2] ||| [arg_2] [function_1]	count=10
module	them in the *array* ||| io votable	count=1
module	with the physical unit ||| units function	count=1
module_class	[module_1] stddevuncertainty ||| [module_1] [class_2]	count=4
class	the location for ||| location	count=1
function_arg	a reader [arg_2] ||| [arg_2] [function_1]	count=1
arg	method ||| message	count=2
function	path patch to ||| patch path	count=2
arg	val val2 ||| val val2	count=1
class	3d ||| representation	count=2
function	to the cutout ||| cutout	count=1
function	slices ||| overlap slices	count=1
arg	a known observatory/site by ||| site_name	count=1
module	file on ||| io fits	count=1
arg	creates a ||| filename	count=1
class	[class_1] time in ||| [class_2] [class_1]	count=1
function_arg	given a [arg_2] ||| [function_1] indices [arg_2]	count=2
arg	integer offsets ||| offsets	count=1
function	an hdf5 file this ||| hdf5	count=1
function_arg	[function_1] urls blocks ||| [function_1] [arg_2]	count=3
function_arg	this [arg_2] ||| [function_1] [arg_2]	count=1
class	of the location for ||| location	count=1
function	file or directory is ||| is	count=1
function	a summary ||| summary	count=1
arg	objects by ||| other	count=1
module_class	in the resource ||| io votable resource	count=1
function	is the ||| skyoffset cls	count=1
arg	matching the given key ||| key	count=1
module	from the header ||| io fits hdu	count=3
function_arg	[function_1] [arg_2] ||| [function_1] key slice i [arg_2]	count=3
function	[function_1] list of ||| [function_1] string [function_2]	count=1
function_arg	[function_1] [arg_2] or comments to ||| [function_1] [arg_2]	count=8
arg	desired ||| func args kwargs varargs	count=1
arg	with duplicates ||| names	count=1
arg	file if withclosing ||| withclosing	count=1
arg	fit data ||| y z	count=3
function	retrieving indexed rows ||| iloc	count=1
function	converters and ||| and	count=1
function	[function_1] list of ||| init [function_1] [function_2]	count=1
class	object of ||| location	count=1
function	strings ||| ascii	count=2
module	that sets sequence ||| extern configobj	count=1
function	grid ||| frequency grid	count=1
function	size in bytes ||| size	count=4
module	to other units ||| units	count=1
function_arg	[function_1] unit ||| [arg_2] [function_1]	count=3
class	a tuple ||| representation	count=1
function	frame was ||| frame attr	count=1
class	file from a ||| file	count=1
function	equivalencies ||| equivalencies	count=1
module	that defines __unicode__ ||| extern	count=1
class	logger ||| astropy logger	count=1
arg	[arg_1] data ||| [arg_1] [arg_2]	count=2
module	on the ||| io fits hdu	count=1
class	[class_1] [class_2] containing ||| [class_1] [class_2]	count=3
module	also ||| extern configobj	count=4
module	the ||| coordinates	count=20
arg	supplied [arg] ||| [arg]	count=2
module	votable exceptions votablespecerror ||| votable	count=1
function	in ||| get	count=1
function_arg	[function_1] in bins ||| [arg_2] [function_1]	count=2
arg	from obj to self ||| obj	count=1
function_arg	physical type [arg_2] ||| with [function_1] [arg_2]	count=1
class	clears comments and configspec ||| section	count=1
function	of ||| of site	count=2
arg	the docstring of ||| docstring	count=1
function_arg	[function_1] the units ||| [function_1] equivalent units [arg_2]	count=3
class	information about data ||| data info	count=3
class	numpy ||| array	count=1
function	then formats it ||| format	count=1
function	difference ||| difference	count=1
arg	sliced object modify ||| col_slice	count=1
function	of this ||| of	count=1
class	[class] based ||| [class]	count=1
function	[function_1] floating number ||| [function_1] [function_2]	count=1
function	registered units [function_2] ||| [function_1] [function_2]	count=6
function	format object from ||| from	count=1
arg	most ||| guess	count=1
function_arg	to unicode (dtype ||| to unicode python3_only	count=1
arg	lines for ||| lines	count=3
class	ellipse ||| ellipse2d	count=1
arg	col ||| col	count=1
function	precession matrix for fk4 ||| precession matrix	count=1
function	column definitions ||| load coldefs	count=2
function	class ||| make skyoffset cls	count=2
module	fits ||| fits scripts	count=3
function	contents of a ||| file contents	count=1
module	elements for [module] domain ||| [module]	count=1
class	model [class_2] ||| [class_1] [class_2]	count=4
function_arg	[function_1] obj ||| [arg_2] [function_1]	count=3
arg	before or ||| before	count=1
arg	inputs or raise vdtparamerror ||| values to_float	count=1
function	float or none ||| float or none	count=3
function	corresponding to an arcminute ||| per arcmin	count=2
class	in this [class_2] ||| [class_2] [class_1]	count=2
arg	new coordinate transformation ||| transform	count=1
function	and [function_2] ||| [function_2] [function_1]	count=6
arg	given metadata key ||| key	count=1
function	[function_1] string to ||| [function_2] [function_1]	count=1
function	differential comoving volume ||| differential comoving volume	count=3
function	that ||| normalize	count=1
function	set [function_2] ||| [function_1] [function_2]	count=2
function	rows ||| rows	count=4
module	the next fits block ||| io fits	count=1
function	such a ||| mode	count=1
module	the given object ||| utils	count=1
function	downloads multiple files ||| download files	count=1
class	classmethod ||| card	count=1
function	_lookup_by_attr_factory, but ||| by	count=1
arg	from ||| cls filename	count=1
function_arg	match [arg_2] ||| [arg_2] [function_1]	count=1
class	this card ||| card	count=1
function	[function_1] specified ||| visualization wcsaxes wcsaxes [function_1] transform [function_2]	count=1
function	card ||| card	count=1
module_class	[module_1] file ||| [module_1] [class_2]	count=17
function	column ||| col	count=2
function	a transformation between ||| get transform	count=1
function	a writable file-like object ||| writable	count=1
module	the column name ||| io	count=1
class	value in logarithmic ||| log unit	count=1
arg	a function on the ||| function	count=1
arg	x coordinates and ||| x	count=1
arg	for table [arg_2] ||| [arg_1] [arg_2]	count=1
class	[class] with ||| [class]	count=1
function	[function_1] by ||| [function_2] [function_1]	count=3
function	3d ||| 3d	count=2
module	is currently in ||| utils xml	count=1
function	dtype [function_2] ||| [function_1] [function_2]	count=2
function	matrix from [function_2] ||| [function_1] [function_2]	count=3
module	[module] and latitude ||| [module]	count=1
arg	card ||| card	count=1
function	return a transform [function_1] [function_2] ||| [function_1] [function_2]	count=4
class	a tuple with the ||| base representation	count=1
function	widths of each ||| metrics	count=1
class	this item ||| item	count=1
arg	right tables [arg_2] ||| [arg_1] [arg_2]	count=1
module	scalars/sections ||| extern	count=1
class	that also ||| section	count=1
function	quantity class corresponding to ||| quantity class	count=1
class	[class_1] time in ||| [class_1] [class_2]	count=1
function	header object ||| to header	count=2
function	node associated with ||| node	count=1
function	lookback [function_2] ||| [function_2] [function_1]	count=5
function	[function_1] a list ||| [function_2] [function_1]	count=2
function	same physical type ||| same physical type	count=3
module	the new ||| io fits	count=1
function	read a ||| read	count=1
function	string for ||| transform	count=1
function	a specific class of ||| cls	count=1
class	box sequence against ||| box	count=1
function	around a ||| around	count=2
class	coordinate ||| coordinate frame	count=1
function	matrix for fk4 ||| matrix	count=1
class	value for ||| image base	count=1
function	angle ||| angle	count=2
arg	strlen [arg_2] ||| [arg_2] [arg_1]	count=8
module	into the ||| io	count=2
class	a ||| process	count=1
function	with the ||| transform graph	count=1
function	[function_1] of integers ||| [function_2] [function_1]	count=4
arg	a version ||| a	count=1
module	the [module] ||| [module]	count=2
module	the appropriate votable ||| io	count=1
module	generates a string ||| coordinates	count=1
module	parse ||| io fits	count=1
function	return a copy ||| copy	count=4
function	a string ||| make transform	count=1
function	[function] format object ||| from [function]	count=1
arg	interval in bins of ||| success bins range	count=1
arg	function to account for ||| weights x	count=1
arg	formatted string representation ||| max_lines max_width show_name	count=1
function	a string ||| to string	count=2
function	a length ||| length	count=1
function_arg	[function_1] [arg_2] or comments to ||| [function_1] attr [arg_2]	count=8
function	class corresponding ||| class	count=1
function	by a given attribute ||| lookup by	count=1
function	[function_1] the first ||| [function_2] [function_1]	count=1
module	deal with ||| units	count=1
class	header ||| rdb header	count=1
function	the source used ||| reference	count=1
function	cosmology instance from ||| get cosmology from	count=2
module_class	the domain [class_2] ||| [module_1] [class_2]	count=2
arg	nearest ||| matchcoord catalogcoord nthneighbor storekdtree	count=1
function	config file can ||| is unedited config file	count=1
function	the ||| prepare	count=1
class	docstring for the unit ||| named unit	count=1
class	the number of coefficients ||| polynomial	count=1
class	this sorted array ||| sorted array	count=2
module	[module_1] fits ||| [module_1] [module_2] append filename data header	count=2
function	get the unit format ||| get unit format	count=1
arg	[arg] s ||| s [arg]	count=3
module	by the fitsinfo script ||| io fits	count=1
function	a view ||| view	count=1
function	convert a power to ||| validate power	count=1
function	mime content ||| mime content	count=1
class	convert ||| card	count=1
function	indices from ||| indices	count=1
module	for ||| builtin_frames	count=3
function	[function] highlighting ||| print [function]	count=3
function_arg	a new [arg_2] ||| [arg_2] [function_1]	count=1
module_class	false : [class_2] ||| [module_1] [class_2]	count=2
function	a functionquantity ||| prepare	count=1
module_class	[module_1] [class_2] that are not defined ||| [module_1] [class_2] extra	count=1
function	field and the total ||| update field	count=1
function	first ||| first	count=1
module	validate ||| lombscargle implementations	count=1
class	this ||| sky	count=3
module	id_ [module] may ||| [module]	count=1
arg	of the current instance ||| order data copy_data	count=1
function	histogram function that ||| histogram	count=1
class	to html as a ||| html	count=1
module	returns the number ||| utils	count=1
function	single-dimensional shape entries removed ||| squeeze	count=1
function	ndarray to ||| to file	count=1
function	logging ||| logging	count=3
module	also clears comments and ||| configobj	count=1
function	origin frame ||| make skyoffset	count=1
function	~numpy ndarray to a ||| array to file	count=1
function	is [function_2] ||| [function_2] [function_1]	count=11
arg	a new coordinate transformation ||| tosys transform	count=1
function	resulting [function] ||| [function]	count=6
arg	image_r image_g ||| image_r image_g	count=2
function	the ||| make transform	count=1
module	fitshdu fromhdulist(), ||| io fits	count=1
module	here because [module] and compositeunit ||| [module]	count=1
arg	frame to display ||| frame	count=1
function	coordinate package's docstring ||| graph docs	count=1
function	iteritems() ||| iteritems	count=1
class	from a file on ||| hdu	count=1
function	kwargs to the function's ||| bind	count=1
function	a filename ||| file	count=1
function	the special ||| convert	count=3
function	a string formatted ||| to string	count=2
module	file ||| fits	count=1
class	affects scalars/sections ||| section	count=1
module	that may contain a ||| fits	count=1
function	that is the ||| make	count=1
function	call ||| call	count=2
arg	[arg] existing ||| card [arg]	count=1
class	[class_1] bar to ||| [class_1] [class_2]	count=1
class	containing [class] ||| [class] base	count=3
module	classmethod to convert a ||| io	count=1
module	like fitshdu ||| fits hdu	count=1
function	formats ||| format	count=1
arg	a keyword ||| keyword	count=1
module	futures in the ||| futures	count=1
arg	formatted string representation ||| max_lines max_width show_name show_unit	count=1
module	the quantity [module] is ||| [module]	count=1
function	set whether the ||| set	count=1
function	this class ||| of site	count=1
function_arg	[function_1] data_format ||| [arg_2] [function_1]	count=2
function	bscale/bzero [function_2] ||| [function_2] [function_1]	count=2
arg	interval ||| interval	count=2
arg	keyword value that ||| cls keyword	count=1
function	[function_1] none ||| [function_1] [function_2]	count=5
function_arg	error [arg_2] ||| [function_1] [arg_2]	count=1
arg	python operator (represented by ||| operator left right	count=1
module	use with the ||| coordinates builtin_frames	count=1
arg	package [arg_2] ||| [arg_2] [arg_1]	count=1
module	classmethod to convert ||| io fits	count=1
module	dict mapping parameter ||| modeling	count=3
class	from a file ||| fits	count=1
function	differential [function_2] ||| [function_2] [function_1]	count=2
function	type of [function_2] ||| [function_2] [function_1]	count=2
arg	calling start, ||| text wrap attrib	count=1
arg	the calls binding ||| declare	count=1
class	daophot ||| daophot	count=1
module	values as strings ||| ascii	count=1
function	the coordinate components ||| components	count=1
function_arg	[function_1] of ||| [arg_2] [function_1]	count=4
function	and factors for one ||| factors	count=1
function	[function_1] raise an ||| [function_1] [function_2]	count=2
function	convert a floating-point ||| degrees to	count=1
module	create a new ||| builtin_frames	count=1
arg	name and [arg_2] ||| [arg_1] [arg_2]	count=1
arg	extract the value ||| value	count=1
class	the config file ||| config	count=1
arg	table [arg] ||| [arg]	count=1
module_class	[module_1] on-sky ||| [module_1] [class_2]	count=4
arg	file on ||| cls filename	count=1
module	to convert ||| io fits	count=1
module	by [module] over an ||| io [module]	count=1
function	currently running ||| get running	count=1
module	of the referenced ||| io votable	count=4
module_class	[module_1] info ||| [module_1] votable [class_2]	count=1
function	set whether [function_2] ||| [function_2] [function_1]	count=2
function	the indices from ||| indices	count=1
arg	left input/output [arg_2] ||| [arg_1] [arg_2]	count=1
module	that defines __unicode__ and ||| extern	count=1
class	contain a ||| card	count=1
module	for use ||| builtin_frames	count=1
function	do a comparison ||| comparison	count=1
function	cosmology ||| cosmology	count=1
module	an hdu from the ||| io fits hdu	count=2
arg	requested julian date ||| jd	count=2
function	record ||| recformat	count=1
function	latitude ||| lat	count=1
function	[function_1] [function_2] of ||| [function_1] [function_2]	count=2
function	for the write ||| write	count=1
arg	value ||| value min max	count=2
module	true if the ||| io fits	count=2
function	with setting the fill ||| fill	count=1
arg	binding table ||| declare	count=2
module	io [module] ||| io [module]	count=3
class	of the point s ||| physics spherical representation	count=2
arg	by lon lat ||| lon lat	count=2
function	like _lookup_by_attr_factory, but ||| by	count=1
function	to ||| normalize keyword	count=4
function_arg	response to [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] axis ||| [arg_2] [function_1]	count=5
function	time using [function_2] ||| [function_2] [function_1]	count=1
arg	the units ||| equivalencies units	count=1
function	for this module is ||| is	count=1
function	light travel time correction ||| light travel time	count=1
function	list of equivalencies ||| equivalencies	count=1
function	function [function_2] ||| [function_1] [function_2]	count=2
arg	fitter are compatible and ||| supported_constraints	count=1
class	to spherical polar ||| physics spherical	count=1
function	may contain ||| normalize keyword	count=1
function	the fill [function_2] ||| [function_1] [function_2]	count=4
function	is a package ||| is package	count=1
function	bounding_box ||| bounding box	count=1
arg	the function to ||| x	count=1
function	start the ||| start	count=2
function	position and velocity of ||| posvel	count=1
arg	object or section associated ||| packageormod	count=1
class	[class_1] image ||| [class_1] [class_2]	count=2
function	temporarily log ||| log	count=1
arg	metadata key and its ||| key	count=1
function	can [function_2] ||| [function_2] [function_1]	count=2
module	[module_1] the column ||| [module_1] [module_2]	count=3
module	the attributes of ||| io	count=1
module	list of the ||| io ascii	count=2
arg	urls ||| urls	count=1
function	a config file ||| config file	count=1
class	a cartesianrepresentation ||| cartesian representation frame	count=1
function_arg	spectral density [arg_2] ||| [function_1] [arg_2]	count=1
arg	an object ||| cls	count=1
function	inverse [function_2] ||| modeling model [function_2] [function_1]	count=2
function	with the coordinate ||| transform	count=1
module	returns true if the ||| io fits	count=1
class	on ||| fits hdu	count=2
function	for ||| make	count=2
arg	evaluates the redshift ||| z	count=3
function	write a diff between ||| report diff	count=1
function	class for ||| convert col for	count=1
module	given ||| utils	count=6
class	a tuple ||| base	count=1
module	behavior of the ||| time	count=1
function	the input [function] is ||| [function]	count=1
function	array ||| array	count=4
module	returns the number ||| utils xml	count=1
function_arg	bind [arg_2] ||| [arg_2] [function_1]	count=6
function_arg	call [arg_2] ||| [arg_2] [function_1]	count=2
arg	creates a fitshdu from ||| compress	count=1
arg	a version of numpy ||| a b	count=1
arg	[arg_1] and exclude_names ||| names [arg_1] [arg_2]	count=1
module	object to the ||| utils	count=1
function	cip and ||| get cip	count=1
arg	for the x ||| x	count=1
module_class	[module_1] column ||| [module_1] base [class_2]	count=1
arg	gyr at redshift z ||| z	count=1
class	object ||| earth	count=1
module	decorated object and ||| utils	count=1
class	from the sorted array ||| sorted array	count=1
arg	associated with the given ||| packageormod	count=1
function	average on an oversampled ||| oversample 2d	count=1
arg	vertically [arg] ||| tables [arg]	count=1
arg	parameters ||| input	count=1
function	construct ||| init	count=1
module	any [module] or ||| [module]	count=1
module	return the ||| io	count=5
function	a remote ||| remote	count=1
arg	displaying images with matplotlib ||| data stretch power asinh_a	count=1
function	merge [function_2] ||| [function_2] [function_1]	count=5
function	for w ||| w	count=1
function	be emitted by this ||| exception	count=1
function_arg	[function_1] this object's ||| frame [function_1] to [arg_2]	count=1
function	multiplication ||| mul	count=2
function	check ||| prepare	count=1
function	of booleans ||| bool	count=1
class	to initialize a column ||| column	count=1
function	for this type ||| col for	count=1
module	a decorator that ||| extern bundled	count=2
module	for a specific ||| builtin_frames	count=1
class	a file ||| fits hdu	count=1
function	a transformation ||| get transform	count=1
module	be broadcast [module] ||| [module]	count=3
class	class ||| header formatter	count=1
module	string ||| extern configobj	count=1
arg	field-specifier to uppercase ||| cls	count=1
arg	[arg] smoothly ||| [arg] log_break	count=1
function	jd2 from ||| jds	count=1
module	start with the comment ||| io	count=1
function	deal ||| prepare	count=1
class	writer ||| writer	count=1
module	in the *array* and ||| io	count=1
function	that ||| skyoffset	count=1
function	class that is ||| make skyoffset cls	count=1
function	to indices ||| indices	count=1
class	format's associated recformat ||| base column format	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2]	count=485
arg	multiply ||| value	count=1
function	to ping ||| ping	count=1
arg	on evaluating [arg] on ||| [arg]	count=2
function	or file-like ||| get file	count=1
function	[function] that ||| get pkg data [function]	count=3
class	fitshdu fromhdulist(), ||| hdu	count=1
function	but ||| by	count=5
function	indices given a ||| subpixel indices	count=2
class	bind [class] specific ||| [class]	count=1
arg	in bins of a ||| bins range	count=1
function_arg	arrays [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] same ||| [function_2] [function_1]	count=5
arg	comment ||| comment	count=2
function	scale of ||| scale	count=1
arg	fields are ||| fields	count=1
class	this coordinate ||| coordinate	count=2
module	the fits ||| io fits scripts	count=2
arg	vertices defined by lon ||| lon	count=1
function	[function_1] [function_2] file ||| [function_1] [function_2]	count=3
function	writable file-like object ||| to writable	count=1
function	paired with its next ||| pairwise	count=1
function	but with appropriate header ||| base	count=1
function_arg	[function_1] this ||| [function_1] [arg_2]	count=2
function	polygon such that ||| polygon	count=1
function	that partially ||| partial	count=1
function	lower bound when fitting ||| min	count=1
class	of this object's ||| nddata array	count=1
class	given bounding box sequence ||| bounding box	count=1
arg	coordinate transform from ||| transform	count=1
function_arg	minimum [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] subclass ||| [function_2] [function_1]	count=7
module	delete an ||| fits	count=1
function	contain a ||| keyword	count=1
function	class that is the ||| make skyoffset cls	count=1
function	or [function_2] ||| [function_1] [function_2]	count=6
function	is currently registered ||| is registered	count=2
function	[function_1] subclass of ||| [function_2] [function_1]	count=7
function	float radians ||| radians	count=1
class	stddevuncertainty allows to ||| std dev	count=1
module	sets the ||| io	count=1
function_arg	[function_1] [arg_2] comments to ||| [function_1] attr [arg_2]	count=8
module_class	[module_1] [class_2] element ||| [module_1] votable [class_2]	count=3
class	for this [class_2] ||| [class_2] [class_1]	count=4
arg	bit ||| field recformat	count=1
function_arg	[function_1] interval in ||| [arg_2] [function_1]	count=2
module	[module] delimiter ||| [module]	count=1
function	visual properties for the ||| ticklabel	count=1
function	precession [function_2] ||| [function_1] [function_2]	count=9
module	on the pedantic ||| io	count=1
module	the comment ||| io	count=1
arg	comment lines ||| lines meta	count=1
function	the write ||| write	count=1
class	is ||| coordinate frame	count=1
function	list of booleans ||| bool list	count=3
module	class that ||| coordinates builtin_frames	count=1
arg	bit array as ||| field recformat	count=1
class	spherical ||| physics spherical	count=1
function	[function] and correspond ||| numpy to [function]	count=2
function	list of strings ||| string list	count=3
module_class	hdu's table ||| fits hdu table	count=1
arg	and scale ||| scale	count=1
function	block ||| block	count=2
module	field-specifier to ||| io	count=1
function	get result ||| get	count=1
class	this coordinate and another ||| base coordinate frame	count=1
function	an ||| of site	count=2
function	use with ||| transform graph	count=1
function	convert a ||| convert	count=1
function	gets the site ||| site	count=1
function	recursively [function] values ||| [function]	count=1
function	field-specifier to uppercase ||| keyword	count=1
function	factory to create ||| factory	count=1
arg	the data ||| nrows	count=1
module	new class ||| coordinates	count=1
arg	a key data ||| key data	count=2
function	from a list of ||| from list	count=1
arg	contain a field-specifier to ||| cls	count=1
module	creates ||| hdu	count=1
arg	raises unitserror if ||| allow_dimensionless	count=1
function	set true ||| set	count=1
arg	or raise vdtparamerror ||| names values to_float	count=1
module	write ||| io fits	count=1
function	as ||| represent as	count=1
function	or directory is hidden ||| is path hidden	count=1
arg	[arg_1] by taking ||| [arg_1] [arg_2]	count=4
class	this index to agree ||| index	count=1
function	write out ||| write	count=2
module	the new file ||| io fits hdu	count=1
class	file is currently ||| xmlwriter	count=1
module	the meat of ||| io fits	count=1
function	[function_1] time in ||| [function_1] [function_2]	count=1
module	to match the ||| io	count=1
module	for ||| nddata	count=1
function	deal with a ||| array	count=1
module	value that may ||| fits	count=1
class	image ||| comp image	count=1
function_arg	[function_1] given index ||| [function_1] [arg_2] vals	count=1
module	or method ||| vo samp	count=1
function	a diff ||| report diff keyword	count=1
module	redshift ||| cosmology	count=1
class	the input [class] ||| [class]	count=3
module	meaning of [module_2] ||| [module_1] [module_2]	count=1
function	an oversampled ||| oversample 1d	count=1
function	the maximum value ||| max	count=1
class	_compoundmodel when either model ||| compound model meta	count=1
function_arg	view of [arg_2] ||| [arg_2] [function_1]	count=4
function	generates a string for ||| transform graph	count=1
module	a non-celestial wcs ||| wcs	count=1
function_arg	[function_1] an array ||| [arg_2] [function_1]	count=1
function	string ||| string	count=6
function	and adjust physical ||| add and adjust physical	count=1
function	read iers-a table ||| read	count=1
arg	internal _format scale ||| format scale	count=1
function_arg	[function_1] from ||| [function_1] coldefs [arg_2]	count=1
module	that the ||| units	count=1
function	convert to a tuple ||| to	count=1
arg	by the 'sep' parameter ||| precision pad sep	count=1
arg	output ||| table output	count=2
function	override path patch to ||| patch path	count=1
function_arg	[function_1] corrections in ||| [arg_2] [function_1]	count=2
module	determine the coordinate ||| coordinates	count=1
arg	function ||| args	count=1
module	the data as ||| io fits hdu	count=1
function	the ||| make transform graph	count=1
function	a diff between two ||| diff keyword	count=1
module	a file ||| fits hdu	count=1
module	fromhdulist(), ||| fits hdu	count=2
function	[function] type syntactically ||| [function]	count=3
arg	given urls ||| urls	count=1
function_arg	arrays of [arg_2] ||| [function_1] 2d [arg_2]	count=1
module	in-order ||| coordinates	count=1
function	[function_1] the specified ||| visualization wcsaxes wcsaxes [function_1] transform [function_2]	count=1
function	generates ||| make transform graph	count=1
arg	angle around [arg_2] ||| [arg_2] [arg_1]	count=2
module_class	[module_1] model __call__ ||| [module_1] [class_2]	count=8
function	minute second [function_2] ||| [function_2] [function_1]	count=6
module_class	[module_1] [class_2] ascii table (ascii=none means ||| [module_1] [class_2] determine formats cls format	count=4
module	the object ||| utils	count=1
module	convert ||| fits	count=1
arg	coordinate transformation to ||| fromsys tosys transform	count=1
function	[function_1] table header ||| [function_1] [function_2]	count=1
function	object and then ||| format	count=1
class	and modifies the parameter ||| fitter	count=1
arg	a float ||| m s	count=1
function	object to ||| to hdu	count=1
function	into ones belonging to ||| to	count=1
arg	ufunc ||| context	count=2
function	the applicability ||| type	count=1
function	[function_1] html content ||| [function_2] [function_1]	count=1
function	possibility of unicode columns ||| itemsize	count=1
class	with the in-order ||| representation	count=1
module	bytes of the hdu's ||| io fits hdu	count=2
function	contents of ||| file contents	count=1
module	by the fitsinfo ||| io fits scripts	count=1
module	returned by [module] over ||| io [module]	count=1
function	[function_1] box we ||| [function_1] [function_2]	count=4
module	from a file ||| fits hdu	count=1
function	with a functionquantity ||| prepare	count=1
function	to unicode if ||| a to	count=1
module	in the tabledata_ ||| io	count=1
function	a field-specifier to ||| normalize keyword	count=1
function	according to the error ||| error	count=1
class	to spherical polar coordinates ||| spherical	count=3
function	object is ||| is	count=1
function	is currently running ||| is running	count=2
class	table in html ||| html	count=1
function_arg	[function_1] (dtype kind='u') ||| [arg_2] [function_1]	count=4
function	[function_1] masks ||| [function_1] [function_2]	count=2
module	filename or ||| utils	count=1
function	entire element ||| element	count=1
class	of this ||| earth	count=1
function	that ||| keyword	count=1
function	indent a ||| indent	count=1
function_arg	[function_1] new ||| [arg_2] [function_1]	count=1
function	deprecated this creates a ||| deprecated	count=1
arg	return ||| cls	count=1
arg	shape and position from ||| shape position mode	count=1
module	configobj ||| extern configobj	count=3
function	a new ||| rename	count=1
arg	keywords and data ||| header	count=1
function	of ||| w0	count=1
function	parse a ||| parse	count=1
class	this frame a ||| coordinate frame	count=2
function	the constant [function] ||| [function]	count=3
module	on ||| io fits	count=1
arg	the given frequencies parameters ||| normalization method assume_regular_frequency	count=1
class	display row as ||| row	count=1
arg	array of the given [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function	two numpy recformats using ||| recformats	count=1
function	fitshdu fromhdulist(), but creates ||| fromfile	count=1
class	if ||| nduncertainty	count=1
class	scalars/sections also clears comments ||| section	count=1
function	retrieves the ||| get	count=1
function	set of all the ||| set	count=1
module	and then ||| utils	count=1
class	the point s ||| cylindrical representation	count=1
module	returns the ||| utils	count=1
function	draw only the ||| draw	count=1
class	this card in an ||| card	count=1
function	single ||| parse	count=1
module	through ||| table	count=1
arg	in bins ||| bins range	count=1
function	deal with a ||| prepare	count=1
arg	html data from lines ||| lines	count=1
module	all the scaling ||| io	count=1
class	power ||| lomb scargle	count=1
function_arg	this model ||| call model x	count=1
class	return the ||| base	count=1
module	an ||| utils	count=2
function	[function] frame ||| frame [function]	count=1
module	field-specifier ||| io	count=1
class	class for a ||| earth location	count=1
module	record in the ||| io fits	count=1
arg	data in table converted ||| table	count=1
function_arg	subclass [arg_2] ||| [function_1] [arg_2]	count=2
class	r t a ||| cdm	count=1
class	kind of header ||| header	count=1
function	formats it ||| doc	count=1
arg	the function to ||| weights x	count=1
class	an object ||| earth	count=1
function	object of this class ||| of	count=1
module	in one parameter ||| modeling	count=1
function	decorated object and then ||| format doc	count=1
function	function but [function_2] ||| [function_1] [function_2]	count=2
module	for a ||| builtin_frames	count=1
function	from another column ||| from column	count=1
arg	current value ||| value	count=1
module	is the ||| coordinates	count=1
class	of the dark energy ||| cdm	count=1
function	add a new column ||| add column	count=1
arg	flag for ||| i	count=3
function	of the decorated ||| format	count=1
function	filename ||| filename	count=1
arg	oneself possibly with a ||| physical_unit	count=1
module	broadcast [module] ||| [module]	count=3
function_arg	[function_1] object's ||| [arg_2] [function_1]	count=1
function	and z as quantities ||| geocentric	count=1
arg	function or ||| function declare	count=2
module	also affects ||| configobj	count=1
module_class	[module_1] [class_2] values ||| [module_1] [class_2] call lines	count=4
function	a length ||| to and validate length	count=1
function	axis ||| axis	count=2
function	hash ||| hash	count=2
arg	[arg] and ||| [arg]	count=7
arg	mark ||| name since message alternative	count=1
arg	keyword ||| cls keyword	count=1
module_class	dictionary detailing information about [module_1] [class_2] within any associated file ||| [module_1] hdu [class_2] hdu fileinfo	count=2
arg	join_type of 'exact' ||| join_type col_name_map	count=1
function	angle of rotation and ||| angle	count=1
arg	hdu into the ||| hdu	count=1
function	set polar motion source ||| pm source	count=1
arg	generator over all subclasses ||| _seen	count=1
function	use with ||| make	count=1
arg	arrays image_r image_g ||| image_r image_g	count=2
function	[function] self ||| time [function]	count=1
module	update the ||| utils	count=1
function	running or ||| set running or	count=2
module	hdu by ||| hdu	count=1
module	fitshdu ||| fits hdu	count=2
class	w r ||| cdm	count=1
function	from a numpy ||| from	count=1
function	a config ||| config	count=1
function	class for a ||| of	count=1
function	directly [function_1] [function_2] checkout ||| [function_1] [function_2]	count=1
function	from the model instance ||| get model	count=1
arg	and the fractional remainder ||| factor divisor	count=1
arg	[arg_1] format ||| time get time fmt [arg_1] [arg_2]	count=1
function	object around ||| search around	count=1
arg	exclude_names to ||| exclude_names	count=1
function_arg	ut1-utc source [arg_2] ||| [arg_2] [function_1]	count=4
class	write ||| config obj	count=3
function	the information ||| info	count=1
module	like fitshdu fromhdulist(), but ||| io fits hdu	count=1
arg	the table ||| table	count=2
class	graph ||| graph	count=3
class	class ||| table header formatter	count=1
function	file-like object ||| get file	count=1
class	for [class_2] ||| [class_2] [class_1]	count=10
module	provides [module] ||| [module]	count=2
function	type attribute ||| type	count=1
function	line for the write ||| write line	count=1
function	of a filename ||| file	count=1
function	a float [function_2] ||| [function_2] [function_1]	count=2
arg	new coordinate transformation ||| fromsys tosys transform	count=1
arg	to complete ||| fs timeout return_when	count=1
class	the future ||| future	count=2
module	the decorated ||| utils	count=1
function	fromhdulist(), but ||| fromfile	count=1
function	values ||| values	count=4
module	id_ of ||| votable	count=1
module	in bytes of the ||| io fits	count=2
function	wait for ||| wait	count=1
function	write ||| write table	count=1
arg	obstime ||| obstime	count=1
function	if a config ||| is unedited config	count=1
function	cip and the cio ||| cip	count=1
function	[function_1] a column ||| [function_1] [function_2]	count=1
function	maximum ||| max	count=2
arg	[arg] has length ||| [arg]	count=1
function	propagate correlated uncertainties ||| supports correlated	count=1
module	from a file on ||| io fits	count=1
arg	y onto an ||| y	count=1
function	insert a new ||| add	count=1
module	customizations most of the ||| io	count=1
arg	test whether a string ||| string	count=1
arg	a new fitshdu ||| compress	count=1
arg	the format ||| format	count=1
function	self return [function_2] ||| [function_1] [function_2]	count=2
module	installed and it is ||| core	count=1
function	[*required*] the [function] ||| [function]	count=1
function	of state at ||| w0	count=1
module	mark the [module_2] ||| [module_1] [module_2]	count=2
function	on-sky [function_2] ||| [function_2] [function_1]	count=4
class	[class_1] bar to ||| [class_2] [class_1]	count=3
function	text ||| color text	count=1
module	the user ||| io fits hdu	count=1
function	format [function_2] ||| [function_2] [function_1]	count=4
module	in the parent ||| io fits scripts	count=1
function	a config [function_2] ||| [function_2] [function_1]	count=4
module	remove whitespace at the ||| io	count=4
module	fromhdulist(), but creates a ||| fits	count=1
arg	jd1 and ||| jd1	count=1
function	shape tuple ||| shape	count=1
function	a specific class ||| make skyoffset	count=1
module	new class that ||| coordinates	count=1
function	delete bscale/bzero from header ||| update header scale info	count=1
module	after the ||| io	count=1
function	on-sky [function_2] ||| [function_2] coordinates [function_1]	count=4
function	extract a ||| extract	count=1
function	return the inverse ||| inverted	count=3
arg	_format scale ||| format scale	count=1
module	from a file on ||| io fits hdu	count=1
module	this class for ||| coordinates	count=1
function	heliocentric position of ||| position vel	count=2
module	in-order names of the ||| coordinates	count=1
arg	for a known observatory/site ||| cls site_name	count=1
function	optimal histogram bin width ||| knuth bin width	count=1
module_class	[module_1] this skycoord ||| [module_1] [class_2]	count=4
arg	finds the nearest ||| catalogcoord nthneighbor	count=2
class	class for a ||| earth	count=1
function	parameters from ||| params	count=1
module	configobj as ||| configobj	count=1
class	registry ||| unit registry	count=1
function	a string for use ||| transform	count=1
module	the current ||| io fits	count=1
class	cutoff power law ||| cutoff power law1d	count=3
arg	lines for a ||| lines	count=2
function	precession ||| precession	count=4
class	of state at z=0 ||| w0wa	count=1
module	the specified value ||| extern configobj	count=1
module_class	lookup the [class_2] ||| [module_1] [class_2]	count=2
module	represent [module] file ||| [module]	count=1
function_arg	add a [arg_2] ||| [function_1] [arg_2]	count=4
class	to cylindrical polar coordinates ||| cylindrical	count=1
arg	type of ||| col	count=1
module	view the ||| io fits	count=1
function	[function] directly ||| [function] astropy	count=3
class	column attributes ||| column	count=1
function	matches any extension hdu ||| match header	count=1
function	returns the indices where ||| where	count=1
module	numpy ndarray [module] the uncertainty's ||| [module]	count=1
arg	construct ||| data header name do_not_scale_image_data	count=1
function_arg	[function_1] [arg_2] the ||| [function_1] [arg_2]	count=8
module	scalars/sections also clears comments ||| extern configobj	count=1
function	use with ||| graph	count=1
arg	block ||| block	count=1
arg	column [arg] both ||| [arg] descr_output format	count=1
function	a ~numpy ndarray to ||| to file like	count=1
module	[module_1] [module_2] file if filename exists ||| [module_1] [module_2]	count=2
arg	lon [arg_2] ||| [arg_1] [arg_2]	count=1
function	attributes of ||| attributes	count=1
class	by name ||| earth	count=1
function_arg	[function_1] single arg ||| [function_1] [arg_2]	count=1
class	vdtvaluetooshorterror('jed') ||| too short	count=1
arg	given frequency ||| y dy frequency	count=1
function	a specific class ||| cls	count=1
function	signal to noise ||| signal to noise	count=1
arg	table on specified keys ||| table keys	count=1
function	class ||| make skyoffset	count=2
arg	shelf file if withclosing ||| withclosing	count=1
module	iterating ||| fits	count=1
class	of state at ||| cdm	count=1
module	decorated object and then ||| utils	count=1
class	skycoord ||| coord	count=2
class	compressed image ||| comp image	count=1
function_arg	transform [arg_2] ||| [arg_2] [function_1]	count=1
arg	of the left ||| left	count=1
function	that is ||| skyoffset	count=1
function	pm [function_2] ||| [function_2] [function_1]	count=1
module	fromhdulist(), but ||| fits hdu	count=1
function	config ||| is unedited config	count=1
arg	function like write ||| write fileobj	count=1
function	type for the ||| type	count=1
arg	args ||| args	count=1
arg	of this ||| cls	count=1
function	for use with the ||| transform	count=1
class	is a quantity with ||| quantity	count=1
function	a ||| fromfile	count=2
function	of the absorption distance ||| xfunc	count=1
arg	data for this frame ||| frame units kwargs	count=1
class	like ||| fits	count=1
arg	model ||| model x	count=4
function	running ||| running	count=3
class	card ||| card	count=4
module	a field-specifier ||| io fits	count=1
module	the header ||| io fits	count=3
module	param_ elements in the ||| io votable	count=1
arg	the ||| obj	count=1
function	[function_1] adjust physical ||| [function_1] [function_2]	count=2
module	a ||| configobj	count=1
module	exist in the ||| io fits hdu	count=1
function_arg	bind a [arg_2] ||| [function_1] response [arg_2]	count=1
function	the raw ||| raw	count=1
function	registered units with ||| units with	count=1
class	can deal with a ||| quantity	count=1
arg	scale ||| format scale	count=1
function	generate [function] representation ||| repr [function]	count=2
function	index or ||| index	count=1
arg	of val1 [arg_2] ||| [arg_2] [arg_1]	count=3
arg	y_high), (x_low ||| factor	count=1
function	a string ||| string	count=5
class	the compressed [class_2] ||| [class_1] [class_2]	count=4
arg	[arg_1] end ||| [arg_1] [arg_2]	count=1
function	table writer ||| writer	count=1
module_class	hdu's [class_2] ||| [module_1] [class_2]	count=2
function	from one file/buffer ||| writedata direct copy	count=1
function	that handle spectral density ||| spectral density	count=1
arg	bic given the log ||| n_params n_samples	count=1
class	a new compound ||| compound	count=1
module	just copy the columns ||| io fits	count=1
module	in the parent ||| io fits	count=1
class	in this ||| base	count=1
class	associated with this column ||| column	count=1
function	transformation ||| transform	count=1
module	data string the ||| io fits	count=1
function	a multiline ||| multiline	count=1
function_arg	[function_1] a function ||| [function_1] msg_tag [arg_2]	count=1
module	the same ||| io fits	count=1
module	and width of the ||| utils	count=1
arg	parameter confidence interval given ||| interval	count=1
arg	two ||| y slope_x slope_y	count=2
module	in one parameter set ||| modeling	count=1
function_arg	[function_1] if ||| [arg_2] [function_1]	count=3
module	like fitshdu fromhdulist(), ||| io fits hdu	count=1
arg	package and provides ||| package encoding	count=1
function	table [function_2] ||| [function_1] [function_2]	count=3
arg	[arg_1] deprecated unit ||| [arg_2] [arg_1]	count=4
function_arg	node associated [arg_2] ||| [function_1] [arg_2]	count=1
function	access url ||| url	count=1
function	response to ||| response	count=1
arg	than strlen ||| strlen	count=1
function_arg	proportion [arg_2] ||| [function_1] x success bins [arg_2]	count=1
class	fromhdulist(), but ||| hdu	count=1
arg	file if ||| file	count=1
function_arg	add [function_1] [arg_2] position ||| [function_1] [arg_2] vals	count=1
function	votable schema ||| schema	count=1
function	this object is the ||| is	count=1
function	sorted along the specified ||| sort	count=1
arg	method ||| private_key recipient_id message	count=1
function	bases ||| bases	count=2
class	[class_1] partial ||| [class_2] [class_1]	count=1
class	by name ||| location	count=1
function	from the model instance ||| get	count=1
class	for this frame a ||| base coordinate frame	count=1
class	the ||| function	count=1
arg	lon lat ||| lon lat	count=2
function_arg	return a transform [function_1] [arg_2] ||| visualization wcsaxes wcsaxes [function_1] transform [arg_2]	count=9
module	currently ||| utils	count=1
function	a votable field element ||| votable	count=1
function	add [function] ||| [function]	count=1
class	either model ||| compound model meta	count=1
function_arg	[function_1] table ||| [function_1] by [arg_2]	count=1
function	[function] in ||| [function]	count=3
arg	docstring of ||| docstring	count=1
module	a string ||| builtin_frames	count=1
arg	corrections in ||| jd1 jd2 return_status	count=1
module	compressed ||| fits hdu	count=1
module	fitshdu fromhdulist(), but ||| fits	count=1
function_arg	dtype for [arg_2] ||| [arg_2] [function_1]	count=1
function	field_ and param_ ||| fields and params	count=1
module	itersubclasses ||| io fits	count=1
module	futures in the ||| compat futures	count=1
function	[function_1] geodetic coordinates ||| [function_2] [function_1]	count=1
function	for a transformation between ||| get transform	count=1
function	as a string ||| to string	count=2
function	pixel ||| pixel scale	count=1
function	grid parameters from a ||| grid	count=1
function	reference to this ||| getitem	count=1
arg	deal ||| obj	count=1
function	possible wildcarded subtypes of ||| subtypes	count=1
function	frame was created with ||| frame attr	count=1
function	formats it ||| format doc	count=1
module	dark ||| cosmology	count=2
function	fit a function ||| do fit	count=1
module	io votable ||| io votable	count=4
function	correct class for ||| convert col for	count=1
arg	metadata objects ||| merge_func metadata_conflicts	count=1
module	creates ||| io fits hdu	count=2
function	return a view ||| view	count=1
function	a new [function_2] ||| [function_2] [function_1]	count=1
function	the absorption distance ||| xfunc	count=1
arg	on ||| cls	count=1
arg	formatted string representation of ||| max_lines max_width show_name	count=1
arg	an object of ||| cls	count=1
module	the necessary units (or ||| coordinates	count=1
function	the worker ||| worker	count=1
function	mean [function_2] ||| [function_2] [function_1]	count=3
module	*name* ||| io votable	count=1
function	may contain ||| keyword	count=1
function	convert string-like ||| convert string	count=2
function	[function] the ||| [function]	count=4
module	the id_ of the ||| io votable	count=1
arg	[arg_1] mtype ||| [arg_2] [arg_1]	count=4
arg	from a header ||| header	count=1
module	format or ||| io fits	count=1
arg	fastbasic to output masked ||| output	count=1
class	the compressed image ||| comp image	count=1
arg	position in a ||| position	count=1
module	table and return the ||| io ascii	count=1
module	the astropy modeling ||| modeling	count=1
function	obliquity of the ||| obliquity	count=1
module	having either the simple ||| io fits	count=1
module	the header ||| io	count=5
function	extent ||| extent	count=1
function	a version of clear ||| clear	count=1
function_arg	add [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	optical ||| optical	count=1
function	copy is ||| copy	count=1
function	[function_1] [function_2] format object regardless of ||| [function_1] [function_2]	count=6
module	the hdu ||| io	count=1
function	first [function_2] ||| [function_2] [function_1]	count=4
arg	this is a ||| a bins	count=1
function	table ||| table as	count=1
function	but the [function_2] ||| [function_2] [function_1]	count=6
class	a matplotlib ||| curved	count=1
function	handles setting the configspec ||| set configspec	count=1
class	column attribute ||| column attribute	count=2
function	groups in the order ||| groups	count=1
module	a ||| coordinates builtin_frames	count=6
arg	on specified keys ||| keys	count=2
class	of dark energy ||| w0wa cdm	count=1
class	injects [class] ||| [class]	count=1
function	kraft burrows and ||| kraft burrows	count=3
module	initializes a ||| compat	count=1
class	contain a field-specifier ||| card	count=1
module	validate ||| stats lombscargle implementations	count=1
arg	model ||| cls model	count=1
class	associated with this unit ||| named unit	count=1
arg	the [arg] ||| [arg] keys	count=2
module	an hdu ||| io fits hdu	count=2
function	verify ||| verify	count=5
function	decorated object ||| format doc	count=1
arg	in row_map ||| row_map	count=1
function	decorator for validating ||| as decorator	count=1
arg	unit returns the ||| unit	count=1
class	but creates a ||| fits hdu	count=1
arg	like ||| cls filename	count=1
class	number of coefficients in ||| polynomial	count=1
function	adjust physical [function_2] ||| [function_1] [function_2]	count=1
module	for serialization in the ||| io votable	count=1
arg	a given frequency ||| frequency	count=1
function	the long [function_2] ||| [function_2] [function_1]	count=1
module	database [module_2] ||| [module_2] [module_1]	count=3
module	with the ||| coordinates builtin_frames	count=1
function	in transverse proper kpc ||| kpc proper	count=1
module	taking into account the ||| io	count=1
function	the data files ||| data	count=2
module	the proper unit parameters ||| units	count=1
function	~numpy ndarray to a ||| to file	count=1
arg	specific mtype ||| mtype	count=3
function	longitude of perigee of ||| lon of perigee	count=1
function	remote ||| remote	count=1
module	new class that is ||| coordinates builtin_frames	count=1
class	can deal with ||| function	count=1
class	of state ||| w0wa	count=2
arg	join_type of 'exact' default ||| join_type	count=1
function	convert a ||| keyword	count=1
arg	format and [arg_2] ||| [arg_2] [arg_1]	count=4
function	an hdf5 file ||| hdf5	count=1
arg	[arg_1] in ||| [arg_2] [arg_1]	count=2
module	the default ||| io	count=2
module	an ||| coordinates	count=1
class	of this class ||| location	count=1
module	in the *array* ||| io votable	count=1
module	the tabledata_ ||| io	count=1
function	the lookback [function_2] ||| [function_1] [function_2]	count=1
function	pynbody ||| in	count=1
function	the constellation ||| constellation	count=1
module	using [module] median absolute ||| [module]	count=1
function	recursively iterates over all ||| iter	count=1
function	[function_1] in a ||| [function_1] [function_2]	count=3
function	table ||| pformat table	count=1
function	the ||| transform	count=1
class	>>> raise vdtvaluetooshorterror('jed') ||| value too short	count=1
module	integer index return the ||| io fits	count=1
function	ref is used ||| ref	count=1
module_class	execute the verification ||| io fits verify	count=1
function	[function_1] match for ||| [function_2] [function_1]	count=1
function	the hash ||| hash	count=1
function_arg	[function_1] filter kernels ||| [arg_2] [function_1]	count=1
class	sorted [class_2] ||| [class_1] [class_2]	count=3
function	[function] to parameters ||| [function]	count=2
function_arg	[function_1] function ||| [function_1] [arg_2]	count=9
arg	a key ||| key	count=1
function	can [function_2] ||| [function_1] [function_2]	count=2
function	readfrom ||| readfrom	count=1
function_arg	position of [arg_2] ||| [function_1] [arg_2]	count=3
function	contain a field-specifier ||| keyword	count=1
arg	[arg_1] [arg_2] the ||| [arg_1] [arg_2]	count=4
module	returns ||| utils	count=1
module	is ||| coordinates builtin_frames	count=2
function	[function_1] arrays of ||| [function_2] [function_1]	count=1
function	add an item to ||| add	count=1
function	ccd ||| oir ccd	count=1
class	a unit ||| unit	count=1
arg	given frequency ||| t y dy frequency	count=1
arg	unit in a ||| s unit	count=1
module	do [module] opposite if ||| [module]	count=1
function	a functionquantity ||| array	count=1
function	or ||| or	count=3
arg	coordinate transform from the ||| transform	count=1
function	sets the ||| set	count=7
function	a 3-tuple ||| tuple	count=1
arg	multiply two ||| value	count=1
arg	from the calls binding ||| declare	count=1
module	the associated fits ||| io fits	count=1
function	string for use ||| make transform	count=1
module	for the type converters ||| io ascii	count=1
module	a ||| fits hdu	count=4
function	from data to ||| get	count=1
module	a ||| function	count=1
function	new class ||| make skyoffset cls	count=1
class	[class] essentially ||| [class]	count=1
class	stddevuncertainty allows ||| std dev	count=1
arg	exclude_names to a ||| exclude_names	count=1
function	trap ||| use str for	count=1
module	object of this class ||| coordinates	count=1
class	transformation from the ||| transform	count=1
module	to match the input ||| io fits hdu	count=1
function	from header ||| header	count=1
class	this table ||| table like	count=1
module	a new class that ||| coordinates builtin_frames	count=1
function	bin width ||| bin width	count=1
function	write a [function_2] ||| [function_2] [function_1]	count=11
function	positive index or zero ||| positive index of	count=1
module	fits format spec ||| fits	count=2
module	file is currently in ||| utils xml	count=1
module	in-order names of ||| coordinates	count=1
arg	of possible formats ||| timestr subfmts	count=1
class	cartesianrepresentation with ||| cartesian representation	count=1
class	of ||| array	count=1
function_arg	[function_1] from ||| [arg_2] [function_1]	count=2
function	correct class for ||| for	count=1
class	[class_1] frame ||| [class_1] [class_2]	count=2
function_arg	[function_1] [arg_2] these attributes ||| [function_1] [arg_2]	count=1
function_arg	[function_1] subsampling factor ||| [arg_2] [function_1]	count=5
arg	against the given model ||| cls model	count=1
function	the epoch ||| epoch	count=1
function	coordinate ||| transform	count=1
function	use with the ||| make	count=1
arg	[arg] existing card ||| card before [arg]	count=2
module	called by the fitsinfo ||| io fits scripts	count=1
function	the same sort order ||| sort	count=1
function	widths of each field ||| update field metrics	count=1
class	unit (e g ||| function unit	count=1
function	write a numpy array ||| array	count=1
class	coefficients in ||| polynomial model	count=1
module	in the ascii ||| io fits hdu	count=1
arg	value to any of ||| value	count=1
module	determine the ||| io	count=1
module_class	[module_1] field_ ||| [module_1] votable [class_2]	count=1
function	physical type ||| get physical type	count=2
function	spherical ||| spherical	count=2
arg	python operator (represented by ||| operator	count=1
function_arg	copy [arg_2] ||| [arg_2] [function_1]	count=3
class	for ipac table see ||| ipac header	count=1
function	curvature ||| ok	count=1
module	the futures in the ||| utils compat futures	count=1
module	not one of the ||| io fits	count=1
class	transform graph ||| transform graph	count=2
arg	mask of zero length ||| mask	count=1
arg	a version ||| a b rtol	count=1
class	[class] specific ||| [class]	count=2
arg	of the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=12
function	for propagation ||| convert	count=1
arg	mask of ||| mask	count=1
module	clears comments ||| extern	count=1
function	generator that yields a ||| str	count=1
arg	a new [arg] ||| columns [arg]	count=1
arg	for this frame ||| frame units kwargs	count=1
module	as having either the ||| io fits	count=1
function	energy equation of state ||| w0	count=1
class	format ||| column format	count=2
function	column meta ||| col meta	count=2
module	that also affects scalars/sections ||| configobj	count=1
function	proportion and ||| proportion	count=1
module	scalars/sections ||| extern configobj	count=2
module	accesses an [module_2] ||| [module_1] [module_2]	count=8
arg	floats ||| min max	count=1
function_arg	[function_1] this ||| [arg_2] [function_1]	count=2
function	tick ||| ticklabel	count=1
module	on the bscale value ||| io fits hdu	count=1
function	a generator that ||| str vals	count=1
class	unit ||| function unit base	count=2
arg	rows a join_type ||| join_type	count=2
module_class	[module_1] image ||| [module_1] [class_2]	count=5
class	the registry ||| registry	count=2
function	join ||| join	count=1
function	use ||| transform graph	count=1
module	executor ||| compat futures	count=1
function_arg	in binary [arg_2] ||| [function_1] [arg_2]	count=1
function	determines if a config ||| is unedited config	count=1
module	a specific class ||| builtin_frames	count=1
arg	arrays image_r [arg_2] ||| [arg_2] [arg_1]	count=2
function	messages [function_1] [function_2] ||| [function_1] [function_2] filename filter_level filter_origin	count=2
function_arg	ndarray to [arg_2] ||| [function_1] arr [arg_2]	count=1
class	fnmatch ||| time string	count=1
function	then formats ||| format	count=1
function	[function_1] specified ||| [function_2] [function_1]	count=1
function	position [function] velocity ||| [function] gcrs	count=1
function	bytes needed to pad ||| pad	count=1
function	of a ||| get	count=1
arg	this frame's ||| new_representation in_frame_units	count=1
arg	to parameters ||| x slope intercept	count=1
arg	python operator (represented by ||| mcls operator left	count=1
module	the input ||| io fits hdu	count=1
function	returns the size in ||| size	count=2
class	this item ||| config item	count=1
class	a tuple with ||| base	count=1
function	object of ||| site	count=1
module_class	[module_1] [class_2] are not defined ||| [module_1] [class_2] extra	count=1
module	contain a ||| io fits	count=1
module	of ||| extern	count=1
function_arg	slices for [arg_2] ||| [function_1] [arg_2]	count=2
function	can be a float ||| float	count=1
function_arg	[function_1] obj of ||| [function_1] [arg_2]	count=3
function	same frame as the ||| equivalent frame	count=1
arg	position ||| position mode	count=1
function	override path [function_2] ||| [function_2] [function_1]	count=8
function_arg	poisson [arg_2] ||| [function_1] conf interval [arg_2]	count=3
module	version of ||| extern configobj	count=1
function	private key used for ||| private key	count=1
class	replace string values in ||| base data	count=1
module	same as the ||| io fits	count=1
arg	for in-place calculations ||| values clip out	count=1
function_arg	from a [arg_2] ||| [arg_2] [function_1]	count=3
function	the optical ||| optical	count=1
arg	overlapping part of a ||| large_array_shape small_array_shape position mode	count=1
class	of this class ||| earth	count=1
arg	[arg_1] most of ||| [arg_1] [arg_2]	count=1
module	[module_1] hdu's ||| [module_1] [module_2]	count=16
class	true if the unit ||| unit	count=1
arg	[arg_1] given hdulist ||| [arg_2] [arg_1]	count=4
function_arg	pm source flag ||| pm source i	count=1
function	ndarray to ||| array to	count=1
arg	in fastbasic to output ||| table output	count=1
function	cache ||| cache time	count=2
class	record ||| record	count=2
function	validate the input ||| input	count=1
function_arg	[function_1] out ||| [arg_2] [function_1]	count=3
function	type : [function] for ||| [function]	count=1
class	[class_1] this ||| [class_1] [class_2] repr	count=2
arg	of north between this ||| other	count=1
function	catalog of given ||| cat	count=1
function	construct a ||| init	count=1
function	height of the ||| height	count=1
class	the xmlwriter ||| xmlwriter	count=1
function	least one massive ||| massive	count=1
module	the algorithm ||| io fits hdu	count=1
function	the same ||| equivalent units	count=1
arg	the converted values ||| other value equivalencies	count=2
class	an object of this ||| location	count=1
function_arg	maximum [arg_2] ||| [arg_2] [function_1]	count=2
function	merge column [function_2] ||| [function_2] [function_1]	count=4
arg	in mjd ||| mjd	count=1
function	bounding box ||| bounding box	count=2
function	~numpy ndarray to a ||| to	count=1
arg	val1 and ||| val1	count=3
function	comment attribute ||| comment	count=1
function	binomial [function_2] ||| [function_1] [function_2]	count=4
function	from ||| get	count=8
module	scalars/sections also ||| extern	count=1
module	an ||| io	count=2
function	is ||| cls	count=1
function_arg	meta [arg_2] ||| [function_1] [arg_2]	count=1
class	like fitshdu fromhdulist(), but ||| fits	count=1
arg	correctly represent ||| item col_len	count=1
class	html as a ||| html	count=1
function	delete given ||| delete	count=1
function	a ||| array	count=1
function	for use ||| transform graph	count=1
function_arg	the error [arg_2] ||| [arg_2] [function_1]	count=1
function	the table ||| table as	count=1
module	else convert to ||| constants	count=1
class	split line ||| default splitter	count=1
arg	table object that this ||| table ref	count=1
function_arg	validate the [arg_2] ||| [arg_2] [function_1]	count=2
arg	names [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=6
function_arg	sets the [arg_2] ||| [arg_2] [function_1]	count=2
module_class	through a uri for [module_1] [class_2] ||| [module_1] [class_2]	count=2
module	generates a string ||| builtin_frames	count=1
function	name of ||| name	count=2
function_arg	slices [arg_2] ||| [function_1] [arg_2]	count=1
function	retrieves the contents of ||| get file contents	count=1
arg	but creates ||| filename	count=1
class	unit that this named ||| irreducible	count=1
function	airmass ||| secz	count=1
function	if the ||| convert	count=1
function	unit and adjust physical ||| add and adjust physical	count=1
function_arg	[function_1] frame to ||| visualization wcsaxes wcsaxes [function_1] transform [arg_2]	count=3
module_class	[module_1] data part ||| [module_1] [class_2]	count=9
class	for this column attribute ||| column attribute	count=1
function	contained in ||| set jds	count=1
function	[function_1] burrows ||| [function_1] [function_2]	count=8
function	is a ||| is	count=9
module	by ||| coordinates	count=1
arg	class--equivalent [arg] ||| [arg]	count=1
function	specified distance in 3d ||| 3d	count=1
class	model in the ||| model meta	count=1
arg	to key in sorted ||| key	count=1
function_arg	attributes of col ||| attrs equal col	count=1
function_arg	[function_1] an ||| [arg_2] [function_1]	count=10
module	descriptors and [module] ||| [module]	count=1
function	proxy to getregisteredclients ||| get registered clients	count=1
arg	function on the keyword ||| function	count=1
arg	output a line ||| table output	count=1
class	format ||| format	count=3
function	"representation attributes" ||| get representation attrs	count=1
function	[function_1] image data ||| [function_2] [function_1]	count=1
module_class	modeling [class_2] ||| [module_1] [class_2]	count=6
arg	binnings this is a ||| a bins	count=1
arg	given key [arg_2] ||| [arg_1] [arg_2] exact	count=1
function	a join ||| join	count=1
function	delete bscale/bzero from ||| scale info	count=1
module	fitshdu ||| io	count=1
function	source distribution ||| source	count=1
module	but ||| io fits hdu	count=2
class	progress bar to the ||| progress bar	count=3
module	previously in the document ||| io	count=2
function	[function_1] iau precession/nutation ||| [function_2] [function_1]	count=7
arg	this subroutine is ||| cls	count=1
class	return ||| earth	count=1
arg	[arg] has ||| [arg]	count=1
module	value and returns ||| coordinates	count=1
class	field_ ||| field	count=3
function	to retrieve the value ||| value	count=1
function_arg	get reader [arg_2] ||| [function_1] [arg_2]	count=1
module	the locations ||| io	count=1
arg	coordinate transform ||| fromsys tosys transform	count=1
module	the table ||| io	count=2
function	object to a ||| to	count=1
module	the case of ||| io	count=1
module_class	[module_1] split line ||| [module_1] [class_2]	count=5
class	image data by ||| image base	count=1
module_class	[module_1] [class_2] not defined ||| [module_1] [class_2]	count=2
module	a ||| utils compat	count=1
function	extract ||| parse comment	count=1
function	custom [function] model ||| has user [function]	count=1
function	schema ||| validate schema	count=4
module	the comment ||| io ascii	count=1
function	calculate the barycentric ||| get body barycentric	count=2
function	other ||| other	count=1
module	creates ||| fits hdu	count=2
function	sentence ||| sentence	count=1
function	extract info from a ||| extract	count=1
function	this frame ||| is frame	count=1
class	can deal with ||| quantity	count=1
function	fix a ||| fix	count=1
function_arg	parallel from [arg_2] ||| [function_1] [arg_2]	count=2
module	that ||| coordinates	count=1
arg	to output a line ||| table output	count=1
module_class	if the card ||| io fits card	count=1
module	the field-specifier of record-valued ||| io	count=1
class	data ||| nddata array	count=1
function	bounding_box defined on a ||| bounding box	count=1
module	the data ||| visualization	count=1
function	and then copy those ||| and copy	count=1
module	all the scaling flags ||| io	count=1
module	law [module] ||| [module]	count=1
function	get reader for ||| get reader	count=2
function	the content inside ||| content	count=1
class	of the constant ||| constant	count=2
function	[function_1] match for ||| [function_1] [function_2]	count=1
module	types of each of ||| votable	count=1
arg	means that the arrays ||| arrays	count=2
arg	of this frame's ||| new_representation in_frame_units	count=1
function	from header names ||| from names	count=1
function	classmethod to convert ||| normalize	count=1
function_arg	a view [arg_2] ||| [function_1] [arg_2]	count=3
function	a positive [function_2] ||| [function_2] [function_1]	count=3
module	the values of ||| io fits	count=1
arg	specified mtype ||| mtype	count=2
arg	[arg_1] and scale ||| time get time fmt [arg_1] [arg_2]	count=3
module	create ||| coordinates builtin_frames	count=2
function	[function_1] that the ||| [function_1] [function_2]	count=3
function	transformation between two coordinate ||| get transform	count=1
arg	a given frequency ||| t y dy frequency	count=1
arg	package ||| package	count=2
function	data to the output ||| data	count=1
module	units with ||| units	count=1
function	position [function] velocity of ||| [function] gcrs	count=1
module	the custom quoting ||| io	count=1
module_class	[module_1] table ||| [module_1] [class_2]	count=24
arg	if [arg] ||| val [arg]	count=2
arg	frequency ||| dy frequency	count=1
class	[class_1] power law ||| [class_2] [class_1]	count=3
module	new ~astropy units ||| units	count=1
function_arg	[function_1] and constrained ||| [arg_2] [function_1]	count=1
module	the keyword arguments used ||| io	count=1
function	matches [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] interval ||| [function_1] conf interval [arg_2]	count=1
module	fromhdulist(), ||| hdu	count=1
arg	right tables on ||| right	count=1
function	[function_1] its mantissa ||| [function_1] [function_2]	count=2
function	a decorator for validating ||| decorator	count=1
arg	associated with ||| packageormod	count=1
module	iterator of the ||| io	count=1
function	attribute as ||| attribute	count=1
module	the size of ||| votable	count=1
module	the file is currently ||| xml	count=1
arg	the data [arg_2] ||| [arg_1] [arg_2]	count=4
class	for ||| location	count=1
function	return the powers of ||| powers	count=1
function	in which ra ||| in	count=1
module	an hdu by ||| io fits hdu	count=2
function	an arcminute ||| arcmin	count=2
function	state ||| w0	count=1
arg	~astropy wcs wcs ||| wcs origin mode	count=1
function_arg	[function_1] frequency parameters ||| [arg_2] [function_1]	count=1
module_class	the progress ||| utils progress	count=1
function	for reallocating ||| resize strategy	count=1
class	like fitshdu ||| fits hdu	count=1
function	__eq__, the hash ||| hash	count=1
arg	other is an incompatible ||| other	count=1
class	within ogip fits files ||| ogip	count=1
function	set of catalog ||| catalog	count=1
module	may contain a ||| io fits	count=1
module	decorated object ||| utils	count=1
function	the decorated object and ||| format doc	count=1
module	is ||| coordinates	count=1
function	data ||| pkg data	count=4
function	eccentricity of the earth's ||| eccentricity	count=1
function	[function_1] subclass ||| [function_1] bounding box [function_2]	count=2
function	validator method ||| validator	count=1
arg	block ||| cls block	count=1
class	model __call__ ||| model	count=1
arg	but creates a ||| cls	count=1
arg	a new [arg_2] ||| [arg_2] [arg_1]	count=2
function	:math ||| lambda	count=1
function	unix wildcard pattern to ||| out subfmt	count=1
class	instance ||| shaped like ndarray	count=1
module	the file is ||| xml	count=1
function	[function_1] object ||| [function_2] [function_1]	count=2
module_class	the current [class_2] ||| [module_1] [class_2]	count=2
module	of this ||| nddata	count=1
arg	val1 to jd1 jd2 ||| val1 val2	count=1
function	transverse proper [function_2] ||| [function_2] [function_1]	count=2
module	the physical unit ||| units	count=2
module_class	the [class_2] ||| [module_1] [class_2]	count=120
arg	model instance ||| model	count=1
arg	the table [arg_2] ||| [arg_1] [arg_2]	count=2
function	mtype binding ||| declare	count=1
class	quantities using ||| quantity	count=1
class	the dark energy ||| lambda cdm	count=1
module_class	[module_1] [class_2] (ascii=none means unspecified but ||| [module_1] [class_2]	count=4
module	default value of the ||| io ascii	count=1
module	given vo ||| vo	count=1
arg	obj of the same ||| obj	count=1
arg	and val2 as two ||| val2	count=1
function	update ||| update checksum	count=2
module	match the input ||| io	count=1
function	[function_1] difference in ||| [function_2] [function_1]	count=4
module	pointer into the ||| io	count=1
function	data file from ||| data	count=1
function	two numpy recformats ||| recformats	count=1
function	returns a writable ||| to writable	count=1
class	names of ||| representation	count=1
arg	array ||| array	count=2
module	the algorithm described in ||| io fits	count=1
function	whether ticks are ||| ticks	count=1
module_class	computes the [class_2] ||| [module_1] [class_2]	count=2
class	raw table column to ||| rec	count=1
function	contents ||| file contents	count=1
class	stretch ||| dist stretch	count=2
module	fromhdulist(), but creates ||| io fits	count=1
class	the coefficients ||| hermite2d	count=1
function	[function_1] data ||| [function_2] [function_1]	count=4
arg	of ||| col	count=1
function	is [function_2] ||| [function_1] [function_2]	count=10
function	skycoord coordinates into pixels ||| skycoord	count=1
module	z ||| cosmology	count=1
arg	angle around [arg_2] ||| coordinates rotation matrix [arg_1] axis [arg_2]	count=1
function	space ||| space	count=1
function	age of the ||| age	count=1
function_arg	add [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	rename [arg_2] ||| [arg_2] [function_1]	count=1
function	sidereal time using ||| sidereal time	count=2
function	exponent ||| exponent	count=1
class	when either model ||| model meta	count=1
function	physical ||| get physical	count=1
function_arg	position [arg_2] ||| [function_1] [arg_2]	count=2
function	a functionquantity ||| array prepare	count=1
function	for this type ||| for	count=1
function	map ||| poly map	count=1
function	for a ||| site	count=1
function	sort ||| sort	count=1
function	calculate the apparent ||| apparent	count=1
module	value from the ||| io fits	count=1
function	a valid url ||| url	count=1
arg	value that may contain ||| cls	count=1
module_class	with the [class_2] ||| [module_1] [class_2]	count=4
module	a version of ||| configobj	count=1
class	the in-order ||| representation	count=1
module	of ||| extern configobj	count=2
module	with ||| utils	count=1
arg	given key ||| key	count=5
arg	data ||| cls data	count=1
module	for a specific ||| coordinates	count=1
function	clears ||| clear download	count=1
module	use output the ||| io	count=1
class	of this ||| nddata array	count=1
class	of the location ||| location	count=2
module	the values for ||| io	count=1
function	the table ||| table as needed	count=1
class	card image for ||| card	count=1
function	of the decorated object ||| doc	count=1
function	wrapper for multiplication ||| wrap	count=1
function	from merging the list ||| get	count=2
function	of this class for ||| site	count=1
arg	model by taking ||| model x_range y_range factor	count=1
function	setting the fill value ||| fill value	count=1
class	order based [class] essentially acts ||| [class]	count=1
function	func once ||| timed pfunc	count=1
function_arg	notification [arg_2] ||| [arg_2] [function_1]	count=2
class	state at ||| cdm	count=1
function_arg	model at [arg_2] ||| [function_1] t [arg_2]	count=1
module	using the ||| io misc	count=2
arg	[arg] larger array ||| array_large shape [arg]	count=1
arg	value of ||| value	count=3
function	decorated ||| format	count=1
class	values_ ||| values	count=2
module	from a ||| hdu	count=1
module	[module] a ||| [module]	count=4
arg	unit in ||| s unit	count=1
function	a row is inconsistent ||| inconsistent	count=1
function_arg	[function_1] col ||| [function_1] [arg_2]	count=2
module	the algorithm described ||| io fits	count=1
arg	filename ||| filename	count=1
function	generates a ||| transform	count=1
arg	table converted to ||| table	count=1
arg	urls blocks until ||| urls cache show_progress	count=1
function	for ||| for	count=1
class	_basediff class ||| base	count=1
function	with appropriate header ||| base	count=1
class	this table ||| table like hdu	count=1
class	to uppercase ||| card	count=1
function	be ||| exception	count=1
module	data ||| nddata	count=1
module	the outputter ||| io	count=1
arg	given hdulist ||| hdulist	count=1
arg	:class table object that ||| table ref	count=1
arg	a coordinate transform from ||| fromsys tosys transform	count=1
function	response to a ||| receive response	count=1
function	and then formats it ||| format	count=1
arg	a frequency ||| frequency	count=1
arg	contain a ||| cls	count=1
function	multiplication with numpy arrays ||| wrap	count=1
class	gaussian1d ||| gaussian1d	count=2
function_arg	[function_1] using a ||| [function_1] [arg_2]	count=1
module	if the ||| io fits hdu	count=2
class	behavior of the ||| time	count=1
class	[class] essentially acts ||| [class]	count=1
function	update the 'checksum' ||| update checksum	count=1
function	correspond [function] that ||| numpy [function] votable	count=1
function	that is the ||| make skyoffset cls	count=1
arg	a yaml stream ||| stream	count=1
function	ref is used only ||| ref	count=1
class	[class_1] opened with ||| [class_2] [class_1]	count=2
arg	to read the table ||| table	count=1
class	bounding box ||| bounding box	count=2
function	by the parse ||| parse	count=1
function	the apparent position ||| get apparent body position	count=1
function	wrapper for multiplication with ||| array wrap	count=1
module	add ||| extern bundled	count=1
function	to retrieve the value ||| model value	count=1
function	a decorator for validating ||| as decorator	count=1
function	points ||| points	count=1
function	catalog is ||| catalog	count=1
function	repeat tuple that index ||| from index	count=1
class	in the column and ||| column	count=1
module	origin frame ||| builtin_frames	count=1
function	the origin to ||| r	count=1
arg	a known observatory/site by ||| cls site_name	count=1
class	r ||| w0wa	count=1
function	lookback time in gyr ||| lookback time	count=1
function	image [function_2] ||| [function_1] [function_2]	count=4
function	inverse of ||| inverse	count=1
module	the given identifier ||| utils	count=1
function	matches a ||| match	count=1
module_class	[module_1] column ||| [module_1] [class_2] determine formats cls format	count=4
function	multiplication with ||| wrap	count=1
class	may contain a field-specifier ||| card	count=1
function	along the specified ||| sort	count=1
arg	with ||| obj	count=1
arg	the value ||| cls value	count=1
function	read the input ||| read	count=1
module	to match the ||| io fits	count=1
class	[class_1] each data ||| [class_2] [class_1]	count=1
function	earth ||| prepare earth	count=1
arg	join_type of 'exact' default ||| join_type col_name_map	count=1
arg	strlen ||| strlen	count=1
function	units quantity ||| quantity	count=1
module	get ||| units format	count=1
function	[function_1] [function_2] ||| [function_1] int [function_2]	count=2
module	an array ||| io votable	count=1
class	the [class_1] [class_2] ||| utils [class_1] [class_2]	count=8
function	the coordinate ||| graph	count=1
arg	for table ||| table	count=1
class	parameter to a ||| parameter	count=1
function	that ||| from	count=1
module	value that may contain ||| io fits	count=1
arg	a referenced ||| slice_	count=1
class	component of the ||| earth location	count=3
module	~astropy modeling ||| modeling	count=1
class	list ||| list	count=1
function	of the lookback time ||| tfunc	count=1
function	returns a string formatted ||| degrees to string	count=1
function	model fit at a ||| fit	count=1
function	set ut1-utc [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] 2 ||| [function_2] [function_1]	count=1
function	get groups ||| group by	count=1
module	in the ||| io fits	count=12
function	plot the ||| plot	count=1
function	coordinate ||| graph	count=1
arg	a string ||| s	count=1
arg	given the supplied [arg_1] [arg_2] ||| time get time fmt [arg_1] [arg_2]	count=20
function_arg	[function_1] correctly represent ||| [function_1] col_slice [arg_2]	count=2
function	as a dict ||| as dict	count=3
function	b ||| b	count=1
function	[function_1] comoving volume ||| [function_2] [function_1]	count=1
function	with the ascii ||| ascii	count=1
function	the contents of ||| contents	count=1
module	that also ||| extern	count=1
function	signed integer ||| int	count=1
class	a progress bar ||| progress bar	count=2
function	on ||| on	count=1
function_arg	[function_1] data ||| [function_1] [arg_2]	count=2
arg	jd2 this is ||| parent	count=1
arg	based on size used ||| size	count=1
arg	[arg_1] format and ||| time get time fmt [arg_1] [arg_2]	count=1
arg	return an object ||| cls	count=1
function_arg	[function_1] between this ||| [arg_2] [function_1]	count=1
arg	n using lagrange polynomial ||| n	count=1
function	a ||| normalize	count=2
arg	bit array ||| field recformat	count=1
function	name ||| info name	count=1
function	a valid secondary ||| secondary	count=1
function	:func delete_catalog [function_2] ||| [function_2] [function_1]	count=1
function	noise ratio ||| noise oir	count=1
function	on-sky matches of ||| match coordinates sky	count=1
function	nutation components ||| nutation	count=1
function	a diff ||| diff keyword	count=1
function_arg	arrays of [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] information criterion ||| [function_1] [function_2]	count=2
function	[function_1] returns a ||| [function_2] [function_1]	count=6
function	energy equation of ||| w0	count=1
module	the header of ||| io votable	count=2
function	same frame as ||| equivalent frame	count=1
function	[function_1] summary information ||| [function_2] [function_1]	count=1
module_class	the hdu's [class_2] ||| [module_1] corrupted [class_2]	count=1
class	create a quantity ||| quantity	count=1
function	write a diff ||| report diff	count=1
function	return the scale ||| scale	count=1
function	bounding ||| bounding	count=2
module	the object *p* ||| io	count=1
function_arg	type [arg_2] ||| [arg_2] [function_1]	count=2
arg	on ||| filename	count=1
module	clears comments and configspec ||| configobj	count=1
module	currently in ||| xml	count=1
function_arg	[function_1] internal buffers ||| [arg_2] [function_1]	count=1
class	stream ||| streaming	count=1
function	[function] frame classes ||| frame [function]	count=1
module	describing ||| hdu	count=2
function	[function] file ||| is [function]	count=1
function_arg	criterion [arg_2] ||| [arg_2] [function_1]	count=5
module	column types after the ||| io	count=1
class	class ||| location	count=1
arg	to do nothing ||| lines meta	count=1
module	index into the ||| io fits	count=1
function	calculate the pixel ||| pixel scales	count=1
function	change upon a unit ||| unit	count=1
class	vdtvaluetooshorterror('jed') ||| vdt value too short	count=1
function	directory is hidden ||| is path hidden	count=1
function	the z ||| z	count=2
arg	key in sorted order ||| key	count=1
arg	a specific msg-tag ||| msg_tag	count=1
function	value that ||| normalize	count=1
class	native in-memory datatype ||| converter	count=1
function	an existing ||| existing	count=1
arg	string from ||| cls fileobj	count=1
arg	by taking the average ||| x_range y_range	count=1
module	values [module] have them ||| [module]	count=1
function	it ||| format	count=1
arg	[arg] existing ||| card before [arg]	count=2
arg	frequency ||| frequency	count=2
function	minor [function_2] ||| [function_1] [function_2]	count=1
arg	and provides a local ||| show_progress remote_timeout	count=1
function	in [function] ||| is [function]	count=3
class	model ||| model meta	count=2
function	response ||| receive response	count=1
function_arg	subtract two [arg_2] ||| [arg_2] [function_1]	count=1
function	classmethod to ||| normalize keyword	count=1
module_class	[module_1] columns ||| [module_1] hdu table [class_2]	count=1
function	latex representation ||| repr latex	count=2
function	but the catalog is ||| add catalog by url	count=1
arg	interval ||| n interval	count=1
module	[module_1] to fits ||| [module_1] [module_2] append filename data header	count=2
module	each of the ||| io votable	count=2
module	and [module] ||| [module]	count=1
function_arg	[function_1] for table ||| [arg_2] [function_1]	count=2
function	[function_1] unicode ||| [function_2] [function_1]	count=3
arg	to parameters ||| x slope	count=1
function	angular diameter distance ||| angular diameter distance	count=4
function	first [function_2] ||| [function_1] [function_2]	count=4
arg	function called ||| args	count=1
function	object is the ||| is	count=1
function	[function] the ||| set [function]	count=2
function	fix a fill value ||| fix	count=1
module	only [module] ||| [module]	count=2
function	an object of this ||| of site	count=1
function	[function_1] its mantissa ||| [function_2] [function_1]	count=2
function	may ||| keyword	count=1
function	numpy ||| numpy	count=1
class	default ellipsoid ||| earth	count=1
function	:func list_catalogs but using ||| list catalogs by	count=1
function	data [function_2] ||| [function_1] [function_2]	count=2
module	can ||| function	count=1
function	deprecated ||| deprecated	count=1
arg	a new ||| merge_attributes	count=1
module	xml file ||| utils xml	count=1
function	an existing function but ||| function	count=1
function	this frame ||| frame	count=1
function	time using [function_2] ||| [function_2] sidereal [function_1]	count=1
arg	given position in a ||| position	count=1
function	represents ||| represents	count=1
module	hdu need to ||| fits hdu	count=1
function	a new row before ||| insert row	count=1
arg	fitshdu fromhdulist(), but ||| cls filename	count=1
function	fit a function to ||| do fit	count=1
module_class	write the header ||| io fits header	count=1
module	this ||| constants	count=1
module_class	of the field_ ||| io votable field	count=1
arg	fits file ||| filename	count=1
function	the lookback ||| lookback	count=1
function	unit and adjust ||| add and adjust	count=2
arg	user intends to ||| htmldict numtable	count=1
arg	a given position in ||| position	count=1
function	the result of the ||| result	count=1
class	initializes a ||| pool executor	count=1
function	[function_1] comoving ||| [function_2] [function_1]	count=1
function_arg	[function_1] in ||| [arg_2] [function_1]	count=2
function	data object [function_2] ||| [function_2] [function_1]	count=1
function	the file is currently ||| get	count=1
arg	rows a join_type of ||| join_type metadata_conflicts	count=1
function	origin ||| make skyoffset	count=1
arg	different size ||| array_1 array_2	count=1
module	an object of ||| coordinates	count=1
function	[function_1] cutout array ||| [function_2] [function_1] original_position	count=2
function	call to ||| receive call	count=1
arg	interval in [arg_2] ||| [arg_2] [arg_1]	count=6
module	with the proper unit ||| units	count=1
module	that may contain ||| fits	count=1
arg	account for model constraints ||| model weights	count=1
module_class	[module_1] this ||| [module_1] hdu [class_2] hdu fileinfo	count=3
class	read by bintablehdu ||| hdu	count=1
function	column [function_2] ||| [function_1] [function_2]	count=4
module	string ||| builtin_frames	count=1
class	unit (e g 'length') ||| function unit base	count=1
function	the write method ||| write	count=1
class	value ||| card	count=1
class	model ||| lomb scargle	count=1
arg	from ||| cls fileobj	count=2
function	convert a ||| normalize	count=1
function_arg	[function_1] a card's ||| [arg_2] [function_1]	count=1
module	with the coordinate ||| builtin_frames	count=1
function	with the coordinate ||| make transform	count=1
module	from the ||| io fits	count=5
function	[function_1] table by ||| [function_2] [function_1]	count=1
module	of state w ||| cosmology	count=1
function	model instance's [function] ||| [function] fit	count=1
function	make a tabular ||| tabular	count=1
function	:func delete_catalog but ||| delete catalog by	count=2
function	"representation attributes" for ||| representation attrs	count=1
function	trap masked values ||| use str for masked values	count=1
function	class of ||| make	count=1
function	[function_1] indices where ||| [function_2] [function_1]	count=2
function	for use with ||| make	count=1
class	to spherical ||| unit spherical	count=1
function	delete bscale/bzero from ||| scale	count=1
module	the normal writeto(), but ||| io fits	count=1
arg	a specified value ||| value	count=1
class	is especially useful ||| splitter	count=1
arg	the [arg] ||| [arg]	count=3
function	sidereal ||| sidereal	count=1
module	for a ||| coordinates	count=2
function	decorator for ||| decorator	count=1
function_arg	[function_1] and val2 ||| [arg_2] [function_1]	count=1
module	clears comments and ||| configobj	count=1
class	run ||| run	count=3
function	of earth ||| earth	count=1
function	return length ||| get ticksize	count=1
module_class	[module_1] [class_2] table (ascii=none means unspecified ||| [module_1] [class_2]	count=4
class	exponential cutoff [class_2] ||| [class_1] [class_2]	count=3
function	[function_1] definition keywords ||| [function_1] [function_2]	count=1
arg	row ||| row	count=4
class	element used for cross-referencing ||| coo sys	count=1
arg	[arg_1] scale ||| [arg_1] [arg_2]	count=4
class	numpy ||| column	count=1
function	instance's [function] ||| [function] fit	count=1
arg	val2 as two float64s ||| val2	count=1
function	the inverse ||| inverted	count=3
class	>>> raise vdtvaluetooshorterror('jed') ||| vdt value too short	count=1
function	this frame was created ||| is frame	count=1
function	[function_1] to a ||| [function_2] [function_1]	count=7
function_arg	parameters from [arg_2] ||| [arg_2] [function_1]	count=1
class	table-like hdus ||| like	count=1
arg	a specified ||| item	count=1
function	if ||| convert	count=1
function	rows ||| replace rows	count=1
function	summary docs in ||| summary	count=1
function	retrieves ||| get file	count=1
class	a cartesianrepresentation with ||| cartesian representation	count=1
arg	and constrained ||| fps	count=1
function	[function_1] to unicode ||| [function_2] [function_1]	count=2
function	table ||| exclude names	count=1
arg	which are valid converters ||| col converters	count=1
function	multivariate ||| multivariate	count=1
class	index to ||| index	count=1
function	strings to unicode ||| a to	count=1
function_arg	map [arg_2] ||| [arg_2] [function_1]	count=1
arg	function like write ||| write	count=1
function	[function_1] adjust physical ||| [function_2] [function_1]	count=2
function	view of ||| new view	count=1
function	ut1-utc [function_2] ||| [function_2] [function_1]	count=1
arg	or after ||| after replace	count=1
function	unit and ||| add and	count=1
class	state ||| w0wa	count=2
class	time object ||| time astropy time	count=1
function	or class [function_2] ||| [function_1] [function_2]	count=2
arg	of ndarrays ||| arrs	count=1
module	an object ||| coordinates	count=1
function	[function_1] xml ||| [function_2] [function_1]	count=1
function	bounding [function_2] ||| [function_1] [function_2]	count=2
function	the result of ||| result	count=1
function	hdu from the fileobj ||| hdu	count=1
function	quantity class corresponding ||| quantity class	count=2
function	set whether ||| set	count=2
module	the same state opened ||| io	count=1
function	a binary table's data ||| data	count=1
arg	[arg_1] position from ||| [arg_2] [arg_1]	count=1
function	new ||| make skyoffset	count=1
class	to expected attribute ||| frame attribute	count=2
arg	list of registered i/o ||| data_class readwrite	count=1
module	the given list of ||| utils	count=1
function	diff between two ||| diff keyword	count=1
function	entry ||| entry	count=1
function	the barycentric ||| body barycentric	count=2
function_arg	write [arg_2] ||| [function_1] header [arg_2]	count=2
function	to the [function_2] ||| [function_1] cutout [function_2] original_position	count=1
module	the future ||| utils compat futures	count=3
module_class	[module_1] [class_2] ||| [module_1] hdu table [class_2]	count=1
class	unit (e g ||| function unit base	count=1
function	[function] type ||| [function]	count=3
function_arg	[function_1] subsampling ||| [arg_2] [function_1]	count=5
function	classmethod to ||| keyword	count=1
function	bounding_box defined on ||| bounding box	count=1
module	that sets ||| extern configobj	count=1
class	[class_1] table ||| [class_2] [class_1]	count=4
class	construct a card ||| card	count=1
arg	used to mark a ||| name since message alternative	count=1
module	an arbitrary protocol the ||| io	count=1
arg	key and return ||| key	count=1
function	data as a ||| as	count=1
function	[function_1] nousek ||| [function_1] [function_2]	count=10
function	by a given ||| by	count=1
function	[function_1] information ||| [function_2] [function_1]	count=3
arg	user intends to process ||| htmldict numtable	count=1
class	w r t a ||| cdm	count=1
function	groups for ||| table group	count=1
function	footprint of the image ||| footprint	count=1
function	string for use with ||| make transform graph	count=1
class	the frame ||| base frame	count=2
class	return an object ||| location	count=1
function	which ra and dec ||| apparent position	count=1
arg	[arg_1] [arg_2] ||| [arg_2] names include_names [arg_1]	count=4
function	the catalog is ||| catalog	count=1
function	floating number to make ||| float	count=1
arg	matrices for rotation by [arg_1] [arg_2] ||| coordinates rotation matrix [arg_1] [arg_2]	count=1
function	also generally ||| abbrev	count=1
arg	two ||| y slope_x	count=2
function	same [function] ||| get units with [function]	count=3
module	string ||| io fits	count=1
function_arg	from [arg_2] ||| visualization wcsaxes wcsaxes [function_1] transform [arg_2]	count=2
module_class	[module_1] in html ||| [module_1] [class_2]	count=2
function	but looks in both ||| lookup by	count=1
class	[class_1] box sequence ||| [class_2] [class_1]	count=3
module	rows in the ||| io fits	count=1
function	bind ||| bind	count=4
function	with ||| transform	count=1
module	method takes ||| vo samp	count=1
function	[function_1] the tick ||| [function_2] [function_1]	count=1
function	binomial ||| binom	count=1
class	return a new larger ||| table	count=1
arg	the sum of val1 ||| val1	count=1
function	mask ||| mask	count=2
function	as running ||| set running	count=1
function	[function] message string ||| [function]	count=1
function	and adjust [function_2] ||| [function_1] [function_2]	count=2
function	that may ||| normalize	count=1
module	class that is the ||| coordinates builtin_frames	count=1
function	numpy allclose that returns ||| not allclose	count=1
class	dark ||| w0wa	count=2
function	data as a ||| data	count=1
function	site [function_2] ||| [function_1] [function_2]	count=4
arg	fitshdu ||| cls	count=1
class	smoothly broken [class_1] [class_2] ||| modeling smoothly broken [class_1] [class_2]	count=1
module_class	in the [class_2] ||| [module_1] [class_2]	count=15
class	one [class_1] [class_2] ||| [class_1] [class_2]	count=2
function	[function_1] besselian ||| [function_1] [function_2]	count=2
module	arbitrary protocol the ||| io	count=1
arg	x coordinates and one ||| x	count=1
module	translated from fits ||| fits	count=1
function	the coordinate ||| make transform graph	count=1
arg	package and [arg_2] ||| [arg_1] [arg_2]	count=1
function	the gcrs ||| gcrs	count=1
function	write a table object ||| write	count=1
class	of the index ||| index	count=2
function	comoving kpc [function_2] ||| [function_1] [function_2]	count=3
arg	key and return the ||| key	count=1
function	to reply ||| reply	count=1
function	density in grams ||| density	count=1
function	the lookback [function_2] ||| [function_2] [function_1]	count=1
function	or raise an ||| or raise	count=2
arg	output where output is ||| output	count=1
arg	fitshdu fromhdulist(), but ||| cls	count=1
arg	bic given the ||| n_params n_samples	count=1
arg	[arg_1] right tables ||| [arg_1] [arg_2]	count=1
function	in transverse proper ||| proper	count=1
function	the barycentric [function_2] ||| [function_1] [function_2]	count=2
arg	using various sets of ||| read_kwargs format fast_reader	count=1
arg	of obj of ||| obj	count=1
class	keys of the index ||| index	count=1
arg	particular pixscale ||| pixscale	count=1
class	way for column attributes ||| column	count=1
function	~numpy ndarray to ||| array to file like	count=1
module	of a ||| utils	count=1
function	convert a ||| degrees to	count=1
module	creates a ||| io fits hdu	count=1
arg	given name and ||| name	count=1
arg	the ufunc ||| obj context	count=1
function	a list [function_2] ||| [function_2] [function_1]	count=6
arg	compositetransform ||| fromsys tosys	count=1
function	that the ||| prepare	count=1
function	object to an hdf5 ||| hdf5	count=1
function	table object [function_2] ||| [function_2] [function_1]	count=2
function	file ||| get	count=1
module	to ascii format or ||| fits	count=1
class	[class] given to ||| progress bar [class]	count=1
function	[function_1] tick ||| [function_2] [function_1]	count=1
class	field-specifier ||| card	count=1
function	:func add_catalog but the ||| by	count=1
module	return the ||| io fits	count=3
arg	and memmap object if ||| output_verify verbose closed	count=1
class	name ||| location	count=1
function	fit a ||| do fit	count=1
function	region of the cutout ||| cutout	count=1
module_class	the [class_2] ||| [module_1] votable [class_2] extra	count=3
function	the header ||| header	count=1
function	indentation levels ||| indentation	count=1
arg	check ||| min max	count=2
function	bscale/bzero from ||| scale	count=1
module	of the referenced object ||| io votable	count=2
function	and b [function_2] ||| [function_2] [function_1]	count=1
module	does this cosmology ||| cosmology	count=1
function	specific ||| make skyoffset	count=1
class	mixin-safe version of column ||| column	count=1
module	if ||| io fits hdu	count=2
function	object from another column ||| from column	count=1
function	decorated object and ||| format	count=1
function_arg	[function_1] that value ||| [function_1] [arg_2]	count=1
function	[function_1] class ||| [function_1] [function_2]	count=2
arg	default write_comments [arg] since ||| [arg]	count=1
function	set ut1-utc source ||| ut1 utc source	count=2
arg	a ||| cls filename	count=2
class	file ||| file	count=15
function	has enough space ||| check free space in dir	count=1
function	data ||| get pkg data	count=4
arg	compositetransform for ||| fromsys tosys	count=1
function	generate a latex ||| latex	count=1
function_arg	[function_1] copy ||| time [function_1] val [arg_2]	count=2
function	[function_1] any ||| [function_2] [function_1]	count=1
class	the current mapping ||| mapping	count=1
module	not the ||| io fits	count=3
class	of [class_1] [class_2] ||| [class_1] [class_2]	count=1
arg	cards to the end ||| cards	count=1
class	[class_1] image format ||| [class_2] [class_1]	count=2
module	the object ||| io	count=1
module	[module_1] the data ||| [module_1] [module_2]	count=4
function	add_catalog but ||| by url	count=1
function	hash for a ||| hash	count=1
class	column and ||| column	count=1
function	all the currently running ||| get running	count=1
function	specific class of ||| cls	count=1
function_arg	[function_1] the units ||| [arg_2] [function_1]	count=3
arg	this ||| tag	count=1
function	of the lookback time ||| lookback time	count=1
module	compress the ||| io fits	count=1
function	[function_1] file can ||| [function_1] [function_2]	count=4
class	verify ||| valid hdu	count=1
module	looks in both the ||| io	count=1
function	factory to create a ||| factory	count=1
function	the first ||| first	count=1
class	stddevuncertainty allows ||| std dev uncertainty	count=1
class	of unit ||| unit	count=1
module	a tuple ||| coordinates	count=1
function	new ||| add	count=1
module	and ||| utils	count=1
function_arg	validate [arg_2] ||| [arg_2] [function_1]	count=2
arg	utility method to ||| card_len	count=1
arg	of obj ||| obj	count=1
function	groups ||| groups	count=1
function	get a ~astropy ||| get	count=2
module	of state w r ||| cosmology	count=1
function_arg	in parallel [arg_2] ||| [arg_2] [function_1]	count=1
class	of 1d hermite ||| hermite2d	count=1
class	the row ||| row	count=1
module_class	[module_1] column ||| [module_1] [class_2]	count=7
function	the unit summary docs ||| unit summary	count=1
arg	bit array as specified ||| field recformat	count=1
function	on kraft [function_2] ||| [function_2] [function_1]	count=8
module	futures ||| utils compat futures	count=1
function	factors for one ||| scale factors	count=1
function	[function_1] time in ||| [function_2] [function_1]	count=1
function_arg	main function called ||| main args	count=1
function_arg	[function_1] [arg_2] ||| [function_1] oversample 1d [arg_2]	count=4
arg	right [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	main function ||| main args	count=1
function_arg	mantissa and [arg_2] ||| [function_1] exponent [arg_2]	count=1
function	hour [function] ||| hours to [function]	count=1
arg	processes ||| executor_reference processes	count=1
function	[function_1] or none ||| [function_1] [function_2]	count=4
function	the contents of ||| get file contents	count=1
function	unregister ||| unregister	count=1
arg	given a particular pixscale ||| pixscale	count=1
function	given astropy table ||| to table	count=2
function	are able to directly ||| dir	count=1
arg	to name ||| name	count=1
function	get a [function_2] ||| [function_2] [function_1]	count=3
function	extract the ||| parse comment	count=1
arg	frequency ||| y dy frequency	count=1
class	csv ||| csv	count=1
arg	printer ||| cls p cycle	count=1
class	spherical polar ||| unit spherical	count=1
arg	bic given ||| n_params n_samples	count=1
function	formats as a table ||| formats	count=1
arg	known observatory/site by ||| cls site_name	count=1
function	python 2 ||| python 2	count=2
function	write ||| write	count=10
function	differential comoving ||| differential comoving	count=2
module	portion of the ||| io fits	count=2
module	use with the coordinate ||| coordinates builtin_frames	count=1
function	to a ||| array to file	count=1
function	returns a writable ||| convert to writable	count=1
class	image ||| image base	count=1
arg	[arg_1] after ||| [arg_2] [arg_1]	count=1
module	fromhdulist(), but creates ||| io	count=1
function	value that may ||| keyword	count=1
module	[module_1] hdu from ||| [module_1] [module_2]	count=4
class	csv [class_2] ||| [class_1] [class_2]	count=1
function_arg	[function_1] mode ||| [function_1] [arg_2]	count=4
function	frame ||| make skyoffset	count=1
arg	package and provides ||| package	count=2
module	each record in the ||| io fits	count=1
module	fromhdulist(), but creates a ||| hdu	count=1
module	classmethod to ||| io	count=1
function	range [0 60] if ||| check minute range	count=1
arg	table object ||| table ref	count=1
function	from a file on ||| fromfile	count=1
function	new class ||| skyoffset cls	count=1
function	w z = wp ||| zp	count=1
class	exponential [class_2] ||| [class_1] [class_2]	count=5
function_arg	[function_1] x y ||| [function_1] [arg_2]	count=1
function	by the parse method ||| parse	count=1
function	pixel distances (in ||| pixel scale	count=1
class	in-order names of the ||| base	count=1
arg	the data based ||| nrows config	count=2
class	reset logger ||| astropy logger	count=1
arg	a subsampling ||| position subsampling	count=1
function	probably contains html content ||| probably html	count=1
function	ascii ||| ascii	count=1
function	axes interchanged ||| swapaxes	count=1
module	having either the ||| io fits hdu	count=1
module	to [module] ||| [module]	count=10
arg	exclude_names to [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] the unit ||| [function_1] [function_2]	count=1
function	are able to ||| dir	count=1
arg	polynomial [arg] which ||| [arg]	count=1
function	skycoord coordinates ||| skycoord	count=1
function	type as ||| type	count=2
module	but creates a ||| fits	count=1
class	converts ||| unit	count=1
function	data object summary ||| data	count=1
function	a positive index ||| positive index of	count=2
function	specific class of ||| skyoffset	count=1
arg	given ||| axis mode	count=1
arg	a function ||| function declare metadata	count=3
function	classmethod ||| normalize keyword	count=2
module_class	the converter ||| io votable converter	count=1
module	hdu ||| fits hdu	count=3
class	a cds ||| cds	count=1
function	lookback [function_2] ||| [function_1] [function_2]	count=5
function	that the ||| for	count=1
arg	fitshdu from [arg_2] ||| [arg_2] [arg_1]	count=4
function	a simple ||| simple	count=1
function	whether two [function] more ||| [function]	count=1
function	but with the ||| with	count=1
function	connect to the current ||| connect	count=1
function	for baryonic matter ||| ob	count=1
module	return ||| coordinates	count=1
module	with the in-order ||| coordinates	count=1
class	energy ||| w0wa	count=2
function	corresponding to [function_2] ||| [function_2] [function_1]	count=2
module	to all members that ||| extern configobj	count=1
module	that ||| extern	count=2
class	all ||| unit base	count=1
class	location on earth ||| earth location	count=4
function_arg	[function_1] oneself possibly ||| [function_1] [arg_2]	count=1
function	logging of ||| logging	count=3
function	cache ||| cache	count=4
arg	this class ||| cls	count=1
function	dark matter ||| odm	count=1
module	[module_1] to fits ||| [module_1] [module_2]	count=2
function	generates a string ||| make	count=1
function_arg	[function_1] fn iter ||| [function_1] [arg_2]	count=4
class	data ||| image hdu	count=1
arg	a time ||| time	count=1
class	object of this ||| earth location	count=1
module	of physical units ||| units	count=1
function	frame ||| is frame attr	count=1
arg	defined by lon ||| lon	count=1
arg	line ||| line	count=1
module	the new file ||| io fits	count=1
class	copy ||| base column	count=2
class	dark energy ||| w0wa cdm	count=3
function	float or [function_2] ||| [function_2] [function_1]	count=1
class	a ||| base	count=1
arg	in val1 to ||| val1 val2	count=1
function	this ||| call	count=3
function	with ||| array	count=1
function	minor [function_2] ||| [function_2] [function_1]	count=1
module	a summary of the ||| io fits	count=1
module_class	[module_1] hdu ||| [module_1] [class_2]	count=2
module	that ||| units	count=1
arg	mapping col_name_map ||| arrays col_name_map	count=2
arg	standard locations [arg_2] ||| [arg_2] [arg_1]	count=5
function	the source used for ||| reference	count=1
module	state w ||| cosmology	count=1
function	but the catalog is ||| catalog by url	count=1
module	the comment regexp ||| io ascii	count=1
function	functions ||| functions	count=2
function	[function_1] kpc ||| [function_2] [function_1]	count=22
module	:class ||| votable	count=1
function	class that is the ||| make skyoffset	count=1
function	to convert a ||| normalize keyword	count=1
class	can deal ||| quantity	count=1
function	[function] position ||| get [function]	count=2
arg	card to the ||| card	count=1
function	a writable file-like ||| to writable	count=1
function	value that may contain ||| keyword	count=1
arg	points within a given ||| searcharoundcoords	count=1
module	chain return the ||| io	count=1
module_class	bounding_box limits [class_2] ||| [module_1] [class_2]	count=2
module_class	[module_1] model ||| [module_1] [class_2]	count=8
function	break up long string ||| format long	count=1
function_arg	[function_1] corrections ||| [function_1] [arg_2]	count=2
class	at z=0 ||| cdm	count=1
arg	the given urls ||| urls	count=1
arg	like ||| filename	count=1
arg	data ||| data sep	count=1
function	to the specified ||| to	count=1
class	raise vdtvaluetoolongerror('jedie') ||| too long	count=1
module	coordinates using a ~astropy ||| coordinates	count=1
module	support for [module] legacy before/after ||| [module]	count=1
arg	calculates the ||| undistort axes center	count=1
function_arg	element [arg_2] ||| [function_1] [arg_2]	count=5
function	time in gyr ||| time	count=1
function	a diff ||| report diff	count=1
arg	obj of the ||| obj	count=1
function	to noise ratio ||| to noise	count=1
module	specific class of origin ||| coordinates	count=1
function	input [function] is a ||| [function]	count=1
class	client wishes to subscribe ||| sampclient	count=1
function	a data ||| data	count=1
arg	longer than strlen ||| strlen	count=1
function	object to an hdf5 ||| table hdf5	count=1
arg	determines the ||| short_name constellation_list	count=1
function_arg	type for [arg_2] ||| [function_1] [arg_2]	count=1
class	>>> raise vdtvaluetooshorterror('jed') ||| too short	count=1
arg	mtype to a function ||| mtype function	count=1
function	[function_1] arrays ||| [function_1] [function_2]	count=1
module_class	computes [class_2] ||| [module_1] [class_2]	count=2
function	matches of this coordinate ||| match to	count=1
function	center of the pixel ||| center 2d	count=1
function	[function_1] cutout array ||| [function_2] [function_1]	count=2
arg	model constraints ||| model weights	count=1
class	energy equation ||| cdm	count=2
function	object with the basic ||| to	count=1
function_arg	write the [arg_2] ||| [arg_2] [function_1]	count=2
function	to the x y ||| to	count=1
function_arg	with the [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	the special [arg_2] ||| [function_1] input [arg_2]	count=3
function_arg	[function_1] comment lines ||| [arg_2] [function_1]	count=1
function	specific class of ||| skyoffset cls	count=1
module	utils ||| utils	count=2
function	[function] window ||| map [function]	count=1
arg	by name ||| cls	count=1
function_arg	[function_1] [arg_2] ||| [function_1] indices [arg_2]	count=4
function	match ||| match	count=1
arg	fastbasic to output ||| table output	count=1
module	dropping the physical unit ||| units function	count=1
function	center of the ||| center 2d	count=1
function	same ||| equivalent units	count=2
arg	a function or class ||| function	count=3
function	new ||| make	count=1
function	parallel ||| parallel	count=1
function	keywords ||| keywords	count=1
function	validation for ||| do validation	count=1
function	an ||| of	count=1
module	to [module] file-like ||| [module]	count=1
arg	[arg] array parameters ||| [arg]	count=3
function	of get ||| get	count=1
function	from a given ||| from table column	count=1
function	if a config file ||| is unedited config file	count=1
function	none ||| none	count=1
class	on ||| fits	count=1
module	irreducible units ||| units	count=1
arg	simplest possible composite unit ||| equivalencies units max_depth include_prefix_units	count=1
function	critical ||| critical	count=2
module	[module_1] lomb-scargle ||| [module_1] [module_2]	count=2
module	the :class ||| io votable	count=2
module	in a fits ||| fits	count=3
function	box we [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] other ||| [arg_2] [function_1]	count=4
module	from [module_2] ||| [module_2] [module_1]	count=2
module	number of ||| xml	count=1
module	the format for the ||| io	count=1
class	in [class] based on ||| [class]	count=1
function	number ||| get	count=1
function	a diff between ||| report diff keyword	count=1
class	hdu should be opened ||| hdu	count=1
module	called by the fitsinfo ||| io fits	count=1
function	light ||| light	count=1
function	indentation ||| get indentation	count=1
function	calculate a sidereal ||| sidereal	count=1
function	[function_1] a fits ||| [function_1] [function_2]	count=3
arg	[arg_1] observed counts ||| [arg_1] [arg_2]	count=3
class	power ||| power	count=8
function	[function_1] minor ticks ||| [function_2] [function_1]	count=1
arg	image_g and image_b ||| image_g image_b	count=2
function	updates ||| updates	count=1
arg	the given unit ||| unit	count=2
function	bitpix value in ||| bitpix	count=1
arg	(dtype kind='u') assuming ||| python3_only	count=1
function_arg	return a [function_1] [arg_2] ||| visualization wcsaxes wcsaxes [function_1] transform [arg_2]	count=7
function	fit at a ||| periodic fit	count=1
function	[function_1] unit format ||| [function_2] [function_1]	count=1
function	attributes ||| getattr	count=2
arg	scale and ||| scale	count=1
function_arg	a subclass [arg_2] ||| [arg_2] [function_1]	count=2
module_class	of the [class_2] ||| [module_1] [class_2]	count=16
class	an error according to ||| config obj	count=1
function	may contain ||| normalize	count=1
arg	binnings this is a ||| a bins range weights	count=1
arg	where name matches pattern ||| pattern	count=1
function	is an ||| is	count=1
module	types after the column ||| io ascii	count=1
module	of [module] ||| [module]	count=9
function	postreleaser ||| postreleaser	count=1
arg	package and provides the ||| package encoding	count=1
function_arg	format that [arg_2] ||| [function_1] [arg_2]	count=1
function	the "representation attributes" for ||| representation attrs	count=1
function	a votable ||| votable	count=3
arg	from a time ||| time	count=1
arg	a join_type of 'exact' ||| join_type	count=2
module	column ||| io fits	count=1
function	[function_1] currently connected ||| [function_1] [function_2]	count=1
function	class for ||| col for	count=1
function	of registered units ||| units	count=1
arg	the data [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	converts an [arg_2] ||| [function_1] float [arg_2]	count=4
class	stddevuncertainty ||| std dev uncertainty	count=2
function	a diff between ||| diff	count=1
class	string values ||| base	count=1
function	from a [function_2] ||| [function_2] [function_1]	count=4
arg	[arg_1] observed counts ||| [arg_2] [arg_1]	count=3
function_arg	[function_1] to parameters ||| [arg_2] [function_1]	count=1
arg	used to mark ||| name since message alternative	count=1
function	groups for ||| group	count=1
arg	position from ||| position	count=1
arg	mapping [arg_2] ||| descrs [arg_1] [arg_2]	count=2
class	model in the ||| model	count=1
module	the samp hub ||| vo samp	count=1
arg	the out ||| out tables col_name_map idx_left	count=1
class	return ||| nonstandard ext	count=1
function	bases of the ||| bases	count=1
function	integer dimensions ||| ndim	count=1
function	matrix from one ||| matrix	count=1
function	linear [function_2] ||| [function_1] [function_2]	count=1
function	absolute ||| absolute	count=1
arg	convert a keyword ||| keyword	count=1
function	out of ||| console	count=1
module	hdu by index/name that ||| hdu	count=1
arg	format ||| format copy	count=1
function	[function_1] distance ||| [function_2] [function_1]	count=9
class	logger to ||| astropy logger	count=1
module	string for use ||| coordinates	count=1
arg	header keyword ||| keyword	count=1
class	that may contain ||| card	count=1
arg	split line on ||| line	count=1
function	class of origin ||| skyoffset cls	count=1
module	the header/data to fits ||| io fits	count=1
arg	the given [arg] dictionary ||| [arg]	count=1
module	then formats ||| utils	count=1
arg	given name [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] row ||| [function_1] [arg_2]	count=3
function_arg	diff [arg_2] ||| [arg_2] [function_1]	count=2
function	convert ||| to pixel	count=2
function_arg	utc [arg_2] ||| [function_1] [arg_2]	count=2
class	the dark energy ||| w0wa cdm	count=1
function	the default ||| update default	count=1
module	overrides the default behavior ||| time	count=1
function	the bases ||| bases	count=2
arg	(_header) ||| image_header name compression_type tile_size	count=1
arg	function func to group ||| func	count=1
function	column ||| column	count=7
arg	of a given size ||| path size	count=1
function	that ||| array	count=1
function	wraps which also ||| wraps	count=1
class	this ||| base	count=14
function	write the current ||| write	count=1
arg	key ||| key	count=7
class	in [class] based ||| [class]	count=1
function	can ||| array	count=1
module	creates a ||| fits hdu	count=1
function_arg	definitions [arg_2] ||| [arg_2] [function_1]	count=1
function	a string for ||| transform	count=1
module	filename or file-like object ||| utils	count=1
function	on an oversampled grid ||| oversample 1d	count=1
function	with ||| with	count=2
class	as calculated from ||| shaped like ndarray	count=1
module	also clears comments and ||| extern configobj	count=1
class	object's data ||| nddata	count=1
class	convert a ||| card	count=1
function	of ||| get file	count=1
function	comoving [function_2] ||| [function_1] [function_2]	count=1
function	id ||| id	count=1
function	[function_1] position ||| [function_2] [function_1]	count=2
module	if the ||| nddata	count=1
function	not a length ||| length	count=1
module	bytes of the ||| io fits	count=2
arg	string from ||| cls	count=1
arg	raise vdtparamerror ||| names values to_float	count=1
arg	this type of ||| col	count=1
function	map operation ||| map	count=1
module	state ||| cosmology	count=2
arg	to the given key ||| key	count=2
function	dtype ||| dtype	count=4
function_arg	[function_1] object col ||| [arg_2] [function_1]	count=2
module_class	of the converter ||| io votable converter	count=1
module	for a specific class ||| builtin_frames	count=1
module	searches for all coordinates ||| coordinates	count=2
function	mean longitude ||| mean lon	count=2
function	does a map operation ||| map	count=1
function	file ||| file	count=4
function	the cache ||| cache	count=1
module	mark the ||| utils	count=1
class	the data should be ||| comp image hdu	count=1
class	strings ||| string	count=1
function	a positive [function_2] ||| [function_1] [function_2]	count=3
module	[module_1] the ||| [module_1] [module_2]	count=49
module	this ||| units	count=1
function	its tables and nested ||| fields and	count=1
function	arg supplied ||| arg	count=1
module_class	the coosys_ [class_2] ||| [module_1] [class_2]	count=1
arg	a new unit ||| unit	count=1
function	with ||| fill	count=1
function_arg	[function_1] for class1 ||| [arg_2] [function_1]	count=2
function	copy copy function in ||| copy	count=1
function	numpy array to ||| array to	count=2
function	calendar date and ||| kwargs	count=1
module	minor axes ||| visualization wcsaxes	count=2
module	not the ||| io	count=1
arg	sliced object modify its ||| col_slice	count=1
arg	float ||| m s	count=1
function	create a ||| make	count=1
function	the ||| doc	count=2
function_arg	fit at [arg_2] ||| [function_1] [arg_2]	count=1
module	the [module] decomposed ||| [module]	count=1
function	given astropy [function_2] ||| [function_2] [function_1]	count=1
class	quantity view of some ||| quantity	count=1
class	model ||| model	count=3
arg	file ||| cls file	count=1
function	find ut1 - ||| get delta ut1	count=1
module	append [module] ||| [module]	count=3
function	list_catalogs but using ||| list catalogs by	count=1
arg	increment ||| increment	count=1
module	minor axes in the ||| wcsaxes	count=2
class	an error according ||| config obj	count=1
function	from unless no further ||| read next	count=1
arg	[arg] to a ||| cls [arg]	count=2
module	that the ||| function	count=1
module	in ||| utils	count=1
function	class for this ||| col for	count=1
arg	argument and if method='auto' ||| dy fit_mean nterms	count=1
arg	:class ||| strip	count=1
function	is ||| check	count=2
arg	string ||| string	count=1
function	image data ||| image data	count=2
class	a stretch ||| asinh stretch	count=1
arg	function ||| amplitude mean stddev	count=1
function	verify that ||| verify	count=2
function	that is the ||| skyoffset	count=1
function	find ut1 - utc ||| delta ut1 utc	count=1
function	schema ||| schema	count=2
module	fitshdu fromhdulist(), ||| io fits hdu	count=1
arg	[arg_1] format and ||| [arg_2] [arg_1]	count=3
class	sorted ||| sorted	count=3
arg	a card's ||| oldkeyword newkeyword force	count=1
arg	current instance ||| order data copy_data	count=1
function	[function_1] corresponding to ||| [function_1] [function_2]	count=8
class	aggregate each [class] ||| table [class]	count=1
arg	in col str_vals ||| cols	count=1
class	that this named ||| irreducible	count=1
module	database [module_2] ||| [module_1] [module_2]	count=3
arg	vertically [arg] ||| arrays [arg]	count=1
module_class	string the [class_2] ||| [module_1] [class_2]	count=8
arg	and exclude_names [arg_2] ||| [arg_2] names include_names [arg_1]	count=1
arg	into a table ||| table	count=2
function	returning a positive index ||| positive index of	count=1
class	r t a ||| w0wa	count=1
module	previously in the ||| io	count=2
function	a 3-tuple or ||| tuple	count=1
class	a cartesianrepresentation ||| cartesian representation	count=1
module	from a file on ||| hdu	count=1
arg	new card [arg] ||| card [arg] after	count=1
function	or directory is ||| is path	count=1
class	of state at ||| w0wa cdm	count=1
arg	data for this frame ||| frame units	count=1
function	a fits file parameters ||| fits	count=1
module	fromhdulist(), but creates ||| fits	count=1
function	apply equivalence pairs ||| apply equivalencies	count=1
class	the parameter to ||| parameter	count=1
function_arg	[function_1] [arg_2] ||| [function_1] call [arg_2]	count=3
class	of the location ||| earth location	count=1
function	[function] of ||| get [function]	count=3
module_class	[module_1] file ||| [module_1] votable votable [class_2]	count=4
arg	if [arg] is ||| [arg]	count=1
function	[function_1] with ||| [function_1] [function_2]	count=7
arg	[arg_1] a table ||| [arg_2] [arg_1]	count=3
class	fitshdu ||| fits	count=1
function	to an array that ||| model to	count=1
function	items in value can ||| can	count=1
module	[module] first item ||| [module]	count=1
function	[function_1] type as ||| [function_1] [function_2]	count=8
function_arg	position of [arg_2] ||| [arg_2] [function_1]	count=3
arg	[arg_1] format ||| [arg_1] [arg_2]	count=1
arg	kernels ||| kernel	count=1
class	of this object's ||| array	count=1
module	with a functionquantity ||| units function	count=1
function	dark ||| w0	count=1
function_arg	func once [arg_2] ||| [arg_2] [function_1]	count=1
function	string for use with ||| transform	count=1
arg	pixel to world ||| pixel	count=1
class	to the graph ||| transform graph	count=1
arg	(lon0 ||| lon0 lat0	count=1
function	string for use ||| transform	count=1
class	native in-memory datatype to ||| converter	count=1
function_arg	[function_1] body body ||| [function_1] [arg_2]	count=3
arg	package and ||| package encoding	count=1
class	table ||| ascii col defs	count=2
function	from one besselian epoch ||| besselian	count=1
function	the catalog is created ||| add catalog	count=1
arg	given size ||| size	count=1
arg	[arg_1] based on ||| [arg_2] [arg_1]	count=4
function	uniquely identifies [function_2] ||| [function_2] type [function_1]	count=1
function	check ||| array	count=1
arg	mask of zero ||| mask	count=1
function	numpy allclose that ||| not allclose	count=1
class	update ||| base hdu	count=1
module	secant if the ||| coordinates	count=1
arg	self [arg] has length ||| [arg]	count=1
module	new class ||| coordinates builtin_frames	count=1
function	fill value of a ||| fill value	count=1
function	class ||| cls	count=2
function	that ||| normalize keyword	count=2
module	comments to [module] file-like ||| [module]	count=1
module	this cosmology have ||| cosmology	count=1
module	specific class ||| coordinates	count=1
module	the longitude unit ||| coordinates	count=1
function	to uppercase ||| keyword	count=1
function	returns a ||| get	count=1
class	expected ||| frame	count=1
arg	the given key ||| key	count=4
module_class	the _basediff [class_2] ||| [module_1] [class_2]	count=2
module	affects ||| extern	count=1
module	and configspec ||| configobj	count=1
class	unit (e ||| unit base	count=1
arg	angle around ||| angle	count=1
function	a table ||| table	count=2
module	a file on ||| hdu	count=1
function	[function_1] position of ||| [function_2] [function_1]	count=2
function_arg	grid [arg_2] ||| [function_1] [arg_2] assume_regular_frequency	count=3
function	[function_1] field ||| [function_2] [function_1]	count=4
class	model in ||| compound model	count=1
module	iterator of the ||| io ascii	count=1
function_arg	[function_1] [arg_2] ||| [function_1] conf interval [arg_2]	count=9
module	specific class ||| coordinates builtin_frames	count=1
arg	convert a keyword ||| cls keyword	count=1
arg	object modify ||| col_slice	count=1
arg	from a ||| cls filename	count=1
arg	values in mjd and ||| mjd	count=1
function	update the [function_2] ||| [function_2] [function_1]	count=1
function	can have [function_2] ||| [function_2] [function_1]	count=1
class	at the [class] redshift ||| [class]	count=1
class	a raw ||| rec	count=1
function	into its mantissa ||| mantissa	count=1
module	from a fits ||| fits	count=1
function	merge column meta ||| merge col meta	count=3
arg	rows a join_type ||| join_type metadata_conflicts	count=1
function_arg	apply [arg_2] ||| [arg_2] [function_1]	count=5
function	on kraft burrows ||| kraft burrows	count=3
module	fix the ||| io	count=1
module_class	[module_1] [class_2] ||| [module_1] hdu [class_2]	count=5
class	attribute class ||| attribute	count=1
function	add ||| add	count=8
function	a new class that ||| cls	count=1
arg	hold the data based ||| nrows config	count=1
function_arg	[function_1] redshift z ||| [arg_2] [function_1]	count=2
function	uniquely identifies ||| id	count=1
module	class that ||| coordinates	count=1
function	function to ||| function	count=2
module	can be given as ||| utils	count=1
module	numpy ndarray [module] the ||| [module]	count=1
function	for this type ||| convert col for	count=1
function	html ||| html	count=2
function	a set of all ||| set	count=1
function	coordinate [function_2] ||| [function_1] [function_2]	count=1
module_class	the header ||| io fits header	count=5
function	[function_1] mantissa ||| [function_1] [function_2]	count=1
class	-90 ||| latitude	count=1
arg	a keyword value ||| cls keyword	count=1
function_arg	[function_1] [arg_2] ||| [function_1] signature [arg_2]	count=14
arg	to do nothing ||| lines	count=1
arg	[arg_1] val2 ||| time get time fmt [arg_1] [arg_2]	count=1
module	flushing the ||| io	count=1
class	this table ||| table base	count=1
arg	a unit returns the ||| unit	count=1
class	of the quantity ||| quantity	count=1
arg	confidence interval given ||| n interval	count=1
function	a power ||| power	count=1
class	initialize a column specifically ||| column	count=1
class	number of coefficients ||| polynomial model	count=1
class	evaluated with ||| base	count=1
arg	begin to [arg_2] ||| [arg_1] [arg_2]	count=1
arg	the unit ||| unit	count=1
function	indentation levels ||| get indentation	count=1
function_arg	[function_1] a new ||| [function_1] frame [arg_2]	count=1
module	for the futures ||| futures	count=1
module	with ||| function	count=1
class	of ||| earth	count=1
function	handles setting the configspec ||| configspec	count=1
arg	confidence interval [arg_2] ||| [arg_1] [arg_2]	count=1
function	cutout array with ||| cutout	count=1
arg	a resulting table ||| table	count=1
function	rows in a datablock ||| multiline	count=1
module	describing the ||| io fits hdu	count=4
module	fill value in the ||| io	count=1
module	as having either the ||| io fits hdu	count=1
function	from header ||| cols from	count=1
module	having either the simple ||| io fits hdu	count=1
function	geodetic coordinates ||| geodetic	count=1
rep	computes on-sky [function_arg_2] ||| [module_class_1] [function_arg_2]	count=8
function	the ||| cls	count=1
function	to a ||| to	count=9
class	a ||| base representation	count=1
arg	tables on specified keys ||| keys join_type	count=1
module	the physical unit ||| units function	count=2
function	running status ||| running	count=1
function	range [function_2] ||| [function_2] [function_1]	count=4
arg	coldefs ||| columns col_idx	count=1
arg	a fitshdu from ||| compress	count=1
class	pivot ||| wpwa cdm	count=1
function	validate a ||| validate	count=1
function	function relative to the ||| nu relative	count=1
function	[function_1] format ||| [function_2] [function_1]	count=3
arg	modify its ||| col_slice	count=1
function_arg	val and convert/reshape to [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
function	the absorption [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] position ||| [arg_2] [arg_1]	count=1
function	angle or scalar coordinate ||| coord type from	count=1
module	into account the ||| io	count=1
arg	method standard profile ||| private_key xmlrpc_addr	count=1
function	cosmology instance from ||| cosmology from	count=1
arg	by lon [arg_2] ||| [arg_1] [arg_2]	count=1
function	but creates a ||| fromfile	count=1
class	quantity with the proper ||| quantity	count=1
class	matches ||| config obj	count=1
function	to convert a ||| normalize	count=1
function	file can ||| file	count=1
function	is ||| make skyoffset cls	count=1
module	list of strings ||| io ascii	count=1
arg	function ||| data_class function	count=2
function	dark energy equation of ||| w0	count=1
function	correct class for ||| col for	count=1
function	same physical ||| same physical	count=2
arg	:class table object ||| table ref	count=1
function	a schema ||| validate schema	count=1
class	classes or instances return ||| meta	count=1
module	for propagation ||| nddata	count=1
module	contain ||| io fits	count=2
function	to a ||| to file	count=1
module	get the ||| io	count=1
function	directory is ||| is path	count=1
module	for the ||| io ascii	count=1
function	set the ||| set	count=5
module	vo [module_2] ||| [module_1] [module_2]	count=10
function	classmethod to convert ||| keyword	count=1
arg	[arg] dict ||| [arg]	count=3
function	to the [function_2] ||| [function_2] [function_1]	count=3
class	table doesn't contain any ||| table	count=1
function	key ||| key	count=1
class	the header with ||| header	count=1
function	that may contain a ||| normalize keyword	count=1
module	full ||| constants	count=1
function	to uppercase ||| normalize	count=1
module	[module_1] hdu from ||| [module_2] [module_1]	count=4
arg	mapping ||| arrays	count=2
function	the site ||| site	count=1
module	the header/data to ||| io	count=1
function	rows in this ||| replace rows	count=1
class	this values_ ||| values	count=1
arg	[arg] existing card ||| card [arg]	count=1
function	bayesian [function_2] ||| [function_2] [function_1]	count=4
class	hdu should ||| hdu	count=1
function_arg	utility [function_1] [arg_2] parameters ||| [function_1] [arg_2] assume_regular_frequency	count=2
arg	a key [arg_2] ||| [arg_1] [arg_2]	count=1
class	of this ||| base	count=1
module	on [module] ||| [module]	count=3
function	with ||| transform graph	count=1
function	representation of ||| representation	count=1
function	position in the cutout ||| cutout position	count=1
module	the same as the ||| io fits	count=1
function	[function_1] meta data ||| [function_2] [function_1]	count=2
function	[function] message ||| [function]	count=1
class	convert this coordinate ||| sky coord	count=2
function	line for [function_2] ||| [function_2] [function_1]	count=4
function	: [function] for the ||| [function]	count=1
class	use ||| element	count=1
function	is a string ||| is string	count=3
arg	enter your [arg] as ||| [arg]	count=1
function	is called at the ||| array	count=1
function	file-like object ||| fileobj	count=2
function	size of ||| size	count=2
module	them in the ||| io	count=1
function	[function_1] besselian ||| [function_2] [function_1]	count=2
module	the coordinate ||| coordinates	count=3
arg	matches pattern ||| pattern	count=1
class	power [class_2] ||| [class_1] [class_2]	count=2
function	names ||| names	count=5
function	[function_1] table writer ||| [function_1] [function_2]	count=1
function	[function] given ||| update [function]	count=1
function	site [function_2] ||| [function_2] [function_1]	count=4
function	or ||| get file	count=1
module	energy ||| cosmology	count=2
function	a version of get ||| get	count=1
function	numpy recformats using ||| recformats	count=1
arg	mark a ||| name since message alternative	count=1
function	[function_1] sentence ||| [function_1] [function_2]	count=3
arg	frame's data ||| new_representation in_frame_units	count=1
arg	the given urls blocks ||| urls	count=1
module	the list ||| io	count=1
function	also generally the same ||| abbrev	count=1
arg	format and scale try ||| format scale	count=1
function	the same physical type ||| same physical type	count=1
arg	of integer offsets ||| offsets	count=1
module	returns the number of ||| utils xml	count=1
arg	other is an ||| other	count=1
function	is a votable file ||| is votable	count=1
arg	supplied key as ||| key	count=1
module	the [module] of ||| [module]	count=1
function	[function] window for ||| map [function]	count=1
function	cache ||| download cache	count=1
class	it is evaluated with ||| base	count=1
function	ascii table ||| ascii	count=2
function	a float or ||| float or	count=2
class	tuple with the ||| base	count=1
function_arg	[function_1] table object ||| [function_1] hdf5 [arg_2]	count=1
function	[function_1] stokes ||| [function_1] [function_2]	count=1
function	[function_1] proportion ||| [function_2] [function_1]	count=1
function	the calendar date and ||| kwargs	count=1
function	propagation ||| uncertainty	count=1
function	is a valid mime ||| check mime	count=1
function	on an object into ||| object	count=1
arg	the given name ||| name	count=1
function	diff ||| report diff keyword	count=1
class	[class_1] header ||| [class_2] [class_1]	count=6
arg	for fast [arg] ||| t y [arg]	count=1
class	return a unit ||| unit base	count=1
module	this cosmology ||| cosmology	count=1
class	w ||| w0wa	count=1
function_arg	write [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	poisson [arg_2] ||| [arg_2] [function_1]	count=3
class	reset logger to ||| astropy logger	count=1
function_arg	that index [arg_2] ||| [function_1] [arg_2]	count=2
function	bayesian information ||| bayesian info	count=4
function	class of origin ||| cls	count=1
function_arg	[function_1] begin to ||| [arg_2] [function_1]	count=1
function	field-specifier to uppercase ||| normalize keyword	count=1
function	differential [function_2] ||| [function_1] [function_2]	count=2
function	an ~astropy coordinates itrs ||| itrs	count=1
function	a wrapper of scipy ||| scipy	count=1
function	configspec on subsections ||| configspec	count=1
module	the wrapped function is ||| io	count=1
arg	fitshdu fromhdulist(), ||| filename	count=1
arg	[arg_1] scale try ||| time get time fmt [arg_1] [arg_2]	count=3
function_arg	to map [arg_2] ||| [function_1] [arg_2]	count=1
function	box we [function_2] ||| [function_2] bounding [function_1]	count=1
arg	list of integer offsets ||| offsets	count=1
function	return difference in ||| time difference	count=1
module_class	[module_1] info ||| [module_1] [class_2]	count=1
function	poisson ||| poisson	count=1
module	and the ||| io fits hdu	count=1
function	matches ||| match to	count=1
arg	val1 and [arg_2] ||| [arg_1] [arg_2]	count=8
function	config [function_2] ||| [function_2] [function_1]	count=4
function	size in ||| size	count=4
function	[function_1] the physical ||| [function_2] [function_1]	count=3
function	contain a ||| normalize	count=1
arg	name ||| name	count=8
function	func once for single ||| timed pfunc	count=1
function	[function_1] time ||| [function_1] [function_2]	count=7
function	from a given ||| from	count=1
function	[function_1] table object ||| [function_1] [function_2]	count=1
class	this object's ||| nddata	count=1
class	representation [class_1] [class_2] is used by ||| [class_1] [class_2]	count=1
module	file against the appropriate ||| io votable	count=1
arg	keyword value that may ||| cls keyword	count=1
class	of dark energy equation ||| wpwa cdm	count=1
arg	of _boundingbox with ||| func sig	count=1
function_arg	[function_1] table data ||| [arg_2] [function_1]	count=1
function	and ||| format doc	count=1
module	use ||| builtin_frames	count=1
function	at the center of ||| center	count=2
arg	the other object ||| other	count=1
function	distance modulus ||| distmod	count=1
function_arg	[function_1] _boundingbox with ||| [function_1] [arg_2]	count=9
function	this frame was ||| frame	count=1
arg	model ||| model	count=10
class	the sorted [class_2] ||| [class_1] [class_2]	count=2
class	calculate [class] datasum ||| [class]	count=1
function	reload a configuration ||| reload	count=1
function	matrix [function_2] ||| [function_1] [function_2]	count=3
arg	this is the same ||| tag	count=1
arg	urls blocks ||| urls cache	count=1
module	behavior of ||| time	count=1
function	code ||| code	count=1
arg	in bins of ||| success bins range	count=2
arg	a ||| a bins range	count=1
function	integrand [function_2] ||| [function_2] [function_1]	count=6
function	exclude ||| exclude	count=1
function_arg	view [arg_2] ||| [arg_2] [function_1]	count=3
class	[class_1] bar ||| [class_2] [class_1]	count=7
function	user-provided name ||| name	count=1
function	the file is ||| get	count=1
module_class	[module_1] data part ||| [class_2] [module_1]	count=1
class	tuple ||| base	count=1
module	that also ||| extern configobj	count=1
function	[function_1] [function_2] ||| [function_1] bool [function_2]	count=2
arg	if index ||| index name	count=1
module	of this ||| coordinates	count=1
class	also affects ||| section	count=1
function	table object to ||| table	count=1
module	creates a ||| io fits	count=1
function	to ||| keyword	count=2
function	[function] upon ||| [function]	count=1
function	a specific ||| make skyoffset cls	count=1
module_class	[module_1] hdu data ||| [module_1] [class_2]	count=2
class	by extension ||| extension	count=1
function_arg	[function_1] between ||| [function_1] [arg_2]	count=2
module	deviation using [module] median ||| [module]	count=1
function	type [function_2] ||| [function_2] [function_1]	count=2
class	dark energy equation ||| w0wa cdm	count=2
function_arg	[function_1] [arg_2] ||| [function_1] keyword [arg_2]	count=2
function	new class that ||| make skyoffset cls	count=1
function	validation ||| do validation	count=2
function	from the relevant ||| reload	count=1
class	a ||| w0wa	count=1
module	in the xml ||| io votable	count=1
function_arg	[function_1] overlapping part ||| [function_1] [arg_2]	count=2
arg	given a unit ||| unit	count=1
module	compute the ||| stats	count=6
function_arg	draw the [arg_2] ||| [arg_2] [function_1]	count=1
function	by a ||| by	count=1
function	all [function] elements ||| iter [function]	count=1
module	of ||| configobj	count=1
function	the extent ||| extent	count=1
function	contents of a ||| get file contents	count=1
class	for ipac table see ||| ipac	count=1
arg	position in ||| position	count=1
function	and adjust physical unit ||| and adjust physical unit	count=1
arg	data for the out ||| out tables col_name_map idx_left	count=1
class	progress bar ||| progress bar	count=6
module	of the current ||| io fits	count=1
function	python ||| python	count=1
module	fits format spec ||| io fits	count=1
function	the "representation attributes" ||| get representation attrs	count=1
module	normal ||| fits	count=1
module	directly ||| hdu	count=1
function	the contents ||| file contents	count=1
function	type : [function] for the ||| [function]	count=1
arg	an indexed ||| prev_col new_col	count=1
class	[class_1] bar ||| utils [class_1] [class_2]	count=2
module	for the futures in ||| compat futures	count=1
module	equation of state at ||| cosmology	count=1
function	meta data for the ||| meta	count=1
module	saving [module] since they ||| [module]	count=1
class	for each [class_2] ||| [class_1] [class_2]	count=2
class	existing [class] object passing ||| [class]	count=1
arg	x ||| x	count=4
function	of the values ||| values	count=1
module	vo services which ||| vo	count=1
function	have [function_2] ||| [function_2] [function_1]	count=1
function	of origin ||| make skyoffset cls	count=1
module	like fitshdu fromhdulist(), but ||| io fits	count=1
arg	left input/output labels with ||| left	count=1
function_arg	"best" match [arg_2] ||| [function_1] [arg_2]	count=1
function	signal ||| signal	count=1
module	the columns and convert ||| io	count=1
function	get the comment attribute ||| comment	count=1
arg	shape and ||| shape	count=1
function	differential ||| differential	count=1
class	internal use ||| element	count=1
module	of ||| time	count=1
function	a length ||| convert to and validate length	count=1
class	[class_1] each data ||| [class_1] [class_2]	count=1
function_arg	diff between [arg_2] ||| [function_1] attr [arg_2]	count=2
function	center of ||| center 1d	count=1
arg	the function to account ||| weights x	count=1
module	from a file on ||| fits	count=1
arg	[arg_1] col_name_map ||| descrs [arg_1] [arg_2]	count=2
class	of ||| nddata array	count=1
function	classmethod to convert a ||| normalize	count=1
module	appear in the ||| io	count=2
arg	file on ||| filename	count=1
class	exponential cutoff ||| exponential cutoff	count=3
arg	value calculated for ||| blocking	count=1
function	positive [function_2] ||| [function_2] [function_1]	count=3
function_arg	a schema [arg_2] ||| [function_1] [arg_2]	count=1
module	if necessary ||| io fits	count=1
function	for a ||| of	count=1
class	info_ ||| info	count=2
arg	option for outputting ||| names funcs	count=1
function	regions [function] ||| footprint to [function]	count=3
class	the coefficients ||| legendre2d	count=1
function	ut1 - [function] this getter ||| get delta ut1 [function]	count=1
module	on ||| io fits hdu	count=2
module	the fitsinfo ||| io fits scripts	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=225
function	check that ||| array	count=1
function	[function_1] matches of ||| [function_2] coordinates [function_1]	count=1
arg	[arg_1] lat ||| [arg_1] [arg_2]	count=4
module	match the ||| io	count=1
function	any mixin [function] ||| has mixin [function]	count=1
arg	an array [arg_2] ||| [arg_2] [arg_1]	count=1
function	iterates over ||| iter	count=1
module	the meaning of the ||| io votable	count=1
function_arg	[function_1] [arg_2] ||| [function_1] hdf5 [arg_2]	count=4
class	of the dark energy ||| w cdm	count=1
arg	combine [arg] ||| [arg]	count=3
class	the cutout array ||| cutout2d	count=1
function	single hdu from ||| hdu	count=1
function	to an integer ||| int	count=1
function	origin ||| origin	count=1
function	with the same ||| with same	count=3
class	future ||| future	count=2
function	data files in a ||| pkg data	count=2
class	of the coordinate ||| coordinate frame	count=1
module	to match the input ||| io fits	count=1
arg	file ||| file	count=3
class	the in-order names ||| base representation	count=1
class	a column ||| column	count=3
function	physical unit ||| physical unit	count=2
function	the physical type ||| physical type	count=1
function	that may ||| keyword	count=1
arg	of val1 [arg_2] ||| [arg_1] [arg_2]	count=3
function	list of ||| list	count=5
function	reference to ||| getitem	count=1
function	of the ||| format	count=1
function	the center of the ||| center 2d	count=1
function	their bounding box we ||| bounding box	count=1
arg	strlen and no word ||| input strlen	count=1
module	version of ||| configobj	count=1
function	from a given astropy ||| from	count=1
arg	replaces the docstring of ||| docstring	count=1
function_arg	[function_1] val1 and ||| [arg_2] [function_1]	count=1
function	[function_1] writer ||| [function_1] [function_2]	count=1
arg	a version of ||| a b	count=1
function_arg	a join [arg_2] ||| table [function_1] [arg_2]	count=5
class	time object in ||| time astropy time	count=1
function_arg	and convert/reshape to an [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
arg	before [arg_2] ||| header relativeinsert card [arg_1] [arg_2]	count=2
function	class that is ||| make	count=1
function	create ||| skyoffset cls	count=1
function	add_catalog but the ||| by	count=1
class	listeners list ||| notifier mixin	count=1
module	the corresponding ||| io	count=1
arg	table table ||| votable table	count=1
class	class ||| base	count=1
module_class	[module_1] _basediff class ||| [module_1] [class_2]	count=2
class	of the frame ||| base frame	count=2
function	generator that yields ||| str	count=1
function	string for use ||| make transform graph	count=1
function	parse the xml content ||| parse	count=1
class	cartesianrepresentation with ||| cartesian representation frame	count=1
function_arg	[function_1] given namespace ||| [arg_2] [function_1]	count=1
function	a writable ||| convert to writable	count=1
function	and b columns ||| a b columns	count=1
function	[function_1] class corresponding ||| [function_2] [function_1]	count=2
module	[module_1] of the ||| [module_2] [module_1]	count=4
arg	and exclude_names [arg_2] ||| [arg_2] [arg_1]	count=1
arg	urls ||| urls cache show_progress	count=1
arg	offsets with ||| offsets	count=1
function_arg	[function_1] data_format ||| [function_1] [arg_2]	count=2
function	appropriate votable schema ||| schema	count=1
class	to expected ||| frame	count=1
class	propagation ||| nduncertainty	count=1
class	that ||| function	count=1
module	against the ||| io votable	count=1
class	quantity with ||| quantity frame	count=1
function	besselian epoch to ||| besselian	count=1
module	index return the ||| io fits	count=1
function_arg	parallel [arg_2] ||| [arg_2] [function_1]	count=1
function	for propagation ||| uncertainty	count=1
class	sliced ||| sliced index	count=1
function	generator that ||| str vals	count=1
function	notifyall ||| notify all	count=1
module	to convert a ||| io	count=1
function_arg	[function_1] model ||| [function_1] linear 1d [arg_2]	count=1
arg	size used for ||| size	count=1
function_arg	[function_1] settings ||| [arg_2] [function_1]	count=4
function	html content ||| html	count=1
function	retrieves the contents ||| get file contents	count=1
module	depending on the pedantic ||| io	count=1
function	id ||| check id	count=1
function_arg	write method [arg_2] ||| [arg_2] [function_1]	count=2
arg	frequencies parameters ||| normalization method assume_regular_frequency	count=1
function_arg	validate the value ||| validate cls value	count=2
module	associated with [module] keyword stored ||| [module]	count=1
class	of the group ||| groups	count=1
arg	tables vertically [arg] ||| arrays [arg]	count=1
class	dark energy ||| lambda cdm	count=1
module	the simple or ||| io	count=1
module	the elements of the ||| io fits	count=1
function	matches of ||| match	count=3
function	[function_1] list ||| [function_1] bool [function_2]	count=1
function	[function_1] an arcminute ||| [function_2] [function_1]	count=12
function	is a ||| check	count=1
module	generates a string ||| coordinates builtin_frames	count=1
class	[class_1] [class_2] is used by ||| [class_1] [class_2]	count=1
function	for dark matter ||| odm	count=1
class	initializes a ||| process pool	count=1
module	list [module_2] ||| [module_2] [module_1]	count=1
module	the input ||| io	count=1
function	set of ||| set	count=1
function	setting the configspec ||| set configspec	count=1
function	[function_1] field and ||| [function_2] [function_1]	count=4
module	filename argument is an ||| utils	count=1
function_arg	[function_1] for table ||| [function_1] by [arg_2]	count=1
arg	creates a fitshdu from ||| filename compress	count=1
function_arg	element this is ||| element tag	count=1
function	[function_1] unicode ||| [function_1] [function_2]	count=3
module_class	[module_1] [class_2] not defined ||| [module_1] [class_2] extra	count=1
arg	interval given ||| n interval	count=1
arg	new fitshdu from a ||| compress	count=1
function	set of catalog coordinates ||| coordinates	count=2
function_arg	to a [arg_2] ||| [function_1] [arg_2]	count=2
class	return ||| time	count=1
function_arg	source [arg_2] ||| [function_1] [arg_2]	count=12
function_arg	from [arg_2] ||| [function_1] key slice i [arg_2]	count=3
arg	specific mtype to a ||| mtype	count=1
function_arg	[function_1] floats ||| [function_1] value [arg_2]	count=3
class	raw table column ||| rec	count=1
module	called when the ||| utils	count=1
function	returns ||| get	count=3
module	in the ascii format ||| io fits hdu	count=1
function	deprecated this ||| deprecated	count=1
function	representation ||| repr	count=1
function	may contain a field-specifier ||| keyword	count=1
function	write a table object ||| write table	count=1
module	true if the given ||| utils	count=1
module	class that is the ||| coordinates	count=1
function	noise ratio for ||| noise	count=1
arg	frame to ||| frame	count=1
class	an object of this ||| earth	count=1
class	skycoord contains ||| coord	count=1
arg	world to pixel ||| world	count=1
function	only inside a ||| temp	count=1
function	is [function_2] ||| six meta path importer [function_1] [function_2] fullname	count=1
module	index return the ||| io	count=1
function	y position in ||| position	count=1
function	temporarily enable ||| enable	count=1
function	python [function_2] ||| [function_2] [function_1]	count=1
function	barycentric position and velocity ||| get body barycentric posvel	count=1
function	any extension hdu ||| header	count=1
function	arrays of ||| arrays	count=1
function	header object with ||| to header	count=2
module	calculates and returns the ||| io fits	count=1
module	the count ||| io fits	count=1
arg	left [arg_2] ||| [arg_2] [arg_1]	count=2
module_class	describing the [class_2] ||| [module_1] table [class_2]	count=1
function	[function_1] polygon ||| [function_1] [function_2]	count=1
module	is ||| vo samp	count=1
function_arg	separation [arg_2] ||| [function_1] [arg_2]	count=4
function	instance from ||| from table	count=1
function	class for a ||| of site	count=1
arg	format and [arg_2] ||| [arg_1] [arg_2]	count=4
function	[function_1] deprecated ||| [function_2] [function_1]	count=6
function	have [function_2] ||| [function_1] [function_2]	count=1
function	reading ||| get scaled	count=1
function	return the result ||| result	count=1
module	directly either a standard ||| io fits hdu	count=1
arg	[arg_1] of x ||| [arg_2] [arg_1]	count=1
function	filename or file-like ||| file	count=1
class	file is currently in ||| xmlwriter	count=1
module	deal with ||| units function	count=1
function	the precession [function_2] ||| [function_2] [function_1]	count=5
arg	current instance ||| copy_data	count=1
function_arg	in binary mode ||| binary f	count=1
function	widths of each field ||| field metrics	count=1
function	the table header ||| header	count=1
function	writable file-like ||| to writable	count=1
arg	insert an [arg] ||| index [arg]	count=2
function	and latitude [function] from ||| get [function]	count=1
module	class that is ||| coordinates	count=1
function	reads ||| kw	count=1
arg	unit in a ||| unit	count=1
function	[function_1] access url ||| [function_1] [function_2]	count=2
function	[function] frame ||| transform [function]	count=1
function	running or [function_2] ||| [function_2] [function_1]	count=1
module	the locations of ||| io fits	count=1
function	minor ||| minor	count=1
module	futures in ||| futures	count=1
arg	include_names and [arg_2] ||| names [arg_1] [arg_2]	count=3
function_arg	information criterion [arg_2] ||| [function_1] log_likelihood [arg_2]	count=4
function	[function_1] or none ||| [function_2] [function_1]	count=4
function	of ||| format doc	count=1
module	data ||| table	count=1
function	indentation ||| indentation	count=1
module	new ||| builtin_frames	count=1
function	to format the unit ||| iter unit	count=1
function_arg	bind a [arg_2] ||| [function_1] call [arg_2]	count=1
module	base chain return the ||| io fits	count=1
function	axis label ||| axislabel	count=1
function	main ||| main	count=1
module	in the ascii ||| io fits	count=2
module	clears comments and ||| extern	count=1
class	on-sky ||| sky	count=1
module	the converter function ||| io	count=1
function	one in which ||| in true coordinates	count=1
arg	the package ||| package	count=2
module	pix) and angular units ||| units	count=1
arg	arguments and their respective ||| model fitter power min_datapoints	count=1
function	the total intensity from ||| intensity	count=1
module	fetches the specified value ||| extern configobj	count=1
module	field-specifier to uppercase ||| fits	count=1
class	hdus [class_2] ||| [class_2] [class_1]	count=3
arg	fitshdu fromhdulist(), but creates ||| filename	count=1
arg	begin [arg_2] ||| [arg_1] [arg_2]	count=1
function	format that can represent ||| format	count=1
module	dict mapping parameter names ||| modeling	count=3
class	a functionquantity ||| quantity	count=1
arg	specified keys ||| keys	count=3
class	similar to csv writer ||| csv writer	count=1
function	if not a length ||| convert to and validate length	count=1
module_class	[module_1] [class_2] not defined ||| [module_1] votable [class_2] extra	count=1
arg	namespace this ||| namespace	count=1
arg	on [arg] ||| left right [arg]	count=1
module	is ||| extern configobj	count=4
arg	along rows a join_type ||| join_type	count=1
function	this class for a ||| of site	count=1
function	average on an oversampled ||| oversample 1d	count=1
function	of the origin ||| origin	count=1
function_arg	string returns the minimum [function_1] [arg_2] ||| io fits [function_1] [arg_2]	count=3
function	the values of all ||| values	count=1
module	mapping parameter names to ||| modeling	count=3
function	one besselian epoch to ||| besselian	count=1
class	value that ||| card	count=1
module	for use ||| coordinates	count=1
arg	[arg_1] exclude_names ||| [arg_2] [arg_1]	count=2
function	diff between ||| diff	count=1
function_arg	discretize [arg_2] ||| [function_1] oversample 2d [arg_2]	count=4
function	remove ||| remove	count=3
module	and ||| configobj	count=1
function	object and ||| format	count=1
arg	fitshdu fromhdulist(), but creates ||| cls filename	count=1
arg	uncertainties are compatible for ||| other_uncert	count=1
function	of coordinate [function_2] ||| [function_2] [function_1]	count=1
function	midvariance ||| midvariance	count=1
function_arg	parameters from [arg_2] ||| [function_1] model [arg_2]	count=1
arg	val2 [arg_2] ||| [arg_2] [arg_1]	count=6
function	the name ||| name	count=2
module	an ||| io fits	count=2
arg	check ||| obj	count=1
arg	the scale ||| other	count=1
arg	given model ||| cls model	count=1
arg	hdu ||| hdu	count=3
module	with ||| fits hdu	count=1
arg	given beautifulsoup tag is ||| soup	count=1
module	to [module_1] [module_2] ||| [module_1] [module_2]	count=8
arg	hold the data ||| nrows	count=1
function	footprint of ||| footprint	count=1
function_arg	[function_1] card's ||| [arg_2] [function_1]	count=1
arg	ufunc can deal with ||| context	count=1
class	this coordinate and ||| base coordinate	count=2
function	keyword [function_2] ||| [function_2] [function_1]	count=2
function	age of ||| age	count=1
arg	string ||| mode	count=1
module	is currently in ||| xml	count=1
module	a file ||| fits	count=1
function	signal to noise ratio ||| signal to noise	count=1
function	can deal with a ||| array	count=1
function	multiplication with ||| array wrap	count=1
module	the type ||| io ascii	count=1
function	path patch to include ||| patch path	count=1
module	[module] for example ||| [module]	count=3
arg	[arg_1] a table ||| [arg_2] names include_names [arg_1]	count=2
module_class	an [class_2] ||| [module_1] hdu [class_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] center 2d [arg_2]	count=4
function_arg	add [function_1] [arg_2] position ||| [function_1] [arg_2]	count=1
function	[function_1] from ||| [function_2] [function_1]	count=4
function	that may contain ||| normalize keyword	count=1
function	possible or to a ||| or	count=1
arg	that the value ||| value min	count=2
module	the columns ||| io	count=1
module	when saving [module] since they ||| [module]	count=1
class	a stretch ||| base stretch	count=1
function	negative derivative ||| wa	count=2
module	origin frame ||| coordinates builtin_frames	count=1
module	the ||| coordinates builtin_frames	count=4
arg	given sequence to complete ||| fs timeout return_when	count=1
function	convert ascii table ||| convert ascii	count=1
function	the footprint of ||| calc footprint	count=1
function	in radians to hours ||| radians to hours	count=1
module	hdu's ||| hdu	count=3
arg	interval in ||| range	count=1
function	to ||| normalize	count=2
function	on a matplotlib axes ||| on	count=1
function_arg	[function_1] [arg_2] ||| [function_1] receive message [arg_2]	count=11
function_arg	[function_1] new unit ||| [arg_2] [function_1]	count=1
module	with each ||| utils	count=1
arg	the format ||| format copy	count=1
arg	card [arg_2] ||| [arg_2] [arg_1]	count=1
function	division ||| idiv	count=1
function	private key used for ||| get private key	count=1
module	for a specific ||| coordinates builtin_frames	count=1
function	delete bscale/bzero ||| scale	count=1
arg	x [arg_2] ||| [arg_1] [arg_2]	count=6
class	image data by ||| image base hdu	count=1
class	from ||| column format	count=1
module	either the simple ||| io fits	count=1
function	insert a new index ||| add index	count=1
function	return ||| of	count=1
function	kraft burrows [function_2] ||| [function_2] [function_1]	count=4
function	shape ||| shape	count=1
function	to ||| array to	count=1
class	deal with ||| quantity	count=1
arg	to end ||| end	count=1
function	dict ||| dict	count=1
module_class	[module_1] signature from ||| [module_1] [class_2]	count=1
function	[function_1] [function_2] distance ||| [function_1] [function_2] distance	count=1
class	this [class_2] ||| table [class_1] [class_2]	count=1
function	_lookup_by_attr_factory, but looks in ||| lookup by	count=1
function	construct ||| construct	count=1
module	of each of ||| votable	count=1
arg	known observatory/site by name ||| cls site_name	count=1
function	radians ||| radians	count=4
module	fits file [module_2] ||| [module_2] [module_1]	count=1
function	the ||| skyoffset	count=1
module	the ||| xml	count=2
arg	if index ||| index name rename_duplicate	count=1
function	poisson parameter confidence ||| poisson	count=1
function	is currently ||| get	count=1
arg	given frequency ||| dy frequency	count=1
module	for a specific class ||| coordinates	count=1
module	type of [module_2] ||| [module_2] [module_1]	count=1
module	the wrapped ||| io	count=1
function_arg	[function_1] [arg_2] ||| [function_1] mode [arg_2]	count=3
function	[function_1] match ||| [function_1] [function_2]	count=1
function	check that [function_2] ||| [function_1] interpolate [function_2]	count=2
module	validation of [module] ||| [module]	count=2
function	field-specifier to uppercase ||| normalize	count=1
function_arg	[function_1] current value ||| [function_1] [arg_2]	count=1
class	to file ||| file	count=1
module_class	if the [class_2] ||| [module_1] [class_2]	count=2
function	factory ||| factory	count=1
arg	function to ||| weights x	count=1
function	set whether ticks are ||| set ticks	count=1
arg	a kernel ||| kernel boundary	count=1
function	arg ||| arg	count=1
arg	calls binding [arg_2] ||| [arg_2] [arg_1]	count=2
function	column [function_2] ||| [function_2] [function_1]	count=6
function_arg	[function_1] [arg_2] ||| [function_1] hours h [arg_2]	count=8
class	of dark energy ||| w0wa	count=1
arg	new card [arg] existing card ||| card [arg]	count=1
function	[function_1] [function_2] ||| [function_2] time [function_1]	count=1
module	valid xml ||| utils xml	count=1
function	not a length ||| and validate length	count=1
function	is the ||| is	count=1
function	data object [function_2] ||| [function_1] [function_2]	count=1
function	checks ||| convert	count=1
function	the physical [function_2] ||| [function_2] [function_1]	count=2
function	file or directory is ||| is path	count=1
function	this frame was created ||| frame attr	count=1
function_arg	writer [arg_2] ||| [arg_2] [function_1]	count=1
module	of origin ||| coordinates	count=1
function	nddata instance with its ||| support nddata	count=1
module	the count of checksum ||| io	count=1
arg	than strlen and ||| input strlen	count=2
function_arg	[function_1] printer ||| [arg_2] [function_1]	count=2
module	hdu [module_2] ||| [module_1] [module_2]	count=3
function	kraft ||| kraft	count=2
arg	may ||| cls	count=1
function	get the text ||| get	count=1
function	the apparent position of ||| apparent body position	count=1
function	exclude any ||| exclude	count=1
function	the [function] of the ||| [function]	count=2
function	[function_1] minor ticks ||| [function_1] [function_2]	count=1
module	the simple or xtension ||| io fits	count=1
class	fitshdu ||| fits hdu	count=2
function	minute second [function_2] ||| [function_1] [function_2]	count=6
module	creates ||| fits	count=1
function_arg	bind a [arg_2] ||| [arg_2] [function_1]	count=7
function	the scale ||| scale	count=1
function_arg	[function_1] model ||| [function_1] center 2d [arg_2]	count=1
function	on kraft ||| mpmath kraft	count=1
module	delete an hdu ||| fits hdu	count=2
function_arg	meta data [arg_2] ||| [arg_2] [function_1]	count=1
function	constant [function] ||| [function]	count=3
function	object of this class ||| of site	count=1
function_arg	[function_1] that value ||| io fits [function_1] [arg_2]	count=2
arg	the given beautifulsoup tag ||| soup	count=1
function	element to ||| element	count=1
arg	oneself possibly with ||| physical_unit	count=1
module	of ||| coordinates	count=3
class	from ||| fits	count=1
function	class for this ||| for	count=1
class	of the column ||| column	count=1
function_arg	model at [arg_2] ||| [arg_2] [function_1]	count=1
function	with the same [function_1] [function_2] ||| with [function_1] [function_2]	count=4
function	probably contains [function_2] ||| [function_1] [function_2]	count=4
class	either model in the ||| model meta	count=1
class	this [class] has ||| base coordinate [class]	count=1
class	return a unit ||| unit	count=1
function	string for use with ||| transform graph	count=1
function	system wcs ||| wcs	count=1
function	generates a string ||| transform graph	count=1
function	minor ticks ||| minor ticks	count=2
arg	but ||| cls	count=1
arg	determine if class2 ||| class2	count=1
arg	may contain a ||| cls	count=1
module	the data by ||| visualization	count=1
module	[module_1] the domain ||| [module_1] [module_2]	count=2
module	all the scaling ||| io fits	count=1
function	a ||| init	count=1
function	searches ||| search around	count=1
function_arg	returns the minimum fits [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
module	specified value ||| configobj	count=1
class	header ||| daophot header	count=1
function	create a new class ||| make skyoffset	count=1
function	field-specifier ||| normalize keyword	count=2
module_class	for the [class_2] ||| [module_1] [class_2]	count=2
class	to the graph ||| graph	count=1
function	decorated object and then ||| doc	count=1
function	values of all ||| values	count=1
arg	resulting table ||| table	count=1
function	[function_1] the specified ||| [function_2] [function_1]	count=1
function	but looks ||| by	count=1
arg	[arg_1] and image_b ||| [arg_1] [arg_2]	count=5
class	in-order names ||| base representation	count=1
function	vo ||| vo	count=1
module_class	[module_1] split line ||| [module_1] ascii [class_2] call lines	count=1
module_class	[module_1] header ||| [module_1] fits [class_2]	count=5
function	add subtract ||| kernel arithmetics	count=1
function	[function_1] width ||| [function_2] [function_1]	count=4
module	dtype object or ||| fits	count=1
function	that is ||| make	count=1
function	unit format ||| unit format	count=2
module	with a ||| units function	count=1
arg	to correctly represent the ||| item col_len	count=1
module	type of ||| votable	count=1
function	binomial proportion ||| binom proportion	count=2
arg	to output a ||| table output	count=1
arg	an ||| iterable	count=1
module	generates a string for ||| builtin_frames	count=1
function	same type as ||| equivalent units	count=1
function	:func add_catalog but the ||| by url	count=1
function	file it can ||| file	count=1
function	whether two [function] more numpy ||| [function]	count=1
function	instance from [function_2] ||| [function_2] [function_1]	count=1
class	data should ||| comp image hdu	count=1
arg	binding table [arg_2] ||| [arg_2] [arg_1]	count=6
function	object and then formats ||| format	count=1
arg	for rotation by some [arg_1] [arg_2] ||| coordinates rotation matrix [arg_1] axis [arg_2]	count=2
class	an object of ||| location	count=1
function	to convert a ||| keyword	count=1
function	of the airmass ||| secz	count=1
function	ndarray to a ||| array to file	count=1
module	return an object ||| coordinates	count=1
class	for a ||| earth	count=1
function_arg	[function_1] flag for ||| [function_1] [arg_2]	count=9
module	a string for ||| coordinates	count=1
class	that also affects scalars/sections ||| section	count=1
arg	[arg_1] a function ||| [arg_1] [arg_2]	count=3
class	read the table ||| table	count=1
module	constructs ||| compat	count=1
function_arg	[function_1] [arg_2] ||| [function_1] frame [arg_2]	count=5
module	coordinates that this ||| coordinates	count=1
class	names of ||| base	count=1
function	the total intensity ||| intensity	count=1
function	a copy of ||| copy	count=2
function	to setxmlrpccallback ||| set xmlrpc callback	count=1
function	registered units ||| get units	count=1
function	hour minute second ||| hms	count=1
function_arg	to a [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	a file-like object ||| fileobj	count=2
module	account the ||| io	count=1
class	location for ||| earth location	count=1
function_arg	[function_1] angle ||| [function_1] float [arg_2]	count=1
function	mime content ||| check mime content	count=1
function	deal with a functionquantity ||| array	count=1
class	of state w r ||| cdm	count=1
function	kpc corresponding ||| kpc comoving per	count=1
function	no [function] ||| [function]	count=1
function	decorator for validating ||| decorator	count=1
module	limits ||| modeling	count=1
function	calculates the extent of ||| extent	count=1
function	strip cards specific to ||| strip	count=1
function_arg	interpolate ut1-utc [arg_2] ||| [arg_2] [function_1]	count=2
class	model in ||| model	count=1
function	same ||| equivalent	count=1
function	scale [function_2] ||| [function_2] [function_1]	count=1
module_class	from the [class_2] ||| [module_1] fits hdu [class_2]	count=1
arg	of this frame's data ||| new_representation in_frame_units	count=1
arg	write ||| write fileobj	count=1
class	[class] if this ||| [class]	count=3
arg	class2 ||| class2 format_classes	count=1
class	behavior of ||| time	count=1
function	from header names ||| cols from names	count=3
function_arg	[function_1] an ||| [function_1] dms [arg_2]	count=5
arg	coordinate transformation ||| transform	count=1
function	[function_1] stokes axis ||| [function_1] [function_2]	count=1
module	the normal writeto(), ||| io fits	count=1
function	optimal histogram bin ||| bin	count=1
class	of this object's data ||| nddata array	count=1
class	bounding ||| bounding	count=1
function	currently in ||| get	count=1
arg	raise vdtparamerror ||| values to_float	count=1
arg	[arg_1] by taking ||| [arg_2] [arg_1]	count=4
module	the default writing ||| io	count=1
function	searchsorted or use ||| searchsorted	count=1
class	equation ||| w0wa cdm	count=3
function	resources ||| resources	count=1
arg	or multiply two kernels ||| kernel value operation	count=1
function_arg	[function_1] specific mtype ||| [arg_2] [function_1]	count=3
module	[module_1] the data ||| [module_2] [module_1]	count=4
function_arg	column [arg_2] ||| [arg_2] [function_1]	count=4
arg	the ufunc ||| context	count=1
module	[module] given ||| [module]	count=3
function	of the type ||| type	count=1
module	of state ||| cosmology	count=2
function	noise ratio for ||| noise oir	count=1
function	the cutout array with ||| cutout	count=1
function	to an ||| model to	count=1
module	of strings ||| io ascii	count=2
module	a given format ||| format	count=1
function	cip ||| cip	count=1
arg	[arg_1] function ||| [arg_2] [arg_1]	count=2
function	have ||| has	count=1
function	to callandwait ||| call and wait	count=1
function	is ||| skyoffset	count=1
arg	a function or ||| function declare	count=2
class	spherical polar ||| spherical	count=3
module	a ||| io fits hdu	count=4
class	in ||| xmlwriter	count=1
function	[function_1] longitude ||| [function_2] [function_1]	count=1
function	the inverse of the ||| inverse	count=1
function	self return difference in ||| time difference	count=1
module	the current samp ||| vo samp	count=1
module_class	[module_1] [class_2] ||| [module_1] comp [class_2]	count=4
function	ping ||| ping	count=1
function	bind a specific ||| bind	count=4
class	hdu object ||| hdu	count=1
module	value ||| extern configobj	count=1
function	space to hold a ||| space	count=1
module_class	[module_1] [class_2] ||| [module_1] corrupted [class_2]	count=5
module	or data string the ||| io fits	count=1
function	mime [function_2] ||| [function_2] [function_1]	count=1
arg	calculates ||| undistort axes center	count=1
class	bar to ||| bar	count=3
module	can deal with a ||| units function	count=1
arg	join operator &: combine [arg_1] [arg_2] input/output ||| [arg_1] [arg_2]	count=8
function	retrieves a data file ||| data	count=1
arg	unitswarning about a ||| standard_name format_decomposed	count=1
function	uncertainty ||| uncertainty	count=3
class	should be opened with ||| base	count=1
arg	that ||| cls	count=1
function	numpy array to a ||| array to	count=1
arg	and no word is ||| input	count=1
class	the client wishes to ||| sampclient	count=1
arg	values in row_map ||| row_map	count=1
arg	fromhdulist(), ||| cls filename	count=1
function	[*required*] the [function] of ||| [function]	count=2
function	register [function_2] ||| [function_1] [function_2]	count=2
arg	fn iter ||| fn	count=1
module	rstrip ||| io fits	count=1
function	the value ||| value	count=1
function	apparent position of ||| get apparent body position	count=1
function	[function] all ||| frame [function]	count=3
function	copy of the ||| copy	count=2
function	minimum value ||| min	count=2
function	returns a list ||| get	count=1
function	slice of ||| slice	count=1
arg	given namespace this is ||| namespace	count=1
class	summary information [class_2] ||| [class_2] [class_1]	count=2
function	histogram bin ||| bin	count=1
function	comparison ||| comparison	count=1
class	[class_1] skycoord contains ||| [class_2] [class_1]	count=1
module	[module_1] hdus ||| [module_1] [module_2]	count=2
module	the ||| units function	count=2
function	kpc ||| kpc	count=3
function	an integer ||| int	count=1
function	exponent parts each as ||| exponent	count=1
class	default behavior of ||| time	count=1
function	unparsed ||| check if rvkc image	count=1
function	of integers ||| int	count=1
function	or raise an exception ||| or raise	count=1
function	[function_1] minor ||| [function_2] [function_1]	count=1
function_arg	subtract [arg_2] ||| [arg_2] [function_1]	count=1
arg	given the [arg_1] [arg_2] ||| time get time fmt [arg_1] [arg_2]	count=7
function	[function_1] of booleans ||| [function_2] [function_1]	count=4
module_class	[module_1] equivalent numpy ||| [module_1] [class_2]	count=2
arg	services ||| registry_url timeout	count=1
module	may contain a field-specifier ||| fits	count=1
arg	mjd and ||| mjd	count=1
class	header to file or ||| header	count=1
module	retrieves ||| utils	count=1
arg	keywords ||| header	count=1
function	"representation attributes" for ||| get representation attrs	count=1
arg	value where we ||| value	count=1
class	this coordinate ||| base coordinate	count=2
function	array to an ||| to	count=1
module	with [module] ||| [module]	count=5
class	for pickling purposes ||| base	count=1
class	exclude [class] when ||| [class]	count=1
arg	return data in table ||| table	count=1
arg	data from ||| data	count=1
arg	on the provided ||| sigma	count=1
function	and then copy ||| and copy	count=3
function	a data file ||| get pkg data	count=1
function	set of options ||| option	count=1
arg	an ||| cls	count=1
function	is the [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] another column ||| [function_2] [function_1]	count=3
arg	simplest possible composite unit ||| units max_depth include_prefix_units	count=1
module	if a [module] ||| [module]	count=3
class	fromhdulist(), but ||| fits hdu	count=1
module	axes in ||| visualization wcsaxes	count=2
function_arg	[function_1] the out ||| [arg_2] [function_1]	count=3
class	stretch ||| inverted hist eq stretch	count=1
function	exponent parts each ||| exponent	count=1
module	[module_1] the header ||| [module_2] [module_1]	count=1
function	sidereal [function_2] ||| [function_2] [function_1]	count=3
module_class	to [module_1] [class_2] ||| [module_1] [class_2]	count=6
function	from merging the ||| get	count=2
function	index or ||| index of	count=1
class	of state w ||| cdm	count=1
function	with the coordinate ||| transform graph	count=1
function	hidden ||| path hidden	count=2
arg	rows ||| rows	count=1
function	the unit format ||| unit format	count=2
module	width of the ||| utils	count=1
arg	the file-like [arg] can ||| [arg]	count=1
module	in [module] hdu ||| [module]	count=1
function	as a representation ||| represent as	count=1
class	image format ||| image	count=1
arg	cards to ||| cards	count=1
function	a filename or file-like ||| get	count=1
arg	given urls blocks ||| urls cache show_progress	count=1
module_class	[module_1] this values_ ||| [module_1] [class_2]	count=2
function	a file ||| file	count=1
function	[function_1] masks ||| [function_2] [function_1]	count=2
arg	the docstring ||| docstring	count=1
function_arg	the specified [arg_2] ||| transform [function_1] [arg_2]	count=1
module	back to [module] ||| [module]	count=3
function_arg	the specified [arg_2] ||| [function_1] [arg_2]	count=1
arg	a given size ||| path size	count=1
arg	given unit ||| unit	count=2
function	into one in ||| in true	count=1
function	object around a ||| around	count=1
module	delete an hdu from ||| fits hdu	count=1
module	by the ||| io fits hdu	count=1
function	calculate the apparent ||| get apparent	count=1
function_arg	table header [arg_2] ||| [arg_2] [function_1]	count=3
class	resource and nested ||| resource	count=1
class	resource and nested resources ||| resource	count=1
arg	k successes n trials ||| k n conf	count=1
arg	jd1 and jd2 this ||| parent	count=1
function_arg	input [arg_2] ||| [arg_2] [function_1]	count=4
arg	[arg_1] [arg_2] ||| [arg_2] value [arg_1]	count=1
function	[function_1] the same ||| [function_2] [function_1]	count=5
module	possibly on the bscale ||| io fits hdu	count=1
function	[function_1] source ||| core [function_1] [function_2]	count=2
function	one besselian epoch ||| besselian	count=1
function	[function_1] noise ||| [function_2] [function_1]	count=2
function	for a ||| make	count=1
module	all of the ||| io votable	count=2
class	spherical polar ||| physics spherical	count=1
function	"best" [function_2] ||| [function_1] [function_2]	count=2
module	information about [module] ||| [module]	count=2
function_arg	subclass of [arg_2] ||| [function_1] [arg_2]	count=3
function	is hidden ||| is path hidden	count=1
function	tuple that ||| from	count=1
arg	format ||| format	count=6
arg	determines ||| short_name constellation_list	count=1
function	currently connected to ||| connected	count=1
arg	image_g [arg_2] ||| [arg_2] [arg_1]	count=1
function	tuple defining the default ||| bounding box	count=3
arg	bins of a ||| success bins	count=1
class	in-order names of the ||| representation	count=1
function	file is ||| get	count=1
function	of this class ||| site	count=1
arg	matrices for rotation by [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
function	a string formatted as ||| degrees to string	count=1
arg	a field-specifier to ||| cls	count=1
function_arg	ut1-utc [arg_2] ||| [arg_2] [function_1]	count=2
function	but ||| fromfile	count=1
module	the associated fits ||| io fits hdu	count=3
function	field-specifier to ||| keyword	count=1
module	new ||| coordinates builtin_frames	count=2
class	row as ||| row	count=1
arg	name [arg_2] ||| [arg_2] [arg_1]	count=1
function	identifier that uniquely identifies ||| id	count=1
module	for [module] distance ||| [module]	count=1
function	of uncertainty ||| uncertainty	count=1
module	specification of physical units ||| units	count=1
function	the validator method ||| validator	count=1
function	[function_1] [function_2] ||| [function_1] proper [function_2]	count=3
function	two polar motion components ||| get polar motion	count=1
function_arg	returns the minimum fits [function_1] [arg_2] ||| io fits [function_1] [arg_2]	count=3
module	the outputter ||| io ascii	count=1
module	from the spec how ||| io	count=1
function	[function_1] dict ||| [function_2] [function_1]	count=1
module	spec do [module] opposite ||| [module]	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2] determine formats cls format	count=12
class	the current unit ||| unit base	count=1
arg	a join_type ||| join_type metadata_conflicts	count=1
module_class	of the [class_2] ||| [module_1] hdu [class_2]	count=1
function	with the coordinate ||| make transform graph	count=1
function	generator that returns ||| get str vals	count=2
module	an hdu from ||| fits hdu	count=4
module	the items ||| io	count=1
function	load observatory database from ||| sites	count=1
function	remove the ||| remove	count=1
function_arg	[function_1] in val1 ||| [arg_2] [function_1]	count=1
arg	file-like [arg] can ||| [arg]	count=1
function	a string formatted as ||| string	count=2
class	cartesianrepresentation with the ||| cartesian representation frame	count=1
function	a valid mime content ||| check mime content	count=1
arg	table data [arg_2] ||| [arg_2] [arg_1]	count=1
class	with the in-order names ||| base representation	count=1
arg	unit in a given ||| s unit	count=1
class	this class for a ||| earth	count=1
function_arg	main [arg_2] ||| [arg_2] [function_1]	count=3
class	the registry ||| unit registry	count=1
module_class	[module_1] progress ||| [module_1] [class_2]	count=2
function	differential comoving [function_2] ||| [function_1] [function_2]	count=1
class	when either model in ||| compound model meta	count=1
module_class	write the [class_2] ||| [module_1] [class_2]	count=2
function	a floating number ||| float	count=1
arg	value ||| cls	count=1
function	from a [function_2] ||| init [function_1] [function_2]	count=4
function	out ||| console	count=1
module_class	[module_1] [class_2] that are not defined ||| [module_1] [class_2]	count=2
function	[function] format ||| from [function]	count=1
function_arg	from [arg_2] ||| [function_1] frame [arg_2]	count=3
class	data ||| hdu	count=2
class	structure as [class] ||| err [class]	count=3
class	a cartesianrepresentation with ||| cartesian representation frame	count=1
function	arrays ||| arrays	count=1
function	sentence from ||| sentence	count=1
module	a specific ||| builtin_frames	count=1
arg	from a frequency ||| frequency	count=1
class	of the instance ||| representation	count=1
arg	left ||| left	count=2
function	number split ||| split	count=1
module	the file ||| io	count=1
module	minor axes in ||| visualization wcsaxes	count=2
function	transform [function] ||| [function] transform no	count=3
function	[function] values ||| [function]	count=1
function	provided args, ||| parse inputs	count=1
function	physical type of ||| get physical type	count=2
module	in the table that ||| io ascii	count=1
arg	by performing a ||| x_range	count=1
arg	lines ||| lines depth	count=1
class	run time in ||| run time	count=1
function	as running or ||| set running or	count=2
function	or [function_2] ||| [function_2] [function_1]	count=6
function	object of this ||| site	count=1
function	parameter for dark energy ||| ode	count=1
class	for each ||| base	count=1
function	a linear [function_2] ||| [function_2] [function_1]	count=1
class	a fast ||| fast	count=1
function	create a ||| create arrays	count=1
module	or file-like ||| utils	count=1
function	returning a positive index ||| positive index	count=1
arg	string ||| s	count=2
arg	north between ||| other	count=1
function	inverse ||| inverse	count=4
function	for use ||| transform	count=1
arg	[arg] must ||| [arg] join_type uniq_col_name	count=3
function	integer dimensions of ||| ndim	count=1
arg	default write_comments [arg] ||| [arg]	count=1
module	xml file against ||| xml	count=1
function	file in ||| get file	count=1
function	use with the ||| graph	count=1
function	list of registered units ||| get units	count=1
class	the location [class_2] ||| coordinates [class_2] [class_1]	count=1
function	the same type as ||| equivalent	count=1
module	objects for the ||| io votable	count=1
class	using a formatter ||| base	count=1
function	[function_1] stokes ||| [function_2] [function_1]	count=1
function	summary docs in generate_unit_summary ||| summary	count=1
class	vdtvaluetooshorterror('jed') ||| value too short	count=1
arg	lines for special continuation ||| lines	count=1
class	trapezoid [class_2] ||| [class_1] [class_2]	count=1
function	from one file/buffer ||| writedata direct	count=1
module	the column name ||| io ascii	count=1
function	~numpy ndarray to a ||| array to file like	count=1
function	but the ||| by	count=1
function	a power to a ||| validate power	count=1
arg	value of a specified ||| item value	count=1
class	for [class_2] ||| [class_1] [class_2]	count=8
arg	value where we are ||| value	count=1
function	append a new ||| append	count=1
module	cosmology ||| cosmology	count=1
class	[class_1] unit ||| [class_2] [class_1]	count=4
module	may contain a ||| io	count=1
function	catalog ||| catalog	count=2
class	each data ||| data	count=1
module	configobj instance and restore ||| configobj	count=1
arg	check that the ufunc ||| context	count=1
arg	kernel ||| kernel boundary	count=1
module	the values of existing ||| io	count=1
module	initializes a ||| utils	count=1
module	add ||| io ascii	count=1
module	copy the columns ||| io fits	count=1
function	from geodetic coordinates ||| from geodetic	count=2
class	a uri to ||| link	count=1
module	a file on ||| io fits	count=1
function	pixel ||| pixel scales	count=2
class	exclude [class] when saving ||| [class]	count=1
arg	the ufunc can deal ||| context	count=1
function	frame ||| frame	count=3
class	information ||| info	count=1
class	indices in the column ||| column	count=1
function	of a continuous variable ||| binned	count=1
function	a config ||| is unedited config	count=1
module	summary of the ||| io	count=1
function	origin ||| skyoffset cls	count=1
module	energy equation of state ||| cosmology	count=2
arg	check [arg_2] ||| [arg_2] [arg_1]	count=2
function	continuous variable ||| binned	count=1
function	of clear that ||| clear	count=1
class	converts [class_2] ||| [class_2] [class_1]	count=1
module	delete the ||| io fits	count=1
module	an xml file against ||| utils xml	count=1
class	parent dict ||| dict	count=1
arg	between this skycoord and ||| other	count=1
function_arg	contained in [arg_2] ||| [function_1] [arg_2]	count=4
module	can deal ||| units	count=1
function_arg	valid secondary [arg_2] ||| [arg_2] [function_1]	count=1
function	add a new ||| add	count=3
class	a format [class] by ||| [class]	count=1
function_arg	[function_1] valid converters ||| [arg_2] [function_1]	count=4
module	fromhdulist(), ||| fits	count=1
function	units with the same ||| get units with same	count=1
class	[class] datasum card ||| [class]	count=3
function	dec ||| apparent position	count=1
class	[class_1] graph ||| [class_1] [class_2]	count=1
function	of a filename ||| get	count=1
function	new class that ||| make skyoffset	count=1
function	add an ||| add	count=1
module	of the element ||| io votable	count=1
function	for a transformation ||| transform	count=1
arg	of iers_a ||| iers_a	count=1
function	registered units [function_2] ||| [function_2] [function_1]	count=6
module	specific class of origin ||| coordinates builtin_frames	count=1
function	or scalar coordinate ||| coord type	count=1
function_arg	to [arg_2] ||| [arg_2] [function_1]	count=7
arg	mtype [arg_2] ||| [arg_2] [arg_1]	count=1
function	directly in [function] ||| is [function]	count=1
class	a quantity with the ||| quantity	count=1
function_arg	class for [arg_2] ||| [arg_2] [function_1]	count=1
arg	object from ||| cls image	count=1
function	uniquely identifies the ||| id	count=1
arg	given axis ||| axis	count=2
module	deal with ||| function	count=1
class	a ||| quantity	count=1
function	tuple or a property ||| property	count=1
arg	fitshdu fromhdulist(), but ||| filename	count=1
function_arg	column definitions [arg_2] ||| [arg_2] [function_1]	count=1
function	sip ||| sip	count=1
class	time the partial function ||| predictor	count=1
class	raise vdtvaluetooshorterror('jed') ||| value too short	count=1
module	coordinates that this can ||| coordinates	count=1
arg	unitswarning about [arg_2] ||| [arg_2] [arg_1]	count=4
class	of the sorted ||| sorted	count=1
function	dec are ||| apparent position	count=1
function	property or method and ||| property	count=1
function	a new ||| add	count=1
function	to an array that ||| to	count=1
arg	mtype to [arg_2] ||| [arg_2] [arg_1]	count=1
class	tuple with the in-order ||| base	count=1
function	[function_1] geodetic ||| [function_1] [function_2]	count=1
function	possible wildcarded subtypes of ||| mtype subtypes	count=1
function_arg	diff between [arg_2] ||| [arg_2] [function_1]	count=2
arg	[arg] must ||| [arg] join_type	count=3
function	replaces the ||| format	count=1
module	overrides the default ||| time	count=1
function	return a simple ||| simple	count=1
module	translated from fits ||| fits hdu	count=1
class	of state ||| w0wa cdm	count=2
function	and dec are defined ||| apparent position	count=1
function	wrapper for multiplication ||| array wrap	count=1
class	can ||| function	count=1
function	function relative to the ||| relative	count=1
arg	or a file-like object ||| fileobj endcard overwrite	count=1
function	a transform [function] ||| [function] transform no	count=3
module	the futures in ||| futures	count=1
function	of source code ||| code	count=1
class	return ||| location	count=1
function	filename or file-like ||| get	count=1
function	ccd ||| ccd	count=1
function	a numpy array to ||| array to	count=1
function_arg	a minimum [arg_2] ||| [function_1] [arg_2]	count=1
module	the wrapped function ||| io fits	count=1
function	of origin ||| skyoffset cls	count=1
arg	possible formats ||| timestr subfmts	count=1
arg	fitshdu from a ||| cls filename compress	count=1
function	set polar motion ||| pm	count=1
function	as text to a ||| totextfile	count=1
class	vdtvaluetoolongerror('jedie') ||| vdt value too long	count=1
function	[function_1] pixel ||| [function_2] [function_1]	count=1
arg	val val2 [arg_2] ||| [arg_2] [arg_1]	count=6
class	time in the ||| time	count=1
class	[class_1] bar via ||| [class_1] [class_2]	count=1
class	uppercase ||| card	count=1
function	but with ||| with	count=1
function	[function_1] object with ||| [function_2] [function_1]	count=2
function_arg	earth's moon [arg_2] ||| [function_1] [arg_2]	count=1
module	size of [module_2] ||| [module_1] [module_2]	count=1
function	[function_1] proportion and ||| [function_1] [function_2]	count=1
function	new class that ||| cls	count=1
arg	and shape ||| shape	count=1
module	wrap the x format ||| io	count=1
module_class	table [class_2] ||| [module_1] [class_2]	count=1
function	probably ||| probably	count=1
arg	by rows a join_type ||| join_type col_name_map	count=1
function	specific class of origin ||| make skyoffset cls	count=1
arg	most of ||| guess	count=1
module	a version ||| extern	count=1
module	the values of existing ||| io fits	count=1
function	an object ||| site	count=1
function_arg	[function_1] (_header) ||| [function_1] data [arg_2]	count=3
module	configobj as ||| extern configobj	count=1
function	to get grid parameters ||| get frequency grid	count=1
function_arg	[function_1] function called ||| [function_1] [arg_2]	count=2
arg	if method='auto' ||| dy fit_mean nterms	count=1
module	the ascii file output ||| io fits	count=1
module	a file on ||| io fits hdu	count=1
arg	array by ||| block_size	count=1
function	string to a file ||| string	count=1
module	an array when it ||| io votable	count=1
function	file against a schema ||| validate schema	count=1
arg	the data based on ||| nrows config	count=1
function_arg	discretize [arg_2] ||| [function_1] center 1d [arg_2]	count=4
function	returns true if this ||| is	count=1
function	bounding box we create ||| create bounding box	count=1
function	delete bscale/bzero from header ||| update header scale	count=1
module	a valid xml ||| utils xml	count=1
class	energy equation of ||| w0wa	count=2
function	separation ||| separation	count=1
function	the size in bytes ||| size	count=3
module	any [module] or image ||| [module]	count=1
class	on keys ||| index	count=1
function	[function_1] a subclass ||| [function_1] [function_2]	count=5
module	summary of the hdus ||| io	count=1
class	injects [class] and all ||| [class]	count=1
function	in which ra ||| in true coordinates	count=1
function	for a specific ||| skyoffset cls	count=1
class	the value for ||| image base	count=1
arg	of body body relative ||| body time ephemeris	count=1
function	this object is ||| is	count=1
arg	parses an input string ||| unit debug	count=1
module	fitshdu ||| fits	count=1
function	update the table header ||| update header	count=1
module	at [module] given ||| [module]	count=1
arg	of fields are unique ||| fields	count=1
class	rows in the table ||| table	count=1
module	column types after the ||| io ascii	count=1
function	for use ||| graph	count=1
function	arg supplied this must ||| arg	count=1
class	the outer ellipse not ||| elliptical frame	count=1
module	bounding_box limits ||| modeling	count=1
function_arg	match for [arg_2] ||| [arg_2] [function_1]	count=1
arg	matches the value to ||| value	count=1
arg	summarize the ||| output	count=1
function	absorption distance ||| absorption distance	count=2
function	bind a ||| bind receive	count=3
function	a specific class ||| make	count=1
function_arg	[function_1] processes ||| [function_1] [arg_2]	count=3
function_arg	delete [arg_2] ||| [arg_2] [function_1]	count=2
class	a progress [class_2] ||| [class_1] [class_2]	count=1
module	is currently ||| utils xml	count=1
module	or more hdu need ||| io fits hdu	count=1
function	gets the site registry ||| get site registry	count=1
function	set ||| set format	count=1
module	fitshdu fromhdulist(), but ||| fits hdu	count=1
function	class of origin frame ||| cls	count=1
function_arg	[function_1] x ||| [function_1] binom proportion [arg_2]	count=3
function	contents of a ||| contents	count=1
arg	fromhdulist(), ||| cls	count=1
arg	by some [arg] ||| [arg]	count=1
class	sorted [class_2] ||| [class_2] [class_1]	count=3
class	coordinate ||| base coordinate frame	count=1
function	matches of this ||| match	count=1
class	listeners list this ||| notifier mixin	count=1
class	when either model ||| model	count=1
class	this class for a ||| location	count=1
arg	given name ||| name	count=2
class	state at z=0 ||| cdm	count=1
module	the number of ||| utils	count=1
function	and return the precession ||| precession	count=2
function	use with ||| make transform graph	count=1
function	for retrieving indexed rows ||| iloc	count=1
function	the config ||| config	count=1
class	be opened with ||| base	count=1
function_arg	new [arg_2] ||| [arg_2] [function_1]	count=1
class	equation of state w ||| w0wa	count=1
function	propagate correlated uncertainties ||| correlated	count=1
module	fits file ||| io fits	count=3
function	[function_1] physical ||| [function_2] [function_1]	count=12
arg	upsample a data ||| data	count=1
module_class	the votable specification that [module_1] [class_2] uses ||| [module_1] [class_2]	count=1
class	affects scalars/sections also clears ||| section	count=1
function	the ||| make skyoffset	count=1
function	physical ||| physical	count=6
class	table-like hdus must ||| like hdu	count=1
class	in-order names of ||| base	count=1
arg	to a given key ||| key	count=1
function_arg	binomial proportion [arg_2] ||| [function_1] x [arg_2]	count=3
function	applicability ||| type	count=1
module	defined previously in the ||| io	count=2
arg	table ||| table	count=15
function	generates a ||| make	count=1
module_class	[module_1] location of ||| [module_1] [class_2]	count=2
module	specified [module] ||| [module]	count=3
function	and b ||| a b	count=1
module	parameters in the ||| io fits	count=1
module	translated from fits ||| io fits hdu	count=1
function	of registered units with ||| units with	count=1
function	to indices given a ||| subpixel indices	count=1
class	broken [class] ||| broken [class]	count=1
class	in-order names of ||| representation	count=1
function_arg	input row from ||| coords row	count=1
function_arg	[function_1] kernels ||| [arg_2] [function_1]	count=1
class	dark energy equation of ||| wpwa cdm	count=1
function	format ||| format	count=9
function	y [function] index rounded ||| [function]	count=1
class	the [class] redshift zp ||| [class]	count=1
class	record array with ||| base	count=1
module	passing on [module] ||| [module]	count=3
function	number split [function_2] ||| [function_1] [function_2]	count=1
function	default ||| update default	count=1
function	scalar coordinate ||| coord	count=1
function	parse the tdim value ||| parse	count=1
class	class for ||| earth location	count=1
function	class's __getitem__, such ||| get copy on getitem shim	count=1
class	display row as a ||| row	count=1
class	the dark energy ||| w cdm	count=1
function	wrap ||| wrap	count=1
arg	cls ||| cls	count=2
module	method in the ||| io fits	count=1
module	if ||| fits	count=1
function	split it [function_2] ||| [function_1] [function_2]	count=2
arg	an object of this ||| cls	count=1
arg	gyr to redshift z ||| z	count=1
arg	of [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] mtype ||| [function_1] receive message [arg_2]	count=1
function	break up long ||| long	count=1
function	any mixin [function] that are ||| has mixin [function]	count=1
module	validation ||| validator	count=1
module	unit ||| units function	count=4
arg	header ||| header	count=2
function	that ||| for	count=1
arg	package and [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] of uncertainty ||| [function_2] [function_1]	count=6
function_arg	iau precession/nutation [arg_2] ||| [function_1] sidereal time [arg_2]	count=1
function	class ||| site	count=1
module	the header of a ||| io votable	count=2
class	file if ||| file	count=1
function	as a [function_2] ||| [function_1] [function_2]	count=1
module	from ||| fits	count=2
function	extent of a box ||| extent	count=1
arg	given frequencies parameters ||| normalization method assume_regular_frequency	count=1
class	the mtypes the client ||| sampclient	count=1
module	generates a ||| builtin_frames	count=1
module	returns the 'mode' string ||| io fits	count=1
function	[function] of the ||| [function]	count=7
function	from a file ||| fromfile	count=1
module	if the user ||| io fits hdu	count=1
class	comments and configspec ||| section	count=1
class	return ||| table	count=1
module	matplotlib ||| visualization wcsaxes	count=1
arg	fastbasic to output ||| output	count=1
module	redshift where w ||| cosmology	count=1
function	in which ||| in	count=1
module	the returned ||| io fits	count=1
module	convert to other units ||| units	count=1
function	class of origin frame ||| skyoffset	count=1
module	[module] may ||| [module]	count=1
arg	in val1 to ||| val1	count=1
module	origin ||| builtin_frames	count=1
arg	function ||| force	count=1
class	equivalent [class_2] ||| [class_2] [class_1]	count=1
function	set pm ||| pm	count=1
class	skycoord ||| sky coord	count=1
arg	the join operator &: [arg_1] [arg_2] input/output ||| [arg_1] [arg_2]	count=6
module	the ||| function	count=1
arg	from a file ||| filename	count=1
function	and then ||| doc	count=1
module	specific class ||| builtin_frames	count=1
arg	deal with a ||| obj	count=1
class	like fitshdu ||| hdu	count=1
arg	a given hdulist object ||| cls hdulist	count=1
function	[function_1] source distribution ||| [function_2] [function_1]	count=4
function	[function_1] record-valued ||| [function_2] [function_1]	count=1
arg	single arg ||| arg	count=1
function_arg	the main [arg_2] ||| [arg_2] [function_1]	count=3
arg	minor ||| renderer pixel_array angle_array offset	count=1
arg	internal _format scale and ||| scale	count=1
function	a sidereal time ||| sidereal time	count=2
arg	of iers_a and ||| iers_a	count=1
module	types after the ||| io	count=1
function	a string for use ||| transform graph	count=1
function	decorated ||| doc	count=1
module	signature ||| utils compat	count=3
module	fits file and ||| fits hdu	count=1
class	check ||| function quantity	count=2
arg	table ||| table ref	count=1
module	[module] the ||| [module]	count=1
module	value in the ||| io ascii	count=1
module	the [module_2] ||| [module_1] [module_2]	count=49
arg	indices ||| indices	count=1
function	strings to unicode if ||| to	count=1
class	the client ||| sampclient	count=10
function	of catalog coordinates ||| coordinates	count=2
class	run [class_2] ||| [class_2] [class_1]	count=5
arg	like write ||| write	count=1
module	with each other based ||| utils	count=1
function	but looks ||| lookup by	count=1
function	a view of ||| new view	count=1
module	create ||| coordinates	count=1
arg	based on the current ||| config	count=1
function	path [function_2] ||| [function_2] [function_1]	count=8
function	the same type as ||| equivalent units	count=1
class	a quantity with ||| quantity frame attribute	count=1
class	of dark ||| cdm	count=1
function	[function_1] [function_2] ||| [function_2] [function_1] original_position	count=10
arg	changing [arg] ||| [arg]	count=1
function	allclose that returns the ||| not allclose	count=1
function	physical [function_2] ||| with [function_1] [function_2]	count=4
function_arg	input value and ||| input value	count=1
function	replaces the ||| format doc	count=1
arg	sky offset frame ||| framecls	count=1
function	frame ||| make	count=1
function	writable file-like object ||| convert to writable	count=1
arg	[arg_1] exclude_names ||| names [arg_1] [arg_2]	count=1
module_class	[module_1] to their ||| [module_1] [class_2]	count=6
function	field-specifier to ||| normalize	count=1
module	of each of the ||| io votable	count=1
class	[class_1] graph ||| [class_2] [class_1]	count=1
function	and then [function_2] ||| [function_2] [function_1]	count=4
function	[function_1] [function_2] checkout ||| core [function_1] [function_2]	count=1
function	attribute as deprecated ||| deprecated attribute	count=2
class	table-like hdus must ||| like	count=1
arg	a kernel ||| kernel boundary fill_value	count=1
arg	corrections ||| jd1 jd2 return_status	count=1
function_arg	[function_1] the value ||| [arg_2] [function_1]	count=1
function_arg	discretize [arg_2] ||| [function_1] linear 1d [arg_2]	count=3
arg	a fitshdu ||| cls filename compress	count=1
arg	two header keyword ||| keyword	count=1
function	values_ ||| values	count=1
function	or scalar coordinate ||| coord	count=1
module	print ||| fits scripts	count=1
function	for ||| convert col for	count=1
function	[function_1] information ||| [function_1] [function_2]	count=3
class	to the compressed image ||| comp image	count=1
function	string formatted as ||| degrees to string	count=1
class	but creates ||| fits	count=1
module	affects scalars/sections also clears ||| extern	count=1
function	for use with ||| make transform graph	count=1
module	the ||| io votable	count=33
function	source used ||| reference	count=1
function	bounding box we ||| bounding box	count=2
arg	the value ||| value min	count=2
arg	a file if not ||| file	count=1
function	retrieves the contents of ||| file contents	count=1
arg	the specified mtype and ||| mtype	count=1
module	ordereddict ||| table	count=1
class	comments ||| section	count=1
arg	file-like ||| arr outfile	count=1
function	its tables and ||| fields and params	count=1
class	the location for the ||| location	count=1
class	spherical ||| spherical	count=5
module	classmethod to convert ||| io	count=1
function	reallocating ||| resize strategy	count=1
class	may contain a ||| card	count=1
function	parameter for baryonic matter ||| ob	count=1
function	scale of the ||| scale	count=1
function	to the [function_2] ||| [function_1] [function_2]	count=2
class	functionquantity ||| function	count=1
function_arg	column meta [arg_2] ||| [function_1] [arg_2]	count=1
function	patch to include ||| patch	count=1
function_arg	binary [arg_2] ||| [function_1] [arg_2]	count=1
function	on kraft burrows ||| mpmath kraft burrows	count=2
function	iterates over keys ||| iter	count=1
module	the attributes of a ||| io	count=1
class	quantity ||| function quantity	count=1
function	may contain a field-specifier ||| normalize	count=1
function	[function_1] utc ||| [function_1] [function_2]	count=2
arg	[arg] on each ||| [arg]	count=2
function	in [function] ||| [function]	count=2
function_arg	utility [function_1] [arg_2] parameters ||| [function_1] [arg_2]	count=2
class	[class] the ||| table [class]	count=1
arg	value that ||| cls	count=1
function	corresponding [function_2] ||| [function_2] [function_1]	count=2
function	cip and the ||| get cip	count=1
function	time using ||| time	count=1
arg	right tables [arg_2] ||| [arg_2] [arg_1]	count=1
function	data ||| sigma clip	count=1
function	all the attributes of ||| attributes	count=1
function	whether the tick ||| ticklabel	count=1
function_arg	sets [arg_2] ||| [function_1] [arg_2]	count=2
module	new class that is ||| coordinates	count=1
function	b columns ||| a b columns	count=1
class	a tuple ||| base representation	count=1
function	in a ||| in	count=1
module	futures in ||| utils compat futures	count=1
function	[function_1] valid url ||| [function_2] [function_1]	count=1
function	return ||| get	count=1
function	valid secondary ||| secondary	count=1
function	create a new ||| make	count=1
function_arg	pretty [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	attributes [arg_2] ||| [function_1] equal [arg_2]	count=1
function	b [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] a new ||| [arg_2] [function_1]	count=1
class	raise vdtvaluetoolongerror('jedie') ||| vdt value too long	count=1
function	[function_1] definition keywords ||| [function_2] [function_1]	count=1
class	[class_1] this unit ||| [class_1] [class_2]	count=1
function	its indices ||| indices	count=1
module	lookup the ||| io votable	count=1
module	string for use ||| coordinates builtin_frames	count=1
function	this ||| of site	count=2
module	dtype object an ||| fits	count=1
arg	given ||| axis	count=1
function	for the earth's moon ||| moon	count=1
function	matrix from one besselian ||| matrix besselian	count=1
class	state w r ||| cdm	count=1
arg	calculates the ||| header undistort axes center	count=1
function_arg	draw [arg_2] ||| [function_1] ticks [arg_2]	count=1
arg	val1 ||| val1	count=4
function	copy module ||| copy	count=1
module	flushing the ||| io fits	count=1
module	returning the count of ||| io fits	count=1
class	trapezoid [class_2] ||| [class_2] [class_1]	count=1
arg	fromhdulist(), but creates ||| filename	count=1
class	of state at ||| w0wa	count=1
function	of this class for ||| of site	count=1
function	dec are defined w ||| apparent position	count=1
module	fitshdu fromhdulist(), but creates ||| io fits hdu	count=1
class	end of the index ||| index	count=1
module	axes ||| wcsaxes	count=2
function	may contain a ||| keyword	count=1
module	a warning for ||| coordinates builtin_frames	count=1
arg	[arg_1] or after ||| header relativeinsert card [arg_1] [arg_2]	count=1
function	[function_1] uncertainty ||| [function_2] [function_1]	count=6
module	probably ||| io ascii	count=1
module_class	[module_1] [class_2] element ||| [module_1] [class_2]	count=3
module	only irreducible units ||| units	count=1
class	client in a ||| sampclient	count=1
function	positive index ||| positive index of	count=2
arg	or raise vdtparamerror ||| values to_float	count=1
function	position of ||| body position	count=1
function_arg	convolve [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	copy those [arg_2] ||| [arg_2] [function_1]	count=1
function	center of the bin ||| center	count=1
function	[function_1] value of ||| [function_2] [function_1]	count=4
function	the polygon ||| polygon	count=1
function	in radians [function_2] ||| [function_2] [function_1]	count=4
class	[class_1] attribute ||| [class_2] [class_1]	count=5
class	initializes a ||| executor	count=1
function	matches of this ||| match to	count=1
module	name ||| coordinates	count=1
function	create a [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] catalog is ||| [function_2] [function_1]	count=6
arg	this table [arg] ||| [arg]	count=1
arg	[arg_1] and exclude_names ||| [arg_2] [arg_1]	count=1
arg	column [arg] both the ||| [arg] descr_output format	count=1
function	returns a string formatted ||| string	count=2
arg	[arg_1] frame ||| [arg_2] [arg_1]	count=4
module	string ||| configobj	count=1
arg	combination of iers_a and ||| iers_a	count=1
arg	given [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=7
class	a column specifically those ||| column	count=1
function	burrows [function_2] ||| [function_2] [function_1]	count=4
function	units [function_2] ||| [function_1] [function_2]	count=6
arg	the simplest possible composite ||| max_depth include_prefix_units	count=1
function	[function] sub-:class group ||| [function]	count=1
function	signal to [function_2] ||| [function_2] [function_1]	count=4
arg	subroutine is ||| cls	count=1
class	like fitshdu fromhdulist(), but ||| fits hdu	count=1
class	the parameter to a ||| parameter	count=1
module	header in a fits ||| fits	count=3
class	either model in the ||| compound model	count=1
function	wait for the ||| wait	count=1
class	unit (e ||| function unit	count=1
module	fits format spec to ||| fits	count=2
class	the signature ||| signature	count=1
function	value that ||| keyword	count=1
module	when the future ||| utils compat futures	count=1
function	blank cards at the ||| countblanks	count=1
module	in the default ||| io ascii	count=1
function	on an oversampled grid ||| oversample 2d	count=1
function	pixel distances ||| pixel	count=1
class	for ||| helper	count=1
function	[function_1] index ||| [function_1] [function_2]	count=11
function	function [function_2] ||| [function_2] [function_1]	count=2
arg	return an object of ||| cls	count=1
arg	[arg_1] [arg_2] must all ||| [arg_2] [arg_1]	count=1
module	the longitude ||| coordinates	count=1
function	return ||| site	count=1
module	scalars/sections also clears comments ||| configobj	count=1
function	warn or [function_2] ||| [function_2] [function_1]	count=4
module	a string for ||| builtin_frames	count=1
function	matrix ||| matrix from	count=1
function	given python function ||| function	count=1
module	the hdu's ||| io fits hdu	count=4
function	as ||| as	count=2
class	current mapping ||| mapping	count=1
arg	internal buffers ||| indent wrap	count=1
arg	a deprecated unit in ||| s unit	count=1
function	by a ||| lookup by	count=1
class	a ||| function quantity	count=2
module	the specified value ||| configobj	count=1
class	order based [class] essentially ||| [class]	count=1
function	function but with ||| function with	count=3
function	write comment ||| write	count=1
class	column ||| rec	count=1
function	fit ||| periodic fit	count=2
function_arg	[function_1] the other ||| [arg_2] [function_1]	count=6
function	to an hdf5 ||| table hdf5	count=1
arg	&: combine [arg] ||| [arg]	count=3
function	generates ||| make	count=1
function	deal with a functionquantity ||| prepare	count=1
function	[function_1] with the ||| [function_2] [function_1]	count=7
class	from a file ||| fits hdu	count=1
arg	[arg_1] after an ||| [arg_2] [arg_1]	count=1
module	hour value and returns ||| coordinates	count=1
module	extension of a fits ||| fits	count=1
class	hdulist was ||| hdulist	count=1
function_arg	[function_1] col to ||| [arg_2] [function_1]	count=2
class	of the ||| base representation	count=2
function	instance from a ||| from table	count=1
class	of a coordinate ||| coordinate	count=1
function_arg	get grid [arg_2] ||| [arg_2] [function_1]	count=3
module	implements card _check_if_rvkc [module_1] [module_2] ||| [module_1] [module_2]	count=2
function_arg	mantissa and [arg_2] ||| [arg_2] [function_1]	count=1
module	and configspec ||| extern	count=1
arg	key [arg_2] ||| [arg_2] [arg_1]	count=1
arg	bins ||| bins	count=1
arg	lines after ||| lines meta	count=1
function	for ||| uncertainty	count=1
function	[function_1] file ||| [function_2] [function_1]	count=6
module_class	[module_1] resource and ||| [module_1] [class_2]	count=2
function_arg	from a [arg_2] ||| [function_1] unit summary [arg_2]	count=3
module	number of ||| utils	count=1
function	of earth ||| prepare earth	count=1
function	heliocentric position of earth ||| earth position vel	count=1
arg	[arg] must all ||| [arg] join_type	count=3
function_arg	map fn iter ||| map fn	count=1
arg	arrays image_r ||| image_r	count=1
function	convert between pixel distances ||| pixel scale	count=1
module	directly either ||| fits hdu	count=1
arg	a ||| a b	count=1
function	probably contains ||| probably	count=1
class	this is especially useful ||| base splitter	count=1
class	either model ||| model meta	count=1
module	like fitshdu ||| io	count=1
class	the hdu and ||| valid hdu	count=1
class	order based [class] ||| [class]	count=1
function	burrows and [function_2] ||| [function_1] [function_2]	count=4
function	ascii table format ||| ascii	count=1
class	log ||| log	count=2
function	the comment attribute ||| comment	count=1
function	names associated ||| names	count=1
module	use ||| coordinates builtin_frames	count=2
class	exponential [class_2] ||| [class_2] [class_1]	count=5
module	or file-like object ||| utils	count=1
module	field-specifier to ||| io fits	count=1
function	disconnect from the hub ||| disconnect	count=1
class	a new [class] the ||| [class]	count=1
function	delete_catalog ||| delete catalog	count=1
arg	in val1 and ||| val1	count=1
function	as text to ||| totextfile	count=1
function	be a float ||| float	count=1
arg	of the current instance ||| data copy_data	count=1
arg	to other ||| other	count=2
function	a comparison ||| comparison	count=1
function_arg	column object col ||| column col	count=2
module	returns the number of ||| io fits	count=1
class	by bintablehdu ||| hdu	count=1
function	a map ||| map	count=1
arg	a given time ||| time	count=1
function	should never ||| match header	count=1
function	an angle in radians ||| radians	count=3
arg	summarize ||| output	count=1
module_class	[module_1] field_ ||| [module_1] [class_2]	count=9
function	[function] pixel ||| [function]	count=3
module	as strings ||| io ascii	count=1
module	value that ||| io fits	count=1
function	an object of ||| of site	count=1
function	[function_1] polygon such ||| [function_2] [function_1]	count=1
function	summary ||| summary	count=1
function	but the catalog is ||| add catalog by	count=1
class	resource must be either ||| resource	count=1
arg	unitswarning about a deprecated ||| standard_name format_decomposed	count=1
class	may contain ||| card	count=1
function	ndarray to ||| to file like	count=1
function	keyword repeat ||| keyword	count=1
module	the proper unit ||| units	count=1
arg	can deal with ||| obj	count=1
function	can deal ||| prepare	count=1
class	object of this ||| earth	count=1
function	data if any ||| data	count=1
function	[function_1] density in ||| [function_2] [function_1]	count=1
module	both the ||| io	count=1
function	floating number to ||| float	count=1
function	strings ||| string	count=1
function	check that ||| prepare	count=1
function	numpy array ||| array	count=1
function	of indentation levels ||| indentation	count=1
function	the coordinate package's docstring ||| transform graph docs	count=1
module	types after the column ||| io	count=1
module	an ||| fits	count=4
arg	tables vertically [arg] ||| tables [arg]	count=1
function	mime content [function_2] ||| [function_2] [function_1]	count=1
module	the same state ||| io fits	count=1
function	[function] upon removal ||| [function] column	count=1
function	display [function_2] ||| [function_2] [function_1]	count=2
arg	value ||| value	count=31
function	use with the ||| transform	count=1
class	[class] if ||| [class]	count=3
function	unit change i ||| unit	count=1
module	the field-specifier of record-valued ||| io fits	count=1
function	a subclass ||| subclass	count=1
module	database ||| vo client	count=2
function	a sidereal [function_2] ||| [function_2] [function_1]	count=3
function	such ||| mode	count=1
module	compute the [module_2] ||| [module_1] [module_2]	count=4
function	equivalent to map ||| map	count=1
module	value that may ||| io fits	count=1
arg	3 arrays image_r ||| image_r	count=1
function	[function_1] list of ||| [function_1] bool [function_2]	count=1
function	[function] upon ||| [function] column	count=1
function	reading ||| scaled	count=1
class	coefficients ||| polynomial	count=1
function	from header [function_2] ||| [function_1] [function_2]	count=1
class	scale ||| base hdu	count=1
function	data if ||| data	count=1
module	the bulk of the ||| io fits	count=1
function	a config file ||| unedited config file	count=1
class	raise vdtvaluetooshorterror('jed') ||| vdt value too short	count=1
arg	at (lon0 ||| lon0 lat0	count=1
class	time object in ||| time	count=1
function_arg	table writer [arg_2] ||| [arg_2] [function_1]	count=1
function	matches a previous ||| match	count=1
module	accesses an ||| io fits	count=1
function	of catalog ||| catalog	count=1
function	burrows and nousek in ||| burrows nousek	count=2
module	hdu ||| io fits hdu	count=3
function_arg	[function_1] left and ||| table [function_1] [arg_2]	count=2
function_arg	the worker [arg_2] ||| [arg_2] [function_1]	count=1
function	all the attributes ||| attributes	count=1
function	physical [function_2] ||| [function_2] [function_1]	count=9
function	from an ||| init from	count=2
function	by querying the google ||| of	count=1
function	transverse proper kpc corresponding ||| kpc proper per	count=1
function_arg	[function_1] metadata key ||| [arg_2] [function_1]	count=1
function	against a schema ||| schema	count=1
module	the same state ||| io	count=1
module	fill value in the ||| io ascii	count=1
function_arg	indices given [arg_2] ||| [function_1] [arg_2]	count=2
module	either the simple or ||| io fits hdu	count=1
function	[function_1] radians ||| [function_2] [function_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] linear 1d [arg_2]	count=3
class	of ||| earth location	count=2
arg	this table [arg] this ||| [arg]	count=1
class	the hdulist ||| hdulist	count=1
module	of ||| builtin_frames	count=1
function	iterates over keys from ||| iter	count=1
class	[class_1] writer ||| [class_1] [class_2]	count=3
module	object just copy the ||| io	count=1
arg	by the 'sep' parameter ||| h precision pad sep	count=1
module	given the keyword arguments ||| io	count=1
function	function relative ||| relative	count=1
function_arg	bind [arg_2] ||| [function_1] notification [arg_2]	count=1
arg	specified keys ||| keys join_type	count=2
module	but ||| fits hdu	count=2
function	[function_1] then copy ||| [function_2] [function_1]	count=3
module	object ||| utils	count=2
class	names of the group ||| groups	count=1
function	view ||| new view	count=1
function	quantity [function_2] ||| [function_2] [function_1]	count=3
function	connect ||| connect	count=1
function	of the long ||| long	count=1
module	currently ||| xml	count=1
arg	around some ||| unit	count=1
arg	[arg_1] the package ||| [arg_2] [arg_1]	count=4
function	optimal histogram bin ||| knuth bin	count=1
function	the long names ||| long names	count=2
function	[function_1] parallel from ||| [function_2] [function_1]	count=2
module	given format ||| units format	count=1
function	returns a string formatted ||| to string	count=2
function	catalog is created with ||| add catalog	count=1
function_arg	[function_1] (_header) to ||| [arg_2] [function_1]	count=3
function	cip and ||| cip	count=1
class	with a ||| quantity	count=1
function_arg	[function_1] given key ||| [function_1] [arg_2]	count=2
class	transform ||| transform	count=2
module	compute the lomb-scargle ||| stats lombscargle implementations	count=2
function	return an object ||| of site	count=1
function_arg	jd2 from [arg_2] ||| [arg_2] [function_1]	count=6
class	cutoff power [class_2] ||| [class_1] [class_2]	count=1
arg	to key ||| key	count=1
function	connect to the ||| connect	count=1
module_class	[module_1] info_ ||| [module_1] [class_2]	count=2
function	position in the ||| position	count=2
arg	of a specified ||| item	count=1
class	client in a separate ||| sampclient	count=1
module	a decorator [module_2] ||| [module_1] [module_2]	count=4
function	[function_1] list of ||| [function_2] [function_1]	count=4
function_arg	write a [arg_2] ||| [arg_2] [function_1]	count=4
function	it is a ||| is	count=1
arg	objects by numbers/arrays ||| other	count=1
class	convert datetime object ||| datetime	count=1
function	volume ||| volume	count=2
function	convert between pixel ||| pixel scale	count=1
arg	rows to ||| rows	count=1
function	in binary ||| binary	count=1
class	stop the client and ||| client	count=1
arg	unit of an ||| unit	count=1
function	update the ||| update checksum	count=1
function	[function_1] dec ||| [function_2] [function_1]	count=2
function	decorated object ||| doc	count=1
class	the [class] ||| [class]	count=2
function	is *not* possible ||| supports correlated	count=1
function	to this ||| call	count=3
arg	numbers whose value ||| value	count=1
module_class	[module_1] column is ||| [module_1] [class_2]	count=4
module	the domain of the ||| io votable	count=1
class	a ||| earth location	count=2
function	[function] kwargs ||| [function]	count=2
arg	of self [arg] has length ||| [arg]	count=1
module	to the samp hub ||| vo samp	count=1
function	diameter [function_2] ||| [function_2] [function_1]	count=1
function	object ||| format	count=1
arg	data [arg_2] ||| [arg_2] [arg_1]	count=5
arg	a siteregistry ||| jsonurl	count=1
arg	check that ||| min max	count=1
function_arg	[function_1] given data ||| [function_1] [arg_2]	count=1
function	write a ||| write table	count=1
module	classmethod to convert ||| fits	count=1
function	bind a ||| bind	count=4
function	class as self return ||| time	count=1
function	negative derivative of ||| wa	count=2
module	xml id_ [module] ||| [module]	count=1
function	linear [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] currently running ||| [function_1] [function_2]	count=1
function	to convert ||| normalize keyword	count=1
function	representation of the data ||| representation	count=1
function	a unit change i ||| unit	count=1
function_arg	[function_1] [arg_2] ||| [function_1] x [arg_2]	count=24
arg	confidence interval ||| interval	count=1
function	[function_1] matches ||| [function_2] [function_1]	count=1
function	of a file-like object ||| fileobj	count=1
arg	this is a ||| a	count=1
module	one or more hdu ||| fits hdu	count=1
function	lookback ||| lookback	count=2
class	check ||| base header	count=1
function	a string ||| transform	count=1
function_arg	[function_1] table ||| [function_1] [arg_2]	count=2
module	from a file ||| fits	count=1
function	burrows and [function_2] ||| [function_2] [function_1]	count=4
class	[class] hdu within ||| [class]	count=2
function	load observatory database ||| sites	count=2
module	parameter set ||| modeling	count=1
function	function ||| function	count=4
module	is ||| utils xml	count=2
module	mapping parameter ||| modeling	count=3
class	sorted array ||| sorted array	count=6
function	indentation levels the ||| get indentation	count=1
function_arg	poisson parameter [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] other object ||| [arg_2] [function_1]	count=4
function	break up long ||| format long image	count=1
function	a 64-bit signed integer ||| int	count=1
function	[function_1] geodetic ||| [function_2] [function_1]	count=1
class	transformation from ||| transform	count=1
class	version ||| section	count=1
function_arg	time in [arg_2] ||| [function_1] [arg_2]	count=1
arg	key and ||| key	count=2
class	initializes ||| process	count=1
function	[function_1] a string ||| [function_1] [function_2]	count=6
arg	differences by interpolating ||| iers_table return_status	count=1
module	sets the attributes ||| io	count=1
module	returns the ||| xml	count=1
function	name of the ||| info name	count=1
module	depending on the pedantic ||| io votable	count=1
module	table but ||| table	count=1
arg	exclude_names to [arg_2] ||| [arg_2] names include_names [arg_1]	count=1
module	create a ||| coordinates	count=1
arg	(_header) to the ||| image_header name compression_type tile_size	count=1
function	update the 'checksum' and ||| update checksum	count=1
class	dimensional [class] ||| [class]	count=2
function	string representation of the ||| repr	count=2
arg	the value where ||| value	count=1
function	field and the ||| field	count=1
module	of ||| io fits	count=2
function_arg	[function_1] refers ||| [function_1] [arg_2]	count=5
function_arg	notification to [arg_2] ||| [function_1] mtype [arg_2]	count=3
function	[function_1] type ||| [function_2] [function_1]	count=14
function	subtract ||| sub	count=1
arg	doesn't bypass string interpolation ||| key default	count=1
function	this class for a ||| of	count=1
function	use with the coordinate ||| make	count=1
function	[function_1] votable file ||| [function_2] [function_1]	count=3
function	for the write method ||| write	count=1
function	[function_1] in parallel ||| [function_1] [function_2]	count=1
function	signal [function_2] ||| [function_1] [function_2]	count=5
function	'name' ||| fileobj	count=1
function_arg	continuous variable [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	change a [arg_2] ||| [function_1] name [arg_2]	count=1
function	initializes internal ||| init	count=1
arg	given row ||| row	count=1
arg	this object's ||| new_frame	count=1
class	dark energy equation of ||| w0wa cdm	count=2
arg	[arg_1] right ||| join [arg_1] [arg_2]	count=1
function	model [function] been ||| [function] user	count=1
arg	a bit array as ||| field recformat	count=1
function	of the data ||| data	count=2
function	from the ||| get	count=3
function	and adjust physical unit ||| add and adjust physical unit	count=1
arg	if class2 ||| class2 format_classes	count=1
function_arg	contained [arg_2] ||| [function_1] [arg_2]	count=3
function	but looks in ||| by	count=1
module	most of the ||| io	count=1
module	the simple or ||| io fits	count=1
arg	model by performing ||| model x_range	count=2
function	a string formatted as ||| to string	count=2
arg	n using lagrange ||| n	count=1
module	of origin ||| builtin_frames	count=1
function	a transformation ||| transform	count=1
function	all names and ||| names	count=1
arg	the value and ||| cls value	count=1
module	the simple ||| io fits	count=1
function	of column ||| column	count=1
class	in-order names ||| base	count=1
arg	[arg_1] exclude_names to ||| names [arg_1] [arg_2]	count=1
arg	of north between ||| other	count=1
class	this ||| valid	count=2
class	fromhdulist(), ||| fits hdu	count=2
arg	in mjd and the ||| mjd	count=1
function	exception raised by ||| exception	count=1
class	get ||| wcspixel2world transform	count=1
function	is the ||| make	count=1
arg	than strlen and no ||| input strlen	count=1
module	tuple with ||| coordinates	count=1
function_arg	[function_1] [arg_2] ||| [function_1] equal [arg_2]	count=1
function	html and show it ||| show	count=2
function_arg	[function_1] [arg_2] ||| [function_1] value [arg_2]	count=6
function	object at the given ||| at	count=1
class	required by extension ||| extension	count=1
class	partial function ||| predictor	count=1
function_arg	[function_1] different size ||| [arg_2] [function_1]	count=3
module	xml ||| xml	count=2
class	spherical ||| unit spherical	count=1
module	the fits ||| io fits	count=2
function	that class's __getitem__, such ||| copy on getitem shim	count=1
module_class	the locations [class_2] ||| [module_1] hdu [class_2] hdu fileinfo	count=3
function	check that the ||| array	count=1
function	sets the current ||| set	count=1
arg	increment or decrement its ||| increment	count=1
arg	model by performing a ||| model x_range	count=1
arg	a subsampling factor ||| position subsampling	count=1
arg	[arg_1] scale try ||| [arg_2] [arg_1]	count=5
module	the format for the ||| io ascii	count=1
class	get ||| async base	count=1
function	~numpy ndarray to a ||| to file like	count=1
class	a ||| earth	count=1
arg	function to ||| x	count=2
function	the ||| array prepare	count=2
module	fits file will ||| fits	count=1
module	value that ||| fits	count=1
module	override the default ||| io ascii	count=2
function	strings to ||| to	count=1
arg	[arg_1] the end ||| [arg_1] useblanks bottom [arg_2]	count=1
function	checks if ||| convert	count=1
module	the given write ||| utils	count=1
function	raw ||| raw	count=1
arg	new coordinate transformation ||| tosys transform	count=1
function_arg	[function_1] minor ||| [function_1] ticks [arg_2]	count=1
function_arg	[function_1] filter kernels ||| [function_1] [arg_2]	count=1
function	raise an exception ||| raise	count=1
function	[function_1] data from ||| [function_1] [function_2]	count=2
class	way ||| card accessor	count=1
function	or none ||| or none	count=2
function	that [function_2] ||| [function_2] [function_1]	count=1
function	search ||| search	count=1
module	unit conversions ||| units	count=1
class	for ||| image base	count=2
module	number ||| xml	count=1
arg	interval given observed counts ||| interval sigma background	count=1
arg	body body ||| body time ephemeris	count=1
function	discretize ||| discretize	count=5
arg	data_format ||| data_format data_class	count=1
arg	polynomial [arg] which has ||| [arg]	count=1
module	file ||| io fits	count=3
module	the default bounding_box limits ||| modeling	count=1
class	value that may contain ||| card	count=1
arg	at a given frequency ||| y dy frequency	count=1
function	[function_1] a record-valued ||| [function_2] [function_1]	count=1
arg	the given ||| axis mode	count=1
function_arg	[function_1] [arg_2] ||| [function_1] response [arg_2]	count=3
class	tuple with the in-order ||| representation	count=1
arg	and kwargs this ||| kwargs	count=1
function	[function_1] a votable ||| [function_1] [function_2]	count=4
module	[module_1] table ||| [module_1] [module_2]	count=12
module_class	hdu's [class_2] ||| [module_1] corrupted [class_2]	count=1
function	data ||| block reduce	count=1
function	constellation s ||| constellation	count=1
function	[function_1] index or ||| [function_1] [function_2]	count=4
function	the "representation attributes" for ||| get representation attrs	count=1
module_class	[module_1] for each ||| [module_1] [class_2]	count=8
function	[function_1] any extension ||| [function_2] [function_1]	count=1
class	replace string values ||| base data	count=1
class	can ||| quantity	count=1
arg	flag for entries in ||| i	count=3
arg	new coordinate transformation to ||| tosys transform	count=1
function	model ||| model	count=1
function_arg	[function_1] current instance ||| [function_1] [arg_2]	count=2
function	for use with ||| transform graph	count=1
function	the minimum value ||| min	count=1
function	notify ||| notify	count=1
function	the precession [function_2] ||| [function_1] [function_2]	count=5
function	color codes ||| codes	count=1
module	fetches the specified value ||| configobj	count=1
class	like fitshdu ||| fits	count=1
function	a ||| make skyoffset cls	count=2
function	may contain a ||| normalize	count=1
arg	hdu in filename ||| filename	count=1
module_class	[module_1] columns ||| [module_1] table [class_2]	count=4
module	a [module] ||| [module]	count=4
module	serialization in the ||| io	count=1
function	from self ||| from	count=1
function	powers of the ||| powers	count=1
class	this [class] has no ||| base coordinate [class]	count=1
arg	given dates ||| jd1 jd2 return_status	count=1
module	generates a ||| coordinates	count=1
class	in the header ||| header	count=1
function	a time to mjd ||| mjd	count=1
function	binomial [function_2] ||| [function_2] [function_1]	count=4
class	true if the future ||| future	count=1
function	class that ||| make	count=1
class	first [class] ||| [class]	count=3
arg	encodes the checksum value ||| value	count=1
arg	creates ||| cls	count=1
function	calculate the apparent position ||| get apparent body position	count=1
class	[class_1] law ||| [class_1] [class_2]	count=6
arg	table converted ||| table	count=1
function_arg	[function_1] lines after ||| [function_1] header [arg_2]	count=1
function	at least one massive ||| massive	count=1
function	is inconsistent ||| inconsistent	count=1
arg	keyword args ||| args	count=1
module	for [module] ||| [module]	count=5
arg	keyword value that ||| keyword	count=1
arg	shape and position ||| shape position	count=1
arg	check that the ufunc ||| obj context	count=1
class	[class_1] power law ||| [class_1] [class_2]	count=3
module	[module_1] the domain ||| [module_2] [module_1]	count=2
module	size of [module_2] ||| [module_2] [module_1]	count=1
arg	either downloads or loads ||| force_download force_builtin	count=1
function	model at ||| model	count=1
arg	from lines as a ||| lines	count=1
class	a stretch ||| squared stretch	count=1
arg	urls blocks until ||| urls cache show_progress timeout	count=1
function	[function] columns ||| [function]	count=2
module	is handled in the ||| io ascii	count=1
function	[function_1] currently running ||| [function_2] [function_1]	count=1
module	and to match the ||| io fits	count=1
module	parameter names to their ||| modeling	count=1
arg	begin ||| begin	count=1
function	between pixel distances ||| pixel	count=1
arg	output ||| output	count=2
arg	set the unit ||| unit	count=1
function_arg	join [arg_2] ||| table [function_1] [arg_2]	count=5
module	uppercase ||| fits	count=1
class	decode ||| config obj	count=1
function	the names associated ||| names	count=1
function	[function_1] matrix for ||| [function_2] [function_1]	count=3
class	of state at z=0 ||| cdm	count=1
arg	method standard profile ||| private_key	count=1
function	attributes ||| attributes	count=2
function	radians [function_2] ||| [function_1] [function_2]	count=4
module	of :meth ~astropy vo ||| vo	count=5
class	is evaluated with ||| base	count=1
arg	a join_type of 'exact' ||| join_type metadata_conflicts	count=1
function	an oversampled grid ||| oversample 1d	count=1
function_arg	[function_1] and constrained ||| [function_1] model [arg_2]	count=1
function	column objects from ||| get cols	count=5
module	object an ||| fits	count=1
arg	data_class ||| data_class	count=1
function	can deal ||| array prepare	count=1
function_arg	[function_1] of ndarrays ||| [function_1] [arg_2]	count=1
function	of origin ||| make skyoffset	count=1
class	fromhdulist(), but creates a ||| hdu	count=1
class	with ||| base	count=9
class	to spherical polar coordinates ||| physics spherical	count=1
arg	shape and position ||| shape position mode	count=1
module	the header/data [module_2] ||| [module_1] [module_2]	count=1
class	component [class_2] ||| [class_1] [class_2]	count=3
module_class	[module_1] [class_2] ||| [module_1] [class_2] call lines	count=4
function	remove inactive threads from ||| remove	count=1
class	deal with a functionquantity ||| function quantity	count=1
class	at ||| w0wa cdm	count=2
class	classes or instances ||| meta	count=1
function	pixel distances ||| pixel scale	count=1
class	of coefficients ||| polynomial model	count=1
module	using [module] median ||| [module]	count=1
function	histogram bin ||| knuth bin	count=1
function_arg	the input [arg_2] ||| [function_1] [arg_2]	count=4
class	parent class ||| table header	count=1
function	image data from a ||| image data	count=1
function	[function_1] [function_2] ||| [function_1] [function_2]	count=1963
function	and ||| and	count=2
arg	a known observatory/site ||| site_name	count=1
module	format for the type ||| io ascii	count=1
arg	reduction [arg] ||| [arg]	count=3
module	class that is the ||| builtin_frames	count=1
function	enabled in the ||| enabled	count=2
function	of parameters constant-valued columns ||| params	count=1
arg	from a file on ||| cls filename	count=1
function	quantity class ||| quantity class	count=2
module	one of the ||| io	count=1
module	a file ||| io	count=1
module	[module] file ||| [module]	count=1
function	a string for use ||| make	count=1
arg	in val1 ||| val1 val2	count=2
module	between ||| units	count=1
class	[class_1] writer ||| [class_2] [class_1]	count=3
class	in the table ||| table	count=1
function	data to the ||| data	count=1
arg	values along the given ||| values	count=1
arg	value does ||| value	count=1
function	frame was ||| is frame	count=1
function	[function_1] fits file ||| [function_1] [function_2]	count=2
arg	is now at (lon0 ||| lon0 lat0	count=1
function	field-specifier ||| normalize	count=1
function	string for ||| graph	count=1
module	votable ||| votable	count=2
class	this unit ||| unit	count=2
function	file it can be ||| file	count=1
function	generates a ||| make transform graph	count=1
class	initializes a ||| process pool executor	count=1
class	fitshdu fromhdulist(), ||| fits	count=1
arg	the table [arg_2] ||| [arg_2] [arg_1]	count=2
function	specific class of origin ||| skyoffset cls	count=1
function_arg	[function_1] name ||| [function_1] [arg_2]	count=10
function	for a specific ||| make skyoffset	count=1
module	object and then formats ||| utils	count=1
arg	new card [arg] existing ||| card [arg]	count=1
arg	in col str_vals and ||| cols	count=1
class	initializes a ||| pool	count=1
function_arg	[function_1] [arg_2] these attributes ||| [function_1] window [arg_2]	count=1
module	origin ||| coordinates	count=1
function	data as ||| as	count=1
function	tuple defining the ||| bounding box	count=3
arg	[arg_1] function ||| [arg_1] [arg_2]	count=2
function	the attributes of ||| attributes	count=1
function	that uniquely identifies ||| id	count=1
function	[function_1] column ||| [function_1] [function_2]	count=4
arg	check that the ||| obj	count=1
arg	a fitshdu from a ||| compress	count=1
function	the latitude ||| lat	count=1
module	handled in the ||| io	count=1
module	a ||| fits	count=4
class	a given bounding ||| bounding	count=1
function	to get grid ||| get frequency grid	count=1
arg	two ||| y	count=11
function	replaces ||| format doc	count=1
function	the ascii ||| ascii	count=1
class	file header s in ||| header formatter	count=1
class	model classes or ||| model meta	count=2
class	matplotlib ||| curved	count=1
arg	pixel to ||| pixel	count=1
function	a set of options ||| option	count=1
module	else convert ||| constants	count=1
class	the index ||| index	count=4
arg	_boundingbox with a __call__ ||| cls func sig	count=1
module	of the data columns ||| io votable	count=1
arg	key as a ||| key	count=1
arg	to a function ||| function declare metadata	count=3
function	[function] maps ||| bind [function]	count=3
class	cutout ||| cutout2d	count=1
function_arg	[function_1] angle represented ||| [function_1] float [arg_2]	count=1
function	barycentric ||| body barycentric	count=2
arg	unit by default return ||| unit	count=1
function_arg	[function_1] refers to ||| [arg_2] [function_1]	count=5
arg	for data_format ||| data_format data_class	count=1
function	given ||| to	count=1
module	end of the ||| io fits	count=1
function	tuple that index ||| from index	count=2
arg	with right ||| right	count=1
class	currently ||| xmlwriter	count=1
module	the coordinates ||| coordinates	count=1
class	energy ||| w0wa cdm	count=3
class	a stretch ||| inverted contrast bias stretch	count=1
module	a functionquantity ||| units	count=1
function	column [function] ||| scalar to [function]	count=3
module	return the items ||| io	count=1
function	add an item ||| add	count=1
function	classmethod) ||| isinstancemethod	count=1
class	parent class ||| header	count=1
function	as a ||| represent as	count=1
function	for a ||| of site	count=1
arg	a ||| a bins range weights	count=1
module	of the input array ||| io fits	count=1
class	[class_1] cutoff ||| [class_2] [class_1]	count=2
function	that ||| prepare	count=1
module	an hdu by index/name ||| io fits hdu	count=1
function	from a list ||| init from list	count=2
function	[function_1] to hours ||| [function_2] [function_1]	count=4
function	fill [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] specific mtype ||| [function_1] notification [arg_2]	count=1
function	cosmology instance from a ||| cosmology from	count=1
module_class	a dictionary detailing information [module_1] [class_2] hdu within any associated ||| [module_1] hdu [class_2] hdu fileinfo	count=2
arg	units ||| unit	count=1
function	name ||| name	count=7
module	fromhdulist(), but creates ||| hdu	count=1
module	string for use with ||| coordinates builtin_frames	count=1
function	parse the ||| parse	count=3
arg	include_names [arg_2] ||| [arg_2] [arg_1]	count=3
arg	of a value ||| value	count=1
module	version of ||| extern	count=1
arg	format and scale ||| format scale	count=3
module	the values ||| io	count=2
module	like fitshdu ||| hdu	count=1
function	[function_1] first ||| [function_2] [function_1]	count=1
function	the values of ||| values	count=1
module	a ||| utils	count=2
function	need to be resized ||| flush resize	count=1
arg	names [arg] ||| table names [arg]	count=1
function_arg	given [arg_2] ||| [arg_2] [function_1]	count=2
function	proper kpc [function_2] ||| [function_1] [function_2]	count=3
class	progress [class_2] ||| utils [class_1] [class_2]	count=8
function_arg	[function_1] value ||| [function_1] [arg_2]	count=11
class	create a quantity view ||| quantity	count=1
function	registered units ||| units	count=1
function	[function_1] sentence from ||| [function_2] [function_1]	count=3
function	messages [function_1] [function_2] ||| [function_1] [function_2]	count=2
class	table ||| table	count=12
arg	output a ||| table output	count=1
class	a stretch ||| linear stretch	count=1
class	the file is currently ||| xmlwriter	count=1
function	write a diff ||| diff	count=1
class	hdu and ||| hdu	count=1
function	into a floating point ||| float	count=1
class	names ||| base header	count=1
function	data to the specified ||| no transdata	count=1
arg	[arg_1] [arg_2] pair ||| [arg_1] [arg_2] exact	count=3
function	delete_catalog but ||| delete catalog by	count=2
function	validate a given ||| validate	count=1
class	of ||| location	count=1
module	warning for ||| coordinates builtin_frames	count=1
function	the configspec on subsections ||| configspec	count=1
module	one or more hdu ||| io fits hdu	count=1
arg	given model [arg_2] ||| [arg_2] [arg_1]	count=1
function	use with the coordinate ||| graph	count=1
function	remove the given entry ||| remove	count=1
function	azimuth ||| phi	count=1
function	eccentricity of ||| eccentricity	count=1
module	ordereddict from ||| table	count=1
module	the bscale value as ||| io fits hdu	count=1
class	for this column (i ||| base outputter	count=1
arg	the optical/ir using ||| t source_eps sky_eps dark_eps	count=1
module	[module] that ||| [module]	count=3
function	a subclass of ||| subclass	count=1
class	return an object of ||| earth location	count=1
class	for a ||| earth location	count=1
module	true : ||| nddata	count=1
arg	to redshift z ||| z	count=1
arg	name ||| cls	count=1
function_arg	[function_1] new ||| [function_1] frame [arg_2]	count=1
function	tuple that [function_2] ||| [function_2] [function_1]	count=1
module	file is currently ||| xml	count=1
arg	read [arg] and return ||| [arg]	count=1
class	model in ||| compound model meta	count=1
arg	object of this ||| cls	count=1
function	hours ||| hours	count=1
function	a string for ||| make	count=1
function	[function_1] visual properties ||| [function_1] [function_2]	count=1
class	string values in ||| base	count=1
arg	if class2 ||| class2	count=1
arg	name [arg] ||| [arg]	count=2
class	the number of coefficients ||| polynomial model	count=1
function	can be dropped to ||| simplify	count=1
function	probably contains [function_2] ||| [function_2] [function_1]	count=4
module	with [module] keyword stored ||| [module]	count=1
arg	from ||| filename	count=1
module	[module_1] that defines ||| [module_1] [module_2]	count=2
function	rstrip ||| rstrip	count=1
class	this is a ||| base	count=1
function	footprint ||| calc footprint	count=2
function_arg	[function_1] model ||| [function_1] center 1d [arg_2]	count=1
class	t ||| cdm	count=1
module	to match the input ||| io	count=1
function	the same type ||| equivalent units	count=1
class	client ||| sampclient	count=12
module	calculate the ||| stats	count=1
arg	[arg] values or ||| fileobj attr diffs [arg]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] msg_tag [arg_2]	count=8
module	two ||| convolution	count=1
function	a data ||| pkg data	count=1
function	parser (through use ||| empty	count=1
function	register a table ||| register	count=1
module	also clears ||| extern configobj	count=1
arg	a ~astropy wcs wcs ||| wcs origin mode	count=1
module	of the [module_2] ||| [module_1] [module_2]	count=14
function	deal with ||| array prepare	count=1
function	is a list ||| is int list	count=1
function	width ||| width	count=1
module	domain of the ||| io votable	count=2
module	also affects ||| extern configobj	count=1
function	[function_1] table by ||| [function_1] [function_2]	count=1
class	on ||| hdu	count=1
function	site ||| site	count=1
module	return the ||| io ascii	count=1
arg	function to account ||| weights x	count=1
class	with the ||| base	count=1
module_class	strings for ||| io ascii base	count=1
function	for a specific ||| cls	count=1
function	make a new function ||| make	count=1
function	nddata ||| support nddata	count=1
function	patch to ||| patch	count=1
module	an a ||| fits	count=1
class	summary information ||| info	count=1
module	comments ||| extern	count=1
function_arg	[function_1] [arg_2] parameters ||| [function_1] [arg_2] assume_regular_frequency	count=8
class	a quantity with ||| quantity	count=2
class	this frame ||| coordinate frame	count=2
class	this index to ||| index	count=1
class	on earth ||| earth	count=2
class	with the in-order ||| base representation	count=1
function	by ||| lookup by	count=1
function	to ||| to file like	count=1
arg	refers ||| idx	count=1
function	get [function_2] ||| [function_2] [function_1]	count=16
function_arg	[function_1] the axis ||| [arg_2] [function_1]	count=1
class	of the current unit ||| unit	count=1
module	normal writeto(), but prepends ||| fits	count=1
class	a tuple with the ||| base	count=1
arg	[arg_1] based ||| [arg_2] [arg_1]	count=4
class	replace ||| base data	count=1
function	result of ||| result	count=1
class	the data should ||| comp image hdu	count=1
function	ut1 - utc ||| ut1 utc	count=1
function	and dec ||| apparent position	count=1
module	this object's ||| nddata	count=1
function_arg	rename a [arg_2] ||| [arg_2] [function_1]	count=1
function	enable ||| enable	count=3
class	expected [class_2] ||| [class_1] [class_2]	count=2
function	set of skycoord ||| skycoord	count=1
class	coefficients in one ||| polynomial model	count=1
function	deal with a ||| array prepare	count=1
function	x format ||| x	count=1
class	this tree ||| tree	count=1
class	this table ||| table	count=1
module	store them in the ||| io	count=1
function	the decorated object ||| doc	count=1
function	contents of ||| contents	count=1
class	the column ||| column	count=3
class	a ||| pool executor	count=2
function	may ||| normalize keyword	count=2
arg	on evaluating [arg] on each ||| [arg]	count=2
module	equation of state ||| cosmology	count=2
function	class ||| skyoffset	count=2
class	internal function for ||| image base hdu	count=1
class	progress [class_2] ||| [class_2] [class_1]	count=16
class	[class_1] frame a ||| [class_2] [class_1]	count=2
arg	the other ||| other	count=1
module	the exact ||| io fits	count=1
function	nddata ||| nddata	count=1
function	of key data tuples ||| items	count=1
function	that ||| make	count=1
arg	angle around some axis ||| angle axis unit	count=1
function	generate [function] representation of ||| repr [function]	count=1
module_class	[module_1] [class_2] ||| [module_1] votable [class_2]	count=9
arg	for rotation by some [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
class	of this ||| earth location	count=1
class	bar ||| bar	count=4
arg	split line ||| line	count=1
function	then copy those which ||| copy	count=1
module	hdu by index/name ||| hdu	count=1
arg	if index ||| index	count=1
function	[function] of ||| generate unit [function]	count=2
class	the constant ||| constant	count=2
arg	include_names [arg_2] ||| names [arg_1] [arg_2]	count=3
module	be given as ||| utils	count=1
module	contain a field-specifier ||| io fits	count=1
class	class for ||| earth	count=1
class	file ||| fits hdu	count=2
function	or not a custom [function_1] [function_2] assigned to this model ||| modeling model [function_2] [function_1]	count=1
function	time using a ||| time	count=1
module_class	: uncertainty propagation ||| nddata unknown uncertainty	count=1
module	elements ||| votable	count=1
arg	to output a ||| output	count=1
module	fits card card objects ||| fits scripts	count=1
module	read from a fits ||| fits	count=1
function	uppercase ||| keyword	count=1
class	while displaying a progress ||| progress	count=1
function_arg	[function_1] float ||| [function_1] hours h [arg_2]	count=4
arg	frame's ||| new_representation in_frame_units	count=1
function	by querying the ||| of	count=1
class	associated ||| named	count=1
function	like :func add_catalog but ||| by url	count=1
function_arg	[function_1] mtype ||| [arg_2] [function_1]	count=4
module	from fits ||| fits hdu	count=1
class	a quantity with ||| quantity frame	count=1
function_arg	kernel arrays [arg_2] ||| [function_1] 2d [arg_2]	count=1
module	saving [module] ||| [module]	count=2
arg	objects ||| other	count=2
function	the input [function] is a ||| [function]	count=1
function_arg	[function_1] given unit ||| [arg_2] [function_1]	count=5
arg	[arg_1] most of ||| [arg_2] [arg_1]	count=1
arg	sequence to complete ||| fs timeout return_when	count=1
module	units so they ||| units	count=1
class	unit (e g ||| unit	count=1
arg	image_g [arg_2] ||| [arg_1] [arg_2]	count=1
function	the origin ||| origin	count=1
function_arg	[function_1] begin ||| [arg_2] [function_1]	count=1
arg	specified frame to ||| frame	count=1
arg	world to ||| world	count=1
arg	before or [arg_2] ||| header relativeinsert card [arg_1] [arg_2]	count=2
class	stddevuncertainty ||| std dev	count=1
function	perigee ||| perigee	count=1
function	b ||| a b	count=1
function	return ||| of site	count=2
arg	some [arg] ||| [arg] axis	count=1
module	the ||| time	count=2
function	returns a writable file-like ||| writable	count=1
arg	comment lines after ||| lines meta	count=1
function	integrand ||| integrand scalar	count=2
module	check ||| units function	count=2
class	like ||| fits hdu	count=2
module	id_ [module] may be ||| [module]	count=1
function	[function_1] same physical ||| [function_1] [function_2]	count=5
arg	n ||| n	count=3
module	coordinate ||| visualization wcsaxes	count=2
module	physical ||| units function	count=1
function	extirpolate the values ||| extirpolate	count=1
rep	[module_class_1] separation between ||| [module_class_1] [function_arg_2]	count=2
function	to draw only ||| draw	count=1
function	for the data ||| get pkg data	count=1
function	load observatory database from ||| get downloaded sites	count=1
arg	value [arg_2] ||| [arg_1] [arg_2]	count=1
class	of this index ||| index	count=1
class	of the coordinate ||| coordinate	count=1
function	the same frame as ||| equivalent frame	count=1
arg	included in output ||| table output	count=1
class	to ||| unit base	count=1
function_arg	[function_1] function or ||| [function_1] msg_tag [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] ticks [arg_2]	count=2
function	the mtype binding methods ||| declare	count=1
function	delete ||| delete	count=1
function	absorption ||| abs	count=2
function	[function_1] the write ||| [function_2] [function_1]	count=2
module	comments to [module] file-like object ||| [module]	count=1
class	bst ||| bst	count=1
arg	the supplied key ||| key	count=1
function	configspec ||| set configspec	count=2
arg	obj to self ||| obj	count=1
module	match the input ||| io fits	count=1
class	of dark energy equation ||| cdm	count=2
function	class of origin frame ||| make skyoffset	count=1
module	that is the ||| coordinates	count=1
class	the file is ||| xmlwriter	count=1
module	file ||| fits hdu	count=2
function	[function_1] votable ||| [function_1] [function_2] source	count=1
module	and return the ||| io	count=2
arg	before or after an ||| before after	count=1
function	string ||| make transform	count=1
class	_compoundmodel when either model ||| model meta	count=1
class	header to ||| header	count=1
function	in ||| in true	count=1
class	this ||| nddata array	count=1
function	noise ||| noise oir	count=1
class	classmethod to convert ||| card	count=1
function	extract the keyword ||| parse comment	count=1
class	unit ||| named unit	count=2
module_class	of [class_2] ||| [module_1] [class_2]	count=2
arg	file ||| filename	count=2
function	unit ||| format unit	count=1
function	masks ||| masks	count=1
function	contain a field-specifier to ||| keyword	count=1
arg	or dtd ||| filename schema_file	count=1
arg	in a fits file ||| filename	count=1
arg	[arg_1] scale try ||| [arg_1] [arg_2]	count=4
arg	beautifulsoup ||| soup	count=1
function	to a proper kpc ||| kpc proper	count=1
arg	string into a table ||| table	count=2
module	elements in the ||| io votable	count=1
arg	[arg] the ||| [arg] index name	count=2
arg	by taking the ||| x_range y_range factor	count=1
arg	the calls binding table ||| declare	count=1
arg	arrays ||| arrays	count=3
function	that uniquely identifies the ||| id	count=1
function	list of columns ||| list	count=1
class	of the instance and ||| base representation	count=1
function	frame was created with ||| frame	count=1
module	xml file against a ||| utils xml	count=1
module	that ||| fits	count=1
module_class	a dictionary detailing information [module_1] [class_2] any associated file ||| [module_1] hdu [class_2] hdu fileinfo	count=1
arg	left and [arg_2] ||| [arg_2] [arg_1]	count=6
module	dtype object an a ||| fits	count=1
function	or file-like object ||| get file	count=1
module_class	for the resource_ ||| io votable resource	count=1
class	[class_1] law ||| [class_2] [class_1]	count=8
module	match the input ||| io fits hdu	count=1
arg	[arg_1] local ||| [arg_1] [arg_2]	count=2
class	of the dark energy ||| lambda cdm	count=1
arg	which are valid converters ||| converters	count=1
function_arg	poisson parameter [arg_2] ||| [function_1] conf interval [arg_2]	count=3
module_class	[module_1] resource_ element ||| [module_1] [class_2] extra	count=1
function	the fill value of ||| fill value	count=1
arg	python operator (represented by ||| mcls operator	count=1
function	notification to a ||| receive notification	count=1
function	grid parameters from ||| frequency grid	count=1
arg	a ||| obj	count=1
function	the cutout ||| cutout	count=3
function	one in which ra ||| in	count=1
function	the ||| format	count=2
class	either model in the ||| compound model meta	count=1
class	with ||| function	count=1
class	the quantity ||| quantity	count=2
function	matrix [function_2] ||| [function_2] [function_1]	count=3
module	r ||| cosmology	count=1
function	[function_1] kernel ||| [function_2] [function_1]	count=1
module	like fitshdu fromhdulist(), ||| fits	count=1
function	a latex representation ||| repr latex	count=2
class	of this column ||| table base column	count=1
arg	[arg_1] x ||| [arg_2] [arg_1]	count=1
function	class that is ||| cls	count=1
function	warn or raise an ||| warn or raise	count=1
function_arg	[function_1] using ||| [arg_2] [function_1]	count=1
function_arg	to unicode [arg_2] ||| [arg_2] [function_1]	count=3
class	modifies ||| fitter	count=1
function	right division ||| rtruediv	count=1
function_arg	indices given [arg_2] ||| [arg_2] [function_1]	count=2
function	readable ||| readable	count=1
module	values ||| io ascii	count=1
function	a filename or file-like ||| file	count=1
function	for a transformation ||| get transform	count=1
module_class	parameter [class_2] ||| [module_1] [class_2]	count=2
arg	the internal _format scale ||| format scale	count=1
class	that the ||| quantity	count=1
function	[function_1] a string ||| [function_2] [function_1]	count=6
arg	given namespace ||| namespace	count=1
arg	join_type ||| join_type	count=2
function	convert a set ||| to	count=1
function_arg	bin width [arg_2] ||| [function_1] [arg_2]	count=1
arg	this ||| cls	count=1
module_class	[module_1] [class_2] ascii table (ascii=none means ||| [module_1] [class_2]	count=4
arg	for [arg] ||| [arg]	count=1
arg	is ||| cls	count=2
function	and then ||| format	count=1
class	return ||| nonstandard	count=1
arg	fields are unique by ||| fields	count=1
function	before ||| before	count=1
module	model inputs--that ||| modeling	count=1
arg	value that may ||| cls	count=1
function	for ascii table columns ||| ascii	count=1
class	state at ||| w0wa	count=1
function	[function] maps the ||| bind [function]	count=3
class	aggregate each [class] the ||| table [class]	count=1
module	the meat ||| io fits	count=1
arg	file-like [arg] can be ||| [arg]	count=1
arg	parameter confidence interval given ||| n interval	count=1
arg	package ||| package encoding cache	count=1
function	in ||| in	count=3
module	the x ||| io	count=1
module	version ||| extern configobj	count=2
function_arg	density [arg_2] ||| [function_1] [arg_2]	count=1
class	a stretch ||| inverted hist eq stretch	count=1
class	the hdu and ||| hdu	count=1
module_class	returns a dictionary detailing [module_1] [class_2] hdu within any associated ||| [module_1] [class_2]	count=2
function	comment ||| handle comment	count=1
arg	whether the given beautifulsoup ||| soup	count=1
module	version ||| configobj	count=1
module	from [module_2] ||| [module_1] [module_2]	count=2
function	an exception ||| format exception	count=1
class	of the coordinate ||| base coordinate frame	count=1
function	we create [function_2] ||| [function_2] [function_1]	count=2
class	summary information about data ||| data info	count=1
module_class	[module_1] this values_ ||| [module_1] votable [class_2]	count=2
arg	iers_a and ||| cls iers_a	count=1
function	to ||| unit to	count=1
function	single fits file ||| file	count=1
class	hermite ||| hermite2d	count=2
module	values [module] ||| [module]	count=1
arg	from ||| cls	count=5
class	with ||| representation	count=1
module	by [module] ||| [module]	count=4
class	html ||| html	count=1
class	smoothly broken [class] law ||| smoothly broken [class]	count=1
module	~astropy units ||| units	count=1
arg	fields ||| fields	count=1
function	[function_1] html content ||| [function_1] [function_2]	count=1
class	bounding box sequence against ||| bounding box	count=1
function	use ||| make transform	count=1
function	[function_1] string-like ||| [function_1] [function_2]	count=1
module	fitshdu fromhdulist(), but creates ||| fits hdu	count=1
function	two numpy recformats ||| cmp recformats	count=1
function	matrix ||| matrix	count=8
module_class	as strings [class_2] ||| [module_1] [class_2]	count=8
class	the data ||| comp image hdu	count=1
function	a string representation of ||| repr	count=2
module_class	the meat [class_2] ||| [module_1] [class_2]	count=2
function	such a thing ||| mode	count=1
module	energy equation ||| cosmology	count=2
function	a ~numpy ndarray to ||| array to file like	count=1
function	configspec on ||| set configspec	count=1
class	timing results without repetition ||| run time predictor	count=1
class	a ||| section	count=1
class	name [class] is used ||| unit [class]	count=1
function	[function_1] arbitrary ||| [function_1] [function_2]	count=5
module	in a fits file ||| fits	count=3
module	configobj ||| configobj	count=2
arg	[arg_1] position ||| array array_large [arg_1] [arg_2]	count=1
function	minute second tuple ||| hms	count=1
module	formats it ||| utils	count=1
module	object with the ||| io	count=1
module	and minor axes in ||| visualization wcsaxes	count=2
function_arg	[function_1] frequency ||| [arg_2] [function_1]	count=2
function	fits file returning ||| file	count=1
function	a proper kpc ||| kpc proper	count=2
function	minute second ||| hms	count=3
function	spherical polar ||| spherical	count=1
module	info objects for the ||| io votable	count=1
arg	subsampling factor ||| position subsampling	count=1
function	a string for use ||| make transform graph	count=1
module	the implementations ||| io fits	count=1
function	for a votable field ||| votable	count=1
function	get slices for ||| overlap slices	count=1
class	uri to an ||| link	count=1
function	[function] f ||| [function]	count=1
function_arg	[function_1] frame ||| [arg_2] [function_1]	count=7
module	all data ||| table	count=1
class	in ||| time	count=1
class	determined ||| reader	count=1
function	get all ||| get	count=1
function	[function_1] noise ratio ||| [function_2] [function_1]	count=2
module	replaces the ||| utils	count=1
function	reset the current ||| reset	count=1
arg	individual ||| indent_string entry this_entry comment	count=1
function	to a file ||| to file	count=1
arg	to output ||| table output	count=1
class	stretch ||| asinh stretch	count=1
module	fitshdu ||| hdu	count=1
function_arg	apparent position [arg_2] ||| [arg_2] [function_1]	count=2
module	axes in the middle ||| wcsaxes	count=2
function	ascii table columns to ||| ascii	count=1
module	given the keyword ||| io	count=1
arg	[arg_1] package and ||| [arg_1] [arg_2]	count=2
function	coordinates ||| coordinates	count=2
function	bayesian [function_2] ||| [function_1] [function_2]	count=4
module	in the document for ||| io	count=1
class	search ||| daophot inputter	count=1
arg	table [arg_2] ||| [arg_2] [arg_1]	count=5
function	running ||| set running	count=1
class	a cartesianrepresentation with the ||| cartesian representation	count=1
module	argument is an ||| utils	count=1
function	a number split it ||| split	count=1
arg	the left table with ||| left	count=1
function	data file from ||| pkg data	count=1
function	[function_1] image ||| [function_1] [function_2]	count=1
function	a schema ||| schema	count=1
function	create a ||| create	count=2
function	only inside a with ||| temp	count=1
function	[function_1] data ||| [function_1] [function_2]	count=2
module	method in the ||| io fits scripts	count=1
function	to an [function] if ||| make [function]	count=1
function	[function_1] reader for ||| [function_2] [function_1]	count=1
function	checks if the ||| convert	count=1
arg	check that the value ||| value	count=3
arg	[arg_1] val2 format ||| time get time fmt [arg_1] [arg_2]	count=1
module	file-like object ||| utils	count=1
class	bounding box sequence ||| bounding box	count=2
function	manager to temporarily enable ||| enable	count=1
function	to getregisteredclients ||| get registered clients	count=2
function	kpc [function_2] ||| [function_1] comoving [function_2]	count=3
function_arg	groups [arg_2] ||| [function_1] by [arg_2]	count=2
class	that also affects ||| section	count=1
function	[function_1] geodetic coordinates ||| [function_1] [function_2]	count=1
function	header [function_2] ||| [function_2] [function_1]	count=8
module	the custom quoting behavior ||| io	count=1
module_class	[module_1] progress bar ||| [module_1] [class_2]	count=2
arg	of body body ||| body time ephemeris	count=1
function	table file ||| table	count=1
module	scalars/sections also ||| extern configobj	count=1
function	format a ||| format	count=1
function	a list ||| list	count=6
class	overrides the default behavior ||| time	count=1
module	objects describing the ||| io fits hdu	count=4
function	returns a string ||| degrees to string	count=1
function	convert to a ||| to	count=1
module	index value in the ||| io fits	count=1
class	transformation from the fromsys ||| transform	count=1
function	the range [function_2] ||| [function_2] [function_1]	count=4
function	[function_1] list of ||| [function_1] int [function_2]	count=1
function	use ||| graph	count=1
function	position in ||| position	count=2
class	header ||| ipac header	count=1
class	mtypes the client wishes ||| sampclient	count=1
module	the futures in ||| compat futures	count=1
function	a astropy table ||| table	count=1
class	possible for unknown ||| unknown	count=1
module	file on ||| fits hdu	count=1
function	all [function] in the ||| iter [function]	count=1
arg	[arg_1] [arg_2] ||| [arg_1] useblanks bottom [arg_2]	count=3
function	contain a field-specifier ||| normalize keyword	count=1
arg	fit ||| y z	count=3
arg	the specified name ||| name	count=1
arg	function ||| function declare metadata	count=3
function	mime content ||| content	count=1
function	ascii table format spec ||| ascii	count=1
arg	the package ||| package encoding	count=1
arg	an array [arg_2] ||| [arg_1] [arg_2]	count=1
function	the bases of the ||| bases	count=1
module	an object of this ||| coordinates	count=1
arg	bins ||| success bins	count=1
arg	of _boundingbox with a ||| cls func sig	count=1
function	can ||| array prepare	count=2
module	:class ||| io votable	count=1
function	has been modified ||| modified	count=1
function	[function_1] matrix ||| [function_2] [function_1]	count=9
arg	and scale try ||| scale	count=1
function	parameter for non-relativistic matter ||| om	count=1
function	[function_1] but with ||| [function_1] [function_2]	count=5
class	class ||| table header	count=1
module	fits format spec to ||| io fits	count=1
module	then formats it ||| utils	count=1
module	get [module] and latitude ||| [module]	count=1
module	fitshdu fromhdulist(), but creates ||| io fits	count=1
arg	the requested julian date ||| jd	count=2
module_class	not the [class_2] ||| [module_1] [class_2]	count=8
module	value ||| io fits	count=2
class	bar via the ||| bar	count=1
module	hub ||| vo samp	count=3
function	delete_catalog [function_2] ||| [function_2] [function_1]	count=1
arg	defined by lon lat ||| lon lat	count=1
arg	given observed counts ||| sigma background	count=1
function_arg	[function_1] urls ||| [function_1] [arg_2]	count=3
class	partial function for a ||| predictor	count=1
arg	the checksum value ||| value	count=1
module	also ||| extern	count=2
function	on-sky matches ||| match coordinates sky	count=1
class	the location ||| location	count=2
function	frame ||| is frame	count=1
module_class	[module_1] columns ||| [module_1] [class_2]	count=5
function	neutrino species? ||| nu	count=1
function_arg	[function_1] val1 ||| [function_1] [arg_2]	count=2
class	[class_1] cutoff power ||| [class_1] [class_2]	count=2
function	exception raised by the ||| exception	count=1
arg	the given urls blocks ||| urls cache	count=1
function	to the data ||| download	count=1
class	exponential cutoff power law ||| exponential cutoff power law1d	count=1
arg	unitswarning about ||| standard_name format_decomposed	count=1
arg	equivalent semantics given ||| datasum_keyword	count=1
function	a string to a ||| string	count=1
function	site registry the first ||| site registry	count=1
module	in an actual fits ||| fits	count=1
function	of a filename or ||| file	count=1
class	from value in logarithmic ||| log unit	count=1
module	a field-specifier to ||| io	count=1
function	decimal hour value ||| hours	count=1
class	the unit ||| named unit	count=2
function	list [function_2] ||| [function_2] [function_1]	count=6
function	b [function_2] ||| [function_1] [function_2]	count=1
function	file [function] which should ||| tmp [function]	count=1
function	contains html ||| html	count=1
arg	class1 ||| class1	count=1
class	cartesianrepresentation with the ||| cartesian representation	count=1
function	object and ||| doc	count=1
class	convert this ||| sky	count=1
function	matches of a coordinate ||| match	count=2
class	a field instance ||| field	count=1
module	param_ elements in the ||| io	count=1
arg	refers to ||| idx	count=1
function	[function_1] position in ||| [function_2] [function_1]	count=1
function	update the [function_2] ||| [function_1] [function_2]	count=1
arg	n of [arg_2] ||| [arg_1] [arg_2]	count=1
arg	by lon [arg_2] ||| [arg_2] [arg_1]	count=1
module	against the ||| io	count=1
function	ra and dec are ||| apparent position	count=1
function	a ||| make skyoffset	count=2
class	from a file ||| hdu	count=1
function	[function_1] that index ||| [function_1] [function_2]	count=1
function	delete a catalog from ||| delete catalog	count=1
arg	the left ||| left	count=1
function	ticks ||| ticks	count=2
arg	data ||| cls data sep	count=1
arg	m nearest points ||| m	count=1
module	meaning of ||| votable	count=1
module	the file ||| io fits	count=3
function	it is [function_2] ||| [function_2] [function_1]	count=2
class	comparison [class] false ||| [class]	count=1
class	names of the ||| base	count=1
arg	the value of ||| value	count=1
class	return a new ||| table	count=1
function	object with ||| to	count=1
module	format for the ||| io	count=1
function_arg	from [arg_2] ||| [function_1] unit summary [arg_2]	count=2
function	replace string values ||| replace	count=1
arg	model constraints ||| model	count=1
module	deal with a functionquantity ||| units	count=1
module	that start with the ||| io	count=1
class	cutoff power ||| cutoff power	count=4
module	more hdu ||| fits hdu	count=1
class	from ||| fits hdu	count=2
function	bin ||| knuth bin	count=1
module	in the default case ||| io ascii	count=1
function	value is [function] ||| [function] commentary	count=3
module	the data ||| io fits hdu	count=1
function	with ||| base	count=1
class	minimize ||| lev mar lsqfitter	count=1
arg	other is of ||| other	count=1
function	parameter array to an ||| model to	count=1
function_arg	write out [arg_2] ||| [arg_2] [function_1]	count=1
arg	~astropy ||| xp yp wcs	count=1
class	a stretch ||| stretch	count=13
arg	an array with ||| array	count=1
class	[class] that are ||| [class]	count=1
module	returns the number of ||| utils	count=1
class	in-order ||| base representation	count=1
function	positive index ||| positive index	count=1
function	get [function_2] ||| [function_1] [function_2]	count=12
arg	if [arg] is a ||| [arg]	count=1
function	data file from ||| get pkg data	count=1
arg	new card [arg] ||| card [arg]	count=2
function	valid url ||| url	count=1
class	string values ||| base data	count=1
class	a cartesianrepresentation with the ||| cartesian representation frame	count=1
function	the configspec ||| set configspec	count=1
function	from the origin to ||| r	count=1
module	currently in ||| utils xml	count=1
class	as calculated from its ||| shaped like ndarray	count=1
function	extent of a ||| extent	count=1
arg	a unit ||| unit	count=1
arg	only the given name ||| name	count=1
function_arg	entire element this ||| element tag	count=1
function	[function_1] and ||| [function_2] [function_1]	count=9
function	frame was created with ||| is frame attr	count=1
function	barycentric position and velocity ||| barycentric posvel	count=1
module	default value of the ||| io	count=1
function	set masks ||| set masks	count=2
arg	(dtype kind='u') ||| python3_only	count=1
function	that ||| cls	count=1
arg	table [arg] this ||| [arg]	count=1
function	an existing ||| overwrite existing	count=1
function	is ||| is float	count=1
arg	method standard profile only ||| private_key	count=1
function	reload ||| reload	count=1
function	the possible wildcarded subtypes ||| subtypes	count=1
module	in ||| utils xml	count=2
arg	z the ||| z	count=4
function	for use ||| make transform graph	count=1
arg	coordinate transform from the ||| fromsys tosys transform	count=1
arg	hdulist [arg_2] ||| [arg_2] [arg_1]	count=2
module	a specific class of ||| coordinates	count=1
module	in the ||| io fits scripts	count=1
function	[function_1] content ||| [function_1] [function_2] type content_type	count=4
function	set ut1-utc [function_2] ||| [function_1] [function_2]	count=1
function	columns defined as columns ||| columns	count=1
class	returns ||| xmlwriter	count=1
function	[function_1] [function_2] format object regardless of ||| [function_1] [function_2] format cls format	count=6
function	or class ||| receive	count=1
function_arg	source flag for ||| source i	count=3
function_arg	schema [arg_2] ||| [arg_2] [function_1]	count=1
function	is currently connected to ||| is connected	count=1
class	[class_1] this ||| [class_2] [class_1]	count=3
function	view of ||| view	count=1
module_class	the resource and ||| io votable resource	count=1
function	from the provided args, ||| parse inputs	count=1
arg	the m nearest ||| m	count=1
function	location ||| location	count=1
module_class	the transform ||| coordinates transform	count=1
function_arg	[function_1] key ||| [arg_2] [function_1]	count=4
function	the [function] of ||| [function]	count=2
function	func once for ||| timed pfunc	count=1
function	model fit at a ||| periodic fit	count=1
function	specific class ||| make skyoffset cls	count=1
module	if ||| io fits	count=1
class	[class_1] box ||| [class_1] [class_2]	count=3
arg	to ||| x	count=2
function	physical type ||| physical type	count=4
module	check that ||| extern configobj	count=1
arg	join_type of ||| join_type metadata_conflicts	count=1
arg	specified keyword ||| keyword	count=1
module	this ||| coordinates	count=2
arg	[arg_1] right ||| [arg_1] [arg_2]	count=5
function_arg	array [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] [function_2] ||| [function_2] distance [function_1]	count=1
function	the error ||| error	count=1
function	is called ||| array	count=1
function	first iterates over keys ||| iter	count=1
module	if the user ||| io fits	count=1
arg	:class table ||| table	count=1
arg	a coordinate transform ||| tosys transform	count=1
module	with the physical unit ||| units	count=1
module	field in the ||| io fits	count=1
module	unit this ||| units	count=1
module	:class coldefs objects describing ||| hdu	count=2
function	the precession matrix ||| precession matrix	count=4
class	the sorted [class_2] ||| [class_2] [class_1]	count=2
module	the table in ||| io	count=1
class	the ||| xmlwriter	count=2
function	positive index or ||| positive index of	count=2
class	of the row ||| row	count=1
module	the data ||| io	count=4
function	by name ||| of	count=1
module	to the current samp ||| samp	count=1
function	ut1-utc source ||| ut1 utc source	count=2
function	data files in ||| data	count=2
function	existing function [function_2] ||| [function_2] [function_1]	count=2
arg	data ||| nrows	count=1
class	a file on ||| hdu	count=1
arg	x ||| x success	count=1
module	may contain a field-specifier ||| io fits	count=1
module	for the futures ||| compat futures	count=1
function	use with the ||| make transform	count=1
arg	for rotation by some [arg_1] [arg_2] ||| coordinates rotation matrix [arg_1] [arg_2]	count=2
function_arg	convolve an array ||| convolve array	count=1
arg	[arg_1] by performing ||| [arg_2] [arg_1]	count=1
arg	value does not ||| value	count=1
arg	whose value ||| value	count=1
function	3d space ||| 3d	count=1
class	a list ||| list	count=1
module_class	as strings for ||| io ascii base	count=1
function	total intensity from the ||| intensity	count=1
function	sets the return value ||| set	count=1
function_arg	[function_1] lines after ||| [arg_2] [function_1]	count=1
function	extract the keyword value ||| parse comment	count=1
function_arg	[function_1] [arg_2] parameters ||| [function_1] [arg_2]	count=8
function	given a astropy table ||| table	count=1
function	from data to the ||| get	count=1
function	the scale of ||| scale	count=1
module	if ||| nddata	count=1
class	run time in ||| run time predictor	count=2
module	but ||| hdu	count=1
function	dec are defined ||| apparent position	count=1
function	[function_1] copy those ||| [function_1] [function_2]	count=3
module	base chain return the ||| io	count=1
function	can deal with ||| prepare	count=1
arg	size ||| size	count=2
function_arg	draw [arg_2] ||| [arg_2] [function_1]	count=1
function	with a ||| array prepare	count=1
module	actual fits ||| fits	count=1
class	also clears ||| section	count=1
arg	a unit returns ||| unit	count=1
module_class	table [class_2] ||| [class_2] [module_1]	count=1
function	then formats it ||| doc	count=1
function	check that numpy is ||| check numpy	count=1
module	like fitshdu ||| fits	count=1
function	that handle spectral ||| spectral	count=1
class	the unique ||| server	count=1
module	futures in the given ||| futures	count=1
function	a float [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] hour ||| [function_1] dms [arg_2]	count=1
function	[function_1] first sentence ||| [function_2] [function_1]	count=1
arg	given urls blocks until ||| urls cache	count=1
arg	and jd2 this is ||| parent	count=1
module	potentially update the ||| utils	count=1
arg	an [arg] ||| index [arg]	count=2
arg	and memmap ||| output_verify verbose closed	count=1
arg	[arg_1] and val2 ||| [arg_1] [arg_2]	count=4
class	tuple with ||| representation	count=1
function	a cosmology [function_2] ||| [function_2] [function_1]	count=3
module	against the appropriate ||| io votable	count=1
class	checks ||| nduncertainty	count=1
function	and ||| get	count=3
module	axes in ||| wcsaxes	count=2
module	when the ||| utils	count=1
function	list ||| list	count=8
function	for ||| cls	count=1
class	card image ||| card	count=5
function	x ||| x	count=3
function	gets the site ||| get site	count=1
function	get a frame ||| get	count=1
module_class	execute the [class_2] ||| [module_1] [class_2]	count=2
function	~numpy ndarray to a ||| array to	count=1
arg	that the arrays ||| arrays	count=2
function	astropy source distribution ||| astropy source	count=2
class	stretch ||| contrast bias stretch	count=2
module	output is a list ||| ascii	count=1
module	[module_1] the coosys_ ||| [module_2] [module_1]	count=1
module	associated fits file and ||| fits	count=1
function	unit and adjust ||| and adjust	count=1
module_class	[module_1] current hdu ||| [module_1] [class_2]	count=2
function	rotate the polygon ||| rotate polygon	count=2
function	noise ||| noise	count=1
function	[function_1] length ||| [function_2] [function_1]	count=1
class	with a ||| function quantity	count=1
arg	[arg_1] a local ||| [arg_2] [arg_1]	count=4
function	update [function_2] ||| [function_1] [function_2]	count=1
function	proper ||| proper	count=2
class	that the ||| function	count=1
function	value can have arbitrary ||| can have arbitrary	count=1
function	a copy ||| copy	count=6
function_arg	[function_1] confidence interval ||| [function_1] conf interval [arg_2]	count=1
function_arg	column object [arg_2] ||| [arg_2] [function_1]	count=3
function	call ||| receive call	count=1
function	filename or file-like object ||| get file	count=1
class	hdu data ||| hdu	count=1
module	for the element ||| io votable	count=2
class	image data by ||| image	count=1
arg	model by taking the ||| model x_range	count=2
function	indentation levels the file ||| indentation	count=1
function	the widths of each ||| metrics	count=1
module	the items of ||| io fits	count=1
function	parse the xml ||| parse	count=1
class	logger ||| logger	count=1
function	the indices ||| indices	count=1
class	quantity objects ||| quantity	count=3
function	return a cosmology ||| get cosmology	count=1
module_class	the verification ||| io fits verify	count=1
function	use ||| make transform graph	count=1
function	table definition keywords ||| table keywords	count=2
class	table-like hdus must provide ||| like	count=1
function	out of the total ||| console	count=1
module	[module] of ||| vo [module]	count=1
arg	units ||| equivalencies units	count=1
module	of ||| io	count=3
function	by ||| by	count=2
function	w ||| w	count=1
function	of a ||| file	count=1
class	[class_1] array ||| [class_2] [class_1]	count=10
arg	two dimensional ||| x y amplitude x_0	count=1
class	exponential ||| exponential	count=2
function	bases of ||| bases	count=1
function	critical [function_2] ||| [function_1] [function_2]	count=4
function	same ||| same	count=1
function	computes on-sky separation ||| separation	count=1
function	core records [function] which includes ||| [function]	count=1
function	reader ||| reader	count=2
class	for ipython's ||| meta	count=1
arg	val1 and val2 as ||| val1 val2	count=1
function	of this ||| of site	count=1
function	from an ||| from	count=2
function	unless no further hdus ||| read next	count=1
function	[function_1] neutrino species? ||| [function_1] [function_2]	count=2
function	manager to temporarily log ||| log	count=1
function	the ||| make skyoffset cls	count=1
module	t ||| cosmology	count=1
function	masked [function_2] ||| [function_2] [function_1]	count=1
arg	a table object to ||| table	count=1
function	return a copy of ||| copy	count=1
module	implement ||| io fits	count=1
function	diameter [function_2] ||| [function_1] [function_2]	count=1
function	[function] checkout ||| is astropy [function]	count=1
arg	from the given urls ||| urls cache show_progress timeout	count=1
arg	copy is true ||| copy	count=1
function	running or [function_2] ||| [function_1] [function_2]	count=1
function	injects entry [function_2] ||| [function_2] [function_1]	count=1
module	copy the ||| io fits	count=1
arg	object from a ||| cls	count=1
module	like fitshdu fromhdulist(), ||| fits hdu	count=1
module	units numbers whose ||| units	count=1
arg	a file ||| file	count=1
class	unit ||| unit	count=10
function	a diff between two ||| diff	count=1
module	file ||| io	count=1
module	the simple or ||| io fits hdu	count=1
class	hdus ||| hdu	count=1
function	value that may ||| normalize	count=1
function	to get ||| get frequency	count=1
function	from ||| from table column	count=2
module_class	[module_1] [class_2] ||| [module_1] fits [class_2]	count=6
function	an object ||| of	count=1
module	and angular units with ||| units	count=1
function	ref ||| ref	count=1
class	functionquantity ||| function quantity	count=2
module	or more hdu need ||| fits hdu	count=1
class	image data ||| image	count=2
class	coefficients in ||| polynomial	count=1
function	a new class that ||| make skyoffset	count=1
module	from the ||| io	count=4
arg	function to account ||| x	count=1
arg	new [arg] ||| columns [arg]	count=1
arg	given the supplied [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=20
class	the parameter ||| parameter	count=1
class	the data should be ||| hdu	count=1
class	by name ||| earth location	count=1
class	a functionquantity ||| function	count=1
function	noise ratio ||| noise	count=1
class	use a fast ||| fast	count=1
module	the in-order ||| coordinates	count=1
function	is a list ||| is float list	count=1
module	major and minor axes ||| wcsaxes	count=2
module	coordinates that ||| coordinates	count=1
function	long [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] a list ||| [function_1] [function_2]	count=1
arg	mtype [arg_2] ||| [arg_1] [arg_2]	count=1
class	derivative of 1d hermite ||| hermite2d	count=1
module	contain a field-specifier to ||| io	count=1
function	histogram function ||| histogram	count=1
arg	replaces the docstring ||| docstring	count=1
module	futures ||| compat futures	count=1
function	write method ||| write	count=2
function	[function_1] skycoord coordinates ||| [function_2] [function_1]	count=2
function	new ||| skyoffset cls	count=1
arg	class for a ||| cls	count=1
module	string for ||| coordinates	count=1
function_arg	[function_1] [arg_2] of a ||| [function_1] [arg_2]	count=12
function	[function] for ||| axis [function]	count=1
function	like :func delete_catalog but ||| delete catalog by	count=1
module	with a functionquantity ||| function	count=1
function	the configspec ||| configspec	count=1
arg	astropy table table ||| cls votable table	count=1
module	fitshdu ||| io fits hdu	count=2
class	representation ||| representation	count=1
arg	3 arrays image_r image_g ||| image_r image_g	count=1
function	for ascii table ||| ascii	count=1
function	[function_1] time ||| [function_2] [function_1]	count=7
function	kernel [function_2] ||| [function_1] [function_2]	count=2
class	to convert a ||| card	count=1
function	returns the size ||| size	count=2
module	and minor axes ||| wcsaxes	count=2
function	in radians ||| radians	count=3
module_class	[module_1] [class_2] ||| [module_1] ascii [class_2] call lines	count=1
arg	memmap object if ||| output_verify verbose closed	count=1
function	for :math ||| lambda	count=1
arg	a wcs ||| wcs	count=1
class	values in ||| base	count=1
arg	values before the given ||| values	count=1
function	distance from the origin ||| distance	count=1
function	a ||| cls	count=2
arg	standard locations ||| data_name	count=2
module	write ||| io votable	count=1
class	r t ||| cdm	count=1
class	this class ||| earth location	count=1
function	possible wildcarded subtypes ||| mtype subtypes	count=1
arg	values before the ||| values	count=1
module	also affects scalars/sections ||| extern	count=1
function	matches any ||| match	count=1
arg	given key data ||| key data	count=1
class	[class] given ||| progress bar [class]	count=1
module	coordinate ||| coordinates builtin_frames	count=2
function	with function unit ||| function	count=1
class	the sorted array ||| sorted array	count=4
function	heliocentric position [function_2] ||| [function_2] [function_1]	count=4
function	points to indices given ||| subpixel indices	count=1
arg	referenced ||| slice_	count=1
function	that is the ||| cls	count=1
arg	doesn't bypass string ||| key default	count=1
function	but the ||| by url	count=1
module	value that ||| io	count=1
arg	size ||| path size	count=1
function	[function_1] matches ||| [function_2] coordinates [function_1]	count=1
function	[function_1] [function_2] ||| [function_2] type [function_1]	count=5
module_class	a dictionary detailing information [module_1] [class_2] any associated file ||| [module_1] [class_2]	count=1
function_arg	[function_1] given namespace ||| [function_1] unit summary [arg_2]	count=1
class	of the [class] ||| [class]	count=1
module	of [module_2] ||| [module_2] [module_1]	count=35
class	[class] for ||| earth [class]	count=2
function	write a diff ||| diff keyword	count=1
arg	from ||| cls fileobj sep endcard	count=1
function	to unicode if a ||| a to	count=1
module	the current configobj as ||| extern configobj	count=1
function	file in ||| file	count=1
function	[function] self scale ||| time [function]	count=1
function	[function_1] groups ||| [function_2] [function_1]	count=2
arg	a file ||| cls	count=1
arg	coordinate transform ||| transform	count=1
function	neutrinos ||| onu0	count=1
class	object of ||| earth location	count=1
function	list of integers ||| int list	count=3
module	fits header ||| fits	count=1
arg	key in ||| key	count=1
function	from ||| fromfile	count=1
function	on kraft burrows and ||| mpmath kraft burrows	count=1
function	a field-specifier to ||| normalize	count=1
class	a ||| process pool executor	count=2
function	[function_1] of strings ||| [function_2] [function_1]	count=4
function	wraps ||| wraps	count=1
class	parabola ||| parabola1d	count=2
class	equivalent [class_2] ||| [class_1] [class_2]	count=1
class	the table ||| table	count=3
function	not a length ||| to and validate length	count=1
function	a maximum ||| max	count=1
function	a linear [function_2] ||| [function_1] [function_2]	count=1
function	for a specific class ||| skyoffset	count=1
function	distance from ||| distance	count=1
function_arg	[function_1] key and ||| [arg_2] [function_1]	count=1
function_arg	width [arg_2] ||| [arg_2] [function_1]	count=1
arg	urls blocks ||| urls cache show_progress timeout	count=1
module	field-specifier ||| fits	count=1
class	this item to ||| config item	count=1
arg	but creates ||| cls filename	count=1
function	object ||| site	count=1
function	[function_1] diameter ||| [function_1] [function_2]	count=1
function	new class that ||| make	count=1
arg	a function or class ||| function declare metadata	count=2
class	in this index ||| index	count=1
function_arg	[function_1] row ||| [arg_2] [function_1]	count=3
function	function quantity ||| quantity	count=1
module	when flushing the file ||| io fits	count=1
class	a file on ||| fits	count=1
function	the fill value ||| fill value	count=2
function	x y position in ||| position	count=1
function	representing the inverse ||| inverse	count=1
module	the domain see :attr ||| io	count=2
function_arg	new index [arg_2] ||| [function_1] [arg_2]	count=1
class	[class_1] law ||| modeling broken [class_1] [class_2]	count=1
arg	[arg_1] val2 ||| [arg_2] [arg_1]	count=5
function	as running ||| running	count=1
function	copy those which are ||| copy	count=1
function	for a specific ||| make skyoffset cls	count=1
function	return the size in ||| size	count=1
function_arg	radians to [arg_2] ||| [arg_2] [function_1]	count=2
function	a list of strings ||| string list	count=1
class	instance of the constant ||| constant	count=1
class	locations of this ||| valid	count=1
arg	to ||| x slope	count=1
function_arg	specified [arg_2] ||| [arg_2] [function_1]	count=2
function	transposed ||| transpose	count=1
function	for a transformation between ||| transform	count=1
module	a field-specifier to uppercase ||| io fits	count=1
class	contain ||| card	count=1
function	from data [function_2] ||| visualization wcsaxes wcsaxes [function_1] transform [function_2]	count=1
arg	a version of ||| a	count=1
function	a remote location ||| remote	count=1
function	directory has enough space ||| check free space in dir	count=1
function	division ||| rdiv	count=1
function	read the input table ||| read	count=1
arg	optical/ir using a ||| t source_eps sky_eps dark_eps	count=1
class	with the executor ||| executor	count=1
function	arg supplied this ||| arg	count=1
function	[function_1] a dict ||| [function_2] [function_1]	count=1
function	notebook ||| notebook	count=1
class	of ||| cdm	count=3
module	values as strings ||| io ascii	count=1
function	entry points ||| entry points	count=2
arg	urls blocks ||| urls cache show_progress	count=1
function	table instance from ||| from table	count=1
function	convert ||| hours to	count=1
arg	z ||| z	count=4
class	a uri ||| link	count=1
function	one in ||| in	count=1
arg	iers_a and ||| iers_a	count=1
arg	new fitshdu from ||| compress	count=1
function	numpy recformats ||| recformats	count=1
class	if this [class] has ||| base coordinate [class]	count=1
function	[function_1] registry ||| [function_1] [function_2]	count=3
arg	function func to ||| func	count=1
arg	parameter confidence interval ||| n interval	count=1
class	for ||| earth	count=1
class	this is ||| base	count=1
function	contents ||| contents	count=1
function	an astropy source ||| astropy source	count=1
module	new class that ||| coordinates builtin_frames	count=1
function	is ||| make	count=1
function	a list of ||| float list	count=1
function	has been modified this ||| modified	count=1
function	that is ||| make skyoffset	count=1
function	[function_1] type of ||| [function_1] [function_2]	count=2
arg	and exclude_names to a ||| exclude_names	count=1
module	is the ||| builtin_frames	count=1
function_arg	list [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] burrows ||| [function_2] [function_1]	count=8
class	groups in [class] based on ||| [class]	count=1
module	the converter ||| io	count=1
module	looks in both the ||| io votable	count=1
class	fits_rec ||| fits rec	count=1
function	object of ||| of site	count=1
class	creates a ||| hdu	count=1
function_arg	[function_1] table ||| [function_1] hdf5 [arg_2]	count=1
function	parallel from the ||| parallel	count=1
class	and modifies ||| fitter	count=1
function	a set of skycoord ||| skycoord	count=1
function_arg	slices [arg_2] ||| [arg_2] [function_1]	count=1
class	of the point s ||| spherical representation	count=3
function	add the checksum ||| add	count=1
function_arg	[function_1] coordinate transformation ||| [function_1] [arg_2]	count=1
function	[function] self ||| [function]	count=2
function	[function_1] diameter ||| [function_1] [function_2] distance	count=1
function	display minor [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] corresponding ||| [function_1] [function_2]	count=8
module	read ||| io votable	count=1
module	the columns ||| io fits	count=1
function	value of a ||| value	count=1
module	of the input ||| io fits	count=1
arg	unit ||| s unit	count=1
function	input ||| input	count=1
module	of origin ||| coordinates builtin_frames	count=1
arg	ufunc ||| obj context	count=1
function_arg	[function_1] bic ||| [arg_2] [function_1]	count=6
arg	within a given ||| searcharoundcoords	count=1
function	adjust physical ||| adjust physical	count=2
function	getregisteredclients ||| get registered clients	count=2
arg	enter your [arg] as an ||| [arg]	count=1
function	this module is ||| is	count=1
arg	[arg_1] package ||| [arg_2] [arg_1]	count=2
function	object of this class ||| site	count=1
arg	vo services ||| registry_url timeout	count=1
class	cross-referencing ||| coo sys	count=1
module	"unknown" : ||| nddata	count=1
module	use with the ||| builtin_frames	count=1
function	apparent position of ||| apparent body position	count=1
class	[class_1] classes ||| [class_1] [class_2]	count=4
module	object just copy the ||| io fits	count=1
function	for ||| of	count=1
module	create a new class ||| coordinates builtin_frames	count=1
function	[function_1] ticks are ||| [function_2] [function_1]	count=1
class	a record array with ||| base	count=1
function_arg	delete given [arg_2] ||| [arg_2] [function_1]	count=3
function	box we create ||| create bounding box	count=1
function_arg	[function_1] a function ||| [function_1] mtype [arg_2]	count=2
module	a new class ||| coordinates	count=1
module_class	the object [class_2] ||| [module_1] [class_2]	count=4
module	in the xml file ||| io votable	count=1
function	the table ||| identify table	count=1
arg	(which may be either ||| bounding_box	count=1
function	downloads multiple files in ||| files in	count=1
function	[function] all frame ||| frame [function]	count=3
function	new [function_2] ||| [function_2] [function_1]	count=1
function	with a functionquantity ||| array prepare	count=1
function	mantissa and ||| mantissa	count=1
function	read and parse a ||| read	count=1
module_class	[module_1] for cross-referencing ||| [module_1] votable [class_2]	count=1
arg	angle [arg_2] ||| [arg_2] [arg_1]	count=2
function	for a specific ||| skyoffset	count=1
function_arg	add subtract [arg_2] ||| [function_1] [arg_2]	count=1
function	pair ||| name	count=1
function	open a ||| open fileobj	count=1
function	baryonic matter ||| ob	count=1
function	origin ||| make	count=1
function	ndarray to a ||| to	count=1
function	invalidates the cache ||| cache	count=1
arg	the nearest ||| matchcoord catalogcoord nthneighbor storekdtree	count=1
arg	to a function ||| function declare	count=3
module	and the ||| io fits	count=1
function	source ||| source	count=4
function	the ||| graph	count=1
module	the 'mode' string ||| io fits	count=1
class	the data should ||| hdu	count=1
function	in parallel from the ||| in parallel	count=1
arg	urls ||| urls cache show_progress timeout	count=1
arg	read [arg] ||| [arg]	count=1
function	apply equivalence pairs ||| apply	count=1
function_arg	index [arg_2] ||| [arg_2] [function_1]	count=3
arg	[arg_1] array by ||| [arg_1] [arg_2]	count=3
function	transposed ||| t	count=1
class	can deal ||| function quantity	count=1
function	get a frame class ||| get	count=1
module	of origin frame ||| builtin_frames	count=1
module	that also affects scalars/sections ||| extern	count=1
module	current configobj ||| extern configobj	count=1
arg	docstring of the decorated ||| docstring	count=1
function	of state ||| w0	count=1
function	generates a ||| transform graph	count=1
function	find ut1 - utc ||| ut1 utc	count=1
module	it ||| utils	count=1
function	3-tuple or 2-tuple ||| tuple	count=1
arg	_boundingbox with a __call__ ||| func sig	count=1
function	fill value ||| fill value	count=2
function	frame was created ||| is frame	count=1
function	kpc [function_2] ||| [function_2] [function_1]	count=6
module	fromhdulist(), but creates a ||| fits hdu	count=1
function_arg	[function_1] wrap_angle ||| [arg_2] [function_1]	count=1
function	hash for ||| hash	count=1
module	check that the ||| function	count=1
class	energy ||| cdm	count=2
function_arg	get groups [arg_2] ||| [arg_2] [function_1]	count=2
arg	by taking the average ||| x_range factor	count=1
arg	the right ||| right	count=1
class	of this ||| location	count=1
function	(or the special ||| convert	count=3
module	but creates a ||| io fits hdu	count=1
function	a list ||| float list	count=1
function	datablock ||| multiline	count=1
class	w r t ||| w0wa	count=1
function_arg	subtract [arg_2] ||| [function_1] [arg_2]	count=1
module	integer index return the ||| io	count=1
class	when either model in ||| compound model	count=1
function	set the default value ||| set	count=1
arg	value and ||| cls value	count=1
arg	large array ||| cutout_position	count=1
module_class	limits (points_low points_high) ||| modeling tabular	count=1
module	fromhdulist(), but creates ||| fits hdu	count=1
class	contain table-like data ||| table like	count=1
module	the end of the ||| io fits	count=1
arg	file if not loaded ||| file cache	count=1
function	on any other ||| other	count=1
class	to this ||| base	count=1
module	can ||| units function	count=2
class	comments and ||| section	count=1
function	cip and the cio ||| get cip	count=1
arg	confidence interval in bins ||| bins range	count=1
function	prior ||| prior	count=1
module	of rows in the ||| io	count=1
arg	appropriate combination of iers_a ||| cls iers_a	count=1
function	angle or scalar coordinate ||| coord	count=1
function	read iers-a ||| read	count=1
function	using a iau precession/nutation ||| erfa	count=1
arg	the left [arg_2] ||| join [arg_1] [arg_2]	count=1
function	coordinate ||| coord type from	count=1
function	convert ||| normalize	count=1
arg	table using various sets ||| table read_kwargs format fast_reader	count=1
arg	comment lines ||| lines	count=1
function_arg	a maximum [arg_2] ||| [arg_2] [function_1]	count=1
class	convert this [class_2] ||| [class_2] [class_1]	count=1
module	dark energy ||| cosmology	count=2
function	on-sky [function] ||| [function] catalog	count=3
function	unit summary docs in ||| unit summary	count=1
arg	[arg_1] format and ||| time [arg_1] [arg_2]	count=1
function	integer dimensions of this ||| ndim	count=1
function	an existing function ||| function	count=1
class	[class] with the ||| [class]	count=1
module	cards exist in the ||| io fits hdu	count=1
function	table object [function_2] ||| [function_1] [function_2]	count=2
module	the fitsinfo script ||| io fits scripts	count=1
function	[function_1] a list ||| init [function_1] [function_2]	count=1
arg	from a given hdulist ||| hdulist	count=1
class	check ||| quantity	count=1
module	like fitshdu ||| io fits	count=1
arg	data for this frame ||| frame	count=1
function	scale ||| scale	count=3
module	or data string the ||| io fits hdu	count=1
module	copy the ||| io	count=1
function	table ||| include exclude names	count=1
arg	obj to ||| obj	count=1
function	object to a fits ||| fits	count=1
module	normal writeto(), but ||| fits	count=1
arg	values along ||| values	count=1
function	but ||| lookup by	count=1
class	to expected [class_2] ||| [class_1] [class_2]	count=2
function	format object from another ||| from	count=1
function	of a ||| get file	count=1
module	from a ||| fits hdu	count=1
arg	(_header) to ||| image_header name compression_type tile_size	count=1
module	exception depending on the ||| io votable	count=1
function	[function] columns of ||| [function]	count=2
class	for this column ||| column	count=1
function	proportion and confidence ||| proportion	count=1
function	classmethod ||| normalize	count=1
class	a column specifically ||| column	count=1
function	2 ||| 2	count=1
arg	self [arg] has ||| [arg]	count=1
function_arg	[function_1] [arg_2] 0) ||| [function_1] [arg_2]	count=6
module	object an a ||| fits	count=1
function	pixel distances (in units ||| pixel	count=1
function	return an ||| of site	count=1
function	the specified ||| to	count=2
function	generates a string ||| transform	count=1
arg	interval [arg_2] ||| [arg_2] [arg_1]	count=1
function	filename or file-like ||| get file	count=1
function	based on kraft burrows ||| kraft burrows	count=2
class	transform [class_2] ||| [class_2] [class_1]	count=1
function	time ||| time	count=5
function	visual properties ||| ticklabel	count=1
arg	jd2 this ||| parent	count=1
module	the :class ||| io	count=2
arg	[arg_1] an ||| [arg_1] [arg_2]	count=1
module	the ||| units	count=1
function	polygon such that the ||| polygon	count=1
function	descrs resulting [function] ||| [function]	count=6
function	value in physical ||| physical	count=1
module	units numbers ||| units	count=1
module	for the type ||| io	count=1
function	negative derivative of dark ||| wa	count=1
function	[function_1] registry ||| [function_2] [function_1]	count=3
module	hdus in ||| hdu	count=1
function	unit and [function_2] ||| [function_2] [function_1]	count=3
class	of this class for ||| location	count=1
class	return ||| earth location	count=2
function	the values ||| values	count=1
module	w r t ||| cosmology	count=1
class	stretch ||| base stretch	count=1
arg	specified name ||| name	count=1
function	a given astropy table ||| to table	count=1
function	apparent ||| apparent body	count=1
arg	in output ||| output	count=1
arg	the package and ||| package encoding	count=1
class	point s ||| spherical representation	count=1
function	catalog is ||| add catalog	count=1
module	the ascii file ||| io fits	count=1
function	[function_1] list ||| [function_1] [function_2]	count=1
module	or class method ||| vo samp	count=3
arg	mtype to a function ||| mtype function declare metadata	count=1
module	the fitsinfo ||| io fits	count=1
class	this class for ||| earth location	count=1
function	ndarray to ||| to	count=1
function	can deal with a ||| prepare	count=1
function	public attribute as ||| attribute	count=1
module	the given file ||| io votable	count=1
function	a config file can ||| config file	count=1
module	internal use output the ||| io	count=1
function	if not a length ||| and validate length	count=1
module	r t ||| cosmology	count=1
arg	left input/output ||| left	count=1
function	tuple defining ||| bounding box	count=3
function	it is [function_2] ||| [function_1] [function_2]	count=2
function	an object ||| of site	count=1
function	the barycentric ||| get body barycentric	count=2
function	a specific ||| skyoffset cls	count=1
class	coordinate ||| coordinate	count=3
module	major and minor axes ||| visualization wcsaxes	count=2
arg	perform sigma-clipping [arg_2] ||| [arg_2] [arg_1]	count=4
arg	value of [arg_2] ||| [arg_2] [arg_1]	count=2
arg	removes a coordinate transform ||| transform	count=1
module	in ||| time	count=1
function	:func get_catalogs but using ||| get catalogs by	count=1
function_arg	response [arg_2] ||| [function_1] msg_tag [arg_2]	count=2
class	get ||| fits rec	count=1
class	to csv writer ||| csv writer	count=2
class	[class_1] subsequent use ||| [class_2] [class_1]	count=1
function_arg	its indices [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] volume ||| [function_2] [function_1]	count=2
module	like fitshdu ||| io fits hdu	count=1
module	coordinates ||| coordinates	count=7
function	frame ||| cls	count=1
function	where ||| where	count=1
arg	of vo services ||| registry_url timeout	count=1
class	values in ||| base data	count=1
arg	which ||| lines	count=1
module	but ||| io	count=1
function	[function_1] by ||| [function_1] [function_2]	count=3
module	to return [module] ||| [module]	count=3
function	in which ra and ||| in	count=1
function	to ||| a to	count=1
class	cutoff [class_2] ||| [class_1] [class_2]	count=3
arg	convert skycoord ||| skycoord	count=1
arg	a data [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] access url ||| [function_2] [function_1]	count=2
function	[function_1] file ||| [function_1] [function_2]	count=4
function	if this object is ||| is	count=1
module	that start with the ||| io ascii	count=1
module	comments and configspec ||| configobj	count=1
arg	image_r [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	entire element [arg_2] ||| [arg_2] [function_1]	count=5
module	if the ||| utils	count=1
module_class	[module_1] [class_2] ||| [module_1] table [class_2]	count=5
function	specific class of origin ||| make	count=1
function	of perigee of the ||| of perigee	count=1
class	with ||| base reader	count=1
function	the fill [function_2] ||| [function_2] [function_1]	count=4
class	[class] values ||| [class]	count=1
function	set the validator method ||| validator	count=1
class	image ||| image base hdu	count=1
module	hdu from [module_2] ||| [module_2] fits [module_1]	count=3
arg	the package ||| package encoding cache	count=1
class	cutoff power [class_2] ||| [class_2] [class_1]	count=1
arg	image_r image_g [arg_2] ||| [arg_1] [arg_2]	count=1
arg	like fitshdu ||| cls	count=1
class	to the registry ||| registry	count=1
module	lomb-scargle model ||| lombscargle implementations	count=1
module	by name ||| coordinates	count=1
arg	correctly represent the ||| item col_len	count=1
arg	classmethod ||| cls	count=1
arg	shape ||| shape	count=1
function	criterion ||| criterion	count=2
module	that may ||| io fits	count=1
function	add subtract ||| arithmetics	count=1
function	reading [function_2] ||| [function_2] [function_1]	count=5
function_arg	[function_1] [arg_2] ||| [function_1] float [arg_2]	count=4
class	converted to html as ||| html	count=1
module	class of origin frame ||| coordinates builtin_frames	count=1
function	if the ||| uncertainty	count=1
class	name [class] is ||| function unit [class]	count=1
module	a specific ||| coordinates builtin_frames	count=1
function	coordinate package's docstring ||| transform graph docs	count=1
module	class that ||| builtin_frames	count=1
function	config file can be ||| is unedited config file	count=1
function	value can [function_2] ||| [function_2] [function_1]	count=2
class	listeners of some ||| notifier mixin	count=1
function	as a representation object ||| represent as	count=1
module	does this cosmology have ||| cosmology	count=1
module	like ||| hdu	count=1
function	a fits file ||| fits	count=1
function	to unicode ||| a to	count=1
module_class	the field_ ||| io votable field	count=1
function_arg	[function_1] a key ||| [arg_2] [function_1]	count=1
module	make sure [module] new ||| [module]	count=1
function	an oversampled grid ||| oversample 2d	count=1
class	also affects scalars/sections also ||| section	count=1
function	data as a representation ||| as	count=1
module	have ||| io fits	count=1
class	in a nx2 array ||| wcspixel2world	count=1
module	the simple or xtension ||| io fits hdu	count=1
class	contain a field-specifier to ||| card	count=1
function	default return a view ||| new view	count=1
function	ndarray to a ||| to file	count=1
function	from data/observatories json and ||| get builtin	count=1
arg	out ||| out tables col_name_map idx_left	count=1
arg	col str_vals and ||| cols	count=1
arg	subsampling ||| position subsampling	count=1
function	and convert ||| convert	count=1
function	new row before the ||| insert row	count=1
arg	an individual ||| indent_string entry this_entry comment	count=1
class	on field_ ||| field	count=1
function	list of all the ||| find	count=1
function	in parallel from ||| in parallel	count=2
module	[module_1] hdu ||| [module_2] [module_1]	count=4
function	argument ||| deprecated renamed argument	count=1
function	of a filename ||| get file	count=1
arg	set [arg] ||| [arg]	count=1
class	a field-specifier to ||| card	count=1
arg	[arg_1] y ||| [arg_1] [arg_2]	count=1
function	as text ||| totextfile	count=1
function	format [function_2] ||| [function_1] [function_2]	count=4
function_arg	a list [arg_2] ||| [function_1] value [arg_2]	count=1
function	can have arbitrary ||| can have arbitrary	count=3
arg	for a wcs ||| wcs	count=1
function	a specific class of ||| make skyoffset cls	count=1
module	[module] _get_converter ||| [module]	count=1
class	a quantity ||| quantity	count=2
class	[class_1] skycoord ||| [class_1] [class_2]	count=1
arg	left table ||| left	count=1
function	a positive ||| positive	count=1
function	[function_1] reader for ||| [function_1] [function_2]	count=1
module	do [module] opposite ||| [module]	count=1
function_arg	[function_1] interval ||| [arg_2] [function_1]	count=1
class	[class_1] is ||| [class_2] [class_1]	count=1
function	index of the origin ||| origin	count=1
function_arg	worker [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] flag ||| [arg_2] [function_1]	count=9
class	group ||| groups	count=1
function	plot ||| plot	count=1
function	this frame ||| frame attr	count=1
class	special ||| location attribute	count=1
function	in the specified ||| to	count=2
module_class	[module_1] this ||| [module_1] [class_2]	count=7
arg	a given frequency ||| dy frequency	count=1
function	to the function's ||| bind	count=1
module	file ||| hdu	count=1
module	[module_1] future ||| [module_1] [module_2]	count=20
module	for [module] legacy ||| [module]	count=1
function	initialize from an ||| from	count=1
module	get an ||| fits	count=1
arg	in mjd and ||| mjd	count=1
function	its tables and nested ||| and	count=1
function_arg	func once [arg_2] ||| [function_1] [arg_2]	count=1
function	header names ||| names	count=1
module	clears ||| extern configobj	count=2
function	value of the checksum ||| checksum	count=1
function	from the relevant configuration ||| reload	count=1
function	retrieve the value ||| value	count=1
arg	col to ||| col	count=1
module	one of the ||| io fits	count=1
function	subclass ||| subclass	count=1
module	file is currently in ||| utils	count=1
class	docstring for the unit ||| unit	count=1
function_arg	transform this [arg_2] ||| frame [function_1] to [arg_2]	count=1
function	calculate the barycentric ||| barycentric	count=2
class	from a file on ||| fits	count=1
arg	classmethod to convert ||| cls	count=1
function	a config ||| unedited config	count=1
arg	and set the unit ||| unit	count=1
module	hdu need to ||| hdu	count=1
module	scalars/sections also clears ||| extern configobj	count=1
arg	with a kernel ||| kernel boundary	count=1
arg	fitshdu ||| cls filename	count=1
arg	one dimensional ||| x amplitude	count=1
function	a diff between two ||| report diff	count=1
arg	at a given frequency ||| dy frequency	count=1
function	[*required*] [function] ||| [function]	count=1
function	of origin ||| skyoffset	count=1
module	fits format ||| fits	count=2
module	the current configobj ||| configobj	count=1
class	return an object of ||| earth	count=1
class	a file ||| hdu	count=1
function	verify the ||| verify	count=1
arg	the formatted string representation ||| max_lines max_width show_name	count=1
class	of the [class] must ||| [class]	count=1
class	information about [class_2] ||| [class_2] [class_1]	count=2
function	get either the ||| get	count=1
function	[function] scale ||| non celestial [function]	count=2
function	a field-specifier to uppercase ||| normalize keyword	count=1
function	object and then ||| format doc	count=1
function_arg	to this [arg_2] ||| [arg_2] [function_1]	count=3
function	indices associated with ||| indices	count=1
module	the table in ||| io ascii	count=1
class	>>> raise vdtvaluetoolongerror('jedie') ||| too long	count=1
class	of column ||| rec	count=1
module	affects scalars/sections also ||| configobj	count=1
function	string formatted as dms ||| degrees to string	count=1
function	in the source-included data ||| data	count=1
function	a cosmology ||| get cosmology	count=1
function	[function_1] in ||| [function_1] [function_2]	count=4
module	[module_1] [module_2] ||| [module_2] [module_1]	count=216
function	b columns ||| combine a b columns	count=1
function	with the same [function_1] [function_2] ||| [function_1] [function_2]	count=4
class	run partial ||| run time predictor	count=1
function	skycoord ||| coord	count=1
function	and factors for one ||| scale factors	count=1
class	of this class for ||| earth	count=1
function	in value can have ||| can have	count=1
arg	and access url ||| url	count=1
class	cartesianrepresentation with the correct ||| cartesian representation frame	count=1
class	and time ||| time	count=1
arg	an ||| iterable value	count=1
module	the column name line ||| io ascii	count=1
function	[function_1] an arcminute ||| [function_1] [function_2]	count=12
class	t a ||| cdm	count=1
function	a data file ||| data	count=1
class	uncertainty propagation ||| uncertainty	count=1
function	parse the tdim ||| parse	count=1
function	field ||| field	count=1
function	a ||| get file	count=1
function	a valid mime ||| check mime	count=1
function	on an oversampled ||| oversample	count=2
module	all members that ||| extern configobj	count=1
function	start the current ||| start	count=1
function	skycoord coordinates into ||| skycoord	count=1
function	a continuous variable ||| binned	count=1
function	classmethod to ||| normalize	count=1
arg	to a table ||| table	count=1
function	deal ||| array prepare	count=2
arg	val1 ||| val1 val2	count=2
function	return length of ||| get ticksize	count=1
function	extract info from ||| extract	count=1
arg	a table ||| table	count=4
function	vo package only supports ||| href	count=1
function	string for use ||| make	count=1
function	to a new ||| unit to	count=1
function	generates a string ||| make transform graph	count=1
module	like unit ||| units	count=1
function	into one in which ||| in true	count=1
function_arg	[function_1] bic ||| [function_1] log_likelihood [arg_2]	count=3
function	decode ascii strings to ||| a to	count=1
function	[function_1] create a ||| [function_2] bounding [function_1]	count=1
function_arg	[function_1] new frame ||| [arg_2] [function_1]	count=1
arg	frequency parameters ||| frequency	count=1
function	name of ||| info name	count=1
class	the in-order names ||| base	count=1
arg	between ||| other	count=4
module_class	[module_1] [class_2] values ||| [module_1] [class_2]	count=5
module	this class for a ||| coordinates	count=1
module	[module] first ||| [module]	count=1
arg	given [arg] dictionary ||| [arg]	count=1
module	a database [module_2] ||| [module_1] [module_2]	count=3
function	update ||| update	count=9
module	index_of ||| io fits hdu	count=1
module	to time a function ||| utils	count=1
function_arg	[function_1] class1 ||| [function_1] [arg_2]	count=2
function	from data ||| get	count=1
function	of origin frame ||| make	count=1
class	this ||| coordinate	count=1
function	get a [function_2] ||| [function_1] [function_2]	count=3
arg	[arg] __name__ ||| [arg]	count=1
arg	function func ||| func	count=3
function	distance from the ||| distance	count=1
class	in this table ||| table	count=1
function	its initial state ||| set defaults	count=1
function	[function] output size ||| [function] pprint	count=1
module	the values of ||| io	count=1
function	walk ||| walk	count=1
arg	iers_a ||| iers_a	count=1
arg	for a known observatory/site ||| site_name	count=1
class	initializes a ||| process	count=1
function	not ||| not	count=1
arg	not included in output ||| table output	count=1
arg	of [arg_2] ||| [arg_1] [arg_2]	count=1
module	the field-specifier of ||| io fits	count=1
module	flushing the file ||| io	count=1
function	diff between ||| report diff keyword	count=1
function	lookback time ||| lookback time	count=4
module	initializes a ||| futures	count=1
module_class	of the [class_2] ||| [module_1] fits [class_2]	count=2
arg	[arg_1] unit in ||| [arg_2] [arg_1]	count=2
function	from a remote location ||| remote	count=1
function	at the center of ||| center 1d	count=1
arg	tables on specified keys ||| keys	count=1
arg	generate matrices for rotation [arg_1] [arg_2] ||| coordinates rotation matrix [arg_1] [arg_2]	count=1
function	cache directory ||| cache	count=1
arg	a join_type of ||| join_type metadata_conflicts	count=1
module_class	describing the [class_2] ||| [module_1] [class_2]	count=1
function	[function_1] tuple that ||| [function_1] [function_2]	count=1
function	value can have ||| can have	count=2
function	no longer [function] ||| disable [function]	count=3
module	type of the ||| io votable	count=2
function	string for ||| make transform graph	count=1
function	a ||| normalize keyword	count=4
function	[function_1] ticks are ||| [function_1] [function_2]	count=1
module	that ||| configobj	count=1
function	but ||| by url	count=1
class	with a functionquantity ||| quantity	count=1
class	is ||| splitter	count=1
function	to an ||| to	count=2
function	override path ||| path	count=1
arg	calculates ||| header undistort axes center	count=1
function	[function_1] [function_2] ||| [function_2] sidereal [function_1]	count=3
function	a positive index or ||| positive index	count=1
function	but looks in ||| lookup by	count=1
function	3-tuple or 2-tuple into ||| tuple	count=1
function	validation for multiprocessing support ||| do validation	count=1
class	[class_1] parabola ||| [class_2] [class_1]	count=2
class	entry from the sorted ||| sorted	count=1
arg	and velocity and ||| time	count=1
function_arg	to [arg_2] ||| [function_1] hours h [arg_2]	count=1
function	valid mime [function_2] ||| [function_1] [function_2] type content_type	count=1
function	an ||| site	count=1
function_arg	a maximum [arg_2] ||| [function_1] [arg_2]	count=1
class	name [class] is ||| unit [class]	count=1
function	logging of [function_2] ||| [function_2] [function_1]	count=2
function_arg	to a new ||| to frame merge_attributes	count=2
function_arg	[function_1] given urls ||| [function_1] [arg_2]	count=3
class	about data ||| data	count=1
function	barycentric ||| barycentric	count=2
module	coordinates using ||| coordinates	count=2
class	time in the cache ||| time predictor	count=1
function	will pad ||| fromstring	count=1
module	using [module_2] ||| [module_2] [module_1]	count=1
function	factors for one ||| factors	count=1
arg	specified frame to display ||| frame	count=1
class	for instantiating a skycoord ||| coord	count=1
class	true of the future ||| future	count=1
module	[module_1] normal writeto(), ||| [module_1] [module_2]	count=2
function	create a [function_2] ||| [function_1] bounding box [function_2]	count=2
module	format or ||| fits	count=1
arg	specific [arg] don't use ||| [arg]	count=1
function	merge ||| merge	count=2
module	read the ||| io	count=1
function	name ||| site	count=1
arg	generate matrices for rotation [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
module	the algorithm described ||| io fits hdu	count=1
function_arg	but with [arg_2] ||| [function_1] signature [arg_2]	count=1
arg	the compositetransform ||| fromsys tosys	count=1
function	a table object ||| table	count=1
class	for this column ||| base outputter	count=1
function	into one in ||| in	count=1
function	parameters ||| params	count=1
class	to cylindrical ||| cylindrical	count=1
function	number split it ||| split	count=1
class	model [class_2] ||| [class_2] [class_1]	count=4
function	object ||| of	count=1
function_arg	take val and convert/reshape [function_1] [arg_2] ||| time [function_1] val [arg_2]	count=3
module	scalars/sections ||| configobj	count=1
module	may contain a field-specifier ||| io	count=1
module	fitshdu ||| io fits	count=1
function	object around a ||| search around	count=1
function	input data if any ||| data	count=1
class	dark energy equation of ||| w0wa	count=2
function_arg	copy oneself possibly ||| copy physical_unit	count=1
arg	the value where we ||| value	count=1
function	indices given ||| subpixel indices	count=2
function	a table instance from ||| from table	count=1
arg	from the given urls ||| urls	count=1
class	[class] ascii table ||| [class]	count=1
function	class's __getitem__, such ||| copy on getitem shim	count=1
module	configspec ||| extern configobj	count=2
module	origin frame ||| coordinates	count=1
function	return an ||| of	count=1
function	[function_1] time using ||| [function_1] [function_2]	count=3
arg	in table ||| table	count=1
function_arg	[function_1] model ||| [function_1] oversample 1d [arg_2]	count=1
module	a functionquantity ||| units function	count=1
function	connect to ||| connect	count=1
module	support for [module] legacy ||| [module]	count=1
function_arg	[function_1] a subsampling ||| [function_1] [arg_2]	count=4
function	object to a ||| to hdu	count=1
function_arg	copy of [arg_2] ||| [arg_2] [function_1]	count=1
function	like fitshdu fromhdulist(), but ||| fromfile	count=1
function	kernel ||| kernel	count=1
arg	a formatted string representation ||| max_lines max_width show_name show_unit	count=1
module	at [module] given index ||| [module]	count=1
function	returns the number ||| get	count=1
class	for pickling ||| base	count=1
function	file ||| fromfile	count=1
class	hdulist was opened from ||| hdulist	count=1
function	validation for multiprocessing support ||| validation	count=1
module	default behavior of ||| time	count=1
class	the location [class_2] ||| [class_2] [class_1]	count=1
function	scale factor ||| scale factor	count=2
class	a coordinate ||| coordinate	count=1
class	energy equation ||| w0wa	count=2
module	can deal ||| units function	count=1
function	copy those ||| copy	count=1
module	to ||| fits	count=2
arg	but ||| filename	count=1
function	earth's moon ||| moon	count=1
function	downloads multiple files ||| files	count=1
module	string the ||| io fits	count=1
function	multiplication with numpy ||| wrap	count=1
function_arg	[function_1] [arg_2] ||| [function_1] by url [arg_2]	count=2
arg	convert skycoord in ||| skycoord	count=1
function	[function_1] the first ||| [function_1] [function_2]	count=1
module	protocol the ||| io votable	count=1
function	format function to trap ||| use str for	count=1
arg	strlen and ||| input strlen	count=2
function_arg	column name ||| column name	count=1
function	directly [function_1] [function_2] checkout ||| core [function_1] [function_2]	count=1
class	can deal with ||| function quantity	count=1
arg	card [arg] ||| card [arg]	count=2
function	string for use ||| transform graph	count=1
function	copy copy function ||| copy	count=1
function_arg	call [arg_2] ||| [function_1] mtype [arg_2]	count=2
function	by ||| of site	count=2
function	validate the format ||| validate	count=1
function	right multiplication ||| rmul	count=1
function	ones belonging to the ||| to	count=1
function	to a fits ||| fits	count=1
function	a new ||| cls	count=1
arg	a new coordinate transformation ||| fromsys tosys transform	count=1
function	same type as ||| equivalent	count=1
module	a tuple with the ||| coordinates	count=1
function	units [function_2] ||| [function_2] [function_1]	count=6
function	or a classmethod) ||| isinstancemethod	count=1
function	map ||| map	count=3
function	of the values of ||| values	count=1
function	convert a ||| normalize keyword	count=1
module	of the positions ||| io votable	count=2
module	to uppercase ||| io fits	count=1
function	the type of ||| type	count=1
function_arg	[function_1] [arg_2] ||| [function_1] oversample 2d [arg_2]	count=4
function_arg	[function_1] to ||| [arg_2] [function_1]	count=1
class	given bounding [class_2] ||| [class_2] [class_1]	count=4
class	handle ||| config obj	count=1
function	specific ||| make skyoffset cls	count=1
function	a table by ||| table by	count=2
function	class of origin ||| skyoffset	count=1
function_arg	a new name ||| rename name	count=1
class	[class] as ||| [class]	count=3
function_arg	criterion [arg_2] ||| [function_1] lsq ssr [arg_2]	count=1
arg	based on size ||| size	count=1
arg	include_names and exclude_names ||| include_names exclude_names	count=1
class	dark energy equation ||| w0wa	count=2
function_arg	index refers ||| index idx	count=1
function_arg	string [arg_2] ||| [function_1] [arg_2]	count=2
function	the apparent position ||| apparent body position	count=1
function	an astropy source distribution ||| astropy source	count=1
arg	in val1 ||| val1	count=2
function	[function_1] [function_2] file ||| [function_1] [function_2] source	count=3
arg	mtype to [arg_2] ||| [arg_1] [arg_2]	count=1
function	break up long string ||| long	count=1
module	comments ||| extern configobj	count=2
arg	a new frame ||| frame merge_attributes	count=2
arg	optionally changing [arg] ||| [arg]	count=1
module	names ||| coordinates	count=1
function	a new class ||| make skyoffset cls	count=1
module	the scaling flags ||| io	count=1
module	on the ||| io fits	count=1
module	[module] record ||| io [module]	count=1
function	[function_1] a reader ||| [function_2] [function_1]	count=1
function	frame was created ||| frame	count=1
arg	table object ||| table	count=2
function	their bounding [function_2] ||| [function_2] [function_1]	count=2
function	validation for multiprocessing ||| do validation	count=1
class	of the ||| base	count=1
class	initializes ||| pool executor	count=2
arg	removes the ||| ignore_missing remove_all	count=1
function	[function_1] names ||| [function_1] [function_2]	count=5
module	class that is ||| coordinates builtin_frames	count=1
module_class	in the header ||| io fits header	count=2
module	a specific class of ||| builtin_frames	count=1
module	of state at ||| cosmology	count=3
module	xml file against ||| utils xml	count=1
function	pretty ||| pretty	count=1
function	to an arcminute ||| arcmin	count=2
class	[class_1] array ||| [class_1] [class_2]	count=10
class	quantity with ||| quantity frame attribute	count=1
function	show it [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] package ||| [function_2] [function_1]	count=1
function	a float ||| float	count=2
function_arg	[function_1] function ||| [arg_2] [function_1]	count=12
function_arg	[function_1] model ||| [function_1] [arg_2]	count=11
arg	data ||| data mask mask_value	count=1
function	new class that is ||| make	count=1
arg	frame ||| frame	count=3
module	from a ||| io fits hdu	count=1
module	[module_1] fits ||| [module_1] [module_2]	count=20
class	this ||| linear lsqfitter	count=1
arg	for the out ||| out tables col_name_map idx_left	count=1
function	a map operation while ||| map	count=1
class	of the [class] must be ||| [class]	count=1
module	objects describing ||| hdu	count=2
arg	on size used for ||| size	count=1
arg	card [arg] existing card ||| card [arg]	count=1
arg	left [arg_2] ||| join [arg_1] [arg_2]	count=1
module	a ||| extern	count=1
function	two [function] more ||| [function]	count=1
function	unit summary docs ||| unit summary	count=1
function_arg	fit [arg_2] ||| [arg_2] [function_1]	count=1
module	they appear in the ||| io	count=2
function	slices for the ||| overlap slices	count=1
function	a given format ||| format	count=1
function	items as ||| items	count=1
function	distance ||| distance	count=8
function	for multiplication ||| wrap	count=1
function	create a new class ||| skyoffset cls	count=1
function	filename for the data ||| data filename	count=1
module	the domain of ||| votable	count=1
class	groups in [class] based ||| [class]	count=1
arg	a given key ||| key	count=1
function	bscale/bzero ||| scale info	count=2
function	rows in ||| replace rows	count=1
module	the in-order names ||| coordinates	count=1
arg	[arg] returns ||| [arg]	count=2
module	of a fits ||| fits	count=2
arg	m nearest ||| m	count=1
function	[function_1] the unit ||| [function_2] [function_1]	count=1
arg	creates ||| filename	count=1
function	the dtype [function_2] ||| [function_1] [function_2]	count=2
function	file open in binary ||| binary	count=1
function	values ||| pformat	count=1
function	is linked to another ||| tied	count=1
function	adjust [function_2] ||| [function_1] [function_2]	count=2
module	because [module] and ||| [module]	count=1
function_arg	get reader [arg_2] ||| [arg_2] [function_1]	count=1
module	value that may contain ||| fits	count=1
arg	a unitswarning about a ||| standard_name format_decomposed	count=1
class	but ||| fits hdu	count=2
module_class	[module_1] their ||| [module_1] [class_2]	count=4
module	this [module] group ||| [module]	count=1
class	file header s ||| header formatter	count=1
function	of ||| make	count=1
class	the hdu ||| hdu	count=1
class	a version ||| section	count=1
function	convert a floating-point degree ||| to	count=1
function_arg	[function_1] [arg_2] ||| [function_1] dms [arg_2]	count=6
function	3-tuple or ||| tuple	count=1
module_class	[module_1] stddevuncertainty allows ||| [module_1] [class_2]	count=4
module	convert a [module] to ||| [module]	count=1
function	transformation ||| get transform	count=1
function	formats as a ||| formats	count=1
class	component of the geocentric ||| earth location	count=3
arg	val2 must ||| val2	count=1
class	log [class_2] ||| [class_2] [class_1]	count=2
class	stretch ||| hist eq stretch	count=1
arg	table data ||| table	count=1
arg	[arg_1] val2 must ||| [arg_1] [arg_2]	count=1
class	logger to ||| logger	count=1
module	a string for ||| coordinates builtin_frames	count=1
module	like ||| io fits hdu	count=2
function	[function_1] factor ||| [function_1] [function_2]	count=1
function_arg	[function_1] this is ||| [function_1] [arg_2]	count=2
module	with the comment ||| io ascii	count=1
function	[function_1] and ||| [function_2] download [function_1]	count=1
function	to a float radians ||| to radians	count=1
module	create a ||| builtin_frames	count=1
arg	are valid converters ||| converters	count=1
module	new class that ||| builtin_frames	count=1
module	io ||| io	count=2
function	as a 3-tuple or ||| tuple	count=1
function	[function_1] table ||| [function_1] [function_2]	count=5
module	by the ||| io	count=2
function	comoving [function_2] ||| [function_2] [function_1]	count=3
function	list of groups in ||| groups	count=1
function	[function_1] value of ||| [function_1] [function_2]	count=4
function	possible or ||| or	count=1
function_arg	[function_1] interval in ||| [function_1] x success bins [arg_2]	count=2
module	the values for ||| io fits	count=1
module	the fitsinfo script ||| io fits	count=1
function	for use with the ||| transform graph	count=1
class	is ||| xmlwriter	count=1
function	polar motions ||| pm xy	count=1
arg	column ||| column	count=3
function	proper kpc ||| kpc proper	count=4
function	[function_1] time using ||| [function_2] [function_1]	count=3
function	the size in ||| size	count=3
arg	is a ||| a	count=1
function_arg	model fit [arg_2] ||| [arg_2] [function_1]	count=1
function	the optimal histogram bin ||| bin	count=1
function	data to this ||| call	count=3
class	at z=0 ||| w0wa cdm	count=1
module	the first ~astropy ||| io votable	count=1
function	write [function_2] ||| [function_2] [function_1]	count=3
function	the keyword value ||| value	count=1
function	public attribute as deprecated ||| deprecated attribute	count=1
function	and set masks ||| set masks	count=2
function	a cosmology instance from ||| get cosmology from	count=1
class	a daophot [class_2] ||| [class_1] [class_2]	count=1
function	with the same physical ||| with same physical	count=1
function	writerow but with ||| writerow	count=1
arg	calls binding ||| declare	count=1
module	an array ||| io	count=1
class	an object ||| earth location	count=1
function_arg	[function_1] of col ||| [arg_2] [function_1]	count=1
module	of ||| xml	count=1
function	[function_1] physical ||| [function_2] type [function_1]	count=2
function_arg	the main function ||| main args	count=1
module	a ||| cosmology	count=1
class	this is especially ||| base splitter	count=2
function	warn [function_2] ||| [function_2] [function_1]	count=5
module	the default writing behavior ||| io ascii	count=1
function_arg	[function_1] or dtd ||| [arg_2] [function_1]	count=4
class	is a cartesianrepresentation with ||| cartesian representation frame	count=1
function	the file in ||| get file	count=1
function	to a list ||| to list	count=3
class	the column and ||| column	count=1
arg	to the input row ||| row	count=1
class	quantities ||| quantity	count=3
function	the known uncertainty ||| uncertainty	count=1
function	the data ||| data	count=3
function	is the table ||| identify table	count=1
class	server ||| xmlrpcserver	count=1
function	the contents of ||| file contents	count=1
arg	method ||| private_key msg_id response	count=1
function	data as a ||| represent as	count=1
arg	to correctly represent ||| item col_len	count=1
module	the count ||| io	count=1
function	convert ||| keyword	count=1
function	object is [function_2] ||| [function_1] [function_2]	count=1
class	instantiating a skycoord ||| coord	count=1
class	as this ||| base	count=1
function	find ut1 - utc ||| get delta ut1 utc	count=1
function	fit ||| fit	count=2
class	with this ||| base	count=2
function	a table object to ||| table	count=1
class	creates ||| fits	count=1
module	a valid xml ||| xml	count=1
function	of origin ||| cls	count=1
function	the physical type of ||| get physical type	count=1
class	cds [class_2] ||| [class_2] [class_1]	count=1
module	class for ||| coordinates	count=1
arg	function to account for ||| x	count=1
function	first sentence from ||| first sentence	count=2
function	and adjust ||| add and adjust	count=2
class	model in the operation ||| model meta	count=1
function	a specific class ||| make skyoffset cls	count=1
arg	creates a fitshdu ||| compress	count=1
function	[function_1] earth ||| [function_2] [function_1]	count=4
module	the bscale ||| io fits hdu	count=1
class	a given bounding box ||| bounding box	count=1
class	[class_1] classes or ||| [class_1] [class_2]	count=4
module	returns the 'mode' ||| io fits	count=1
class	a tuple with the ||| representation	count=1
function	slices for the ||| slices	count=1
function	header column objects from ||| get cols	count=2
module	float64s ||| time	count=1
module	the futures ||| compat futures	count=1
function	histogram bin width ||| knuth bin width	count=2
function	the type ||| type	count=1
module	of the table ||| io ascii	count=2
function	write the given ||| write	count=1
module	and returns ||| coordinates	count=2
function	all the ||| find	count=1
arg	_renamed_ function ||| old_name new_name since arg_in_kwargs	count=1
class	this object's ||| nddata array	count=1
module	with a ||| units	count=1
module	in a given format ||| format	count=1
module_class	of this column ||| io fits column	count=1
module	similar to ||| fits	count=3
arg	flag ||| i	count=3
function	logging ||| exception logging	count=1
function	get a ~astropy coordinates ||| get	count=2
function	raise an ||| raise	count=1
function	object from [function_2] ||| [function_2] [function_1]	count=1
function	the indices associated with ||| indices	count=1
class	an object of ||| earth location	count=1
arg	to a function or ||| function declare metadata	count=2
arg	a given namespace this ||| namespace	count=1
function	type for ||| type	count=1
module	from the spec ||| io	count=1
class	energy equation of state ||| cdm	count=2
function	this object around a ||| around	count=1
function	create a ||| skyoffset	count=1
module	for the futures ||| utils compat futures	count=1
function	field and the total ||| field	count=1
module	a dtype object or ||| fits	count=1
arg	a file ||| cls filename	count=1
function_arg	a schema [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] interval given ||| [function_1] conf interval [arg_2]	count=1
function	from header ||| from	count=1
function	[function_1] besselian epoch ||| [function_1] [function_2]	count=2
function	dtype that the ||| dtype for	count=2
class	hdu that ||| valid hdu	count=1
function	writer ||| get writer	count=2
function	3-tuple ||| tuple	count=1
arg	account for model ||| model weights	count=1
function	[function_1] fits ||| [function_1] [function_2]	count=2
function	[function_1] the indices ||| [function_1] interpolate [function_2]	count=1
arg	at a given frequency ||| frequency	count=1
module	like fitshdu fromhdulist(), ||| io fits	count=1
function	handle spectral ||| spectral	count=1
module	string for use with ||| coordinates	count=1
function_arg	[function_1] unit ||| [function_1] [arg_2]	count=3
arg	whether a string ||| string	count=1
class	the data should be ||| image hdu	count=1
class	image format and to ||| image hdu	count=1
function_arg	[function_1] [arg_2] none) ||| [function_1] input [arg_2]	count=3
function	- [function] this getter ||| get delta ut1 [function]	count=1
arg	[arg_1] metadata objects ||| [arg_1] [arg_2]	count=2
arg	functionquantity ||| obj	count=1
function	load a single hdu ||| hdu	count=1
arg	*table* is ||| ref ucd utype	count=1
function	total intensity ||| intensity	count=1
function	are in a multiline ||| multiline	count=1
module	of origin frame ||| coordinates	count=1
module	contain a field-specifier ||| io	count=1
function_arg	bind a [arg_2] ||| [function_1] notification [arg_2]	count=1
module	of the decorated ||| utils	count=1
class	stretch ||| eq stretch	count=1
function	the constellation s ||| constellation	count=1
class	a raw table column ||| rec	count=1
module	specific ||| builtin_frames	count=1
function	find the node associated ||| find node	count=1
arg	model by taking ||| model x_range	count=3
class	that the ||| function quantity	count=1
function	against a schema ||| validate schema	count=1
function	string ||| transform graph	count=1
arg	function or class ||| function declare	count=2
function	element ||| element	count=2
function	of groups in ||| groups	count=1
module	to ||| io fits	count=4
module	initializes ||| utils	count=1
arg	specific mtype [arg_2] ||| [arg_1] [arg_2]	count=1
module	is a list ||| ascii	count=1
module	[module_1] the positions ||| [module_2] [module_1]	count=1
function	around a supplied set ||| search around	count=2
module	the contents ||| io	count=1
function	add a ||| add transform	count=1
module	reads [module] ||| [module]	count=3
function	elevation ||| theta	count=1
arg	coordinate transform from ||| fromsys tosys transform	count=1
class	for the ||| image base	count=1
function	[function_1] we create ||| [function_2] [function_1]	count=9
module	creates a ||| hdu	count=1
function	a given astropy ||| to	count=1
function	absorption distance ||| xfunc	count=1
function	process any cancel notifications ||| notify cancel	count=1
function	indent a block ||| indent	count=1
module	the data columns ||| io	count=1
class	[class_1] parabola ||| [class_1] [class_2]	count=2
module_class	[module_1] of this ||| [module_1] [class_2]	count=3
function	[function_1] currently registered ||| [function_1] [function_2]	count=1
function	nddata instance with ||| support nddata	count=1
function	a writable file-like ||| convert to writable	count=1
function	generator that [function_2] ||| [function_2] [function_1]	count=8
class	[class_1] about data ||| [class_2] [class_1]	count=6
class	like fitshdu fromhdulist(), ||| fits	count=1
function_arg	[function_1] lines ||| [arg_2] [function_1]	count=1
arg	parses an input ||| unit debug	count=1
function	nddata instance with ||| nddata	count=1
arg	array of the given [arg_1] [arg_2] larger array ||| [arg_1] [arg_2]	count=1
class	hdu should [class_2] ||| [class_2] [class_1]	count=2
function	:class field objects describing ||| fields	count=1
module	but creates a ||| hdu	count=1
module	fromhdulist(), ||| io fits	count=1
function	[function_1] criterion ||| [function_2] [function_1]	count=4
function_arg	match [arg_2] ||| [function_1] [arg_2]	count=1
class	location ||| location	count=4
arg	for model ||| model	count=1
module	class of origin ||| coordinates builtin_frames	count=1
module	used in ~astropy modeling ||| modeling	count=1
module_class	for [class_2] ||| [module_1] [class_2]	count=2
function	grid ||| grid	count=1
arg	left table [arg_2] ||| join [arg_1] [arg_2]	count=1
function	matches a previous section ||| match	count=1
module	fitshdu fromhdulist(), ||| fits hdu	count=1
function	[function_1] votable file ||| [function_1] [function_2]	count=3
module	of the domain see ||| io votable	count=2
module	hdu [module_2] ||| [module_2] fits [module_1]	count=3
arg	of obj of the ||| obj	count=1
module	the header ||| io votable	count=2
arg	to a function or ||| function	count=3
arg	of the current instance ||| copy_data	count=1
arg	read the table ||| table	count=1
function	position of earth ||| prepare earth position	count=3
function	object around a supplied ||| search around	count=1
function_arg	apparent position [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	[function_1] namespace this ||| [function_1] unit summary [arg_2]	count=1
module_class	[module_1] html ||| [module_1] [class_2]	count=2
function	effectively splits ||| by	count=1
function	cancel ||| cancel	count=1
class	point s ||| cylindrical representation	count=1
function	return the powers ||| powers	count=2
class	by ||| earth location	count=3
function	the same physical ||| same physical	count=2
arg	field-specifier ||| cls	count=1
arg	set of possible formats ||| timestr subfmts	count=1
class	outer ellipse not the ||| elliptical frame	count=1
class	[class_1] numpy ||| [class_2] [class_1]	count=1
class	for a daophot header ||| daophot header	count=1
class	when either model ||| compound model meta	count=1
function	and ignore sigint until ||| ignore sigint	count=1
module_class	constructs [class_2] ||| [module_1] [class_2]	count=2
module	the file for append ||| io fits	count=1
module	the associated ||| io	count=1
function	the precession matrix for ||| precession matrix	count=1
module	from ||| io	count=1
class	stretch ||| squared stretch	count=1
arg	table object that ||| table ref	count=1
arg	calculated for the ||| when override_datasum blocking	count=1
class	object of ||| earth	count=1
function	decimal hour value ||| hours to	count=1
module	coldefs objects describing ||| hdu	count=2
function	find [function_2] ||| [function_2] [function_1]	count=2
class	object of this class ||| earth	count=1
function_arg	[function_1] val1 to ||| [arg_2] [function_1]	count=1
arg	array of the given [arg_1] [arg_2] ||| array array_large [arg_1] [arg_2]	count=2
class	to csv [class_2] ||| [class_1] [class_2]	count=1
arg	[arg_1] kernel ||| [arg_1] [arg_2]	count=1
module	an actual fits header ||| fits	count=1
class	location to the registry ||| site registry	count=1
arg	order ||| order	count=1
arg	[arg_1] based ||| [arg_1] [arg_2]	count=4
function	the y ||| y	count=2
function	definitions ||| load	count=1
function	make ||| make	count=2
module	view the ||| io	count=1
function	the type of uncertainty ||| uncertainty type	count=1
function	returns the number of ||| get	count=1
function	setting the configspec on ||| set configspec	count=1
arg	with the right ||| right	count=1
arg	a file on ||| cls	count=1
arg	new fitshdu ||| compress	count=1
function	in parallel ||| in parallel	count=2
arg	function ||| data_format data_class function force	count=2
function	a decorator for ||| decorator	count=1
module	the futures in ||| utils compat futures	count=1
arg	a file if ||| file cache	count=1
function	to propagate correlated uncertainties ||| supports correlated	count=1
function	currently ||| get	count=1
module	deal ||| units	count=1
function	at the center of ||| center 2d	count=1
arg	left table with the ||| left	count=1
function	single catalog of given ||| cat	count=1
class	restores a field instance ||| field	count=1
function	[function_1] file ||| core astropy logger [function_1] [function_2] filename filter_level filter_origin	count=1
class	in the column ||| column	count=1
function	over all [function] in ||| iter [function]	count=1
function	coordinates back to original ||| orig	count=1
function	string representation of ||| repr	count=2
function	return the result of ||| result	count=1
function	currently connected to a ||| connected	count=1
class	of the bst in ||| bst	count=1
function	of the "representation attributes" ||| get representation attrs	count=1
function	origin ||| make skyoffset cls	count=1
function	instance in si ||| si	count=1
module_class	return [class_2] ||| [module_1] [class_2]	count=2
function	[function_1] [function_2] ||| [function_2] coordinates [function_1]	count=4
arg	scale ||| scale	count=3
class	of ||| nddata	count=1
function	to ||| r to	count=1
arg	[arg_1] in ||| [arg_1] [arg_2]	count=2
function	density parameter for curvature ||| ok	count=1
module	and/or verifies the object ||| io	count=1
function_arg	bind [arg_2] ||| [function_1] response [arg_2]	count=1
arg	on evaluating [arg] ||| [arg]	count=2
function	between pixel distances ||| pixel scale	count=1
function_arg	[function_1] base 10 ||| [arg_2] [function_1]	count=6
function	register a [function_2] ||| [function_2] [function_1]	count=2
class	in-order names ||| representation	count=1
function	tag is the table ||| table	count=1
module	can deal with ||| units function	count=1
function	[function] elements in ||| iter [function]	count=1
arg	redshift ||| z	count=7
function	[function] upon addition ||| [function]	count=1
function	[function] that reads ||| get pkg data [function]	count=3
module	currently in ||| utils	count=1
arg	keywords and data and ||| header	count=1
arg	a mask ||| mask	count=1
arg	yaml stream ||| stream	count=1
module	samp ||| vo samp	count=1
arg	method ||| private_key recipient_id	count=2
class	an ||| like	count=2
function	for no bounding box ||| bounding box	count=1
class	model in the operation ||| compound model meta	count=1
arg	differences by interpolating in ||| iers_table return_status	count=1
class	filter kernel ||| kernel	count=1
class	frame ||| base frame	count=2
function	list of ||| float list	count=1
arg	[arg_1] to end ||| [arg_2] [arg_1]	count=1
arg	new [arg_2] ||| [arg_2] [arg_1]	count=2
module	for use ||| coordinates builtin_frames	count=1
module	more hdu need ||| hdu	count=1
module	actual fits header ||| fits	count=1
function	by a given attribute ||| by	count=1
arg	registered i/o ||| data_class readwrite	count=1
function	function quantity [function_2] ||| [function_2] [function_1]	count=3
function	enabled in ||| add enabled	count=3
function	a data file from ||| pkg data	count=1
class	to convert ||| card	count=1
module	a filename or file-like ||| utils	count=1
module	hour value and ||| coordinates	count=1
function	specific class ||| skyoffset	count=1
class	(out of the ||| or spinner	count=1
arg	function or ||| function declare metadata	count=2
module	given file against the ||| io	count=1
arg	join_type of 'exact' means ||| join_type	count=1
function	a new class ||| make	count=1
function	[function_1] in parallel ||| [function_2] [function_1]	count=1
function	for use with ||| make transform	count=1
function	as self return ||| time	count=1
arg	coordinate transform from the ||| tosys transform	count=1
function_arg	[function_1] [arg_2] ||| [function_1] time [arg_2]	count=1
arg	constrained ||| fps	count=1
arg	takes optional [arg] ||| [arg]	count=1
function_arg	error [arg_2] ||| [arg_2] [function_1]	count=1
function	y [function] index ||| [function]	count=1
function	the hash of a ||| hash	count=1
class	of the point s ||| unit spherical representation	count=1
function	vo ||| reset vo	count=1
arg	x ||| x out	count=1
arg	takes any ||| members	count=1
arg	like fitshdu fromhdulist(), ||| filename	count=1
module	returning the count ||| io	count=1
function	the optical ||| doppler optical	count=1
function	callandwait ||| call and wait	count=1
arg	value [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	[function_1] of ||| [function_1] [arg_2]	count=2
class	the compressed ||| comp	count=1
arg	flag for entries ||| i	count=3
function	exponent parts ||| exponent	count=1
module	a file ||| io fits hdu	count=1
function	val1 ||| day frac	count=1
module	the scaling flags and ||| io fits	count=1
function	[function_1] list ||| [function_2] [function_1]	count=5
class	this column attribute ||| column attribute	count=2
function	in which ra and ||| in true	count=1
module	that ||| function	count=1
function	use with the coordinate ||| make transform graph	count=1
arg	this is the ||| tag	count=1
class	dark energy equation of ||| cdm	count=4
class	this class for a ||| earth location	count=1
function	matrix ||| matrix from angle	count=2
function	hidden ||| hidden	count=1
module	to match the ||| io fits hdu	count=1
class	secure ||| secure	count=1
module	a field-specifier to ||| fits	count=1
function	to propagate correlated uncertainties ||| correlated	count=1
module	of the hdu's ||| io fits hdu	count=4
module	customizations most of the ||| io ascii	count=1
class	of the column ||| base column	count=1
module	used to implement ||| io fits	count=1
module	version ||| extern	count=1
arg	fitshdu from a ||| compress	count=2
arg	file and memmap object ||| output_verify verbose closed	count=1
arg	[arg_1] scale ||| time get time fmt [arg_1] [arg_2]	count=3
arg	names [arg_1] [arg_2] ||| [arg_2] names [arg_1]	count=2
function	this object around ||| around	count=1
function	checks if ||| uncertainty	count=1
function	with ||| make transform graph	count=1
function	but looks in both ||| by	count=1
function	but with appropriate ||| base	count=1
function_arg	of column [arg_2] ||| [arg_2] [function_1]	count=1
module	with the ||| builtin_frames	count=1
module	when flushing the file ||| io	count=1
class	and two model classes ||| model meta	count=1
class	dark energy ||| w cdm	count=1
module	a list of the ||| io ascii	count=1
function	'name' of file-like object ||| fileobj	count=1
module	for a ||| coordinates builtin_frames	count=1
function	sidereal time using a ||| sidereal time	count=1
function	input data if ||| data	count=1
function	show it ||| show	count=1
function	a list of coordinate ||| coordinate	count=1
function	the longitude ||| lon	count=1
function_arg	reader [arg_2] ||| [arg_2] [function_1]	count=2
module	method with the ||| io fits	count=1
function	for this ||| for	count=1
function	diff between two ||| report diff	count=1
class	the compressed [class_2] ||| [class_2] [class_1]	count=4
arg	file and memmap ||| output_verify verbose closed	count=1
module_class	[module_1] of this ||| [module_1] hdu [class_2] hdu fileinfo	count=3
function	finishes ||| add done callback	count=1
module_class	[module_1] resource_ ||| [module_1] [class_2]	count=2
module_class	[module_1] [class_2] ||| [module_1] fits hdu [class_2]	count=2
function	determines if a config ||| unedited config	count=1
arg	names [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=2
function	quantity ||| quantity	count=1
class	[class_1] [class_2] containing ||| [class_1] [class_2] match header cls header	count=3
class	fits_rec ||| rec	count=1
class	to spherical polar ||| spherical	count=3
function	correct class for this ||| col for	count=1
arg	of registered i/o ||| data_class readwrite	count=1
class	after rather than before ||| commented header	count=1
class	progress bar to ||| progress bar	count=4
function_arg	to a [arg_2] ||| [function_1] frame [arg_2]	count=1
arg	rows a join_type of ||| join_type	count=2
module	from a file on ||| io	count=1
function_arg	pm source [arg_2] ||| [arg_2] [function_1]	count=4
arg	access url ||| url	count=1
function	of registered units with ||| get units with	count=1
function	single-dimensional shape ||| squeeze	count=1
class	stretch ||| stretch	count=14
function	the distance from the ||| distance	count=1
arg	the package and ||| package	count=2
function	class for this type ||| convert col for	count=1
class	abstract class for ||| base	count=1
module	plane and angular units ||| units	count=1
arg	by the 'sep' parameter ||| d precision pad sep	count=1
function	[function_1] difference ||| [function_1] [function_2]	count=4
function	image ||| image	count=2
arg	fitshdu from a given ||| compress	count=1
function	of ||| make skyoffset	count=1
arg	sanitized keyword args ||| args	count=1
module	more hdu need to ||| hdu	count=1
function	the data [function_2] ||| [function_2] [function_1]	count=1
module	raises a ~astropy io ||| io	count=2
function_arg	[function_1] arg ||| [function_1] [arg_2]	count=1
module	uppercase ||| io	count=1
arg	convert ||| cls	count=1
function	table instance from a ||| from	count=1
function	clears ||| clear	count=1
function	data file from the ||| get pkg data	count=1
arg	write an individual ||| indent_string entry this_entry comment	count=1
function	injects entry points ||| entry points	count=2
function	class ||| skyoffset cls	count=2
function	setting the fill ||| fill	count=1
module	for [module] domain ||| [module]	count=1
function	the attributes ||| attributes	count=1
function	array to an ||| model to	count=1
arg	a keyword value that ||| cls keyword	count=1
class	header ||| ecsv header	count=1
class	check that ||| quantity	count=1
function	functionquantity ||| array prepare	count=2
module	deal with a ||| units function	count=1
class	equation ||| w0wa	count=2
module	directly either a ||| io fits hdu	count=1
function	and then formats ||| format doc	count=1
arg	[arg_1] some axis ||| coordinates rotation matrix [arg_1] [arg_2]	count=1
function	class that is ||| make skyoffset	count=1
function	retrieves ||| file	count=1
function	[function_1] or raise ||| [function_2] [function_1]	count=1
class	stretch ||| power stretch	count=1
function	sets ||| set	count=8
module	r t a ||| cosmology	count=1
arg	and jd2 this ||| parent	count=1
function	[function_1] same physical ||| [function_2] [function_1]	count=5
function_arg	spectral density [arg_2] ||| [arg_2] [function_1]	count=1
function	in transverse comoving kpc ||| kpc comoving	count=1
function	bin ||| bin	count=1
arg	hdulist ||| hdulist	count=1
function	get all ||| get scale	count=1
function	catalog is created with ||| catalog	count=1
function	for use with ||| graph	count=1
arg	like ||| cls	count=1
arg	an hdu ||| key hdu	count=1
function_arg	bind [arg_2] ||| [function_1] call [arg_2]	count=1
module	of ||| coordinates builtin_frames	count=2
arg	with a kernel ||| kernel boundary fill_value	count=1
function	a sidereal ||| sidereal	count=1
module	method in the parent ||| io fits	count=1
function	stokes [function_2] ||| [function_2] [function_1]	count=1
module	an xml file ||| xml	count=1
function	bayesian ||| bayesian	count=2
class	all [class] ||| [class]	count=3
module	check ||| extern configobj	count=1
function	[function_1] coordinate ||| [function_1] [function_2]	count=1
class	into the hdulist ||| hdulist	count=1
function	of the table ||| table as	count=1
module	the values ||| io fits	count=2
arg	numbers whose value does ||| value	count=1
arg	[arg_1] value ||| [arg_2] [arg_1]	count=2
function	type ||| type	count=9
arg	method ||| private_key mtype	count=1
function	is a valid url ||| is url	count=1
module	the domain defined ||| io	count=1
module	creates a ||| fits	count=1
function	a specific class of ||| skyoffset cls	count=1
module	that also affects scalars/sections ||| extern configobj	count=1
function	to trap masked values ||| use str for masked values	count=1
arg	at redshift z ||| z	count=2
function	[function_1] physical type ||| [function_1] [function_2]	count=7
class	column ||| base column	count=2
function	[function_1] corresponding ||| [function_1] comoving [function_2]	count=1
module	initializes ||| futures	count=1
function	angular diameter [function_2] ||| [function_1] [function_2]	count=1
function	pm [function_2] ||| [function_1] [function_2]	count=1
class	update ||| like hdu	count=2
module	method ||| vo samp	count=8
arg	the redshift ||| z	count=3
function	unit [function_2] ||| [function_2] [function_1]	count=4
function	may contain a field-specifier ||| normalize keyword	count=1
function	their bounding ||| bounding	count=1
arg	[arg_1] hdulist object ||| [arg_2] [arg_1]	count=2
class	vdtvaluetoolongerror('jedie') ||| value too long	count=1
module	an array when ||| io votable	count=1
module	filename or file-like ||| utils	count=1
function	of origin frame ||| make skyoffset cls	count=1
class	when either model in ||| model	count=1
function	multiplication with numpy ||| array wrap	count=1
function	~numpy ndarray to ||| array to	count=1
module	state w r ||| cosmology	count=1
function	burrows and ||| burrows	count=2
function	3d radius ||| 3d	count=1
class	[class_1] cutoff power ||| [class_2] [class_1]	count=2
module	on the bscale ||| io fits	count=1
module	from a file ||| io fits hdu	count=1
arg	item ||| item	count=1
class	object ||| earth location	count=2
arg	[arg_1] the right ||| join [arg_1] [arg_2]	count=2
function	to an hdf5 file ||| hdf5	count=1
function	[function_1] axis ||| [function_2] [function_1]	count=2
arg	support converting ||| dtype	count=1
function	type converters and then ||| and	count=1
module	object of ||| coordinates	count=1
function	write a string to ||| write string	count=1
module	on ||| io	count=1
function	proper kpc corresponding to ||| kpc proper per	count=1
function	the xml id ||| id	count=1
function	same type ||| equivalent units	count=1
arg	from lines as ||| lines	count=1
module	lomb-scargle ||| lombscargle implementations	count=2
arg	data [arg_2] ||| [arg_1] [arg_2]	count=5
module	objects describing [module_2] ||| [module_1] [module_2]	count=2
module	the object *p* into ||| io	count=1
module	[module] have them ||| [module]	count=3
module	in the *array* ||| io	count=1
function	default ||| default	count=4
class	of coefficients ||| polynomial	count=1
function	physical type as ||| physical type	count=3
function	same type ||| equivalent	count=1
class	can ||| function quantity	count=2
module	[module] coldefs interface ||| [module]	count=1
module	also clears ||| extern	count=1
function	[function_1] columns ||| [function_1] [function_2]	count=2
class	default behavior ||| time	count=1
arg	the m nearest points ||| m	count=1
function	the "representation attributes" ||| representation attrs	count=1
function	[function_1] of earth ||| [function_2] [function_1]	count=4
function	is currently in ||| get	count=1
function	make a copy ||| copy	count=1
module	clears ||| extern	count=1
module	generates ||| coordinates	count=1
function	earth parameters ||| prepare earth	count=1
module	if necessary ||| io fits hdu	count=1
class	value for ||| base	count=1
function	to ||| to file	count=1
function	get slices ||| overlap slices	count=1
module	on the ||| io ascii	count=1
function	sidereal time [function_2] ||| [function_2] [function_1]	count=2
function	return [function_2] ||| [function_1] [function_2]	count=3
arg	within a given ||| searcharoundcoords seplimit	count=1
function	a decimal hour value ||| hours to	count=1
arg	a ||| a	count=2
function_arg	[function_1] x ||| [arg_2] [function_1]	count=4
function	density/critical density of photons ||| ogamma0	count=1
function	data as a ~numpy ||| data	count=1
function	from the ||| get model	count=1
module	the count of checksum ||| io fits	count=1
function	units in the ||| units	count=1
module	hdu need ||| fits hdu	count=1
function	- [function] this ||| get delta ut1 [function]	count=1
arg	from [arg_2] ||| [arg_2] [arg_1]	count=1
function	is a [function_2] ||| [function_2] [function_1]	count=15
function	config file can ||| unedited config file	count=1
function	index [function_2] ||| [function_2] [function_1]	count=1
function	integrand [function_2] ||| [function_2] time [function_1]	count=1
function	checksum ||| checksum	count=2
arg	deprecated unit ||| unit	count=1
module	[module] keyword_indices ||| [module]	count=3
function	x y [function] index rounded ||| [function]	count=1
function	that is the ||| skyoffset cls	count=1
function	get a ||| get	count=7
module	the ||| io ascii	count=26
function	file-like ||| get	count=1
class	stretch ||| power dist stretch	count=2
function	[function_1] burrows and ||| [function_2] [function_1]	count=8
module	the 'mode' ||| io fits	count=1
function	and [function_2] ||| [function_1] [function_2]	count=6
module	and return ||| table	count=2
module	associated with [module] keyword ||| [module]	count=1
function	string representation ||| repr	count=2
arg	val1 to ||| val1 val2	count=1
class	bar via the console ||| bar	count=1
module	cards exist in the ||| io fits	count=1
function	site registry the first ||| get site registry	count=1
function	[function_1] create a ||| [function_2] [function_1]	count=9
arg	object of ||| cls	count=1
function	[function_1] box ||| [function_1] [function_2]	count=4
function	class for this type ||| for	count=1
class	for ipython's ||| model meta	count=1
class	the index ||| sliced index	count=1
class	dark energy equation ||| wpwa cdm	count=1
function	axis ||| axis type	count=1
arg	file-like object ||| fileobj endcard overwrite	count=1
function_arg	pretty [arg_2] ||| [function_1] [arg_2]	count=1
class	model ||| compound model	count=1
arg	for model constraints ||| model	count=1
arg	to the given value ||| value	count=3
function	[function_1] header ||| [function_2] [function_1]	count=4
module	of the ||| io	count=10
arg	from a file ||| cls	count=1
arg	window ||| window	count=1
function	represented as a 3-tuple ||| tuple	count=1
module	that is ||| coordinates builtin_frames	count=1
function	parameters ||| conf interval	count=2
module	the pedantic ||| io votable	count=1
function	merge two ||| merge	count=1
arg	multiply ||| value operation	count=1
module	end of the ||| io	count=1
arg	fromhdulist(), ||| filename	count=1
function	retrieves ||| get	count=1
function	use with ||| make transform	count=1
class	coordinate ||| base coordinate	count=2
function	coordinate ||| make transform	count=1
function	formats ||| doc	count=1
function	recformats ||| recformats	count=1
class	format's associated ||| base column format	count=1
class	equation of ||| cdm	count=2
class	disk model ||| disk2d	count=1
module	for use with ||| coordinates	count=1
module_class	a dictionary detailing information [module_1] [class_2] within any associated file ||| [module_1] [class_2]	count=1
class	of coefficients in one ||| polynomial model	count=1
function	for multiplication ||| array wrap	count=1
arg	bins of ||| bins	count=1
function	the representation of ||| representation	count=1
class	energy equation of state ||| w0wa cdm	count=2
function	index of [function_2] ||| [function_2] [function_1]	count=1
function	calculates the extent ||| extent	count=1
function	groups ||| group	count=1
class	this ||| base hdu	count=1
function	class corresponding to ||| class	count=1
module	but creates a ||| io fits	count=1
module	the hdu ||| io fits hdu	count=1
function	one in ||| in true	count=1
function	the contents of a ||| contents	count=1
function	return the scale of ||| scale	count=1
function	the earth's moon ||| moon	count=1
function	or a property ||| property	count=1
function	over all [function] elements in ||| iter [function]	count=1
function	[function_1] diameter distance ||| [function_2] [function_1]	count=1
function	can deal with a ||| array prepare	count=1
function	override path patch ||| patch path	count=2
module	file on ||| io fits hdu	count=1
arg	the package and provides ||| package encoding	count=1
function_arg	table header [arg_2] ||| [function_1] data [arg_2]	count=3
function	return the size ||| size	count=1
function_arg	to an ||| to dms r	count=1
function	a decorator ||| decorator	count=1
arg	a specified keyword ||| keyword	count=1
function	[function_1] [function_2] ||| [function_1] to [function_2]	count=4
function	then formats ||| format doc	count=1
class	table ||| table hdu	count=1
function	of photons ||| ogamma0	count=1
module	the pedantic setting ||| io	count=1
function	[function_1] a package ||| [function_2] [function_1]	count=1
function_arg	erfa dut arg = [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	a votable file ||| votable	count=1
function	version of numpy allclose ||| not allclose	count=1
function_arg	get slices [arg_2] ||| [function_1] [arg_2]	count=1
arg	of the function to ||| x	count=1
function	from a ||| from table	count=1
function	uppercase ||| normalize	count=1
function	a fits ||| fits	count=1
function	table [function_2] ||| [function_2] [function_1]	count=3
function	fill ||| fill	count=1
function	generates a ||| make transform	count=1
function	rename [function_2] ||| [function_1] [function_2]	count=1
arg	the left table ||| left	count=1
class	the in-order names of ||| base representation	count=1
function	around ||| search around	count=2
function	field-specifier to ||| normalize keyword	count=1
class	(out of the total ||| or spinner	count=1
function	if ||| convert uncertainty	count=1
function	data/observatories json ||| builtin	count=1
function	from a single ||| parse	count=1
function_arg	subclass [arg_2] ||| [arg_2] [function_1]	count=2
function	a sidereal [function_2] ||| [function_1] [function_2]	count=3
function	converts an ||| to	count=1
function	it ||| format doc	count=1
function	[function_1] format ||| [function_1] [function_2]	count=3
arg	[arg] on-sky separation ||| [arg]	count=2
function	a list of resources ||| resources	count=1
module_class	[module_1] for cross-referencing ||| [module_1] [class_2]	count=3
function	but creates ||| fromfile	count=1
function	a new index ||| add index	count=2
arg	x y onto ||| x y	count=2
function	range ||| range	count=3
arg	join_type of 'exact' means ||| join_type metadata_conflicts	count=1
function	to hours ||| to hours	count=2
arg	data in table ||| table	count=1
arg	evaluating [arg] ||| [arg]	count=2
arg	and kwargs ||| kwargs	count=1
module_class	fits [class_2] ||| [module_1] [class_2]	count=10
class	for the [class] ||| [class]	count=1
function	[function] between self ||| [function]	count=2
function_arg	discretize [arg_2] ||| [arg_2] [function_1]	count=19
arg	and shape to ||| shape	count=1
arg	write function like write ||| write	count=1
arg	val2 [arg_2] ||| [arg_1] [arg_2]	count=6
function	is a list ||| is string list	count=1
class	a ||| location	count=1
module	returns the ||| utils xml	count=1
function	the catalog is ||| add catalog	count=1
module	both the ||| io votable	count=1
function	geodetic ||| geodetic	count=1
function_arg	[function_1] [arg_2] ||| [function_1] t [arg_2]	count=3
class	of dark energy equation ||| w0wa cdm	count=1
module_class	the domain [class_2] ||| [module_1] votable [class_2]	count=2
class	fromhdulist(), but creates ||| hdu	count=1
module	in the first ||| io	count=1
function	string formatted ||| to string	count=2
arg	beautifulsoup tag is ||| soup	count=1
function	map operation while ||| map	count=1
function	value ||| normalize	count=1
function	[function] given to ||| update [function]	count=1
arg	package and ||| package encoding cache	count=1
class	of coefficients in one ||| polynomial	count=1
arg	mjd and the ||| mjd	count=1
class	similar to csv ||| csv	count=1
function_arg	[function_1] of obj ||| [function_1] [arg_2]	count=4
class	[class_1] classes or ||| [class_2] [class_1]	count=4
module	all the scaling flags ||| io fits	count=1
function	new ||| rename	count=1
arg	but creates ||| cls	count=1
function_arg	[function_1] desired ||| [function_1] signature [arg_2]	count=7
module	in both the ||| io	count=1
function_arg	ut1-utc source [arg_2] ||| [function_1] [arg_2]	count=4
function	the result ||| result	count=1
function	configspec on subsections ||| set configspec	count=1
arg	frame to display coordinates ||| frame	count=1
function	to mjd ||| mjd	count=1
function	signal to noise ratio ||| signal to noise oir	count=1
arg	input/output labels with right ||| right	count=1
function	[function_1] skycoord ||| [function_2] [function_1]	count=2
class	precession ||| fk4no eterms	count=1
function	transform ||| transform	count=2
function	[function_1] source ||| [function_1] [function_2]	count=8
function_arg	flush internal buffers ||| flush indent wrap	count=1
function	is ||| get	count=1
module	return the items of ||| io	count=1
function	parameter array to an ||| to	count=1
function	and then formats it ||| doc	count=1
function	values ||| as	count=1
function_arg	[function_1] namespace ||| [function_1] unit summary [arg_2]	count=1
class	for ||| base	count=11
module	an xml file against ||| xml	count=1
class	power [class_2] ||| modeling smoothly broken [class_1] [class_2]	count=1
function	comoving kpc ||| kpc comoving	count=2
class	a daophot header ||| daophot header	count=2
module	like fitshdu fromhdulist(), but ||| io	count=1
module	on the bscale value ||| io fits	count=1
function	the indices where ||| where	count=1
arg	world ||| world	count=1
arg	ufunc can deal ||| obj context	count=1
function	matrix for fk4 using ||| matrix	count=1
module	hdu's ||| fits hdu	count=1
function	from ||| from	count=12
function	clear ||| clear	count=1
module	convert ||| io fits	count=3
class	power law ||| power law1d	count=6
arg	mode ||| f	count=1
function	convert a power ||| validate power	count=1
arg	lines ||| lines meta	count=1
function	eccentricity ||| eccentricity	count=1
module	of [module_2] ||| [module_1] [module_2]	count=37
function	that is ||| cls	count=1
function	latex ||| latex	count=3
class	existing [class] object ||| [class]	count=1
function	update the header keywords ||| update header	count=1
module	that may ||| io	count=1
arg	hdulist object ||| cls hdulist	count=2
function	then formats it ||| format doc	count=1
function	single-dimensional ||| squeeze	count=1
module	creates ||| io fits	count=1
function	worker ||| queue manangement worker	count=2
module	the scaling flags and ||| io	count=1
function	is a [function_2] ||| [function_1] bool [function_2]	count=2
module	each of the data ||| io votable	count=1
function_arg	type for [arg_2] ||| [arg_2] [function_1]	count=1
function	a custom [function] model ||| has user [function]	count=1
arg	a data [arg_2] ||| [arg_1] [arg_2]	count=1
function	generates a ||| graph	count=1
class	list of ||| list	count=1
arg	function ||| function declare	count=3
class	expected attribute ||| frame attribute	count=2
function	a new class ||| skyoffset cls	count=1
function	specific ||| skyoffset cls	count=1
function	proper kpc [function_2] ||| [function_2] [function_1]	count=3
function	time in gyr to ||| time	count=1
module	domain of [module_2] ||| [module_2] [module_1]	count=2
module_class	[module_1] image ||| [class_2] [module_1]	count=1
module	fromhdulist(), but ||| fits	count=1
function	longitude ||| lon	count=2
function	[function_1] burrows and ||| [function_1] [function_2]	count=8
arg	fitter are compatible ||| supported_constraints	count=1
module_class	an [class_2] ||| [module_1] [class_2]	count=1
arg	method standard profile only ||| private_key xmlrpc_addr	count=1
class	for ||| nduncertainty	count=1
module	new class that is ||| builtin_frames	count=1
function	a ~numpy ndarray to ||| array to file	count=1
arg	the file-like [arg] can be ||| [arg]	count=1
arg	in bins of ||| bins range	count=1
function	[function_1] physical unit ||| [function_1] [function_2]	count=3
class	object of this class ||| earth location	count=1
arg	a specific mtype ||| mtype	count=3
class	state w r t ||| w0wa cdm	count=1
module	in-order names ||| coordinates	count=1
function_arg	add a [arg_2] ||| [arg_2] [function_1]	count=4
arg	cm at redshift z ||| z	count=1
arg	data ||| data mask	count=1
module	:meth ~astropy vo ||| vo	count=5
function	2d [function_2] ||| [function_2] [function_1]	count=5
class	resource and ||| resource	count=1
class	is currently in ||| xmlwriter	count=1
module	from a ||| io fits	count=1
arg	parameters from a frequency ||| frequency	count=1
arg	key ||| key default	count=1
function	writable file-like object ||| writable	count=1
module_class	[module_1] split line ||| [module_1] [class_2] call lines	count=4
class	classes or ||| meta	count=1
arg	for this frame ||| frame	count=1
module	the custom quoting ||| io ascii	count=1
function	input [function] is ||| [function]	count=1
function_arg	[function_1] single arg ||| [arg_2] [function_1]	count=1
function	votable field element ||| votable	count=1
function	the coordinate package's docstring ||| docs	count=1
module	field-specifier ||| io fits	count=2
function	is in the range ||| range	count=3
function	of ||| file	count=1
class	create ||| model meta	count=1
class	dark energy ||| cdm	count=3
function	environment variable samp_hub or ||| main running hub	count=1
module	file ||| io fits hdu	count=2
function_arg	[function_1] key data ||| [function_1] [arg_2]	count=1
class	run time ||| run time predictor	count=2
function	the site registry the ||| get site registry	count=1
module	check that the ||| units function	count=1
arg	supplied key ||| key	count=1
class	model in the ||| compound model	count=1
function	default value ||| default	count=1
arg	jd1 and ||| jd1 jd2	count=1
function	of neutrinos ||| onu0	count=1
class	deal with a ||| function quantity	count=1
function	z=0 ||| w0	count=1
function_arg	pm source [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	[function_1] name ||| [arg_2] [function_1]	count=10
arg	but creates a ||| filename	count=1
function	classmethod ||| keyword	count=1
function	the extent of a ||| extent	count=1
function	dark energy equation ||| w0	count=1
function	[function_1] [function_2] ||| [function_1] bounding box [function_2]	count=6
function	new class that is ||| make skyoffset cls	count=1
class	initialize the header ||| ipac header	count=1
class	an ||| location	count=1
function	the apparent position of ||| get apparent body position	count=1
function	ut1-utc [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] namespace this ||| [arg_2] [function_1]	count=1
function	nousek in ||| nousek	count=2
function	get the unit ||| get unit	count=3
function	in ||| in true coordinates	count=1
arg	new processpoolexecutor instance ||| max_workers	count=1
module	the data as a ||| io fits	count=1
class	component of ||| earth location	count=3
module	when flushing the ||| io	count=1
arg	solar system body ||| body time ephemeris get_velocity	count=1
class	at ||| flrw	count=3
class	to html as ||| html	count=1
module	with the coordinate ||| coordinates builtin_frames	count=1
class	can deal ||| function	count=1
function	for ||| site	count=1
arg	classmethod to convert a ||| cls	count=1
function_arg	[function_1] column ||| [function_1] [arg_2]	count=2
module	header/data to fits ||| fits	count=1
arg	docstring ||| docstring	count=1
function	to ||| to	count=28
function	retrieve the value ||| model value	count=1
arg	data ||| data	count=12
class	header __setitem__ ||| header	count=1
module	write the ||| io fits	count=2
arg	poisson count rate the ||| n b cl	count=2
arg	combination of iers_a and ||| cls iers_a	count=1
function	function for w ||| w	count=1
class	csv writer ||| csv writer	count=2
module_class	the progress bar ||| utils progress bar	count=1
arg	unit returns ||| unit	count=1
function	to ||| equal	count=1
function	[function_1] the cutout ||| [function_2] [function_1] original_position	count=3
arg	urls ||| urls cache	count=1
function	a specific ||| cls	count=1
function	[function_1] table writer ||| [function_2] [function_1]	count=1
function	[function] smaller ||| [function]	count=2
function	remote location ||| remote	count=1
function	mean longitude [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] type ||| with [function_1] [function_2]	count=1
module	that may contain a ||| io	count=1
function	[function_1] representation of ||| [function_2] [function_1]	count=6
module	delete an [module_2] ||| [module_2] [module_1]	count=2
module	tuple with the in-order ||| coordinates	count=1
class	return an object ||| earth location	count=1
function	z ||| z	count=2
module	astropy modeling ||| modeling	count=1
function	propagation ||| convert	count=1
arg	graph ||| graph	count=1
class	affects scalars/sections also ||| section	count=1
arg	object ||| cls	count=3
class	this ||| array	count=1
function	[function] situation ||| [function]	count=3
function	and adjust [function_2] ||| [function_2] [function_1]	count=2
module	[module_1] strings ||| [module_1] [module_2]	count=2
module	generates ||| builtin_frames	count=1
class	tuple with the in-order ||| base representation	count=1
module	for [module] distance assuming ||| [module]	count=1
function	stokes [function_2] ||| [function_1] [function_2]	count=1
module	directly either a ||| hdu	count=1
function	of ||| cls	count=1
arg	of _boundingbox with a ||| func sig	count=1
module	contain a field-specifier to ||| io fits	count=1
class	internal function for ||| base	count=1
class	config ||| config	count=1
function	of the data files ||| pkg data	count=2
function	to unicode ||| to unicode	count=2
function	a diff between two ||| report diff keyword	count=1
arg	true if [arg] is ||| [arg]	count=1
function	the appropriate si units ||| si	count=1
function	of clear that also ||| clear	count=1
arg	given name [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	this [arg_2] ||| [arg_2] [function_1]	count=1
function	write a table ||| write	count=1
class	whether the client ||| sampclient	count=2
module	fitshdu fromhdulist(), but ||| io fits	count=1
function	format the unit ||| unit	count=1
function_arg	dtype for [arg_2] ||| [function_1] [arg_2]	count=1
arg	numpy array ||| array	count=2
function	belonging to the ||| to	count=1
module	the header ||| io ascii	count=1
function	the polygon such that ||| polygon	count=1
class	of the current unit ||| unit base	count=1
function	[function_1] factor ||| [function_2] [function_1]	count=1
class	time object in the ||| time	count=1
class	this object's data ||| nddata array	count=1
function	returns a list of ||| get	count=1
function	classmethod to convert ||| normalize keyword	count=1
function	world names ||| type names	count=1
function	prepare ||| prepare	count=1
module	that also affects ||| extern configobj	count=1
function	the physical [function_2] ||| [function_1] [function_2]	count=2
module_class	the coosys_ [class_2] ||| [module_1] votable [class_2]	count=1
module_class	the [class_2] ||| [module_1] [class_2] determine formats cls format	count=6
function	convert a floating-point degree ||| degrees to	count=1
arg	whose value does ||| value	count=1
function	decorated object and ||| format doc	count=1
function	the contents of a ||| get file contents	count=1
function	to indices [function_2] ||| [function_2] [function_1]	count=4
class	equation of state ||| cdm	count=2
class	fromhdulist(), ||| hdu	count=1
function	bounding_box defined ||| bounding box	count=1
arg	by taking the ||| x_range factor	count=1
class	change ||| col defs	count=1
module	[module] is ||| [module]	count=1
function_arg	reader for [arg_2] ||| [arg_2] [function_1]	count=1
function	frame from ||| get frame	count=2
class	this coordinate and another ||| base coordinate	count=2
module	scalars/sections also ||| configobj	count=1
arg	for class1 ||| class1	count=1
module_class	returns a dictionary detailing [module_1] [class_2] within any associated file ||| [module_1] [class_2]	count=1
function	pixel distances (in units ||| pixel scale	count=1
function	delete given metadata ||| delete attribute	count=1
function_arg	[function_1] given frequency ||| [arg_2] [function_1]	count=2
function	[function_1] indices ||| [function_2] [function_1]	count=1
function	warn [function_2] ||| [function_1] [function_2]	count=5
function	on the bitpix value ||| bitpix	count=1
function	nddata instance ||| nddata	count=1
class	[class_1] power ||| [class_2] [class_1]	count=5
module_class	physical units [class_2] ||| [module_1] [class_2]	count=2
function	catalog ||| to catalog	count=1
function_arg	[function_1] a function ||| [arg_2] [function_1]	count=3
function	repeat tuple that ||| from	count=1
class	energy equation of ||| w0wa cdm	count=2
function	[function_1] reader ||| [function_2] [function_1]	count=2
function	the specified ||| sort	count=1
class	of this ||| valid	count=1
function	[function_1] absolute ||| [function_2] [function_1]	count=1
arg	by taking the average ||| x_range	count=1
class	for column attributes ||| column	count=1
function	from a ||| from table column	count=1
arg	jd1 ||| jd1	count=1
class	hdulist was opened ||| hdulist	count=1
function	element to unicode if ||| element	count=1
function	between pixel ||| pixel scale	count=1
arg	a local ||| show_progress remote_timeout	count=1
arg	fitshdu fromhdulist(), ||| cls	count=1
function	box ||| box	count=1
function_arg	the specified axis ||| sort axis	count=1
function	a single fits file ||| file	count=1
arg	method to the ||| method	count=1
arg	a fitshdu from ||| cls filename compress	count=1
class	file is ||| xmlwriter	count=1
class	a ||| w0wa cdm	count=1
function_arg	and convert/reshape to an [function_1] [arg_2] ||| time make [function_1] [arg_2]	count=2
function	injects entry ||| entry	count=1
arg	[arg_1] access url ||| [arg_2] [arg_1]	count=3
class	state w r t ||| cdm	count=1
function	subtract two ||| sub	count=1
module	function or method ||| vo samp	count=1
function	return the cmb temperature ||| tcmb	count=1
function	power to a ||| validate power	count=1
function	object ||| get	count=1
function	[function_1] matrix ||| [function_1] [function_2]	count=9
class	[class_1] spherical ||| [class_1] [class_2]	count=1
module	also clears comments ||| extern configobj	count=1
class	listeners of ||| notifier mixin	count=1
function_arg	[function_1] flag ||| [function_1] [arg_2]	count=9
class	parent class ||| table header formatter	count=1
function	[function_1] a dict ||| [function_1] [function_2]	count=1
module_class	the [class_2] ||| [module_1] [class_2] version	count=1
arg	confidence interval ||| n interval	count=1
class	based [class] essentially ||| [class]	count=1
module	clears comments and ||| extern configobj	count=1
function	sigint ||| sigint	count=1
module	with ||| nddata	count=1
function	get groups for ||| group by	count=1
function	[function_1] but ||| [function_2] [function_1]	count=3
function	to map ||| map	count=1
function_arg	groups for [arg_2] ||| [arg_2] [function_1]	count=2
function	one in which ra ||| in true coordinates	count=1
function	notification to a ||| notification	count=1
function	matrix for ||| matrix	count=1
function	type of uncertainty ||| uncertainty type	count=3
arg	the value ||| value	count=8
function_arg	list of [arg_2] ||| [function_1] value [arg_2]	count=1
function_arg	[function_1] function or ||| [arg_2] [function_1]	count=3
function	validation for multiprocessing ||| validation	count=1
arg	a table object ||| table	count=1
function	possibility ||| itemsize	count=1
arg	and scale try to ||| scale	count=1
module	fitshdu fromhdulist(), but creates ||| hdu	count=1
module	the wrapped function is ||| io fits	count=1
function	histogram bin [function_2] ||| [function_2] [function_1]	count=1
function	fits column [function] ||| scalar to [function]	count=3
module	all coordinates ||| coordinates	count=2
class	a daophot ||| daophot	count=1
arg	[arg_1] end ||| [arg_1] useblanks bottom [arg_2]	count=1
arg	used for in-place calculations ||| values clip out	count=1
function	default value for the ||| default	count=1
class	data ||| data	count=2
arg	into a siteregistry ||| jsonurl	count=1
class	initializes ||| process pool	count=1
function	data transposed ||| transpose	count=1
arg	the package [arg_2] ||| [arg_2] [arg_1]	count=1
function	any ||| header	count=1
function	data from a ||| data	count=1
module	the default behavior of ||| time	count=1
arg	[arg_1] right tables ||| [arg_2] [arg_1]	count=1
module	the hdu's data ||| io fits hdu	count=2
function	wraps which also preserves ||| wraps	count=1
module	read the ||| io fits	count=1
arg	position from ||| position mode	count=1
arg	mjd ||| mjd	count=1
function	over all [function] in the ||| iter [function]	count=1
function	units with the ||| units with	count=1
function	the unit summary docs ||| iter unit summary	count=1
module	also clears comments and ||| extern	count=1
arg	withclosing ||| withclosing	count=1
arg	solar system body ||| body time ephemeris	count=1
function	[*required*] the [function] of the ||| [function]	count=2
module	header ||| io fits	count=2
function	precession matrix [function_2] ||| [function_1] [function_2]	count=2
arg	val val2 format and ||| val val2 format	count=1
arg	from a file on ||| filename	count=1
arg	[arg] input/output ||| left [arg]	count=3
function	of indentation levels the ||| indentation	count=1
arg	interval in bins of ||| bins range	count=1
function	position of ||| position	count=2
class	signature ||| signature	count=4
module	a fits file ||| fits	count=4
arg	[arg_1] val2 ||| [arg_1] [arg_2]	count=4
class	class for hdus ||| base hdu	count=1
function	update ||| update column	count=1
class	time ||| time predictor	count=2
module	that ||| io	count=1
class	[class_1] is ||| [class_1] [class_2]	count=1
module	functionquantity ||| units	count=1
function_arg	[function_1] the desired ||| [function_1] signature [arg_2]	count=7
module	overrides ||| time	count=1
class	>>> raise vdtvaluetoolongerror('jedie') ||| value too long	count=1
module	same as the ||| io	count=1
function	class for ||| of site	count=1
arg	removes the first instance ||| ignore_missing remove_all	count=1
arg	returns the compositetransform for ||| fromsys tosys	count=1
class	to csv [class_2] ||| [class_2] [class_1]	count=1
function	for ||| col for	count=1
arg	given model ||| model	count=1
class	value in logarithmic ||| log	count=1
arg	in table converted ||| table	count=1
function	[function_1] earth parameters ||| [function_2] [function_1]	count=4
class	quantity with the ||| quantity	count=1
function	a config file ||| is unedited config file	count=1
arg	removes the first ||| ignore_missing remove_all	count=1
function	diff ||| diff keyword	count=1
function_arg	call to [arg_2] ||| [function_1] mtype [arg_2]	count=3
function	space to hold ||| space	count=1
module	the value ||| coordinates	count=2
arg	before ||| before	count=1
arg	memmap object ||| output_verify verbose closed	count=1
function	[function_1] image data ||| [function_1] [function_2]	count=1
function	number of rows in ||| len	count=1
arg	initialized ||| cls lon lat height	count=1
arg	[arg_1] bins of ||| [arg_2] [arg_1]	count=8
function_arg	[function_1] begin to ||| [function_1] key slice i [arg_2]	count=1
arg	units ||| units	count=1
module_class	constructs signature ||| compat signature	count=1
function_arg	transform [arg_2] ||| frame [function_1] to [arg_2]	count=1
function	spectral density ||| spectral density	count=2
function	table object to a ||| table	count=1
function	the slice ||| slice	count=1
function	replace string ||| replace	count=1
class	hdu that is ||| valid hdu	count=1
module	return the contents ||| io	count=1
class	write the table ||| bin table	count=1
class	the partial function ||| predictor	count=1
module	file ||| utils	count=1
function	rows in this ||| rows	count=1
module	sure [module] new ||| [module]	count=1
class	power [class_2] ||| [class_2] [class_1]	count=4
function	lines ||| lines	count=1
function	a new ||| make skyoffset	count=1
function	return a view of ||| new view	count=1
function	from the model ||| get	count=1
class	quantity view of ||| quantity	count=1
arg	[arg_1] object ||| [arg_2] [arg_1]	count=16
function	the apparent ||| apparent	count=1
function	map operation while displaying ||| map	count=1
arg	class2 ||| class2	count=1
class	format [class] by ||| [class]	count=1
function	to trap [function_2] ||| [function_2] [function_1]	count=2
function	data as a representation ||| represent as	count=1
function	compares two numpy recformats ||| recformats	count=1
arg	data from the ||| data	count=1
class	for this column ||| base	count=1
arg	this is a ||| a bins range weights	count=1
class	bounding [class_2] ||| [class_2] [class_1]	count=4
class	given bounding box ||| bounding box	count=2
function	write the ||| write	count=2
function	[function_1] html ||| [function_2] [function_1]	count=1
function	comoving kpc corresponding ||| kpc comoving per	count=2
class	point s ||| representation	count=1
function	the ||| uncertainty	count=1
function	recformats using ||| recformats	count=1
arg	[arg_1] specified mtype ||| [arg_2] [arg_1]	count=6
class	classmethod to ||| card	count=1
class	this named ||| irreducible	count=1
function	with the ||| transform	count=1
function	filename or ||| get file	count=1
function	return an object of ||| site	count=1
function	evaluate ||| evaluate	count=1
arg	the ufunc can ||| obj context	count=1
module	that accesses an hdu ||| io fits hdu	count=1
module	[module] and ||| [module]	count=1
function	add_catalog but ||| by	count=1
function	retrieves a data ||| data	count=1
arg	and base 10 ||| v	count=1
function	the powers of ||| powers	count=1
module	configspec ||| extern	count=1
function	to an array ||| model to	count=1
arg	or q [arg] column ||| array descr_output [arg]	count=1
arg	pattern ||| pattern	count=1
class	an existing [class] object passing ||| [class]	count=1
class	table ||| table base	count=1
function	from another ||| from	count=1
function	show it in a ||| show in	count=1
function	register a reader ||| register reader	count=3
class	fitting and modifies ||| fitter	count=1
function	total intensity from ||| intensity	count=1
function	read in ||| read	count=1
class	using ||| base	count=1
module	specific ||| coordinates	count=1
arg	string ||| mode overwrite	count=1
class	return an object of ||| location	count=1
class	a progress [class_2] ||| [class_2] [class_1]	count=1
arg	of x ||| x out	count=1
arg	the converted values in ||| other value equivalencies	count=2
class	this class for ||| earth	count=1
arg	val ||| val	count=1
module	in both the ||| io votable	count=1
module	using the ||| io	count=1
function	string for use ||| graph	count=1
module	bulk of the ||| io fits hdu	count=1
module	decorator that defines ||| extern bundled	count=2
function	generates a string for ||| make transform graph	count=1
class	coordinate ||| coord	count=1
function	a set of catalog ||| catalog	count=1
arg	before or after ||| before after replace	count=1
arg	given [arg] ||| array_large [arg] position	count=1
class	for ||| meta	count=1
function	multiply all arguments together ||| product	count=1
function	height of ||| height	count=1
function	number of indentation levels ||| indentation	count=1
function	the same [function] ||| get units with [function]	count=3
function	box [function_2] ||| [function_2] [function_1]	count=2
module	by the [module_2] ||| [module_1] [module_2]	count=2
function	rotate the ||| rotate	count=1
class	from the sorted ||| sorted	count=1
module	an array when it ||| io	count=1
function	frame [function_2] ||| [function_2] [function_1]	count=2
function	the apparent ||| apparent body	count=1
class	[class_1] coordinate ||| [class_1] [class_2]	count=2
function	are able ||| dir	count=1
module	[module_1] next fits ||| [module_1] [module_2]	count=2
function	pairs that handle spectral ||| spectral	count=1
class	state w ||| w0wa	count=1
class	defined by this values_ ||| values	count=1
module	to implement ||| fits	count=1
arg	to parameters ||| x	count=1
function_arg	[function_1] obj of ||| [arg_2] [function_1]	count=3
function	replaces ||| doc	count=1
function	to a new ||| to	count=2
module	as strings ||| ascii	count=1
class	of the instance and ||| representation	count=1
module_class	returns a dictionary detailing [module_1] [class_2] within any associated file ||| [module_1] hdu [class_2] hdu fileinfo	count=1
module	more hdu need to ||| fits hdu	count=1
arg	[arg_1] an ||| [arg_2] [arg_1]	count=1
arg	and val2 as ||| val2	count=1
class	reset logger ||| logger	count=1
function	[function_1] list ||| [function_1] int [function_2]	count=1
function	fit at ||| fit	count=1
class	w r ||| w0wa	count=1
arg	the unit by default ||| unit	count=1
function	an astropy [function_2] ||| [function_1] [function_2]	count=3
function	bscale/bzero ||| scale	count=1
function	from header [function_2] ||| [function_2] [function_1]	count=1
module	io votable exceptions votablespecerror ||| io votable	count=1
class	info ||| info	count=1
class	the registry ||| site registry	count=1
module	all of [module_2] ||| [module_2] [module_1]	count=1
function	through possible ||| possible	count=1
function	coordinate ||| coordinate	count=1
arg	new frame ||| frame merge_attributes	count=2
function	method being intended ||| message	count=1
function	[function_1] that ||| [function_2] [function_1]	count=4
module	for the futures in ||| futures	count=1
arg	of a given size ||| size	count=1
module	proper unit ||| units	count=1
module	vo services which is ||| vo	count=1
module	specific class of origin ||| builtin_frames	count=1
function	of minor ticks per ||| minor	count=1
arg	before or [arg_2] ||| [arg_2] [arg_1]	count=2
function	reading image [function_2] ||| [function_1] [function_2]	count=4
arg	output a line ||| output	count=1
class	the table ||| bin table	count=1
module	check matches ||| extern configobj	count=1
arg	function ||| data_format data_class function	count=2
module	the data ||| io fits	count=3
class	the compressed image ||| comp image hdu	count=2
function	copy is not ||| copy	count=1
module	a pointer into the ||| io	count=1
function	to uppercase ||| normalize keyword	count=1
module	or ||| io fits	count=3
function	a string representation ||| repr	count=2
arg	grid range n using ||| n	count=1
function	retrieves a data ||| pkg data	count=1
function_arg	[function_1] column's ||| [function_1] name [arg_2]	count=1
function	config [function_2] ||| [function_1] [function_2]	count=4
function	travel time correction ||| travel time	count=1
function	:func delete_catalog [function_2] ||| [function_1] [function_2]	count=1
module	axes in the ||| wcsaxes	count=2
class	hdu [class_2] ||| [class_2] [class_1]	count=2
arg	the children ||| iterator config	count=1
function	filename for [function_2] ||| [function_2] [function_1]	count=2
module	matching the ||| io fits	count=1
class	header __setitem__ and ||| header	count=1
function	its mantissa ||| mantissa	count=1
function	instance from ||| from	count=2
module	append [module_1] [module_2] file if filename exists ||| [module_1] [module_2] append filename data header	count=3
arg	with percentage complete ||| cls function items multiprocess	count=1
function_arg	the error [arg_2] ||| [function_1] [arg_2]	count=1
arg	finds the nearest ||| matchcoord catalogcoord nthneighbor storekdtree	count=1
module	of the coosys_ ||| io votable	count=2
function_arg	[function_1] urls blocks ||| [arg_2] [function_1]	count=3
function_arg	validate the [arg_2] ||| [function_1] [arg_2]	count=2
arg	given the value ||| value	count=1
function	new ||| skyoffset	count=1
arg	removes a coordinate transform ||| tosys transform	count=1
class	the coordinate ||| base coordinate frame	count=1
module	fitshdu fromhdulist(), but ||| io	count=1
function	convert to ||| convert	count=1
arg	offsets ||| offsets	count=1
module	checks if the ||| nddata	count=1
class	resource_ element ||| resource	count=1
module_class	dictionary detailing information about [module_1] [class_2] any associated file ||| [module_1] [class_2]	count=2
function	"best" match for ||| best match	count=2
function	for a specific class ||| make skyoffset	count=1
arg	same as calling start, ||| text wrap attrib	count=1
module_class	the hdu's [class_2] ||| [module_1] [class_2]	count=3
module	for a [module] ||| [module]	count=1
function	summary docs ||| summary	count=1
module	that is the ||| coordinates builtin_frames	count=1
arg	z1 ||| z1	count=1
module	from ||| io fits	count=1
class	affects ||| section	count=1
arg	this class for ||| cls	count=1
arg	and val2 ||| val2	count=2
arg	the overlapping part of ||| large_array_shape small_array_shape position mode	count=1
function	coordinate ||| transform graph	count=1
arg	object modify its ||| col_slice	count=1
function	[function_1] matrix from ||| [function_1] [function_2]	count=1
function	class that ||| skyoffset	count=1
class	deal with ||| function	count=1
function	the cmb temperature ||| tcmb	count=1
module	element by id_, defined ||| votable	count=2
module	exist in the header ||| io fits	count=1
function	[function_1] corresponding ||| [function_2] [function_1]	count=10
function	enabled in the ||| add enabled	count=1
module	object and then ||| utils	count=1
arg	supplied [arg] ||| [arg] format	count=1
function	from a given astropy ||| from table column	count=1
function	between pixel distances (in ||| pixel scale	count=1
module	value in the first ||| io ascii	count=1
module_class	: [class_2] ||| [module_1] [class_2]	count=8
function	object with the ||| to	count=1
module	and possibly on the ||| io fits	count=1
arg	and shape to a ||| shape	count=1
function	to a [function_2] ||| [function_1] [function_2]	count=2
function	single catalog of given ||| print cat	count=1
module_class	[module_1] image format ||| [class_2] [module_1]	count=1
function	apply ||| apply include exclude names	count=1
function	class of origin frame ||| make skyoffset cls	count=1
function	of indentation levels ||| get indentation	count=1
class	html as ||| html	count=1
arg	binding ||| declare	count=2
module	having either the simple ||| io	count=1
function	open a ||| open	count=2
function	earth parameters ||| earth	count=1
arg	x coordinates ||| x	count=1
module	[module] custom ||| [module]	count=3
module	objects for the ||| io	count=1
arg	val2 as two ||| val2	count=1
module	lookup the ||| io	count=1
function	ipython's pretty ||| pretty	count=1
function	kernel arrays of ||| kernel arrays	count=2
function	that is ||| skyoffset cls	count=1
function_arg	[function_1] [arg_2] ||| [function_1] arr [arg_2]	count=7
function	an hour [function] ||| hours to [function]	count=1
function	an [function] if ||| make [function]	count=1
function	data as ||| represent as	count=1
function_arg	[function_1] namespace ||| [arg_2] [function_1]	count=1
class	returns the number of ||| xmlwriter	count=1
function	xml data ||| xml	count=1
function	the distance from ||| distance	count=1
function	bounding_box ||| create bounding box	count=1
function	contain ||| normalize	count=1
arg	from a ||| filename	count=1
arg	dimensional ||| x amplitude	count=1
function	configspec ||| configspec	count=1
function	fromhdulist(), ||| fromfile	count=1
class	specifies ||| coo sys	count=1
module	numpy struct [module] ||| io [module]	count=2
function	draw ||| draw	count=2
arg	other is ||| other	count=2
function_arg	[function_1] desired ||| [arg_2] [function_1]	count=7
arg	wrap_angle ||| wrap_angle inplace	count=1
module	because [module] and compositeunit ||| [module]	count=1
arg	n of [arg_2] ||| [arg_2] [arg_1]	count=1
arg	paper_ table-lookup [arg] ||| [arg] fobj dist	count=3
function	the keyword name parsed ||| keyword	count=1
function	and convert to ||| convert	count=1
function	site registry ||| site registry	count=1
function	returns pixel [function] ||| proj plane pixel [function]	count=1
function	votable schema ||| validate schema	count=1
arg	associated with the ||| packageormod	count=1
function	directory is ||| is	count=1
arg	file or file-like object ||| fileobj	count=1
module	a fits file ||| io fits	count=3
module	return the items ||| io fits	count=1
function	for use with the ||| make	count=1
module	from ||| fits hdu	count=4
function	adjust physical unit ||| adjust physical unit	count=3
class	compressed image format and ||| comp image	count=1
arg	values ||| values mask	count=1
module	angular units given ||| units	count=1
function_arg	valid secondary name ||| secondary name	count=1
function	bounding_box defined on a ||| create bounding box	count=1
class	t a ||| w0wa cdm	count=1
function	angular diameter ||| angular diameter	count=3
function_arg	[function_1] subsampling ||| [function_1] indices [arg_2]	count=1
class	return an ||| location	count=1
arg	[arg_1] format ||| time [arg_1] [arg_2]	count=1
function	[function_1] from self ||| [function_2] [function_1]	count=2
arg	[arg_1] and scale ||| [arg_1] [arg_2]	count=4
function	from the model ||| get model	count=1
module	parameter ||| modeling	count=5
class	energy equation of ||| cdm	count=2
function	utc ||| utc	count=2
function	and b columns ||| combine a b columns	count=1
arg	coordinates for [arg] ||| [arg]	count=1
arg	uppercase ||| cls	count=1
module	accesses an hdu by ||| io fits hdu	count=1
module	hdus ||| hdu	count=1
function	multiline ||| multiline	count=1
arg	[arg_1] most ||| [arg_1] [arg_2]	count=1
function	the axis label ||| axislabel	count=1
class	exponential cutoff [class_2] ||| [class_2] [class_1]	count=3
module	new ||| coordinates	count=1
function	by ||| of	count=2
module	truly represent [module] file ||| [module]	count=1
function	class that is ||| skyoffset cls	count=1
function	is the [function_2] ||| [function_1] [function_2]	count=2
arg	in [arg_2] ||| [arg_2] [arg_1]	count=6
module	returns the ||| io fits	count=4
function	indentation levels the file ||| get indentation	count=1
arg	object or section associated ||| packageormod reload	count=1
arg	return the converted values ||| other value equivalencies	count=2
function	[function_1] a subclass ||| [function_2] [function_1]	count=6
module	a dict mapping parameter ||| modeling	count=3
module	fits ||| fits	count=20
function	by ||| site	count=1
function_arg	[function_1] frame to ||| [arg_2] [function_1]	count=3
function	return a view of ||| view	count=1
function	of ||| make skyoffset cls	count=1
module	the futures in the ||| compat futures	count=1
function	iterate ||| iter lines	count=2
function	sentence from a ||| sentence	count=1
module	objects describing [module_2] ||| [module_2] [module_1]	count=2
function	data transposed ||| t	count=1
class	of the point s ||| cylindrical representation	count=1
module	and ||| extern configobj	count=2
arg	confidence interval in bins ||| success bins range	count=1
function	find rows corresponding to ||| find	count=1
class	equivalent numpy ||| ascii column	count=2
arg	the given [arg] ||| array_large [arg]	count=2
module	if the given object ||| utils	count=1
function	create ||| make skyoffset	count=1
function	a column ||| column	count=2
module	a version ||| configobj	count=1
function	registry the first time ||| registry	count=1
arg	based on the ||| config	count=1
module	[module_1] votable exceptions ||| [module_1] [module_2]	count=8
function	currently running ||| running	count=2
function	the hash of ||| hash	count=1
function_arg	[function_1] col to ||| [function_1] [arg_2]	count=2
module	names of the ||| coordinates	count=1
function	that ||| array prepare	count=2
arg	do nothing ||| lines	count=1
arg	frequency ||| t y dy frequency	count=1
arg	a file ||| filename	count=1
function	a positive index ||| positive index	count=1
function	property ||| property	count=1
arg	(x_low x_high) ||| factor	count=2
function	reply ||| reply	count=1
function	positive index or zero ||| positive index	count=1
class	the client wishes ||| sampclient	count=1
function	generates a string ||| make transform	count=1
function_arg	the input value ||| input value	count=1
function	enable logging ||| enable exception logging	count=1
function_arg	[function_1] value and ||| [function_1] [arg_2]	count=4
class	this object's ||| array	count=1
function	of origin frame ||| skyoffset cls	count=1
function	a floating point number ||| float	count=1
function	value ||| normalize keyword	count=2
function	records [function] which includes ||| [function]	count=1
function	[function] of ||| [function]	count=23
arg	object's ||| new_frame	count=1
arg	val1 to jd1 ||| val1	count=1
arg	combination of iers_a ||| iers_a	count=1
arg	angle [arg_2] ||| coordinates rotation matrix [arg_1] [arg_2]	count=1
module	the cards matching the ||| io fits	count=1
function	checks ||| uncertainty	count=1
function	[function_1] have arbitrary ||| [function_2] [function_1]	count=4
class	table doesn't contain ||| table	count=1
class	a ||| hdu	count=2
function	package's docstring ||| docs	count=1
module	specifies the size of ||| votable	count=1
module	the columns and convert ||| io fits	count=1
arg	right [arg_2] ||| [arg_1] [arg_2]	count=2
module	a field-specifier ||| fits	count=1
function	data files ||| pkg data	count=2
module	non-celestial wcs ||| wcs	count=1
module	affects scalars/sections ||| extern configobj	count=1
function	over the default ||| update default	count=1
module	the items of ||| io	count=1
function	cartesian coordinates to ||| cartesian	count=4
function	header object with the ||| to header	count=1
arg	doesn't bypass ||| key default	count=1
class	scalars/sections ||| section	count=1
function	to [function_2] ||| [function_1] [function_2]	count=10
arg	weights on the m ||| m	count=1
arg	unit of ||| unit	count=1
function	instance from a ||| from	count=2
arg	a file on ||| cls filename	count=1
class	special ||| frame attribute	count=2
function	fits file ||| fits	count=1
function	bin [function_2] ||| [function_2] [function_1]	count=1
function	a string for use ||| graph	count=1
class	deal with a ||| quantity	count=1
module	to implement ||| io fits	count=1
module	either the ||| io fits hdu	count=1
function_arg	[function_1] a frequency ||| [arg_2] [function_1]	count=2
function	file returning ||| file	count=1
function	size of a ||| size	count=1
class	this ||| earth location	count=2
function_arg	radians to [arg_2] ||| [function_1] hms [arg_2]	count=1
function	set of skycoord coordinates ||| skycoord	count=1
function	catalog is created ||| catalog	count=1
function	[function_1] xml ||| [function_1] [function_2]	count=1
function	a valid mime content ||| mime content	count=1
arg	a deprecated unit in ||| unit	count=1
function	positive ||| positive	count=1
module	~astropy io ||| io	count=2
function	a specific class ||| skyoffset	count=1
module	the ||| io fits hdu	count=38
class	this object's data ||| array	count=1
module	string for use ||| builtin_frames	count=1
arg	for the package and ||| package encoding	count=1
function	of all the ||| find	count=1
arg	kernel ||| kernel boundary fill_value	count=1
function	register a ||| register	count=2
function	the center of the ||| center	count=2
function_arg	proportion and [arg_2] ||| [arg_2] [function_1]	count=4
module	given file or directory ||| utils	count=1
function	index ||| index	count=4
function	[function] for a ||| [function]	count=3
arg	the given value ||| value	count=3
module	units given a ||| units	count=1
module	is ||| xml	count=1
function	fromrecords ||| recarray fromrecords	count=1
function	a latex [function_2] ||| [function_2] [function_1]	count=6
function_arg	[function_1] [arg_2] array parameters ||| [function_1] [arg_2] assume_regular_frequency	count=9
function	[function_1] file can ||| [function_2] [function_1]	count=4
class	model in the operation ||| compound model	count=1
function	contents of a filename ||| get file contents	count=1
class	cutoff [class_2] ||| [class_2] [class_1]	count=3
class	the compressed image format ||| comp image	count=1
function	[function_1] record-valued ||| [function_1] [function_2]	count=1
function	bayesian information criterion ||| bayesian info criterion	count=6
arg	creates a new fitshdu ||| compress	count=1
function	ensure ||| prepare inputs	count=1
function	of resources ||| resources	count=1
class	for a ||| location	count=1
function	tabular ||| tabular	count=1
arg	to convert a keyword ||| keyword	count=1
function	[function_1] currently registered ||| [function_2] [function_1]	count=1
class	this ||| earth	count=1
function_arg	minimum [arg_2] ||| time time [function_1] [arg_2] keepdims	count=1
class	field-specifier to ||| card	count=1
function	skycoord ||| skycoord	count=1
class	rather than before ||| commented header	count=1
module	futures ||| futures	count=1
class	also affects scalars/sections ||| section	count=1
arg	grid range n ||| n	count=1
class	class for ||| location	count=1
module_class	[module_1] (points_low points_high) ||| [module_1] [class_2]	count=8
function	registered units with ||| get units with	count=2
arg	name [arg_2] ||| [arg_1] [arg_2]	count=1
module	class method ||| vo samp	count=3
module	with ||| builtin_frames	count=1
function	slices ||| slices	count=1
module_class	~astropy modeling model ||| modeling model	count=1
class	this ||| nddata	count=1
arg	the value and ||| value	count=1
module	of the hdus ||| io fits hdu	count=2
function	python function ||| function	count=1
function	a ~numpy ndarray to ||| array to	count=1
function	but with ||| base	count=1
arg	integer offsets with ||| offsets	count=1
class	the number of ||| xmlwriter	count=1
function	cutout array ||| cutout	count=3
function	perform a join ||| join	count=1
function	a string for ||| transform graph	count=1
function_arg	with the same [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
module	equation of ||| cosmology	count=2
arg	card to [arg_2] ||| [arg_2] [arg_1]	count=1
class	overrides the ||| time	count=1
class	fromhdulist(), but creates a ||| fits	count=1
function	a readable ||| get readable	count=1
function	2d kernel arrays of ||| kernel arrays 2d	count=1
class	[class_1] bar ||| [class_1] [class_2]	count=5
module	for the futures in ||| utils compat futures	count=1
module	an hdu ||| fits hdu	count=4
function	[function_1] diameter distance ||| [function_1] [function_2]	count=1
module	by the ||| io fits scripts	count=1
module	override the default writing ||| io ascii	count=1
function	[function_1] definitions ||| [function_2] [function_1]	count=2
function	is ||| make skyoffset	count=1
function_arg	[function_1] floats ||| [arg_2] [function_1]	count=3
module	list ||| ascii	count=1
function	with the coordinate ||| make	count=1
class	this item to a ||| config item	count=1
class	is especially ||| splitter	count=1
arg	[arg_1] image_g ||| [arg_2] [arg_1]	count=4
class	equation of state at ||| cdm	count=1
arg	z the hubble ||| z	count=4
function	value can [function_2] ||| [function_1] [function_2]	count=2
arg	like fitshdu fromhdulist(), but ||| filename	count=1
function	the center of ||| center	count=2
function	retrieves a data file ||| get pkg data	count=1
arg	to output a line ||| output	count=1
class	configspec ||| section	count=1
module	xml ||| utils xml	count=4
function	to ||| array to file	count=1
function	ascii strings to unicode ||| to	count=1
class	a quantity view of ||| quantity	count=1
arg	unit ||| unit	count=7
function	then formats ||| doc	count=1
function	replace string values in ||| replace	count=1
arg	angle represented ||| angle	count=1
function	the azimuth ||| phi	count=1
function	transverse proper ||| proper	count=1
arg	for the package and ||| package	count=2
function_arg	[function_1] [arg_2] ||| time time [function_1] [arg_2] keepdims	count=2
module	fitshdu fromhdulist(), but creates ||| io	count=1
function	[function_1] cache directory ||| [function_2] [function_1]	count=4
module	after the column name ||| io ascii	count=1
function	for a specific class ||| cls	count=1
module	fits file ||| fits hdu	count=1
class	run time in the ||| run time predictor	count=1
function_arg	[function_1] data ||| [arg_2] [function_1]	count=2
class	for ||| base hdu	count=3
function	have correct class for ||| convert col for	count=1
arg	for model ||| model weights	count=1
arg	[arg] since ||| [arg]	count=2
class	component [class_2] ||| [class_2] [class_1]	count=3
module	the referenced object ||| io	count=2
arg	line on ||| line	count=1
module	whether or not the ||| io	count=1
function	a writable file-like ||| writable	count=1
function_arg	[function_1] a frequency ||| [function_1] [arg_2] assume_regular_frequency	count=2
class	returns the number ||| xmlwriter	count=1
module	a function or method ||| vo samp	count=1
class	ring ||| ring2d	count=1
function	proper [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] mtype ||| [function_1] call [arg_2]	count=1
arg	parameter confidence interval ||| interval	count=1
class	cds ||| cds	count=1
function	get ||| get	count=24
arg	a polynomial [arg] which has ||| [arg]	count=1
function	comoving volume ||| comoving volume	count=2
function	besselian epoch ||| besselian	count=1
module	lookup the :class ||| io	count=1
arg	to ||| x slope intercept	count=1
class	the individual [class] functions once ||| [class]	count=2
class	and configspec ||| section	count=1
function_arg	with [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
module	a ||| builtin_frames	count=3
arg	simplest possible composite ||| max_depth include_prefix_units	count=1
function	data files in ||| get pkg data	count=2
module	astropy io [module] ||| io [module]	count=3
function	get a table ||| get table	count=3
function	this frame was ||| is frame attr	count=1
function	the type [function_2] ||| [function_2] [function_1]	count=2
function_arg	type [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] column meta ||| [function_2] [function_1]	count=1
function	decorated object ||| format	count=1
function	an hdf5 file this ||| table hdf5	count=1
function_arg	[function_1] internal buffers ||| [function_1] [arg_2]	count=1
class	convert this [class_2] ||| [class_1] [class_2]	count=1
arg	the axis ||| coord_type coord_wrap	count=1
function	contents of a filename ||| file contents	count=1
module	class for a ||| coordinates	count=1
module	[module] is unsigned ||| [module]	count=1
class	the group ||| groups	count=1
function	precession matrix ||| precession matrix	count=7
module	the coordinate class ||| coordinates	count=1
function	[function] the table ||| group [function]	count=1
function	epoch ||| epoch	count=1
function_arg	[function_1] begin ||| [function_1] key slice i [arg_2]	count=1
function	data files in ||| pkg data	count=2
class	r t ||| w0wa cdm	count=1
function	of the lookback ||| lookback	count=1
function	unicode ||| unicode	count=2
module	class of ||| coordinates builtin_frames	count=1
module	domain of the column ||| io votable	count=1
function	calculate the apparent ||| apparent body	count=1
function	that the ||| array prepare	count=1
function	will write to a ||| filebytes	count=1
function	create a ||| cls	count=1
module	the user requested ||| io fits	count=1
function	bscale/bzero from header ||| update header scale	count=1
class	composite ||| composite	count=3
function	returns the ||| get	count=1
function	known uncertainty ||| uncertainty	count=1
arg	that the ufunc can ||| context	count=1
function	convert a ||| to	count=2
function	warn or [function_2] ||| [function_1] [function_2]	count=4
class	file ||| votable file	count=3
function	convert a ||| to pixel	count=1
function	the constellation ||| get constellation	count=1
arg	[arg_1] val2 as ||| [arg_1] [arg_2]	count=3
function	clear that ||| clear	count=1
module	the next ||| io	count=1
module	a ||| futures	count=1
function	copy over the default ||| update default	count=1
arg	to mark a public ||| name since message alternative	count=1
module	struct [module] ||| io [module]	count=2
class	cylindrical polar ||| cylindrical	count=1
function	64-bit signed integer ||| int	count=1
function	path patch ||| patch path	count=2
arg	[arg_1] y onto ||| [arg_1] [arg_2]	count=1
arg	the overlapping part ||| large_array_shape small_array_shape position mode	count=1
function_arg	[function_1] for table ||| [function_1] [arg_2]	count=1
arg	val1 [arg_2] ||| [arg_2] [arg_1]	count=3
function	cosmology [function_2] ||| [function_2] [function_1]	count=3
function	origin frame ||| cls	count=1
function	worker ||| worker	count=1
function	in value can ||| can	count=1
class	vdtvaluetoolongerror('jedie') ||| too long	count=1
class	[class_1] attribute class ||| [class_1] [class_2]	count=2
arg	that may contain ||| cls	count=1
function	[function_1] indices from ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=1440
module	string for ||| builtin_frames	count=1
module_class	[module_1] header ||| [module_1] [class_2]	count=43
function	new class ||| cls	count=1
class	this card in ||| card	count=1
function	a diff ||| diff	count=1
module	model ||| modeling	count=29
class	a progress ||| progress	count=1
module	class of origin frame ||| coordinates	count=1
function	table in ||| table	count=1
function	retrieves a data file ||| pkg data	count=1
function	the copy copy function ||| copy	count=1
function	disconnect from the ||| disconnect	count=2
function	string formatted as hms ||| string	count=1
function_arg	[function_1] bic given ||| [arg_2] [function_1]	count=3
function	exclude any items ||| exclude	count=1
arg	[arg_1] kernel ||| [arg_2] [arg_1]	count=1
function	for defining their bounding ||| bounding	count=1
module	make sure [module] new item ||| [module]	count=1
class	as this unit ||| unit base	count=2
arg	method ||| private_key recipient_id msg_tag	count=1
function	number split [function_2] ||| [function_2] [function_1]	count=1
function	notification to ||| notification	count=1
module	set the ||| io fits	count=3
module_class	[module_1] parent class ||| [module_1] [class_2]	count=4
arg	inserts a new card [arg_1] [arg_2] existing card used to ||| [arg_1] [arg_2]	count=2
function	for multiplication with ||| array wrap	count=1
module	clear configobj instance and ||| configobj	count=1
arg	fromhdulist(), but creates a ||| filename	count=1
function	have ||| have	count=1
class	[class] datasum ||| [class]	count=3
arg	evaluating [arg] on each ||| [arg]	count=2
class	values ||| base	count=1
module	with the ||| coordinates	count=3
function	float or ||| float or	count=2
function	config file can be ||| unedited config file	count=1
function	y position in the ||| position	count=1
function	searchsorted or ||| searchsorted	count=1
arg	a string ||| string	count=1
arg	string from ||| cls fileobj sep endcard	count=1
function	between pixel ||| pixel	count=1
function	a latex ||| latex	count=1
module	ordereddict from !!omap in ||| table	count=1
module	and return the ||| io ascii	count=1
function	to pixel ||| to pixel	count=2
function	it will pad ||| fromstring	count=1
function	[function_1] we create ||| [function_2] bounding [function_1]	count=1
module	file ||| xml	count=1
class	dimensional [class] ||| [class] power	count=1
function	create a ||| make skyoffset	count=1
function	terminal ||| terminal	count=1
function	if it is a ||| is	count=2
module	of this class for ||| coordinates	count=1
function	latitude of ||| latitude	count=1
arg	of this class for ||| cls	count=1
class	that ||| function quantity	count=2
function	burrows [function_2] ||| [function_1] [function_2]	count=4
function	[function_1] registry the ||| [function_1] [function_2]	count=3
arg	[arg_1] mtype and ||| [arg_2] [arg_1]	count=2
function	the ||| get	count=3
arg	this is a ||| a bins range	count=1
function_arg	flush [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] points ||| [function_1] [function_2]	count=3
arg	specified platescale ||| platescale	count=1
module	the meaning of ||| votable	count=1
module	of ||| nddata	count=1
function	indices [function_2] ||| [function_2] [function_1]	count=4
function	numpy dtype object created ||| dtype	count=1
module	but ||| fits	count=1
function	the ||| transform graph	count=1
function	[function] s ||| [function]	count=1
function	and dec are ||| apparent position	count=1
function	handle spectral [function_2] ||| [function_1] [function_2]	count=1
function	is a [function_2] ||| six meta path importer [function_1] [function_2] fullname	count=1
arg	scale and ||| format scale	count=1
function	data [function] ||| transform [function]	count=2
arg	points within a given ||| searcharoundcoords distlimit	count=1
function	docstring ||| format doc	count=1
arg	exclude_names [arg_2] ||| [arg_2] names include_names [arg_1]	count=1
class	new compound ||| compound	count=1
arg	data array by ||| data block_size	count=2
function	to the error ||| error	count=1
module	for [module_1] [module_2] ||| [module_1] [module_2]	count=4
function	from data [function_2] ||| [function_2] [function_1]	count=1
function	multiplication ||| array wrap	count=2
module	this ||| modeling	count=1
function	in which ||| in true coordinates	count=1
function	this frame ||| is frame attr	count=1
module	exist in the ||| io fits	count=1
function	string to ||| string	count=1
function	derivative ||| fit deriv	count=1
class	specifies the ||| coo sys	count=1
module	identified by [module] ||| [module]	count=2
class	for internal use ||| element	count=1
function	display minor [function_2] ||| [function_1] [function_2]	count=1
class	check that the ||| quantity	count=1
module	gets the decimal ||| io fits	count=1
class	the bst in ||| bst	count=1
class	converts [class_2] ||| [class_1] [class_2]	count=1
function	class ||| class	count=2
function	xml ||| xml	count=2
function	merge column meta data ||| merge col meta	count=1
function	file can be safely ||| file	count=1
function	specific class of ||| make	count=1
module	for the type ||| io ascii	count=1
arg	convert skycoord in gcrs ||| skycoord	count=1
function_arg	[function_1] [arg_2] ||| [function_1] mtype [arg_2]	count=16
arg	from an ||| cls iterable	count=1
function_arg	from the [arg_2] ||| visualization wcsaxes wcsaxes [function_1] transform [arg_2]	count=3
function	unit ||| iter unit	count=1
module	to ||| utils	count=1
function	register a table writer ||| register writer	count=1
function	a power to a ||| power	count=1
module	serializing in the ||| io	count=1
module	data string the ||| io fits hdu	count=1
module	either the simple ||| io	count=1
class	:class field instance ||| field	count=1
function	[function_1] mantissa and ||| [function_2] [function_1]	count=1
module	and then formats ||| utils	count=1
function	new class that is ||| skyoffset cls	count=1
function	correct class for this ||| convert col for	count=1
function	for a ||| cls	count=1
function	[function_1] subclass of ||| [function_1] bounding box [function_2]	count=2
module	functionquantity ||| function	count=1
module_class	[module_1] converter ||| [module_1] votable [class_2]	count=1
arg	join_type ||| join_type metadata_conflicts	count=1
function	bscale/bzero from header ||| header scale info	count=1
function	for this ||| col for	count=1
function	into one in ||| in true coordinates	count=1
arg	and if method='auto' ||| dy fit_mean nterms	count=1
arg	a version of numpy ||| a b rtol	count=1
function	[function_1] table ||| [function_2] [function_1]	count=5
class	is currently ||| xmlwriter	count=1
class	[class_1] coordinate ||| [class_2] [class_1]	count=2
class	two model classes ||| model meta	count=2
arg	and confidence interval in ||| range	count=1
function	show it in ||| show in	count=2
module	can deal with a ||| units	count=1
arg	val2 format [arg_2] ||| [arg_1] [arg_2]	count=3
function	split it into its ||| split	count=1
module	[module_1] [module_2] ||| [module_2] fits [module_1]	count=6
function	[function_1] to noise ||| [function_1] [function_2]	count=1
function	in a multiline ||| multiline	count=1
module	is ||| builtin_frames	count=1
function	data files ||| get pkg data	count=2
arg	can ||| obj	count=1
function	set a minimum ||| min	count=1
class	[class_1] part ||| [class_2] [class_1]	count=2
class	the default behavior ||| time	count=1
function_arg	its mantissa [arg_2] ||| [function_1] exponent [arg_2]	count=1
function	fitshdu fromhdulist(), but ||| fromfile	count=1
arg	takes any ||| cls members	count=1
class	of ||| time	count=1
class	name ||| earth	count=1
arg	optical/ir using ||| t source_eps sky_eps dark_eps	count=1
module	object an a list ||| fits	count=1
arg	by lon ||| lon	count=1
function	of scipy ||| scipy	count=1
module	hdu ||| hdu	count=5
function	a signature object for ||| signature	count=1
class	of ||| base representation	count=4
function	coordinate [function_2] ||| [function_2] [function_1]	count=1
class	model in ||| model meta	count=1
function	[function] of what ||| representation [function]	count=3
class	of header ||| header	count=2
function	getsubscriptions ||| get subscriptions	count=1
function	for propagation ||| convert uncertainty	count=1
class	fromhdulist(), but creates ||| fits hdu	count=1
function	the configspec on ||| set configspec	count=1
function	[function] sub-:class ||| [function]	count=1
function	set the default ||| set	count=1
arg	[arg_1] and kwargs ||| [arg_1] [arg_2]	count=1
class	xmlwriter ||| xmlwriter	count=1
arg	astropy table table ||| table	count=1
module	[module] checksum_keyword ||| [module]	count=1
arg	for this frame ||| frame units	count=1
class	units quantity [class] z=0 ||| [class]	count=1
function	absorption [function_2] ||| [function_1] [function_2]	count=3
function_arg	[function_1] hour ||| [arg_2] [function_1]	count=1
function	diff between two ||| report diff keyword	count=1
module	decorator [module_2] ||| [module_1] [module_2]	count=4
arg	add a and b ||| b	count=1
class	[class_1] this frame ||| [class_2] [class_1]	count=1
function_arg	[function_1] [arg_2] 0) ||| [function_1] input [arg_2]	count=6
module	sure [module] new item ||| [module]	count=1
arg	fromhdulist(), but creates ||| cls filename	count=1
function	view ||| view	count=1
function	in which ra and ||| in true coordinates	count=1
function	instance from [function_2] ||| [function_1] [function_2]	count=1
function	function relative to ||| relative	count=1
function	find [function_2] ||| [function_1] [function_2]	count=2
arg	set [arg_1] [arg_2] to ||| [arg_1] [arg_2]	count=1
class	data ||| nddata	count=1
function	generates ||| graph	count=1
function	sentence from a string ||| sentence	count=1
module_class	computes the on-sky ||| coordinates sky	count=1
function_arg	iau precession/nutation [arg_2] ||| [arg_2] [function_1]	count=1
arg	the column name [arg_1] [arg_2] ||| descrs [arg_1] [arg_2]	count=2
function_arg	[function_1] hdu ||| [function_1] [arg_2]	count=1
function_arg	[function_1] angle ||| [arg_2] [function_1]	count=1
module	current configobj as a ||| extern configobj	count=1
module	the file is currently ||| utils	count=1
module_class	the [class_2] ||| [module_1] fits [class_2]	count=1
module	protocol the ||| io	count=1
function	appropriate si units ||| si	count=1
arg	between this ||| other	count=2
arg	a deprecated unit ||| s unit	count=1
function	float [function_2] ||| [function_2] [function_1]	count=2
function	model fit at ||| periodic fit	count=1
module_class	a fits [class_2] ||| [module_1] [class_2]	count=8
arg	given frequency ||| frequency	count=1
function	world names ||| names	count=1
module	file on ||| hdu	count=1
module	object ||| coordinates	count=1
arg	for single arg ||| arg	count=1
function_arg	[function_1] scale ||| [function_1] time [arg_2]	count=1
function	[function_1] nousek in ||| [function_1] [function_2]	count=10
module	used for [module] constant ||| [module]	count=1
class	[class_1] bar via ||| [class_2] [class_1]	count=1
class	classmethod to convert a ||| card	count=1
module_class	[module_1] [class_2] ||| [module_1] bin table [class_2]	count=2
module_class	the [class_2] ||| [module_1] hdu [class_2] hdu fileinfo	count=3
function	latitude ||| latitude	count=1
module	in ~astropy modeling ||| modeling	count=1
function	of the decorated ||| format doc	count=1
module	the decimal point ||| io fits	count=1
module	that the ||| units function	count=1
arg	fromhdulist(), but creates a ||| cls filename	count=1
module	table ||| table	count=8
function	a float radians ||| radians	count=1
function	too long to fit ||| format long	count=1
function	[function_1] parallel from ||| [function_1] [function_2]	count=2
arg	the package and provides ||| package encoding cache	count=1
arg	to getsubscriptions ||| client_id	count=1
arg	write function like write ||| write fileobj	count=1
arg	and fitter are compatible ||| supported_constraints	count=1
module	classmethod to ||| fits	count=1
function	from a given astropy ||| from table	count=1
module	use with the ||| coordinates	count=1
function	[function_1] visual properties ||| [function_2] [function_1]	count=1
function_arg	[function_1] bic ||| [function_1] lsq ssr [arg_2]	count=3
module	the column ||| io ascii	count=1
class	[class_1] box sequence ||| [class_1] [class_2]	count=3
function	[function_1] kernel arrays ||| [function_2] [function_1]	count=2
function_arg	[function_1] that value ||| [arg_2] [function_1]	count=3
function	break up long string ||| format long image	count=1
module	a string for use ||| builtin_frames	count=1
function	from a ||| fromfile	count=1
function	from [function_2] ||| init [function_1] [function_2]	count=3
function	[function_1] summary docs ||| [function_1] [function_2]	count=4
function_arg	[function_1] a key ||| [function_1] [arg_2]	count=1
function	given astropy ||| to	count=1
function	recursively iterates over all ||| iter fields	count=1
module	file using the ||| io	count=1
module	read the hdu ||| io fits hdu	count=1
module	an iterator of the ||| io ascii	count=1
function	class that ||| make skyoffset cls	count=1
function	for ||| make transform graph	count=1
class	[class] for the ||| earth [class]	count=2
module	get ||| lombscargle implementations	count=1
function	angle or scalar coordinate ||| coord type	count=1
function	around a ||| search around	count=2
class	spherical polar coordinates ||| unit spherical	count=1
function	class's __getitem__, such that ||| copy on getitem shim	count=1
function	handle spectral [function_2] ||| [function_2] [function_1]	count=1
function	iterator equivalent to map ||| map	count=1
module	decorator that defines __unicode__ ||| extern bundled	count=1
function	around a supplied set ||| around	count=2
function	table's data ||| data	count=1
arg	fromhdulist(), but ||| cls	count=1
module	from a ||| io	count=1
function	data file ||| data	count=1
function	[function_1] points ||| [function_2] [function_1]	count=3
function	at ||| w0	count=1
module_class	not the [class_2] ||| [module_1] [class_2] determine formats cls format	count=6
module_class	[module_1] image format ||| [module_1] comp [class_2]	count=1
function	scipy ||| scipy	count=1
arg	but creates a ||| cls filename	count=1
class	progress bar via the ||| progress bar	count=1
function	as a [function_2] ||| [function_2] [function_1]	count=1
arg	image_r ||| image_r	count=1
arg	join [arg] ||| [arg] right keys	count=2
class	the client in ||| sampclient	count=1
function	the representation of the ||| representation	count=1
function	bounding_box defined on ||| create bounding box	count=1
function	subtract two filter ||| sub	count=1
function_arg	validate [arg_2] ||| [function_1] [arg_2]	count=2
function	:func delete_catalog ||| delete catalog	count=1
function	as a 3-tuple ||| tuple	count=1
class	tuple ||| representation	count=1
function	floating point ||| float	count=1
function	[function_1] or ||| [function_2] [function_1]	count=7
class	check that the ||| function quantity	count=1
class	[class_1] column ||| [class_2] [class_1]	count=1
module_class	of this parameter ||| modeling parameter	count=1
arg	shape and position from ||| shape position	count=1
function	separation in transverse proper ||| proper	count=1
function	line for the ||| line	count=1
class	[class_1] hdus ||| [class_2] [class_1]	count=3
module_class	compressed [class_2] ||| [module_1] comp [class_2]	count=4
class	of state ||| cdm	count=2
function	value ||| model value	count=2
module	directly either a standard ||| hdu	count=1
function_arg	notification [arg_2] ||| [function_1] mtype [arg_2]	count=2
function	kraft [function_2] ||| [function_2] [function_1]	count=8
function	parameters ||| conf	count=1
arg	of iers_a and ||| cls iers_a	count=1
function	this class for a ||| site	count=1
function	[function_1] adjust ||| [function_1] [function_2]	count=2
function	frame was ||| frame	count=1
arg	before or after ||| before after	count=1
function	input ||| coords	count=1
class	rather than before ||| commented	count=1
module	a ||| utils compat futures	count=2
function	numpy array [function_2] ||| [function_2] [function_1]	count=2
arg	table lines ||| lines	count=1
function	a string ||| graph	count=1
function	of ||| get	count=2
function	[function_1] given a ||| [function_2] [function_1]	count=8
module	implements card [module_1] [module_2] ||| [module_1] [module_2]	count=2
function	delete bscale/bzero from header ||| header scale info	count=1
function_arg	[function_1] obj ||| [function_1] [arg_2]	count=3
arg	object ||| f	count=1
module	an actual fits ||| fits	count=1
function	string ||| make transform graph	count=1
function	blank cards at ||| countblanks	count=1
function	valid mime ||| mime	count=1
module	to convert a ||| io fits	count=1
class	transformation ||| transform	count=1
class	group in ||| groups	count=1
module	iers ||| iers	count=1
function	proper kpc corresponding ||| kpc proper per	count=2
arg	mapping [arg_2] ||| [arg_2] [arg_1]	count=2
function	object and ||| format doc	count=1
module_class	of [module_1] [class_2] element ||| [module_1] votable [class_2]	count=3
function	this ||| is	count=1
function	from ||| init from	count=2
class	[class_1] skycoord contains ||| [class_1] [class_2]	count=1
class	like fitshdu fromhdulist(), ||| hdu	count=1
class	compressed image format ||| comp image	count=1
class	fitshdu fromhdulist(), but creates ||| fits	count=1
function	new class ||| make skyoffset	count=1
arg	a new coordinate transformation ||| transform	count=1
function	[function_1] width ||| [function_1] [function_2]	count=4
function_arg	to [arg_2] ||| [function_1] frame [arg_2]	count=1
function	units with ||| get units with	count=2
function	data files in a ||| data	count=2
module	like fitshdu fromhdulist(), but ||| fits	count=1
class	location to the registry ||| registry	count=1
class	to the compressed ||| comp	count=1
function	__eq__, the hash of ||| hash	count=1
module	equation ||| cosmology	count=2
module	this object's data ||| nddata	count=1
function	a record-valued ||| if rvkc	count=1
module_class	table column ||| table base column	count=1
function	checks if the ||| convert uncertainty	count=1
module	and ||| units	count=1
class	point s ||| physics spherical representation	count=1
module	a ||| units	count=1
class	of ||| section	count=1
module	to [module] file-like object ||| [module]	count=1
function	slices for ||| overlap slices	count=1
function	origin frame ||| make	count=1
arg	this frame ||| frame units kwargs	count=1
function	lookback time ||| tfunc	count=1
arg	constrained parameters ||| fps	count=1
class	each [class] ||| table [class]	count=1
function_arg	[function_1] oneself possibly ||| [arg_2] [function_1]	count=1
function_arg	[function_1] specific msg-tag ||| [function_1] response [arg_2]	count=1
class	data ||| comp image hdu	count=1
class	column is for an ||| column	count=1
arg	a keyword value ||| keyword	count=1
function	response to ||| receive response	count=1
class	x y ||| cutout2d	count=1
arg	the given key data ||| key data	count=1
function	uppercase ||| normalize keyword	count=2
function	power to ||| validate power	count=1
module	clear configobj ||| configobj	count=1
arg	y ||| y	count=2
module	returns ||| xml	count=1
arg	of integer offsets with ||| offsets	count=1
arg	their respective ||| model fitter power min_datapoints	count=1
function	file [function] which ||| tmp [function]	count=1
function	refer to another ||| ref	count=2
function	blackbody_nu but for :math ||| lambda	count=1
function	transformation between two ||| transform	count=1
function	mime content [function_2] ||| [function_1] [function_2]	count=1
function_arg	frame from [arg_2] ||| [function_1] [arg_2]	count=3
module_class	mapping parameter [class_2] ||| [module_1] [class_2]	count=2
module	of this class ||| coordinates	count=1
module	the coosys_ ||| io	count=1
function	a ||| array prepare	count=2
function	that ||| make skyoffset	count=1
module_class	[module_1] for ||| [module_1] [class_2]	count=8
function	tables ||| tables	count=2
module	the implementations from ||| io fits	count=1
arg	unit by default ||| unit	count=1
function_arg	proportion [arg_2] ||| [arg_2] [function_1]	count=4
arg	a version of ||| a b rtol	count=1
arg	to a function ||| function	count=4
arg	table with the right ||| right	count=1
class	listeners list this relies ||| notifier mixin	count=1
module	the user requested ||| io fits hdu	count=1
module	to convert a ||| fits	count=1
function	load observatory database ||| get downloaded sites	count=1
function	booleans ||| bool	count=1
module_class	returns a dictionary detailing [module_1] [class_2] any associated file ||| [module_1] [class_2]	count=1
function_arg	arrays [arg_2] ||| [function_1] 2d [arg_2]	count=1
arg	binding table the ||| declare	count=2
arg	this frame ||| frame units	count=1
arg	of keyword ||| keyword	count=1
class	compound ||| compound	count=1
arg	table object to ||| table	count=1
function	that may contain ||| keyword	count=1
function	the source-included data ||| data	count=1
function	all of the data ||| pkg data	count=2
module	current configobj as ||| extern configobj	count=1
arg	[arg_1] exclude_names ||| [arg_1] [arg_2]	count=1
function_arg	a new [arg_2] ||| [function_1] [arg_2]	count=1
module	exist in the header ||| io fits hdu	count=1
module	using [module_2] ||| [module_1] [module_2]	count=1
function	of a given astropy ||| to	count=1
function	all the currently running ||| running	count=1
module	called by the ||| io fits scripts	count=1
function	clear that also ||| clear	count=1
function	a property or method ||| property	count=1
class	meat of header ||| header	count=1
module	is ||| utils	count=1
function	a set of ||| set	count=1
class	coordinate ||| representation	count=1
arg	to cls ||| cls	count=1
arg	_boundingbox with ||| func sig	count=1
function	this class for ||| site	count=1
arg	a new processpoolexecutor instance ||| max_workers	count=1
class	representation [class_1] [class_2] is used by ||| [class_1] [class_2] repr	count=1
arg	angle represented as a ||| angle	count=1
module	with the ||| io	count=3
function	object ||| get file	count=1
function	_lookup_by_attr_factory, but looks ||| by	count=1
function	list ||| float list	count=1
class	the expression ||| expression	count=1
function	longer [function] ||| disable [function]	count=3
arg	file ||| file cache	count=1
function	parse method ||| parse	count=1
module	of the hdus in ||| io fits hdu	count=1
arg	[arg_1] and ||| [arg_2] [arg_1]	count=8
function	any extension ||| header	count=1
function	rotate the [function_2] ||| [function_2] [function_1]	count=4
module	scalars/sections also clears ||| extern	count=1
function	config ||| unedited config	count=1
arg	val2 must be ||| val2	count=1
function	the data files in ||| pkg data	count=2
function	find ut1 - ||| delta ut1	count=1
arg	in fastbasic to output ||| output	count=1
class	the cutout ||| cutout2d	count=1
function	if not a length ||| to and validate length	count=1
function	if not a length ||| validate length	count=1
function	bitpix value ||| bitpix	count=1
function	delete given metadata ||| delete	count=1
arg	pixel ||| pixel	count=1
arg	the uncertainties are compatible ||| other_uncert	count=1
class	actual fitting and modifies ||| fitter	count=1
class	this object's data ||| nddata	count=1
arg	a kernel ||| kernel	count=1
arg	finals2000a * file provided ||| file readme	count=1
class	a stretch ||| dist stretch	count=2
function	create ||| create	count=2
function	like _lookup_by_attr_factory, but looks ||| lookup by	count=1
module	check that the ||| units	count=1
function	upon removal [function] through ||| update [function]	count=1
function	[function_1] type as ||| [function_2] [function_1]	count=9
function	coordinate components ||| components	count=1
arg	binding [arg_2] ||| [arg_2] [arg_1]	count=4
arg	cls [arg_2] ||| [arg_2] [arg_1]	count=1
module	unit ||| units	count=10
function_arg	[function_1] mtype to ||| [arg_2] [function_1]	count=1
arg	from the class ||| cls	count=1
function	this object [function] ||| [function]	count=3
function	the tick ||| ticklabel	count=1
function	[function_1] a votable ||| [function_2] [function_1]	count=6
class	the executor ||| executor	count=1
arg	from a file on ||| cls	count=1
function	pixel ||| pixel	count=5
class	equation of state ||| w0wa cdm	count=2
function	defines the mime content ||| content	count=1
function	table file parameters ||| table	count=1
function	attributes ||| attrs	count=1
module	z=0 ||| cosmology	count=5
module	all cards in the ||| io fits	count=1
arg	coordinate transform from ||| tosys transform	count=1
arg	the value to any ||| value	count=1
class	in [class] ||| [class]	count=1
class	w r ||| w0wa cdm	count=1
function	length ||| and validate length	count=1
function	reader for ||| reader	count=1
function	wrapper for multiplication with ||| wrap	count=1
class	their ||| model	count=1
class	coefficients in one ||| polynomial	count=1
function	[function_1] of column ||| [function_2] [function_1]	count=1
function	the ||| array	count=1
function	a power ||| validate power	count=1
module	returning the ||| io	count=1
function	the decorated object ||| format	count=1
function	[function_1] have ||| [function_1] [function_2]	count=4
module	database ||| client	count=1
class	[class_1] column ||| table [class_1] [class_2]	count=1
function	[function] output ||| [function] pprint	count=1
module	input ascii files the ||| io fits	count=1
module	current samp ||| samp	count=4
module	the file is open ||| io fits	count=1
module	units ||| units	count=13
function	as a string ||| string	count=2
function	specific class of ||| make skyoffset cls	count=1
function	patch ||| patch	count=1
arg	also have a mask ||| mask	count=1
function	too long to ||| format long	count=1
function_arg	[function_1] to parameters ||| [function_1] [arg_2]	count=1
class	reset logger to ||| logger	count=1
function	if ||| uncertainty	count=1
function	density of photons ||| ogamma0	count=1
arg	a file-like ||| arr outfile	count=1
class	[class_1] image ||| [class_2] [class_1]	count=2
function	merge [function_2] ||| [function_1] [function_2]	count=5
function_arg	[function_1] axis ||| [function_1] [arg_2]	count=5
module	quantity [module] is ||| [module]	count=1
class	either model in ||| compound model	count=1
function	object around a supplied ||| around	count=1
function	determine if it is ||| is	count=2
function	center of the bin ||| center 1d	count=1
arg	the minor ||| renderer pixel_array angle_array offset	count=1
function	a linear interpolation ||| linear 1d	count=2
module	value of the ||| io ascii	count=1
function	function relative to ||| nu relative	count=1
function	a filename or ||| file	count=1
function	over all [function] ||| iter [function]	count=1
class	name ||| earth location	count=2
arg	the [arg] ||| [arg] right keys	count=1
function	[function] that ||| has mixin [function]	count=1
class	exponential cutoff power ||| exponential cutoff power	count=4
function	the data ||| pkg data	count=3
function	non-relativistic matter ||| om	count=1
module	origin ||| coordinates builtin_frames	count=2
function	private key used ||| get private key	count=1
class	image format and ||| image	count=1
class	for this ||| base outputter	count=1
function	input ||| tbdata	count=1
module	with the coordinate ||| coordinates	count=1
class	frame a dict it ||| frame	count=1
function	empirical [function] parametrized ||| p0 [function]	count=1
function	catalog of given ||| print cat	count=1
function	units with [function_2] ||| [function_1] [function_2]	count=4
arg	values in mjd ||| mjd	count=1
function	converters and [function_2] ||| [function_2] [function_1]	count=3
function	adjust [function_2] ||| [function_2] [function_1]	count=2
module_class	[module_1] location ||| [module_1] [class_2]	count=2
arg	z2 ||| z2	count=1
class	an existing [class] object ||| [class]	count=1
class	expected attribute class ||| frame attribute	count=2
function	groups in the ||| groups	count=1
class	table ||| ascii	count=1
function	a floating number to ||| float	count=1
arg	known observatory/site by ||| site_name	count=1
arg	a file-like object ||| fileobj	count=1
function_arg	separation between ||| separation other	count=1
class	attribute ||| attribute	count=2
arg	cls [arg_2] ||| [arg_1] [arg_2]	count=1
function	shape tuple of ||| shape	count=1
arg	ipython ||| tableid css display_length table_class	count=1
function	indent a block of ||| indent	count=1
function_arg	input row ||| coords row	count=1
module	deal with a functionquantity ||| units function	count=1
function_arg	[function_1] of floats ||| [arg_2] [function_1]	count=3
function	the same ||| equivalent	count=1
module	the given ||| io votable	count=1
module_class	implement [class_2] ||| [module_1] [class_2]	count=6
class	representation [class_2] ||| [class_2] [class_1]	count=2
function	specified ||| sort	count=1
arg	[arg] on-sky ||| [arg]	count=4
arg	row from ||| row	count=1
module	specific class of ||| coordinates builtin_frames	count=1
class	number of ||| xmlwriter	count=1
function	scales along each axis ||| scales	count=1
arg	the left [arg_2] ||| [arg_2] [arg_1]	count=1
function	empty ||| empty	count=1
function	indentation levels the ||| indentation	count=1
arg	copy ||| copy	count=1
function	for a ||| skyoffset	count=1
class	the ||| base representation	count=2
module	similar ||| fits	count=3
function	warn ||| vo warn	count=1
module	angular units with ||| units	count=1
function_arg	write out data ||| write data	count=1
function	add the ||| add	count=1
module_class	[module_1] of header ||| [module_1] [class_2]	count=2
module	installed ||| core	count=1
arg	that the ||| obj	count=1
function	draw only ||| draw	count=1
module	one or more hdu ||| hdu	count=1
function	[function_1] functions ||| [function_2] [function_1]	count=2
module	on the pedantic setting ||| io	count=1
function	deal ||| array	count=1
class	the header ||| ipac header	count=1
function	[function_1] :math \frac{1}{h_z} ||| [function_2] [function_1]	count=6
arg	file ||| fileobj	count=1
module	generates a string for ||| coordinates builtin_frames	count=1
function_arg	[function_1] key data ||| [arg_2] [function_1]	count=1
arg	[arg_1] the right ||| [arg_2] [arg_1]	count=2
class	class for [class_2] ||| [class_1] [class_2] match header cls header	count=1
class	of the composite ||| composite	count=3
class	each data line ||| data	count=1
function	light [function_2] ||| [function_1] [function_2]	count=2
function	dtype for a ||| dtype	count=2
function	with the [function_2] ||| [function_1] [function_2]	count=4
arg	is a ||| a bins	count=1
function	[function_1] have ||| [function_2] [function_1]	count=4
function	given a ||| to	count=1
class	a version of ||| section	count=1
module	if necessary ||| fits hdu	count=1
arg	n of ||| n	count=1
module	an iterator of the ||| io	count=1
function	and set ||| set	count=2
arg	unit returns the name ||| unit	count=1
function	single-dimensional shape entries ||| squeeze	count=1
class	this column [class_2] ||| [class_1] [class_2]	count=1
class	fitshdu fromhdulist(), but ||| fits	count=1
function_arg	all the [arg_2] ||| [function_1] equivalent units [arg_2]	count=1
function	diff ||| report diff	count=1
module	the data of a ||| io	count=1
function	content inside ||| content	count=1
arg	'sep' parameter ||| h precision pad sep	count=1
arg	standard locations for ||| data_name	count=2
class	[class_1] this frame ||| [class_1] [class_2]	count=1
function	register a [function_2] ||| [function_1] [function_2]	count=2
function	a sidereal time using ||| sidereal time	count=1
module	the algorithm described in ||| io fits hdu	count=1
arg	mtype and ||| mtype	count=1
class	current hdu data ||| hdu	count=1
arg	of the left table ||| left	count=1
arg	function ||| function force	count=2
function	rename a ||| rename	count=2
function	add a value from ||| add	count=1
module	is currently ||| utils	count=1
arg	table data to ||| table	count=1
module	that may ||| fits	count=1
arg	given [arg_2] ||| [arg_2] [arg_1]	count=2
class	an optional ||| property	count=1
function	package's docstring ||| transform graph docs	count=1
arg	fitshdu fromhdulist(), ||| cls filename	count=1
function	of origin ||| make	count=1
module	futures in ||| compat futures	count=1
function	find all ||| find	count=1
function	coordinates back to ||| orig	count=1
module	fromhdulist(), but ||| io	count=1
module	that may contain ||| io fits	count=1
function	[function_1] the cutout ||| [function_2] [function_1]	count=3
module	the returned cards ||| io fits	count=1
class	column [class_2] ||| [class_1] [class_2]	count=1
module	[module_1] from the ||| [module_2] fits [module_1]	count=3
module	the bscale value ||| io fits hdu	count=1
module	[module] a new ||| [module]	count=4
class	model in the ||| compound model meta	count=1
function	classmethod to convert a ||| keyword	count=1
module_class	to implement header ||| io fits header	count=1
function	barycentric position and velocity ||| body barycentric posvel	count=1
arg	begin to ||| begin	count=1
arg	a coordinate transform ||| transform	count=1
class	image format and ||| image hdu	count=1
function	xml data tags are ||| xml	count=1
function	response ||| response	count=2
function	is a list ||| is bool list	count=1
function	this frame was ||| frame attr	count=1
function	iau precession/nutation ||| erfa	count=1
class	equation of ||| w0wa cdm	count=2
function	model at the ||| model	count=1
function_arg	minimum [arg_2] ||| [arg_2] [function_1]	count=2
module	initializes ||| utils compat futures	count=2
function	as a file-like object ||| fileobj	count=1
function	filename or ||| file	count=1
arg	a version of numpy ||| a	count=1
arg	out ||| out	count=1
function	[function_1] that ||| [function_1] [function_2]	count=4
arg	for the package ||| package encoding cache	count=1
class	the graph ||| graph	count=2
module_class	[module_1] table ||| [class_2] [module_1]	count=1
function_arg	[function_1] an array ||| [function_1] [arg_2]	count=1
function	range [0 60] if ||| check second range	count=1
function	[function_1] proportion ||| [function_1] [function_2]	count=1
arg	the input row ||| row	count=1
function_arg	[function_1] printer ||| [function_1] [arg_2]	count=2
class	of the point s ||| representation	count=5
function	belonging to ||| to	count=1
class	determined ||| base reader	count=1
arg	lines for special continuation ||| lines depth	count=1
function	[0 60] if ||| check second	count=1
function	class of origin frame ||| skyoffset cls	count=1
function	[function_1] first ||| [function_1] [function_2]	count=1
arg	[arg_1] some ||| coordinates rotation matrix [arg_1] axis [arg_2]	count=1
function	z as quantities ||| geocentric	count=1
function	groups ||| table group	count=1
arg	(x_low ||| factor	count=1
module	fits [module_2] ||| [module_1] [module_2]	count=1
arg	of x ||| x	count=1
arg	card [arg_2] ||| [arg_1] useblanks bottom [arg_2]	count=1
class	values ||| base data	count=1
function	footprint of the ||| footprint	count=1
arg	a ||| a b rtol	count=1
arg	val2 format and ||| val2 format	count=2
function	apply ||| apply include	count=1
class	at ||| cdm	count=1
arg	of ||| cls	count=1
class	raise vdtvaluetoolongerror('jedie') ||| value too long	count=1
arg	rows a join_type ||| join_type col_name_map	count=1
arg	into a yaml stream ||| stream	count=1
function	writer ||| writer	count=1
module	cards in the ||| io fits	count=1
module	the data ||| utils	count=1
function	position of earth ||| earth position	count=1
class	input [class] ||| [class]	count=3
function	fromrecords ||| fromrecords	count=1
module	the default ||| time	count=1
function_arg	[function_1] [arg_2] ||| [function_1] data [arg_2]	count=9
function	from [function_2] ||| [function_2] [function_1]	count=7
function	kraft burrows [function_2] ||| [function_1] [function_2]	count=4
function	bscale/bzero from [function_2] ||| [function_2] [function_1]	count=2
function	with function unit dropping ||| function	count=1
module	decorator [module_2] ||| [module_2] [module_1]	count=4
function_arg	information criterion [arg_2] ||| [arg_2] [function_1]	count=5
class	this index ||| index	count=2
function	set whether [function_2] ||| [function_1] [function_2]	count=2
arg	[arg_1] image_g ||| [arg_1] [arg_2]	count=4
function_arg	view of [arg_2] ||| [function_1] [arg_2]	count=4
class	location for the ||| location	count=1
module	associated fits file ||| fits hdu	count=1
function_arg	map [arg_2] ||| [function_1] [arg_2]	count=1
arg	y onto an integer ||| y	count=1
arg	given the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=7
function	value that may contain ||| normalize	count=1
function	writable file-like ||| convert to writable	count=1
module	if the data ||| io fits	count=1
arg	range n using lagrange ||| n	count=1
arg	this frame's data ||| new_representation in_frame_units	count=1
function	a datablock ||| multiline	count=1
class	deal with a ||| function	count=1
module	of a filename or ||| utils	count=1
function	[function_1] matches of ||| [function_2] [function_1]	count=1
arg	[arg_1] some ||| coordinates rotation matrix [arg_1] [arg_2]	count=2
function_arg	[function_1] corrections in ||| [function_1] [arg_2]	count=2
function	object ||| of site	count=2
function	filename [function_2] ||| [function_2] [function_1]	count=2
module	most of the ||| io ascii	count=1
class	box sequence ||| box	count=1
function	contain ||| normalize keyword	count=2
function	the dtype that the ||| dtype for	count=1
class	data should be converted ||| comp image hdu	count=1
class	logarithmic ||| log	count=2
function_arg	[function_1] redshift z ||| [function_1] [arg_2]	count=2
function	and then ||| and	count=1
class	image data as ||| image	count=1
class	parameter to ||| parameter	count=1
arg	as the given unit ||| unit	count=1
arg	specific mtype to ||| mtype	count=1
class	format string ||| format	count=1
function	config file can ||| config file	count=1
arg	a version ||| a b rtol atol	count=1
function	cutout array with respect ||| cutout	count=1
arg	[arg] for the ||| data_class [arg]	count=1
function	get_catalogs but using ||| get catalogs by	count=1
class	function for ||| base hdu	count=1
function	list of columns a ||| list	count=1
function	use with the ||| make transform graph	count=1
function	class that is the ||| make	count=1
module	in formatting table columns ||| table	count=1
arg	a mask of zero ||| mask	count=1
module	hdu need to ||| io fits hdu	count=1
function	new class that ||| skyoffset	count=1
function	the data files ||| get pkg data	count=2
function	and then ||| format doc	count=1
arg	scale try to instantiate ||| scale	count=1
function	b ||| combine a b	count=1
function	deal with a functionquantity ||| array prepare	count=1
function	flush ||| flush	count=1
function	a ||| make	count=3
arg	testing ||| size cols kinds masked	count=1
function_arg	of all [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] (dtype kind='u') ||| [function_1] [arg_2]	count=4
module	if the ||| coordinates	count=1
module	given file ||| utils	count=1
arg	fromhdulist(), but ||| filename	count=1
module	start with the ||| io ascii	count=2
function	indices where ||| where	count=1
module	or ||| utils	count=1
module	meaning of [module_2] ||| [module_2] [module_1]	count=1
module	use with ||| coordinates	count=1
module	all of ||| votable	count=1
function	a filename or file-like ||| get file	count=1
function	can be dropped ||| simplify	count=1
function_arg	a diff [arg_2] ||| [function_1] attr [arg_2]	count=2
module	a string ||| coordinates builtin_frames	count=1
function	a proper ||| proper	count=1
function_arg	join [arg_2] ||| [arg_2] [function_1]	count=5
function	like :func delete_catalog ||| delete catalog	count=1
function	distance in 3d ||| 3d	count=1
class	column [class_2] ||| [class_2] [class_1]	count=1
class	object of this ||| location	count=1
class	for unknown ||| unknown	count=1
class	check that ||| function	count=1
function	call to a ||| call	count=1
arg	siteregistry ||| jsonurl	count=1
function	single hdu ||| hdu	count=1
module	configspec ||| configobj	count=1
arg	the package and provides ||| package	count=2
module	energy equation of ||| cosmology	count=2
class	bytes that this ||| valid	count=1
arg	account for model ||| model	count=1
function	mantissa ||| mantissa	count=1
module	table ||| ascii	count=6
class	r ||| cdm	count=1
arg	beautifulsoup tag ||| soup	count=1
function	filename ||| get	count=1
arg	by taking ||| x_range factor	count=1
function	[function_1] string to ||| [function_1] [function_2]	count=1
arg	the 'sep' parameter ||| precision pad sep	count=1
function_arg	[function_1] a float ||| [function_1] hours h [arg_2]	count=4
function	object of ||| of	count=1
module	exception depending on the ||| io	count=1
arg	the current value ||| value	count=1
class	state w r ||| w0wa cdm	count=1
function	[function_1] [function_2] ||| [function_1] cutout [function_2] original_position	count=5
arg	unit in a given ||| unit	count=1
function	string formatted as ||| string	count=2
function	instance from a given ||| from	count=1
function	reference more details about ||| links	count=1
function	of ||| col	count=1
module	[module] mmap ||| [module]	count=3
module	model function ||| modeling	count=16
arg	check that ||| obj	count=1
class	in-order names of the ||| base representation	count=1
function	copy of ||| copy	count=3
arg	coordinate transformation ||| tosys transform	count=1
function	a writable ||| to writable	count=1
class	when either model ||| compound model	count=1
class	w ||| w0wa cdm	count=1
function	the ||| file	count=1
module	convert ||| io	count=1
function	ndarray to ||| array to file like	count=1
function	clear that also affects ||| clear	count=1
function	with appropriate header line ||| base	count=1
module	appear in the ||| io votable	count=1
class	spherical polar coordinates ||| spherical	count=3
arg	the specified keys ||| keys	count=1
function	from an existing function ||| function	count=1
module	a fits ||| io fits	count=6
module	redshift where w z ||| cosmology	count=1
arg	shape and [arg_2] ||| array array_large [arg_1] [arg_2]	count=3
function	specific ||| make	count=1
class	of coefficients in ||| polynomial	count=1
class	in the cutout array ||| cutout2d	count=1
class	function for ||| image base	count=1
module	can deal with ||| function	count=1
arg	array of the given [arg_1] [arg_2] larger array ||| array array_large [arg_1] [arg_2]	count=1
class	but creates a ||| fits	count=1
arg	from a ||| cls	count=1
function	bscale/bzero from header ||| header scale	count=1
function	diff between ||| report diff	count=1
function	frame was ||| is frame attr	count=1
function_arg	[function_1] [arg_2] position ||| [function_1] [arg_2]	count=3
arg	table-lookup [arg] ||| [arg] fobj dist	count=3
arg	converted values in ||| other value equivalencies	count=2
module	units with a ||| units	count=1
arg	scale ||| other	count=1
function	burrows and nousek ||| burrows nousek	count=6
function	of the coordinate components ||| components	count=1
function	of the type of ||| type	count=1
function	keyword repeat tuple ||| keyword	count=1
arg	that the ufunc can ||| obj context	count=1
module	class ||| coordinates	count=3
module	implements card _check_if_rvkc for [module_1] [module_2] ||| [module_1] [module_2]	count=2
function	formats as ||| formats	count=1
function_arg	to this model ||| call model x	count=3
arg	between this skycoord ||| other	count=1
function	the site registry ||| get site registry	count=2
function	break up long ||| long image	count=1
arg	index ||| index name	count=1
arg	begin to end ||| begin end	count=3
arg	package and provides a ||| package	count=1
function	as self return difference ||| time difference	count=1
function	get the text for ||| get	count=1
class	[class] will ||| [class]	count=2
function	hdus ||| hdus	count=1
function	if not a length ||| length	count=1
function	convert ||| degrees to	count=1
class	a tuple with ||| representation	count=1
function	median absolute ||| median absolute	count=2
class	of dark energy equation ||| w0wa	count=1
arg	in bins ||| success bins range	count=2
module	fits block ||| fits	count=1
module	coordinate ||| coordinates	count=2
function	latex representation of the ||| repr latex	count=1
class	this column ||| column	count=2
function_arg	indices [arg_2] ||| [arg_2] [function_1]	count=2
arg	by taking ||| x_range y_range factor	count=1
function	latitude [function] from kwargs ||| get [function]	count=1
module	[module_1] that ||| [module_2] [module_1]	count=2
function_arg	ndarray to [arg_2] ||| [arg_2] [function_1]	count=1
function	line ||| line	count=4
module	the scaling ||| io	count=1
class	'*', and two model ||| model	count=1
class	at z=0 ||| w0wa	count=1
arg	stream ||| stream	count=1
class	if the unit ||| unit	count=1
arg	[arg_1] bins ||| [arg_2] [arg_1]	count=8
module	the element ||| io votable	count=2
function_arg	that index [arg_2] ||| [arg_2] [function_1]	count=2
function	a ||| file	count=1
function	set ||| set cols	count=1
module	that ||| units function	count=2
function	in [function_2] ||| [function_2] [function_1]	count=6
function	[function_1] any ||| [function_1] [function_2]	count=1
function	class of origin ||| make skyoffset	count=1
arg	column's ||| col_name new_name	count=1
function	with the ||| make	count=1
function	generates a string for ||| make	count=1
function	[function_1] data from ||| [function_2] [function_1]	count=2
function	heliocentric position of earth ||| prepare earth position vel	count=1
function_arg	with [arg_2] ||| [arg_2] [function_1]	count=1
function	the apparent ||| get apparent	count=1
module	an empty tuple if ||| fits	count=1
function	and b ||| b	count=1
function	degree arcminute arcsecond tuple ||| dms	count=1
module	w r t a ||| cosmology	count=1
module_class	returns a dictionary detailing [module_1] [class_2] hdu within any associated ||| [module_1] hdu [class_2] hdu fileinfo	count=2
function	a ||| transform graph	count=1
class	energy equation ||| w0wa cdm	count=2
function	the ||| make	count=2
class	data part ||| corrupted hdu	count=2
arg	the given frequency parameters ||| frequency	count=1
module	it gets the ||| io fits	count=1
function	comoving ||| comoving	count=2
arg	a header ||| header	count=1
module	[module] file if ||| [module]	count=1
module	generates a string for ||| coordinates	count=1
function_arg	converts an angle ||| to float angle	count=1
arg	class ||| cls	count=1
arg	the value to ||| value	count=1
function	floating point number ||| float	count=1
arg	current value of ||| value	count=1
function	fit a ||| fit	count=1
module	a file ||| hdu	count=1
function	[function_1] node associated ||| [function_1] [function_2]	count=1
function_arg	[function_1] table data ||| [function_1] [arg_2]	count=1
module	initializes ||| compat futures	count=2
class	either model in ||| model	count=1
function	position in [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] that index ||| [function_2] [function_1]	count=1
function	[function_1] or raise ||| [function_1] [function_2]	count=1
arg	format [arg_2] ||| [arg_1] [arg_2]	count=3
function_arg	specified axis ||| sort axis	count=1
function	minor ticks per ||| minor	count=1
arg	available readers / writers ||| readwrite	count=1
function	rotated 2d ellipse ||| ellipse	count=1
function	[function_1] strings ||| [function_2] [function_1]	count=4
function	searchsorted ||| searchsorted	count=1
function	simple ||| simple	count=1
function	coordinate package's docstring ||| docs	count=1
function	y ||| y	count=2
function	have correct class for ||| col for	count=1
function	this injects entry points ||| entry points	count=1
function	mjd ||| mjd	count=1
module_class	returns the equivalent ||| io fits ascii	count=1
class	fk5 ||| fk5	count=1
arg	[arg_1] [arg_2] ||| join [arg_1] [arg_2]	count=7
function_arg	view [arg_2] ||| [function_1] [arg_2]	count=3
arg	value ||| value min	count=2
class	the parent dict ||| dict	count=1
class	of column ||| column	count=1
arg	the 'sep' parameter ||| d precision pad sep	count=1
module	after the column ||| io ascii	count=1
function	wcs ||| wcs	count=2
function	this class ||| of	count=1
module	returning only [module] ||| [module]	count=2
arg	obj ||| obj	count=2
module	state at z=0 ||| cosmology	count=1
function_arg	[function_1] between ||| [arg_2] [function_1]	count=2
function	ndarray to a ||| array to file like	count=1
function	multiplication with numpy arrays ||| array wrap	count=1
module	in a fits file ||| io fits	count=3
class	file from a file ||| file	count=1
arg	size used ||| size	count=1
function	representation of the ||| repr	count=1
class	unique ||| server	count=1
arg	end ||| end	count=2
function	position and velocity ||| posvel	count=1
function	the function's ||| bind	count=1
arg	that the ufunc ||| context	count=1
module	domain of [module_2] ||| [module_1] [module_2]	count=2
function	diff between two ||| diff	count=1
function	around ||| around	count=2
function	the mime content ||| content	count=1
function_arg	[function_1] value ||| [function_1] input [arg_2]	count=9
function	[function_1] a table ||| [function_2] [function_1]	count=1
function	[function_1] patch to ||| [function_2] [function_1]	count=4
function	a ccd ||| ccd	count=1
class	[class_1] image data ||| [class_2] [class_1]	count=6
arg	by taking the ||| x_range	count=2
module	the default ||| io ascii	count=2
module	the values for any ||| io	count=1
arg	from obj to ||| obj	count=1
module	a field-specifier ||| io	count=1
arg	fractional remainder ||| factor divisor	count=1
function	write a diff between ||| diff	count=1
function	format that can ||| format	count=1
module	the same state opened ||| io fits	count=1
class	ssl ||| httpsconnection	count=1
class	[class_1] frame ||| [class_2] [class_1]	count=2
function	[function_1] mantissa and ||| [function_1] [function_2]	count=1
function	not a length ||| validate length	count=1
function	[function_1] criterion ||| [function_1] [function_2]	count=4
class	data should ||| image hdu	count=1
module	affects scalars/sections also clears ||| configobj	count=1
module	hdu from [module_2] ||| [module_1] [module_2]	count=3
module	gets the decimal point ||| io fits	count=1
function	is ||| is path	count=1
module_class	the locations [class_2] ||| [module_1] [class_2]	count=3
module	deal with a functionquantity ||| function	count=1
arg	[arg] values ||| fileobj attr diffs [arg]	count=3
function	entry [function_2] ||| [function_1] [function_2]	count=1
function	frame ||| frame attr	count=1
module	also affects scalars/sections also ||| extern configobj	count=1
function_arg	[function_1] [arg_2] has these attributes ||| [function_1] window [arg_2]	count=1
class	data from an ||| like	count=1
function	generates a string for ||| graph	count=1
function	on an oversampled grid ||| oversample	count=2
arg	in-place calculations ||| values clip out	count=1
function	kernel [function_2] ||| [function_2] [function_1]	count=2
function	cgs ||| cgs	count=1
function_arg	schema [arg_2] ||| [function_1] [arg_2]	count=1
module_class	for fk5 ||| coordinates builtin_frames fk5	count=1
function	decorator ||| decorator	count=1
module	may ||| fits	count=1
module	a field-specifier to uppercase ||| io	count=1
module_class	[module_1] equivalent ||| [module_1] [class_2]	count=2
function	[function_1] the same ||| [function_1] [function_2]	count=5
function	possible or to ||| or	count=1
function	written to the raw ||| raw	count=1
module	associated fits ||| fits hdu	count=1
function	if a config file ||| config file	count=1
function	directly [function_1] [function_2] ||| core [function_1] [function_2]	count=2
function	property or ||| property	count=1
function	update the ||| update	count=4
function_arg	node associated [arg_2] ||| [arg_2] [function_1]	count=1
arg	other ||| other equivalencies	count=2
arg	[arg_1] and no ||| [arg_2] [arg_1]	count=8
function	age ||| age	count=1
module	to ascii format or ||| io fits	count=1
arg	a given hdulist ||| hdulist	count=1
module_class	[module_1] field instance ||| [module_1] [class_2]	count=4
class	modifies the parameter list ||| fitter	count=1
function	votable file ||| votable	count=1
function	checks if the ||| uncertainty	count=1
module	of the hdu's data ||| io fits hdu	count=1
module	the bscale ||| io fits	count=1
arg	given astropy table table ||| cls votable table	count=1
function	age of the universe ||| age	count=1
arg	image_r [arg_2] ||| [arg_2] [arg_1]	count=2
class	clears comments ||| section	count=1
function	of coordinate [function_2] ||| [function_1] [function_2]	count=1
function	polygon such ||| polygon	count=1
arg	table object that ||| table	count=1
module	a ||| hdu	count=2
module	a fits ||| fits	count=9
function_arg	a copy [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	a copy [arg_2] ||| [arg_2] [function_1]	count=1
function	that class's __getitem__, such ||| get copy on getitem shim	count=1
class	equivalent ||| ascii	count=1
function	get a coordinate ||| get coord	count=2
class	an abstract class for ||| base	count=1
class	initializes ||| process pool executor	count=2
arg	like write ||| write fileobj	count=1
function	[function_1] fits file ||| [function_2] [function_1]	count=2
function_arg	width [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] the end ||| [arg_2] [arg_1]	count=1
arg	right tables ||| right	count=1
arg	card to ||| card	count=1
function	disconnect from the current ||| disconnect	count=1
arg	arg ||| arg	count=1
function	generates ||| make transform	count=1
function_arg	[function_1] table object ||| [arg_2] [function_1]	count=1
function	correct class for this ||| for	count=1
function	directly from one file/buffer ||| writedata direct	count=1
class	redshiftscalefactor ||| redshift scale factor	count=1
arg	bins of ||| success bins	count=1
function	set the [function_2] ||| [function_2] [function_1]	count=3
function	keyword name parsed ||| keyword	count=1
arg	[arg] returns pixel ||| [arg]	count=2
function	fixed constraint ||| fixed	count=1
module	configobj instance ||| extern configobj	count=1
class	given bounding [class_2] ||| [class_1] [class_2]	count=4
function	that ||| skyoffset cls	count=1
module_class	the [class_2] ||| [module_1] votable [class_2]	count=3
arg	that ||| obj	count=1
module	describing [module_2] ||| [module_2] [module_1]	count=2
class	time object in the ||| astropy time	count=1
function	radians to [function_2] ||| [function_2] [function_1]	count=1
class	not possible for unknown ||| unknown	count=1
arg	extract the value where ||| value	count=1
arg	in bins of a ||| success bins range	count=1
module	the associated fits file ||| io fits	count=1
class	signature from ||| signature	count=1
class	the sorted ||| sorted	count=2
class	abstract class for hdus ||| base hdu	count=1
function	positive [function_2] ||| [function_1] [function_2]	count=3
module	when flushing the ||| io fits	count=1
class	file ||| fits	count=1
arg	a function or class ||| function declare	count=2
function	physical type of ||| physical type	count=1
arg	user intends ||| htmldict numtable	count=1
class	use by the xmlwriter ||| xmlwriter	count=1
function	[function_1] then copy ||| [function_1] [function_2]	count=3
function	a decorator for ||| as decorator	count=1
function	set pm [function_2] ||| [function_2] [function_1]	count=1
arg	values along ||| values mask	count=1
function	[function_1] arrays ||| [function_2] [function_1]	count=1
function	serialization format ||| format	count=1
arg	perform sigma-clipping ||| sigma_lower sigma_upper	count=1
function_arg	[function_1] an ||| [function_1] hms [arg_2]	count=5
class	[class] the ||| [class]	count=1
function_arg	binomial proportion [arg_2] ||| [function_1] x success bins [arg_2]	count=1
function_arg	[function_1] [arg_2] to ||| [function_1] [arg_2]	count=8
class	parameter ||| parameter	count=3
module	configobj instance and ||| extern configobj	count=1
function	the physical type ||| get physical type	count=2
arg	a functionquantity ||| obj	count=1
arg	by taking the value ||| x_range y_range	count=1
module	computes the ||| coordinates	count=6
module	redshift where ||| cosmology	count=1
function	[function_1] table object ||| [function_2] [function_1]	count=1
class	value for the ||| image base	count=1
function	the number of ||| get	count=1
function	fit at a given ||| fit	count=1
class	frame ||| frame	count=6
function	for a specific class ||| make	count=1
arg	a file if not ||| file cache	count=1
function	string for ||| make transform	count=1
arg	with regard to wavelength ||| wav factor	count=1
module	object's data ||| nddata	count=1
function	register ||| register	count=3
function	is [function] ||| [function] commentary	count=3
function	mtype binding methods ||| declare	count=1
arg	object from a raw ||| cls	count=1
arg	of mtype ||| mtype	count=1
function	a list of ||| list	count=5
module	the exact same string ||| io fits	count=1
function	functionquantity ||| prepare	count=1
function_arg	[function_1] settings ||| [function_1] [arg_2]	count=4
arg	[arg_1] hdu ||| [arg_2] [arg_1]	count=1
module	ndarray [module] the uncertainty's ||| [module]	count=1
module	frame ||| coordinates	count=1
function	the precession ||| precession	count=2
function	using ||| subfmts	count=1
class	overrides the default ||| time	count=1
module	may contain ||| io	count=1
function	override to draw only ||| draw	count=1
arg	[arg_1] a kernel ||| [arg_1] [arg_2]	count=1
arg	given indices ||| indices axis	count=1
module_class	for the table ||| io votable table	count=2
function	running [function_2] ||| [function_2] [function_1]	count=2
class	the in-order ||| base	count=1
function	initializes a ||| init	count=1
function	warn ||| warn	count=1
module	value in the ||| io fits	count=1
function	apparent ||| apparent	count=1
class	[class_1] attribute class ||| [class_2] [class_1]	count=2
function	format a [function_2] ||| [function_1] [function_2]	count=3
function_arg	[function_1] object's ||| frame [function_1] to [arg_2]	count=1
function	of ||| doc	count=1
module	size of ||| votable	count=1
module	returns the fits ||| io fits scripts	count=2
function	model ||| validate model	count=1
function	to format ||| format	count=1
module	whether or not the ||| io fits	count=3
arg	the value of a ||| value	count=1
function	the default ||| default	count=2
function	html content see pr ||| html	count=1
function	to get ||| get	count=1
function	all of the long ||| long	count=1
function	filename or ||| get	count=1
function	have arbitrary ||| have arbitrary	count=2
function_arg	to a [arg_2] ||| [arg_2] [function_1]	count=5
function	setting the configspec on ||| configspec	count=1
arg	include_names and exclude_names to ||| include_names exclude_names	count=1
class	cartesianrepresentation ||| cartesian representation frame	count=1
module	the next [module_2] ||| [module_1] [module_2]	count=4
function	is a ||| is float	count=1
function	equation of ||| w0	count=1
function	that is the ||| make skyoffset	count=1
module	for ||| coordinates builtin_frames	count=6
module	the simple ||| io	count=1
function	[function_1] with the ||| [function_1] [function_2]	count=7
class	graph ||| transform graph	count=3
function	~numpy ndarray to ||| to	count=1
function	[function_1] one besselian ||| [function_2] [function_1]	count=2
arg	but creates a fitshdu ||| filename compress	count=1
function	for multiplication with numpy ||| wrap	count=1
class	given bounding ||| bounding	count=1
function	state at ||| w0	count=1
function_arg	[function_1] [arg_2] array parameters ||| [function_1] [arg_2]	count=9
module	with the ||| io ascii	count=2
arg	for table [arg_2] ||| [arg_2] [arg_1]	count=1
class	one dimensional [class_1] [class_2] ||| [class_1] [class_2]	count=12
arg	_format scale and ||| format scale	count=1
class	from a ||| fits hdu	count=1
function	density ||| density	count=5
class	[class_1] with ||| [class_2] [class_1]	count=2
function_arg	proportion and [arg_2] ||| [function_1] x [arg_2]	count=3
function	box [function_2] ||| [function_2] bounding [function_1]	count=2
module	configobj as a ||| configobj	count=1
function	to a ||| array to	count=1
module	validates an xml ||| utils xml	count=1
arg	construct ||| name do_not_scale_image_data	count=1
module	image ||| fits hdu	count=2
function	or file-like object ||| file	count=1
function	name ||| of site	count=2
arg	initialize ||| data names dtype n_cols	count=1
arg	left table [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	separation [arg_2] ||| [arg_2] [function_1]	count=4
class	create a new skycoord ||| sky coord	count=1
function	circular variance ||| circvar	count=1
function	catalog is created ||| add catalog	count=1
function	notification to ||| receive notification	count=1
class	location for the ||| earth location	count=1
function_arg	[function_1] as observed ||| [arg_2] [function_1]	count=3
function	get slices for the ||| overlap slices	count=1
function	array-interface compliant full description ||| descr	count=1
class	classes ||| meta	count=1
function	private key used ||| private key	count=1
arg	notify ||| recipient_id	count=1
arg	on size used ||| size	count=1
function	decorated object and then ||| format	count=1
function	disable [function] ||| disable exception [function]	count=1
class	cylindrical polar coordinates ||| cylindrical	count=1
function	config file can be ||| config file	count=1
function	the pixel ||| pixel	count=1
arg	a function ||| function declare	count=3
function	converters and [function_2] ||| [function_1] [function_2]	count=3
arg	[arg_1] and image_b ||| [arg_2] [arg_1]	count=5
arg	[arg] smoothly broken ||| [arg] log_break	count=1
class	w r t a ||| w0wa cdm	count=1
arg	the package [arg_2] ||| [arg_1] [arg_2]	count=1
arg	model by taking ||| model x_range factor	count=2
arg	model ||| model weights	count=1
module	also affects scalars/sections ||| configobj	count=1
function_arg	[function_1] from ||| [function_1] [arg_2]	count=1
module	in the ||| io fits hdu	count=2
function	values of ||| values	count=1
function	position of earth parameters ||| prepare earth position	count=1
function_arg	[function_1] subsampling factor ||| [function_1] [arg_2]	count=4
arg	interval in bins ||| bins range	count=1
module	ascii format or ||| io fits	count=1
function	[function_1] parallel ||| [function_1] [function_2]	count=2
function	card and ||| card	count=1
class	for this ||| base coordinate	count=2
arg	creates a fitshdu ||| cls filename compress	count=1
function	correspond [function] that type ||| numpy [function] votable	count=1
arg	some axis ||| axis unit	count=2
function_arg	[function_1] [arg_2] ||| [function_1] equivalent units [arg_2]	count=6
function_arg	copy [arg_2] ||| [function_1] [arg_2]	count=3
module	associated with [module] ||| [module]	count=2
function	strings to unicode if ||| a to	count=1
arg	the specified mtype ||| mtype	count=2
function	cip and the ||| cip	count=1
function_arg	[function_1] for data_format ||| [arg_2] [function_1]	count=2
function	cosmology instance from a ||| get cosmology from	count=1
arg	table data [arg_2] ||| [arg_1] [arg_2]	count=1
arg	the compositetransform for a ||| fromsys tosys	count=1
arg	shape and [arg_2] ||| [arg_2] [arg_1]	count=3
function	bounding box [function_2] ||| [function_2] [function_1]	count=4
function_arg	utility [function_1] [arg_2] array parameters ||| [function_1] [arg_2]	count=2
class	expected [class_2] ||| [class_2] [class_1]	count=2
function	[function_1] 2 ||| [function_1] [function_2]	count=1
class	client wishes to ||| sampclient	count=1
module_class	a dictionary detailing information [module_1] [class_2] hdu within any associated ||| [module_1] [class_2]	count=2
function	dtype [function_2] ||| [function_2] [function_1]	count=2
module_class	[module_1] resource ||| [module_1] [class_2]	count=12
function	[function_1] dec are ||| [function_2] [function_1]	count=2
function_arg	[function_1] for data_format ||| [function_1] [arg_2]	count=2
module	initializes a ||| utils compat futures	count=1
arg	scale try to ||| scale	count=1
function	the provided args, and ||| parse inputs	count=1
arg	by lockfilename ||| lockfilename	count=1
module	convert a ||| io fits	count=1
arg	[arg_1] most ||| [arg_2] [arg_1]	count=1
arg	the given [arg_2] ||| [arg_2] [arg_1]	count=2
class	similar to file ||| file	count=1
function	in 3d space ||| 3d	count=1
module	arbitrary protocol the ||| io votable	count=1
function	a floating point ||| float	count=1
module	but creates ||| fits hdu	count=1
module	on the pedantic setting ||| io votable	count=1
function	the default ||| attr default	count=1
module	fits file using ||| fits	count=1
function	based on kraft ||| kraft	count=2
arg	given time ||| time	count=1
function	the footprint of ||| footprint	count=1
module	computes the ||| stats	count=3
function	frame was created ||| is frame attr	count=1
function	xml data tags ||| xml	count=1
module	axes in the middle ||| visualization wcsaxes	count=2
function	and nousek in ||| nousek	count=2
function	return a transform [function_1] [function_2] ||| visualization wcsaxes wcsaxes [function_1] transform [function_2]	count=4
arg	based ||| config	count=1
function	unit summary docs ||| iter unit summary	count=2
arg	reads ||| origin filepath fileobj	count=1
function_arg	in binary [arg_2] ||| [arg_2] [function_1]	count=1
function	ut1 - utc ||| get delta ut1 utc	count=1
function	class ||| make	count=2
arg	to convert ||| cls	count=1
function	the dtype ||| dtype	count=1
function_arg	its mantissa [arg_2] ||| [arg_2] [function_1]	count=1
function	open ||| open fileobj	count=2
module	hdu from ||| hdu	count=3
function	create a new array ||| create arrays	count=1
function_arg	for this [arg_2] ||| [function_1] table [arg_2]	count=1
function	center of ||| center	count=2
function_arg	discretize [arg_2] ||| [function_1] oversample 1d [arg_2]	count=4
arg	a keyword value that ||| keyword	count=1
function_arg	to [arg_2] ||| [function_1] hms [arg_2]	count=1
function	labels ||| labels	count=1
arg	begin to [arg_2] ||| [arg_2] [arg_1]	count=1
class	displaying a progress bar ||| progress bar	count=1
class	tuple ||| base representation	count=1
function	footprint of ||| calc footprint	count=1
function	the provided args, ||| parse inputs	count=1
function	between pixel distances (in ||| pixel	count=1
arg	list of fields are ||| fields	count=1
class	a cds [class_2] ||| [class_1] [class_2]	count=1
function_arg	slices for [arg_2] ||| [arg_2] [function_1]	count=2
function	a writable ||| writable	count=1
module	and to match the ||| io	count=1
function	a field-specifier to uppercase ||| normalize	count=1
function	separation in transverse comoving ||| comoving	count=1
module	given vo catalog ||| vo	count=1
function	of catalog ||| to catalog	count=1
class	a card ||| card	count=1
module	return the items of ||| io fits	count=1
function	was cancelled or finished ||| done	count=1
module	[module_1] element ||| [module_1] [module_2]	count=6
function	partially ||| partial	count=1
function	value that may ||| normalize keyword	count=1
arg	val2 format and scale ||| val2 format scale	count=1
module	validates an xml ||| xml	count=1
function	position [function_2] ||| [function_2] [function_1]	count=4
function	a ||| transform	count=1
module	clear configobj ||| extern configobj	count=1
class	bar to the ||| bar	count=3
function	in radians [function_2] ||| [function_1] [function_2]	count=4
arg	python operator (represented by ||| operator left	count=1
module	or not the ||| io	count=1
function	[function_1] raise an ||| [function_2] [function_1]	count=2
function	summary information ||| info	count=1
function	attribute as [function_2] ||| [function_2] [function_1]	count=8
function	a signature object ||| signature	count=1
arg	on the m nearest ||| m	count=1
arg	object col to ||| col	count=1
arg	the given urls ||| urls cache show_progress	count=1
function	the node associated ||| node	count=1
module	_check_if_rvkc for [module] ||| [module]	count=2
function	[function_1] diameter ||| [function_2] [function_1]	count=2
arg	a poisson count rate ||| n b cl	count=2
class	hdu and ||| valid hdu	count=1
module	check that ||| units	count=1
function	for ||| graph	count=1
module	specific ||| coordinates builtin_frames	count=2
function	position in [function_2] ||| [function_2] [function_1] original_position	count=2
arg	add/subtract logunit to/from another ||| sign_self sign_other	count=1
function	a string ||| transform graph	count=1
function	factory to ||| factory	count=1
module	args start with the ||| io ascii	count=1
function	[function_1] subclass ||| [function_1] [function_2]	count=5
function_arg	maximum [arg_2] ||| [function_1] [arg_2]	count=1
function	units with [function_2] ||| [function_2] [function_1]	count=4
module	may ||| io fits	count=2
arg	your [arg] as an ||| [arg]	count=1
module	coldefs objects describing the ||| io fits hdu	count=2
function	'name' of file-like ||| fileobj	count=1
function	create ||| cls	count=1
arg	beautifulsoup tag is the ||| soup	count=1
class	trapezoid disk model ||| trapezoid disk2d	count=2
arg	kernel ||| kernel	count=1
arg	keyword ||| keyword	count=4
function	for ||| convert	count=1
arg	method ||| private_key recipient_id message timeout	count=1
function	linear interpolation ||| linear 1d	count=2
module	w r ||| cosmology	count=1
arg	simplest possible composite ||| units max_depth include_prefix_units	count=1
module	the referenced ||| io	count=2
arg	the docstring of the ||| docstring	count=1
arg	known observatory/site ||| cls site_name	count=1
arg	the given beautifulsoup ||| soup	count=1
class	[class] name ||| [class]	count=1
function	the site registry ||| site registry	count=1
class	the dark energy ||| cdm	count=1
class	for each [class_2] ||| [class_2] [class_1]	count=2
class	stddevuncertainty allows to ||| std dev uncertainty	count=1
function	be resized ||| flush resize	count=1
function	convert between pixel distances ||| pixel	count=1
function_arg	sets the [arg_2] ||| [function_1] [arg_2]	count=2
module	an element ||| io votable	count=2
function	data an ||| data	count=1
module	in the default case ||| io	count=1
class	this class for ||| location	count=1
arg	for the package and ||| package encoding cache	count=1
function_arg	[function_1] current value ||| [arg_2] [function_1]	count=1
module	image ||| io fits hdu	count=2
module	in the ||| io votable	count=7
function	[function_1] one besselian ||| [function_1] [function_2]	count=2
function	this class ||| site	count=1
function	latex representation of ||| repr latex	count=2
function	longitude [function_2] ||| [function_2] [function_1]	count=2
module	of physical units ||| units format	count=1
class	of ||| cartesian representation	count=1
module	all of [module_2] ||| [module_1] [module_2]	count=1
arg	'sep' parameter ||| d precision pad sep	count=1
function	self return difference ||| time difference	count=2
function	index [function_2] ||| [function_1] [function_2]	count=1
function	average on an oversampled ||| oversample	count=2
function	field and ||| update field	count=1
function	[function_1] length ||| [function_1] [function_2]	count=1
function_arg	[function_1] left and ||| [arg_2] [function_1]	count=2
class	function for ||| image base hdu	count=1
module	like fitshdu fromhdulist(), ||| hdu	count=1
module	io votable exceptions ||| io votable	count=2
arg	converted values in the ||| other value equivalencies	count=2
class	an ||| config obj	count=1
module	the given ||| utils	count=5
function_arg	ipython's pretty [arg_2] ||| [arg_2] [function_1]	count=1
function	division ||| div	count=1
module	the columns and ||| io fits	count=1
module	configobj instance ||| configobj	count=1
function	fits ||| fits	count=2
module_class	a fits file ||| io fits file	count=1
arg	with the join operator [arg_1] [arg_2] input/output ||| [arg_1] [arg_2]	count=6
arg	val [arg_2] ||| [arg_2] [arg_1]	count=7
arg	display a ||| fout	count=1
function	config file ||| is unedited config file	count=1
function	format that ||| format	count=1
class	with the in-order names ||| base	count=1
function	coordinate system wcs ||| wcs	count=1
function	get a table by ||| get table by	count=1
module	in a fits ||| io fits	count=3
class	coefficients ||| polynomial model	count=2
module	class of ||| builtin_frames	count=1
module	of dark energy ||| cosmology	count=1
function	new class ||| skyoffset	count=1
function	for a specific class ||| skyoffset cls	count=1
function	respect to the cutout ||| cutout	count=1
module_class	[module_1] parameter ||| [module_1] [class_2]	count=2
module	if necessary ||| fits	count=1
class	this is ||| base splitter	count=2
function	[function_1] position in ||| [function_1] cutout [function_2] original_position	count=1
function_arg	meta data [arg_2] ||| [function_1] [arg_2]	count=1
arg	given namespace this ||| namespace	count=1
arg	bins of a ||| bins	count=1
function	matrix from ||| matrix	count=1
arg	[arg] position ||| [arg] vals	count=2
function	[function_1] and dec ||| [function_2] [function_1]	count=4
function	or not a custom [function_1] [function_2] to this model by ||| [function_2] [function_1]	count=1
arg	inserts a new card [arg_1] [arg_2] ||| header relativeinsert card [arg_1] [arg_2]	count=2
arg	fitshdu from a file ||| compress	count=1
class	constant ||| const1d	count=1
function	inverse ||| inverted	count=3
function	path to the data ||| download	count=1
function	columns in ||| columns	count=2
module	~astropy vo [module_2] ||| [module_1] [module_2]	count=10
function	a ||| site	count=1
module	the data as ||| io fits	count=1
module	or more hdu ||| hdu	count=1
module	a field-specifier to uppercase ||| fits	count=1
function_arg	parallel from [arg_2] ||| [arg_2] [function_1]	count=2
function	precession matrix for ||| precession matrix	count=1
module	[module_1] normal ||| [module_1] [module_2]	count=2
function	histogram function that enables ||| histogram	count=1
function	class of ||| cls	count=1
function	specific class ||| make	count=1
function	apply ||| apply include exclude	count=1
module	[module_1] an ||| [module_1] [module_2]	count=6
function	write a [function_2] ||| [function_1] [function_2]	count=11
arg	o[n log n ] ||| dy f0	count=1
module	of the domain ||| io votable	count=4
function	strip cards specific ||| strip	count=1
arg	for the package ||| package encoding	count=1
function_arg	maximum [arg_2] ||| time time [function_1] [arg_2] keepdims	count=1
function	new [function_2] ||| [function_1] [function_2]	count=1
class	location for ||| location	count=1
class	the in-order names ||| representation	count=1
function_arg	a view [arg_2] ||| [arg_2] [function_1]	count=3
function	injects entry [function_2] ||| [function_1] [function_2]	count=1
module	votable exceptions ||| votable	count=1
function_arg	earth's moon [arg_2] ||| [arg_2] [function_1]	count=1
module	of a non-celestial wcs ||| wcs	count=1
function	the specified ||| no transdata	count=1
class	one dimensional broken [class_1] [class_2] ||| modeling broken [class_1] [class_2]	count=1
class	also clears comments and ||| section	count=1
function	custom repr ||| repr	count=1
function_arg	[function_1] interval given ||| [arg_2] [function_1]	count=1
arg	list of ndarrays ||| arrs	count=1
class	w r t a ||| w0wa	count=1
class	header with ||| header	count=1
function	this object around ||| search around	count=1
function	a minimum ||| min	count=1
module	clear configobj instance ||| configobj	count=1
function	pm source ||| pm source	count=2
class	[class] element ||| [class]	count=3
class	that may contain a ||| card	count=1
arg	a function or ||| function	count=3
module	initializes a ||| compat futures	count=1
arg	a join [arg] ||| [arg] right keys	count=2
function	[function_1] meta data ||| [function_1] [function_2]	count=2
class	string values in ||| base data	count=1
function	mean longitude [function_2] ||| [function_1] [function_2]	count=2
arg	for the axis ||| coord_type coord_wrap	count=1
function	object and then ||| doc	count=1
function	from another [function_2] ||| [function_1] [function_2] format cls format	count=1
function	convert a [function_2] ||| [function_2] [function_1]	count=4
module	model inputs--that they ||| modeling	count=1
arg	[arg_1] data ||| [arg_1] [arg_2] exact	count=3
arg	of the children ||| iterator config	count=1
function	of the checksum ||| checksum	count=1
class	parent class ||| header formatter	count=1
function_arg	[function_1] units ||| [arg_2] [function_1]	count=3
function_arg	draw the [arg_2] ||| [function_1] ticks [arg_2]	count=1
function	creates ||| fromfile	count=1
function	distance in 3d space ||| 3d	count=1
class	[class_1] [class_2] ||| [class_1] [class_2]	count=255
module	create ||| builtin_frames	count=1
class	enable ||| astropy logger	count=1
function_arg	new name ||| rename name	count=1
class	plane ||| planar2d	count=2
class	displaying a progress ||| progress	count=1
function	array to an array ||| model to	count=1
function	appropriate votable schema ||| validate schema	count=1
function_arg	to an ||| to hms r	count=1
class	this unit ||| unit base	count=2
module	the user requested it ||| io fits hdu	count=1
module	order ||| table	count=1
module	each of [module_2] ||| [module_2] [module_1]	count=3
class	the ||| nduncertainty	count=1
function	and the worker ||| manangement worker	count=1
arg	for model constraints ||| model weights	count=1
function	data file from the ||| data	count=1
class	in this index to ||| index	count=1
function	a set ||| set	count=1
module	a ||| units function	count=2
module_class	of [module_1] [class_2] ||| [module_1] votable [class_2]	count=3
module	element by ||| votable	count=2
function	add a new ||| add transform	count=1
function	a field-specifier to ||| keyword	count=1
function	to a proper ||| proper	count=1
function_arg	[function_1] col ||| [arg_2] [function_1]	count=2
function	all of the data ||| get pkg data	count=2
arg	q [arg] column ||| array descr_output [arg]	count=1
class	this table ||| table base hdu	count=2
function	data object summary information ||| data info	count=1
function	string for ||| transform graph	count=1
arg	method [arg] called ||| [arg]	count=1
function	attribute as deprecated this ||| deprecated attribute	count=1
module	rows in the ||| io	count=1
class	the header ||| ecsv header	count=1
function	length ||| to and validate length	count=1
function	or scalar coordinate ||| coord type from	count=1
module	from ||| io fits hdu	count=2
function	create ||| create arrays	count=1
module	more hdu need ||| fits hdu	count=1
module	underlying type of the ||| io votable	count=1
arg	[arg_1] unit ||| [arg_2] [arg_1]	count=2
arg	the unit by ||| unit	count=1
class	[class_1] law ||| modeling smoothly broken [class_1] [class_2]	count=1
class	[class_1] classes ||| [class_2] [class_1]	count=4
class	coefficients ||| legendre2d	count=1
module	also clears comments ||| extern	count=1
function	the size ||| size	count=3
function	of ||| of	count=2
function	running [function_2] ||| [function_1] [function_2]	count=2
function	allclose that ||| not allclose	count=1
module	specification of physical units ||| units format	count=1
class	current hdu ||| hdu	count=1
arg	[arg_1] specified keys ||| [arg_1] [arg_2]	count=2
function	is a [function_2] ||| [function_1] int [function_2]	count=2
class	this coordinate and ||| base coordinate frame	count=1
function	comoving [function] distance in ||| comoving [function]	count=1
class	to spherical polar ||| unit spherical	count=1
function_arg	attributes [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] a votable ||| [function_1] [function_2] source	count=2
class	the value for the ||| image base	count=1
function	a transform [function] ||| [function]	count=2
arg	like fitshdu fromhdulist(), ||| cls filename	count=1
function	checks if ||| convert uncertainty	count=1
function	hash of ||| hash	count=1
function	like fitshdu fromhdulist(), ||| fromfile	count=1
module	resets all of ||| votable	count=1
class	unit (e ||| unit	count=1
module	the _basediff ||| io fits	count=1
function	value of a string ||| value	count=1
function	astropy source distribution or ||| astropy source	count=1
function	[function_1] iau precession/nutation ||| [function_2] sidereal [function_1]	count=1
function	[function_1] a fits ||| [function_2] [function_1]	count=3
arg	new coordinate transformation to ||| transform	count=1
function_arg	add [arg_2] ||| [function_1] [arg_2]	count=3
module	directly either ||| io fits hdu	count=1
function	[function_1] copy those ||| [function_2] [function_1]	count=3
arg	try ||| format_spec	count=1
function_arg	[function_1] [arg_2] ||| transform [function_1] [arg_2]	count=4
arg	a function ||| function	count=5
module	the file ||| xml	count=1
class	the client and ||| client	count=1
function	evaluate the ||| evaluate	count=1
function	[function_1] radians ||| [function_1] [function_2]	count=2
class	time in the ||| time predictor	count=1
module	[module_1] table that ||| [module_1] [module_2]	count=2
function	which is obviously 1 ||| n submodels	count=1
function	have unicode ||| has unicode	count=1
module	an xml file ||| utils xml	count=1
module	fits card card ||| fits scripts	count=1
arg	the given indices ||| indices axis mode	count=2
function	of numpy allclose ||| not allclose	count=1
function	or ||| get	count=1
function	string for ||| make	count=1
function	a iau precession/nutation ||| erfa	count=1
class	equation of state at ||| w0wa	count=1
class	bst in ||| bst	count=1
function	floating point number in ||| float	count=1
function	derivative with respect ||| fit deriv	count=10
arg	specified frame ||| frame	count=1
function	default write method ||| write	count=1
class	data should be ||| image hdu	count=1
module	a ||| io	count=4
arg	given a unit returns ||| unit	count=1
class	file from ||| file	count=1
function	rotate the [function_2] ||| [function_1] [function_2]	count=4
function	table by ||| table by	count=2
function	a package ||| package	count=1
function	a writable file-like object ||| convert to writable	count=1
function	bitpix value in the ||| bitpix	count=1
class	for this column (i ||| base	count=1
function	[function_1] masked values ||| [function_2] [function_1]	count=4
module	table and return the ||| io	count=1
module	[module_1] the positions ||| [module_1] [module_2]	count=1
class	1d hermite ||| hermite2d	count=1
arg	a coordinate transform ||| fromsys tosys transform	count=1
module	number of ||| utils xml	count=1
function	can have [function_2] ||| [function_1] [function_2]	count=1
module	search ||| vo client	count=1
module	that is ||| coordinates	count=1
function	bin [function_2] ||| [function_1] [function_2]	count=1
module	unit ||| units format	count=2
module	an index into the ||| io fits	count=1
function	on a ||| on	count=1
module	of this object's ||| nddata	count=1
function	signal to [function_2] ||| [function_1] [function_2]	count=4
class	in html ||| html	count=1
function_arg	groups [arg_2] ||| [arg_2] [function_1]	count=2
module	into the ||| io fits	count=1
class	slice ||| base column info	count=1
function	add_catalog but [function_2] ||| [function_2] [function_1]	count=4
function	mixin [function] ||| has mixin [function]	count=1
module_class	[module_1] column is ||| [module_1] [class_2] determine formats cls format	count=4
function	for a votable ||| votable	count=1
function	a ||| make transform	count=1
function	special handling [function] ||| convert [function]	count=2
class	from a ||| fits	count=1
module_class	the header to ||| io fits header	count=1
function_arg	information criterion [arg_2] ||| [function_1] lsq ssr [arg_2]	count=1
module	the number ||| xml	count=1
function	wcsprm axis_types> ||| get axis types	count=1
function	definition keywords ||| keywords	count=1
function_arg	[function_1] using a ||| [arg_2] [function_1]	count=1
function	a unit change ||| unit	count=1
class	default behavior of the ||| time	count=1
function	validate the ||| validate	count=3
function_arg	[function_1] (dtype ||| [arg_2] [function_1]	count=4
function	string for use with ||| make	count=1
function	convert a floating-point ||| to	count=1
arg	checksum value ||| value	count=1
function	the fill ||| fill	count=1
class	class ||| earth	count=1
module	file against the ||| io	count=1
arg	jd1 ||| jd1 jd2	count=1
module	works similarly to [module_1] [module_2] ||| [module_1] [module_2]	count=8
class	slice ||| column info	count=1
function	polar ||| get polar	count=1
function_arg	[function_1] of ||| [function_1] table [arg_2]	count=2
arg	the simplest possible composite ||| equivalencies units max_depth include_prefix_units	count=1
function	a classmethod) ||| isinstancemethod	count=1
class	a stretch ||| sinh stretch	count=1
arg	shape to a ||| shape	count=1
module	split ||| units format	count=1
function	[function_1] box ||| [function_2] [function_1]	count=4
arg	deprecated unit in a ||| s unit	count=1
class	at ||| w0wa	count=1
function	configspec on ||| configspec	count=1
arg	[arg_1] based on ||| [arg_1] [arg_2]	count=4
class	header to file ||| header	count=1
arg	of iers_a ||| cls iers_a	count=1
class	the client in a ||| sampclient	count=1
arg	left table with ||| left	count=1
class	model classes or instances ||| model meta	count=1
function	footprint of the ||| calc footprint	count=1
function	is the ||| cls	count=1
class	in-order names of ||| base representation	count=1
arg	file if ||| file cache	count=1
arg	[arg_1] a kernel ||| [arg_2] [arg_1]	count=1
arg	an ||| r	count=2
class	two model ||| model	count=1
function	calculate the pixel ||| pixel	count=1
arg	overlapping part of ||| large_array_shape small_array_shape position mode	count=1
function	the footprint of the ||| footprint	count=1
class	a stretch ||| inverted power dist stretch	count=1
arg	optional [arg] ||| [arg]	count=1
function	column meta data for ||| col meta	count=1
module	validates an xml file ||| xml	count=1
class	the table ||| table hdu	count=1
function	information criterion ||| info criterion	count=4
arg	the units ||| units	count=1
module	object's ||| nddata	count=1
function	deal with ||| prepare	count=1
arg	[arg_1] col_name_map ||| [arg_2] [arg_1]	count=2
function	itersubclasses ||| itersubclasses	count=1
module_class	table [class_2] ||| [module_1] base [class_2]	count=1
arg	join_type ||| join_type col_name_map	count=1
function	function's ||| bind	count=1
module	deal with a ||| units	count=1
class	with ||| quantity	count=1
module	the hdu's data part ||| io fits hdu	count=1
function	a rotated 2d ellipse ||| ellipse	count=1
function	type as the given ||| type	count=1
function	a transformation between ||| transform	count=1
arg	given urls blocks until ||| urls	count=1
arg	package and ||| package	count=2
function	stokes axis ||| stokes axis	count=2
module	units given ||| units	count=1
module	when the ||| io	count=1
function	a filename or ||| get file	count=1
module	read the ||| io fits hdu	count=1
arg	[arg_1] by performing ||| [arg_1] [arg_2]	count=1
class	this column ||| base column	count=1
function	running or ||| running or	count=1
module	like fitshdu fromhdulist(), but ||| fits hdu	count=1
module	translated from fits ||| io fits	count=1
function_arg	given a [arg_2] ||| [arg_2] [function_1]	count=2
function	noise ratio for source ||| noise	count=1
function	reset the ||| reset	count=1
module	a [module] to ||| [module]	count=1
class	constant ||| constant	count=2
function	into its mantissa and ||| mantissa	count=1
module	a tuple with ||| coordinates	count=1
module	for the type converters ||| io	count=1
function	optimal histogram bin width ||| bin width	count=1
module	an arbitrary protocol the ||| io votable	count=1
arg	write_comments [arg] ||| [arg]	count=1
arg	the specified frame to ||| frame	count=1
function	data files ||| data	count=2
function	a table [function_2] ||| [function_1] [function_2]	count=2
arg	a coordinate transform from ||| tosys transform	count=1
module	a filename ||| utils	count=1
class	deal ||| function	count=1
function_arg	[function_1] between this ||| [function_1] [arg_2]	count=1
function	heliocentric position ||| position vel	count=2
module	convert a ||| fits	count=1
module	[module_1] the ||| [module_2] fits [module_1]	count=3
arg	at the given ||| axis	count=1
class	bst in the ||| bst	count=1
class	[class] and all ||| [class]	count=1
class	object's data ||| nddata array	count=1
class	[class_1] this coordinate ||| [class_2] [class_1]	count=2
module	returning the count ||| io fits	count=1
module	format ||| format	count=1
function	the decorated ||| doc	count=1
module	the corresponding python ||| io	count=1
arg	the value ||| value min max	count=2
module	overrides the ||| time	count=1
arg	lists--one for the x ||| x	count=1
function	stop the current ||| stop	count=1
function	match for ||| match	count=1
function	a ||| make transform graph	count=1
function	create a new class ||| make skyoffset cls	count=1
arg	column name [arg] ||| [arg]	count=2
function	units in ||| units	count=1
module_class	modeling model __call__ ||| modeling model	count=1
function	equation ||| w0	count=1
module_class	[module_1] point s ||| [module_1] [class_2]	count=4
function	column meta data ||| col meta	count=2
function	recformats using ||| cmp recformats	count=1
arg	the supplied [arg] ||| [arg]	count=2
function_arg	[function_1] in val1 ||| [function_1] [arg_2]	count=1
function	[function_1] [function_2] ||| [function_2] [function_1]	count=485
module_class	constructs signature from ||| compat signature	count=1
module	an a list of ||| fits	count=1
arg	children ||| iterator config	count=1
function	repr ||| repr	count=1
function	frame into one in ||| in	count=1
function_arg	main [arg_2] ||| [function_1] [arg_2]	count=3
class	location for the default ||| earth location	count=1
function	to noise ratio for ||| to noise	count=1
function	an exception ||| exception	count=1
module	return an object of ||| coordinates	count=1
function	representation of the ||| representation	count=1
function	to ensure ||| prepare inputs	count=1
module	hdu need ||| io fits hdu	count=1
module	the file is ||| io fits	count=1
function	contents of a filename ||| contents	count=1
arg	between two header keyword ||| keyword	count=1
function	can deal with ||| array prepare	count=1
arg	a ||| filename	count=2
arg	of fields ||| fields	count=1
module	fits ||| fits hdu	count=4
module	that also affects ||| extern	count=1
function	corresponding to ||| per	count=2
function	:math \frac{1}{h_z} ||| inv	count=3
function_arg	subtract two [arg_2] ||| [function_1] [arg_2]	count=1
module	by [module] over ||| io [module]	count=1
function	cosmology [function_2] ||| [function_1] [function_2]	count=3
arg	can deal ||| obj	count=1
function	a list of columns ||| list	count=1
class	the [class] must ||| [class]	count=1
module	parameter names to ||| modeling	count=3
module_class	[module_1] uncertainty propagation ||| [module_1] [class_2]	count=4
function	then ||| format doc	count=1
class	[class_1] numpy ||| [class_1] [class_2]	count=1
function	on kraft burrows and ||| kraft burrows	count=2
module	override the default writing ||| io	count=1
arg	like fitshdu fromhdulist(), ||| cls	count=1
function	[function_1] absolute ||| [function_1] [function_2]	count=1
function	[function_1] reader ||| [function_1] [function_2]	count=2
function	representing the inverse of ||| inverse	count=1
class	an object of ||| earth	count=1
function	retrieves the contents ||| file contents	count=1
arg	object col ||| col	count=1
arg	range n using ||| n	count=1
function	physical quantity it represents ||| physical type	count=1
function	the range ||| range	count=3
function	a file ||| fromfile	count=1
function	physical type as the ||| physical type	count=1
function	image [function_2] ||| [function_2] [function_1]	count=4
arg	a y ||| y	count=1
module	can deal with a ||| function	count=1
module	for use with ||| coordinates builtin_frames	count=1
function	fix a fill ||| fix	count=1
function	a catalog ||| catalog	count=1
function	a transformation between two ||| get transform	count=1
function	transverse comoving kpc corresponding ||| kpc comoving per	count=1
module	store them in the ||| io votable	count=1
module	given file against the ||| io votable	count=1
function	[function] messages ||| [function] to	count=3
arg	[arg_1] position from ||| array array_large [arg_1] [arg_2]	count=1
function	tuple that [function_2] ||| [function_1] [function_2]	count=1
function	data file ||| pkg data	count=1
function	unit and [function_2] ||| [function_1] [function_2]	count=3
function	rename a [function_2] ||| [function_1] [function_2]	count=1
arg	file if not ||| file	count=1
function	terminal ||| terminal size	count=2
function_arg	[function_1] specified frame ||| [arg_2] [function_1]	count=3
module	mark the future ||| utils compat futures	count=1
function	for use ||| make transform	count=1
function	is a list of ||| is float list	count=1
class	dimensional broken [class] ||| broken [class]	count=1
class	format ||| time fits	count=1
arg	*table* is ||| ucd utype	count=1
arg	name matches pattern ||| pattern	count=1
arg	a value ||| value	count=1
module	fits file will be ||| fits	count=1
module	dropping the physical unit ||| units	count=1
module	verifies the object ||| io	count=1
function	if not all hdus ||| hdus	count=1
module	the associated fits file ||| io fits hdu	count=1
function	a tabular ||| tabular	count=1
class	of state w ||| w0wa cdm	count=1
function	[function_1] list ||| init [function_1] [function_2]	count=1
module	the x format column ||| io	count=1
arg	the internal _format scale ||| scale	count=1
module	more hdu need to ||| io fits hdu	count=1
arg	in val1 to jd1 ||| val1 val2	count=1
function	[function_1] groups for ||| [function_2] [function_1]	count=2
module	fromhdulist(), ||| io fits hdu	count=2
arg	return an ||| cls	count=1
class	initialize the header ||| ecsv header	count=1
function	density of neutrinos ||| onu0	count=1
arg	(dtype ||| python3_only	count=1
function	a string ||| make transform graph	count=1
function	new ||| cls	count=1
function	[function_1] a file ||| [function_2] [function_1]	count=1
function	set a maximum ||| max	count=1
function	for ||| make transform	count=1
function_arg	contained in [arg_2] ||| [arg_2] [function_1]	count=4
module	an array when ||| io	count=1
module	specific class of ||| coordinates	count=1
function	[function_1] to a ||| [function_1] [function_2]	count=7
function	one in ||| in true coordinates	count=1
function_arg	[function_1] valid converters ||| [function_1] [arg_2]	count=4
function	[function_1] [function_2] ||| [function_2] bounding [function_1]	count=3
module	string for ||| coordinates builtin_frames	count=1
function	return an object of ||| of site	count=1
arg	ordering given by formatorder ||| f1 f2	count=1
arg	function on the ||| function	count=1
function	scalar coordinate ||| coord type from	count=1
function	apply ||| apply	count=1
function	cartesian coordinates ||| cartesian	count=4
arg	left and [arg_2] ||| [arg_1] [arg_2]	count=6
function_arg	to [arg_2] ||| [function_1] [arg_2]	count=2
arg	a version of ||| a b rtol atol	count=1
module_class	fits file from ||| io fits file	count=1
module	~astropy io [module_2] ||| [module_1] [module_2]	count=8
function	has cancelled ||| cancelled	count=1
arg	a file on ||| filename	count=1
function_arg	[function_1] [arg_2] ||| [function_1] 2d [arg_2]	count=4
module	from fits ||| io fits	count=1
function	of the "representation attributes" ||| representation attrs	count=1
module	the wrapped ||| io fits	count=1
function	data from ||| data	count=1
class	by the xmlwriter ||| xmlwriter	count=1
function_arg	[function_1] a subsampling ||| [function_1] indices [arg_2]	count=1
function	[function] f if ||| [function]	count=1
class	the first [class] ||| [class]	count=3
module	ordereddict from !!omap ||| table	count=1
module	a ||| compat	count=1
function	floating number ||| float	count=1
function	a new class that ||| make skyoffset cls	count=1
function	ascii strings to unicode ||| a to	count=1
function	table object ||| table	count=1
function	new class that ||| skyoffset cls	count=1
function	use ||| make	count=1
arg	the arrays ||| arrays	count=2
function_arg	[function_1] subsampling factor ||| [function_1] indices [arg_2]	count=1
module	of origin frame ||| coordinates builtin_frames	count=1
function	[function_1] noise ||| [function_1] [function_2]	count=2
arg	offsets with one ||| offsets	count=1
function	sidereal time ||| sidereal time	count=2
function_arg	to [arg_2] ||| [function_1] dms [arg_2]	count=1
module_class	[module_1] this column ||| [module_1] [class_2]	count=2
class	to their ||| model	count=1
module	string ||| coordinates builtin_frames	count=2
function	write a ||| write	count=6
arg	_format scale ||| scale	count=1
class	currently in ||| xmlwriter	count=1
class	[class_1] skycoord ||| [class_2] [class_1]	count=1
class	quantities using the ||| quantity	count=1
function	time [function_2] ||| [function_2] sidereal [function_1]	count=1
module	coordinate ||| builtin_frames	count=1
module	a specific class of ||| coordinates builtin_frames	count=1
function	length ||| ticksize	count=1
function	[function_1] [function_2] ||| [function_1] interpolate [function_2]	count=4
function	a new class ||| make skyoffset	count=1
function	is the ||| make skyoffset cls	count=1
arg	have a mask of ||| mask	count=1
function	new class ||| make	count=1
class	internal ||| format	count=1
function	of the decorated object ||| format doc	count=1
arg	this is ||| tag	count=1
function	a new class that ||| skyoffset	count=1
arg	and their respective ||| model fitter power min_datapoints	count=1
module	also affects scalars/sections also ||| extern	count=1
module	io [module_2] ||| [module_1] [module_2]	count=8
function	field and ||| field	count=1
class	deal ||| quantity	count=1
function_arg	[function_1] subsampling ||| [function_1] [arg_2]	count=4
module	[module_1] [module_2] file if filename exists ||| [module_1] [module_2] append filename data header	count=2
function	angle of rotation ||| angle	count=1
arg	the ipython ||| tableid css display_length table_class	count=1
function	enable ||| enable exception	count=1
arg	creates ||| cls filename	count=1
function	around a supplied ||| around	count=2
module	defined by the ||| io	count=1
arg	that may contain a ||| cls	count=1
function_arg	[function_1] function called ||| [arg_2] [function_1]	count=2
module	like fitshdu fromhdulist(), ||| io	count=1
arg	a fitshdu from ||| filename compress	count=1
class	on-sky ||| sky coord	count=1
function	to the ||| to	count=4
function	delete ||| delete attribute	count=1
function	another column ||| column	count=1
function	to trap [function_2] ||| [function_1] [function_2]	count=2
arg	a given frequency ||| y dy frequency	count=1
class	[class_1] [class_2] ||| [class_2] [class_1]	count=78
function_arg	[function_1] [arg_2] ||| [function_1] log_likelihood [arg_2]	count=12
module	fits ||| io fits	count=9
function	returns a writable ||| writable	count=1
function_arg	[function_1] as observed ||| [function_1] [arg_2]	count=3
module	contain a field-specifier ||| fits	count=1
function	start ||| start	count=2
function	with the ||| make transform graph	count=1
module	return ||| table	count=14
function_arg	string returns the minimum [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
function	compares two numpy recformats ||| cmp recformats	count=1
module	more hdu ||| hdu	count=1
function	heliocentric ||| vel	count=1
function	how [function] ||| [function] cleaning	count=3
function	method to write ||| write	count=1
arg	the supplied key as ||| key	count=1
module	a file on ||| io	count=1
module	also clears comments ||| configobj	count=1
function	xml id ||| id	count=1
class	index to agree ||| index	count=1
function	string formatted as hms ||| to string	count=1
module	like ||| fits	count=1
function	log ||| log	count=1
function	like ||| fromfile	count=1
class	with a functionquantity ||| function	count=1
arg	model by taking the ||| model x_range y_range factor	count=1
module	depending on the ||| io votable	count=1
module	of ||| votable	count=15
module	from the given list ||| utils	count=1
function	an hdf5 ||| hdf5	count=1
class	can deal with a ||| function	count=1
function_arg	delete [arg_2] ||| [function_1] [arg_2]	count=2
module_class	[module_1] data ||| [class_2] [module_1]	count=1
function	[function_1] [function_2] ||| [function_2] download [function_1]	count=1
function_arg	[function_1] [arg_2] none) ||| [function_1] [arg_2]	count=3
module	file is currently ||| utils xml	count=1
arg	given urls blocks ||| urls cache show_progress timeout	count=1
module	of the current ||| io fits hdu	count=1
module	when saving [module] ||| [module]	count=2
class	state at z=0 ||| w0wa cdm	count=1
arg	at the given indices ||| indices axis	count=1
class	an error ||| obj	count=1
function	set of all ||| set	count=1
function	on an object into ||| object attrs	count=1
function	system definitions (coosys_ elements) ||| systems	count=1
arg	between this coordinate and ||| other	count=1
arg	the given ||| axis	count=1
function	that ||| make skyoffset cls	count=1
function	create ||| make skyoffset cls	count=1
module	affects scalars/sections ||| extern	count=1
function	an object of ||| of	count=1
class	a daophot [class_2] ||| [class_2] [class_1]	count=1
function	the contents of a ||| file contents	count=1
arg	val2 format [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	with the same [function_1] [arg_2] ||| with [function_1] [arg_2]	count=3
function	size ||| size	count=4
function_arg	new [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] has these attributes ||| [function_1] [arg_2]	count=1
function_arg	list of [arg_2] ||| [arg_2] [function_1]	count=1
arg	a ||| cls	count=5
class	[class_1] this ||| [class_1] [class_2]	count=1
arg	creates a fitshdu ||| filename compress	count=1
class	a stretch ||| log stretch	count=2
function	default return a view ||| view	count=1
function	line of source code ||| code	count=1
module	start with the comment ||| io ascii	count=1
function	of the data ||| pkg data	count=2
module	is an ||| utils	count=1
function	[function_1] longitude ||| [function_1] [function_2]	count=1
function	[function_1] to ||| [function_2] [function_1]	count=22
module	~astropy vo samp ||| vo samp	count=10
module	but creates ||| hdu	count=1
arg	no longer than strlen ||| strlen	count=1
function	object ||| to	count=1
arg	can deal with a ||| obj	count=1
arg	the given name and ||| name	count=1
module	and/or verifies the ||| io	count=1
function_arg	[function_1] kernels ||| [function_1] [arg_2]	count=1
function	domain into ||| domain	count=1
function	polar ||| polar	count=1
function	:func add_catalog but ||| by	count=1
function	same [function_2] ||| [function_1] [function_2]	count=3
function	position ||| position	count=3
class	deal ||| function quantity	count=2
arg	from [arg_2] ||| [arg_1] [arg_2]	count=1
module	element by id_, ||| votable	count=2
module	the current ||| io fits hdu	count=1
function	open ||| open	count=2
module	override the ||| io	count=2
function	to getsubscribedclients ||| get subscribed clients	count=1
function	'name' of ||| fileobj	count=1
module	units so ||| units	count=1
module	elements of the ||| io fits	count=1
module	is a valid xml ||| xml	count=1
function	long names ||| long names	count=2
module	minor axes in the ||| visualization wcsaxes	count=2
module_class	hdu's [class_2] ||| [class_2] [module_1]	count=3
arg	the supplied [arg] ||| [arg] format	count=1
function	that may ||| normalize keyword	count=1
module_class	[module_1] header to ||| [module_1] [class_2]	count=2
function	[function_1] source distribution ||| core [function_1] [function_2]	count=2
function	getmetadata ||| get metadata	count=1
function	copy of the object ||| copy	count=1
class	creates ||| fits hdu	count=2
arg	check that the ||| min max	count=1
arg	to convert a keyword ||| cls keyword	count=1
arg	file-like object ||| fileobj	count=2
function	is a [function_2] ||| [function_1] string [function_2]	count=2
function_arg	jd2 from val1 ||| jds val1	count=1
module	fits file and ||| fits	count=2
function	their bounding [function_2] ||| [function_1] [function_2]	count=2
function	a positive index or ||| positive index of	count=1
function	of the absorption ||| abs	count=2
arg	val1 and val2 must ||| val1 val2	count=1
arg	interval given observed counts ||| n interval sigma background	count=1
function	[function_1] string ||| [function_2] [function_1]	count=6
module	at z=0 ||| cosmology	count=1
function	of the names associated ||| names	count=1
module	t a ||| cosmology	count=1
arg	sliced ||| item	count=1
function	object summary information ||| info	count=1
function	iterate ||| iter	count=1
module_class	[module_1] file from ||| [module_1] [class_2]	count=4
module	the given object is ||| utils	count=1
function	"representation attributes" for specifying ||| get representation attrs	count=1
module	~astropy io votable exceptions ||| io votable	count=1
arg	now at (lon0 ||| lon0 lat0	count=1
function	get grid parameters from ||| get frequency grid	count=1
function_arg	[function_1] of floats ||| [function_1] value [arg_2]	count=3
module	physical unit ||| units function	count=2
module	the converter ||| io ascii	count=1
function_arg	[function_1] function or ||| [function_1] mtype [arg_2]	count=2
function	a field-specifier ||| normalize	count=1
function	but for :math ||| lambda	count=1
function	[function] for ||| coordinate [function]	count=1
function	load() ||| dump	count=1
class	this sorted ||| sorted	count=1
class	new skycoord ||| sky coord	count=1
function	module is ||| is	count=1
function	length ||| validate length	count=1
function	image data from ||| image data	count=2
module	an [module_2] ||| [module_1] [module_2]	count=14
function	items as a columnorderlist ||| items	count=1
arg	given model [arg_2] ||| [arg_1] [arg_2]	count=1
module_class	specifying the units_ for [module_1] [class_2] ||| [module_1] [class_2]	count=4
function_arg	the main [arg_2] ||| [function_1] [arg_2]	count=3
function	is *not* possible for ||| supports correlated	count=1
function	list of coordinate ||| coordinate	count=1
module	classmethod to convert a ||| fits	count=1
arg	given size ||| path size	count=1
function	units ||| units	count=2
arg	urls blocks ||| urls	count=1
arg	[arg_1] the value ||| [arg_2] [arg_1]	count=2
function	get slices for the ||| slices	count=1
function	specific class of origin ||| skyoffset	count=1
function_arg	[function_1] mode ||| [arg_2] [function_1]	count=4
function	object and then formats ||| format doc	count=1
function	parameters from the fitted ||| params	count=1
class	table doesn't ||| table	count=1
arg	interval given [arg_2] ||| [arg_1] [arg_2]	count=1
module	compute the lomb-scargle model ||| stats lombscargle implementations	count=1
arg	as observed ||| time location ephemeris	count=1
class	fitting and modifies the ||| fitter	count=1
arg	n using ||| n	count=1
function_arg	[function_1] x y ||| [arg_2] [function_1]	count=1
function	[function_1] tuple that ||| [function_2] [function_1]	count=1
class	search a header ||| header	count=1
function	barycentric ||| get body barycentric	count=2
class	representation with ||| base representation	count=2
function	the absorption distance ||| abs distance	count=4
module	filename ||| utils	count=1
arg	val1 to jd1 jd2 ||| val1	count=1
class	fast ||| fast	count=1
function	to an hdf5 file ||| table hdf5	count=1
function	with ||| make	count=1
function_arg	[function_1] [arg_2] ||| [function_1] table [arg_2]	count=11
function	writable file-like object suitable ||| writable	count=1
arg	but ||| cls filename	count=1
class	for ||| image base hdu	count=2
arg	to the end ||| end	count=1
arg	construct ||| header name do_not_scale_image_data	count=1
class	compressed image format ||| comp image hdu	count=1
class	a list of ||| list	count=1
module	the case of an ||| io fits	count=1
module	use with the coordinate ||| coordinates	count=1
class	the location ||| earth location	count=1
function	a string formatted ||| string	count=2
module	xml id_ [module] may ||| [module]	count=1
function_arg	[function_1] mtype to ||| [function_1] receive message [arg_2]	count=1
module	value ||| io	count=1
module	the hdu ||| io fits	count=1
class	power [class_2] ||| modeling broken [class_1] [class_2]	count=1
function	of ||| skyoffset	count=1
class	(points_low points_high) ||| tabular	count=1
function	votable field ||| votable	count=1
module	an [module_2] ||| [module_2] [module_1]	count=4
function	class that ||| make skyoffset	count=1
function_arg	source flag ||| source i	count=3
function	dtype that ||| dtype for	count=2
function	[function] pixel of ||| [function]	count=3
module	returns true when the ||| io	count=1
function	key data tuples ||| items	count=1
module_class	[module_1] card ||| [module_1] [class_2]	count=6
function	obliquity of the earth ||| obliquity	count=1
function	interpolate ut1-utc ||| ut1 utc	count=1
arg	given metadata key and ||| key	count=1
function	heliocentric [function_2] ||| [function_2] [function_1]	count=8
function	this [function] the ||| group [function]	count=1
function	optical ||| doppler optical	count=1
function_arg	[function_1] fn iter ||| [arg_2] [function_1]	count=4
function	site registry ||| get site registry	count=2
module	xml id_ [module] may be ||| [module]	count=1
arg	inserts a new card [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	index refers to ||| index idx	count=1
arg	the current value of ||| value	count=1
module	[module_1] the ||| [module_2] [module_1]	count=46
function	bytestring columns (dtype kind='s') ||| bytestring	count=1
module	else convert to a ||| constants	count=1
module	the ||| stats	count=6
arg	appropriate combination of iers_a ||| iers_a	count=1
module	the keyword ||| io	count=1
module	affects ||| configobj	count=1
function	the value ||| model value	count=1
module	the comment regexp for ||| io	count=1
arg	a coordinate transform from ||| transform	count=1
module	an hdu [module_2] ||| [module_2] [module_1]	count=2
arg	the simplest possible composite ||| units max_depth include_prefix_units	count=1
function	earth ||| earth	count=1
arg	creates a fitshdu from ||| cls filename compress	count=1
function	proportion and confidence interval ||| proportion	count=1
function	specified ||| no transdata	count=1
function	too long to fit ||| long	count=1
arg	n [arg_2] ||| [arg_2] [arg_1]	count=1
module	the futures ||| utils compat futures	count=1
module	[module_1] hdu's data ||| [module_1] [module_2]	count=8
arg	[arg_1] data ||| [arg_2] [arg_1]	count=5
arg	of _boundingbox with ||| cls func sig	count=1
module	for use with the ||| builtin_frames	count=1
function	:func add_catalog but ||| by url	count=1
function	bounding [function_2] ||| [function_2] [function_1]	count=2
module	string the ||| io fits hdu	count=1
arg	integer grid range n ||| n	count=1
module	with the comment ||| io	count=1
function	information ||| info	count=5
class	the [class] redshift ||| [class]	count=1
function_arg	[function_1] base 10 ||| [function_1] exponent [arg_2]	count=6
function_arg	sets [arg_2] ||| [arg_2] [function_1]	count=2
arg	values along the ||| values	count=1
function_arg	the input row ||| coords row	count=1
function_arg	utility [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	match for class1 ||| match class1	count=2
function	on ||| fromfile	count=1
arg	output a ||| output	count=1
module	and ||| extern	count=1
function_arg	column [arg_2] ||| [function_1] [arg_2]	count=4
module	with the in-order names ||| coordinates	count=1
class	field-specifier to uppercase ||| card	count=1
function_arg	return a transform [function_1] [arg_2] ||| [function_1] [arg_2]	count=9
function	line [function_2] ||| [function_2] [function_1]	count=4
arg	interval given [arg_2] ||| [arg_2] [arg_1]	count=3
function	coordinate ||| coord	count=2
module	value ||| fits	count=1
module	frame ||| builtin_frames	count=1
function	dark energy ||| ode	count=1
function	the same ||| same	count=1
module	returns the [module_2] ||| [module_1] [module_2]	count=2
module	an xml ||| utils xml	count=1
function	parameters from the ||| params	count=1
module	as defined by the ||| io	count=1
module	with the comment regexp ||| io ascii	count=1
arg	determine if class2 ||| class2 format_classes	count=1
module	create a ||| coordinates builtin_frames	count=1
function	slice of the ||| slice	count=1
arg	points within a given ||| searcharoundcoords seplimit	count=1
module	but creates a ||| io	count=1
module_class	the coordinates [class_2] ||| [module_1] [class_2]	count=6
function	from ||| cols from	count=1
function	a specific class of ||| make skyoffset	count=1
arg	column to a bit ||| field recformat	count=1
arg	settings ||| text errorclass infile cur_index	count=1
function	[function] to ||| [function]	count=6
function	registered units with the ||| get units with	count=1
function	create a new class ||| skyoffset	count=1
class	time ||| astropy time	count=1
function	initialize from an ||| init from	count=1
function	obliquity of ||| obliquity	count=1
function	messages [function] ||| log [function]	count=1
function	currently registered ||| registered	count=1
function	trap masked [function_2] ||| [function_1] [function_2]	count=1
function	default value for ||| default	count=1
arg	right metadata objects ||| right merge_func metadata_conflicts	count=2
function	is a record-valued ||| check if rvkc	count=3
function	deal with ||| array	count=1
arg	hour ||| h	count=1
module	behavior ||| time	count=1
module	can ||| units	count=1
function	[function_1] distance ||| [function_1] [function_2]	count=9
module	from fits ||| io fits hdu	count=1
function	one in which ra ||| in true	count=1
function	writable file-like ||| writable	count=1
function_arg	write the [arg_2] ||| [function_1] [arg_2]	count=2
arg	new fitshdu [arg_2] ||| [arg_2] [arg_1]	count=4
arg	val2 must be provided ||| val2	count=1
function	options ||| option	count=1
module	with each other ||| utils	count=1
function	element to unicode ||| element	count=1
function	cip ||| get cip	count=2
arg	iterable and/or text file ||| cards copy	count=1
function	the ||| convert uncertainty	count=1
function	checks ||| convert uncertainty	count=1
function	string ||| transform	count=1
function	is based on kraft ||| kraft	count=2
class	maps ||| linear lsqfitter	count=1
module	index into the ||| io	count=1
module	if the data ||| io fits hdu	count=1
function_arg	apply [arg_2] ||| io ascii [function_1] [arg_2]	count=5
module_class	modeling model ||| modeling model	count=1
class	[class_1] [class_2] ||| [class_1] time [class_2]	count=1
class	that contain table-like data ||| table like	count=1
arg	after ||| after replace	count=1
function	get groups for ||| table group by	count=2
module	a list of strings ||| io ascii	count=1
module	of the decorated object ||| utils	count=1
arg	on ||| cls filename	count=1
class	object's ||| array	count=1
function	single fits file returning ||| file	count=1
function	minute second to a ||| hms to	count=2
function_arg	[function_1] other ||| [function_1] [arg_2]	count=4
function	visual properties for ||| ticklabel	count=1
class	column specifically ||| column	count=1
arg	fitshdu fromhdulist(), but creates ||| cls	count=1
function	hdu from ||| hdu	count=1
class	size ||| groups hdu	count=1
arg	valid converters ||| converters	count=1
function	data [function] frame ||| transform [function]	count=1
arg	_boundingbox with a ||| func sig	count=1
class	that ||| quantity	count=1
module	resets all of the ||| io votable	count=1
arg	specified mtype and ||| mtype	count=1
function	get the ||| get	count=5
arg	model by taking ||| model x_range y_range	count=3
function	for a specific class ||| make skyoffset cls	count=1
module_class	[module_1] transform graph ||| [module_1] [class_2]	count=2
class	bar via ||| bar	count=1
function	a power to ||| validate power	count=1
module	in ||| io	count=1
function	the data ||| download	count=1
function_arg	a subclass [arg_2] ||| [function_1] [arg_2]	count=2
arg	deprecated unit ||| s unit	count=1
function	absorption ||| absorption	count=1
function	for ||| make skyoffset	count=1
class	progress [class_2] ||| [class_1] [class_2]	count=8
class	to ||| card	count=2
function	existing function ||| function	count=1
module	the given write function ||| utils	count=1
module	like ||| io	count=1
function	reading image ||| get scaled image	count=2
function	display minor ||| display minor	count=2
function_arg	format that [arg_2] ||| [arg_2] [function_1]	count=1
class	a ||| cdm	count=1
arg	whose value does not ||| value	count=1
function	get reader ||| get reader	count=2
class	for this [class_2] ||| [class_1] [class_2]	count=4
class	return a ||| table	count=1
function_arg	[function_1] [arg_2] position ||| [function_1] [arg_2] vals	count=3
arg	key [arg_2] ||| [arg_1] [arg_2]	count=1
function	contain a field-specifier ||| normalize	count=1
function	[function_1] in ||| [function_2] [function_1]	count=4
class	of the location for ||| earth location	count=1
module	and then formats it ||| utils	count=1
function	one file/buffer ||| writedata direct	count=1
arg	convert a keyword value ||| cls keyword	count=1
function	the polygon such ||| polygon	count=1
function	first sentence from a ||| first sentence	count=1
function	a config file can ||| is unedited config file	count=1
arg	[arg_1] and scale ||| [arg_2] [arg_1]	count=5
module	[module_1] the referenced ||| [module_2] [module_1]	count=2
class	daophot [class_2] ||| [class_1] [class_2]	count=1
class	two model [class_2] ||| [class_2] [class_1]	count=4
module	contain a ||| io	count=1
module	delete an [module_2] ||| [module_1] [module_2]	count=2
function	delete bscale/bzero ||| scale info	count=1
function	use with the ||| transform graph	count=1
module	in the [module_2] ||| [module_1] [module_2]	count=4
class	number ||| xmlwriter	count=1
module_class	[module_1] converter ||| [module_1] [class_2]	count=9
arg	[arg_1] local ||| [arg_2] [arg_1]	count=2
module	comments and configspec ||| extern configobj	count=1
module	the number of ||| utils xml	count=1
module	members that ||| extern configobj	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] [function_arg_2]	count=8
class	bounding [class_2] ||| [class_1] [class_2]	count=4
function	row is inconsistent ||| inconsistent	count=1
function	__call__ to ensure ||| prepare inputs	count=1
arg	a fits file ||| filename	count=1
class	checks if ||| nduncertainty	count=1
function	is the ||| make skyoffset	count=1
function	matches of a ||| match	count=2
function	string ||| str	count=1
module	on ||| fits	count=1
function_arg	to an [arg_2] ||| [arg_2] [function_1]	count=1
function	hdu from the ||| hdu	count=1
module	contains any [module] or ||| [module]	count=1
arg	a [arg] ||| [arg] out	count=2
function	corresponding to [function_2] ||| [function_1] [function_2]	count=2
function	string formatted as dms ||| string	count=1
arg	communication between this process ||| pending_work_items work_ids_queue	count=1
function_arg	mantissa [arg_2] ||| [function_1] exponent [arg_2]	count=1
function	the ||| get file	count=1
module	in the table ||| io ascii	count=2
function	polar motion source ||| pm source	count=2
module	class that is ||| builtin_frames	count=1
function	string ||| graph	count=1
arg	or dtd ||| schema_file	count=1
class	[class] ascii ||| [class]	count=1
function	set ||| set	count=19
arg	n [arg_2] ||| [arg_1] [arg_2]	count=1
function	directly from one file/buffer ||| writedata direct copy	count=1
arg	new unit ||| unit	count=1
class	the current unit ||| unit	count=1
class	is a cartesianrepresentation ||| cartesian representation frame	count=1
arg	a ||| a bins	count=1
function	[function_1] table header ||| [function_2] [function_1]	count=1
function_arg	[function_1] object col ||| [function_1] [arg_2]	count=2
class	a nx2 array ||| wcspixel2world	count=1
arg	package and provides ||| package encoding cache	count=1
class	internal function for ||| base hdu	count=1
class	also clears comments ||| section	count=1
class	hdu that ||| hdu	count=1
module	for [module] legacy before/after ||| [module]	count=1
class	location [class_2] ||| [class_2] [class_1]	count=5
function	return an ||| site	count=1
function	the site ||| get site	count=1
arg	by ||| a	count=1
class	the data should ||| image hdu	count=1
arg	within a given ||| searcharoundcoords distlimit	count=1
function	[function_1] summary information ||| [function_1] [function_2]	count=1
class	name [class] is used ||| function unit [class]	count=1
function	declaremetadata ||| declare metadata	count=1
module	with ||| coordinates builtin_frames	count=2
arg	coordinate transformation to the ||| fromsys tosys transform	count=1
function	absorption [function_2] ||| [function_2] [function_1]	count=3
function_arg	[function_1] for class1 ||| [function_1] [arg_2]	count=2
function	it is ||| is	count=1
class	of this class ||| earth location	count=1
class	check ||| function	count=1
arg	time ||| time	count=2
arg	'sep' parameter ||| precision pad sep	count=1
function_arg	view of obj ||| new view obj	count=2
arg	format ||| format nrows	count=1
arg	with a specified platescale ||| platescale	count=1
function	file it ||| file	count=1
arg	fitshdu from a file ||| cls filename compress	count=1
function	[function] scalar value ||| scalar [function]	count=1
function	to apply equivalence pairs ||| apply	count=1
function	file-like object ||| file	count=1
module	meaning of the ||| io votable	count=2
function_arg	fit at [arg_2] ||| [arg_2] [function_1]	count=1
class	of the index ||| sliced index	count=1
function	a prefix ||| prefix	count=2
class	names of the ||| base representation	count=1
class	either model ||| compound model	count=1
module	possibly on the bscale ||| io fits	count=1
module	the coordinate ||| coordinates builtin_frames	count=1
module	normal writeto(), ||| fits	count=1
function	with a ||| prepare	count=1
arg	the standard locations ||| data_name	count=2
function	of ||| format	count=1
arg	ufunc can deal with ||| obj context	count=1
function	setting the configspec ||| configspec	count=1
function	the first sentence ||| first sentence	count=2
function	[function_1] [function_2] distance ||| [function_1] [function_2]	count=1
function	spherical polar coordinates ||| spherical	count=1
module	the file is currently ||| utils xml	count=1
function	or ||| check	count=1
function	provided args, and ||| parse inputs	count=1
function	slice [function_2] ||| [function_2] [function_1]	count=4
module	that also affects ||| configobj	count=1
function	and ||| format	count=1
class	list of column ||| rec	count=1
class	[class_1] time ||| [class_2] [class_1]	count=1
arg	:class table ||| table ref	count=1
function	staticmethod or a classmethod) ||| isinstancemethod	count=1
module	sip ||| wcs	count=1
function	table instance from a ||| from table	count=1
function	to apply equivalence pairs ||| apply equivalencies	count=1
function	to the raw ||| raw	count=1
function	radians to hours ||| radians to hours	count=3
class	equation ||| cdm	count=2
class	like fitshdu fromhdulist(), but ||| hdu	count=1
function	hdf5 ||| table hdf5	count=1
class	from sliced ||| sliced	count=1
module	[module_1] [module_2] ||| [module_1] [module_2]	count=226
function	package's docstring ||| graph docs	count=1
arg	key and its value ||| key	count=1
arg	redshift z ||| z	count=21
function	the barycentric ||| barycentric	count=2
function	and correspond [function] that type ||| numpy [function] votable	count=1
function	[function_1] with ||| [function_2] [function_1]	count=9
function_arg	[function_1] frequency parameters ||| [function_1] t [arg_2]	count=1
function	[function_1] masked ||| [function_2] [function_1]	count=4
arg	some ||| unit	count=1
class	uri to an arbitrary ||| link	count=1
function	method ||| get subscriptions	count=1
module	the locations of ||| io	count=1
module	when the [module_2] ||| [module_1] [module_2]	count=2
function	register [function_2] ||| [function_2] [function_1]	count=2
function	of numpy allclose that ||| not allclose	count=1
function	calculate the barycentric ||| body barycentric	count=2
function	table ||| table as needed	count=1
class	table data from an ||| table like	count=1
function	the decorated object and ||| format	count=1
function	same [function_2] ||| [function_2] [function_1]	count=3
arg	of a specified keyword ||| keyword	count=1
function	[function] directly in ||| [function] astropy	count=3
arg	class for ||| cls	count=1
module	fromhdulist(), but creates a ||| io fits hdu	count=1
arg	along rows a join_type ||| join_type metadata_conflicts	count=1
function_arg	[function_1] [arg_2] ||| [function_1] center 1d [arg_2]	count=4
arg	simplest possible composite ||| equivalencies units max_depth include_prefix_units	count=1
arg	[arg_1] after ||| header relativeinsert card [arg_1] [arg_2]	count=1
module	ascii format or ||| fits	count=1
module	the specified ||| io fits	count=1
module	fitshdu fromhdulist(), ||| fits	count=1
arg	given frequency parameters ||| frequency	count=1
function	directly in [function_1] [function_2] checkout ||| [function_1] [function_2]	count=2
function	[function_1] a reader ||| [function_1] [function_2]	count=1
function_arg	separation between this ||| separation other	count=1
class	[class_1] image format ||| [class_1] [class_2]	count=2
function	enabled in ||| enabled	count=6
module	and returns a ||| coordinates	count=2
class	a [class] ||| [class]	count=1
module	the comment regexp for ||| io ascii	count=1
function	given ||| subpixel	count=1
arg	getsubscriptions ||| client_id	count=1
function	center of the ||| center 1d	count=1
function	this injects entry ||| entry	count=1
function	[function_1] class ||| [function_2] [function_1]	count=2
function	string ||| make	count=1
class	a field-specifier ||| card	count=1
function	to unicode if ||| to	count=1
function	the unit [function_2] ||| [function_2] [function_1]	count=4
module	the bscale value ||| io fits	count=1
function	a coordinate ||| coord	count=1
function	out of the ||| console	count=1
class	time object ||| astropy time	count=1
function	all hdus ||| hdus	count=1
module_class	parameter names [class_2] ||| [module_1] [class_2]	count=2
function	merge column [function_2] ||| [function_1] [function_2]	count=4
function	convert hour minute second ||| hms	count=1
function	argument ||| renamed argument	count=1
function	catalog coordinates ||| coordinates	count=2
module_class	with the location ||| coordinates earth location	count=1
class	of ||| w0wa cdm	count=4
function	for ||| transform	count=1
module_class	fits [class_2] ||| [class_2] [module_1]	count=2
class	for a daophot ||| daophot	count=1
module	~astropy vo ||| vo	count=5
module	to fits ||| fits	count=1
function	[function_1] file ||| [function_1] [function_2] filename filter_level filter_origin	count=1
arg	and val2 must be ||| val2	count=1
function	to trap masked ||| use str for masked	count=1
module	if the [module_2] ||| [module_1] [module_2]	count=2
module	summary of the hdus ||| io fits	count=1
module	computes ||| coordinates	count=2
module	w ||| cosmology	count=1
arg	name and ||| name	count=1
class	broken [class] ||| smoothly broken [class]	count=1
arg	given beautifulsoup tag ||| soup	count=1
module	serialization in the ||| io votable	count=1
function	[function_1] another column ||| [function_1] [function_2] format cls format	count=3
function	in radians to ||| radians to	count=6
function_arg	[function_1] [arg_2] ||| [function_1] coldefs [arg_2]	count=1
function	dtype for ||| dtype	count=2
module_class	[module_1] format's associated ||| [module_1] [class_2]	count=2
arg	the package and ||| package encoding cache	count=1
function	the optimal histogram bin ||| knuth bin	count=1
class	[class_1] disk model ||| [class_2] [class_1]	count=1
class	that may ||| card	count=1
function	ascii strings to ||| to	count=1
class	location for the default ||| location	count=1
function	use with the coordinate ||| make transform	count=1
function	the decorated object and ||| doc	count=1
function	[function_1] match ||| [function_2] [function_1]	count=1
module_class	constructs [class_2] ||| [class_2] [module_1]	count=2
function	angular diameter [function_2] ||| [function_2] [function_1]	count=1
module	types after the ||| io ascii	count=1
arg	image_r image_g [arg_2] ||| [arg_2] [arg_1]	count=1
class	frame a ||| frame	count=1
function_arg	radians to [arg_2] ||| [function_1] dms [arg_2]	count=1
module	dtype object or ||| io fits	count=1
module	the column ||| io	count=2
function	for non-relativistic matter ||| om	count=1
function	[function_1] adjust ||| [function_2] [function_1]	count=2
module	dark energy equation ||| cosmology	count=2
class	names ||| base representation	count=1
function	to pad the ||| pad	count=1
class	[class] hdu ||| [class]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] notification [arg_2]	count=3
arg	data from lines ||| lines	count=1
function	from a ||| from	count=3
function	to a [function_2] ||| [function_2] [function_1]	count=3
module	elements of the input ||| io fits	count=1
function_arg	"best" match [arg_2] ||| [arg_2] [function_1]	count=1
module	clears comments ||| configobj	count=1
function	of all ||| find	count=1
function	decorated ||| format doc	count=1
class	for this frame ||| base coordinate frame	count=3
function	reload a configuration item ||| reload	count=1
arg	val1 and val2 ||| val1 val2	count=5
function	signal to noise ||| signal to noise oir	count=1
function	[function_1] values ||| [function_2] [function_1]	count=5
arg	arrays image_r [arg_2] ||| [arg_1] [arg_2]	count=2
class	current unit ||| unit base	count=1
class	time in ||| time predictor	count=1
module	the data by optionally ||| visualization	count=1
function	[function_1] instance from ||| [function_1] [function_2]	count=3
arg	column through ||| column	count=1
function	read in the ||| read	count=1
arg	join_type of ||| join_type	count=2
module	overload astropy utils ||| utils	count=1
function	and then formats ||| doc	count=1
function	[function] through ||| update [function]	count=2
function	removal [function] through ||| update [function]	count=1
function	[function_1] cutout ||| [function_2] [function_1] original_position	count=2
class	information [class_2] ||| [class_2] [class_1]	count=2
function	[function_1] [function_2] self scale ||| [function_1] [function_2]	count=8
function	defining their bounding ||| bounding	count=1
module_class	[module_1] resource_ element ||| [module_1] [class_2]	count=2
function	with ||| make transform	count=1
module	a version of ||| extern	count=1
arg	function or class ||| function declare metadata	count=2
arg	[arg_1] exclude_names to ||| [arg_2] [arg_1]	count=2
function_arg	time in [arg_2] ||| [arg_2] [function_1]	count=1
class	header ||| header	count=26
arg	data based on the ||| nrows config	count=1
function	for use with the ||| make transform	count=1
class	of this class for ||| earth location	count=1
arg	for outputting ||| names funcs	count=1
function	function relative ||| nu relative	count=1
function_arg	val1 [arg_2] ||| [arg_2] [function_1]	count=3
function	position ||| body position	count=1
module	in the first ||| io ascii	count=1
module	a new ||| builtin_frames	count=1
class	a cds header ||| cds header	count=2
arg	from a file ||| cls filename	count=1
function	defining their bounding box ||| bounding box	count=1
function	allow logarithmic ||| logarithmic	count=1
function	a set of catalog ||| to catalog	count=1
function	prereleaser ||| prereleaser	count=1
function	a reader ||| reader	count=1
function_arg	[function_1] refers ||| [arg_2] [function_1]	count=5
arg	table object that this ||| table	count=1
class	write summary information ||| info	count=1
class	information about ||| info	count=1
module	from a file ||| io	count=1
module	create a new class ||| coordinates	count=1
function	from [function_2] ||| visualization wcsaxes wcsaxes [function_1] transform [function_2]	count=1
module	a list ||| ascii	count=1
class	config file ||| config	count=1
module	the appropriate ||| io votable	count=1
function	object [function] ||| [function]	count=3
function	allows for ||| infos	count=1
function	mean ||| mean	count=1
class	equation of state at ||| w0wa cdm	count=1
function	index of column ||| index column	count=3
function	[function_1] coordinate ||| [function_2] [function_1]	count=1
class	table ||| bin table	count=1
arg	add/subtract logunit to/from another ||| other sign_self sign_other	count=1
function	the given python function ||| function	count=1
class	array ||| array	count=3
module	formats ||| utils	count=1
class	time object in ||| astropy time	count=1
function	declare ||| declare	count=1
function_arg	element [arg_2] ||| [arg_2] [function_1]	count=5
class	client wishes ||| sampclient	count=1
class	an object of this ||| earth location	count=1
arg	method ||| private_key msg_id	count=1
arg	known observatory/site ||| site_name	count=1
arg	for the overlapping part ||| large_array_shape small_array_shape position mode	count=1
class	>>> raise vdtvaluetoolongerror('jedie') ||| vdt value too long	count=1
class	but creates a ||| hdu	count=1
function	hdu ||| hdu	count=1
function	[function_1] the tick ||| [function_1] [function_2]	count=1
arg	val val2 [arg_2] ||| time get time fmt [arg_1] [arg_2]	count=6
arg	format and ||| format	count=1
function	string formatted as dms ||| to string	count=1
function	[function_1] [function_2] ||| [function_1] string [function_2]	count=2
function	[function_1] sentence ||| [function_2] [function_1]	count=3
function	over the default ||| default	count=1
function	wrapper of scipy ||| scipy	count=1
class	energy equation of state ||| w0wa	count=2
function	the center of the ||| center 1d	count=1
function	check column ||| check column	count=1
arg	internal _format scale and ||| format scale	count=1
module	with a ||| function	count=1
function	trap masked [function_2] ||| [function_2] [function_1]	count=1
module	comments and ||| configobj	count=1
module	contain ||| io	count=1
module	that is ||| builtin_frames	count=1
arg	fitshdu from ||| compress	count=2
class	client in ||| sampclient	count=1
class	equivalencies ||| unit base	count=1
module_class	the table ||| io votable table	count=1
function	result of the call ||| result	count=1
module	in the ||| io ascii	count=3
arg	a solar system body ||| body time ephemeris get_velocity	count=1
class	row ||| row	count=2
function	register the ||| register	count=1
module	the simple or xtension ||| io	count=1
function	source used for the ||| reference	count=1
function	keyword repeat [function_2] ||| [function_2] [function_1]	count=2
class	data should ||| hdu	count=1
module_class	implement header ||| io fits header	count=1
function	with the ||| make transform	count=1
module	the bulk of the ||| io fits hdu	count=1
function	height ||| height	count=1
function	and ||| doc	count=1
arg	by taking the value ||| x_range	count=1
class	number of coefficients ||| polynomial	count=1
class	associated with ||| named	count=1
class	constant ||| const2d	count=1
function_arg	binary mode ||| binary f	count=1
module	check that ||| function	count=1
module	the ascii ||| io fits	count=1
function	a string ||| make	count=1
module_class	the resource ||| io votable resource	count=3
module_class	the transform graph ||| coordinates transform graph	count=1
module	cosmology have ||| cosmology	count=1
function	fits file parameters ||| fits	count=1
function	decimal points to indices ||| indices	count=1
class	the ||| base	count=2
function	data cache directory and ||| get download cache	count=1
class	broken [class] law ||| smoothly broken [class]	count=1
arg	method to the underlying ||| method	count=1
function	too long to ||| long	count=1
module	directly either a standard ||| fits hdu	count=1
function	origin ||| skyoffset	count=1
arg	given urls ||| urls cache show_progress timeout	count=1
function	the exception raised by ||| exception	count=1
function	is ||| array	count=1
function	convert a power ||| power	count=1
module	with ||| coordinates	count=2
module	samp hub ||| vo samp	count=1
arg	[arg] and return ||| [arg]	count=7
arg	_boundingbox with a ||| cls func sig	count=1
module	classmethod to ||| io fits	count=1
function	of the [function] ||| [function]	count=3
arg	compositetransform for a ||| fromsys tosys	count=1
module	against the appropriate votable ||| io votable	count=1
function	from a given ||| from table	count=1
module	units that have the ||| units	count=1
arg	a fitshdu from a ||| cls filename compress	count=1
function	return the precession ||| precession	count=2
arg	join_type of 'exact' ||| join_type metadata_conflicts	count=1
class	stretch ||| linear stretch	count=1
function	on an oversampled ||| oversample 1d	count=1
function	[function_1] unit format ||| [function_1] [function_2]	count=1
module	fits file [module_2] ||| [module_1] [module_2]	count=1
arg	metadata key ||| key	count=1
function_arg	to map [arg_2] ||| [arg_2] [function_1]	count=1
arg	package ||| package encoding	count=1
function	frame into one in ||| in true coordinates	count=1
module	[module_1] from the ||| [module_1] [module_2]	count=7
module	of the ||| io ascii	count=4
function_arg	[function_1] frequency ||| [function_1] [arg_2] assume_regular_frequency	count=1
class	progress ||| progress	count=5
class	of coefficients in ||| polynomial model	count=1
module	the exact same ||| io fits	count=1
module	affects scalars/sections ||| configobj	count=1
arg	and val2 must ||| val2	count=1
function	[function_1] [function_2] type syntactically at least ||| [function_1] [function_2] type content_type	count=4
function	[*required*] [function] of ||| [function]	count=1
module	the default writing behavior ||| io	count=1
arg	mtype to a function ||| mtype function declare	count=1
function	generates a string ||| graph	count=1
function	the site [function_2] ||| [function_2] [function_1]	count=4
arg	[arg_1] scale ||| [arg_2] [arg_1]	count=5
function	[function_1] string ||| [function_1] [function_2]	count=6
function	world coordinate system wcs ||| wcs	count=1
class	can deal with a ||| function quantity	count=1
function	[function_1] index or ||| [function_2] [function_1]	count=4
module	value ||| configobj	count=1
module	[module_1] that ||| [module_1] [module_2]	count=2
function	formats it ||| format	count=1
function	of skycoord coordinates ||| skycoord	count=1
function	the file in ||| file	count=1
function	[function_1] type of ||| [function_2] [function_1]	count=2
function	calculate the gcrs ||| gcrs	count=1
arg	the given index ||| index	count=1
function	result of the ||| result	count=1
function	[function_1] index ||| [function_2] [function_1]	count=11
function_arg	[function_1] _boundingbox with ||| [arg_2] [function_1]	count=9
function	add a new stokes ||| add stokes	count=1
function_arg	[function_1] out ||| [function_1] [arg_2]	count=3
module	then ||| utils	count=1
function	kpc corresponding to ||| kpc proper per	count=1
module	handled in the ||| io ascii	count=1
function	parallel from ||| parallel	count=1
module	header in a fits ||| io fits	count=3
function	center of ||| center 2d	count=1
arg	oneself possibly ||| physical_unit	count=1
function	update the 'checksum' and ||| update	count=1
function	generates a string for ||| transform	count=1
arg	true if [arg] is a ||| [arg]	count=1
arg	val val2 format ||| val val2 format	count=1
function	to an hdf5 ||| hdf5	count=1
function	to unicode ||| to	count=1
function	patch to include only ||| patch	count=1
class	is a cartesianrepresentation ||| cartesian representation	count=1
function_arg	[function_1] given unit ||| with [function_1] [arg_2]	count=1
arg	parse into a siteregistry ||| jsonurl	count=1
class	one dimensional broken [class_1] [class_2] ||| [class_1] [class_2]	count=1
module	explanations of the ||| io fits	count=3
function	validate the format for ||| validate	count=1
function	strings to unicode ||| to	count=1
class	with ||| base representation	count=1
module	a summary of the ||| io	count=1
function	registry url ||| registry	count=1
arg	do nothing ||| lines meta	count=1
class	from sliced ||| sliced index	count=1
function	to a float ||| to	count=1
class	in logarithmic ||| log unit	count=1
class	(out ||| or spinner	count=1
class	of [class_1] [class_2] ||| table [class_1] [class_2]	count=1
class	names of ||| base representation	count=1
arg	a version of numpy ||| a b rtol atol	count=1
function	setxmlrpccallback ||| set xmlrpc callback	count=1
module	be given ||| utils	count=1
class	in this table ||| table like	count=1
module	attributes can be given ||| utils	count=1
module	the first ||| io votable	count=1
class	[class_1] box ||| [class_2] [class_1]	count=3
function	table ||| identify table	count=1
module	executing ||| utils compat futures	count=2
module_class	[module_1] signature ||| [class_2] [module_1]	count=1
module	given as ||| utils	count=1
function	its tables and nested ||| and params	count=1
function	the coordinate ||| make transform	count=1
arg	fitshdu ||| filename compress	count=1
function	check that the ||| check	count=1
function	row ||| row	count=2
function_arg	its indices [arg_2] ||| [function_1] col_slice [arg_2]	count=2
module_class	[module_1] [class_2] table (ascii=none means unspecified ||| [module_1] [class_2] determine formats cls format	count=4
function	a cosmology ||| cosmology	count=1
module	[module_1] the coosys_ ||| [module_1] [module_2]	count=1
class	that ||| card	count=1
class	of state at z=0 ||| w0wa cdm	count=1
class	also ||| section	count=2
function	power ||| power	count=2
function	ndarray to a ||| to file like	count=1
function	object of this ||| of	count=1
module	of ||| utils	count=3
function	astropy [function_2] ||| [function_2] [function_1]	count=3
module	the keyword arguments ||| io	count=1
function	and b [function_2] ||| [function_1] [function_2]	count=1
module	fitshdu fromhdulist(), ||| io	count=1
function	to a ||| unit to	count=1
function	the powers of the ||| powers	count=1
function	precession matrix from ||| precession matrix	count=2
function	cmb temperature ||| tcmb	count=1
function	nddata instance with its ||| nddata	count=1
class	[class_1] disk model ||| [class_1] [class_2]	count=1
function	the contents ||| get file contents	count=1
module	class of origin frame ||| builtin_frames	count=1
module	compliance ||| fits scripts	count=1
function_arg	the input [arg_2] ||| [arg_2] [function_1]	count=4
function	filename or file-like object ||| get	count=1
arg	value of a ||| value	count=2
function_arg	[function_1] [arg_2] ||| [function_1] unit summary [arg_2]	count=9
function	format a floating number ||| format float	count=1
module	[module_1] samp ||| [module_1] [module_2]	count=40
function	writable ||| to writable	count=1
function_arg	[function_1] of col ||| [function_1] equal [arg_2]	count=1
arg	b ||| b	count=1
module	angular units ||| units	count=2
function	[function_1] [function_2] ||| core [function_1] [function_2]	count=2
class	a new [class] ||| [class]	count=1
function	on kraft ||| kraft	count=2
class	column ||| column	count=14
function	create a new ||| create arrays	count=1
function	an object of ||| site	count=1
function_arg	[function_1] msg-tag ||| [function_1] response [arg_2]	count=1
function	filename for the ||| filename	count=1
function	matches of this coordinate ||| match	count=1
module	fits ||| io fits hdu	count=2
arg	an [arg_2] ||| [arg_2] [arg_1]	count=1
module	a decorator ||| bundled	count=1
function	has ||| has	count=1
module	used in formatting table ||| table	count=1
function	use with ||| transform	count=1
module	the custom quoting behavior ||| io ascii	count=1
function	a string for ||| graph	count=1
function	to a fits file ||| fits	count=1
function	by name ||| site	count=1
module	this ||| nddata	count=1
function	indices to ||| indices	count=1
class	[class_1] [class_2] ||| coordinates [class_2] [class_1]	count=3
arg	[arg_1] x ||| [arg_1] [arg_2]	count=1
module	they appear in the ||| io votable	count=1
function	from a ||| generate	count=1
function	besselian epoch to another ||| besselian	count=1
function	raise ||| raise	count=1
function	rotate the polygon such ||| rotate polygon	count=1
module	the coosys_ element ||| io	count=1
arg	file on ||| cls	count=1
function_arg	valid secondary [arg_2] ||| [function_1] [arg_2]	count=1
function	and set [function_2] ||| [function_1] [function_2]	count=1
function	line for ||| line	count=1
module	units that have ||| units	count=1
module	value in the ||| io	count=1
function	[function_1] neutrino species? ||| [function_2] [function_1]	count=2
function	median ||| median	count=1
function	proxy to ping ||| ping	count=1
function	[function_1] utc ||| [function_2] [function_1]	count=2
module	associated fits ||| fits	count=1
