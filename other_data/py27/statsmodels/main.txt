core	NoseWrapper	test	label verbose extra_argv doctests	run tests for module using nose %(test_header)s
robust		mad	a c axis center	the median absolute deviation along given axis of an array parameters
robust	Huber	__call__	a mu initscale axis	compute huber's proposal 2 estimate of scale using an optional initial value of scale and an optional estimate of mu
robust	Huber	_estimate_both	a scale mu axis	estimate scale and location simultaneously with the following pseudo_loop
robust	RobustNorm	rho	z	the robust criterion estimator function
robust	RobustNorm	psi	z	derivative of rho sometimes referred to as the influence function
robust	RobustNorm	weights	z	returns the value of psi z / z
robust	RobustNorm	psi_deriv	z	deriative of psi used to obtain robust covariance matrix
robust	RobustNorm	__call__	z	returns the value of estimator rho applied to an input
robust	LeastSquares	rho	z	the least squares estimator rho function parameters
robust	LeastSquares	psi	z	the psi function for the least squares estimator
robust	LeastSquares	weights	z	the least squares estimator weighting function for the irls algorithm
robust	LeastSquares	psi_deriv	z	the derivative of the least squares psi function
robust	HuberT	_subset	z	huber's t is defined piecewise over the range for z
robust	HuberT	rho	z	the robust criterion function for huber's t
robust	HuberT	psi	z	the psi function for huber's t estimator
robust	HuberT	weights	z	huber's t weighting function for the irls algorithm
robust	HuberT	psi_deriv	z	the derivative of huber's t psi function notes
robust	RamsayE	rho	z	the robust criterion function for ramsay's ea
robust	RamsayE	psi	z	the psi function for ramsay's ea estimator
robust	RamsayE	weights	z	ramsay's ea weighting function for the irls algorithm
robust	RamsayE	psi_deriv	z	the derivative of ramsay's ea psi function
robust	AndrewWave	_subset	z	andrew's wave is defined piecewise over the range of z
robust	AndrewWave	rho	z	the robust criterion function for andrew's wave
robust	AndrewWave	psi	z	the psi function for andrew's wave
robust	AndrewWave	weights	z	andrew's wave weighting function for the irls algorithm
robust	AndrewWave	psi_deriv	z	the derivative of andrew's wave psi function notes
robust	TrimmedMean	_subset	z	least trimmed mean is defined piecewise over the range of z
robust	TrimmedMean	rho	z	the robust criterion function for least trimmed mean
robust	TrimmedMean	psi	z	the psi function for least trimmed mean
robust	TrimmedMean	weights	z	least trimmed mean weighting function for the irls algorithm
robust	TrimmedMean	psi_deriv	z	the derivative of least trimmed mean psi function notes
robust	Hampel	_subset	z	hampel's function is defined piecewise over the range of z
robust	Hampel	rho	z	the robust criterion function for hampel's estimator parameters
robust	Hampel	psi	z	the psi function for hampel's estimator
robust	Hampel	weights	z	hampel weighting function for the irls algorithm
robust	TukeyBiweight	_subset	z	tukey's biweight is defined piecewise over the range of z
robust	TukeyBiweight	rho	z	the robust criterion function for tukey's biweight estimator parameters
robust	TukeyBiweight	psi	z	the psi function for tukey's biweight estimator
robust	TukeyBiweight	weights	z	tukey's biweight weighting function for the irls algorithm
robust	TukeyBiweight	psi_deriv	z	the derivative of tukey's biweight psi function notes
robust		estimate_location	a scale norm axis	m-estimator of location using self norm and a current
robust	RLM	_initialize		initializes the model for the irls fit
robust	RLM	predict	params exog	return linear predicted values from a design matrix
robust	RLM	deviance	tmp_results	returns the unnormalized log-likelihood from the m estimator
robust	RLM	_estimate_scale	resid	estimates the scale based on the option provided to the fit method
robust	RLM	fit	maxiter tol scale_est init	fits the model using iteratively reweighted least squares
robust	RLMResults	summary	yname xname title alpha	this is for testing the new summary setup
robust	RLMResults	summary2	xname yname title alpha	experimental summary function for regression results parameters
tsa		sumofsq	x axis	helper function to calculate sum of squares along first axis
tsa	AR	_transparams	params	transforms params to induce stationarity/invertability
tsa	AR	_invtransparams	start_params	inverse of the jones reparameterization
tsa	AR	_presample_fit	params start p end	return the pre-sample predicted values using the kalman filter notes
tsa	AR	predict	params start end dynamic	returns in-sample and out-of-sample prediction
tsa	AR	_presample_varcov	params	returns the inverse of the presample variance-covariance
tsa	AR	_loglike_css	params	loglikelihood of ar p process using conditional sum of squares
tsa	AR	_loglike_mle	params	loglikelihood of ar p process using exact maximum likelihood
tsa	AR	loglike	params	the loglikelihood of an ar p process parameters
tsa	AR	score	params	return the gradient of the loglikelihood at params
tsa	AR	information	params	not implemented yet
tsa	AR	hessian	params	returns numerical hessian for now
tsa	AR	_stackX	k_ar trend	private method to build the rhs matrix for estimation
tsa	AR	select_order	maxlag ic trend method	select the lag order according to the information criterion
tsa	AR	fit	maxlag method ic trend	fit the unconditional maximum likelihood of an ar p process
tsa		_autolag	mod endog exog startlag	returns the results for the lag length that maximizes the info criterion
tsa		adfuller	x maxlag regression autolag	augmented dickey-fuller unit root test the augmented dickey-fuller test can be used to test for a unit root in a
tsa		acovf	x unbiased demean fft	autocovariance for 1d parameters
tsa		q_stat	x nobs type	return's ljung-box q statistic x : array-like
tsa		acf	x unbiased nlags qstat	autocorrelation function for 1d arrays
tsa		pacf_yw	x nlags method	partial autocorrelation estimated with non-recursive yule_walker parameters
tsa		pacf_ols	x nlags	calculate partial autocorrelations parameters
tsa		pacf	x nlags method alpha	partial autocorrelation estimated parameters
tsa		ccovf	x y unbiased demean	crosscovariance for 1d parameters
tsa		ccf	x y unbiased	cross-correlation function for 1d parameters
tsa		periodogram	X	returns the periodogram for the natural frequency of x parameters
tsa		levinson_durbin	s nlags isacov	levinson-durbin recursion for autoregressive processes parameters
tsa		grangercausalitytests	x maxlag addconst verbose	four tests for granger non causality of 2 timeseries all four tests give similar results
tsa		coint	y0 y1 trend method	test for no-cointegration of a univariate equation the null hypothesis is no cointegration
tsa		arma_order_select_ic	y max_ar max_ma ic	returns information criteria for many arma models parameters
tsa		has_missing	data	returns true if 'data' contains missing entries otherwise false
tsa		kpss	x regression lags store	kwiatkowski-phillips-schmidt-shin test for stationarity
tsa		_sigma_est_kpss	resids nobs lags	computes equation 10 p 164 of kwiatkowski et al 1992 this is the
tsa		arma_generate_sample	ar ma nsample sigma	generate a random sample of an arma process parameters
tsa		arma_acovf	ar ma nobs	theoretical autocovariance function of arma process parameters
tsa		arma_acf	ar ma nobs	theoretical autocorrelation function of an arma process
tsa		arma_pacf	ar ma nobs	partial autocorrelation function of an arma process
tsa		arma_periodogram	ar ma worN whole	periodogram for arma process given by lag-polynomials ar and ma parameters
tsa		arma_impulse_response	ar ma nobs	get the impulse response function ma representation for arma process parameters
tsa		arma2ar	ar ma nobs	get the ar representation of an arma process parameters
tsa		ar2arma	ar_des p q n	find arma approximation to ar process this finds the arma p q coefficients that minimize the integrated
tsa		lpol2index	ar	remove zeros from lagpolynomial squeezed representation with index
tsa		index2lpol	coeffs index	expand coefficients to lag poly
tsa		lpol_fima	d n	ma representation of fractional integration
tsa		lpol_fiar	d n	ar representation of fractional integration
tsa		lpol_sdiff	s	return coefficients for seasonal difference (1-l^s)
tsa		deconvolve	num den n	deconvolves divisor out of signal division of polynomials for n terms calculates den^{-1} * num
tsa	ArmaProcess	from_coeffs	cls arcoefs macoefs nobs	create armaprocess instance from coefficients of the lag-polynomials parameters
tsa	ArmaProcess	from_estimation	cls model_results nobs	create armaprocess instance from arma estimation results
tsa	ArmaProcess	arroots		roots of autoregressive lag-polynomial
tsa	ArmaProcess	maroots		roots of moving average lag-polynomial
tsa	ArmaProcess	isstationary		arma process is stationary if ar roots are outside unit circle
tsa	ArmaProcess	isinvertible		arma process is invertible if ma roots are outside unit circle
tsa	ArmaProcess	invertroots	retnew	make ma polynomial invertible by inverting roots inside unit circle parameters
tsa	ArmaProcess	generate_sample	nsample scale distrvs axis	generate arma samples parameters
tsa		seasonal_mean	x freq	return means for each period in x freq is an int that gives the
tsa		seasonal_decompose	x model filt freq	seasonal decomposition using moving averages parameters
tsa	Arma	loglike	params	loglikelihood for arma model
tsa	Arma	nloglikeobs	params	loglikelihood for arma model
tsa	Arma	fit	order start_params method	estimate lag coefficients of an arima process
tsa	Arma	fit_mle	order start_params method maxiter	estimate an arma model with given order using conditional maximum likelihood
tsa	Arma	predicted	ar ma	past predicted values of time series
tsa	Arma	forecast	ar ma nperiod	nperiod ahead forecast at the end of the data period
tsa	Arma	forecast2	step_ahead start end endog	rolling h-period ahead forecast without reestimation 1 period ahead only in construction uses loop to go over data and
tsa	Arma	forecast3	step_ahead start	another try for h-step ahead forecasting
tsa	TSMLEModel	loglike	params	loglikelihood for timeseries model
tsa	TSMLEModel	score	params	score vector for arma model
tsa	TSMLEModel	hessian	params	hessian of arma model currently uses numdifftools
tsa	TSMLEModel	fit	start_params maxiter method tol	estimate model by minimizing negative loglikelihood
tsa		add_trend	x trend prepend has_constant	adds a trend and/or constant to an array
tsa		add_lag	x col lags drop	returns an array with lags included given an array
tsa		detrend	x order axis	detrend an array with a trend of given order along axis 0 or 1 parameters
tsa		lagmat	x maxlag trim original	create 2d array of lags parameters
tsa		lagmat2ds	x maxlag0 maxlagex dropex	generate lagmatrix for 2d array columns arranged by variables parameters
tsa		duplication_matrix	n	create duplication matrix d_n which satisfies vec s = d_n vech s for
tsa		elimination_matrix	n	create the elimination matrix l_n which satisfies vech m = l_n vec m for
tsa		commutation_matrix	p q	create the commutation matrix k_{p q} satisfying vec(a') = k_{p q} vec a
tsa		_ar_transparams	params	transforms params to induce stationarity/invertability
tsa		_ar_invtransparams	params	inverse of the jones reparameterization
tsa		_ma_transparams	params	transforms params to induce stationarity/invertability
tsa		_ma_invtransparams	macoefs	inverse of the jones reparameterization
tsa		unintegrate_levels	x d	returns the successive differences needed to unintegrate the series
tsa		unintegrate	x levels	after taking n-differences of a series return the original series parameters
tsa		freq_to_period	freq	convert a pandas frequency to a periodicity parameters
tsa		_get_predict_out_of_sample	endog p q k_trend	returns endog resid mu of appropriate length for out of sample prediction
tsa		_arma_predict_in_sample	start end endog resid	pre- and in-sample fitting for arma
tsa	ARMA	_fit_start_params_hr	order start_ar_lags	get starting parameters for fit
tsa	ARMA	score	params	compute the score function at params
tsa	ARMA	hessian	params	compute the hessian at params notes
tsa	ARMA	_transparams	params	transforms params to induce stationarity/invertability
tsa	ARMA	_invtransparams	start_params	inverse of the jones reparameterization
tsa	ARMA	geterrors	params	get the errors of the arma process
tsa	ARMA	loglike	params set_sigma2	compute the log-likelihood for arma p q model
tsa	ARMA	loglike_kalman	params set_sigma2	compute exact loglikelihood for arma p q model by the kalman filter
tsa	ARMA	loglike_css	params set_sigma2	conditional sum of squares likelihood function
tsa	ARMA	fit	start_params trend method transparams	fits arma p q model using exact maximum likelihood via kalman filter
tsa	ARIMA	fit	start_params trend method transparams	fits arima p d q model by exact maximum likelihood via kalman filter
tsa	ARMAResults	arfreq		returns the frequency of the ar roots
tsa	ARMAResults	mafreq		returns the frequency of the ma roots
tsa	ARMAResults	forecast	steps exog alpha	out-of-sample forecasts parameters
tsa	ARMAResults	summary	alpha	summarize the model parameters
tsa	ARMAResults	summary2	title alpha float_format	experimental summary function for arima results parameters
tsa	ARIMAResults	forecast	steps exog alpha	out-of-sample forecasts parameters
tsa		varfilter	x a	apply an autoregressive filter to a series x warning i just found out that convolve doesn't work as i
tsa		varinversefilter	ar nobs version	creates inverse ar filter ma representation recursively
tsa		vargenerate	ar u initvalues	generate an var process with errors u similar to gauss
tsa		padone	x front back axis	pad with zeros along one axis currently only axis=0 can be used sequentially to pad several axis
tsa		trimone	x front back axis	trim number of array elements along one axis examples
tsa		ar2full	ar	make reduced lagpolynomial into a right side lagpoly array
tsa		ar2lhs	ar	convert full rhs lagpolynomial into a reduced left side lagpoly array
tsa	_Var	fit	nlags	estimate parameters using ols parameters
tsa	_Var	predict		calculate estimated timeseries yhat for sample
tsa	_Var	covmat		covariance matrix of estimate # not sure it's correct need to check orientation everywhere
tsa	_Var	forecast	horiz u	calculates forcast for horiz number of periods at end of sample parameters
tsa	VarmaPoly	vstack	a name	stack lagpolynomial vertically in 2d array
tsa	VarmaPoly	hstack	a name	stack lagpolynomial horizontally in 2d array
tsa	VarmaPoly	stacksquare	a name orientation	stack lagpolynomial vertically in 2d square array with eye
tsa	VarmaPoly	vstackarma_minus1		stack ar and lagpolynomial vertically in 2d array
tsa	VarmaPoly	hstackarma_minus1		stack ar and lagpolynomial vertically in 2d array
tsa	VarmaPoly	getisstationary	a	check whether the auto-regressive lag-polynomial is stationary
tsa	VarmaPoly	getisinvertible	a	check whether the auto-regressive lag-polynomial is stationary
tsa	VarmaPoly	reduceform	apoly	this assumes no exog todo
tsa		_find_x12	x12path prefer_x13	if x12path is not given then either x13as[ exe] or x12a[ exe] must
tsa		_clean_order	order	takes something like 1 1 0 0 1 1 and returns a arma order sarma order tuple
tsa		_convert_out_to_series	x dates name	convert x to a dataframe where x is a string in the format given by x-13arima-seats output
tsa		x13_arima_analysis	endog maxorder maxdiff diff	perform x13-arima analysis for monthly or quarterly data
tsa		x13_arima_select_order	endog maxorder maxdiff diff	perform automatic seaonal arima order identification using x12/x13 arima
tsa		distance_indicators	x epsilon distance	calculate all pairwise threshold distance indicators for a time series parameters
tsa		correlation_sum	indicators embedding_dim	calculate a correlation sum
tsa		correlation_sums	indicators max_dim	calculate all correlation sums for embedding dimensions 1 max_dim
tsa		_var	indicators max_dim	calculate the variance of a bds effect
tsa		bds	x max_dim epsilon distance	calculate the bds test statistic for independence of a time series parameters
tsa		mackinnonp	teststat regression N lags	returns mackinnon's approximate p-value for teststat
tsa		mackinnoncrit	N regression nobs	returns the critical values for cointegrating and the adf test
tsa.filters		cffilter	X low high drift	christiano fitzgerald asymmetric random walk filter parameters
tsa.filters		fftconvolveinv	in1 in2 mode	convolve two n-dimensional arrays using fft see convolve
tsa.filters		fftconvolve3	in1 in2 in3 mode	convolve two n-dimensional arrays using fft see convolve
tsa.filters		recursive_filter	x ar_coeff init	autoregressive or recursive filtering
tsa.filters		convolution_filter	x filt nsides	linear filtering via convolution centered and backward displaced moving
tsa.filters		miso_lfilter	ar ma x useic	use nd convolution to merge inputs then use lfilter to produce output
tsa.filters		_maybe_get_pandas_wrapper	X trim_head trim_tail	if using pandas returns a function to wrap the results e g wrapper x
tsa.filters		pandas_wrapper_freq	func trim_head trim_tail freq_kw	return a new function that catches the incoming x checks if it's pandas calls the functions as is
tsa.filters		hpfilter	X lamb	hodrick-prescott filter parameters
tsa.filters		bkfilter	X low high K	baxter-king bandpass filter parameters
tsa.vector_ar		plot_mts	Y names index	plot multiple time series
tsa.vector_ar		plot_with_error	y error x axes	make plot with optional error bars
tsa.vector_ar		irf_grid_plot	values stderr impcol rescol	reusable function to make flexible grid plots of impulse responses and
tsa.vector_ar		get_var_endog	y lags trend has_constant	make predictor matrix for var p process z := (z_0
tsa.vector_ar		make_lag_names	names lag_order trendorder	produce list of lag-variable names constant / trends go at the beginning
tsa.vector_ar		comp_matrix	coefs	return compansion matrix for the var 1 representation for a var p process companion form
tsa.vector_ar		parse_lutkepohl_data	path	parse data files from lutkepohl 2005 book source for data files www
tsa.vector_ar		varsim	coefs intercept sig_u steps	simulate simple var p process with known coefficients intercept white noise covariance etc
tsa.vector_ar		vech	A	simple vech operator
tsa.vector_ar	DynamicVAR	T		number of time periods in results
tsa.vector_ar	DynamicVAR	coefs		return dynamic regression coefficients as panel
tsa.vector_ar	DynamicVAR	_coefs_raw		reshape coefficients to be more amenable to dynamic calculations
tsa.vector_ar	DynamicVAR	_intercepts_raw		similar to _coefs_raw return intercept values in easy-to-use matrix
tsa.vector_ar	DynamicVAR	forecast	steps	produce dynamic forecast parameters
tsa.vector_ar	DynamicVAR	plot_forecast	steps figsize	plot h-step ahead forecasts against actual realizations of time series
tsa.vector_ar	DynamicVAR	r2		returns the r-squared values
tsa.vector_ar		_filter_data	lhs rhs	data filtering routine for dynamic var
tsa.vector_ar	SVAR	fit	A_guess B_guess maxlags method	fit the svar model and solve for structural parameters parameters
tsa.vector_ar	SVAR	_get_init_params	A_guess B_guess	returns either the given starting or 1 if none are given
tsa.vector_ar	SVAR	_estimate_svar	start_params lags maxiter maxfun	lags : int
tsa.vector_ar	SVAR	loglike	params	loglikelihood for svar model
tsa.vector_ar	SVAR	score	AB_mask	return the gradient of the loglike at ab_mask
tsa.vector_ar	SVAR	hessian	AB_mask	returns numerical hessian
tsa.vector_ar	SVAR	_solve_AB	start_params maxiter maxfun override	solves for mle estimate of structural parameters parameters
tsa.vector_ar	SVARProcess	orth_ma_rep	maxn P	unavailable for svar
tsa.vector_ar	SVARProcess	svar_ma_rep	maxn P	compute structural ma coefficient matrices using mle
tsa.vector_ar	SVARResults	irf	periods var_order	analyze structural impulse responses to shocks in system
tsa.vector_ar	SVARResults	sirf_errband_mc	orth repl T signif	compute monte carlo integrated error bands assuming normally distributed for impulse response functions
tsa.vector_ar	BaseIRAnalysis	plot	orth impulse response signif	plot impulse responses parameters
tsa.vector_ar	BaseIRAnalysis	plot_cum_effects	orth impulse response signif	plot cumulative impulse response functions parameters
tsa.vector_ar	IRAnalysis	cov	orth	compute asymptotic standard errors for impulse response coefficients notes
tsa.vector_ar	IRAnalysis	errband_mc	orth svar repl signif	irf monte carlo integrated error bands
tsa.vector_ar	IRAnalysis	err_band_sz1	orth svar repl signif	irf sims-zha error band method 1 assumes symmetric error bands around
tsa.vector_ar	IRAnalysis	err_band_sz2	orth repl signif seed	irf sims-zha error band method 2
tsa.vector_ar	IRAnalysis	err_band_sz3	orth repl signif seed	irf sims-zha error band method 3 does not assume symmetric error bands around mean
tsa.vector_ar	IRAnalysis	cum_effect_cov	orth	compute asymptotic standard errors for cumulative impulse response coefficients
tsa.vector_ar	IRAnalysis	cum_errband_mc	orth repl signif seed	irf monte carlo integrated error bands of cumulative effect
tsa.vector_ar		ma_rep	coefs maxn	ma(\infty) representation of var p process parameters
tsa.vector_ar		is_stable	coefs verbose	determine stability of var p system by examining the eigenvalues of the
tsa.vector_ar		var_acf	coefs sig_u nlags	compute autocovariance function acf_y h up to nlags of stable var p process
tsa.vector_ar		_var_acf	coefs sig_u	compute autocovariance function acf_y h for h=1 ,p
tsa.vector_ar		forecast	y coefs intercept steps	produce linear mse forecast parameters
tsa.vector_ar		forecast_cov	ma_coefs sig_u steps	compute theoretical forecast error variance matrices
tsa.vector_ar		var_loglike	resid omega nobs	returns the value of the var p log-likelihood
tsa.vector_ar	VAR	predict	params start end lags	returns in-sample predictions or forecasts
tsa.vector_ar	VAR	fit	maxlags method ic trend	fit the var model parameters
tsa.vector_ar	VAR	_estimate_var	lags offset trend	lags : int
tsa.vector_ar	VAR	select_order	maxlags verbose	compute lag order selections based on each of the available information criteria
tsa.vector_ar	VARProcess	get_eq_index	name	return integer position of requested equation name
tsa.vector_ar	VARProcess	is_stable	verbose	determine stability based on model coefficients
tsa.vector_ar	VARProcess	plotsim	steps	plot a simulation from the var p process for the desired number of
tsa.vector_ar	VARProcess	mean		mean of stable process lutkepohl eq
tsa.vector_ar	VARProcess	ma_rep	maxn	compute ma(:math \infty) coefficient matrices
tsa.vector_ar	VARProcess	orth_ma_rep	maxn P	compute orthogonalized ma coefficient matrices using p matrix such that :math \sigma_u = pp^\prime
tsa.vector_ar	VARProcess	long_run_effects		compute long-run effect of unit impulse
tsa.vector_ar	VARProcess	acf	nlags	compute theoretical autocovariance function
tsa.vector_ar	VARProcess	acorr	nlags	compute theoretical autocorrelation function
tsa.vector_ar	VARProcess	plot_acorr	nlags linewidth	plot theoretical autocorrelation function
tsa.vector_ar	VARProcess	forecast	y steps	produce linear minimum mse forecasts for desired number of steps
tsa.vector_ar	VARProcess	mse	steps	compute theoretical forecast error variance matrices parameters
tsa.vector_ar	VARProcess	forecast_interval	y steps alpha	construct forecast interval estimates assuming the y are gaussian parameters
tsa.vector_ar	VARResults	plot		plot input time series
tsa.vector_ar	VARResults	df_model		number of estimated parameters including the intercept / trends
tsa.vector_ar	VARResults	df_resid		number of observations minus number of estimated parameters
tsa.vector_ar	VARResults	fittedvalues		the predicted insample values of the response variables of the model
tsa.vector_ar	VARResults	resid		residuals of response variable resulting from estimated coefficients
tsa.vector_ar	VARResults	plot_sample_acorr	nlags linewidth	plot theoretical autocorrelation function
tsa.vector_ar	VARResults	resid_acov	nlags	compute centered sample autocovariance including lag 0
tsa.vector_ar	VARResults	resid_acorr	nlags	compute sample autocorrelation including lag 0
tsa.vector_ar	VARResults	resid_corr		centered residual correlation matrix
tsa.vector_ar	VARResults	sigma_u_mle		biased maximum likelihood estimate of noise process covariance
tsa.vector_ar	VARResults	cov_params		estimated variance-covariance of model coefficients notes
tsa.vector_ar	VARResults	cov_ybar		asymptotically consistent estimate of covariance of the sample mean
tsa.vector_ar	VARResults	_cov_alpha		estimated covariance matrix of model coefficients ex intercept
tsa.vector_ar	VARResults	_cov_sigma		estimated covariance matrix of vech(sigma_u)
tsa.vector_ar	VARResults	llf		compute var p loglikelihood
tsa.vector_ar	VARResults	stderr		standard errors of coefficients reshaped to match in size
tsa.vector_ar	VARResults	tvalues		compute t-statistics use student-t t - kp - 1 = t(df_resid) to test
tsa.vector_ar	VARResults	pvalues		two-sided p-values for model coefficients from student t-distribution
tsa.vector_ar	VARResults	forecast_cov	steps	compute forecast covariance matrices for desired number of steps parameters
tsa.vector_ar	VARResults	irf_errband_mc	orth repl T signif	compute monte carlo integrated error bands assuming normally distributed for impulse response functions
tsa.vector_ar	VARResults	irf_resim	orth repl T seed	simulates impulse response function returning an array of simulations
tsa.vector_ar	VARResults	summary		compute console output summary of estimates
tsa.vector_ar	VARResults	irf	periods var_decomp var_order	analyze impulse responses to shocks in system parameters
tsa.vector_ar	VARResults	fevd	periods var_decomp	compute forecast error variance decomposition ("fevd")
tsa.vector_ar	VARResults	reorder	order	reorder variables for structural specification
tsa.vector_ar	VARResults	test_causality	equation variables kind signif	compute test statistic for null hypothesis of granger-noncausality general function to test joint granger-causality of multiple variables
tsa.vector_ar	VARResults	test_whiteness	nlags plot linewidth	test white noise assumption sample y autocorrelations are compared
tsa.vector_ar	VARResults	test_normality	signif verbose	test assumption of normal-distributed errors using jarque-bera-style
tsa.vector_ar	VARResults	detomega		return determinant of white noise covariance with degrees of freedom correction
tsa.vector_ar	VARResults	info_criteria		information criteria for lagorder selection
tsa.vector_ar	VARResults	aic		akaike information criterion
tsa.vector_ar	VARResults	fpe		final prediction error fpe lutkepohl p
tsa.vector_ar	VARResults	bic		bayesian a k a schwarz info criterion
tsa.vector_ar	FEVD	cov		compute asymptotic standard errors
tsa.vector_ar	FEVD	plot	periods figsize	plot graphical display of fevd parameters
tsa.vector_ar	VARSummary	make	endog_names exog_names	summary of var model
tsa.vector_ar		print_ic_table	ics selected_orders	for var order selection
tsa.base	TimeSeriesModel	_init_dates	dates freq	initialize dates parameters
tsa.base	TimeSeriesModel	_get_index_loc	key base_index	get the location of a specific key in an index parameters
tsa.base	TimeSeriesModel	_get_index_label_loc	key base_index	get the location of a specific key in an index or model row labels parameters
tsa.base	TimeSeriesModel	_get_prediction_index	start end index silent	get the location of a specific key in an index or model row labels parameters
tsa.base		date_parser	timestr parserinfo	uses dateutil parser parse but also handles monthly dates of the form
tsa.base		date_range_str	start end length	returns a list of abbreviated date strings
tsa.base		dates_from_str	dates	turns a sequence of date strings and returns a list of datetime
tsa.base		dates_from_range	start end length	turns a sequence of date strings and returns a list of datetime
tsa.statespace	VARMAX	transform_params	unconstrained	transform unconstrained parameters used by the optimizer to constrained parameters used in likelihood evaluation
tsa.statespace	VARMAX	untransform_params	constrained	transform constrained parameters used in likelihood evaluation to unconstrained parameters used by the optimizer
tsa.statespace	VARMAXResults	get_prediction	start end dynamic index	in-sample prediction and out-of-sample forecasting parameters
tsa.statespace	UnobservedComponents	setup		setup the structural time series representation
tsa.statespace	UnobservedComponents	transform_params	unconstrained	transform unconstrained parameters used by the optimizer to constrained
tsa.statespace	UnobservedComponents	untransform_params	constrained	reverse the transformation
tsa.statespace	UnobservedComponentsResults	level		estimates of unobserved level component
tsa.statespace	UnobservedComponentsResults	trend		estimates of of unobserved trend component
tsa.statespace	UnobservedComponentsResults	seasonal		estimates of unobserved seasonal component
tsa.statespace	UnobservedComponentsResults	cycle		estimates of unobserved cycle component
tsa.statespace	UnobservedComponentsResults	autoregressive		estimates of unobserved autoregressive component
tsa.statespace	UnobservedComponentsResults	regression_coefficients		estimates of unobserved regression coefficients
tsa.statespace	UnobservedComponentsResults	plot_components	which alpha observed level	plot the estimated components of the model
tsa.statespace	UnobservedComponentsResults	get_prediction	start end dynamic index	in-sample prediction and out-of-sample forecasting parameters
tsa.statespace	DynamicFactor	transform_params	unconstrained	transform unconstrained parameters used by the optimizer to constrained parameters used in likelihood evaluation
tsa.statespace	DynamicFactor	untransform_params	constrained	transform constrained parameters used in likelihood evaluation to unconstrained parameters used by the optimizer
tsa.statespace	DynamicFactor	update	params transformed complex_step	update the parameters of the model updates the representation matrices to fill in the new parameter
tsa.statespace	DynamicFactorResults	factors		estimates of unobserved factors
tsa.statespace	DynamicFactorResults	coefficients_of_determination		coefficients of determination (:math r^2) from regressions of individual estimated factors on endogenous variables
tsa.statespace	DynamicFactorResults	plot_coefficients_of_determination	endog_labels fig figsize	plot the coefficients of determination parameters
tsa.statespace	DynamicFactorResults	get_prediction	start end dynamic index	in-sample prediction and out-of-sample forecasting parameters
tsa.statespace	KalmanSmoother	set_smoother_output	smoother_output	set the smoother output the smoother can produce several types of results
tsa.statespace	KalmanSmoother	set_smooth_method	smooth_method	set the smoothing method the smoothing method can be used to override the kalman smoother
tsa.statespace	KalmanSmoother	smooth	smoother_output smooth_method results run_filter	apply the kalman smoother to the statespace model
tsa.statespace	SmootherResults	update_representation	model only_options	update the results to match a given model parameters
tsa.statespace	SmootherResults	update_smoother	smoother	update the smoother results parameters
tsa.statespace		companion_matrix	polynomial	create a companion matrix parameters
tsa.statespace		diff	series k_diff k_seasonal_diff seasonal_periods	difference a series simply and/or seasonally along the zero-th axis
tsa.statespace		concat	series axis allow_mix	concatenate a set of series
tsa.statespace		is_invertible	polynomial threshold	determine if a polynomial is invertible
tsa.statespace		solve_discrete_lyapunov	a q complex_step	solves the discrete lyapunov equation using a bilinear transformation
tsa.statespace		constrain_stationary_univariate	unconstrained	transform unconstrained parameters used by the optimizer to constrained parameters used in likelihood evaluation
tsa.statespace		unconstrain_stationary_univariate	constrained	transform constrained parameters used in likelihood evaluation to unconstrained parameters used by the optimizer
tsa.statespace		_constrain_sv_less_than_one_python	unconstrained order k_endog	transform arbitrary matrices to matrices with singular values less than one
tsa.statespace		_compute_coefficients_from_multivariate_pacf_python	partial_autocorrelations error_variance transform_variance order	transform matrices with singular values less than one to matrices corresponding to a stationary or invertible process
tsa.statespace		constrain_stationary_multivariate_python	unconstrained error_variance transform_variance prefix	transform unconstrained parameters used by the optimizer to constrained parameters used in likelihood evaluation for a vector autoregression
tsa.statespace		_unconstrain_sv_less_than_one	constrained order k_endog	transform matrices with singular values less than one to arbitrary matrices
tsa.statespace		_compute_multivariate_sample_acovf	endog maxlag	computer multivariate sample autocovariances parameters
tsa.statespace		_compute_multivariate_acovf_from_coefficients	coefficients error_variance maxlag forward_autocovariances	compute multivariate autocovariances from vector autoregression coefficient matrices
tsa.statespace		_compute_multivariate_sample_pacf	endog maxlag	computer multivariate sample partial autocorrelations parameters
tsa.statespace		_compute_multivariate_pacf_from_autocovariances	autocovariances order k_endog	compute multivariate partial autocorrelations from autocovariances
tsa.statespace		_compute_multivariate_pacf_from_coefficients	constrained error_variance order k_endog	transform matrices corresponding to a stationary or invertible process to matrices with singular values less than one
tsa.statespace		unconstrain_stationary_multivariate	constrained error_variance	transform constrained parameters used in likelihood evaluation to unconstrained parameters used by the optimizer
tsa.statespace		validate_matrix_shape	name shape nrows ncols	validate the shape of a possibly time-varying matrix or raise an exception parameters
tsa.statespace		validate_vector_shape	name shape nrows nobs	validate the shape of a possibly time-varying vector or raise an exception parameters
tsa.statespace		reorder_missing_matrix	matrix missing reorder_rows reorder_cols	reorder the rows or columns of a time-varying matrix where all non-missing values are in the upper left corner of the matrix
tsa.statespace		reorder_missing_vector	vector missing inplace prefix	reorder the elements of a time-varying vector where all non-missing values are in the first elements of the vector
tsa.statespace		copy_missing_matrix	A B missing missing_rows	copy the rows or columns of a time-varying matrix where all non-missing values are in the upper left corner of the matrix
tsa.statespace		copy_missing_vector	a b missing inplace	reorder the elements of a time-varying vector where all non-missing values are in the first elements of the vector
tsa.statespace		copy_index_matrix	A B index index_rows	copy the rows or columns of a time-varying matrix where all non-index values are in the upper left corner of the matrix
tsa.statespace		copy_index_vector	a b index inplace	reorder the elements of a time-varying vector where all non-index values are in the first elements of the vector
tsa.statespace	MLEModel	prepare_data		prepare data for use in the state space representation
tsa.statespace	MLEModel	initialize_statespace		initialize the state space representation parameters
tsa.statespace	MLEModel	set_filter_method	filter_method	set the filtering method the filtering method controls aspects of which kalman filtering
tsa.statespace	MLEModel	set_inversion_method	inversion_method	set the inversion method the kalman filter may contain one matrix inversion that of the
tsa.statespace	MLEModel	set_stability_method	stability_method	set the numerical stability method the kalman filter is a recursive algorithm that may in some cases
tsa.statespace	MLEModel	set_conserve_memory	conserve_memory	set the memory conservation method by default the kalman filter computes a number of intermediate
tsa.statespace	MLEModel	set_smoother_output	smoother_output	set the smoother output the smoother can produce several types of results
tsa.statespace	MLEModel	fit	start_params transformed cov_type cov_kwds	fits the model by maximum likelihood via kalman filter
tsa.statespace	MLEModel	filter	params transformed complex_step cov_type	kalman filtering parameters
tsa.statespace	MLEModel	smooth	params transformed complex_step cov_type	kalman smoothing parameters
tsa.statespace	MLEModel	loglike	params	loglikelihood evaluation parameters
tsa.statespace	MLEModel	loglikeobs	params transformed complex_step	loglikelihood evaluation parameters
tsa.statespace	MLEModel	simulation_smoother	simulation_output	retrieve a simulation smoother for the state space model
tsa.statespace	MLEModel	observed_information_matrix	params transformed approx_complex_step approx_centered	observed information matrix parameters
tsa.statespace	MLEModel	opg_information_matrix	params transformed approx_complex_step	outer product of gradients information matrix parameters
tsa.statespace	MLEModel	score	params	compute the score function at params
tsa.statespace	MLEModel	score_obs	params method transformed approx_complex_step	compute the score per observation evaluated at params parameters
tsa.statespace	MLEModel	hessian	params	hessian matrix of the likelihood function evaluated at the given parameters
tsa.statespace	MLEModel	_hessian_oim	params	hessian matrix computed using the harvey 1989 information matrix
tsa.statespace	MLEModel	_hessian_opg	params	hessian matrix computed using the outer product of gradients
tsa.statespace	MLEModel	_hessian_complex_step	params	hessian matrix computed by second-order complex-step differentiation on the loglike function
tsa.statespace	MLEModel	start_params		array starting parameters for maximum likelihood estimation
tsa.statespace	MLEModel	param_names		list of str list of human readable parameter names for parameters actually included in the model
tsa.statespace	MLEModel	transform_jacobian	unconstrained approx_centered	jacobian matrix for the parameter transformation function parameters
tsa.statespace	MLEModel	transform_params	unconstrained	transform unconstrained parameters used by the optimizer to constrained parameters used in likelihood evaluation
tsa.statespace	MLEModel	untransform_params	constrained	transform constrained parameters used in likelihood evaluation to unconstrained parameters used by the optimizer
tsa.statespace	MLEModel	update	params transformed complex_step	update the parameters of the model parameters
tsa.statespace	MLEModel	simulate	params nsimulations measurement_shocks state_shocks	simulate a new time series following the state space model parameters
tsa.statespace	MLEModel	impulse_responses	params steps impulse orthogonalized	impulse response function parameters
tsa.statespace	MLEModel	from_formula	cls formula data subset	not implemented for state space models
tsa.statespace	MLEResults	_get_robustcov_results	cov_type	create new results instance with specified covariance estimator as default
tsa.statespace	MLEResults	aic		float akaike information criterion
tsa.statespace	MLEResults	bic		float bayes information criterion
tsa.statespace	MLEResults	cov_params_approx		array the variance / covariance matrix computed using the numerical
tsa.statespace	MLEResults	cov_params_oim		array the variance / covariance matrix computed using the method
tsa.statespace	MLEResults	cov_params_opg		array the variance / covariance matrix computed using the outer
tsa.statespace	MLEResults	cov_params_robust		array the qmle variance / covariance matrix alias for
tsa.statespace	MLEResults	cov_params_robust_oim		array the qmle variance / covariance matrix computed using the
tsa.statespace	MLEResults	cov_params_robust_approx		array the qmle variance / covariance matrix computed using the
tsa.statespace	MLEResults	info_criteria	criteria method	information criteria parameters
tsa.statespace	MLEResults	fittedvalues		array the predicted values of the model an (nobs x k_endog) array
tsa.statespace	MLEResults	hqic		float hannan-quinn information criterion
tsa.statespace	MLEResults	llf_obs		float the value of the log-likelihood function evaluated at params
tsa.statespace	MLEResults	llf		float the value of the log-likelihood function evaluated at params
tsa.statespace	MLEResults	loglikelihood_burn		float the number of observations during which the likelihood is not evaluated
tsa.statespace	MLEResults	pvalues		array the p-values associated with the z-statistics of the coefficients
tsa.statespace	MLEResults	resid		array the model residuals an (nobs x k_endog) array
tsa.statespace	MLEResults	zvalues		array the z-statistics for the coefficients
tsa.statespace	MLEResults	test_normality	method	test for normality of standardized residuals
tsa.statespace	MLEResults	test_heteroskedasticity	method alternative use_f	test for heteroskedasticity of standardized residuals tests whether the sum-of-squares in the first third of the sample is
tsa.statespace	MLEResults	test_serial_correlation	method lags	ljung-box test for no serial correlation of standardized residuals null hypothesis is no serial correlation
tsa.statespace	MLEResults	get_prediction	start end dynamic index	in-sample prediction and out-of-sample forecasting parameters
tsa.statespace	MLEResults	get_forecast	steps	out-of-sample forecasts parameters
tsa.statespace	MLEResults	predict	start end dynamic	in-sample prediction and out-of-sample forecasting parameters
tsa.statespace	MLEResults	forecast	steps	out-of-sample forecasts parameters
tsa.statespace	MLEResults	simulate	nsimulations measurement_shocks state_shocks initial_state	simulate a new time series following the state space model parameters
tsa.statespace	MLEResults	impulse_responses	steps impulse orthogonalized cumulative	impulse response function parameters
tsa.statespace	MLEResults	plot_diagnostics	variable lags fig figsize	diagnostic plots for standardized residuals of one endogenous variable parameters
tsa.statespace	MLEResults	summary	alpha start title model_name	summarize the model parameters
tsa.statespace	KalmanFilter	set_filter_method	filter_method	set the filtering method the filtering method controls aspects of which kalman filtering
tsa.statespace	KalmanFilter	set_inversion_method	inversion_method	set the inversion method the kalman filter may contain one matrix inversion that of the
tsa.statespace	KalmanFilter	set_stability_method	stability_method	set the numerical stability method the kalman filter is a recursive algorithm that may in some cases
tsa.statespace	KalmanFilter	set_conserve_memory	conserve_memory	set the memory conservation method by default the kalman filter computes a number of intermediate
tsa.statespace	KalmanFilter	set_filter_timing	alternate_timing	set the filter timing convention by default the kalman filter follows durbin and koopman 2012 in
tsa.statespace	KalmanFilter	filter	filter_method inversion_method stability_method conserve_memory	apply the kalman filter to the statespace model
tsa.statespace	KalmanFilter	loglike		calculate the loglikelihood associated with the statespace model
tsa.statespace	KalmanFilter	loglikeobs		calculate the loglikelihood for each observation associated with the statespace model
tsa.statespace	KalmanFilter	simulate	nsimulations measurement_shocks state_shocks initial_state	simulate a new time series following the state space model parameters
tsa.statespace	KalmanFilter	impulse_responses	steps impulse orthogonalized cumulative	impulse response function parameters
tsa.statespace	FilterResults	update_representation	model only_options	update the results to match a given model parameters
tsa.statespace	FilterResults	update_filter	kalman_filter	update the filter results parameters
tsa.statespace	FilterResults	kalman_gain		kalman gain matrices
tsa.statespace	FilterResults	standardized_forecasts_error		standardized forecast errors notes
tsa.statespace	FilterResults	predict	start end dynamic	in-sample and out-of-sample prediction for state space models generally parameters
tsa.statespace	PredictionResults	__getattr__	attr	provide access to the representation and filtered output in the appropriate range (start - end)
tsa.statespace	SARIMAX	initialize		initialize the sarimax model
tsa.statespace	SARIMAX	initialize_state	variance complex_step	initialize state and state covariance arrays in preparation for the kalman filter
tsa.statespace	SARIMAX	initial_design		initial design matrix
tsa.statespace	SARIMAX	initial_state_intercept		initial state intercept vector
tsa.statespace	SARIMAX	initial_transition		initial transition matrix
tsa.statespace	SARIMAX	initial_selection		initial selection matrix
tsa.statespace	SARIMAX	start_params		starting parameters for maximum likelihood estimation
tsa.statespace	SARIMAX	endog_names	latex	names of endogenous variables
tsa.statespace	SARIMAX	param_terms		list of parameters actually included in the model in sorted order
tsa.statespace	SARIMAX	param_names		list of human readable parameter names for parameters actually included in the model
tsa.statespace	SARIMAX	model_orders		the orders of each of the polynomials in the model
tsa.statespace	SARIMAX	model_names		the plain text names of all possible model parameters
tsa.statespace	SARIMAX	model_latex_names		the latex names of all possible model parameters
tsa.statespace	SARIMAX	transform_params	unconstrained	transform unconstrained parameters used by the optimizer to constrained parameters used in likelihood evaluation
tsa.statespace	SARIMAX	untransform_params	constrained	transform constrained parameters used in likelihood evaluation to unconstrained parameters used by the optimizer
tsa.statespace	SARIMAX	update	params transformed complex_step	update the parameters of the model updates the representation matrices to fill in the new parameter
tsa.statespace	SARIMAXResults	arroots		array roots of the reduced form autoregressive lag polynomial
tsa.statespace	SARIMAXResults	maroots		array roots of the reduced form moving average lag polynomial
tsa.statespace	SARIMAXResults	arfreq		array frequency of the roots of the reduced form autoregressive
tsa.statespace	SARIMAXResults	mafreq		array frequency of the roots of the reduced form moving average
tsa.statespace	SARIMAXResults	arparams		array autoregressive parameters actually estimated in the model
tsa.statespace	SARIMAXResults	maparams		array moving average parameters actually estimated in the model
tsa.statespace	SARIMAXResults	get_prediction	start end dynamic index	in-sample prediction and out-of-sample forecasting parameters
tsa.statespace	SimulationSmoother	get_simulation_output	simulation_output simulate_state simulate_disturbance simulate_all	get simulation output bitmask helper method to get final simulation output bitmask from a set of
tsa.statespace	SimulationSmoother	simulation_smoother	simulation_output results_class prefix	retrieve a simulation smoother for the statespace model
tsa.statespace	SimulationSmoothResults	generated_measurement_disturbance		randomly drawn measurement disturbance variates used to construct generated_obs
tsa.statespace	SimulationSmoothResults	generated_state_disturbance		randomly drawn state disturbance variates used to construct generated_state and generated_obs
tsa.statespace	SimulationSmoothResults	generated_obs		generated vector of observations by iterating on the observation and transition equations given a random initial state draw and random
tsa.statespace	SimulationSmoothResults	generated_state		generated vector of states by iterating on the transition equation given a random initial state draw and random disturbance draws
tsa.statespace	SimulationSmoothResults	simulated_state		random draw of the state vector from its conditional distribution
tsa.statespace	SimulationSmoothResults	simulated_measurement_disturbance		random draw of the measurement disturbance vector from its conditional distribution
tsa.statespace	SimulationSmoothResults	simulated_state_disturbance		random draw of the state disturbance vector from its conditional distribution
tsa.statespace	SimulationSmoothResults	simulate	simulation_output disturbance_variates initial_state_variates	perform simulation smoothing does not return anything but populates the object's simulated_*
tsa.statespace	Representation	prefix		str blas prefix of currently active representation matrices
tsa.statespace	Representation	dtype		dtype datatype of currently active representation matrices
tsa.statespace	Representation	time_invariant		bool whether or not currently active representation matrices are
tsa.statespace	Representation	obs		array observation vector :math y~(k\_endog \times nobs)
tsa.statespace	Representation	bind	endog	bind data to the statespace representation parameters
tsa.statespace	Representation	initialize_known	initial_state initial_state_cov	initialize the statespace model with known distribution for initial state
tsa.statespace	Representation	initialize_approximate_diffuse	variance	initialize the statespace model with approximate diffuse values
tsa.statespace	Representation	initialize_stationary		initialize the statespace model as stationary
tsa.regime_switching		_logistic	x	note that this is not a vectorized function
tsa.regime_switching		_partials_logistic	x	note that this is not a vectorized function
tsa.regime_switching		py_hamilton_filter	initial_probabilities regime_transition conditional_likelihoods	hamilton filter using pure python parameters
tsa.regime_switching		cy_hamilton_filter	initial_probabilities regime_transition conditional_likelihoods	hamilton filter using cython inner loop parameters
tsa.regime_switching		py_kim_smoother	regime_transition predicted_joint_probabilities filtered_joint_probabilities	kim smoother using pure python parameters
tsa.regime_switching		cy_kim_smoother	regime_transition predicted_joint_probabilities filtered_joint_probabilities	kim smoother using cython inner loop parameters
tsa.regime_switching	MarkovSwitching	k_params		int number of parameters in the model
tsa.regime_switching	MarkovSwitching	initialize_steady_state		set initialization of regime probabilities to be steady-state values notes
tsa.regime_switching	MarkovSwitching	initialize_known	probabilities tol	set initialization of regime probabilities to use known values
tsa.regime_switching	MarkovSwitching	initial_probabilities	params regime_transition	retrieve initial probabilities
tsa.regime_switching	MarkovSwitching	regime_transition_matrix	params exog_tvtp	construct the left-stochastic transition matrix notes
tsa.regime_switching	MarkovSwitching	predict	params start end probabilities	in-sample prediction and out-of-sample forecasting parameters
tsa.regime_switching	MarkovSwitching	predict_conditional	params	in-sample prediction conditional on the current and possibly past regimes
tsa.regime_switching	MarkovSwitching	_conditional_likelihoods	params	compute likelihoods conditional on the current period's regime (and the last self
tsa.regime_switching	MarkovSwitching	filter	params transformed cov_type cov_kwds	apply the hamilton filter parameters
tsa.regime_switching	MarkovSwitching	smooth	params transformed cov_type cov_kwds	apply the kim smoother and hamilton filter parameters
tsa.regime_switching	MarkovSwitching	loglikeobs	params transformed	loglikelihood evaluation for each period parameters
tsa.regime_switching	MarkovSwitching	loglike	params transformed	loglikelihood evaluation parameters
tsa.regime_switching	MarkovSwitching	score	params transformed	compute the score function at params
tsa.regime_switching	MarkovSwitching	score_obs	params transformed	compute the score per observation evaluated at params parameters
tsa.regime_switching	MarkovSwitching	hessian	params transformed	hessian matrix of the likelihood function evaluated at the given parameters
tsa.regime_switching	MarkovSwitching	fit	start_params transformed cov_type cov_kwds	fits the model by maximum likelihood via hamilton filter
tsa.regime_switching	MarkovSwitching	_fit_em	start_params transformed cov_type cov_kwds	fits the model using the expectation-maximization em algorithm parameters
tsa.regime_switching	MarkovSwitching	_em_iteration	params0	em iteration notes
tsa.regime_switching	MarkovSwitching	_em_regime_transition	result	em step for regime transition probabilities
tsa.regime_switching	MarkovSwitching	_start_params_search	reps start_params transformed em_iter	search for starting parameters as random permutations of a vector parameters
tsa.regime_switching	MarkovSwitching	start_params		array starting parameters for maximum likelihood estimation
tsa.regime_switching	MarkovSwitching	param_names		list of str list of human readable parameter names for parameters actually included in the model
tsa.regime_switching	MarkovSwitching	transform_params	unconstrained	transform unconstrained parameters used by the optimizer to constrained parameters used in likelihood evaluation
tsa.regime_switching	MarkovSwitching	_untransform_logistic	unconstrained constrained	function to allow using a numerical root-finder to reverse the logistic transform
tsa.regime_switching	MarkovSwitching	untransform_params	constrained	transform constrained parameters used in likelihood evaluation to unconstrained parameters used by the optimizer
tsa.regime_switching	HamiltonFilterResults	expected_durations		array expected duration of a regime possibly time-varying
tsa.regime_switching	MarkovSwitchingResults	aic		float akaike information criterion
tsa.regime_switching	MarkovSwitchingResults	bic		float bayes information criterion
tsa.regime_switching	MarkovSwitchingResults	cov_params_approx		array the variance / covariance matrix computed using the numerical
tsa.regime_switching	MarkovSwitchingResults	cov_params_opg		array the variance / covariance matrix computed using the outer
tsa.regime_switching	MarkovSwitchingResults	cov_params_robust		array the qmle variance / covariance matrix computed using the
tsa.regime_switching	MarkovSwitchingResults	fittedvalues		array the predicted values of the model an (nobs x k_endog) array
tsa.regime_switching	MarkovSwitchingResults	hqic		float hannan-quinn information criterion
tsa.regime_switching	MarkovSwitchingResults	llf_obs		float the value of the log-likelihood function evaluated at params
tsa.regime_switching	MarkovSwitchingResults	llf		float the value of the log-likelihood function evaluated at params
tsa.regime_switching	MarkovSwitchingResults	resid		array the model residuals an (nobs x k_endog) array
tsa.regime_switching	MarkovSwitchingResults	predict	start end probabilities conditional	in-sample prediction and out-of-sample forecasting parameters
tsa.regime_switching	MarkovSwitchingResults	forecast	steps	out-of-sample forecasts parameters
tsa.regime_switching	MarkovSwitchingResults	summary	alpha start title model_name	summarize the model parameters
tsa.regime_switching	MarkovRegression	predict_conditional	params	in-sample prediction conditional on the current regime parameters
tsa.regime_switching	MarkovRegression	_conditional_likelihoods	params	compute likelihoods conditional on the current period's regime
tsa.regime_switching	MarkovRegression	_em_iteration	params0	em iteration notes
tsa.regime_switching	MarkovRegression	_em_exog	result endog exog switching	em step for regression coefficients
tsa.regime_switching	MarkovRegression	_em_variance	result endog exog betas	em step for variances
tsa.regime_switching	MarkovRegression	start_params		array starting parameters for maximum likelihood estimation
tsa.regime_switching	MarkovRegression	param_names		list of str list of human readable parameter names for parameters actually included in the model
tsa.regime_switching	MarkovRegression	transform_params	unconstrained	transform unconstrained parameters used by the optimizer to constrained parameters used in likelihood evaluation
tsa.regime_switching	MarkovRegression	untransform_params	constrained	transform constrained parameters used in likelihood evaluation to unconstrained parameters used by the optimizer
tsa.regime_switching	MarkovAutoregression	predict_conditional	params	in-sample prediction conditional on the current and previous regime parameters
tsa.regime_switching	MarkovAutoregression	_conditional_likelihoods	params	compute likelihoods conditional on the current period's regime and the last self
tsa.regime_switching	MarkovAutoregression	_em_autoregressive	result betas tmp	em step for autoregressive coefficients and variances
tsa.regime_switching	MarkovAutoregression	start_params		array starting parameters for maximum likelihood estimation
tsa.regime_switching	MarkovAutoregression	param_names		list of str list of human readable parameter names for parameters actually included in the model
tsa.regime_switching	MarkovAutoregression	transform_params	unconstrained	transform unconstrained parameters used by the optimizer to constrained parameters used in likelihood evaluation
tsa.regime_switching	MarkovAutoregression	untransform_params	constrained	transform constrained parameters used in likelihood evaluation to unconstrained parameters used by the optimizer
tsa.interp		dentonm	indicator benchmark freq	modified denton's method to convert low-frequency to high-frequency data
tsa.kalmanf		kalmanfilter	F A H Q	returns the negative log-likelihood of y conditional on the information set assumes that the initial state and all innovations are multivariate
tsa.kalmanf	StateSpaceModel	_univariatefilter	params init_state init_var	implements the kalman filter recursions optimized for univariate case
tsa.kalmanf	StateSpaceModel	kalmanfilter	params init_state init_var	runs the kalman filter
tsa.kalmanf		updatematrices	params y xi10 ntrain	todo change api update names this isn't general
tsa.kalmanf	KalmanFilter	T	cls params r k	the coefficient matrix for the state vector in the state equation
tsa.kalmanf	KalmanFilter	R	cls params r k	the coefficient matrix for the state vector in the observation equation
tsa.kalmanf	KalmanFilter	Z	cls r	returns the z selector matrix in the observation equation
tsa.kalmanf	KalmanFilter	geterrors	cls y k k_ar	returns just the errors of the kalman filter
tsa.kalmanf	KalmanFilter	_init_kalman_state	cls params arma_model	returns the system matrices and other info needed for the
tsa.kalmanf	KalmanFilter	loglike	cls params arma_model set_sigma2	the loglikelihood for an arma model using the kalman filter recursions
tools		is_pandas_min_version	min_version	check whether pandas is at least min_version
tools		lstsq	a b cond overwrite_a	compute least-squares solution to equation :m a x = b compute a vector x such that the 2-norm :m |b - a x| is minimised
tools		pinv	a cond rcond	compute the moore-penrose pseudo-inverse of a matrix
tools		pinv2	a cond rcond	compute the moore-penrose pseudo-inverse of a matrix
tools		logdet_symm	m check_symm	return log(det m asserting positive definiteness of m
tools		stationary_solve	r b	solve a linear system for a toeplitz correlation matrix
tools		remove_nanrows	y x	remove common rows in [y x] that contain at least one nan todo this should be made more flexible
tools		linmod	y x weights sigma	get linear model with extra options for entry dispatches to regular model class and does not wrap the output
tools		parallel_func	func n_jobs verbose	return parallel instance with delayed function util function to use joblib only if available
tools		interpret_data	data colnames rownames	convert passed data structure to form required by estimation classes
tools		_is_recarray	data	returns true if data is a recarray
tools		mse	x1 x2 axis	mean squared error parameters
tools		rmse	x1 x2 axis	root mean squared error parameters
tools		maxabs	x1 x2 axis	maximum absolute error parameters
tools		meanabs	x1 x2 axis	mean absolute error parameters
tools		medianabs	x1 x2 axis	median absolute error parameters
tools		bias	x1 x2 axis	bias mean error parameters
tools		medianbias	x1 x2 axis	median bias median error parameters
tools		vare	x1 x2 ddof axis	variance of error parameters
tools		stde	x1 x2 ddof axis	standard deviation of error parameters
tools		iqr	x1 x2 axis	interquartile range of error rounded index no interpolations
tools		aic	llf nobs df_modelwc	akaike information criterion parameters
tools		aicc	llf nobs df_modelwc	akaike information criterion aic with small sample correction parameters
tools		bic	llf nobs df_modelwc	bayesian information criterion bic or schwarz criterion parameters
tools		hqic	llf nobs df_modelwc	hannan-quinn information criterion hqc
tools		aic_sigma	sigma2 nobs df_modelwc islog	akaike information criterion parameters
tools		aicc_sigma	sigma2 nobs df_modelwc islog	akaike information criterion aic with small sample correction parameters
tools		bic_sigma	sigma2 nobs df_modelwc islog	bayesian information criterion bic or schwarz criterion parameters
tools		hqic_sigma	sigma2 nobs df_modelwc islog	hannan-quinn information criterion hqc parameters
tools		approx_fprime	x f epsilon args	gradient of function or jacobian if function f returns 1d array parameters
tools		approx_fprime_cs	x f epsilon args	calculate gradient or jacobian with complex step derivative approximation parameters
tools		approx_hess_cs	x f epsilon args	calculate hessian with complex-step derivative approximation parameters
tools		combine_indices	groups prefix sep return_labels	use np unique to get integer group indices for product intersection
tools		group_sums	x group use_bincount	simple bincount version again
tools		group_sums_dummy	x group_dummy	sum by groups given group dummy variable
tools		dummy_sparse	groups	create a sparse indicator from a group array with integer labels parameters
tools	Group	dummy	drop_idx sparse dtype	drop_idx is only available if sparse=false
tools	GroupSorted	lag_indices	lag	return the index array for lagged values warning if k is larger then the number of observations for an
tools		_is_hierarchical	x	checks if the first item of an array-like object is also array-like if so we have a multiindex and returns true
tools	Grouping	__init__	index names	index : index-like can be pandas multiindex or index or array-like
tools	Grouping	reindex	index names	resets the index in-place
tools	Grouping	get_slices	level	sets the slices attribute to be a list of indices of the sorted groups for the first index level
tools	Grouping	count_categories	level	sets the attribute counts to equal the bincount of the integer-valued labels
tools	Grouping	sort	data index	applies a potentially hierarchical sort operation on a numpy array or pandas series/dataframe based on the grouping index or a
tools	Grouping	transform_dataframe	dataframe function level	apply function to each column by group
tools	Grouping	transform_array	array function level	apply function to each column by group
tools	Grouping	transform_slices	array function level	apply function to each group similar to transform_array but does
tools	Grouping	dummy_sparse	level	create a sparse indicator from a group array with integer labels parameters
tools	OneTimeProperty	__init__	func	create a onetimeproperty instance
tools	OneTimeProperty	__get__	obj type	this will be called on attribute access on the class or instance
tools		_make_dictnames	tmp_arr offset	helper function to create a dictionary mapping a column number to the name in tmp_arr
tools		drop_missing	Y X axis	returns views on the arrays y and x where missing observations are dropped
tools		categorical	data col dictnames drop	returns a dummy matrix given an array of categorical variables
tools		add_constant	data prepend has_constant	adds a column of ones to an array parameters
tools		isestimable	C D	true if q p contrast c is estimable for n p design d from an q x p contrast matrix c and an n x p design matrix d, checks if
tools		pinv_extended	X rcond	return the pinv of an array x as well as the singular values used in computation
tools		recipr	X	return the reciprocal of an array setting all entries less than or equal to 0 to 0
tools		recipr0	X	return the reciprocal of an array setting all entries equal to 0 as 0
tools		clean0	matrix	erase columns of zeros can save some time in pseudoinverse
tools		fullrank	X r	return a matrix whose column span is the same as x
tools		unsqueeze	data axis oldshape	unsqueeze a collapsed array >>> from numpy import mean
tools		chain_dot		returns the dot product of the given matrices
tools		nan_dot	A B	returns np dot(left_matrix right_matrix) with the convention that
tools		maybe_unwrap_results	results	gets raw results back from wrapped results
tools		brentq_expanding	func low upp args	find the root of a function in one variable by expanding and brentq assumes function func is monotonic
tools	HoldIt	save	what filename header useinstance	write attributes of this instance to python module given by filename parameters
tools	HoldIt	verify		load the saved module and verify the data this tries several ways of comparing the saved and the attached data
tools	StandardizeTransform	transform	data	standardize the data using the stored transformation
tools	StandardizeTransform	transform_params	params	transform parameters of the standardized model to the original model
tools		_generate_url	arg stable	parse inputs and return a correctly formatted url or an error if the input
tools		webdoc	arg stable	opens a browser and displays online documentation parameters
tools		add_indep	x varnames dtype	construct array with independent columns x is either iterable list tuple or instance of ndarray or a subclass of it
compat		_next_regular	target	find the next regular number greater than or equal to target
compat	OrderedDict	__init__		initialize an ordered dictionary signature is the same as for
compat	OrderedDict	__setitem__	key value dict_setitem	od __setitem__ i y <==> od[i]=y
compat	OrderedDict	__delitem__	key dict_delitem	od __delitem__ y <==> del od[y]
compat	OrderedDict	__iter__		od __iter__() <==> iter od
compat	OrderedDict	__reversed__		od __reversed__() <==> reversed od
compat	OrderedDict	clear		od clear() -> none remove all items from od
compat	OrderedDict	popitem	last	od popitem() -> k v return and remove a key value pair
compat	OrderedDict	keys		od keys() -> list of keys in od
compat	OrderedDict	values		od values() -> list of values in od
compat	OrderedDict	items		od items() -> list of key value pairs in od
compat	OrderedDict	iterkeys		od iterkeys() -> an iterator over the keys in od
compat	OrderedDict	itervalues		od itervalues -> an iterator over the values in od
compat	OrderedDict	iteritems		od iteritems -> an iterator over the key value items in od
compat	OrderedDict	update		od update(e **f) -> none update od from dict/iterable e and f
compat	OrderedDict	pop	key default	od pop(k[,d]) -> v remove specified key and return the corresponding value
compat	OrderedDict	setdefault	key default	od setdefault(k[,d]) -> od get k d also set od[k]=d if k not in od
compat	OrderedDict	__repr__	_repr_running	od __repr__() <==> repr od
compat	OrderedDict	__reduce__		return state information for pickling
compat	OrderedDict	copy		od copy() -> a shallow copy of od
compat	OrderedDict	fromkeys	cls iterable value	od fromkeys(s[, v]) -> new ordered dictionary with keys from s
compat	OrderedDict	__eq__	other	od __eq__ y <==> od==y comparison to another od is order-sensitive
compat	OrderedDict	viewkeys		od viewkeys() -> a set-like object providing a view on od's keys
compat	OrderedDict	viewvalues		od viewvalues() -> an object providing a view on od's values
compat	OrderedDict	viewitems		od viewitems() -> a set-like object providing a view on od's items
compat		iteritems	obj	replacement for six's iteritems for python2/3 compat uses 'iteritems' if available and otherwise uses 'items'
compat	Counter	__init__	iterable	create a new empty counter object and if given count elements
compat	Counter	most_common	n	list the n most common elements and their counts from the most common to the least
compat	Counter	elements		iterator over elements repeating each as many times as its count
compat	Counter	update	iterable	like dict update() but add counts instead of replacing them
compat	Counter	copy		like dict copy() but returns a counter instance instead of a dict
compat	Counter	__delitem__	elem	like dict __delitem__() but does not raise keyerror for missing values
compat	Counter	__add__	other	add counts from two counters
compat	Counter	__sub__	other	subtract count but keep only results with positive counts
compat	Counter	__or__	other	union is the maximum of value in either of the input counters
compat	Counter	__and__	other	intersection is the minimum of corresponding counts
compat		recarray_select	recarray fields	" work-around for changes in numpy 1
multivariate		_multivariate_ols_fit	endog exog method tolerance	solve multivariate linear model y = x * params where y is dependent variables x is independent variables
multivariate		multivariate_stats	eigenvals r_err_sscp r_contrast df_resid	for multivariate linear model y = x * b testing hypotheses
multivariate	MultivariateTestResults	summary_frame		return results as a multiindex dataframe
multivariate	CanCorr	_fit	tolerance	fit the model a valueerror is raised if there are singular values smaller than the
multivariate	CanCorr	corr_test		approximate f test perform multivariate statistical tests of the hypothesis that
multivariate	PCA	_adjust_missing		implements alternatives for handling missing values
multivariate	PCA	_compute_gls_weights		computes gls weights based on percentage of data fit
multivariate	PCA	_pca		main pca routine
multivariate	PCA	_prepare_data		standardize or demean data
multivariate	PCA	_compute_using_svd		svd method to compute eigenvalues and eigenvecs
multivariate	PCA	_compute_using_eig		eigenvalue decomposition method to compute eigenvalues and eigenvectors
multivariate	PCA	_compute_using_nipals		nipals implementation to compute small number of eigenvalues and eigenvectors
multivariate	PCA	_fill_missing_em		em algorithm to fill missing values
multivariate	PCA	_compute_pca_from_eig		compute relevant statistics after eigenvalues have been computed
multivariate	PCA	_compute_rsquare_and_ic		final statistics to compute
multivariate	PCA	project	ncomp transform unweight	project series onto a specific number of factors parameters
multivariate	PCA	_to_pandas		returns pandas dataframes for all values
multivariate	PCA	plot_scree	ncomp log_scale cumulative ax	plot of the ordered eigenvalues parameters
multivariate	PCA	plot_rsquare	ncomp ax	box plots of the individual series r-square against the number of pcs parameters
multivariate		pca	data ncomp standardize demean	principal component analysis parameters
miscmodels	NonlinearLS	fit_minimal	start_value	minimal fitting with no extra calculations
miscmodels	NonlinearLS	fit_random	ntries rvs_generator nparams	fit with random starting values
miscmodels	NonlinearLS	jac_predict	params	jacobian of prediction function using complex step derivative this assumes that the predict function does not use complex variable
miscmodels		mvn_loglike_sum	x sigma	loglike multivariate normal
miscmodels		mvn_loglike	x sigma	loglike multivariate normal
miscmodels		mvn_loglike_chol	x sigma	loglike multivariate normal
miscmodels		mvn_nloglike_obs	x sigma	loglike multivariate normal
miscmodels	MLEGLS	_params2cov	params nobs	get autocovariance matrix from arma regression parameter
miscmodels	PoissonGMLE	nloglikeobs	params	loglikelihood of poisson model parameters
miscmodels	PoissonGMLE	predict_distribution	exog	return frozen scipy stats distribution with mu at estimated prediction
miscmodels	PoissonOffsetGMLE	nloglikeobs	params	loglikelihood of poisson model parameters
miscmodels	PoissonZiGMLE	nloglikeobs	params	loglikelihood of poisson model parameters
miscmodels	TLinearModel	nloglikeobs	params	loglikelihood of linear model with t distributed errors
miscmodels	TArma	nloglikeobs	params	loglikelihood for arma model for each observation t-distribute
formula		handle_formula_data	Y X formula depth	returns endog exog and the model specification from arrays and formula parameters
formula		_remove_intercept_patsy	terms	remove intercept from patsy terms
formula		_intercept_idx	design_info	returns boolean array index indicating which column holds the intercept
distributions		_make_index	prob size	returns a boolean index for given probabilities
distributions		mixture_rvs	prob size dist kwargs	sample from a mixture of distributions
distributions	MixtureDistribution	pdf	x prob dist kwargs	pdf a mixture of distributions
distributions	MixtureDistribution	cdf	x prob dist kwargs	cdf of a mixture of distributions
distributions		mv_mixture_rvs	prob size dist nvars	sample from a mixture of multivariate distributions
distributions		_faa_di_bruno_partitions	n	return all non-negative integer solutions of the diophantine equation n*k_n +
distributions		cumulant_from_moments	momt n	compute n-th cumulant given moments
distributions		_conf_set	F alpha	constructs a dvoretzky-kiefer-wolfowitz confidence band for the ecdf
distributions		monotone_fn_inverter	fn x vectorized	given a monotone function fn no checking is done to verify monotonicity and a set of x values return an linearly interpolated approximation
base	BoxCox	transform_boxcox	x lmbda method	performs a box-cox transformation on the data array x if lmbda is none
base	BoxCox	untransform_boxcox	x lmbda method	back-transforms the box-cox transformed data array by means of the indicated method
base	BoxCox	_est_lambda	x bounds method	computes an estimate for the lambda parameter in the box-cox transformation using method
base	BoxCox	_guerrero_cv	x bounds window_length scale	computes lambda using guerrero's coefficient of variation if no
base	BoxCox	_loglik_boxcox	x bounds options	taken from the stata manual on box-cox regressions where this is the special case of 'lhs only'
base		fit_l1_cvxopt_cp	f score start_params args	solve the l1 regularized problem using cvxopt solvers cp
base		_objective_func	f x k_params alpha	the regularized objective function
base		_fprime	score x k_params alpha	the regularized derivative
base		_get_G	k_params	the linear inequality constraint matrix
base		_hessian_wrapper	hess x z k_params	wraps the hessian up in the form for cvxopt
base		_asarray_2d_null_rows	x	makes sure input is an array and is 2d makes sure output is 2d true
base		_nan_rows		returns a boolean array which is true where any of the rows in any of the _2d_ arrays in arrs are nans
base	ModelData	handle_missing	cls endog exog missing	this returns a dictionary with keys endog exog and the keys of kwargs
base		fit_l1_slsqp	f score start_params args	solve the l1 regularized problem using scipy optimize fmin_slsqp()
base		_objective_func	f x_full k_params alpha	the regularized objective function
base		_fprime	score x_full k_params alpha	the regularized derivative
base		_f_ieqcons	x_full k_params	the inequality constraints
base		_fprime_ieqcons	x_full k_params	derivative of the inequality constraints
base	Model	_get_init_kwds		return dictionary with extra keys used in model __init__
base	Model	from_formula	cls formula data subset	create a model from a formula and dataframe
base	Model	endog_names		names of endogenous variables
base	Model	exog_names		names of exogenous variables
base	Model	fit		fit a model to data
base	Model	predict	params exog	after a model has been fit predict returns the fitted values
base	LikelihoodModel	initialize		initialize possibly re-initialize a model instance for
base	LikelihoodModel	loglike	params	log-likelihood of model
base	LikelihoodModel	score	params	score vector of model
base	LikelihoodModel	information	params	fisher information matrix of model returns -hessian of loglike evaluated at params
base	LikelihoodModel	hessian	params	the hessian matrix of the model
base	LikelihoodModel	fit	start_params method maxiter full_output	fit method for likelihood based models parameters
base	GenericLikelihoodModel	expandparams	params	expand to full parameter array when some parameters are fixed parameters
base	GenericLikelihoodModel	score	params	gradient of log-likelihood evaluated at params
base	GenericLikelihoodModel	score_obs	params	jacobian/gradient of log-likelihood evaluated at params for each observation
base	GenericLikelihoodModel	hessian	params	hessian of log-likelihood evaluated at params
base	GenericLikelihoodModel	hessian_factor	params scale observed	weights for calculating hessian parameters
base	GenericLikelihoodModel	fit	start_params method maxiter full_output	fit the model using maximum likelihood
base	Results	predict	exog transform	call self model predict with self params as the first argument
base	LikelihoodModelResults	tvalues		return the t-statistic for a given parameter estimate
base	LikelihoodModelResults	cov_params	r_matrix column scale cov_p	returns the variance/covariance matrix
base	LikelihoodModelResults	t_test	r_matrix cov_p scale use_t	compute a t-test for a each linear hypothesis of the form rb = q parameters
base	LikelihoodModelResults	f_test	r_matrix cov_p scale invcov	compute the f-test for a joint linear hypothesis
base	LikelihoodModelResults	wald_test	r_matrix cov_p scale invcov	compute a wald-test for a joint linear hypothesis
base	LikelihoodModelResults	wald_test_terms	skip_single extra_constraints combine_terms	compute a sequence of wald tests for terms over multiple columns this computes joined wald tests for the hypothesis that all
base	LikelihoodModelResults	conf_int	alpha cols method	returns the confidence interval of the fitted parameters
base	LikelihoodModelResults	save	fname remove_data	save a pickle of this instance parameters
base	LikelihoodModelResults	load	cls fname	load a pickle class method parameters
base	LikelihoodModelResults	remove_data		remove data arrays all nobs arrays from result and model this reduces the size of the instance so it can be pickled with less
base	ResultMixin	score_obsv		cached jacobian of log-likelihood
base	ResultMixin	hessv		cached hessian of log-likelihood
base	ResultMixin	covjac		covariance of parameters based on outer product of jacobian of
base	ResultMixin	covjhj		covariance of parameters based on hjjh
base	ResultMixin	bsejhj		standard deviation of parameter estimates based on covhjh
base	ResultMixin	bsejac		standard deviation of parameter estimates based on covjac
base	ResultMixin	bootstrap	nrep method disp store	simple bootstrap to get mean and variance of estimator see notes
base	GenericLikelihoodModelResults	summary	yname xname title alpha	summarize the regression results parameters
base	Penalty	func	params	a penalty function on a vector of parameters
base	Penalty	grad	params	the gradient of a penalty function
base	Optimizer	_fit	objective gradient start_params fargs	fit function for any model with an objective function
base	Optimizer	_fit_constrained	params	todo how to add constraints? something like
base		get_robustcov_results	cov_type use_t	create new results instance with robust covariance as default parameters
base		qc_results	params alpha score qc_tol	theory dictates that one of two conditions holds i) abs(score[i]) == alpha[i] and params[i] != 0
base		do_trim_params	params k_params alpha score	trims set to zero params that are zero at the theoretical minimum
base	TransformRestriction	expand	params_reduced	transform from the reduced to the full parameter space parameters
base	TransformRestriction	reduce	params	transform from the full to the reduced parameter space parameters
base		transform_params_constraint	params Sinv R q	find the parameters that statisfy linear constraint from unconstraint the linear constraint r params = q is imposed
base		fit_constrained	model constraint_matrix constraint_values start_params	fit model subject to linear equality constraints the constraints are of the form r params = q
base		fit_constrained_wrap	model constraints start_params	fit_constraint that returns a results instance this is a development version for fit_constrained methods or
base		_est_regularized_naive	mod pnum partitions fit_kwds	estimates the regularized fitted parameters
base		_est_unregularized_naive	mod pnum partitions fit_kwds	estimates the unregularized fitted parameters
base		_join_naive	params_l threshold	joins the results from each run of _est_<type>_naive and returns the mean estimate of the coefficients
base		_calc_grad	mod params alpha L1_wt	calculates the log-likelihood gradient for the debiasing parameters
base		_calc_wdesign_mat	mod params hess_kwds	calculates the weighted design matrix necessary to generate the approximate inverse covariance matrix
base		_est_regularized_debiased	mod mnum partitions fit_kwds	estimates the regularized fitted parameters is the default estimation_method for class distributedmodel
base		_join_debiased	results_l threshold	joins the results from each run of _est_regularized_debiased and returns the debiased estimate of the coefficients
base		_helper_fit_partition	pnum endog exog fit_kwds	handles the model fitting for each machine note this
base	DistributedModel	fit	data_generator fit_kwds parallel_method parallel_backend	performs the distributed estimation using the corresponding distributedmodel
base	DistributedModel	fit_sequential	data_generator fit_kwds init_kwds_generator	sequentially performs the distributed estimation using the corresponding distributedmodel
base	DistributedModel	fit_joblib	data_generator fit_kwds parallel_backend init_kwds_generator	performs the distributed estimation in parallel using joblib parameters
base	DistributedResults	predict	exog	calls self model predict for the provided exog see
base	ResultsWrapper	save	fname remove_data	save a pickle of this instance parameters
base		_gen_npfuncs	k L1_wt alpha loglike_kwds	negative penalized log-likelihood functions
base		fit_elasticnet	model method maxiter alpha	return an elastic net regularized fit to a regression model
base		_opt_1d	func grad hess model	one-dimensional helper for elastic net
datasets		load		load the data and return a dataset class instance
datasets		webuse	data baseurl as_df	download and return an example dataset from stata
datasets		_maybe_reset_index	data	all the rdatasets have the integer row labels from r if there is no
datasets		_urlopen_cached	url cache	tries to load data from cache location otherwise downloads it if it
datasets		get_rdataset	dataname package cache	download and return r dataset parameters
datasets		get_data_home	data_home	return the path of the statsmodels data dir
datasets		clear_data_home	data_home	delete all the content of the data home cache
datasets		check_internet	url	check if internet is available
datasets.co2		load		load the data and return a dataset class instance
datasets.elnino		load		load the el nino data and return a dataset class
datasets.cancer		load		load the data and return a dataset class instance
datasets.copper		load		load the copper data and returns a dataset class
datasets.copper		load_pandas		load the copper data and returns a dataset class
datasets.fertility		load		load the data and return a dataset class instance
datasets.strikes		load		load the strikes data and return a dataset class instance
datasets.strikes		load_pandas		load the strikes data and return a dataset class instance
datasets.ccard		load		load the credit card data and returns a dataset class
datasets.ccard		load_pandas		load the credit card data and returns a dataset class
datasets.stackloss		load		load the stack loss data and returns a dataset class instance
datasets.stackloss		load_pandas		load the stack loss data and returns a dataset class instance
datasets.macrodata		load		load the us macro data and return a dataset class
datasets.grunfeld		load		loads the grunfeld data and returns a dataset class
datasets.grunfeld		load_pandas		loads the grunfeld data and returns a dataset class
datasets.star98		load		load the star98 data and returns a dataset class instance
datasets.modechoice		load		load the data modechoice data and return a dataset class instance
datasets.modechoice		load_pandas		load the data modechoice data and return a dataset class instance
datasets.spector		load		load the spector dataset and returns a dataset class instance
datasets.spector		load_pandas		load the spector dataset and returns a dataset class instance
datasets.nile		load		load the nile data and return a dataset class instance
datasets.longley		load		load the longley data and return a dataset class
datasets.longley		load_pandas		load the longley data and return a dataset class
datasets.cpunish		load		load the cpunish data and return a dataset class
datasets.cpunish		load_pandas		load the cpunish data and return a dataset class
datasets.committee		load		load the committee data and returns a data class
datasets.heart		load		load the data and return a dataset class instance
datasets.statecrime		load		load the statecrime data and return a dataset class instance
datasets.scotland		load		load the scotvote data and returns a dataset instance
datasets.scotland		load_pandas		load the scotvote data and returns a dataset instance
datasets.anes96		load		load the anes96 data and returns a dataset class
datasets.anes96		load_pandas		load the anes96 data and returns a dataset class
datasets.fair		load		load the data and return a dataset class instance
datasets.engel		load		load the data and return a dataset class instance
datasets.china_smoking		load_pandas		load the china smoking/lung cancer data and return a dataset class
datasets.china_smoking		load		load the china smoking/lung cancer data and return a dataset class
datasets.sunspots		load		load the yearly sunspot data and returns a data class
datasets.randhie		load		loads the rand hie data and returns a dataset class
datasets.randhie		load_pandas		loads the rand hie data and returns a dataset class
discrete		_check_margeff_args	at method	checks valid options for margeff
discrete		_check_discrete_args	at method	checks the arguments for margeff if the exogenous variables are discrete
discrete		_get_const_index	exog	returns a boolean array of non-constant column indices in exog and
discrete		_isdummy	X	given an array x returns the column indices for the dummy variables
discrete		_iscount	X	given an array x returns the column indices for count variables
discrete		_get_count_effects	effects exog count_ind method	if there's a count variable the predicted difference is taken by
discrete		_get_dummy_effects	effects exog dummy_ind method	if there's a dummy variable the predicted difference is taken at
discrete		_margeff_cov_params_dummy	model cov_margins params exog	returns the jacobian for discrete regressors for use in margeff_cov_params
discrete		_margeff_cov_params_count	model cov_margins params exog	returns the jacobian for discrete regressors for use in margeff_cov_params
discrete		margeff_cov_params	model params exog cov_params	computes the variance-covariance of marginal effects by the delta method
discrete	DiscreteMargins	summary_frame	alpha	returns a dataframe summarizing the marginal effects
discrete	DiscreteMargins	conf_int	alpha	returns the confidence intervals of the marginal effects parameters
discrete	DiscreteMargins	summary	alpha	returns a summary table for marginal effects parameters
discrete	DiscreteMargins	get_margeff	at method atexog dummy	get marginal effects of the fitted model
discrete	DiscreteModel	initialize		initialize is called by statsmodels
discrete	DiscreteModel	cdf	X	the cumulative distribution function of the model
discrete	DiscreteModel	pdf	X	the probability density mass function of the model
discrete	DiscreteModel	fit	start_params method maxiter full_output	fit the model using maximum likelihood
discrete	DiscreteModel	fit_regularized	start_params method maxiter full_output	fit the model using a regularized maximum likelihood
discrete	DiscreteModel	cov_params_func_l1	likelihood_model xopt retvals	computes cov_params on a reduced parameter space corresponding to the nonzero parameters resulting from the
discrete	DiscreteModel	predict	params exog linear	predict response variable of a model given exogenous variables
discrete	DiscreteModel	_derivative_exog	params exog dummy_idx count_idx	this should implement the derivative of the non-linear function
discrete	BinaryModel	predict	params exog linear	predict response variable of a model given exogenous variables
discrete	BinaryModel	_derivative_predict	params exog transform	for computing marginal effects standard errors
discrete	BinaryModel	_derivative_exog	params exog transform dummy_idx	for computing marginal effects returns df xb / dx where f is
discrete	MultinomialModel	initialize		preprocesses the data for mnlogit
discrete	MultinomialModel	predict	params exog linear	predict response variable of a model given exogenous variables
discrete	MultinomialModel	_derivative_predict	params exog transform	for computing marginal effects standard errors
discrete	MultinomialModel	_derivative_exog	params exog transform dummy_idx	for computing marginal effects returns df xb / dx where f is
discrete	CountModel	predict	params exog exposure offset	predict response variable of a count model given exogenous variables
discrete	CountModel	_derivative_predict	params exog transform	for computing marginal effects standard errors
discrete	CountModel	_derivative_exog	params exog transform dummy_idx	for computing marginal effects these are the marginal effects
discrete	Poisson	cdf	X	poisson model cumulative distribution function parameters
discrete	Poisson	pdf	X	poisson model probability mass function parameters
discrete	Poisson	loglike	params	loglikelihood of poisson model parameters
discrete	Poisson	loglikeobs	params	loglikelihood for observations of poisson model parameters
discrete	Poisson	fit_constrained	constraints start_params	fit the model subject to linear equality constraints the constraints are of the form r params = q
discrete	Poisson	score	params	poisson model score gradient vector of the log-likelihood parameters
discrete	Poisson	score_obs	params	poisson model jacobian of the log-likelihood for each observation parameters
discrete	Poisson	hessian	params	poisson model hessian matrix of the loglikelihood parameters
discrete	Logit	cdf	X	the logistic cumulative distribution function parameters
discrete	Logit	pdf	X	the logistic probability density function parameters
discrete	Logit	loglike	params	log-likelihood of logit model
discrete	Logit	loglikeobs	params	log-likelihood of logit model for each observation
discrete	Logit	score	params	logit model score gradient vector of the log-likelihood parameters
discrete	Logit	score_obs	params	logit model jacobian of the log-likelihood for each observation parameters
discrete	Logit	hessian	params	logit model hessian matrix of the log-likelihood parameters
discrete	Probit	cdf	X	probit normal cumulative distribution function parameters
discrete	Probit	pdf	X	probit normal probability density function parameters
discrete	Probit	loglike	params	log-likelihood of probit model (i e the normal distribution)
discrete	Probit	loglikeobs	params	log-likelihood of probit model for each observation parameters
discrete	Probit	score	params	probit model score gradient vector parameters
discrete	Probit	score_obs	params	probit model jacobian for each observation parameters
discrete	Probit	hessian	params	probit model hessian matrix of the log-likelihood parameters
discrete	MNLogit	cdf	X	multinomial logit cumulative distribution function
discrete	MNLogit	loglike	params	log-likelihood of the multinomial logit model
discrete	MNLogit	loglikeobs	params	log-likelihood of the multinomial logit model for each observation
discrete	MNLogit	score	params	score matrix for multinomial logit model log-likelihood parameters
discrete	MNLogit	loglike_and_score	params	returns log likelihood and score efficiently reusing calculations
discrete	MNLogit	score_obs	params	jacobian matrix for multinomial logit model log-likelihood parameters
discrete	MNLogit	hessian	params	multinomial logit hessian matrix of the log-likelihood parameters
discrete	NegativeBinomial	loglike	params	loglikelihood for negative binomial model parameters
discrete	NegativeBinomial	_score_nbin	params Q	score vector for nb2 model
discrete	NegativeBinomial	_hessian_nb1	params	hessian of nb1 model
discrete	NegativeBinomial	_hessian_nb2	params	hessian of nb2 model
discrete	DiscreteResults	get_margeff	at method atexog dummy	get marginal effects of the fitted model
discrete	DiscreteResults	summary	yname xname title alpha	summarize the regression results parameters
discrete	DiscreteResults	summary2	yname xname title alpha	experimental function to summarize regression results parameters
discrete	PoissonResults	predict_prob	n exog exposure offset	return predicted probability of each count level for each observation parameters
discrete	BinaryResults	pred_table	threshold	prediction table parameters
discrete	BinaryResults	resid_dev		deviance residuals notes
discrete	BinaryResults	resid_pearson		pearson residuals notes
discrete	BinaryResults	resid_response		the response residuals notes
discrete	LogitResults	resid_generalized		generalized residuals notes
discrete	ProbitResults	resid_generalized		generalized residuals notes
discrete	MultinomialResults	_get_endog_name	yname yname_list all	if all is false the first variable name is dropped
discrete	MultinomialResults	pred_table		returns the j x j prediction table
discrete	MultinomialResults	resid_misclassified		residuals indicating which observations are misclassified
discrete	MultinomialResults	summary2	alpha float_format	experimental function to summarize regression results parameters
stats		mc2mnc	mc	convert central to non-central moments uses recursive formula
stats		mnc2mc	mnc wmean	convert non-central to central moments uses recursive formula
stats		cum2mc	kappa	convert non-central moments to cumulants recursive formula produces as many cumulants as moments
stats		mnc2cum	mnc	convert non-central moments to cumulants recursive formula produces as many cumulants as moments
stats		mc2cum	mc	just chained because i have still the test case
stats		mvsk2mc	args	convert mean variance skew kurtosis to central moments
stats		mvsk2mnc	args	convert mean variance skew kurtosis to non-central moments
stats		mc2mvsk	args	convert central moments to mean variance skew kurtosis
stats		mnc2mvsk	args	convert central moments to mean variance skew kurtosis
stats		cov2corr	cov return_std	convert covariance matrix to correlation matrix parameters
stats		corr2cov	corr std	convert correlation matrix to covariance matrix given standard deviation parameters
stats		se_cov	cov	get standard deviation from covariance matrix just a shorthand function np
stats		ksstat	x cdf alternative args	calculate statistic for the kolmogorov-smirnov test for goodness of fit this calculates the test statistic for a test of the distribution g x of an observed
stats		pval_lf	Dmax n	approximate pvalues for lilliefors test of normality this is only valid for pvalues smaller than 0
stats		kstest_normal	x pvalmethod	lilliefors test for normality kolmogorov smirnov test with estimated mean and variance
stats		pairwise_tukeyhsd	endog groups alpha	calculate all pairwise comparisons with tukeyhsd confidence intervals this is just a wrapper around tukeyhsd method of multicomparison
stats		anova_single	model	anova table for one fitted linear model
stats		anova1_lm_single	model endog exog nobs	anova table for one fitted linear model
stats		anova2_lm_single	model design_info n_rows test	anova type ii table for one fitted linear model
stats		anova_lm		anova table for one or more fitted linear models
stats	ContrastResults	conf_int	alpha	returns the confidence interval of the value effect of the constraint
stats	ContrastResults	summary	xname alpha title	summarize the results of the hypothesis test parameters
stats	ContrastResults	summary_frame	xname alpha	return the parameter table as a pandas dataframe
stats	Contrast	_get_matrix		gets the contrast_matrix property
stats	Contrast	compute_matrix		construct a contrast matrix c so that colspan(dot d c = colspan(dot(d dot(pinv d t)))
stats		contrastfromcols	L D pseudo	from an n x p design matrix d and a matrix l tries to determine a p x q contrast matrix c which
stats	WaldTestResults	col_names		column names for summary table
stats		_make_df_square	table	reindex a pandas dataframe so that it becomes square meaning that the row and column indices contain the same values in the same
stats	Table	from_data	cls data shift_zeros	construct a table object from data
stats	Table	test_nominal_association		assess independence for nominal factors
stats	Table	test_ordinal_association	row_scores col_scores	assess independence between two ordinal variables
stats	SquareTable	symmetry	method	test for symmetry of a joint distribution
stats	SquareTable	homogeneity	method	compare row and column marginal distributions
stats	SquareTable	summary	alpha float_format	produce a summary of the analysis
stats	Table2x2	from_data	cls data shift_zeros	construct a table object from data
stats	Table2x2	oddsratio_pvalue	null	p-value for a hypothesis test about the odds ratio
stats	Table2x2	log_oddsratio_pvalue	null	p-value for a hypothesis test about the log odds ratio
stats	Table2x2	log_oddsratio_confint	alpha method	a confidence level for the log odds ratio
stats	Table2x2	oddsratio_confint	alpha method	a confidence interval for the odds ratio
stats	Table2x2	riskratio_pvalue	null	p-value for a hypothesis test about the risk ratio
stats	Table2x2	log_riskratio_pvalue	null	p-value for a hypothesis test about the log risk ratio
stats	Table2x2	log_riskratio_confint	alpha method	a confidence interval for the log risk ratio
stats	Table2x2	riskratio_confint	alpha method	a confidence interval for the risk ratio
stats	Table2x2	summary	alpha float_format method	summarizes results for a 2x2 table analysis
stats	StratifiedTable	from_data	cls var1 var2 strata	construct a stratifiedtable object from data
stats	StratifiedTable	test_null_odds	correction	test that all tables have odds ratio equal to 1
stats	StratifiedTable	logodds_pooled_confint	alpha method	a confidence interval for the pooled log odds ratio
stats	StratifiedTable	oddsratio_pooled_confint	alpha method	a confidence interval for the pooled odds ratio
stats	StratifiedTable	test_equal_odds	adjust	test that all odds ratios are identical
stats	StratifiedTable	summary	alpha float_format method	a summary of all the main results
stats		mcnemar	table exact correction	mcnemar test of homogeneity
stats		cochrans_q	x return_object	cochran's q test for identical binomial proportions
stats		_HCCM	results scale	sandwich with pinv x * diag scale * pinv x t
stats		cov_hc0	results	see statsmodels regressionresults
stats		cov_hc1	results	see statsmodels regressionresults
stats		cov_hc2	results	see statsmodels regressionresults
stats		cov_hc3	results	see statsmodels regressionresults
stats		_get_sandwich_arrays	results cov_type	helper function to get scores from results
stats		_HCCM1	results scale	sandwich with pinv x * scale * pinv x t
stats		_HCCM2	hessian_inv scale	sandwich with (x'x)^ -1 * scale * (x'x)^ -1 scale is kvars kvars
stats		weights_bartlett	nlags	bartlett weights for hac
stats		weights_uniform	nlags	uniform weights for hac
stats		S_hac_simple	x nlags weights_func	inner covariance matrix for hac newey west sandwich assumes we have a single time series with zero axis consecutive equal
stats		S_white_simple	x	inner covariance matrix for white heteroscedastistity sandwich parameters
stats		group_sums	x group	sum x for each group simple bincount version again
stats		S_hac_groupsum	x time nlags weights_func	inner covariance matrix for hac over group sums sandwich this assumes we have complete equal spaced time periods
stats		S_crosssection	x group	inner covariance matrix for white on group sums sandwich
stats		cov_crosssection_0	results group	this one is still wrong use cov_cluster instead
stats		cov_cluster	results group use_correction	cluster robust covariance matrix calculates sandwich covariance matrix for a single cluster i
stats		cov_cluster_2groups	results group group2 use_correction	cluster robust covariance matrix for two groups/clusters parameters
stats		cov_white_simple	results use_correction	heteroscedasticity robust covariance matrix white parameters
stats		cov_hac_simple	results nlags weights_func use_correction	heteroscedasticity and autocorrelation robust covariance matrix newey-west assumes we have a single time series with zero axis consecutive equal
stats		lagged_groups	x lag groupidx	assumes sorted by time groupidx is tuple of start and end values
stats		S_nw_panel	xw weights groupidx	inner covariance matrix for hac for panel data
stats		cov_nw_panel	results nlags groupidx weights_func	panel hac robust covariance matrix assumes we have a panel of time series with consecutive equal spaced time
stats		cov_nw_groupsum	results nlags time weights_func	driscoll and kraay panel robust covariance matrix robust covariance matrix for panel data of driscoll and kraay
stats	Mediation	_simulate_params	result	simulate model parameters from fitted sampling distribution
stats	Mediation	_get_mediator_exog	exposure	return the mediator exog matrix with exposure set to the given value
stats	Mediation	_get_outcome_exog	exposure mediator	retun the exog design matrix with mediator and exposure set to the given values
stats	Mediation	fit	method n_rep	fit a regression model to assess mediation
stats	MediationResults	summary	alpha	provide a summary of a mediation analysis
stats		durbin_watson	resids axis	calculates the durbin-watson statistic parameters
stats		omni_normtest	resids axis	omnibus test for normality
stats		jarque_bera	resids axis	calculates the jarque-bera test for normality parameters
stats		robust_skewness	y axis	calculates the four skewness measures in kim & white parameters
stats		_kr3	y alpha beta	kr3 estimator from kim & white parameters
stats		expected_robust_kurtosis	ab dg	calculates the expected value of the robust kurtosis measures in kim and white assuming the data are normally distributed
stats		robust_kurtosis	y axis ab dg	calculates the four kurtosis measures in kim & white parameters
stats		_medcouple_1d	y	calculates the medcouple robust measure of skew
stats		medcouple	y axis	calculates the medcouple robust measure of skew
stats		partial_project	endog exog	helper function to get linear projection or partialling out of variables endog variables are projected on exog variables
stats		cancorr	x1 x2 demean standardize	canonical correlation coefficient beween 2 arrays parameters
stats		cc_ranktest	x1 x2 demean fullrank	rank tests based on smallest canonical correlation coefficients anderson canonical correlations test lm test and
stats		cc_stats	x1 x2 demean	manova statistics based on canonical correlation coefficient calculates pillai's trace wilk's lambda hotelling's trace and
stats		ttest_power	effect_size nobs alpha df	calculate power of a ttest
stats		normal_power	effect_size nobs alpha alternative	calculate power of a normal distributed test statistic
stats		ftest_anova_power	effect_size nobs alpha k_groups	power for ftest for one way anova with k equal sized groups
stats		ftest_power	effect_size df_num df_denom alpha	calculate the power of a f-test
stats	Power	solve_power		solve for any one of the parameters of a t-test for t-test the keywords are
stats	Power	plot_power	dep_var nobs effect_size alpha	plot power with number of observations or effect size on x-axis parameters
stats	TTestPower	power	effect_size nobs alpha df	calculate the power of a t-test for one sample or paired samples
stats	TTestPower	solve_power	effect_size nobs alpha power	solve for any one parameter of the power of a one sample t-test for the one sample t-test the keywords are
stats	TTestIndPower	power	effect_size nobs1 alpha ratio	calculate the power of a t-test for two independent sample parameters
stats	TTestIndPower	solve_power	effect_size nobs1 alpha power	solve for any one parameter of the power of a two sample t-test for t-test the keywords are
stats	NormalIndPower	power	effect_size nobs1 alpha ratio	calculate the power of a t-test for two independent sample parameters
stats	NormalIndPower	solve_power	effect_size nobs1 alpha power	solve for any one parameter of the power of a two sample z-test for z-test the keywords are
stats	FTestPower	power	effect_size df_num df_denom alpha	calculate the power of a f-test
stats	FTestPower	solve_power	effect_size df_num df_denom nobs	solve for any one parameter of the power of a f-test for the one sample f-test the keywords are
stats	FTestAnovaPower	power	effect_size nobs alpha k_groups	calculate the power of a f-test for one factor anova
stats	FTestAnovaPower	solve_power	effect_size nobs alpha power	solve for any one parameter of the power of a f-test for the one sample f-test the keywords are
stats	FTestAnovaPower	_solve_effect_size	effect_size nobs alpha power	experimental test failure in solve_power for effect_size
stats	GofChisquarePower	power	effect_size nobs alpha n_bins	calculate the power of a chisquare test for one sample only two-sided alternative is implemented
stats	GofChisquarePower	solve_power	effect_size nobs alpha power	solve for any one parameter of the power of a one sample chisquare-test for the one sample chisquare-test the keywords are
stats	_GofChisquareIndPower	power	effect_size nobs1 alpha ratio	calculate the power of a chisquare for two independent sample parameters
stats	_GofChisquareIndPower	solve_power	effect_size nobs1 alpha power	solve for any one parameter of the power of a two sample z-test for z-test the keywords are
stats		anderson_statistic	x dist fit params	calculate anderson-darling a2 statistic parameters
stats		normal_ad	x axis	anderson-darling test for normal distribution unknown mean and variance
stats	AllPairsResults	pval_corrected	method	p-values corrected for multiple testing problem this uses the default p-value correction of the instance stored in
stats	AllPairsResults	pval_table		create a (n_levels n_levels) array with corrected p_values
stats	AllPairsResults	summary		returns text summarizing the results uses the default pvalue correction of the instance stored in
stats		_int_ifclose	x dec width	helper function for creating result string for int or float only dec=1 and width=4 is implemented
stats		aggregate_raters	data n_cat	convert raw data with shape subject rater to (subject cat_counts) brings data into correct format for fleiss_kappa
stats		to_table	data bins	convert raw data with shape subject rater to rater1 rater2 brings data into correct format for cohens_kappa
stats		fleiss_kappa	table	fleiss' kappa multi-rater agreement measure parameters
stats		cohens_kappa	table weights return_results wt	compute cohen's kappa with variance and equal-zero test parameters
stats		corr_nearest	corr threshold n_fact	find the nearest correlation matrix that is positive semi-definite
stats		corr_clipped	corr threshold	find a near correlation matrix that is positive semi-definite this function clips the eigenvalues replacing eigenvalues smaller than
stats		cov_nearest	cov method threshold n_fact	find the nearest covariance matrix that is postive semi- definite this leaves the diagonal i
stats		_nmono_linesearch	obj grad x d	implements the non-monotone line search of grippo et al 1986
stats		_spg_optim	func grad start project	implements the spectral projected gradient method for minimizing a differentiable function on a convex domain
stats		_project_correlation_factors	X	project a matrix into the domain of matrices whose row-wise sums of squares are less than or equal to 1
stats	FactoredPSDMatrix	to_matrix		returns the psd matrix represented by this instance as a full square matrix
stats	FactoredPSDMatrix	decorrelate	rhs	decorrelate the columns of rhs
stats	FactoredPSDMatrix	solve	rhs	solve a linear system of equations with factor-structured coefficients
stats	FactoredPSDMatrix	logdet		returns the logarithm of the determinant of a factor-structured matrix
stats		corr_nearest_factor	corr rank ctol lam_min	find the nearest correlation matrix with factor structure to a given square matrix
stats		cov_nearest_factor_homog	cov rank	approximate an arbitrary square matrix with a factor-structured matrix of the form k*i + xx'
stats		corr_thresholded	data minabs max_elt	construct a sparse matrix containing the thresholded row-wise correlation matrix from a data array
stats		powerdiscrepancy	observed expected lambd axis	calculates power discrepancy a class of goodness-of-fit tests as a measure of discrepancy between observed and expected data
stats		gof_chisquare_discrete	distfn arg rvs alpha	perform chisquare test for random sample of a discrete distribution parameters
stats		gof_binning_discrete	rvs distfn arg nsupp	get bins for chisquare type gof tests for a discrete distribution parameters
stats		chisquare	f_obs f_exp value ddof	chisquare goodness-of-fit test the null hypothesis is that the distance between the expected distribution
stats		chisquare_power	effect_size nobs n_bins alpha	power of chisquare goodness of fit test effect size is sqrt of chisquare statistic divided by nobs
stats		chisquare_effectsize	probs0 probs1 correction cohen	effect size for a chisquare goodness-of-fit test parameters
stats	RegressionFDR	threshold	tfdr	returns the threshold statistic for a given target fdr
stats		_design_knockoff_sdp	exog	use semidefinite programming to construct a knockoff design matrix
stats		_design_knockoff_equi	exog	construct an equivariant design matrix for knockoff analysis
stats		outlier_test	model_results method alpha labels	outlier tests for regressionresults instances
stats		reset_ramsey	res degree	ramsey's reset specification test for linear models this is a general specification test for additional non-linear effects
stats		variance_inflation_factor	exog exog_idx	variance inflation factor vif for one exogenous variable the variance inflation factor is a measure for the increase of the
stats	OLSInfluence	hat_matrix_diag		cached attribute diagonal of the hat_matrix for ols
stats	OLSInfluence	resid_press		cached attribute press residuals
stats	OLSInfluence	influence		cached attribute influence measure
stats	OLSInfluence	hat_diag_factor		cached attribute factor of diagonal of hat_matrix used in influence
stats	OLSInfluence	ess_press		cached attribute error sum of squares of press residuals
stats	OLSInfluence	resid_studentized_internal		cached attribute studentized residuals using variance from ols
stats	OLSInfluence	resid_studentized_external		cached attribute studentized residuals using looo variance
stats	OLSInfluence	get_resid_studentized_external	sigma	calculate studentized residuals parameters
stats	OLSInfluence	dffits_internal		cached attribute dffits measure for influence of an observation
stats	OLSInfluence	dffits		cached attribute dffits measure for influence of an observation based on resid_studentized_external
stats	OLSInfluence	dfbetas		cached attribute dfbetas
stats	OLSInfluence	sigma2_not_obsi		cached attribute error variance for all looo regressions this is 'mse_resid' from each auxiliary regression
stats	OLSInfluence	params_not_obsi		cached attribute parameter estimates for all looo regressions
stats	OLSInfluence	det_cov_params_not_obsi		cached attribute determinant of cov_params of all looo regressions
stats	OLSInfluence	cooks_distance		cached attribute cooks distance
stats	OLSInfluence	cov_ratio		cached attribute covariance ratio between looo and original this uses determinant of the estimate of the parameter covariance
stats	OLSInfluence	resid_var		cached attribute estimate of variance of the residuals
stats	OLSInfluence	resid_std		cached attribute estimate of standard deviation of the residuals
stats	OLSInfluence	_ols_xnoti	drop_idx endog_idx store	regression results from lovo auxiliary regression with cache the result instances are stored which could use a large amount of
stats	OLSInfluence	_get_drop_vari	attributes	regress endog on exog without one of the variables this uses a k_vars loop only attributes of the ols instance are stored
stats	OLSInfluence	_res_looo		collect required results from the looo loop all results will be attached
stats	OLSInfluence	summary_frame		creates a dataframe with all available influence results
stats	OLSInfluence	summary_table	float_fmt	create a summary table with all influence and outlier measures this does currently not distinguish between statistics that can be
stats		summary_table	res alpha	generate summary table of outlier and influence similar to sas
stats		_kurtosis	a	wrapper for scipy stats kurtosis that returns nan instead of raising error
stats		_skew	a	wrapper for scipy stats skew that returns nan instead of raising error
stats	Describe	_array_typer		if not a sctructured array
stats	Describe	_is_dtype_like	col	check whether self dataset [col][0] behaves like a string numbern
stats	Describe	summary	stats columns orientation	return a summary of descriptive statistics
stats	TableDist	_critvals	n	rows of the table linearly interpolated for given sample size
stats	TableDist	prob	x n	find pvalues by interpolation eiter cdf x or sf x returns extrem probabilities 0
stats	TableDist	crit2	prob n	returns interpolated quantiles similar to ppf or isf
stats	TableDist	crit	prob n	returns interpolated quantiles similar to ppf or isf
stats	TableDist	crit3	prob n	returns interpolated quantiles similar to ppf or isf
stats		proportion_confint	count nobs alpha method	confidence interval for a binomial proportion parameters
stats		multinomial_proportions_confint	counts alpha method	confidence intervals for multinomial proportions
stats		samplesize_confint_proportion	proportion half_length alpha method	find sample size to get desired confidence interval length parameters
stats		proportion_effectsize	prop1 prop2 method	effect size for a test comparing two proportions for use in power function
stats		std_prop	prop nobs	standard error for the estimate of a proportion this is just np
stats		_power_ztost	mean_low var_low mean_upp var_upp	generic statistical power function for normal based equivalence test
stats		binom_tost	count nobs low upp	exact tost test for one proportion using binomial distribution parameters
stats		binom_tost_reject_interval	low upp nobs alpha	rejection region for binomial tost the interval includes the end points
stats		binom_test_reject_interval	value nobs alpha alternative	rejection region for binomial test for one sample proportion the interval includes the end points of the rejection region
stats		binom_test	count nobs prop alternative	perform a test that the probability of success is p
stats		power_ztost_prop	low upp nobs p_alt	power of proportions equivalence test based on normal distribution parameters
stats		_table_proportion	count nobs	create a k by 2 contingency table for proportion helper function for proportions_chisquare
stats		proportions_ztest	count nobs value alternative	test for proportions based on normal z test parameters
stats		proportions_ztost	count nobs low upp	equivalence test based on normal distribution parameters
stats		proportions_chisquare	count nobs value	test for proportions based on chisquare test parameters
stats		proportions_chisquare_allpairs	count nobs multitest_method	chisquare test of proportions for all pairs of k samples performs a chisquare test for proportions for all pairwise comparisons
stats		proportions_chisquare_pairscontrol	count nobs value multitest_method	chisquare test of proportions for pairs of k samples compared to control performs a chisquare test for proportions for pairwise comparisons with a
stats		_calc_nodewise_row	exog idx alpha	calculates the nodewise_row values for the idxth variable used to estimate approx_inv_cov
stats		_calc_nodewise_weight	exog nodewise_row idx alpha	calculates the nodewise_weightvalue for the idxth variable used to estimate approx_inv_cov
stats		_calc_approx_inv_cov	nodewise_row_l nodewise_weight_l	calculates the approximate inverse covariance matrix parameters
stats	RegularizedInvCovariance	fit	alpha	estimates the regularized inverse covariance using nodewise
stats		_ecdf	x	no frills empirical cdf used in fdrcorrection
stats		multipletests	pvals alpha method is_sorted	test results and p-value correction for multiple tests parameters
stats		fdrcorrection	pvals alpha method is_sorted	pvalue correction for false discovery rate this covers benjamini/hochberg for independent or positively correlated and
stats		fdrcorrection_twostage	pvals alpha method iter	iterated two stage linear step-up procedure with estimation of number of true hypotheses
stats		local_fdr	zscores null_proportion null_pdf deg	calculate local fdr values for a list of z-scores
stats	NullDistribution	pdf	zscores	evaluates the fitted emirical null z-score density
stats	DescrStatsW	nobs		alias for number of observations/cases equal to sum of weights
stats	DescrStatsW	sum		weighted sum of data
stats	DescrStatsW	mean		weighted mean of data
stats	DescrStatsW	demeaned		data with weighted mean subtracted
stats	DescrStatsW	sumsquares		weighted sum of squares of demeaned data
stats	DescrStatsW	var_ddof	ddof	variance of data given ddof
stats	DescrStatsW	std_ddof	ddof	standard deviation of data with given ddof
stats	DescrStatsW	var		variance with default degrees of freedom correction
stats	DescrStatsW	_var		variance without degrees of freedom correction
stats	DescrStatsW	std		standard deviation with default degrees of freedom correction
stats	DescrStatsW	cov		weighted covariance of data if data is 2 dimensional
stats	DescrStatsW	corrcoef		weighted correlation with default ddof
stats	DescrStatsW	std_mean		standard deviation of weighted mean
stats	DescrStatsW	quantile	probs return_pandas	compute quantiles for a weighted sample
stats	DescrStatsW	tconfint_mean	alpha alternative	two-sided confidence interval for weighted mean of data if the data is 2d then these are separate confidence intervals
stats	DescrStatsW	zconfint_mean	alpha alternative	two-sided confidence interval for weighted mean of data confidence interval is based on normal distribution
stats	DescrStatsW	ttest_mean	value alternative	ttest of null hypothesis that mean is equal to value
stats	DescrStatsW	ttost_mean	low upp	test of non- equivalence of one sample tost two one-sided t tests
stats	DescrStatsW	ztest_mean	value alternative	z-test of null hypothesis that mean is equal to value
stats	DescrStatsW	ztost_mean	low upp	test of non- equivalence of one sample based on z-test tost two one-sided z-tests
stats	DescrStatsW	get_compare	other weights	return an instance of comparemeans with self and other parameters
stats	DescrStatsW	asrepeats		get array that has repeats given by floor weights
stats		_tstat_generic	value1 value2 std_diff dof	generic ttest to save typing
stats		_tconfint_generic	mean std_mean dof alpha	generic t-confint to save typing
stats		_zstat_generic	value1 value2 std_diff alternative	generic normal z-test to save typing
stats		_zstat_generic2	value std_diff alternative	generic normal z-test to save typing
stats		_zconfint_generic	mean std_mean alpha alternative	generic normal-confint to save typing
stats	CompareMeans	__init__	d1 d2	assume d1 d2 hold the relevant attributes
stats	CompareMeans	from_data	cls data1 data2 weights1	construct a comparemeans object from data parameters
stats	CompareMeans	summary	use_t alpha usevar value	summarize the results of the hypothesis test parameters
stats	CompareMeans	std_meandiff_pooledvar		variance assuming equal variance in both data sets
stats	CompareMeans	dof_satt		degrees of freedom of satterthwaite for unequal variance
stats	CompareMeans	ttest_ind	alternative usevar value	ttest for the null hypothesis of identical means this should also be the same as onewaygls except for ddof differences
stats	CompareMeans	ztest_ind	alternative usevar value	z-test for the null hypothesis of identical means parameters
stats	CompareMeans	tconfint_diff	alpha alternative usevar	confidence interval for the difference in means parameters
stats	CompareMeans	zconfint_diff	alpha alternative usevar	confidence interval for the difference in means parameters
stats	CompareMeans	ttost_ind	low upp usevar	test of equivalence for two independent samples base on t-test parameters
stats	CompareMeans	ztost_ind	low upp usevar	test of equivalence for two independent samples based on z-test parameters
stats		ttest_ind	x1 x2 alternative usevar	ttest independent sample convenience function that uses the classes and throws away the intermediate
stats		ttost_ind	x1 x2 low upp	test of non- equivalence for two independent samples tost two one-sided t tests
stats		ttost_paired	x1 x2 low upp	test of non- equivalence for two dependent paired sample tost two one-sided t tests
stats		ztest	x1 x2 value alternative	test for mean based on normal distribution one or two samples in the case of two samples the samples are assumed to be independent
stats		zconfint	x1 x2 value alpha	confidence interval based on normal distribution z-test parameters
stats		ztost	x1 low upp x2	equivalence test based on normal distribution parameters
stats.libqsturng		_isfloat	x	returns true if x is a float
stats.libqsturng		_phi	p	modified from the author's original perl code original comments follow below by dfield@yahoo-inc
stats.libqsturng		_ptransform	p	function for p-value abcissa transformation
stats.libqsturng		_func	a p r v	calculates f-hat for the coefficients in a probability p sample mean difference r and degrees of freedom v
stats.libqsturng		_select_ps	p	returns the points to use for interpolating p
stats.libqsturng		_interpolate_p	p r v	interpolates p based on the values in the a table for the
stats.libqsturng		_select_vs	v p	returns the points to use for interpolating v
stats.libqsturng		_interpolate_v	p r v	interpolates v based on the values in the a table for the
stats.libqsturng		_qsturng	p r v	scalar version of qsturng
stats.libqsturng		qsturng	p r v	approximates the quantile p for a studentized range distribution having v degrees of freedom and r samples
stats.libqsturng		_psturng	q r v	scalar version of psturng
stats.libqsturng		psturng	q r v	evaluates the probability from 0 to q for a studentized range having v degrees of freedom and r samples
duration		_kernel_cumincidence	time status exog kfunc	calculates cumulative incidence functions using kernels
duration		_kernel_survfunc	time status exog kfunc	estimate the marginal survival function under dependent censoring
duration		_calc_survfunc_right	time status weights entry	calculate the survival function and its standard error for a single group
duration		_calc_incidence_right	time status weights	calculate the cumulative incidence function and its standard error
duration	SurvfuncRight	plot	ax	plot the survival function
duration	SurvfuncRight	quantile	p	estimated quantile of a survival distribution
duration	SurvfuncRight	quantile_ci	p alpha method	returns a confidence interval for a survival quantile
duration	SurvfuncRight	summary		return a summary of the estimated survival function
duration	SurvfuncRight	simultaneous_cb	alpha method transform	returns a simultaneous confidence band for the survival function
duration		survdiff	time status group weight_type	test for the equality of two survival distributions
duration		plot_survfunc	survfuncs ax	plot one or more survivor functions
duration	PHSurvivalTime	__init__	time status exog strata	represent a collection of survival times with possible stratification and left truncation
duration	PHReg	from_formula	cls formula data status	create a proportional hazards regression model from a formula and dataframe
duration	PHReg	fit	groups	fit a proportional hazards regression model
duration	PHReg	fit_regularized	method alpha start_params refit	return a regularized fit to a linear regression model
duration	PHReg	loglike	params	returns the log partial likelihood function evaluated at params
duration	PHReg	score	params	returns the score function evaluated at params
duration	PHReg	hessian	params	returns the hessian matrix of the log partial likelihood function evaluated at params
duration	PHReg	breslow_loglike	params	returns the value of the log partial likelihood function evaluated at params, using the breslow method to handle tied
duration	PHReg	efron_loglike	params	returns the value of the log partial likelihood function evaluated at params, using the efron method to handle tied
duration	PHReg	breslow_gradient	params	returns the gradient of the log partial likelihood using the breslow method to handle tied times
duration	PHReg	efron_gradient	params	returns the gradient of the log partial likelihood evaluated at params, using the efron method to handle tied times
duration	PHReg	breslow_hessian	params	returns the hessian of the log partial likelihood evaluated at params, using the breslow method to handle tied times
duration	PHReg	efron_hessian	params	returns the hessian matrix of the partial log-likelihood evaluated at params, using the efron method to handle tied
duration	PHReg	robust_covariance	params	returns a covariance matrix for the proportional hazards model regresion coefficient estimates that is robust to certain
duration	PHReg	score_residuals	params	returns the score residuals calculated at a given vector of parameters
duration	PHReg	weighted_covariate_averages	params	returns the hazard-weighted average of covariate values for subjects who are at-risk at a particular time
duration	PHReg	baseline_cumulative_hazard	params	estimate the baseline cumulative hazard and survival functions
duration	PHReg	baseline_cumulative_hazard_function	params	returns a function that calculates the baseline cumulative hazard function for each stratum
duration	PHReg	get_distribution	params	returns a scipy distribution object corresponding to the distribution of uncensored endog duration values for each
duration	PHRegResults	standard_errors		returns the standard errors of the parameter estimates
duration	PHRegResults	bse		returns the standard errors of the parameter estimates
duration	PHRegResults	get_distribution		returns a scipy distribution object corresponding to the distribution of uncensored endog duration values for each
duration	PHRegResults	_group_stats	groups	descriptive statistics of the groups
duration	PHRegResults	weighted_covariate_averages		the average covariate values within the at-risk set at each event time point weighted by hazard
duration	PHRegResults	score_residuals		a matrix containing the score residuals
duration	PHRegResults	baseline_cumulative_hazard		a list corresponding to the strata containing the baseline cumulative hazard function evaluated at the event points
duration	PHRegResults	baseline_cumulative_hazard_function		a list corresponding to the strata containing function objects that calculate the cumulative hazard function
duration	PHRegResults	schoenfeld_residuals		a matrix containing the schoenfeld residuals
duration	PHRegResults	martingale_residuals		the martingale residuals
duration	PHRegResults	summary	yname xname title alpha	summarize the proportional hazards regression results
duration	rv_discrete_float	rvs		returns a random sample from the discrete distribution
duration	rv_discrete_float	mean		returns a vector containing the mean values of the discrete distributions
duration	rv_discrete_float	var		returns a vector containing the variances of the discrete distributions
duration	rv_discrete_float	std		returns a vector containing the standard deviations of the discrete distributions
nonparametric	KernelReg	_est_loc_linear	bw endog exog data_predict	local linear estimator of g x in the regression y = g x + e
nonparametric	KernelReg	_est_loc_constant	bw endog exog data_predict	local constant estimator of g x in the regression y = g x + e
nonparametric	KernelReg	aic_hurvich	bw func	computes the aic hurvich criteria for the estimation of the bandwidth
nonparametric	KernelReg	cv_loo	bw func	the cross-validation function with leave-one-out estimator
nonparametric	KernelReg	r_squared		returns the r-squared for the nonparametric regression
nonparametric	KernelReg	fit	data_predict	returns the mean and marginal effects at the data_predict points
nonparametric	KernelReg	sig_test	var_pos nboot nested_res pivot	significance test for the variables in the regression
nonparametric	KernelReg	__repr__		provide something sane to print
nonparametric	KernelReg	_get_class_vars_type		helper method to be able to pass needed vars to _compute_subset
nonparametric	KernelReg	_compute_dispersion	data	computes the measure of dispersion
nonparametric	KernelCensoredReg	__repr__		provide something sane to print
nonparametric	KernelCensoredReg	_est_loc_linear	bw endog exog data_predict	local linear estimator of g x in the regression y = g x + e
nonparametric	KernelCensoredReg	cv_loo	bw func	the cross-validation function with leave-one-out estimator
nonparametric	KernelCensoredReg	fit	data_predict	returns the marginal effects at the data_predict points
nonparametric	TestRegCoefC	_compute_test_stat	Y X	computes the test statistic see p 371 in [8]
nonparametric	TestRegCoefC	_compute_lambda	Y X	computes only lambda -- the main part of the test statistic
nonparametric	TestRegCoefC	_compute_se_lambda	Y X	calculates the se of lambda by nested resampling used to pivot the statistic
nonparametric	TestRegCoefC	_compute_sig		computes the significance value for the variable s tested
nonparametric	TestRegCoefD	_compute_test_stat	Y X	computes the test statistic
nonparametric	TestRegCoefD	_compute_sig		calculates the significance level of the variable tested
nonparametric	TestRegCoefD	_est_cond_mean		calculates the expected conditional mean
nonparametric		_select_sigma	X	returns the smaller of std(x ddof=1) or normalized iqr x over axis 0
nonparametric		bw_scott	x kernel	scott's rule of thumb parameters
nonparametric		bw_silverman	x kernel	silverman's rule of thumb parameters
nonparametric		bw_normal_reference	x kernel	plug-in bandwidth with kernel specific constant based on normal reference
nonparametric		select_bandwidth	x bw kernel	selects bandwidth for a selection rule bw
nonparametric		_compute_min_std_IQR	data	compute minimum of std and iqr for each variable
nonparametric		_compute_subset	class_type data bw co	"compute bw on subset of data
nonparametric	GenericKDE	_compute_bw	bw	computes the bandwidth of the data
nonparametric	GenericKDE	_compute_dispersion	data	computes the measure of dispersion
nonparametric	GenericKDE	_get_class_vars_type		helper method to be able to pass needed vars to _compute_subset
nonparametric	GenericKDE	_compute_efficient	bw	computes the bandwidth by estimating the scaling factor c in n_res resamples of size n_sub (in randomize case), or by
nonparametric	GenericKDE	_set_defaults	defaults	sets the default values for the efficient estimation
nonparametric	GenericKDE	_normal_reference		returns scott's normal reference rule of thumb bandwidth parameter
nonparametric	GenericKDE	_set_bw_bounds	bw	sets bandwidth lower bound to effectively zero )1e-10), and for discrete values upper bound to 1
nonparametric	GenericKDE	_cv_ml		returns the cross validation maximum likelihood bandwidth parameter
nonparametric	GenericKDE	_cv_ls		returns the cross-validation least squares bandwidth parameter s
nonparametric		_adjust_shape	dat k_vars	returns an array of shape (nobs k_vars) for use with gpke
nonparametric		gpke	bw data data_predict var_type	returns the non-normalized generalized product kernel estimator parameters
nonparametric	KDEMultivariate	__repr__		provide something sane to print
nonparametric	KDEMultivariate	loo_likelihood	bw func	returns the leave-one-out likelihood function
nonparametric	KDEMultivariate	pdf	data_predict	evaluate the probability density function
nonparametric	KDEMultivariate	cdf	data_predict	evaluate the cumulative distribution function
nonparametric	KDEMultivariate	imse	bw	returns the integrated mean square error for the unconditional kde
nonparametric	KDEMultivariate	_get_class_vars_type		helper method to be able to pass needed vars to _compute_subset
nonparametric	KDEMultivariateConditional	__repr__		provide something sane to print
nonparametric	KDEMultivariateConditional	loo_likelihood	bw func	returns the leave-one-out conditional likelihood of the data
nonparametric	KDEMultivariateConditional	pdf	endog_predict exog_predict	evaluate the probability density function
nonparametric	KDEMultivariateConditional	cdf	endog_predict exog_predict	cumulative distribution function for the conditional density
nonparametric	KDEMultivariateConditional	imse	bw	the integrated mean square error for the conditional kde
nonparametric	KDEMultivariateConditional	_get_class_vars_type		helper method to be able to pass needed vars to _compute_subset
nonparametric		lowess	endog exog frac it	lowess locally weighted scatterplot smoothing a lowess function that outs smoothed estimates of endog
nonparametric		aitchison_aitken	h Xi x num_levels	the aitchison-aitken kernel used for unordered discrete random variables
nonparametric		wang_ryzin	h Xi x	the wang-ryzin kernel used for ordered discrete random variables
nonparametric		gaussian	h Xi x	gaussian kernel for continuous variables parameters
nonparametric		gaussian_convolution	h Xi x	calculates the gaussian convolution kernel
nonparametric		aitchison_aitken_reg	h Xi x	a version for the aitchison-aitken kernel for nonparametric regression
nonparametric		wang_ryzin_reg	h Xi x	a version for the wang-ryzin kernel for nonparametric regression
nonparametric	KDEUnivariate	fit	kernel bw fft weights	attach the density estimate to the kdeunivariate class
nonparametric	KDEUnivariate	cdf		returns the cumulative distribution function evaluated at the support
nonparametric	KDEUnivariate	cumhazard		returns the hazard function evaluated at the support
nonparametric	KDEUnivariate	sf		returns the survival function evaluated at the support
nonparametric	KDEUnivariate	entropy		returns the differential entropy evaluated at the support notes
nonparametric	KDEUnivariate	icdf		inverse cumulative distribution quantile function notes
nonparametric	KDEUnivariate	evaluate	point	evaluate density at a single point
nonparametric		kdensity	X kernel bw weights	rosenblatt-parzen univariate kernel density estimator
nonparametric		kdensityfft	X kernel bw weights	rosenblatt-parzen univariate kernel density estimator parameters
nonparametric		forrt	X m	rfft with order like munro 1976 fortt routine
nonparametric		revrt	X m	inverse of forrt equivalent to munro 1976 revrt routine
nonparametric		silverman_transform	bw M RANGE	fft of gaussian kernel following to silverman as 176
nonparametric		counts	x v	counts the number of elements of x that fall within the grid points v notes
nonparametric		lowess	endog exog frac it	lowess locally weighted scatterplot smoothing a lowess function that outs smoothed estimates of endog
nonparametric		_lowess_initial_fit	x_copy y_copy k n	the initial weighted local linear regression for lowess
nonparametric		_lowess_wt_standardize	weights new_entries x_copy_i width	the initial phase of creating the weights
nonparametric		_lowess_robustify_fit	x_copy y_copy fitted weights	additional weighted local linear regressions performed if iter>0
nonparametric		_lowess_update_nn	x cur_nn i	update the endpoints of the nearest neighbors to the ith point
nonparametric		_lowess_tricube	t	the _tricube function applied to a numpy array
nonparametric		_lowess_mycube	t	fast matrix cube
nonparametric		_lowess_bisquare	t	the bisquare function applied to a numpy array
genmod	CovStruct	initialize	model	called by gee used by implementations that need additional setup prior to running fit
genmod	CovStruct	update	params	updates the association parameter values based on the current regression coefficients
genmod	CovStruct	covariance_matrix	endog_expval index	returns the working covariance or correlation matrix for a given cluster of data
genmod	CovStruct	covariance_matrix_solve	expval index stdev rhs	solves matrix equations of the form covmat * soln = rhs and returns the values of soln, where covmat is the covariance
genmod	CovStruct	summary		returns a text summary of the current estimate of the dependence structure
genmod	Nested	initialize	model	called on the first call to update ilabels is a list of n_i x n_i matrices containing integer
genmod	Nested	summary		returns a summary string describing the state of the dependence structure
genmod	GlobalOddsRatio	pooled_odds_ratio	tables	returns the pooled odds ratio for a list of 2x2 tables
genmod	GlobalOddsRatio	observed_crude_oddsratio		to obtain the crude global odds ratio first pool all binary indicators corresponding to a given pair of cut points (c c'),
genmod	GlobalOddsRatio	get_eyy	endog_expval index	returns a matrix v such that v[i j] is the joint probability that endog[i] = 1 and endog[j] = 1 based on the marginal
genmod	GlobalOddsRatio	update	params	update the global odds ratio based on the current value of params
genmod	Equivalence	_make_pairs	i j	create arrays containing all unique ordered pairs of i j
genmod	ParameterConstraint	offset_increment		returns a vector that should be added to the offset vector to accommodate the constraint
genmod	ParameterConstraint	reduced_exog		returns a linearly transformed exog matrix whose columns span the constrained model space
genmod	ParameterConstraint	restore_exog		returns the full exog matrix before it was reduced to satisfy the constraint
genmod	ParameterConstraint	unpack_param	params	converts the parameter vector params from reduced to full coordinates
genmod	ParameterConstraint	unpack_cov	bcov	converts the covariance matrix bcov from reduced to full coordinates
genmod	GEE	cluster_list	array	returns array split into subarrays corresponding to the cluster structure
genmod	GEE	estimate_scale		returns an estimate of the scale parameter at the current parameter value
genmod	GEE	mean_deriv	exog lin_pred	derivative of the expected endog with respect to the parameters
genmod	GEE	mean_deriv_exog	exog params offset_exposure	derivative of the expected endog with respect to exog
genmod	GEE	update_cached_means	mean_params	cached_means should always contain the most recent calculation of the group-wise mean vectors
genmod	GEE	_covmat		returns the sampling covariance matrix of the regression parameters and related quantities
genmod	GEE	predict	params exog offset exposure	return predicted values for a marginal regression model fit using gee
genmod	GEE	_handle_constraint	mean_params bcov	expand the parameter estimate mean_params and covariance matrix bcov to the coordinate system of the unconstrained model
genmod	GEE	_update_assoc	params	update the association parameters
genmod	GEE	_derivative_exog	params exog transform dummy_idx	for computing marginal effects returns df xb / dx where f
genmod	GEEResults	standard_errors	cov_type	this is a convenience function that returns the standard errors for any covariance type
genmod	GEEResults	resid		returns the residuals the endogeneous data minus the fitted values from the model
genmod	GEEResults	resid_split		returns the residuals the endogeneous data minus the fitted values from the model
genmod	GEEResults	resid_centered		returns the residuals centered within each group
genmod	GEEResults	resid_centered_split		returns the residuals centered within each group the
genmod	GEEResults	fittedvalues		returns the fitted values from the model
genmod	GEEResults	conf_int	alpha cols cov_type	returns confidence intervals for the fitted parameters
genmod	GEEResults	summary	yname xname title alpha	summarize the gee regression results parameters
genmod	GEEResults	get_margeff	at method atexog dummy	get marginal effects of the fitted model
genmod	GEEResults	plot_isotropic_dependence	ax xpoints min_n	create a plot of the pairwise products of within-group residuals against the corresponding time differences
genmod	GEEResults	sensitivity_params	dep_params_first dep_params_last num_steps	refits the gee model using a sequence of values for the dependence parameters
genmod	OrdinalGEE	setup_ordinal	endog exog groups time	restructure ordinal data as binary indicators so that they can be analysed using generalized estimating equations
genmod	OrdinalGEEResults	plot_distribution	ax exog_values	plot the fitted probabilities of endog in an ordinal model for specifed values of the predictors
genmod	NominalGEE	setup_nominal	endog exog groups time	restructure nominal data as binary indicators so that they can be analysed using generalized estimating equations
genmod	NominalGEE	mean_deriv	exog lin_pred	derivative of the expected endog with respect to the parameters
genmod	NominalGEE	mean_deriv_exog	exog params offset_exposure	derivative of the expected endog with respect to exog for the multinomial model used in analyzing marginal effects
genmod	NominalGEEResults	plot_distribution	ax exog_values	plot the fitted probabilities of endog in an nominal model for specifed values of the predictors
genmod	_MultinomialLogit	inverse	lpr	inverse of the multinomial logit transform which gives the expected values of the data as a function of the linear
genmod	GEEMargins	summary_frame	alpha	returns a dataframe summarizing the marginal effects
genmod	GEEMargins	conf_int	alpha	returns the confidence intervals of the marginal effects parameters
genmod	GEEMargins	summary	alpha	returns a summary table for marginal effects parameters
genmod	GLM	initialize		initialize a generalized linear model
genmod	GLM	loglike_mu	mu scale	evaluate the log-likelihood for a generalized linear model
genmod	GLM	loglike	params scale	evaluate the log-likelihood for a generalized linear model
genmod	GLM	score_obs	params scale	score first derivative of the loglikelihood for each observation
genmod	GLM	score	params scale	score first derivative of the loglikelihood function parameters
genmod	GLM	score_factor	params scale	weights for score for each observation this can be considered as score residuals
genmod	GLM	hessian_factor	params scale observed	weights for calculating hessian parameters
genmod	GLM	hessian	params scale observed	hessian second derivative of loglikelihood function parameters
genmod	GLM	information	params scale	fisher information matrix
genmod	GLM	score_test	params_constrained k_constraints exog_extra observed	score test for restrictions or for omitted variables the covariance matrix for the score is based on the hessian i
genmod	GLM	_update_history	tmp_result mu history	helper method to update history during iterative fit
genmod	GLM	estimate_scale	mu	estimates the dispersion/scale
genmod	GLM	estimate_tweedie_power	mu method low high	tweedie specific function to estimate scale and the variance parameter
genmod	GLM	predict	params exog exposure offset	return predicted values for a design matrix parameters
genmod	GLM	get_distribution	params scale exog exposure	returns a random number generator for the predictive distribution
genmod	GLM	fit	start_params maxiter method tol	fits a generalized linear model for a given family
genmod	GLM	_fit_gradient	start_params method maxiter tol	fits a generalized linear model for a given family iteratively using the scipy gradient optimizers
genmod	GLM	_fit_irls	start_params maxiter tol scale	fits a generalized linear model for a given family using iteratively reweighted least squares irls
genmod	GLM	fit_regularized	method alpha start_params refit	return a regularized fit to a linear regression model
genmod	GLM	fit_constrained	constraints start_params	fit the model subject to linear equality constraints the constraints are of the form r params = q
genmod	GLMResults	summary	yname xname title alpha	summarize the regression results parameters
genmod	GLMResults	summary2	yname xname title alpha	experimental summary for regression results parameters
genmod	PredictionResults	t_test	value alternative	z- or t-test for hypothesis that mean is equal to value parameters
genmod	PredictionResults	conf_int	method alpha	returns the confidence interval of the value effect of the constraint
genmod		get_prediction_glm	exog transform weights row_labels	compute prediction results parameters
genmod		params_transform_univariate	params cov_params link transform	results for univariate nonlinear monotonicaly transformed parameters this provides transformed values standard errors and confidence interval
genmod.families	Link	__call__	p	return the value of the link function this is just a placeholder
genmod.families	Link	inverse	z	inverse of the link function just a placeholder
genmod.families	Link	deriv	p	derivative of the link function g' p just a placeholder
genmod.families	Link	deriv2	p	second derivative of the link function g'' p
genmod.families	Link	inverse_deriv	z	derivative of the inverse link function g^ -1 z
genmod.families	Logit	_clean	p	clip logistic values to range eps 1-eps
genmod.families	Logit	__call__	p	the logit transform
genmod.families	Logit	inverse	z	inverse of the logit transform
genmod.families	Logit	deriv	p	derivative of the logit transform
genmod.families	Logit	inverse_deriv	z	derivative of the inverse of the logit transform parameters
genmod.families	Logit	deriv2	p	second derivative of the logit function
genmod.families	Power	__call__	p	power transform link function parameters
genmod.families	Power	inverse	z	inverse of the power transform link function
genmod.families	Power	deriv	p	derivative of the power transform
genmod.families	Power	deriv2	p	second derivative of the power transform
genmod.families	Power	inverse_deriv	z	derivative of the inverse of the power transform parameters
genmod.families	Log	__call__	p	log transform link function
genmod.families	Log	inverse	z	inverse of log transform link function
genmod.families	Log	deriv	p	derivative of log transform link function
genmod.families	Log	deriv2	p	second derivative of the log transform link function
genmod.families	Log	inverse_deriv	z	derivative of the inverse of the log transform link function
genmod.families	CDFLink	__call__	p	cdf link function parameters
genmod.families	CDFLink	inverse	z	the inverse of the cdf link parameters
genmod.families	CDFLink	deriv	p	derivative of cdf link parameters
genmod.families	CDFLink	deriv2	p	second derivative of the link function g'' p
genmod.families	CDFLink	inverse_deriv	z	derivative of the inverse of the cdf transformation link function
genmod.families	cauchy	deriv2	p	second derivative of the cauchy link function
genmod.families	CLogLog	__call__	p	c-log-log transform link function
genmod.families	CLogLog	inverse	z	inverse of c-log-log transform link function
genmod.families	CLogLog	deriv	p	derivative of c-log-log transform link function
genmod.families	CLogLog	deriv2	p	second derivative of the c-log-log ink function
genmod.families	CLogLog	inverse_deriv	z	derivative of the inverse of the c-log-log transform link function
genmod.families	NegativeBinomial	__call__	p	negative binomial transform link function
genmod.families	NegativeBinomial	inverse	z	inverse of the negative binomial transform parameters
genmod.families	NegativeBinomial	deriv	p	derivative of the negative binomial transform
genmod.families	NegativeBinomial	deriv2	p	second derivative of the negative binomial link function
genmod.families	NegativeBinomial	inverse_deriv	z	derivative of the inverse of the negative binomial transform
genmod.families	Family	_setlink	link	helper method to set the link for a family
genmod.families	Family	_getlink		helper method to get the link for a family
genmod.families	Family	starting_mu	y	starting value for mu in the irls algorithm
genmod.families	Family	weights	mu	weights for irls steps parameters
genmod.families	Family	deviance	endog mu freq_weights scale	the deviance function evaluated at (endog mu freq_weights mu)
genmod.families	Family	resid_dev	endog mu freq_weights scale	the deviance residuals parameters
genmod.families	Family	fitted	lin_pred	fitted values based on linear predictors lin_pred
genmod.families	Family	predict	mu	linear predictors based on given mu values
genmod.families	Family	loglike	endog mu freq_weights scale	the log-likelihood function in terms of the fitted mean response
genmod.families	Family	resid_anscombe	endog mu	the anscombe residuals see also
genmod.families	Poisson	_clean	x	helper function to trim the data so that is in 0 inf notes
genmod.families	Poisson	resid_dev	endog mu scale	poisson deviance residual parameters
genmod.families	Poisson	deviance	endog mu freq_weights scale	poisson deviance function parameters
genmod.families	Poisson	loglike	endog mu freq_weights scale	the log-likelihood function in terms of the fitted mean response
genmod.families	Poisson	resid_anscombe	endog mu	anscombe residuals for the poisson exponential family distribution parameters
genmod.families	Gaussian	resid_dev	endog mu scale	gaussian deviance residuals parameters
genmod.families	Gaussian	deviance	endog mu freq_weights scale	gaussian deviance function parameters
genmod.families	Gaussian	loglike	endog mu freq_weights scale	the log-likelihood in terms of the fitted mean response
genmod.families	Gaussian	resid_anscombe	endog mu	the anscombe residuals for the gaussian exponential family distribution parameters
genmod.families	Gamma	_clean	x	helper function to trim the data so that is in 0 inf notes
genmod.families	Gamma	deviance	endog mu freq_weights scale	gamma deviance function parameters
genmod.families	Gamma	resid_dev	endog mu scale	gamma deviance residuals parameters
genmod.families	Gamma	loglike	endog mu freq_weights scale	the log-likelihood function in terms of the fitted mean response
genmod.families	Gamma	resid_anscombe	endog mu	the anscombe residuals for gamma exponential family distribution parameters
genmod.families	Binomial	starting_mu	y	the starting values for the irls algorithm for the binomial family
genmod.families	Binomial	initialize	endog freq_weights	initialize the response variable
genmod.families	Binomial	deviance	endog mu freq_weights scale	deviance function for either bernoulli or binomial data
genmod.families	Binomial	resid_dev	endog mu scale	binomial deviance residuals parameters
genmod.families	Binomial	loglike	endog mu freq_weights scale	the log-likelihood function in terms of the fitted mean response
genmod.families	Binomial	resid_anscombe	endog mu	the anscombe residuals parameters
genmod.families	InverseGaussian	resid_dev	endog mu scale	returns the deviance residuals for the inverse gaussian family
genmod.families	InverseGaussian	deviance	endog mu freq_weights scale	inverse gaussian deviance function parameters
genmod.families	InverseGaussian	loglike	endog mu freq_weights scale	the log-likelihood function in terms of the fitted mean response
genmod.families	InverseGaussian	resid_anscombe	endog mu	the anscombe residuals for the inverse gaussian distribution parameters
genmod.families	NegativeBinomial	_clean	x	helper function to trim the data so that is in 0 inf notes
genmod.families	NegativeBinomial	deviance	endog mu freq_weights scale	returns the value of the deviance function
genmod.families	NegativeBinomial	resid_dev	endog mu scale	negative binomial deviance residual parameters
genmod.families	NegativeBinomial	loglike	endog mu freq_weights scale	the log-likelihood function in terms of the fitted mean response
genmod.families	NegativeBinomial	resid_anscombe	endog mu	the anscombe residuals for the negative binomial family parameters
genmod.families	Tweedie	_clean	x	helper function to trim the data so that is in 0 inf notes
genmod.families	Tweedie	deviance	endog mu freq_weights scale	returns the value of the deviance function
genmod.families	Tweedie	resid_dev	endog mu scale	tweedie deviance residual parameters
genmod.families	Tweedie	loglike	endog mu freq_weights scale	the log-likelihood function in terms of the fitted mean response
genmod.families	Tweedie	resid_anscombe	endog mu	the anscombe residuals for the tweedie family parameters
genmod.families	VarianceFunction	__call__	mu	default variance function parameters
genmod.families	VarianceFunction	deriv	mu	derivative of the variance function v' mu
genmod.families	Power	__call__	mu	power variance function parameters
genmod.families	Power	deriv	mu	derivative of the variance function v' mu may be undefined at zero
genmod.families	Binomial	__call__	mu	binomial variance function parameters
genmod.families	Binomial	deriv	mu	derivative of the variance function v' mu
genmod.families	NegativeBinomial	__call__	mu	negative binomial variance function
genmod.families	NegativeBinomial	deriv	mu	derivative of the negative binomial variance function
iolib		_getnames	yname xname	extract names from model or construct names
iolib		summary_top	results title gleft gright	generate top table s
iolib		summary_params	results yname xname alpha	create a summary table for the parameters parameters
iolib		summary_params_frame	results yname xname alpha	create a summary table for the parameters parameters
iolib		summary_params_2d	result extras endog_names exog_names	create summary table of regression parameters with several equations this allows interleaving of parameters with bse and/or tvalues
iolib		summary_params_2dflat	result endog_names exog_names alpha	summary table for parameters that are 2d e g multi-equation models
iolib		table_extend	tables keep_headers	extend a list of simpletables adding titles to header of subtables this function returns the merged table as a deepcopy in contrast to the
iolib	Summary	_repr_html_		display as html in ipython notebook
iolib	Summary	add_table_2cols	res title gleft gright	add a double table 2 tables with one column merged horizontally parameters
iolib	Summary	add_table_params	res yname xname alpha	create and add a table for the parameter estimates
iolib	Summary	add_extra_txt	etext	add additional text that will be added at the end in text format parameters
iolib	Summary	as_text		return tables as string
iolib	Summary	as_latex		return tables as string returns
iolib	Summary	as_csv		return tables as string
iolib	Summary	as_html		return tables as string
iolib	Summary	_repr_html_		display as html in ipython notebook
iolib	Summary	add_df	df index header float_format	add the contents of a dataframe to summary table
iolib	Summary	add_array	array align float_format	add the contents of a numpy array to summary table
iolib	Summary	add_dict	d ncols align float_format	add the contents of a dict to summary table parameters
iolib	Summary	add_text	string	append a note to the bottom of the summary table in ascii tables
iolib	Summary	add_title	title results	insert a title on top of the summary table if a string is provided
iolib	Summary	add_base	results alpha float_format title	try to construct a basic summary instance
iolib	Summary	as_text		generate ascii summary table
iolib	Summary	as_html		generate html summary table
iolib	Summary	as_latex		generate latex summary table
iolib		_measure_tables	tables settings	compare width of ascii tables in a list and calculate padding values
iolib		summary_model	results	create a dict with information about the model
iolib		summary_params	results yname xname alpha	create a summary table of parameters from results instance parameters
iolib		_col_params	result float_format stars	stack coefficients and standard errors in single column
iolib		_col_info	result info_dict	stack model info in a column
iolib		summary_col	results float_format model_names stars	summarize multiple results instances side-by-side coefs and ses parameters
iolib		csv2st	csvfile headers stubs title	return simpletable instance created from the data in csvfile,
iolib	SimpleTable	_add_headers_stubs	headers stubs	return none adds headers and stubs to table
iolib	SimpleTable	insert	idx row datatype	return none insert a row into a table
iolib	SimpleTable	insert_header_row	rownum headers dec_below	return none insert a row of headers
iolib	SimpleTable	insert_stubs	loc stubs	return none insert column of stubs at column loc
iolib	SimpleTable	_data2rows	raw_data	return list of row the raw data as rows of cells
iolib	SimpleTable	pad	s width align	deprecated just use the pad function
iolib	SimpleTable	_get_colwidths	output_format	return list the calculated widths of each column
iolib	SimpleTable	get_colwidths	output_format	return list the widths of each column
iolib	SimpleTable	_get_fmt	output_format	return dict the formatting options
iolib	SimpleTable	as_csv		return string the table in csv format
iolib	SimpleTable	as_text		return string the table as text
iolib	SimpleTable	as_latex_tabular	center	return string the table as a latex tabular environment
iolib	SimpleTable	label_cells	func	return none labels cells based on func
iolib		pad	s width align	return string padded with spaces based on alignment parameter
iolib	Row	add_format	output_format	return none adds row-instance specific formatting
iolib	Row	insert_stub	loc stub	return none inserts a stub cell
iolib	Row	_get_fmt	output_format	return dict the formatting options
iolib	Row	get_aligns	output_format	return string sequence of column alignments
iolib	Row	as_string	output_format	return string the formatted row
iolib	Row	_decorate_below	row_as_string output_format	this really only makes sense for the text and latex output formats
iolib	Cell	_get_fmt	output_format	return dict the formatting options
iolib	EmptyContextManager	__enter__		when entering return the embedded object
iolib	EmptyContextManager	__exit__		don't hide anything
iolib		get_file_obj	fname mode encoding	light wrapper to handle strings and let files anything else pass through
iolib		_datetime_to_stata_elapsed	date fmt	convert from datetime to sif http //www stata com/help cgi?datetime
iolib		_stata_elapsed_date_to_datetime	date fmt	convert from sif to datetime http //www stata com/help cgi?datetime
iolib	StataReader	file_headers		returns all dta file headers
iolib	StataReader	file_format		returns the file format
iolib	StataReader	file_label		returns the dataset's label
iolib	StataReader	file_timestamp		returns the date and time stata recorded on last file save
iolib	StataReader	variables		returns a list of the dataset's statavariables objects
iolib	StataReader	dataset	as_dict	returns a python generator object for iterating over the dataset
iolib	StataReader	__len__		return the number of observations in the dataset
iolib	StataReader	__getitem__	k	seek to an observation indexed k in the file and return it ordered by stata's output to the
iolib	StataReader	_col_size	k	calculate size of a data record
iolib		_dtype_to_stata_type	dtype	converts dtype types to stata types returns the byte of the given ordinal
iolib		_dtype_to_default_stata_fmt	dtype	maps numpy dtype to stata's default format for this type not terribly
iolib		_pad_bytes	name length	takes a char string and pads it wih null bytes until it's length chars
iolib		_default_names	nvar	returns default stata names v1 v2 vnvar
iolib		_convert_datetime_to_stata_type	fmt	converts from one of the stata date formats to a type in type_map
iolib	StataWriter	_write	to_write	helper to call asbytes before writing to file for python 3 compat
iolib		genfromdta	fname missing_flt encoding pandas	returns an ndarray or dataframe from a stata dta file
iolib		savetxt	fname X names fmt	save an array to a text file
iolib		save_pickle	obj fname	save the object to file via pickling
iolib		load_pickle	fname	load a previously saved object from file parameters
imputation		_ros_sort	df observations censorship warn	this function prepares a dataframe for ros
imputation		cohn_numbers	df observations censorship	computes the cohn numbers for the detection limits in the dataset
imputation		_detection_limit_index	obs cohn	locates the corresponding detection limit for each observation
imputation		_ros_group_rank	df dl_idx censorship	ranks each observation within the data groups
imputation		_ros_plot_pos	row censorship cohn	ros-specific plotting positions
imputation		_norm_plot_pos	observations	computes standard normal gaussian plotting positions using scipy
imputation		plotting_positions	df censorship cohn	compute the plotting positions for the observations
imputation		_impute	df observations censorship transform_in	executes the basic regression on order stat ros proceedure
imputation		_do_ros	df observations censorship transform_in	dataframe-centric function to impute censored valies with ros
imputation		impute_ros	observations censorship df min_uncensored	impute censored dataset using regression on order statistics ros
imputation	MICEData	next_sample		returns the next imputed dataset in the imputation process
imputation	MICEData	_initial_imputation		use a pmm-like procedure for initial imputed values
imputation	MICEData	set_imputer	endog_name formula model_class init_kwds	specify the imputation process for a single variable
imputation	MICEData	_store_changes	col vals	fill in dataset with imputed values
imputation	MICEData	update_all	n_iter	perform a specified number of mice iterations
imputation	MICEData	get_split_data	vname	return endog and exog for imputation of a given variable
imputation	MICEData	get_fitting_data	vname	return the data needed to fit a model for imputation
imputation	MICEData	plot_missing_pattern	ax row_order column_order hide_complete_rows	generate an image showing the missing data pattern
imputation	MICEData	plot_bivariate	col1_name col2_name lowess_args lowess_min_n	plot observed and imputed values for two variables
imputation	MICEData	plot_fit_obs	col_name lowess_args lowess_min_n jitter	plot fitted versus imputed or observed values as a scatterplot
imputation	MICEData	plot_imputed_hist	col_name ax imp_hist_args obs_hist_args	display imputed values for one variable as a histogram
imputation	MICEData	_perturb_bootstrap	vname	perturbs the model's parameters using a bootstrap
imputation	MICEData	_perturb_gaussian	vname	gaussian perturbation of model parameters
imputation	MICEData	update	vname	impute missing values for a single variable
imputation	MICEData	impute_pmm	vname	use predictive mean matching to impute missing values
imputation	MICE	next_sample		perform one complete mice iteration
imputation	MICE	fit	n_burnin n_imputations	fit a model using mice
imputation	MICE	combine		pools mice imputation results
imputation	MICEResults	summary	title alpha	summarize the results of running mice
graphics		interaction_plot	x trace response func	interaction plot for factor level statistics
graphics		_recode	x levels	recode categorial data to int factor
graphics		_make_ellipse	mean cov ax level	support function for scatter_ellipse
graphics		scatter_ellipse	data level varnames ell_kwds	create a grid of scatter plots with confidence ellipses
graphics		violinplot	data ax labels positions	make a violin plot of each dataset in the data sequence
graphics		_set_ticks_labels	ax data labels positions	set ticks and labels on horizontal axis
graphics		beanplot	data ax labels positions	make a bean plot of each dataset in the data sequence
graphics		_jitter_envelope	pos_data xvals violin side	determine envelope for jitter markers
graphics		_show_legend	ax	utility function to show legend
graphics		add_lowess	ax lines_idx frac	add lowess line to a plot
graphics		plot_fit	results exog_idx y_true ax	plot fit against one regressor
graphics		plot_regress_exog	results exog_idx fig	plot regression results against one regressor
graphics		plot_partregress	endog exog_i exog_others data	plot partial regression for a single regressor
graphics		plot_partregress_grid	results exog_idx grid fig	plot partial regression for a set of regressors
graphics		plot_ccpr	results exog_idx ax	plot ccpr against one regressor
graphics		plot_ccpr_grid	results exog_idx grid fig	generate ccpr plots against a set of regressors plot in a grid
graphics		abline_plot	intercept slope horiz vert	plots a line given an intercept and slope
graphics		influence_plot	results external alpha criterion	plot of influence in regression plots studentized resids vs leverage
graphics		plot_leverage_resid2	results alpha ax	plots leverage statistics vs normalized residuals squared
graphics		ceres_resids	results focus_exog frac cond_means	calculate the ceres residuals conditional expectation partial residuals for a fitted model
graphics		partial_resids	results focus_exog	returns partial residuals for a fitted model with respect to a 'focus predictor'
graphics		added_variable_resids	results focus_exog resid_type use_glm_weights	residualize the endog variable and a 'focus' exog variable in a regression model with respect to the other exog variables
graphics	ProbPlot	ppplot	xlabel ylabel line other	p-p plot of the percentiles probabilities of x versus the probabilities percetiles of a distribution
graphics	ProbPlot	qqplot	xlabel ylabel line other	q-q plot of the quantiles of x versus the quantiles/ppf of a distribution or the quantiles of another probplot instance
graphics	ProbPlot	probplot	xlabel ylabel line exceed	probability plot of the unscaled quantiles of x versus the probabilities of a distibution not to be confused with a p-p plot
graphics		qqplot	data dist distargs a	q-q plot of the quantiles of x versus the quantiles/ppf of a distribution
graphics		qqplot_2samples	data1 data2 xlabel ylabel	q-q plot of two samples' quantiles
graphics		qqline	ax line x y	plot a reference line for a qqplot
graphics		plotting_pos	nobs a	generates sequence of plotting positions parameters
graphics		_fmt_probplot_axis	ax dist nobs	formats a theoretical quantile axis to display the corresponding probabilities on the quantiles' scale
graphics		_do_plot	x y dist line	boiler plate plotting function for the ppplot, qqplot, and probplot methods of the probplot class
graphics		plot_corr	dcorr xnames ynames title	plot correlation of many variables in a tight color grid
graphics		plot_corr_grid	dcorrs titles ncols normcolor	create a grid of correlation plots
graphics		plot_acf	x ax lags alpha	plot the autocorrelation function plots lags on the horizontal and the correlations on vertical axis
graphics		plot_pacf	x ax lags alpha	plot the partial autocorrelation function plots lags on the horizontal and the correlations on vertical axis
graphics		seasonal_plot	grouped_x xticklabels ylabel ax	consider using one of month_plot or quarter_plot unless you need irregular plotting
graphics		month_plot	x dates ylabel ax	seasonal plot of monthly data parameters
graphics		quarter_plot	x dates ylabel ax	seasonal plot of quarterly data parameters
graphics		_import_mpl		this function is not needed outside this utils module
graphics		create_mpl_ax	ax	helper function for when a single plot axis is needed
graphics		create_mpl_fig	fig figsize	helper function for when multiple plot axes are needed
graphics		maybe_name_or_idx	idx model	give a name or an integer and return the name and integer location of the column in a design matrix
graphics		get_data_names	series_or_dataframe	input can be an array or pandas-like will handle 1d array-like but not
graphics		annotate_axes	index labels points offset_points	annotate axes with labels points offset_points according to the given index
graphics		_normalize_split	proportion	return a list of proportions of the available space given the division
graphics		_split_rect	x y width height	split the given rectangle in n segments whose proportion is specified along the given axis if a gap is inserted they will be separated by a
graphics		_reduce_dict	count_dict partial_key	make partial sum on a counter dict
graphics		_key_splitting	rect_dict keys values key_subset	given a dictionary where each entry is a rectangle a list of key and value count of elements in each category it split each rect accordingly
graphics		_tuplify	obj	convert an object in a tuple of strings (even if it is not iterable
graphics		_categories_level	keys	use the ordered dict to implement a simple ordered set
graphics		_hierarchical_split	count_dict horizontal gap	split a square in a hierarchical way given a contingency table
graphics		_single_hsv_to_rgb	hsv	transform a color from the hsv space to the rgb
graphics		_create_default_properties	data	"create the default properties of the mosaic given the data first it will varies the color hue first category then the color
graphics		_normalize_data	data index	normalize the data to a dict with tuples of strings as keys right now it works with
graphics		_normalize_dataframe	dataframe index	take a pandas dataframe and count the element present in the
graphics		_statistical_coloring	data	evaluate colors from the indipendence properties of the matrix
graphics		_create_labels	rects horizontal ax rotation	find the position of the label for each value of each category
graphics		mosaic	data index ax horizontal	create a mosaic plot from a contingency table
graphics		fboxplot	data xdata labels depth	plot functional boxplot
graphics		rainbowplot	data xdata depth method	create a rainbow plot for a set of curves
graphics		banddepth	data method	calculate the band depth for a set of functional curves
graphics		rainbow	n	returns a list of colors sampled at equal intervals over the spectrum
graphics		dot_plot	points intervals lines sections	produce a dotplot similar in style to those in cleveland's "visualizing data" book
examples		probitloglike	params endog exog	log likelihood for the probit
examples	MyT	nloglikeobs	params	loglikelihood of poisson model parameters
examples	MyPareto	fit_ks		fit pareto with nested optimization
examples	MyPareto	fit_ks1_trim		fit pareto with nested optimization
examples	MyPareto	fit_ks1		fit pareto with nested optimization
examples	MyT	nloglikeobs	params	loglikelihood of poisson model parameters
examples.tsa	LagPolynomial	flip		reverse polynomial coefficients
examples.tsa	LagPolynomial	div	other maxlag	padded division pads numerator with zeros to maxlag
examples.tsa		tiny2zero	x eps	replace abs values smaller than eps by zero makes copy
examples.tsa		armaloop	arcoefs macoefs x	get arma recursion in simple loop for simplicity assumes that ma polynomial is not longer than the ar-polynomial
examples.l1_demo		main		provides a cli for the demo
examples.l1_demo		run_demo	mode base_alpha N get_l1_slsqp_results	run the demo and print results
examples.l1_demo		run_solvers	model true_params alpha get_l1_slsqp_results	runs the solvers using the specified settings and returns a result string
examples.l1_demo		get_summary_str	results true_params get_l1_slsqp_results get_l1_cvxopt_results	gets a string summarizing the results
examples.l1_demo		get_RMSE	results true_params	gets the normalized root mean square error
examples.l1_demo		get_logit_endog	true_params exog noise_level	gets an endogenous response that is consistent with the true_params perturbed by noise at noise_level
examples.l1_demo		get_probit_endog	true_params exog noise_level	gets an endogenous response that is consistent with the true_params perturbed by noise at noise_level
examples.l1_demo		get_exog	N num_nonconst_covariates cor_length	returns an exog array with correlations determined by cor_length
sandbox		descstats	data cols axis	prints descriptive statistics for one or multiple variables
sandbox		_make_exog_from_formula	result focus_var summaries values	create dataframes for exploring a fitted model as a function of one variable
sandbox		_make_exog_from_arrays	result focus_var summaries values	create dataframes for exploring a fitted model as a function of one variable
sandbox		_glm_basic_scr	result exog alpha	the basic scr from sun et al annals of statistics 2000
sandbox	Results	__call__	exog	expected value check new glm same as mu for given exog
sandbox	Results	linkinversepredict	exog	expected value check new glm same as mu for given exog
sandbox	Results	predict	exog	predict response sum of smoothed components
sandbox	Results	smoothed	exog	get smoothed prediction for each component
sandbox	AdditiveModel	_iter__		initialize iteration ?, should be removed
sandbox	AdditiveModel	next		internal calculation for one fit iteration
sandbox	AdditiveModel	cont		condition to continue iteration loop parameters
sandbox	AdditiveModel	df_resid		degrees of freedom of residuals ddof is sum of all smoothers df
sandbox	AdditiveModel	estimate_scale		estimate standard deviation of residuals
sandbox	AdditiveModel	fit	Y rtol maxiter	fit the model to a given endogenous variable y
sandbox	Model	estimate_scale	Y	return pearson's x^2 estimate of scale
sandbox		recipr	X	return the reciprocal of an array setting all entries less than or equal to 0 to 0
sandbox		mad	a c axis	median absolute deviation
sandbox		recipr0	X	return the reciprocal of an array setting all entries equal to 0 as 0
sandbox		clean0	matrix	erase columns of zeros can save some time in pseudoinverse
sandbox		rank	X cond	return the rank of a matrix x based on its generalized inverse not the svd
sandbox		fullrank	X r	return a matrix whose column span is the same as x
sandbox		ECDF	values	return the ecdf of an array as a step function
sandbox		monotone_fn_inverter	fn x vectorized	given a monotone function fn no checking is done to verify monotonicity and a set of x values return an linearly interpolated approximation
sandbox		_band2array	a lower symmetric hermitian	take an upper or lower triangular banded matrix and return a numpy array
sandbox		_upper2lower	ub	convert upper triangular banded matrix to lower banded form
sandbox		_lower2upper	lb	convert lower triangular banded matrix to upper banded form
sandbox		_triangle2unit	tb lower	take a banded triangular matrix and return its diagonal and the unit matrix the banded triangular matrix with 1's on the diagonal
sandbox		_trace_symbanded	a b lower	compute the trace ab for two upper or banded real symmetric matrices stored either in either upper or lower form
sandbox		_zero_triband	a lower	explicitly zero out unused elements of a real symmetric banded matrix
sandbox	BSpline	__call__		evaluate the bspline at a given point yielding a matrix b and return
sandbox	BSpline	basis_element	x i d	evaluate a particular basis element of the bspline or its derivative
sandbox	BSpline	basis	x d lower upper	evaluate the basis of the bspline or its derivative
sandbox	BSpline	gram	d	compute gram inner product matrix storing it in lower triangular banded form
sandbox	SmoothingSpline	fit	y x weights pen	fit the smoothing spline to a set of x y pairs
sandbox	SmoothingSpline	gcv		generalized cross-validation score of current fit
sandbox	SmoothingSpline	df_resid		residual degrees of freedom in the fit
sandbox	SmoothingSpline	df_fit		how many degrees of freedom used in the fit? self
sandbox	SmoothingSpline	trace		trace of the smoothing matrix s pen todo addin a reference to wahba and whoever else i used
sandbox	SmoothingSpline	fit_target_df	y x df weights	fit smoothing spline with approximately df degrees of freedom used in the fit i
sandbox	SmoothingSpline	fit_optimize_gcv	y x weights tol	fit smoothing spline trying to optimize gcv
sandbox	RLS	rwexog		whitened exogenous variables augmented with restrictions
sandbox	RLS	inv_rwexog		inverse of self rwexog
sandbox	RLS	rwendog		whitened endogenous variable augmented with restriction parameters
sandbox	RLS	rnorm_cov_params		parameter covariance under restrictions
sandbox	RLS	wrnorm_cov_params		heteroskedasticity-consistent parameter covariance used to calculate white standard errors
sandbox	SUR	_compute_sigma	resids	computes the sigma matrix and update the cholesky decomposition
sandbox	SUR	whiten	X	sur whiten method
sandbox	SUR	fit	igls tol maxiter	igls : bool iterate until estimates converge if sigma is none instead of
sandbox	Sem2SLS	whiten	Y	runs the first stage of the 2sls
sandbox		_model2dataframe	model_endog model_exog model_type	return a series containing the summary of a linear model
sandbox		multiOLS	model dataframe column_list method	apply a linear model to several endogenous variables on a dataframe take a linear model definition via formula and a dataframe that will be
sandbox		_test_group	pvalues group_name group exact	test if the objects in the group are different from the general set
sandbox		multigroup	pvals groups exact keep_all	test if the given groups are different from the total partition
sandbox	Contrast	compute_matrix		construct a contrast matrix c so that colspan(dot d c = colspan(dot(d dot(pinv d t)))
sandbox	Contrast	_get_matrix		this will fail if the formula needs arguments to construct the design
sandbox		contrastfromcols	L D pseudo	from an n x p design matrix d and a matrix l tries to determine a p x q contrast matrix c which
sandbox		logsumexp	a axis	compute the log of the sum of exponentials log(e^{a_1}+ e^{a_n}) of a
sandbox		_isproperdist	X	checks to see if x is a proper probability distribution
sandbox		discretize	X method nbins	discretize x parameters
sandbox		logbasechange	a b	there is a one-to-one transformation of the entropy value from
sandbox		natstobits	X	converts from nats to bits
sandbox		bitstonats	X	converts from bits to nats
sandbox		shannonentropy	px logbase	this is shannon's entropy parameters
sandbox		shannoninfo	px logbase	shannon's information parameters
sandbox		condentropy	px py pxpy logbase	return the conditional entropy of x given y
sandbox		mutualinfo	px py pxpy logbase	returns the mutual information between x and y
sandbox		corrent	px py pxpy logbase	an information theoretic correlation measure
sandbox		covent	px py pxpy logbase	an information theoretic covariance measure
sandbox		renyientropy	px alpha logbase measure	renyi's generalized entropy parameters
sandbox		gencrossentropy	px py pxpy alpha	generalized cross-entropy measures
sandbox	KaplanMeier	fit		calculate the kaplan-meier estimator of the survival function
sandbox	KaplanMeier	plot		plot the estimated survival curves after using this method
sandbox	KaplanMeier	summary		print a set of tables containing the estimates of the survival
sandbox	KaplanMeier	fitting_proc	group	for internal use
sandbox	KaplanMeier	plotting_proc	g	for internal use
sandbox	KaplanMeier	summary_proc	g	for internal use
sandbox	KaplanMeier	test_diff	groups rho weight	test_diff(groups rho=0) test for difference between survival curves
sandbox	Pca	__init__	data names	p x n matrix input
sandbox	Pca	getCovarianceMatrix		returns the covariance matrix for the dataset
sandbox	Pca	getEigensystem		returns a tuple of eigenvalues eigenvectors for the data set
sandbox	Pca	getEnergies		"energies" are just normalized eigenvectors
sandbox	Pca	plot2d	ix iy clf	generates a 2-dimensional plot of the data set and principle components using matplotlib
sandbox	Pca	plot3d	ix iy iz clf	generates a 3-dimensional plot of the data set and principle components using mayavi
sandbox	Pca	sigclip	sigs	clips out all data points that are more than a certain number of standard deviations from the mean
sandbox	Pca	project	vals enthresh nPCs cumen	projects the normalized values onto the components enthresh npcs and cumen determine how many pcs to use
sandbox	Pca	deproject	A normed	input is an n x q array where q <= p
sandbox	Pca	subtractPC	pc vals	pc can be a scalar or any sequence of pc indecies if vals is none the source data is self
sandbox	Term	__pow__	power	raise the quantitative term's values to an integer power i e
sandbox	Term	__str__		'<term %s>' % self termname
sandbox	Term	__add__	other	formula self + formula other
sandbox	Term	__mul__	other	formula self * formula other
sandbox	Term	names		return the names of the columns in design associated to the terms i
sandbox	Term	__call__		return the columns associated to self in a design matrix
sandbox	Factor	__init__	termname keys ordinal	factor is initialized with keys representing all valid levels of the factor
sandbox	Factor	get_columns		calling function for factor instance
sandbox	Factor	values		return the keys of the factor rather than the columns of the design matrix
sandbox	Factor	verify	values	verify that all values correspond to valid keys in self
sandbox	Factor	__add__	other	formula self + formula other when adding 'intercept' to a factor this just returns
sandbox	Factor	main_effect	reference	return the 'main effect' columns of a factor choosing an optional reference key
sandbox	Factor	__getitem__	key	retrieve the column corresponding to key in a formula
sandbox	Quantitative	__call__		a quantitative is just like term except there is an additional transformation self
sandbox	Formula	__init__	termlist namespace	create a formula from either i
sandbox	Formula	__str__		string representation of list of termnames of a formula
sandbox	Formula	__call__		create transpose of the design matrix of the formula within namespace
sandbox	Formula	hasterm	query_term	determine whether a given term is in a formula
sandbox	Formula	termcolumns	query_term dict	return a list of the indices of all columns associated to a given term
sandbox	Formula	names		return a list of the names in the formula the order of the
sandbox	Formula	termnames		return a list of the term names in the formula these
sandbox	Formula	__mul__	other nested	this returns a formula whose columns are the pairwise product of the columns of self and other
sandbox	Formula	__add__	other	return a formula whose columns are the concatenation of the columns of self and other
sandbox	Formula	__sub__	other	return a formula with all terms in other removed from self
sandbox		isnested	A B namespace	is factor b nested within factor a or vice versa a very crude test which depends on the namespace
sandbox		interactions	terms order	output all pairwise interactions of given order of a sequence of terms
sandbox.mcevaluate		mcarma22	niter nsample ar ma	run monte carlo for arma 2 2
sandbox.tsa		arfilter_old	x a	apply an autoregressive filter to a series x x can be 2d a can be 1d 2d or 3d
sandbox.tsa		fftconvolve_old	in1 in2 in3 mode	convolve two n-dimensional arrays using fft see convolve
sandbox.tsa	ArmaFft	padarr	arr maxlag atend	pad 1d array with zeros at end to have length maxlag function that is a method no self used
sandbox.tsa	ArmaFft	pad	maxlag	construct ar and ma polynomials that are zero-padded to a common length
sandbox.tsa	ArmaFft	fftar	n	fourier transform of ar polynomial zero-padded at end to n
sandbox.tsa	ArmaFft	fftma	n	fourier transform of ma polynomial zero-padded at end to n
sandbox.tsa	ArmaFft	fftarma	n	fourier transform of arma polynomial zero-padded at end to n the fourier transform of the arma process is calculated as the ratio
sandbox.tsa	ArmaFft	spd	npos	raw spectral density returns fourier transform n is number of points in positive spectrum the actual number of points
sandbox.tsa	ArmaFft	spdshift	n	power spectral density using fftshift
sandbox.tsa	ArmaFft	spddirect	n	power spectral density using padding to length n done by fft
sandbox.tsa	ArmaFft	_spddirect2	n	this looks bad maybe with an fftshift
sandbox.tsa	ArmaFft	spdroots	w	spectral density for frequency using polynomial roots
sandbox.tsa	ArmaFft	spdroots_	arroots maroots w	spectral density for frequency using polynomial roots
sandbox.tsa	ArmaFft	spdpoly	w nma	spectral density from ma polynomial representation for arma process references
sandbox.tsa	ArmaFft	filter	x	filter a timeseries with the arma filter padding with zero is missing in example i needed the padding to get
sandbox.tsa	ArmaFft	filter2	x pad	filter a time series using fftconvolve3 with arma filter padding of x currently works only if x is 1d
sandbox.tsa	ArmaFft	acf2spdfreq	acovf nfreq w	not really a method just for comparison not efficient for large n or long acf
sandbox.tsa	ArmaFft	invpowerspd	n	autocovariance from spectral density scaling is correct but n needs to be large for numerical accuracy
sandbox.tsa	ArmaFft	spdmapoly	w twosided	ma only need division for ar use lagpolynomial
sandbox.tsa		movorder	x order windsize lag	moving order statistics
sandbox.tsa		check_movorder		graphical test for movorder
sandbox.tsa		movmean	x windowsize lag	moving window mean
sandbox.tsa		movvar	x windowsize lag	moving window variance
sandbox.tsa		movmoment	x k windowsize lag	non-central moment parameters
sandbox.tsa		demean	x axis	return x minus its mean along the specified axis
sandbox.tsa		detrend_mean	x	return x minus the mean x
sandbox.tsa		detrend_none	x	return x no detrending
sandbox.tsa		detrend_linear	y	return y minus best fit line 'linear' detrending
sandbox.tsa		acovf_explicit	ar ma nobs	add correlation of ma representation explicitely
sandbox.tsa		autocorr	s axis	returns the autocorrelation of signal s at all lags adheres to the
sandbox.tsa		norm_corr	x y mode	returns the correlation between two ndarrays by calling np correlate in
sandbox.tsa		pltacorr	x	call signature : acorr(x normed=true detrend=detrend_none usevlines=true
sandbox.tsa		pltxcorr	x y normed detrend	call signature : def xcorr(self x y normed=true detrend=detrend_none
sandbox.tsa		VAR	x B const	multivariate linear filter parameters
sandbox.tsa		VARMA	x B C const	multivariate linear filter x txk
sandbox.tsa		sumofsq	x axis	helper function to calculate sum of squares along first axis
sandbox.tsa	LikelihoodModel	initialize		initialize possibly re-initialize a model instance for
sandbox.tsa	LikelihoodModel	loglike	params	log-likelihood of model
sandbox.tsa	LikelihoodModel	score	params	score vector of model
sandbox.tsa	LikelihoodModel	information	params	fisher information matrix of model returns -hessian of loglike evaluated at params
sandbox.tsa	LikelihoodModel	hessian	params	the hessian matrix of the model
sandbox.tsa	LikelihoodModel	fit	start_params method maxiter tol	fit method for likelihood based models parameters
sandbox.tsa	TSMLEModel	loglike	params	loglikelihood for timeseries model
sandbox.tsa	TSMLEModel	score	params	score vector for arma model
sandbox.tsa	TSMLEModel	hessian	params	hessian of arma model currently uses numdifftools
sandbox.tsa	TSMLEModel	fit	start_params maxiter method tol	estimate model by minimizing negative loglikelihood
sandbox.tsa	Garch0	loglike	params	loglikelihood for timeseries model notes
sandbox.tsa	GarchX	loglike	params	loglikelihood for timeseries model notes
sandbox.tsa	Garch	loglike	params	loglikelihood for timeseries model
sandbox.tsa		gjrconvertparams	params nar nma	flat to matrix
sandbox.tsa	AR	loglike	params	the unconditional loglikelihood of an ar p process notes
sandbox.tsa	AR	information	params	not implemented yet
sandbox.tsa	AR	hessian	params	returns numerical hessian for now depends on numdifftools
sandbox.tsa	AR	fit	start_params method maxiter tol	fit the unconditional maximum likelihood of an ar p process
sandbox.tsa	Arma	loglike	params	loglikelihood for arma model
sandbox.tsa	Arma	score	params	score vector for arma model
sandbox.tsa	Arma	hessian	params	hessian of arma model currently uses numdifftools
sandbox.tsa		generate_kindofgarch	nobs ar ma mu	simulate garch like process but not squared errors in arma
sandbox.tsa		generate_garch	nobs ar ma mu	simulate standard garch
sandbox.tsa		generate_gjrgarch	nobs ar ma mu	simulate gjr garch process
sandbox.tsa		miso_lfilter_old	ar ma x useic	use nd convolution to merge inputs then use lfilter to produce output
sandbox.tsa	Diffusion	simulateW	nobs T dt nrepl	generate sample of wiener process
sandbox.tsa	Diffusion	expectedsim	func nobs T dt	get expectation of a function of a wiener process by simulation
sandbox.tsa	AffineDiffusion	simEM	xzero nobs T dt	from higham 2001
sandbox.tsa	ExactDiffusion	exactprocess	xzero nobs ddt nrepl	ddt : discrete delta t
sandbox.tsa	ArithmeticBrownian	exactprocess	nobs xzero ddt nrepl	ddt : discrete delta t
sandbox.tsa	OUprocess	exactprocess	xzero nobs ddt nrepl	ddt : discrete delta t
sandbox.tsa	OUprocess	fitls	data dt	assumes data is 1d univariate time series
sandbox.tsa	SchwartzOne	exactprocess	xzero nobs ddt nrepl	uses exact solution for log of process
sandbox.tsa	SchwartzOne	fitls	data dt	assumes data is 1d univariate time series
sandbox.tsa.examples		levinson_durbin_nitime	s order isacov	levinson-durbin recursion for autoregressive processes
sandbox.panel	PanelSample	generate_panel		generate endog for a random panel dataset with within correlation
sandbox.panel		corr_equi	k_vars rho	create equicorrelated correlation matrix with rho on off diagonal
sandbox.panel		corr_ar	k_vars ar	create autoregressive correlation matrix
sandbox.panel		corr_arma	k_vars ar ma	create arma correlation matrix
sandbox.panel		corr2cov	corr std	convert correlation matrix to covariance matrix parameters
sandbox.panel		whiten_ar	x ar_coefs	whiten a series of columns according to an ar p covariance structure
sandbox.panel		yule_walker_acov	acov order method df	estimate ar p parameters from acovf using yule-walker equation
sandbox.panel	Unit	_compute_S	D sigma	covariance of observations (nobs_i nobs_i) jp check display (3
sandbox.panel	Unit	_compute_W		inverse covariance of observations (nobs_i nobs_i) jp check display (3
sandbox.panel	Unit	compute_P	Sinv	projection matrix (nobs_i nobs_i) (m in regression ?) jp check guessing display (3
sandbox.panel	Unit	_compute_r	alpha	residual after removing fixed effects display (3
sandbox.panel	Unit	_compute_b	D	coefficients for random effects/coefficients display (3
sandbox.panel	Unit	fit	a D sigma	compute unit specific parameters in laird lange stram (see help unit
sandbox.panel	Unit	compute_xtwy		utility function to compute x^twy (transposed ?) for unit instance
sandbox.panel	Unit	compute_xtwx		utility function to compute x^twx for unit instance
sandbox.panel	Unit	cov_random	D Sinv	approximate covariance of estimates of random effects just after
sandbox.panel	Unit	logL	a ML	individual contributions to the log-likelihood tries to return reml contribution by default though this requires estimated
sandbox.panel	Unit	deviance	ML	deviance defined as 2 times the negative loglikelihood
sandbox.panel	OneWayMixed	_compute_a		fixed effects parameters display (3
sandbox.panel	OneWayMixed	_compute_sigma	ML	estimate sigma if ml is true return the ml estimate of sigma
sandbox.panel	OneWayMixed	_compute_D	ML	estimate random effects covariance d
sandbox.panel	OneWayMixed	cov_fixed		approximate covariance of estimates of fixed effects
sandbox.panel	OneWayMixed	cov_random		estimate random effects covariance d
sandbox.panel	OneWayMixed	params		estimated coefficients for exogeneous variables or fixed effects see _compute_a alias for self
sandbox.panel	OneWayMixed	params_random_units		random coefficients for each unit
sandbox.panel	OneWayMixed	cov_params		estimated covariance for coefficients for exogeneous variables or fixed effects
sandbox.panel	OneWayMixed	bse		standard errors of estimated coefficients for exogeneous variables fixed
sandbox.panel	OneWayMixed	deviance	ML	deviance defined as 2 times the negative loglikelihood
sandbox.panel	OneWayMixed	logL	ML	return log-likelihood reml by default
sandbox.panel	OneWayMixed	cont	ML rtol params_rtol params_atol	convergence check for iterative estimation
sandbox.panel	OneWayMixedResults	plot_random_univariate	bins use_loc	create plot of marginal distribution of random effects parameters
sandbox.panel	OneWayMixedResults	plot_scatter_pairs	idx1 idx2 title ax	create scatter plot of two random effects parameters
sandbox.panel		group	X	returns unique numeric values for groups without sorting
sandbox.panel		repanel_cov	groups sigmas	calculate error covariance matrix for random effects model parameters
sandbox.panel	PanelModel	initialize	endog exog panel time	initialize plain array model
sandbox.panel	PanelModel	_group_mean	X index counts dummies	get group means of x by time or by panel
sandbox.panel	PanelModel	fit	model method effects	method : lsdv demeaned mle gls be fe optional model :
sandbox.panel		kernel	d1 d2 r weights	general product kernel hardcoded split for the example
sandbox.panel		aggregate_cov	x d r weights	sum of outer procuct over groups and time selected by r this is for a generic reference implementation it uses a nobs-nobs double
sandbox.panel		S_all_hac	x d nlags	hac independent of categorical group membership
sandbox.panel		S_within_hac	x d nlags groupidx	hac for observations within a categorical group
sandbox.panel		S_white	x d	simple white heteroscedasticity robust covariance
sandbox.panel		sum_outer_product_loop	x group_iter	sum outerproduct dot(x_i x_i t) over individuals
sandbox.panel		sum_outer_product_balanced	x n_groups	sum outerproduct dot(x_i x_i t) over individuals
sandbox.panel		whiten_individuals_loop	x transform group_iter	apply linear transform for each individual
sandbox.panel	ShortPanelGLS	fit_iterative	maxiter	perform an iterative two-step procedure to estimate the gls model
sandbox.tools	LeaveOneOut	__init__	n	leave-one-out cross validation iterator provides train/test indexes to split data in train test sets
sandbox.tools	LeavePOut	__init__	n p	leave-p-out cross validation iterator provides train/test indexes to split data in train test sets
sandbox.tools	KFold	__init__	n k	k-folds cross validation iterator provides train/test indexes to split data in train test sets
sandbox.tools	LeaveOneLabelOut	__init__	labels	leave-one-label_out cross validation provides train/test indexes to split data in train test sets
sandbox.tools		split	train_indexes test_indexes	for each arg return a train and test subsets defined by indexes provided
sandbox.tools	KStepAhead	__init__	n k start kall	kstepahead cross validation iterator provides train/test indexes to split data in train test sets
sandbox.tools		pca	data keepdim normalize demean	principal components with eigenvector decomposition similar to princomp in matlab
sandbox.tools		pcasvd	data keepdim demean	principal components with svd parameters
sandbox.tools	StatTestMC	run	nrepl statindices dgpargs statsargs	run the actual monte carlo and save results parameters
sandbox.tools	StatTestMC	histogram	idx critval	calculate histogram values does not do any plotting
sandbox.tools	StatTestMC	quantiles	idx frac	calculate quantiles of monte carlo results similar to ppf
sandbox.tools	StatTestMC	cdf	x idx	calculate cumulative probabilities of monte carlo results parameters
sandbox.tools	StatTestMC	plot_hist	idx distpdf bins ax	plot the histogram against a reference distribution
sandbox.tools	StatTestMC	summary_quantiles	idx distppf frac varnames	summary table for quantiles critical values
sandbox.tools	StatTestMC	summary_cdf	idx frac crit varnames	summary table for cumulative density function
sandbox.archive	OneTimeProperty	__init__	func	create a onetimeproperty instance
sandbox.archive	OneTimeProperty	__get__	obj type	this will be called on attribute access on the class or instance
sandbox.archive		tiny2zero	x eps	replace abs values smaller than eps by zero makes copy
sandbox.archive		loglike_ar1	x rho	loglikelihood of ar 1 process as a test case sigma_u partially hard coded
sandbox.archive		ar2transform	x arcoefs	greene eq 12-30
sandbox.archive		mvn_loglike	x sigma	loglike multivariate normal
sandbox.archive		mvn_nloglike_obs	x sigma	loglike multivariate normal
sandbox.archive		acovf_fft	x demean	autocovariance function with call to fftconvolve biased
sandbox.distributions		chi2_pdf	x df	pdf of chi-square distribution
sandbox.distributions		mvstdtprob	a b R df	probability of rectangular area of standard t distribution assumes mean is zero and r is correlation matrix
sandbox.distributions		multivariate_t_rvs	m S df n	generate random variables of multivariate t distribution
sandbox.distributions		copula_bv_indep	u v	independent bivariate copula
sandbox.distributions		copula_bv_min	u v	comonotonic bivariate copula
sandbox.distributions		copula_bv_max	u v	countermonotonic bivariate copula
sandbox.distributions		copula_bv_clayton	u v theta	clayton or cook johnson bivariate copula
sandbox.distributions		copula_bv_frank	u v theta	cook johnson bivariate copula
sandbox.distributions		copula_mv_archimedean	u transform args axis	generic multivariate archimedean copula
sandbox.distributions		copula_bv_ev	u v transform args	generic bivariate extreme value copula
sandbox.distributions		transform_tawn	t a1 a2 theta	asymmetric logistic model of tawn 1988
sandbox.distributions		transform_joe	t a1 a2 theta	asymmetric negative logistic model of joe 1990
sandbox.distributions		transform_tawn2	t theta k	asymmetric mixed model of tawn 1988
sandbox.distributions		transform_bilogistic	t beta delta	bilogistic model of coles and tawn 1994 joe smith and weissman 1992
sandbox.distributions		transform_hr	t lamda	model of huesler reiss 1989
sandbox.distributions		transform_tev	t rho x	t-ev model of demarta and mcneil 2005
sandbox.distributions	CopulaBivariate	cdf	xy args	xx needs to be iterable instead of x y for extension to multivariate
sandbox.distributions		paramstopot	thresh shape scale	transform shape scale for peak over threshold
sandbox.distributions		meanexcess	thresh shape scale	mean excess function of genpareto
sandbox.distributions		ks_2samp	data1 data2	computes the kolmogorov-smirnof statistic on 2 samples
sandbox.distributions		kstest	rvs cdf args N	perform the kolmogorov-smirnov test for goodness of fit this performs a test of the distribution g x of an observed
sandbox.distributions	GOF	wsqu		cramer von mises
sandbox.distributions	GOF	asqu		stephens 1974 doesn't have p-value formula for a^2
sandbox.distributions		asquare	cdfvals axis	vectorized anderson darling a^2 stephens 1974
sandbox.distributions		bootstrap	distr args nobs nrep	monte carlo or parametric bootstrap p-values for gof
sandbox.distributions		bootstrap2	value distr args nobs	monte carlo or parametric bootstrap p-values for gof
sandbox.distributions		_fitstart	x	example method method of moment estimator as starting values
sandbox.distributions		_fitstart_beta	x fixed	method of moment estimator as starting values for beta distribution parameters
sandbox.distributions		_fitstart_poisson	x fixed	maximum likelihood estimator as starting values for poisson distribution parameters
sandbox.distributions		fit_fr	data	estimate distribution parameters by mle taking some parameters as fixed parameters
sandbox.distributions		expect	fn args loc scale	calculate expected value of a function with respect to the distribution location and scale only tested on a few examples
sandbox.distributions		expect_v2	fn args loc scale	calculate expected value of a function with respect to the distribution location and scale only tested on a few examples
sandbox.distributions		expect_discrete	fn args loc lb	calculate expected value of a function with respect to the distribution for discrete distribution
sandbox.distributions		distfitbootstrap	sample distr nrepl	run bootstrap for estimation of distribution parameters
sandbox.distributions		distfitmc	sample distr nrepl distkwds	run monte carlo for estimation of distribution parameters
sandbox.distributions		printresults	sample arg bres kind	calculate and print(bootstrap or monte carlo result
sandbox.distributions		prob_bv_rectangle	lower upper cdf	helper function for probability of a rectangle in a bivariate distribution
sandbox.distributions		prob_mv_grid	bins cdf axis	helper function for probability of a rectangle grid in a multivariate distribution
sandbox.distributions		prob_quantize_cdf	binsx binsy cdf	quantize a continuous distribution given by a cdf
sandbox.distributions		prob_quantize_cdf_old	binsx binsy cdf	quantize a continuous distribution given by a cdf
sandbox.distributions	ParametricMixtureD	__init__	mixing_dist base_dist bd_args_func bd_kwds_func	create a mixture distribution parameters
sandbox.distributions	ClippedContinuous	_get_clip_lower	kwds	helper method to get clip_lower from kwds or attribute
sandbox.distributions		mean_residual_life	x frac alpha	emprirical mean residual life or expected shortfall
sandbox.distributions		gammamomentcond	distfn params mom2 quantile	estimate distribution parameters based method of moments mean variance for distributions with 1 shape parameter and fixed loc=0
sandbox.distributions		gammamomentcond2	distfn params mom2 quantile	estimate distribution parameters based method of moments mean variance for distributions with 1 shape parameter and fixed loc=0
sandbox.distributions		momentcondunbound	distfn params mom2 quantile	moment conditions for estimating distribution parameters using method of moments uses mean variance and one quantile for distributions
sandbox.distributions		momentcondunboundls	distfn params mom2 quantile	moment conditions for estimating loc and scale of a distribution with method of moments using either 2 quantiles or 2 moments not both
sandbox.distributions		momentcondquant	distfn params mom2 quantile	moment conditions for estimating distribution parameters by matching quantiles defines as many moment conditions as quantiles
sandbox.distributions		fitbinned	distfn freq binedges start	estimate parameters of distribution function for binned data using mle parameters
sandbox.distributions		fitbinnedgmm	distfn freq binedges start	estimate parameters of distribution function for binned data using gmm parameters
sandbox.distributions		logmps	params xsorted dist	calculate negative log of product-of-spacings
sandbox.distributions		getstartparams	dist data	get starting values for estimation of distribution parameters
sandbox.distributions		fit_mps	dist data x0	estimate distribution parameters with maximum product-of-spacings
sandbox.distributions		mutualinfo_kde	y x normed	mutual information of two random variables estimated with kde
sandbox.distributions		mutualinfo_kde_2sample	y x normed	mutual information of two random variables estimated with kde
sandbox.distributions		mutualinfo_binned	y x bins normed	mutual information of two random variables estimated with kde notes
sandbox.distributions		pdf_moments_st	cnt	return the gaussian expanded pdf function given the list of central moments first one is mean
sandbox.distributions		pdf_mvsk	mvsk	return the gaussian expanded pdf function given the list of 1st 2nd moment and skew and fisher excess kurtosis
sandbox.distributions		pdf_moments	cnt	return the gaussian expanded pdf function given the list of central moments first one is mean
sandbox.distributions		mvstdnormcdf	lower upper corrcoef	standardized multivariate normal cumulative distribution function this is a wrapper for scipy
sandbox.distributions		mvnormcdf	upper mu cov lower	multivariate normal cumulative distribution function this is a wrapper for scipy
sandbox.distributions		expect_mc	dist func size	calculate expected value of function by monte carlo integration parameters
sandbox.distributions		expect_mc_bounds	dist func size lower	calculate expected value of function by monte carlo integration parameters
sandbox.distributions		bivariate_normal	x mu cov	bivariate gaussian distribution for equal shape *x*, *y*
sandbox.distributions	BivariateNormal	kl	other	kullback-leibler divergence between this and another distribution int f x (log f x - log g x dx
sandbox.distributions	MVElliptical	__init__	mean sigma	initialize instance parameters
sandbox.distributions	MVElliptical	rvs	size	random variable parameters
sandbox.distributions	MVElliptical	logpdf	x	logarithm of probability density function
sandbox.distributions	MVElliptical	cdf	x	cumulative distribution function
sandbox.distributions	MVElliptical	affine_transformed	shift scale_matrix	affine transformation define in subclass because of distribution
sandbox.distributions	MVElliptical	whiten	x	whiten the data by linear transformation parameters
sandbox.distributions	MVElliptical	pdf	x	probability density function
sandbox.distributions	MVElliptical	standardize	x	standardize the random variable i e subtract mean and whiten
sandbox.distributions	MVElliptical	standardized		return new standardized mvnormal instance
sandbox.distributions	MVElliptical	normalize	x	normalize the random variable i e subtract mean and rescale
sandbox.distributions	MVElliptical	normalized	demeaned	return a normalized distribution where sigma=corr
sandbox.distributions	MVElliptical	normalized2	demeaned	return a normalized distribution where sigma=corr
sandbox.distributions	MVElliptical	std		standard deviation square root of diagonal elements of cov
sandbox.distributions	MVElliptical	std_sigma		standard deviation square root of diagonal elements of sigma
sandbox.distributions	MVElliptical	marginal	indices	return marginal distribution for variables given by indices
sandbox.distributions	MVNormal0	whiten	x	whiten the data by linear transformation parameters
sandbox.distributions	MVNormal0	rvs	size	random variable parameters
sandbox.distributions	MVNormal0	pdf	x	probability density function
sandbox.distributions	MVNormal0	logpdf	x	logarithm of probability density function
sandbox.distributions	MVNormal	rvs	size	random variable parameters
sandbox.distributions	MVNormal	logpdf	x	logarithm of probability density function
sandbox.distributions	MVNormal	cdf	x	cumulative distribution function
sandbox.distributions	MVNormal	affine_transformed	shift scale_matrix	return distribution of an affine transform for full rank scale_matrix only
sandbox.distributions	MVNormal	conditional	indices values	return conditional distribution indices are the variables to keep the complement is the conditioning
sandbox.distributions	MVT	__init__	mean sigma df	initialize instance parameters
sandbox.distributions	MVT	rvs	size	random variables with student t distribution parameters
sandbox.distributions	MVT	logpdf	x	logarithm of probability density function
sandbox.distributions	MVT	cdf	x	cumulative distribution function
sandbox.distributions	MVT	affine_transformed	shift scale_matrix	return distribution of a full rank affine transform for full rank scale_matrix only
sandbox.stats	Runs	runs_test	correction	basic version of runs test parameters
sandbox.stats		runstest_1samp	x cutoff correction	use runs test on binary discretized data above/below cutoff parameters
sandbox.stats		runstest_2samp	x y groups correction	wald-wolfowitz runstest for two samples this tests whether two samples come from the same distribution
sandbox.stats	RunsProb	pdf	x k n p	distribution of success runs of length k or more
sandbox.stats		median_test_ksample	x groups	chisquare test for equality of median/location this tests whether all groups have the same fraction of observations
sandbox.stats		cochrans_q	x	cochran's q test for identical effect of k treatments cochran's q is a k-sample extension of the mcnemar test
sandbox.stats		mcnemar	x y exact correction	mcnemar test parameters
sandbox.stats		symmetry_bowker	table	test for symmetry of a k k square contingency table this is an extension of the mcnemar test to test the null hypothesis
sandbox.stats		get_tukeyQcrit	k df alpha	return critical values for tukey's hsd q parameters
sandbox.stats		get_tukeyQcrit2	k df alpha	return critical values for tukey's hsd q parameters
sandbox.stats		Tukeythreegene2	genes	gend is a list ie [first second third]
sandbox.stats		maxzero	x	find all up zero crossings and return the index of the highest not used anymore
sandbox.stats		maxzerodown	x	find all up zero crossings and return the index of the highest not used anymore
sandbox.stats		rejectionline	n alpha	reference line for rejection in multiple tests not used anymore
sandbox.stats		fdrcorrection_bak	pvals alpha method	reject false discovery rate correction for pvalues
sandbox.stats		mcfdr	nrepl nobs ntests ntrue	montecarlo to test fdrcorrection
sandbox.stats		randmvn	rho size standardize	create random draws from equi-correlated multivariate normal distribution
sandbox.stats		tiecorrect	xranks	should be equivalent of scipy stats tiecorrect
sandbox.stats	GroupsStats	__init__	x useranks uni intlab	descriptive statistics by groups parameters
sandbox.stats	TukeyHSDResults	summary		summary table that can be printed
sandbox.stats	TukeyHSDResults	_simultaneous_ci		compute simultaneous confidence intervals for comparison of means
sandbox.stats	TukeyHSDResults	plot_simultaneous	comparison_name ax figsize xlabel	plot a universal confidence interval of each group mean visiualize significant differences in a plot with one confidence
sandbox.stats	MultiComparison	getranks		convert data to rankdata and attach this creates rankdata as it is used for non-parametric tests where
sandbox.stats	MultiComparison	kruskal	pairs multimethod	pairwise comparison for kruskal-wallis test this is just a reimplementation of scipy
sandbox.stats	MultiComparison	allpairtest	testfunc alpha method pvalidx	run a pairwise test on all pairs with multiple test correction the statistical test given in testfunc is calculated for all pairs
sandbox.stats	MultiComparison	tukeyhsd	alpha	tukey's range test to compare means of all pairs of groups parameters
sandbox.stats		rankdata	x	rankdata equivalent to scipy stats rankdata
sandbox.stats		compare_ordered	vals alpha	simple ordered sequential comparison of means
sandbox.stats		varcorrection_unbalanced	nobs_all srange	correction factor for variance with unequal sample sizes this is just a harmonic mean
sandbox.stats		varcorrection_pairs_unbalanced	nobs_all srange	correction factor for variance with unequal sample sizes for all pairs this is just a harmonic mean
sandbox.stats		varcorrection_unequal	var_all nobs_all df_all	return joint variance from samples with unequal variances and unequal sample sizes
sandbox.stats		varcorrection_pairs_unequal	var_all nobs_all df_all	return joint variance from samples with unequal variances and unequal sample sizes for all pairs
sandbox.stats		tukeyhsd	mean_all nobs_all var_all df	simultaneous tukey hsd check instead of sorting i use absolute value of pairwise differences
sandbox.stats		simultaneous_ci	q_crit var groupnobs pairindices	compute simultaneous confidence intervals for comparison of means
sandbox.stats		distance_st_range	mean_all nobs_all var_all df	pairwise distance matrix outsourced from tukeyhsd
sandbox.stats		contrast_allpairs	nm	contrast or restriction matrix for all pairs of nm variables
sandbox.stats		contrast_all_one	nm	contrast or restriction matrix for all against first comparison
sandbox.stats		contrast_diff_mean	nm	contrast or restriction matrix for all against mean comparison
sandbox.stats		multicontrast_pvalues	tstat tcorr df dist	pvalues for simultaneous tests
sandbox.stats	StepDown	get_distance_matrix		studentized range statistic
sandbox.stats	StepDown	check_set	indices	check whether pairwise distances of indices satisfy condition
sandbox.stats	StepDown	run	alpha	main function to run the test
sandbox.stats		homogeneous_subsets	vals dcrit	recursively check all pairs of vals for minimum distance step down method as in newman-keuls and ryan procedures
sandbox.stats		set_partition	ssli	extract a partition from a list of tuples this should be correctly called select largest disjoint sets
sandbox.stats		set_remove_subs	ssli	remove sets that are subsets of another set from a list of tuples parameters
sandbox.stats		quantiles	a prob alphap betap	computes empirical quantiles for a data array
sandbox.stats		scoreatpercentile	data per limit alphap	calculate the score at the given 'per' percentile of the sequence a
sandbox.stats		plotting_positions	data alpha beta axis	returns the plotting positions or empirical percentile points for the data
sandbox.stats		plotting_positions_w1d	data weights alpha beta	weighted plotting positions or empirical percentile points for the data
sandbox.stats		edf_normal_inverse_transformed	x alpha beta axis	rank based normal inverse transformed cdf
sandbox.stats		scoreatpercentile	data percentile	return the score at the given percentile of the data
sandbox.stats		percentileofscore	data score	return the percentile-position of score relative to data
sandbox.stats		empiricalcdf	data method	return the empirical cdf
sandbox.stats	HistDist	empiricalcdf	data method	return the empirical cdf
sandbox.stats	HistDist	cdf_emp	score	this is score in dh
sandbox.stats	HistDist	ppf_emp	quantile	this is score in dh
sandbox.stats	HistDist	optimize_binning	method	find the optimal number of bins and update the bin countaccordingly
sandbox.stats		contrast_allpairs	nm	contrast or restriction matrix for all pairs of nm variables
sandbox.stats		contrast_all_one	nm	contrast or restriction matrix for all against first comparison
sandbox.stats		contrast_diff_mean	nm	contrast or restriction matrix for all against mean comparison
sandbox.stats		contrast_product	names1 names2 intgroup1 intgroup2	build contrast matrices for products of two categorical variables this is an experimental script and should be converted to a class
sandbox.stats		dummy_1d	x varname	dummy variable for id integer groups paramters
sandbox.stats		dummy_product	d1 d2 method	dummy variable from product of two dummy variables parameters
sandbox.stats		dummy_limits	d	start and endpoints of groups in a sorted dummy variable array helper function for nested categories
sandbox.stats		dummy_nested	d1 d2 method	unfinished and incomplete mainly copy past dummy_product dummy variable from product of two dummy variables
sandbox.stats	DummyTransform	__init__	d1 d2	c such that d1 c = d2 with d1 = x d2 = z
sandbox.stats	DummyTransform	dot_left	a	b = c a
sandbox.stats	DummyTransform	dot_right	x	z = x c
sandbox.stats	DummyTransform	inv_dot_left	b	a = c^{-1} b
sandbox.stats	DummyTransform	inv_dot_right	z	x = z c^{-1}
sandbox.stats		groupmean_d	x d	groupmeans using dummy variables parameters
sandbox.stats	TwoWay	r_nointer		contrast/restriction matrix for no interaction
sandbox.stats	TwoWay	ttest_interaction		ttests for no-interaction terms are zero
sandbox.stats	TwoWay	ftest_interaction		ttests for no-interaction terms are zero
sandbox.stats	CompareCox	run	results_x results_z attach	run cox test for non-nested models parameters
sandbox.stats	CompareJ	run	results_x results_z attach	run j-test for non-nested models parameters
sandbox.stats		acorr_ljungbox	x lags boxpierce	ljung-box test for no autocorrelation parameters
sandbox.stats		acorr_lm	x maxlag autolag store	lagrange multiplier tests for autocorrelation this is a generic lagrange multiplier test for autocorrelation
sandbox.stats		het_arch	resid maxlag autolag store	engle's test for autoregressive conditional heteroscedasticity arch parameters
sandbox.stats		acorr_breusch_godfrey	results nlags store	breusch godfrey lagrange multiplier tests for residual autocorrelation parameters
sandbox.stats		het_breuschpagan	resid exog_het	breusch-pagan lagrange multiplier test for heteroscedasticity the tests the hypothesis that the residual variance does not depend on
sandbox.stats		het_white	resid exog retres	white's lagrange multiplier test for heteroscedasticity parameters
sandbox.stats		_het_goldfeldquandt2_old	y x idx split	test whether variance is the same in 2 subsamples parameters
sandbox.stats	HetGoldfeldQuandt	run	y x idx split	see class docstring
sandbox.stats		linear_harvey_collier	res	harvey collier test for linearity the null hypothesis is that the regression is correctly modeled as linear
sandbox.stats		linear_rainbow	res frac	rainbow test for linearity the null hypothesis is that the regression is correctly modelled as linear
sandbox.stats		linear_lm	resid exog func	lagrange multiplier test for linearity against functional alternative limitations assumes currently that the first column is integer
sandbox.stats		_neweywestcov	resid x	did not run yet from regstats2 ::
sandbox.stats		_recursive_olsresiduals2	olsresults skip	this is my original version based on greene and references
sandbox.stats		recursive_olsresiduals	olsresults skip lamda alpha	calculate recursive ols with residuals and cusum test statistic parameters
sandbox.stats		breaks_hansen	olsresults	test for model stability breaks in parameters for ols hansen 1992 parameters
sandbox.stats		breaks_cusumolsresid	olsresidual ddof	cusum test for parameter stability based on ols residuals parameters
sandbox.stats		breaks_AP	endog exog skip	suplm explm and avelm by andrews and andrews ploberger p-values by b hansen
sandbox.stats	StatTestMC	run	nrepl statindices dgpargs statsargs	run the actual monte carlo and save results
sandbox.stats	StatTestMC	histogram	idx critval	calculate histogram values
sandbox.stats	StatTestMC	quantiles	idx frac	calculate quantiles of monte carlo results
sandbox.nonparametric		fg1	x	fan and gijbels example function 1
sandbox.nonparametric		fg1eu	x	eubank similar to fan and gijbels example function 1
sandbox.nonparametric		fg2	x	fan and gijbels example function 2
sandbox.nonparametric		func1	x	made up example with sin square
sandbox.nonparametric	_UnivariateFunction	plot	scatter ax	plot the mean function and optionally the scatter of the sample parameters
sandbox.nonparametric	NdKernel	getH		getter for kernel bandwidth h
sandbox.nonparametric	NdKernel	setH	value	setter for kernel bandwidth h
sandbox.nonparametric	NdKernel	_kernweight	x	returns the kernel weight for the independent multivariate kernel
sandbox.nonparametric	NdKernel	__call__	x	this simply returns the value of the kernel function at x
sandbox.nonparametric	CustomKernel	__init__	shape h domain norm	shape should be a function taking and returning numeric type
sandbox.nonparametric	CustomKernel	geth		getter for kernel bandwidth h
sandbox.nonparametric	CustomKernel	seth	value	setter for kernel bandwidth h
sandbox.nonparametric	CustomKernel	in_domain	xs ys x	returns the filtered xs ys based on the kernel domain centred on x
sandbox.nonparametric	CustomKernel	density	xs x	returns the kernel density estimate for point x based on x-values
sandbox.nonparametric	CustomKernel	density_var	density nobs	approximate pointwise variance for kernel density not verified
sandbox.nonparametric	CustomKernel	density_confint	density nobs alpha	approximate pointwise confidence interval for kernel density the confidence interval is centered at the estimated density and
sandbox.nonparametric	CustomKernel	smooth	xs ys x	returns the kernel smoothing estimate for point x based on x-values xs and y-values ys
sandbox.nonparametric	CustomKernel	smoothvar	xs ys x	returns the kernel smoothing estimate of the variance at point x
sandbox.nonparametric	CustomKernel	smoothconf	xs ys x alpha	returns the kernel smoothing estimate with confidence 1sigma bounds
sandbox.nonparametric	CustomKernel	L2Norm		returns the integral of the square of the kernal from -inf to inf
sandbox.nonparametric	CustomKernel	norm_const		normalising constant for kernel integral from -inf to inf
sandbox.nonparametric	CustomKernel	kernel_var		returns the second moment of the kernel
sandbox.nonparametric	CustomKernel	normal_reference_constant		constant used for silverman normal reference asymtotic bandwidth calculation
sandbox.nonparametric	CustomKernel	weight	x	this returns the normalised weight at distance x
sandbox.nonparametric	CustomKernel	__call__	x	this simply returns the value of the kernel function at x
sandbox.nonparametric	Biweight	smooth	xs ys x	returns the kernel smoothing estimate for point x based on x-values xs and y-values ys
sandbox.nonparametric	Biweight	smoothvar	xs ys x	returns the kernel smoothing estimate of the variance at point x
sandbox.nonparametric	Biweight	smoothconf_	xs ys x	returns the kernel smoothing estimate with confidence 1sigma bounds
sandbox.nonparametric	Gaussian	smooth	xs ys x	returns the kernel smoothing estimate for point x based on x-values xs and y-values ys
sandbox.nonparametric		inner_cont	polys lower upper weight	inner product of continuous function (with weight=1) parameters
sandbox.nonparametric		is_orthonormal_cont	polys lower upper rtol	check whether functions are orthonormal parameters
sandbox.nonparametric	DensityOrthoPoly	fit	x polybase order limits	estimate the orthogonal polynomial approximation to the density
sandbox.nonparametric	DensityOrthoPoly	__call__	xeval	alias for evaluate except no order argument
sandbox.nonparametric	DensityOrthoPoly	_verify		check for bona fide density correction
sandbox.nonparametric	DensityOrthoPoly	_correction	x	bona fide density correction
sandbox.nonparametric	DensityOrthoPoly	_transform	x	transform observation to the domain of the density
sandbox.nonparametric	SingleIndexModel	__repr__		provide something sane to print
sandbox.nonparametric	SemiLinear	_est_b_bw		computes the beta coefficients and the bandwidths
sandbox.nonparametric	SemiLinear	cv_loo	params	similar to the cross validation leave-one-out estimator
sandbox.nonparametric	SemiLinear	fit	exog_predict exog_nonparametric_predict	computes fitted values and marginal effects
sandbox.nonparametric	SemiLinear	__repr__		provide something sane to print
sandbox.nonparametric	KernelSmoother	predict	x	returns the kernel smoothed prediction at x if x is a real number then a single value is returned
sandbox.nonparametric	KernelSmoother	conf	x	returns the fitted curve and 1-sigma upper and lower point-wise confidence
sandbox.nonparametric	PolySmoother	df_fit		alias of df_model for backwards compatibility
sandbox.nonparametric	PolySmoother	df_model		degrees of freedom used in the fit
sandbox.nonparametric	PolySmoother	smooth		alias for fit for backwards compatibility
sandbox.nonparametric	PolySmoother	df_resid		residual degrees of freedom from last fit
sandbox.examples		_ll_nbp	y X beta alph	negative binomial log-likelihood -- type p references
sandbox.examples		_ll_nb1	y X beta alph	negative binomial regression type 1 likelihood
sandbox.examples		_ll_nb2	y X beta alph	negative binomial regression type 2 likelihood
sandbox.examples		_ll_nbt	y X beta alph	negative binomial truncated truncated densities for count models (cameron & trivedi 2005 680):
sandbox.examples		_score_nbp	y X beta thet	negative binomial score -- type p likelihood from greene 2007
sandbox.regression		data2dummy	x returnall	convert array of categories to dummy variables
sandbox.regression		data2proddummy	x	creates product dummy variables from 2 columns of 2d array
sandbox.regression		data2groupcont	x1 x2	create dummy continuous variable
sandbox.regression		anovadict	res	update regression results dictionary with anova specific statistics
sandbox.regression		form2design	ss data	convert string formula to data dictionary ss : string
sandbox.regression		dropname	ss li	drop names from a list of strings
sandbox.regression	TryCLogit	xbetas	params	these are the v_i
sandbox.regression	TryNCLogit	xbetas	params	these are the v_i
sandbox.regression	RU2NMNL	calc_prob	tree keys	walking a tree bottom-up based on dictionary
sandbox.regression		pdf	x mu sigma	return the probability density function as an expression in x
sandbox.regression		cdf	x mu sigma	return the cumulative density function as an expression in x
sandbox.regression	TheilRegressionResults	hatmatrix_diag		diag(x' xpxi x) where xpxi = (x'x + lambd * sigma_prior)^{-1}
sandbox.regression		norm_lls	y params	normal loglikelihood given observations and mean mu and variance sigma2
sandbox.regression		norm_lls_grad	y params	jacobian of normal loglikelihood wrt mean mu and variance sigma2
sandbox.regression		mean_grad	x beta	gradient/jacobian for d (x*beta)/ d beta
sandbox.regression		normgrad	y x params	jacobian of normal loglikelihood wrt mean mu and variance sigma2
sandbox.regression		tstd_lls	y params df	t loglikelihood given observations and mean mu and variance sigma2 = 1
sandbox.regression		norm_dlldy	y	derivative of log pdf of standard normal with respect to y
sandbox.regression		ts_dlldy	y df	derivative of log pdf of standardized (?) t with respect to y
sandbox.regression		tstd_pdf	x df	pdf for standardized not standard t distribution variance is one
sandbox.regression		ts_lls	y params df	t loglikelihood given observations and mean mu and variance sigma2 = 1 parameters
sandbox.regression		ts_dlldy	y df	derivative of log pdf of standard t with respect to y
sandbox.regression		tstd_dlldy	y df	derivative of log pdf of standardized t with respect to y
sandbox.regression		locscale_grad	y loc scale dlldy	derivative of log-likelihood with respect to location and scale parameters
sandbox.regression		data2dummy	x returnall	convert array of categories to dummy variables
sandbox.regression		data2proddummy	x	creates product dummy variables from 2 columns of 2d array
sandbox.regression		data2groupcont	x1 x2	create dummy continuous variable
sandbox.regression		anovadict	res	update regression results dictionary with anova specific statistics
sandbox.regression		form2design	ss data	convert string formula to data dictionary ss : string
sandbox.regression		dropname	ss li	drop names from a list of strings
sandbox.regression	OneWayLS	fitbygroups		fit ols regression for each group separately
sandbox.regression	OneWayLS	fitjoint		fit a joint fixed effects model to all observations the regression results are attached as lsjoint
sandbox.regression	OneWayLS	fitpooled		fit the pooled model which assumes there are no differences across groups
sandbox.regression	OneWayLS	ftest_summary		run all ftests on the joint model returns
sandbox.regression	OneWayLS	print_summary	res	printable string of summary
sandbox.regression	OneWayLS	lr_test		generic likelihood ration test between nested models egin{align} d & = -2(\ln( ext{likelihood for null model}) - \ln( ext{likelihood for alternative model})) \ & = -2\ln\left( rac{ ext{likelihood for null model}}{ ext{likelihood for alternative model}}
sandbox.regression		maxabs	x	just a shortcut to np abs x max()
sandbox.regression	IV2SLS	fit		estimate model using 2sls iv regression returns
sandbox.regression	IV2SLS	predict	params exog	return linear predicted values from a design matrix
sandbox.regression	IVRegressionResults	spec_hausman	dof	hausman's specification test
sandbox.regression	IVRegressionResults	summary	yname xname title alpha	summarize the regression results parameters
sandbox.regression	GMM	__init__	endog exog instrument k_moms	maybe drop and use mixin instead
sandbox.regression	GMM	fit	start_params maxiter inv_weights weights_method	estimate parameters using gmm and return gmmresults todo weight and covariance arguments still need to be made consistent
sandbox.regression	GMM	fitgmm	start weights optim_method optim_args	estimate parameters using gmm parameters
sandbox.regression	GMM	fitgmm_cu	start optim_method optim_args	estimate parameters using continuously updating gmm parameters
sandbox.regression	GMM	gmmobjective	params weights	objective function for gmm minimization
sandbox.regression	GMM	gmmobjective_cu	params weights_method wargs	objective function for continuously updating gmm minimization
sandbox.regression	GMM	fititer	start maxiter start_invweights weights_method	iterative estimation with updating of optimal weighting matrix stopping criteria are maxiter or change in parameter estimate less
sandbox.regression	GMM	calc_weightmatrix	moms weights_method wargs params	calculate omega or the weighting matrix parameters
sandbox.regression	GMM	momcond_mean	params	mean of moment conditions
sandbox.regression	GMM	gradient_momcond	params epsilon centered	gradient of moment conditions parameters
sandbox.regression	GMMResults	calc_cov_params	moms gradmoms weights use_weights	calculate covariance of parameter estimates not all options tried out yet
sandbox.regression	GMMResults	bse_		standard error of the parameter estimates
sandbox.regression	GMMResults	get_bse		standard error of the parameter estimates with options
sandbox.regression	GMMResults	compare_j	other	overidentification test for comparing two nested gmm estimates this assumes that some moment restrictions have been dropped in one
sandbox.regression	GMMResults	summary	yname xname title alpha	summarize the regression results parameters
sandbox.regression	LinearIVGMM	fitgmm	start weights optim_method	estimate parameters using gmm for linear model uses closed form expression instead of nonlinear optimizers
sandbox.regression		spec_hausman	params_e params_i cov_params_e cov_params_i	hausmans specification test parameters
sandbox.regression	DistQuantilesGMM	momcond	params	moment conditions for estimating distribution parameters by matching quantiles defines as many moment conditions as quantiles
sandbox.regression	DistQuantilesGMM	fitonce	start weights has_optimal_weights	fit without estimating an optimal weighting matrix and return results this is a convenience function that calls fitgmm and covparams with
sandbox.regression		groupstatsbin	factors values	uses np bincount assumes factors/labels are integers
sandbox.regression		convertlabels	ys indices	convert labels based on multiple variables or string labels to unique index labels 0 1 2
sandbox.regression		groupsstats_1d	y x labelsunique	use ndimage to get fast mean and variance
sandbox.regression		randintw	w size	generate integer random variables given probabilties useful because it can be used as index into any array or sequence type
sandbox.regression		getbranches	tree	walk tree to get list of branches
sandbox.regression		getnodes	tree	walk tree to get list of branches and list of leaves
sandbox.regression	RU2NMNL	get_probs	params	obtain the probability array given an array of parameters this is the function that can be called by loglike or other methods
sandbox.regression	RU2NMNL	calc_prob	tree parent	walking a tree bottom-up based on dictionary
sandbox.regression		branch	tree	walking a tree bottom-up
sandbox.regression		branch2	tree	walking a tree bottom-up based on dictionary
sandbox.regression		plt_closeall	n	close a number of open matplotlib windows
sandbox.regression	GaussProcess	fit	y	fit the training explanatory variables to a sample ouput variable
sandbox.regression	GaussProcess	predict	x	predict new y values for a given array of explanatory variables
sandbox.regression	GaussProcess	plot	y plt	some basic plots
sandbox.regression		atleast_2dcol	x	convert array_like to 2d from 1d or 0d
sandbox.regression		wls_prediction_std	res exog weights alpha	calculate standard deviation and confidence interval for prediction applies to wls and ols not to general gls
sandbox.datarich	FactorModelUnivariate	calc_factors	x keepdim addconst	get factor decomposition of exogenous variables this uses principal component analysis to obtain the factors
sandbox.datarich	FactorModelUnivariate	fit_find_nfact	maxfact skip_crossval cv_iter	estimate the model and selection criteria for up to maxfact factors the selection criteria that are calculated are aic bic and r2_adj
sandbox.datarich	FactorModelUnivariate	summary_find_nfact		provides a summary for the selection of the number of factors
regression	GLSHet	iterative_fit	maxiter	perform an iterative two-step procedure to estimate a wls model
regression		_dot	x y	returns the dot product of the arrays works for sparse and dense
regression		_multi_dot_three	A B C	find best ordering for three arrays and do the multiplication
regression		_dotsum	x y	returns sum(x * y), where '*' is the pointwise product computed efficiently for dense and sparse matrices
regression		_get_exog_re_names	exog_re	passes through if given a list of names otherwise gets pandas names
regression	MixedLMParams	from_packed	params k_fe k_re use_sqrt	create a mixedlmparams object from packed parameter vector
regression	MixedLMParams	from_components	fe_params cov_re cov_re_sqrt vcomp	create a mixedlmparams object from each parameter component
regression	MixedLMParams	copy		returns a copy of the object
regression	MixedLMParams	get_packed	use_sqrt has_fe	return the model parameters packed into a single vector
regression		_smw_solver	s A AtA BI	solves the system (s*i + a*b*a') * x = rhs for an arbitrary rhs
regression		_smw_logdet	s A AtA BI	returns the log determinant of s*i + a*b*a'
regression	MixedLM	_make_param_names	exog_re	returns the full parameter names list just the exogenous random effects variables and the exogenous random effects variables with
regression	MixedLM	from_formula	cls formula data re_formula	create a model from a formula and dataframe
regression	MixedLM	predict	params exog	return predicted values from a design matrix
regression	MixedLM	group_list	array	returns array split into subarrays corresponding to the grouping structure
regression	MixedLM	fit_regularized	start_params method alpha ceps	fit a model in which the fixed effects parameters are penalized
regression	MixedLM	get_fe_params	cov_re vcomp	use gls to update the fixed effects parameter estimates
regression	MixedLM	_reparam		returns parameters of the map converting parameters from the form used in optimization to the form returned to the user
regression	MixedLM	_expand_vcomp	vcomp group	replicate variance parameters to match a group's design
regression	MixedLM	_augment_exog	group_ix	concatenate the columns for variance components to the columns for other random effects to obtain a single random effects
regression	MixedLM	loglike	params profile_fe	evaluate the profile log-likelihood of the linear mixed effects model
regression	MixedLM	_gen_dV_dPar	ex_r solver group max_ix	a generator that yields the element-wise derivative of the marginal covariance matrix with respect to the random effects
regression	MixedLM	score	params profile_fe	returns the score vector of the profile log-likelihood
regression	MixedLM	score_full	params calc_fe	returns the score with respect to untransformed parameters
regression	MixedLM	score_sqrt	params calc_fe	returns the score with respect to transformed parameters
regression	MixedLM	hessian	params	returns the model's hessian matrix
regression	MixedLM	get_scale	fe_params cov_re vcomp	returns the estimated error variance based on given estimates of the slopes and random effects covariance matrix
regression	MixedLM	fit	start_params reml niter_sa do_cg	fit a linear mixed model to the data
regression	MixedLMResults	fittedvalues		returns the fitted values for the model
regression	MixedLMResults	resid		returns the residuals for the model
regression	MixedLMResults	bse_fe		returns the standard errors of the fixed effect regression coefficients
regression	MixedLMResults	bse_re		returns the standard errors of the variance parameters note
regression	MixedLMResults	random_effects		the conditional means of random effects given the data
regression	MixedLMResults	random_effects_cov		returns the conditional covariance matrix of the random effects for each group given the data
regression	MixedLMResults	t_test	r_matrix scale use_t	compute a t-test for a each linear hypothesis of the form rb = q parameters
regression	MixedLMResults	summary	yname xname_fe xname_re title	summarize the mixed model regression results
regression	MixedLMResults	profile_re	re_ix vtype num_low dist_low	profile-likelihood inference for variance parameters
regression	_MinimalWLS	fit	method	minimal implementation of wls optimized for performance
regression		_get_sigma	sigma nobs	returns sigma matrix nobs by nobs for gls and the inverse of its cholesky decomposition
regression	RegressionModel	df_model		the model degree of freedom defined as the rank of the regressor matrix minus 1 if a constant is included
regression	RegressionModel	df_resid		the residual degree of freedom defined as the number of observations minus the rank of the regressor matrix
regression	RegressionModel	fit	method cov_type cov_kwds use_t	full fit of the model
regression	RegressionModel	predict	params exog	return linear predicted values from a design matrix
regression	RegressionModel	get_distribution	params scale exog dist_class	returns a random number generator for the predictive distribution
regression	GLS	whiten	X	gls whiten method
regression	GLS	loglike	params	returns the value of the gaussian log-likelihood function at params
regression	GLS	hessian_factor	params scale observed	weights for calculating hessian parameters
regression	WLS	whiten	X	whitener for wls model multiplies each column by sqrt self weights
regression	WLS	loglike	params	returns the value of the gaussian log-likelihood function at params
regression	WLS	hessian_factor	params scale observed	weights for calculating hessian parameters
regression	OLS	loglike	params scale	the likelihood function for the ols model
regression	OLS	whiten	Y	ols model whitener does nothing returns y
regression	OLS	score	params scale	evaluate the score function at a given point
regression	OLS	hessian	params scale	evaluate the hessian function at a given point
regression	OLS	hessian_factor	params scale observed	weights for calculating hessian parameters
regression	OLS	_fit_ridge	alpha	fit a linear model using ridge regression
regression	GLSAR	iterative_fit	maxiter rtol	perform an iterative two-stage procedure to estimate a gls model
regression	GLSAR	whiten	X	whiten a series of columns according to an ar p covariance structure
regression		yule_walker	X order method df	estimate ar p parameters from a sequence x using yule-walker equation
regression	RegressionResults	conf_int	alpha cols	returns the confidence interval of the fitted parameters
regression	RegressionResults	eigenvals		return eigenvalues sorted in decreasing order
regression	RegressionResults	condition_number		return condition number of exogenous matrix
regression	RegressionResults	cov_HC0		see statsmodels regressionresults
regression	RegressionResults	cov_HC1		see statsmodels regressionresults
regression	RegressionResults	cov_HC2		see statsmodels regressionresults
regression	RegressionResults	cov_HC3		see statsmodels regressionresults
regression	RegressionResults	HC0_se		see statsmodels regressionresults
regression	RegressionResults	HC1_se		see statsmodels regressionresults
regression	RegressionResults	HC2_se		see statsmodels regressionresults
regression	RegressionResults	HC3_se		see statsmodels regressionresults
regression	RegressionResults	resid_pearson		residuals normalized to have unit variance
regression	RegressionResults	compare_lm_test	restricted demean use_lr	use lagrange multiplier test to test whether restricted model is correct parameters
regression	RegressionResults	compare_f_test	restricted	use f test to test whether restricted model is correct parameters
regression	RegressionResults	compare_lr_test	restricted large_sample	likelihood ratio test to test whether restricted model is correct parameters
regression	RegressionResults	get_robustcov_results	cov_type use_t	create new results instance with robust covariance as default parameters
regression	RegressionResults	summary	yname xname title alpha	summarize the regression results parameters
regression	RegressionResults	summary2	yname xname title alpha	experimental summary function to summarize the regression results parameters
regression	OLSResults	get_influence		get an instance of influence with influence and outlier measures returns
regression	OLSResults	outlier_test	method alpha	test observations for outliers according to method parameters
regression	OLSResults	el_test	b0_vals param_nums return_weights ret_params	tests single or joint hypotheses of the regression parameters using empirical likelihood
regression	OLSResults	conf_int_el	param_num sig upper_bound lower_bound	computes the confidence interval for the parameter given by param_num using empirical likelihood
regression	QuantReg	whiten	data	quantreg model whitener does nothing returns data
regression	QuantReg	fit	q vcov kernel bandwidth	solve by iterative weighted least squares parameters
regression	QuantRegResults	summary	yname xname title alpha	summarize the regression results parameters
regression	PredictionResults	conf_int	obs alpha	returns the confidence interval of the value effect of the constraint
regression		get_prediction	exog transform weights row_labels	compute prediction results parameters
regression	RecursiveLS	from_formula	cls formula data subset	not implemented for state space models
regression	RecursiveLS	fit		fits the model by application of the kalman filter
regression	RecursiveLS	update	params	update the parameters of the model updates the representation matrices to fill in the new parameter
regression	RecursiveLSResults	recursive_coefficients		estimates of regression coefficients recursively estimated
regression	RecursiveLSResults	resid_recursive		recursive residuals returns
regression	RecursiveLSResults	cusum		cumulative sum of standardized recursive residuals statistics returns
regression	RecursiveLSResults	cusum_squares		cumulative sum of squares of standardized recursive residuals statistics
regression	RecursiveLSResults	plot_recursive_coefficient	variables alpha legend_loc fig	plot the recursively estimated coefficients on a given variable parameters
regression	RecursiveLSResults	plot_cusum	alpha legend_loc fig figsize	plot the cusum statistic and significance bounds
regression	RecursiveLSResults	plot_cusum_squares	alpha legend_loc fig figsize	plot the cusum of squares statistic and significance bounds
emplike	OptAFT	_opt_wtd_nuis_regress	test_vals	a function that is optimized over nuisance parameters to conduct a hypothesis test for the parameters of interest
emplike	OptAFT	_EM_test	nuisance_params params param_nums b0_vals	uses em algorithm to compute the maximum likelihood of a test parameters
emplike	OptAFT	_ci_limits_beta	b0 param_num	returns the difference between the log likelihood for a parameter and some critical value
emplike	emplikeAFT	_is_tied	endog censors	indicated if an observation takes the same value as the next ordered observation
emplike	emplikeAFT	_km_w_ties	tie_indic untied_km	computes km estimator value at each observation taking into acocunt ties in the data
emplike	emplikeAFT	_make_km	endog censors	computes the kaplan-meier estimate for the weights in the aft model parameters
emplike	emplikeAFT	fit		fits an aft model and returns results instance parameters
emplike	AFTResults	params		fits an aft model and returns parameters
emplike	AFTResults	test_beta	b0_vals param_nums ftol maxiter	returns the profile log likelihood for regression parameters 'param_num' at 'b0_vals
emplike	AFTResults	ci_beta	param_num beta_high beta_low sig	returns the confidence interval for a regression parameter in the aft model
emplike	ELOriginRegress	fit		fits the model and provides regression results
emplike	OriginResults	el_test	b0_vals param_nums method stochastic_exog	returns the llr and p-value for a hypothesized parameter value for a regression that goes through the origin
emplike	OriginResults	conf_int_el	param_num upper_bound lower_bound sig	returns the confidence interval for a regression parameter when the regression is forced through the origin
emplike	_ELRegOpts	_opt_nuis_regress	nuisance_params param_nums endog exog	a function that is optimized over nuisance parameters to conduct a hypothesis test for the parameters of interest
emplike		DescStat	endog	returns an instance to conduct inference on descriptive statistics via empirical likelihood
emplike	_OptFuncts	_log_star	eta est_vect weights nobs	transforms the log of observation probabilities in terms of the lagrange multiplier to the log 'star' of the probabilities
emplike	_OptFuncts	_hess	eta est_vect weights nobs	calculates the hessian of a weighted empirical likelihood problem
emplike	_OptFuncts	_grad	eta est_vect weights nobs	calculates the gradient of a weighted empirical likelihood
emplike	_OptFuncts	_modif_newton	eta est_vect weights	modified newton's method for maximizing the log 'star' equation this
emplike	_OptFuncts	_find_eta	eta	finding the root of sum xi-h0 /(1+eta xi-mu solves for eta when computing elr for univariate mean
emplike	_OptFuncts	_ci_limits_mu	mu	calculates the difference between the log likelihood of mu_test and a specified critical value
emplike	_OptFuncts	_find_gamma	gamma	finds gamma that satisfies
emplike	_OptFuncts	_opt_var	nuisance_mu pval	this is the function to be optimized over a nuisance mean parameter
emplike	_OptFuncts	_ci_limits_var	var	used to determine the confidence intervals for the variance
emplike	_OptFuncts	_opt_skew	nuis_params	called by test_skew this function is optimized over
emplike	_OptFuncts	_opt_kurt	nuis_params	called by test_kurt this function is optimized over
emplike	_OptFuncts	_opt_skew_kurt	nuis_params	called by test_joint_skew_kurt this function is optimized over
emplike	DescStatUV	test_mean	mu0 return_weights	returns - 2 x log-likelihood ratio p-value and weights for a hypothesis test of the mean
emplike	DescStatUV	ci_mean	sig method epsilon gamma_low	returns the confidence interval for the mean
emplike	DescStatUV	test_var	sig2_0 return_weights	returns -2 x log-likelihoog ratio and the p-value for the hypothesized variance
emplike	DescStatUV	ci_var	lower_bound upper_bound sig	returns the confidence interval for the variance
emplike	DescStatUV	plot_contour	mu_low mu_high var_low var_high	returns a plot of the confidence region for a univariate mean and variance
emplike	DescStatUV	test_skew	skew0 return_weights	returns -2 x log-likelihood and p-value for the hypothesized skewness
emplike	DescStatUV	test_kurt	kurt0 return_weights	returns -2 x log-likelihood and the p-value for the hypothesized kurtosis
emplike	DescStatUV	test_joint_skew_kurt	skew0 kurt0 return_weights	returns - 2 x log-likelihood and the p-value for the joint hypothesis test for skewness and kurtosis
emplike	DescStatUV	ci_skew	sig upper_bound lower_bound	returns the confidence interval for skewness
emplike	DescStatUV	ci_kurt	sig upper_bound lower_bound	returns the confidence interval for kurtosis
emplike	DescStatMV	mv_test_mean	mu_array return_weights	returns -2 x log likelihood and the p-value for a multivariate hypothesis test of the mean
emplike	DescStatMV	mv_mean_contour	mu1_low mu1_upp mu2_low mu2_upp	creates a confidence region plot for the mean of bivariate data parameters
emplike	DescStatMV	test_corr	corr0 return_weights	returns -2 x log-likelihood ratio and p-value for the
emplike	DescStatMV	ci_corr	sig upper_bound lower_bound	returns the confidence intervals for the correlation coefficient parameters
emplike	_ANOVAOpt	_opt_common_mu	mu	optimizes the likelihood under the null hypothesis that all groups have
emplike	ANOVA	compute_ANOVA	mu mu_start return_weights	returns -2 log likelihood the pvalue and the maximum likelihood estimate for a common mean
