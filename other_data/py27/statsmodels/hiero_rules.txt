class	gamma ||| gamma	count=2
function	lagrange multiplier ||| lm	count=1
function_arg	[function_1] variances ||| [arg_2] [function_1]	count=3
class	means ||| means	count=2
function	regularized fitted parameters ||| regularized	count=1
module	in construction ||| tsa	count=1
function	diagonal of the hat_matrix ||| hat matrix diag	count=1
class	required ||| olsinfluence	count=1
function	robust covariance matrix ||| cov nw	count=2
arg	the provided exog ||| exog	count=1
arg	p q coefficients ||| p q n	count=2
function_arg	insert a [arg_2] ||| [function_1] [arg_2]	count=2
arg	from results ||| results	count=1
function	plot the mean ||| plot	count=1
module	parameters used [module] likelihood evaluation ||| [module]	count=1
module	variable for ||| sandbox stats	count=1
function	[function] 'star' ||| [function]	count=3
arg	[arg_1] and ses ||| [arg_2] [arg_1]	count=1
module	for ||| tsa kalmanf	count=2
arg	[arg_1] freedom v ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] specific key ||| [function_1] [arg_2]	count=6
class	c-log-log transform ||| clog log	count=3
arg	of the fitted model ||| method atexog dummy	count=2
arg	for the ||| params	count=1
function_arg	z-test [arg_2] ||| [function_1] value [arg_2]	count=1
function	hac [function_2] ||| [function_2] [function_1]	count=4
function	plots ||| plot	count=3
function	of summary ||| summary	count=1
function	derivative ||| derivative	count=1
function	get the location ||| get index loc	count=1
function	correlations on vertical ||| acf	count=1
arg	bds effect ||| max_dim	count=1
function	for ||| init kalman state	count=2
function	final simulation output ||| simulation output	count=2
arg	shape should be ||| shape	count=1
arg	k ||| k n	count=1
class	with degrees of ||| varresults	count=1
function	cvxopt solvers ||| cvxopt	count=1
arg	length ||| length	count=1
function	probabilities percetiles ||| ppplot	count=1
function	returns the ||| state	count=1
arg	the parameters [arg_2] ||| [arg_1] [arg_2]	count=1
function	baseline [function_2] ||| [function_1] [function_2]	count=6
arg	of the power ||| effect_size nobs alpha power	count=2
function	grid plots ||| irf grid plot	count=2
function	returns the covariance matrix ||| get covariance matrix	count=1
function	stata's default format ||| to default stata fmt	count=1
module	variance ||| genmod families	count=1
function	info ||| init	count=1
function	weighted by ||| weighted	count=1
function	parameter names list ||| param names	count=1
class	of probit ||| probit	count=1
function	handle strings and ||| get	count=1
function	the variable s tested ||| compute sig	count=1
function_arg	correlation matrix [arg_2] ||| [function_1] thresholded [arg_2]	count=2
function	use f [function_2] ||| [function_2] [function_1]	count=1
function	by the delta method ||| margeff cov	count=1
function	[function] properties ||| [function]	count=2
function	out of ||| get predict out of	count=1
function	state and state covariance ||| state	count=1
arg	multivariate linear filter x ||| x	count=1
function	normal distribution [function_2] ||| [function_2] [function_1]	count=4
function	solvers using the specified ||| solvers	count=1
class	to estimate the gls ||| panel gls	count=1
function	name ||| get endog name	count=1
function_arg	[function_1] [arg_2] ||| [function_1] search [arg_2]	count=5
class	score ||| mixed lm	count=1
function	returns the covariance matrix ||| covariance matrix	count=1
arg	[arg_1] lags ||| [arg_2] [arg_1]	count=2
class	compute ||| hsdresults	count=1
function	returns ||| dates	count=1
class	float [class] ||| [class]	count=1
class	arma process ||| arma	count=1
function	generate a random sample ||| generate sample	count=1
function	cumulative hazard function evaluated ||| cumulative hazard	count=1
function	autocorrelations from ||| from	count=1
function	[function_1] summary for ||| [function_2] [function_1]	count=2
class	counter object and if ||| counter	count=1
arg	by minimizing negative ||| start_params maxiter method tol	count=2
module	the ||| discrete	count=2
function	a ||| wald test	count=4
arg	cook johnson ||| u v theta	count=1
module	freedom correction ||| tsa	count=1
arg	for 1d ||| x unbiased demean	count=1
module	distribution ||| distributions	count=9
function	quantize a ||| prob quantize	count=1
function_arg	for quantiles [arg_2] ||| [arg_2] [function_1]	count=1
module	[module_1] of ||| [module_2] [module_1]	count=1
module	the distribution ||| sandbox distributions	count=2
function	unknown ||| ad	count=1
arg	integer [arg] i ||| [arg]	count=1
module	white ||| tsa	count=1
arg	apply function ||| function level	count=2
function	plot partial regression ||| plot partregress	count=2
function	variable name ||| name	count=1
function	standard error ||| bse	count=1
function	turns ||| from str	count=1
arg	of equations ||| rhs	count=1
arg	polynomial is ||| x	count=1
arg	is ||| threshold	count=1
module	multivariate ||| multivariate	count=1
function	as a ||| summary	count=1
function_arg	the ceres [arg_2] ||| [function_1] [arg_2]	count=1
module	ols regression ||| sandbox regression	count=1
function	observations [function_2] ||| [function_2] [function_1]	count=1
function	and returns a ||| dates from	count=1
function	the power ||| power	count=2
function	delta ||| margeff cov params	count=2
arg	function func ||| func low upp args	count=1
module	of ||| duration	count=1
function	se of ||| se	count=1
function	gradient for ||| grad	count=1
function	the response residuals ||| resid response	count=2
class	[class_1] binomial ||| [class_2] [class_1]	count=10
class	[class_1] [class_2] x currently works only ||| [class_1] [class_2]	count=3
function	[function_1] simulation output ||| [function_1] [function_2]	count=3
class	filter [class] ||| arma [class]	count=1
function	datetime ||| dates from	count=1
function	[function_1] interval includes ||| [function_1] [function_2]	count=2
arg	null hypothesis is ||| value	count=1
arg	whether variance is the ||| x idx split	count=1
function	returns a list of ||| dates from	count=1
function_arg	[function_1] ols ||| [arg_2] [function_1]	count=2
arg	by the delta ||| model params	count=1
module	of date strings and ||| base	count=1
function	[function_1] transformed cdf ||| [function_1] [function_2]	count=2
function	by ||| margeff	count=1
function	from ||| from	count=6
function_arg	[function_1] structure ||| [arg_2] [function_1]	count=1
function	residual parameters ||| resid	count=2
arg	with ||| exog transform	count=1
class	string the table ||| table	count=2
function	containing the baseline ||| baseline	count=1
function	normal inverse [function_2] ||| [function_2] [function_1]	count=2
arg	joint ||| scale invcov	count=1
arg	other ||| cls	count=1
arg	first ||| x	count=1
module	error ||| sandbox regression	count=3
arg	can be used to ||| regression	count=1
function	confidence intervals for ||| ci	count=2
module	strings and returns a ||| tsa base	count=1
function	of success is p ||| binom	count=1
function	sequence of date ||| dates from str	count=1
module	it is used for ||| sandbox stats	count=1
class	p 371 in [8] ||| reg coef c	count=1
function	exogenous variable the variance ||| variance	count=1
arg	set of x ||| x	count=1
arg	probability p [arg_2] ||| [arg_2] [arg_1]	count=1
arg	by the ||| model params	count=1
function	ceres residuals ||| ceres resids	count=1
class	comparison to another od ||| ordered dict	count=1
function	[function_1] an arma ||| [function_2] generate [function_1]	count=3
module	graphical ||| sandbox tsa	count=2
module	calculate sum of ||| tsa	count=1
arg	apply [arg_2] ||| [arg_2] [arg_1]	count=8
module	frequency [module] the ||| [module]	count=1
function	[function_1] function for ||| [function_1] [function_2]	count=6
module	of [module] ||| [module]	count=3
arg	"compute bw on ||| bw co	count=1
class	two sample z-test ||| gof	count=1
arg	pairwise comparisons ||| count nobs value multitest_method	count=1
module	discrete regressors for ||| discrete	count=2
class	multinomial logit ||| mnlogit	count=1
function	[function_1] datetime ||| [function_1] [function_2]	count=4
arg	hypothesis ||| cov_p	count=1
function	automatic seaonal arima order ||| order	count=1
arg	for ||| scale	count=1
module	for minimizing ||| stats	count=1
function	info needed ||| state	count=1
class	marginal effects parameters ||| geemargins	count=2
class	[8] ||| coef c	count=2
module	model returns ||| sandbox regression	count=1
function	generated vector of observations ||| generated	count=1
function	proportions based on ||| proportions	count=1
module	other info needed for ||| kalmanf	count=1
function	sums for embedding dimensions ||| sums	count=1
class	log-likelihood ||| inverse gaussian	count=1
class	the smoothing ||| smoothing spline	count=1
function	baseline ||| baseline	count=2
arg	q coefficients ||| q n	count=1
arg	returns endog resid ||| endog	count=1
function	the [function] just the ||| [function]	count=1
arg	for ||| cls params	count=1
function	monte carlo integrated ||| irf errband mc	count=2
function	[function_1] latex ||| [function_1] [function_2]	count=2
class	of poisson ||| poisson	count=1
function	survival function ||| survfunc	count=1
module	of distribution parameters ||| sandbox distributions	count=2
arg	maps numpy dtype to ||| dtype	count=1
function	get the ||| get prediction index	count=1
module	[module] dataset ||| datasets [module]	count=1
function_arg	subset of [arg_2] ||| [arg_2] [function_1]	count=1
module	included in the ||| tsa	count=1
arg	generate ||| mod params	count=1
function	info ||| init kalman state	count=2
arg	in [arg] int ||| [arg]	count=1
class	of log transform ||| log	count=1
arg	produce [arg_2] ||| [arg_2] [arg_1]	count=2
arg	the null hypothesis is ||| value ddof	count=1
function	plot of the ||| plot	count=2
module	autoregressive lag-polynomial ||| tsa	count=1
function	flexible grid plots ||| grid plot	count=1
function	generate the approximate ||| mat	count=1
function	cluster robust ||| cluster	count=1
function_arg	[function_1] and variances ||| [arg_2] [function_1]	count=3
module	a [module] for the ||| [module]	count=1
arg	is for a ||| x d	count=1
arg	to ||| n k start	count=1
module	data [module] data ||| datasets [module]	count=2
function	squares along ||| sumofsq	count=1
arg	statistic for ||| x max_dim epsilon distance	count=1
module	any [module] _2d_ arrays ||| [module]	count=1
arg	into a ||| has_fe	count=1
function_arg	confidence [arg_2] ||| [function_1] [arg_2]	count=2
module	for ||| kalmanf	count=1
function	correction ||| correction	count=1
module	covariance with degrees of ||| vector_ar	count=1
class	a pickle of this ||| likelihood model results	count=1
arg	[arg_1] scale ||| [arg_1] [arg_2]	count=2
class	null ||| null	count=1
function	generate the approximate ||| wdesign	count=1
function	regularized [function_2] ||| [function_2] [function_1]	count=6
function	obtain the crude ||| crude	count=1
module	family distribution parameters ||| genmod	count=2
class	[class_1] filter ||| [class_1] [class_2]	count=6
arg	preparation for the kalman ||| variance complex_step	count=1
function_arg	[function_1] plot of ||| [arg_2] [function_1]	count=1
class	parameters including ||| varresults	count=1
function	[function_1] unknown ||| [function_1] [function_2]	count=1
function	transforms the log of ||| star	count=1
arg	of an ||| x	count=1
module	of the ||| base	count=2
function	the stata date formats ||| stata	count=1
module	checks [module] see ||| [module]	count=1
module	included in the model ||| tsa	count=1
arg	linear hypothesis ||| scale	count=1
module	model jacobian of the ||| discrete	count=1
function	[function] for ||| stationary [function]	count=1
function	hazard ||| hazard	count=2
module_class	on [class_2] ||| [module_1] [class_2]	count=8
function	lowess line ||| lowess	count=1
arg	construct a comparemeans object ||| cls data1 data2 weights1	count=1
function	wald-test for a ||| test	count=1
arg	the kalman ||| params start p end	count=1
function	random draw [function_1] [function_2] vector from its conditional ||| simulation smooth results simulated [function_1] [function_2]	count=1
function	ttest for ||| ttest	count=1
class	an ||| glshet	count=1
class	for least trimmed ||| trimmed	count=2
class	wald-test ||| likelihood	count=1
module	freedom ||| vector_ar	count=1
function	provides a ||| find nfact	count=1
function	and ryan procedures ||| homogeneous subsets	count=1
function	plots for standardized residuals ||| plot	count=1
arg	function for ||| z	count=9
function	and returns a ||| from	count=1
module	square in a ||| graphics	count=1
function	trace [function_2] ||| [function_1] [function_2]	count=4
class	of autoregressive ||| arma	count=1
function	string ||| as	count=1
function_arg	lowess [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] data ||| [arg_2] [function_1]	count=4
module	to use for ||| stats	count=2
arg	significance bounds ||| legend_loc fig figsize	count=2
function	minus the rank of ||| resid	count=1
module	error ||| tools	count=1
function	[function_1] cvxopt solvers ||| [function_2] [function_1]	count=1
arg	is imposed ||| sinv	count=1
function	to the cross validation ||| cv	count=1
function	indices for ||| indices	count=1
module	distribution location ||| sandbox distributions	count=2
arg	regression plots studentized ||| external alpha	count=1
arg	a wald-test ||| scale	count=1
function	or 3d ||| arfilter old	count=1
function	computes the test ||| compute test	count=2
function	transformed cdf ||| transformed	count=1
arg	endog resid [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	subset [arg_2] ||| [function_1] [arg_2]	count=1
function	reorder ||| reorder missing	count=2
arg	enthresh ||| vals enthresh	count=1
function_arg	[function_1] unconditional ||| [function_1] start_params method maxiter [arg_2]	count=1
module	returns ||| kalmanf	count=1
function_arg	recursive [arg_2] ||| [function_1] [arg_2]	count=1
function	sums for ||| sums	count=1
function	residuals for the ||| resid	count=4
module	graphical ||| tsa	count=1
arg	and formula ||| formula	count=1
arg	group are different ||| group exact	count=2
function	parallel ||| parallel	count=1
arg	whether restricted ||| restricted	count=3
arg	a mixedlmparams ||| params k_fe k_re use_sqrt	count=1
arg	x x can ||| x	count=1
arg	profile log-likelihood ||| profile_fe	count=1
function	returns a list ||| dates from str	count=1
arg	at the theoretical ||| k_params alpha score	count=1
arg	self and [arg_2] ||| [arg_2] [arg_1]	count=2
function	method to ||| using	count=1
function	estimation using the ||| fit	count=1
function	group means of ||| group mean	count=2
function_arg	[function_1] the unconditional ||| [arg_2] [function_1]	count=1
function_arg	the thresholded [arg_2] ||| [function_1] data [arg_2]	count=1
function	parameters ||| impulse responses	count=1
function	effects ||| params	count=1
function	a rectangle in a ||| rectangle	count=1
function	includes the end ||| reject	count=2
arg	likelihood via kalman filter ||| method transparams	count=2
class	two sample z-test ||| gof chisquare	count=1
arg	of creating the ||| new_entries x_copy_i width	count=1
arg	arrays and formula parameters ||| x formula	count=1
function	partial autocorrelation ||| pacf	count=1
class	: ||| arithmetic brownian	count=1
function	the state vector ||| state	count=1
arg	one sample proportion ||| value nobs alpha alternative	count=1
function	model ||| model	count=2
arg	marginal effects ||| exog	count=1
function	grid plots ||| grid plot	count=1
class	cached attribute parameter estimates ||| olsinfluence	count=1
function	[function_1] mean ||| [function_1] [function_2] nm	count=4
function	covariance of ||| cov	count=2
function	error band ||| band	count=2
arg	correlations determined by ||| n num_nonconst_covariates	count=1
function_arg	q statistic [arg_2] ||| [arg_2] [function_1]	count=3
function	computes the ||| compute	count=1
function	axes are needed ||| create mpl	count=1
arg	confidence interval is based ||| alpha	count=1
function	residual [function_2] ||| [function_1] [function_2]	count=1
function	return dictionary with ||| get	count=1
class	and model this ||| likelihood model	count=1
function	for ||| update	count=1
arg	distributions ||| x prob dist kwargs	count=2
module	return [module_2] ||| [module_1] [module_2]	count=8
arg	produce ||| float_format	count=1
function	[function_1] autoregressive coefficients ||| [function_1] [function_2]	count=1
function	se ||| se	count=1
function	coefficients of [function_2] ||| [function_2] [function_1]	count=2
module	example method [module] ||| [module]	count=1
function	cumulative [function_2] ||| [function_2] [function_1]	count=5
arg	first elements ||| b index inplace	count=1
arg	the nodewise_weightvalue ||| exog nodewise_row idx	count=1
function	tabular ||| tabular	count=1
arg	returns ||| epsilon	count=1
class	of ||| dynamic factor	count=1
function_arg	determinant of [arg_2] ||| [arg_2] [function_1]	count=1
arg	spectral projected gradient method ||| grad start project	count=1
arg	turns a ||| dates	count=1
function_arg	from [arg_2] ||| [arg_2] [function_1]	count=3
arg	interval ||| sig upper_bound lower_bound	count=3
function	baseline cumulative hazard ||| baseline cumulative hazard	count=3
class	v]) -> [class] dictionary ||| [class]	count=1
class	a contrast ||| contrast	count=2
class	for ramsay's ea ||| ramsay e	count=1
arg	calculate ||| effect_size	count=9
module	runstest [module] two ||| [module]	count=1
arg	try ||| alpha float_format title	count=1
arg	an index or ||| index	count=1
function	[function_1] datetime ||| [function_2] [function_1]	count=4
function	[function_1] inverse transformed ||| [function_2] [function_1]	count=1
class	degrees of freedom correction ||| varresults	count=1
arg	optimized for univariate case ||| params init_state init_var	count=1
class	model with ||| model	count=1
function	to calculate sum ||| sumofsq	count=1
function_arg	[function_1] interval ||| [function_1] [arg_2]	count=1
function	density for frequency using ||| spdroots	count=1
arg	error bands ||| orth repl	count=2
function	hamilton filter ||| hamilton filter	count=1
class	computes ||| generic kde	count=1
arg	hypothesis ||| scale	count=1
function	all against first comparison ||| all one	count=2
function	returns a ||| str	count=1
module	tries to [module] ||| [module]	count=1
function	the standard errors of ||| bse	count=1
arg	error bands ||| orth repl t	count=2
arg	of appropriate length ||| p q k_trend	count=1
function	filter ||| filter	count=3
function_arg	mutual [arg_2] ||| [function_1] [arg_2]	count=2
class	two independent ||| ind	count=2
module	likelihood ||| regime_switching	count=3
arg	power of ||| power	count=4
function	approximate ||| calc wdesign	count=1
module	var p loglikelihood ||| tsa	count=1
arg	matrices using [arg] matrix ||| maxn [arg]	count=1
function	reset specification test ||| reset	count=1
arg	[arg_1] scale for ||| [arg_1] [arg_2]	count=2
arg	in the first third ||| alternative use_f	count=1
function	random draw [function_1] [function_2] vector from its conditional ||| [function_1] [function_2]	count=1
function	test ||| test stat	count=2
function	a list ||| dates	count=1
function_arg	insert column [arg_2] ||| [function_1] loc [arg_2]	count=1
arg	self and other ||| other weights	count=2
function	the ||| init kalman	count=2
function	estimate parameters using ||| fit	count=1
function	outer product ||| covjac	count=1
arg	whether variance is ||| x idx	count=1
class	weighted correlation ||| descr stats	count=1
function	sequence of date ||| dates	count=1
function_arg	simulation output [arg_2] ||| [arg_2] [function_1]	count=4
module	for lagorder ||| tsa vector_ar	count=1
function	correlation sum ||| correlation sum	count=2
function_arg	simulation output [arg_2] ||| [function_1] [arg_2]	count=4
arg	tree ||| tree	count=1
arg	k equal sized groups ||| nobs alpha k_groups	count=1
function	create new [function_1] [function_2] estimator as default ||| [function_2] [function_1]	count=2
arg	classes and throws away ||| x1 x2 alternative usevar	count=1
function	[function_1] integrated ||| [function_2] [function_1]	count=6
function	logarithm of the determinant ||| logdet	count=1
function_arg	autocovariances from [arg_2] ||| [arg_2] [function_1]	count=1
arg	the corresponding distributedmodel ||| data_generator fit_kwds parallel_method	count=1
arg	variation if ||| bounds window_length scale	count=1
arg	components enthresh npcs ||| vals enthresh npcs	count=2
function	grid in ||| grid	count=1
function	to generate the approximate ||| calc wdesign mat	count=1
function	local fdr values ||| local fdr	count=2
arg	the ||| model	count=2
class	weighted correlation with ||| descr	count=1
function	a list of ||| dates from str	count=1
function	returns ||| from str	count=1
class	of the parameter estimates ||| gmmresults	count=1
module	float [module] log-likelihood function ||| [module]	count=1
module	the cpunish ||| cpunish	count=2
arg	maxiter or ||| maxiter	count=1
class	poisson ||| poisson gmle	count=1
arg	one sample proportion ||| nobs alpha	count=1
function	interval includes ||| reject interval	count=4
function	starting [function_2] ||| [function_2] [function_1]	count=10
arg	variance-covariance ||| params exog cov_params	count=1
function	of variance of the ||| var	count=1
function	[function] distribution parameters ||| fitstart [function]	count=1
module	matrix ||| stats	count=1
arg	for a given ||| maxiter method	count=1
function	inverse ||| calc	count=1
arg	variances ||| result betas tmp	count=1
function	[function_1] of vech(sigma_u) ||| [function_1] [function_2]	count=1
function	flexible grid ||| irf grid	count=1
class	with arma ||| arma	count=1
arg	statistic x ||| x	count=1
function_arg	cusum statistic [arg_2] ||| [arg_2] [function_1]	count=1
module	link parameters ||| families	count=1
function_arg	hessian matrix [arg_2] ||| [function_1] [arg_2]	count=2
arg	ar and ma ||| ar ma	count=3
class	for a hypothesis ||| uv	count=1
arg	for a joint ||| cov_p scale invcov	count=1
function	[function] sample tost ||| ttost [function]	count=1
arg	preparation ||| variance complex_step	count=1
class	for andrew's [class_2] ||| [class_2] [class_1]	count=1
function	against [function_2] ||| [function_1] [function_2] nm	count=2
function	effects by the delta ||| margeff cov params	count=1
arg	q [arg_2] ||| [arg_2] r [arg_1]	count=1
function	impute ||| impute	count=1
arg	parameter of ||| effect_size nobs	count=2
module	date ||| tsa base	count=2
arg	p q ||| p q n	count=2
class	the results ||| results	count=1
function	random sample [function_2] ||| [function_2] generate [function_1]	count=1
function	a sequence of date ||| from	count=1
module	instance ||| sandbox tsa	count=1
arg	is [arg_2] ||| [arg_2] [arg_1]	count=1
arg	[arg_1] y normed=true ||| [arg_2] [arg_1]	count=1
function	for jitter ||| jitter	count=1
class	error ||| gmmresults	count=2
arg	projected gradient ||| grad start project	count=1
function	outlier [function_2] ||| [function_1] [function_2]	count=1
module	another distribution int ||| distributions	count=1
arg	calculates the nodewise_weightvalue ||| exog nodewise_row idx alpha	count=1
arg	parameters ||| y axis	count=1
function	marginal distribution of random ||| random univariate	count=1
function	[function_1] plots of ||| [function_2] [function_1]	count=4
arg	the variance-covariance of ||| exog cov_params	count=1
function_arg	[function_1] [arg_2] ||| [function_1] endog [arg_2]	count=6
function	observations within a ||| within	count=1
arg	the orthogonal polynomial ||| polybase order limits	count=1
function	the standard [function_2] ||| [function_1] [function_2]	count=4
module	returns the ||| tsa kalmanf	count=1
arg	of marginal effects ||| params	count=1
class	the f-test for a ||| results	count=1
arg	data sequence ||| data	count=1
function	ab for two ||| symbanded	count=1
function	the cross validation ||| cv	count=1
module	noise covariance ||| tsa	count=1
arg	the components enthresh ||| enthresh	count=1
function	annotate axes with ||| annotate axes	count=2
function	as ||| summary	count=1
function	grid ||| irf grid	count=1
module	returns a list ||| base	count=1
arg	transform constrained parameters used ||| constrained error_variance	count=1
class	for negative [class_2] ||| [class_1] [class_2]	count=1
function	regression ||| regress exog	count=1
arg	and labels on ||| labels	count=1
function	tiecorrect ||| tiecorrect	count=1
arg	x ||| x	count=23
function	local [function_2] ||| [function_2] [function_1]	count=2
arg	and other info needed ||| cls params	count=1
function	[function] inversion ||| [function] inversion	count=2
function	the distribution ||| distribution	count=1
function_arg	linear constraint [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] of endog ||| [arg_2] [arg_1]	count=4
arg	by ||| exog	count=1
function_arg	[function_1] for teststat ||| [function_1] [arg_2]	count=2
function	the test statistic see ||| compute test stat	count=1
function	[function_1] from ||| [function_1] [function_2]	count=6
function	fit the model ||| fit	count=1
function	to a ||| freq to	count=1
arg	distributions ||| prob dist kwargs	count=2
function	pooled odds ||| pooled odds	count=1
function	pooled odds [function_2] ||| [function_2] [function_1]	count=4
arg	transform ||| x transform group_iter	count=1
arg	linear hypothesis ||| cov_p	count=1
class	2sls iv ||| iv2sls	count=1
arg	with singular values ||| unconstrained order k_endog	count=1
arg	of variation if ||| x bounds window_length scale	count=1
class	model to ||| model	count=2
class	factor decomposition ||| factor model	count=1
arg	walk [arg] ||| [arg]	count=3
class	descriptive ||| phreg results	count=1
function_arg	to transformed [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] orthogonal ||| [function_1] [arg_2]	count=1
function	needed for ||| init kalman state	count=1
module	test for ||| sandbox	count=1
arg	information between x and ||| px py pxpy logbase	count=1
arg	of ||| model	count=1
module	compute ||| tsa	count=1
function	performs a chisquare test ||| chisquare	count=2
function	[function_1] hazard ||| [function_2] [function_1]	count=5
arg	test whether variance is ||| x idx	count=1
arg	to generate the approximate ||| mod params	count=1
arg	for a joint ||| scale invcov	count=1
function	near ||| clipped	count=1
function	variance of [function_2] ||| [function_2] [function_1]	count=2
module	[module_1] likelihood evaluation ||| [module_1] [module_2]	count=12
arg	the arrays y and ||| y	count=1
arg	in preparation for ||| variance complex_step	count=1
class	results ||| test results	count=1
class	a f-test ||| ftest	count=1
function	unsqueeze a collapsed ||| unsqueeze	count=1
function	[function] copper data ||| [function]	count=1
class	a two sample ||| gof chisquare	count=1
arg	are [arg] ||| [arg] start_invweights	count=3
module_class	[module_1] comparison of ||| [module_1] [class_2]	count=2
class	kalman filter ||| kalman filter	count=4
function_arg	[function_1] process ||| [function_1] generate sample [arg_2]	count=3
function	[function_1] [function_2] vector from its conditional ||| statespace simulation smooth results [function_1] [function_2]	count=1
function_arg	[function_1] estimator of ||| [arg_2] [function_1]	count=6
arg	test of equivalence ||| low upp	count=1
module	the approximate ||| base	count=1
function	the delta ||| cov params	count=1
arg	given term ||| query_term	count=2
function	required results from ||| res	count=1
class	of the model ||| discrete model	count=1
arg	guerrero's coefficient of variation ||| bounds window_length scale	count=1
function	needed ||| mpl fig	count=2
arg	plug-in bandwidth with kernel ||| x kernel	count=1
function	gradient of function ||| approx fprime	count=1
class	the global [class] ||| global [class]	count=1
arg	this is the ||| x	count=1
arg	plot a reference line ||| ax line x	count=1
class	model ||| model	count=19
class	arma model currently ||| arma	count=1
arg	if [arg] is ||| yname yname_list [arg]	count=1
arg	non- equivalence ||| x2 low upp	count=1
function	score vector for ||| score	count=2
arg	distribution parameters ||| params	count=3
function	the efron method ||| efron loglike	count=1
function	test for ||| check	count=1
module	regime (and the ||| regime_switching	count=1
function	along ||| sumofsq	count=1
function	violin ||| violinplot	count=1
arg	k or ||| k	count=1
class	f-test for a ||| results	count=1
arg	get bins ||| rvs distfn arg nsupp	count=1
arg	unconstrained parameters used by ||| unconstrained	count=1
module	datetime ||| tsa	count=1
function	svd method [function_2] ||| [function_2] [function_1]	count=2
function	inverse covariance matrix ||| calc wdesign	count=1
class	a two sample z-test ||| gof chisquare ind	count=1
arg	maximum likelihood ||| start_params method maxiter	count=1
class	for now depends ||| ar	count=1
function	the rows ||| rows	count=1
function	indicators for a time ||| indicators	count=1
arg	any ||| gradient start_params fargs	count=1
module_class	convention by default [module_1] [class_2] filter follows durbin and ||| [module_1] [class_2] filter	count=1
arg	creating [arg_2] ||| [arg_2] [arg_1]	count=2
class	wald-test for a ||| model	count=1
arg	function to each group ||| function	count=1
function	inverse covariance ||| wdesign mat	count=1
function	the statsmodels data ||| data	count=1
arg	needed for the ||| params	count=1
arg	function func is monotonic ||| func low upp args	count=1
class	a [class] ||| [class]	count=5
arg	marginal effects by the ||| model params	count=1
function	robust [function_2] ||| [function_2] [function_1]	count=2
module	of parameters in the ||| tsa	count=1
module	the elements of ||| statespace	count=1
class	the parameter ||| gmmresults	count=1
class	test ||| test reg coef	count=1
function	generate the approximate ||| calc	count=1
class	the kalman [class_2] ||| [class_1] [class_2]	count=2
function	sets the slices ||| slices	count=1
function	[function_1] sample prediction ||| [function_1] [function_2]	count=3
class	other info needed ||| kalman	count=1
module	by the delta ||| discrete	count=1
function	parameters ||| params	count=9
function	test of [function_2] ||| [function_1] [function_2]	count=1
class	function at ||| mlemodel	count=1
function	of marginal ||| cov params	count=1
module	degrees of freedom ||| tsa vector_ar	count=1
class	computes the significance ||| reg coef c	count=1
arg	error bands of ||| orth repl signif	count=1
function	covariance ||| cov params	count=1
arg	symmetric [arg] ||| [arg]	count=1
arg	[arg] where missing ||| [arg]	count=2
class	returns all dta ||| stata reader	count=1
function	a wald-test for a ||| wald	count=1
function	[function_1] errors of ||| [function_2] [function_1]	count=2
function_arg	= [arg_2] ||| [function_1] params constraint params [arg_2]	count=1
module	for [module] ||| [module]	count=4
function_arg	ceres residuals [arg_2] ||| [arg_2] [function_1]	count=2
function	marginal effects ||| margeff cov	count=1
class	weighted ||| descr stats w	count=1
module	joint model returns ||| regression	count=1
class	for unit instance ||| unit	count=1
class	and other info ||| filter	count=1
class	model returns -hessian ||| model	count=2
arg	[arg_1] [arg_2] ||| [arg_2] true_params [arg_1]	count=2
arg	the given parameters ||| params	count=1
function	out of sample prediction ||| out of sample	count=1
class	gee ||| geeresults	count=1
class	box-cox transformed data ||| box cox	count=1
arg	the approximate inverse ||| mod params	count=1
arg	along first ||| x	count=1
class	plot ||| stat uv	count=1
module	a square in a ||| graphics	count=1
arg	confidence interval ||| sig	count=1
function	test for the variables ||| test	count=1
arg	method ||| method	count=3
arg	effects by the ||| model params exog	count=1
function	all correlation sums ||| correlation sums	count=2
arg	for univariate case ||| params init_state init_var	count=1
module_class	[module_1] [class_2] x currently works only ||| [module_1] [class_2] filter2 x pad	count=1
module	model coefficients notes ||| vector_ar	count=1
arg	iterating over the ||| as_dict	count=1
module	that ||| sandbox stats	count=1
arg	[arg_1] data ||| [arg_2] [arg_1]	count=2
arg	equal spaced time periods ||| x time	count=1
arg	using [arg] matrix such ||| maxn [arg]	count=1
arg	estimate distribution parameters ||| distfn params	count=2
module	string ||| iolib	count=1
function	effects by the ||| params	count=1
function	variance ||| variance	count=1
arg	sf x ||| x	count=1
function_arg	requested equation name ||| eq index name	count=1
class	a wald-test for a ||| likelihood model	count=1
function	method ||| filter method	count=1
module	regime ||| tsa regime_switching	count=7
class	results parameters ||| discrete results	count=1
arg	coefficient of variation if ||| x bounds window_length scale	count=1
arg	confidence interval is ||| alpha alternative	count=1
function	the efron method to ||| efron	count=1
arg	q [arg_2] ||| [arg_2] [arg_1]	count=1
class	compute a wald-test ||| model	count=1
module	white noise covariance ||| vector_ar	count=1
function	knockoff ||| knockoff	count=1
function	determinant ||| logdet	count=2
module	distributions with 1 ||| sandbox distributions	count=2
function	gof tests ||| gof binning	count=1
function	interval includes the ||| reject interval	count=4
arg	error ||| x1 x2 ddof	count=1
function_arg	gradient of [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] all one [arg_2]	count=2
arg	p just a ||| p	count=1
class	pareto with ||| pareto	count=1
arg	of ||| model params exog	count=1
module	first ||| tsa	count=1
function	[function_1] iqr for ||| [function_1] [function_2]	count=2
function	cumulative hazard [function_2] ||| [function_1] [function_2]	count=4
arg	parameters ||| alpha	count=6
arg	row ||| row	count=1
function	[function] ndarray ||| [function]	count=1
function	[function_1] garch ||| [function_1] [function_2]	count=1
module	the irls ||| genmod	count=1
module	datetime ||| tsa base	count=2
arg	regression ||| yname	count=5
function	results from ||| res	count=1
arg	sum of ||| x	count=1
arg	arrays in preparation for ||| variance complex_step	count=1
function	returns ||| init	count=1
arg	to test ||| regression autolag	count=1
module	to get fast ||| sandbox regression	count=1
function	update the ||| update representation	count=2
class	significance ||| coef	count=1
arg	correlation of ||| nobs	count=1
function	approximate ||| wdesign mat	count=2
arg	q is [arg_2] ||| [arg_2] r [arg_1]	count=1
function	the delta method ||| cov params	count=1
arg	returns ||| cls params	count=1
arg	sum of squares along ||| x	count=1
function	correlation matrix ||| matrix	count=1
arg	the system matrices and ||| params arma_model	count=1
function	estimate lag coefficients ||| fit	count=1
class	get factor decomposition of ||| factor model	count=1
arg	is the same ||| y x	count=1
function	runs the solvers using ||| solvers	count=1
function	approximate inverse covariance ||| wdesign	count=1
function_arg	plot ccpr [arg_2] ||| [arg_2] [function_1]	count=1
module	to test fdrcorrection ||| sandbox stats	count=2
function	strings ||| from	count=1
arg	mu ||| mu	count=5
class	huber's [class_2] ||| [class_2] [class_1]	count=2
function	estimate the ||| fit find nfact	count=1
function_arg	[function_1] significance bounds ||| [function_1] alpha [arg_2]	count=4
class	estimates ||| results	count=2
module	parameter ||| regression	count=2
arg	by the ||| model params exog	count=1
class	the significance value ||| reg coef	count=1
class	p-p ||| prob	count=1
function	random sample of an ||| sample	count=1
function	pmm-like procedure for initial ||| initial	count=1
arg	of x by ||| x index counts	count=1
function	computes ||| compute	count=2
function	the missing data ||| missing	count=1
class	the kernel smoothing estimate ||| kernel	count=1
function	[function_1] [function_2] ||| [function_2] effects [function_1]	count=5
function	attach the density estimate ||| fit	count=1
function_arg	information matrix [arg_2] ||| [arg_2] [function_1]	count=1
module	a list of datetime ||| tsa	count=1
function_arg	[function_1] a specific ||| [arg_2] [function_1]	count=6
function	based on [function] of ||| [function]	count=1
arg	linear ||| r_matrix	count=1
function	expected ||| expected	count=2
function	estimates the regularized ||| est regularized	count=1
function	scipy stats distribution with ||| distribution	count=1
class	od ||| ordered dict	count=3
function	probabilities percetiles of a ||| ppplot	count=1
module	factor for ||| sandbox stats	count=1
arg	[arg_1] positive semi-definite ||| [arg_1] [arg_2]	count=1
class	the significance ||| test reg coef c	count=1
class	inverse of [class] transform ||| [class]	count=1
function	calculate standard deviation ||| std	count=1
module	other info needed ||| tsa	count=1
arg	for a joint linear ||| scale invcov	count=1
function	the cohn [function_2] ||| [function_2] [function_1]	count=4
function	quantize a continuous ||| prob quantize	count=1
arg	the parameters [arg_2] ||| [arg_2] [arg_1]	count=1
class	box-cox regressions ||| box cox	count=1
function	random sample ||| sample	count=1
arg	delta ||| model	count=1
function_arg	[function_1] process ||| [function_1] acf [arg_2]	count=3
arg	the scatter of the ||| scatter	count=1
arg	returns ||| cls	count=1
arg	[arg_1] mayavi ||| [arg_2] [arg_1]	count=4
class	huber's ||| huber	count=2
arg	given family iteratively using ||| maxiter tol	count=1
function	of categorical ||| categorical	count=1
function	binomial tost the ||| binom tost	count=2
function_arg	[function_1] data ||| [function_1] thresholded [arg_2]	count=1
arg	: [arg_2] ||| [arg_2] [arg_1]	count=1
arg	random ||| rvs	count=1
arg	[arg_1] exogenous variables ||| [arg_2] [arg_1]	count=2
module	hypothesis ||| base	count=1
arg	impute missing values for ||| vname	count=1
function	of a normal ||| normal	count=1
arg	run [arg] pairwise test ||| testfunc [arg]	count=1
function_arg	limit for [arg_2] ||| [function_1] [arg_2]	count=1
module	parameter estimates with ||| sandbox regression	count=1
function	[function] distribution ||| prob [function]	count=1
function_arg	log determinant [arg_2] ||| [arg_2] [function_1]	count=1
arg	results [arg_2] ||| [arg_2] [arg_1]	count=1
arg	likelihood function ||| scale	count=1
function	[function_1] for quantiles ||| [function_1] [function_2]	count=1
arg	transform ||| transform group_iter	count=1
arg	* soln = rhs ||| rhs	count=1
module	matrix for ||| stats	count=4
module	[module_1] link function ||| [module_1] [module_2]	count=4
function	lfilter to produce ||| lfilter	count=1
arg	[arg_1] y ||| [arg_1] [arg_2]	count=1
function	and integer location ||| maybe	count=1
arg	equal spaced time periods ||| time	count=1
class	global odds ratio first ||| global odds ratio	count=1
arg	enthresh npcs ||| enthresh npcs	count=1
class	values [class] ||| [class]	count=1
function	[function] estimate of ||| join [function]	count=3
function_arg	[function_1] statistic x ||| [arg_2] [function_1]	count=1
arg	optionally the scatter ||| scatter	count=1
module	[module_1] the ||| [module_1] [module_2]	count=2
function	to ||| compare lm	count=1
arg	via kalman filter ||| trend method transparams	count=2
arg	of freedom v ||| v	count=1
module	a [module] ||| [module]	count=2
arg	x by time ||| x index counts	count=1
function_arg	[function_1] of the ||| [arg_2] [function_1]	count=3
arg	a deepcopy in ||| tables keep_headers	count=1
arg	marginal effects by the ||| model params exog	count=1
arg	calculates the ||| mod params	count=1
class	identical means ||| compare means	count=1
function	display ||| plot	count=1
module	region for ||| stats	count=1
class	to the random effects ||| mixed lm	count=1
function	[function] estimate ||| join [function]	count=3
arg	freedom and r ||| r	count=2
module_class	for [class_2] ||| [module_1] [class_2]	count=19
function	summary table for ||| summary	count=2
function	error band ||| band sz2	count=1
arg	corresponding to the ||| params	count=1
function	affine transform ||| affine	count=1
arg	linear ||| scale	count=1
module	given ||| regression	count=1
arg	against ||| exog_idx	count=1
arg	returns just ||| cls y k k_ar	count=1
module	of distribution ||| sandbox distributions	count=1
module	this and another distribution ||| sandbox distributions	count=1
function_arg	[function_1] plot ||| [function_1] data [arg_2]	count=1
function	cached attribute [function_1] [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] kurt [arg_2]	count=2
function	of psturng ||| psturng	count=1
arg	parameters of ||| params	count=1
function	correlation sums ||| correlation sums	count=2
class	odds ratio first ||| odds ratio	count=2
function	strings ||| dates	count=1
arg	[arg_1] num ||| [arg_2] [arg_1]	count=10
function	two [function] ||| ttost [function]	count=1
class	wald-test ||| likelihood model	count=1
class	a ||| likelihood model results	count=6
function	cusum statistic ||| cusum	count=1
module	along ||| tsa	count=1
class	distributed estimation ||| distributed model	count=1
function	simulation [function_2] ||| [function_1] [function_2]	count=1
function	binomial proportion parameters ||| proportion	count=1
function	approximates the quantile ||| qsturng	count=1
arg	marginal effects by the ||| model	count=1
arg	[arg_1] npcs ||| [arg_2] [arg_1]	count=4
module	function or jacobian if ||| tools	count=1
function_arg	lowess function [arg_2] ||| [function_1] [arg_2]	count=2
arg	of the power of ||| effect_size nobs alpha power	count=2
function	via convolution centered ||| convolution filter	count=1
function	date ||| from str	count=1
arg	whether variance is the ||| y x idx split	count=1
arg	lags on the horizontal ||| ax lags	count=1
arg	with d1 = ||| d1	count=1
module	for ||| sandbox stats	count=28
module	of a t-test for ||| stats	count=2
arg	compute ||| scale	count=1
function	fit to a ||| fit	count=2
function	strings and returns ||| from	count=1
class	effects parameters ||| one way mixed	count=1
module	or restriction matrix for ||| sandbox stats	count=2
function_arg	estimate lag [arg_2] ||| [arg_2] [function_1]	count=1
function	constant ||| constant	count=1
module	of the parameter ||| regression	count=1
function	missing data pattern ||| missing pattern	count=1
arg	[arg_1] ar and ||| [arg_2] ma [arg_1]	count=2
arg	: ||| maxiter	count=1
function	"create the default ||| create default	count=1
function	power of chisquare goodness ||| power	count=1
function	make flexible grid ||| grid	count=1
function_arg	[function_1] data ||| genmod nominal gee setup [function_1] [arg_2]	count=1
function	inverse covariance matrix ||| calc wdesign mat	count=1
function	delta method ||| margeff cov	count=1
function	derivative of ||| derivative	count=1
class	the grouping ||| grouping	count=1
function	[function_1] the random ||| [function_2] [function_1]	count=2
function	hessian of arma model ||| hessian	count=2
class	biweight estimator ||| biweight	count=1
class	global [class_2] ||| [class_1] [class_2]	count=5
function	chisquare test parameters ||| chisquare	count=1
arg	is ||| x idx split	count=1
module_class	variance [class_2] ||| [module_1] [class_2]	count=1
function	to datetime ||| to datetime	count=1
module	of estimated parameters ||| tsa	count=1
function	and other ||| state	count=1
function	calculates the ||| calc	count=1
class	[class] provides ||| [class]	count=4
function	calculates the baseline cumulative ||| baseline cumulative	count=1
function	of human readable parameter ||| param	count=1
arg	function plots lags ||| lags alpha	count=1
class	for a ||| likelihood	count=1
class	kernel smoothing estimate ||| custom kernel	count=1
class	required results from the ||| olsinfluence	count=1
module_class	[module_1] factor-structured coefficients ||| [module_1] [class_2]	count=2
arg	given groups are different ||| groups exact	count=1
function	strings and ||| dates	count=1
arg	distribution parameters by matching ||| params	count=1
function	compute a ||| test	count=1
module	the statespace ||| statespace	count=1
arg	in [arg] ||| [arg]	count=1
module	any [module] _2d_ ||| [module]	count=1
module	to get fast mean ||| sandbox regression	count=1
function	from each [function_2] ||| [function_1] [function_2]	count=1
function_arg	arma process [arg_2] ||| [arg_2] [function_1]	count=5
function	integer location ||| maybe	count=1
function	[function_1] t ||| [function_2] [function_1]	count=1
class	the global [class] based ||| global [class]	count=1
arg	data as ||| endog exog	count=2
module	the strikes ||| strikes	count=1
arg	weighted design matrix necessary ||| hess_kwds	count=1
function	all pairs this is ||| pairs unbalanced	count=1
module_class	of the model ||| base likelihood model	count=1
function	inversion [function] ||| set inversion [function]	count=2
function	in ||| repr	count=1
module	covariance matrix [module] a single ||| [module]	count=1
function	tests ||| test	count=1
module	with estimation ||| stats	count=1
function	default format for ||| dtype to default	count=2
arg	canonical ||| x1 x2 demean	count=1
arg	multiple results ||| results	count=1
function_arg	[function_1] x : ||| [function_1] [arg_2]	count=1
module	the joint model returns ||| sandbox regression	count=1
function	delta method ||| cov	count=1
arg	probability p sample mean ||| p	count=1
class	[class_1] model with ||| [class_1] [class_2]	count=2
arg	interval for a ||| beta_low sig	count=1
function	[function_1] location of ||| [function_1] index label [function_2]	count=1
function	set the filtering method ||| set	count=1
module	used in [module_2] ||| [module_1] [module_2]	count=14
function	to ||| calc wdesign	count=1
arg	of equivalence ||| low upp usevar	count=1
function_arg	regression results ||| regress exog results	count=1
function	returns partial ||| partial	count=1
arg	[arg_1] the ||| [arg_1] [arg_2]	count=8
function_arg	gradient [arg_2] ||| [arg_2] [function_1]	count=2
arg	from [arg_2] ||| [arg_1] ax [arg_2]	count=1
arg	of the power of ||| nobs alpha power	count=2
arg	test for ||| autolag	count=1
function_arg	[function_1] a specific ||| [function_1] key [arg_2]	count=6
function	the test ||| test	count=2
class	linear hypothesis ||| likelihood	count=1
arg	a dummy matrix ||| dictnames drop	count=1
function	data parameters ||| data	count=1
function_arg	q is ||| q x	count=1
arg	log-likelihood parameters ||| params	count=3
class	results to ||| results	count=2
function	[function_1] means ||| [function_2] [function_1]	count=2
function	other info needed ||| state	count=1
function	as a latex ||| as latex	count=3
function	cdf of a ||| cdf	count=1
module	of squares ||| tsa	count=1
function_arg	hamilton filter [arg_2] ||| [function_1] [arg_2]	count=1
function	for frequency using ||| spdroots	count=1
function	the psi ||| psi	count=2
class	random effects ||| mixed	count=2
function	hamilton [function_2] ||| [function_2] [function_1]	count=1
function	hessian matrix ||| hessian	count=5
arg	given by lag-polynomials ||| worn whole	count=1
module	test ||| sandbox	count=1
class	of exogenous variables ||| model	count=1
function_arg	[function_1] 1d arrays ||| [arg_2] [function_1]	count=1
function	each observation ||| score obs	count=1
arg	process given by lag-polynomials ||| worn whole	count=1
function	the dot product ||| dot	count=1
class	summary ||| model univariate	count=1
function	[function_1] inflation ||| [function_1] [function_2]	count=4
module	the rhs ||| tsa	count=1
arg	the fitted mean response ||| endog mu freq_weights	count=4
arg	parameters of [arg_2] ||| [arg_1] [arg_2]	count=2
arg	offset_points according ||| offset_points	count=1
function_arg	[function_1] [arg_2] ||| [function_1] ax data [arg_2]	count=4
class	all dta ||| stata reader	count=1
arg	data as ||| endog	count=2
function	arbitrary matrices ||| constrain sv	count=1
arg	grid points [arg] ||| x [arg]	count=1
arg	k ||| x k	count=1
function	determine ||| is	count=1
arg	terms calculates den^{-1} * ||| den	count=1
class	estimate the gls ||| panel gls	count=1
module	endog duration values ||| duration	count=2
function	evaluates the ||| psturng	count=1
module	uncensored endog duration values ||| duration	count=2
function	display (3 ||| compute r	count=1
function	[function_1] of vech(sigma_u) ||| [function_2] [function_1]	count=1
arg	a reference line ||| line x y	count=1
function_arg	regression [arg_2] ||| [function_1] [arg_2]	count=5
function	regularized fit ||| fit regularized	count=2
function	[function_1] factor is ||| [function_2] [function_1]	count=5
arg	concatenate a set of ||| axis allow_mix	count=1
function	starting [function_2] ||| [function_1] [function_2]	count=10
arg	coefs and ses ||| float_format model_names stars	count=1
arg	function to each ||| function	count=2
module	[module] based ||| [module]	count=1
arg	marginal ||| model	count=1
module	a continuous distribution ||| sandbox distributions	count=1
arg	given exogenous ||| exog exposure offset	count=1
arg	along [arg] 0 or ||| x order [arg]	count=1
arg	for iterating over ||| as_dict	count=1
function	standard deviation ||| std	count=5
arg	of ||| effect_size nobs	count=2
module_class	[module_1] gee ||| [module_1] [class_2]	count=2
arg	a harmonic mean ||| srange	count=2
function_arg	a linear [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] table ||| [function_2] [function_1]	count=1
function	parameters with ||| params	count=1
function	and other ||| init kalman	count=1
class	the model to a ||| additive model	count=1
function_arg	filter parameters ||| filter params	count=1
class	binomial family parameters ||| binomial	count=1
arg	vals ||| vals	count=2
function	plot axes are needed ||| mpl fig	count=1
module	function in terms of ||| genmod families	count=4
function	two-sided confidence ||| zconfint	count=1
function	correlation [function_2] ||| [function_1] [function_2]	count=5
arg	>>> from ||| data axis oldshape	count=1
function	[function_1] from ||| [function_2] [function_1]	count=6
function	envelope for [function_2] ||| [function_2] [function_1]	count=2
module_class	the gee ||| genmod geeresults	count=1
arg	a [arg] ||| indicators [arg]	count=1
class	the model ||| model	count=5
function	[function_1] ratio ||| [function_2] [function_1]	count=2
module	for ||| tsa	count=3
class	of fevd parameters ||| fevd	count=1
module	of autoregressive ||| tsa	count=1
function	info needed for the ||| init kalman	count=1
arg	one sample ||| value nobs alpha	count=1
class	quantiles ||| dist quantiles	count=1
function	covariance matrix of vech(sigma_u) ||| cov sigma	count=1
arg	[arg_1] group ||| [arg_2] [arg_1]	count=2
function	two [function] sample ||| ttost [function]	count=1
function	ttest for the null ||| ttest	count=1
function_arg	[function_1] 1d ||| [arg_2] [function_1]	count=3
arg	all pairwise comparisons ||| nobs multitest_method	count=1
function_arg	contrast [arg_2] ||| [arg_2] [function_1]	count=2
class	starting ||| markov switching	count=1
module	sum ||| tsa	count=1
function_arg	[function_1] teststat ||| [function_1] [arg_2]	count=1
arg	joint linear ||| invcov	count=1
arg	enthresh npcs and ||| vals enthresh npcs	count=2
function	needed ||| kalman	count=1
function	transform matrices with singular ||| from multivariate pacf python	count=1
class	global [class] ||| global [class]	count=1
class	info needed ||| kalman	count=1
function	normalize ||| normalize	count=2
arg	covariance ||| params	count=1
arg	key and return the ||| key	count=1
arg	wald-test ||| r_matrix cov_p scale	count=1
function	split a square ||| split	count=1
class	get [class] influence ||| [class]	count=1
module	parameters of distribution function ||| sandbox distributions	count=2
arg	of x by ||| x index counts dummies	count=1
arg	= rhs and ||| rhs	count=1
function	binomial tost ||| binom tost	count=2
module	of ||| distributions	count=6
class	the significance value for ||| reg coef c	count=1
class	fit smoothing ||| smoothing	count=1
function	strings and returns a ||| str	count=1
arg	for 1d parameters ||| unbiased	count=1
function_arg	[function_1] a row ||| [function_1] idx [arg_2]	count=1
arg	string summarizing [arg_2] ||| [arg_2] true_params [arg_1]	count=1
arg	[arg_1] int ||| [arg_1] [arg_2]	count=2
class	arma p q model ||| arma	count=1
function_arg	[function_1] >>> from ||| [arg_2] [function_1]	count=1
module	create ||| iolib	count=1
function	integer group indices ||| combine indices	count=1
arg	: int ||| maxiter maxfun	count=2
module	of a regime ||| tsa regime_switching	count=1
function	[function_1] fit to ||| [function_2] [function_1]	count=2
function_arg	to transformed parameters ||| sqrt params	count=1
arg	upper left corner ||| missing_rows	count=1
function	is a recarray ||| is recarray	count=3
function	model for a ||| fit	count=1
arg	arrays and formula ||| formula	count=1
function	[function] sample ||| ttost [function]	count=1
function	log-likelihood of the ||| loglike	count=2
module_class	of model ||| base likelihood model	count=1
arg	for ||| r_matrix cov_p scale	count=1
function	as a [function_2] ||| [function_2] [function_1]	count=3
function_arg	crosscovariance [arg_2] ||| [function_1] [arg_2]	count=2
arg	function fn no ||| fn	count=1
arg	[arg_1] the power ||| [arg_2] [arg_1]	count=8
function	estimates the regularized ||| regularized	count=1
function	the ||| state	count=2
arg	for any model ||| gradient start_params fargs	count=1
arg	num ||| num	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=586
arg	and autocorrelation robust ||| results nlags	count=1
arg	for the [arg] ||| alternative usevar [arg]	count=1
arg	if x is a ||| x	count=1
arg	distribution having v degrees ||| v	count=1
function	sequence of date ||| str	count=1
function	residual [function_2] ||| [function_2] [function_1]	count=1
module	the us macro ||| macrodata	count=1
arg	the orthogonal polynomial approximation ||| x polybase order limits	count=1
function	two ordinal ||| test ordinal	count=1
function	quantize ||| prob quantize cdf	count=2
arg	generate the ||| mod	count=1
arg	the estimated density ||| density	count=1
class	a wald-test for a ||| results	count=1
module	returns ||| tsa	count=2
module	for ||| stats libqsturng	count=2
function	matrix ||| mat	count=1
function	freedom of residuals ||| resid	count=1
arg	time periods ||| time	count=1
arg	of x ||| x index	count=1
function	and other info needed ||| state	count=1
arg	design matrix parameters ||| params exog exposure offset	count=1
arg	the approximate inverse ||| params	count=1
arg	optional estimate of mu ||| mu	count=1
function	test if the ||| test group	count=1
class	the conditional ||| conditional	count=1
arg	of parameters ||| params	count=1
function	compute forecast [function_2] ||| [function_2] [function_1]	count=1
function	strings ||| dates from str	count=1
arg	matrix parameters ||| params exog exposure	count=1
function	the regularized ||| regularized	count=1
function	approximate inverse covariance ||| wdesign mat	count=1
function	out of sample prediction ||| predict out of sample	count=1
arg	one sample proportion the ||| value nobs alpha	count=1
module	in ||| iolib	count=2
arg	f returns ||| f epsilon	count=1
function	inverse ||| wdesign	count=1
function_arg	regularized [arg_2] ||| [arg_2] [function_1]	count=1
function	approximate inverse ||| calc wdesign	count=1
arg	method parameters ||| method alpha	count=2
function	these ||| termnames	count=1
function	partial regression for ||| partregress grid	count=1
arg	weighted design matrix necessary ||| mod params hess_kwds	count=1
function	requested equation ||| eq index	count=1
module	variable for ||| stats	count=1
function	trace ab ||| trace symbanded	count=2
function_arg	axes with [arg_2] ||| [function_1] [arg_2]	count=1
arg	the fitted mean response ||| mu freq_weights	count=4
function	[function_1] [function_2] ||| [function_1] [function_2]	count=1100
arg	'iteritems' [arg] available ||| [arg]	count=1
arg	the scatter ||| scatter ax	count=1
module	for a single variable ||| imputation	count=1
arg	and exposure ||| exposure	count=1
function	terms ||| terms	count=1
function	as a latex tabular ||| as latex tabular	count=1
arg	recursions ||| cls params arma_model set_sigma2	count=1
arg	v ||| v	count=5
arg	plots lags ||| x ax lags alpha	count=1
class	component ||| components results	count=2
arg	q is imposed ||| sinv r q	count=2
function	the four kurtosis measures ||| robust kurtosis	count=1
function	the test statistic see ||| test	count=1
arg	parameter of [arg_2] ||| [arg_2] [arg_1]	count=9
function_arg	unsqueeze a [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] interval ||| [function_1] beta param_num [arg_2]	count=1
function_arg	[function_1] correlation matrix ||| [function_1] [arg_2]	count=1
arg	parameters ||| params exog	count=1
function	lambda parameter in ||| lambda	count=1
arg	conditional expectation partial ||| focus_exog frac cond_means	count=1
function_arg	affine transform [arg_2] ||| [arg_2] [function_1]	count=1
arg	a reference line ||| line x	count=1
arg	1d ||| unbiased	count=1
class	of the parameter estimates ||| results	count=1
module	squares along first ||| tsa	count=1
arg	'star' ||| eta est_vect weights	count=1
function	of observations [function_2] ||| [function_2] [function_1]	count=1
function_arg	probability of [arg_2] ||| [function_1] [arg_2]	count=2
arg	[arg_1] by cor_length ||| [arg_2] [arg_1]	count=3
module	joblib only if ||| tools	count=1
arg	: [arg_2] ||| [arg_1] [arg_2]	count=1
arg	summarize the ||| yname xname title alpha	count=1
arg	[arg_1] function to ||| [arg_2] [arg_1]	count=2
function	update ||| update representation	count=2
function	cdf ||| cdf	count=1
function	convolution centered ||| convolution filter	count=1
module	date ||| base	count=1
arg	[arg_1] : int ||| [arg_1] [arg_2]	count=1
function	hazard function for ||| hazard function	count=2
arg	any ||| fargs	count=1
module_class	[module_1] [class_2] works only if x ||| [module_1] [class_2] filter2 x pad	count=1
module	runs test ||| sandbox stats	count=1
function	cusum ||| cusum	count=2
module	info needed ||| tsa	count=1
function	transform matrices with singular ||| pacf python	count=1
class	estimate the gls ||| gls	count=1
module	distribution where ||| sandbox distributions	count=1
arg	summarize multiple results ||| results	count=1
arg	compute a wald-test for ||| cov_p	count=1
module	returns the ||| duration	count=1
function	stata's ||| stata fmt	count=1
class	computes the significance value ||| reg coef c	count=1
class	[class] scaling ||| [class]	count=1
module_class	[module_1] marginal effects ||| [module_1] [class_2]	count=2
function	estimate ||| fit find nfact	count=1
function	datetime ||| from str	count=1
module	in an ||| tsa	count=3
class	371 in [8] ||| coef c	count=1
arg	maxiter or change ||| start maxiter	count=1
arg	assumes ||| groupidx	count=1
function_arg	insert column [arg_2] ||| [function_1] [arg_2]	count=1
arg	an array with ||| x col	count=1
arg	a data array ||| a	count=1
arg	variance is the same ||| x idx split	count=1
class	for lagorder ||| varresults	count=1
function_arg	an exog [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] packed parameter ||| [function_2] [function_1]	count=1
arg	reusable function to ||| values stderr impcol rescol	count=1
function	random ||| random	count=2
function	inverse ||| inverse	count=2
function_arg	convert correlation matrix ||| corr2cov corr	count=1
function	[function_1] [function_2] vector from its conditional ||| [function_1] [function_2]	count=3
class	significance value ||| test reg coef c	count=1
module_class	of [module_1] [class_2] ||| [module_1] [class_2]	count=12
module	of distribution function for ||| distributions	count=2
function	contains [function] entries ||| has [function]	count=1
function	partial regression ||| partregress	count=2
function	and returns ||| str	count=1
function	of unobserved factors ||| factors	count=1
arg	in the first elements ||| a b index inplace	count=1
arg	weighted empirical ||| eta est_vect weights nobs	count=1
function	format for ||| to	count=1
function	the marginal survival function ||| kernel survfunc	count=1
arg	by ||| model params exog	count=1
module	values for a ||| imputation	count=1
class	cross validation provides ||| leave	count=1
function	d ||| compute d	count=1
module	notebook ||| iolib	count=1
function	heteroskedasticity of standardized residuals ||| heteroskedasticity	count=1
arg	of elements of x ||| x	count=1
function	first variable name ||| get endog name	count=1
function	cluster ||| cluster	count=1
arg	and other ||| params	count=1
arg	approximate inverse ||| mod	count=1
function_arg	log [arg_2] ||| emplike opt functs [function_1] star [arg_2]	count=2
function	an index parameters ||| index	count=1
module	of marginal effects ||| discrete	count=1
function	of marginal ||| cov	count=1
arg	the system matrices ||| cls params arma_model	count=1
arg	joint linear hypothesis ||| scale invcov	count=1
arg	statistic for independence of ||| x max_dim epsilon distance	count=1
function	the crude ||| crude oddsratio	count=1
function	from sif to datetime ||| elapsed date to datetime	count=1
arg	the model updates ||| transformed complex_step	count=1
function	from [function_2] ||| [function_2] [function_1]	count=4
function	get the ||| get prediction	count=1
function	[function] reference asymtotic ||| [function] reference	count=2
arg	a can be 1d ||| a	count=1
function	[function_1] unknown mean ||| [function_2] [function_1]	count=1
function	[function_1] cvxopt solvers ||| [function_1] l1 [function_2]	count=1
arg	function f ||| f	count=1
rep	return none [function_arg_2] ||| [module_class_1] [function_arg_2]	count=9
function	the anscombe [function_2] ||| [function_2] [function_1]	count=4
arg	one sample proportion ||| nobs	count=1
function	conditional covariance matrix of ||| cov	count=1
class	odds ||| odds	count=2
module	model and ||| emplike	count=1
function_arg	[function_1] formula ||| [arg_2] [function_1]	count=1
function	of exogenous ||| exog	count=1
arg	params ||| params	count=10
function_arg	create [function_1] [arg_2] diagonal ||| [function_1] [arg_2]	count=1
function	solve ||| solve power	count=9
function	[function_1] final simulation ||| [function_1] [function_2]	count=3
class	and ||| kalman	count=1
module	if function ||| tools	count=1
arg	order of a sequence ||| order	count=1
function	variable ||| update	count=1
arg	the estimated density and ||| density	count=1
function	[function_1] design matrix ||| [function_2] [function_1]	count=8
function	parameter ||| get	count=1
function	hessian of ||| hessian	count=4
arg	group sums ||| group	count=1
class	hypothesis of identical means ||| compare means	count=1
function_arg	integrated [arg_2] ||| [arg_2] [function_1]	count=8
class	a hypothesis ||| desc stat uv	count=1
function	format for this ||| dtype to	count=1
function	fit the ||| fit	count=6
class	a single variable ||| micedata	count=1
function	for starting parameters ||| start	count=1
function	envelope [function_2] ||| [function_2] [function_1]	count=2
function_arg	location [arg_2] ||| [function_1] [arg_2]	count=2
class	new ordered ||| ordered	count=1
module	compute ||| tsa vector_ar	count=18
arg	the given index ||| index	count=1
class	bona fide ||| ortho poly	count=1
class	the model ||| likelihood model	count=1
arg	to a plot ||| ax lines_idx	count=1
arg	of non- equivalence of ||| low upp	count=1
arg	a ||| results	count=2
function	the observation and transition ||| obs	count=1
function_arg	[function_1] a plot ||| [function_1] [arg_2]	count=2
function	for a regression ||| beta	count=1
module	to ||| tsa	count=1
arg	the ||| mod	count=2
function	the log-likelihood gradient for ||| grad	count=1
arg	statistic and significance bounds ||| legend_loc fig figsize	count=2
class	equal to ||| descr stats	count=1
module	[module] moment estimator ||| [module]	count=1
arg	default though this requires ||| a ml	count=1
function_arg	for starting [arg_2] ||| [function_1] search [arg_2]	count=1
arg	calculate ||| effect_size nobs1 alpha ratio	count=3
function	from sif to datetime ||| date to datetime	count=1
class	a pickle of ||| results	count=1
function	filter [function] convention ||| set filter [function]	count=1
arg	scatter ||| scatter ax	count=1
arg	a design matrix parameters ||| params	count=1
arg	obtain a single random ||| group_ix	count=1
module_class	of [class_2] ||| [module_1] [class_2] results	count=1
module	of ||| statespace	count=1
function	memory ||| memory	count=1
class	ratio first pool ||| ratio	count=1
class	[class] scaling is ||| [class]	count=1
class	computes ||| reg coef c	count=1
arg	computes [arg] estimate for ||| [arg] bounds	count=1
arg	[arg_1] updates the ||| [arg_1] [arg_2]	count=1
arg	x x ||| x	count=1
function	search for starting parameters ||| start params search	count=1
class	wald-test for ||| likelihood model results	count=1
function	autoregressive coefficients ||| autoregressive	count=1
function	matrices with singular ||| python	count=1
function	transition ||| transition	count=1
arg	by r [arg_2] ||| [arg_2] [arg_1]	count=1
function	all correlation [function_2] ||| [function_1] [function_2]	count=4
function	the mean of ||| mean	count=1
function	date ||| dates	count=1
class	computes the significance ||| test reg coef	count=1
arg	common rows [arg] [y x] ||| [arg]	count=1
arg	variance is the ||| x	count=1
function	have the integer row ||| maybe reset index	count=1
function	approximate inverse covariance matrix ||| calc wdesign mat	count=1
arg	data ||| endog exog	count=2
arg	is ||| y x	count=1
function	df ||| df	count=1
module	of freedom ||| tsa vector_ar	count=1
function	to handle strings and ||| get	count=1
class	parameter estimates ||| gmmresults	count=1
class	arma model currently uses ||| arma	count=1
arg	[arg_1] ar ||| [arg_2] ma [arg_1]	count=2
arg	is the special ||| x	count=1
arg	variance-covariance of marginal ||| params exog cov_params	count=1
function	[function_1] that mean ||| [function_2] [function_1]	count=1
module	with zero axis ||| stats	count=1
module_class	[module_1] p-p ||| [module_1] [class_2]	count=2
function	sif to ||| elapsed date to	count=1
class	(nobs_i nobs_i) jp check ||| unit	count=1
arg	to generate ||| mod	count=1
function_arg	[function_1] of x ||| [function_1] [arg_2]	count=3
function	is sqrt of chisquare ||| chisquare	count=1
function	seasonal decomposition using ||| seasonal decompose	count=2
arg	model of coles ||| t beta	count=1
module	degrees of freedom ||| tsa	count=1
function	for nonparametric regression ||| reg	count=2
arg	the range of z ||| z	count=3
function	categorical ||| categorical	count=1
class	least squares ||| least squares	count=4
function	parameter estimates ||| get	count=1
arg	a wald-test for ||| cov_p	count=1
arg	apply linear transform ||| x transform	count=1
function	and integer ||| maybe	count=1
arg	is the same in ||| x idx split	count=1
arg	spaced time periods ||| x time nlags	count=1
arg	unconstrained parameters ||| unconstrained	count=1
function_arg	linear constraint [arg_2] ||| [function_1] params sinv [arg_2]	count=1
function	provides a summary ||| summary find nfact	count=2
arg	given standard deviation ||| std	count=1
function	a correlation sum ||| correlation sum	count=2
arg	shape scale ||| shape scale	count=2
arg	of the model updates ||| transformed complex_step	count=1
function	the distribution for discrete ||| discrete	count=1
function	loglikelihood [function] ||| score [function]	count=1
arg	we have ||| weights_func	count=1
class	estimates of ||| results	count=1
module	function [module] ||| [module]	count=2
arg	wald-test ||| r_matrix	count=1
function	format ||| to	count=2
arg	kim & white parameters ||| y axis ab dg	count=1
function	of marginal effects by ||| cov	count=1
arg	coefficients anderson [arg] correlations test ||| [arg]	count=1
class	[class] error ||| [class]	count=1
function	crude ||| observed crude oddsratio	count=1
function	mle parameters ||| fitbinned	count=1
function	logarithm ||| logpdf	count=1
arg	first elements of the ||| inplace	count=3
module	in regression ?) ||| sandbox panel	count=1
function	evaluate the hessian ||| hessian	count=1
module	for panel data ||| stats	count=1
arg	non- equivalence ||| low upp	count=3
function_arg	thresholded [arg_2] ||| [function_1] data [arg_2]	count=1
arg	returns 1d array parameters ||| epsilon args	count=1
class	bernoulli or [class] ||| [class]	count=1
arg	lags on ||| lags alpha	count=1
function	hazard [function_2] ||| [function_2] [function_1]	count=4
arg	variance-covariance of marginal ||| exog cov_params	count=1
arg	error parameters ||| x1 x2 ddof axis	count=1
module	the unconstrained model ||| genmod	count=1
class	of the parameter ||| gmmresults	count=1
function	two [function] sample tost ||| ttost [function]	count=1
arg	into a single ||| has_fe	count=1
arg	calculate ||| effect_size nobs alpha df	count=1
function	to ||| elapsed date to	count=1
function	of another set ||| set	count=1
function	hessian function at ||| hessian	count=1
arg	the nodewise_weightvalue ||| nodewise_row	count=1
class	get ||| series model	count=1
arg	either upper or lower ||| lower	count=1
arg	of x by ||| x index	count=1
function	add [function_2] ||| [function_1] [function_2]	count=4
arg	[arg_1] returns ||| [arg_1] [arg_2]	count=6
function	[function_1] squares ||| [function_2] [function_1]	count=1
function	index ||| index	count=1
arg	the delta ||| exog	count=1
arg	the [arg] ||| alternative usevar [arg]	count=1
function_arg	[function_1] series simply ||| [arg_2] [function_1]	count=1
function	[function_1] kurtosis measures ||| [function_1] [function_2]	count=1
arg	by a cdf ||| binsx binsy cdf	count=1
function	take a linear ||| ols	count=1
function_arg	[function_1] process ||| [function_1] acovf [arg_2]	count=2
arg	discrepancy between ||| lambd axis	count=1
class	andrew's [class_2] ||| [class_2] [class_1]	count=2
arg	equivalence of one ||| low upp	count=1
arg	by r ||| r	count=1
function	sif to datetime ||| date to datetime	count=1
arg	joint linear ||| scale invcov	count=1
function	timing ||| timing	count=1
function	a possibly time-varying vector ||| vector	count=1
function	sum of squares of ||| squares	count=1
function	needed for the ||| init kalman	count=1
arg	for a ||| r_matrix cov_p scale	count=1
module	values ||| imputation	count=1
function	arma process ||| arma	count=1
function	[function_1] iqr for ||| [function_2] [function_1]	count=2
module	is used for ||| stats	count=1
function	the data ||| clear data	count=1
function_arg	[function_1] params ||| [arg_2] [function_1]	count=2
function	strings ||| str	count=1
function	data home ||| clear data home	count=2
arg	in-sample prediction ||| params start end	count=1
function_arg	[function_1] an arima ||| [function_1] [arg_2]	count=1
arg	hac ||| results nlags	count=1
function	generate a ||| generate	count=1
arg	norm and ||| scale norm axis	count=1
arg	wald-test ||| cov_p	count=1
arg	the first elements of ||| b index inplace	count=1
function_arg	[function_1] objects in ||| [arg_2] [function_1]	count=1
function	observations ||| loglikeobs	count=1
arg	anova type ii table ||| design_info n_rows test	count=1
arg	with correlations determined ||| n num_nonconst_covariates	count=1
arg	[arg] the ||| [arg]	count=1
module	irf ||| tsa vector_ar	count=2
function	a [function] ||| [function]	count=6
arg	system matrices ||| arma_model	count=1
function	needed ||| create mpl fig	count=2
function	the measurement ||| measurement	count=1
class	the parameter estimates with ||| gmmresults	count=1
function	[function_1] inverse ||| [function_2] [function_1]	count=3
arg	creates a ||| mu1_low mu1_upp mu2_low mu2_upp	count=1
arg	an index or ||| index silent	count=1
arg	equivalence ||| x2 low upp	count=1
module	results from the ||| stats	count=1
function	and returns a list ||| dates from str	count=1
class	binomial family ||| binomial	count=1
function	cohn numbers for ||| cohn numbers	count=2
class	1 period [class] only ||| [class]	count=1
class	of identical means ||| compare means	count=1
arg	studentized ||| results external	count=1
function_arg	from [arg_2] ||| [function_1] y [arg_2]	count=1
class	the summary table ||| summary	count=2
arg	the [arg] of ||| alternative usevar [arg]	count=1
function	[function_1] includes the ||| [function_2] [function_1]	count=12
function	date strings ||| dates from	count=1
arg	parameters ||| alpha beta	count=1
module	noise ||| vector_ar	count=1
arg	by the delta method ||| model params exog	count=1
arg	effects ||| params exog	count=1
module_class	compute [class_2] ||| [module_1] [class_2]	count=2
arg	ar ||| ar ma nobs	count=1
module	[module_1] the model ||| [module_1] [module_2]	count=2
arg	residuals and cusum test ||| skip lamda alpha	count=1
module	for ||| imputation	count=1
function_arg	[function_1] is ||| [arg_2] [function_1]	count=1
class	test statistic ||| test reg coef	count=1
function	logistic transform ||| untransform logistic	count=1
class	compute ||| likelihood	count=1
module	sample z-test for ||| stats	count=1
arg	squares ||| x	count=1
function	hac independent of ||| all hac	count=1
arg	method ||| model	count=1
module	[module] dataset and ||| datasets [module]	count=1
arg	smoothing estimate with confidence ||| alpha	count=1
arg	can be 2d a ||| a	count=1
function	parameter estimates with ||| get	count=1
class	marginal effects ||| geemargins	count=2
function	or recursive ||| recursive	count=1
function	set the filtering ||| set	count=1
function	difference between the log ||| ci limits mu	count=1
function	stata's default format for ||| dtype to default stata	count=1
arg	the variance-covariance of marginal ||| exog cov_params	count=1
class	and model ||| likelihood model	count=1
class	the kernel smoothing ||| kernel	count=1
function	eigenvalues and eigenvectors ||| using	count=1
module	info needed ||| tsa kalmanf	count=1
function	calculates the difference between ||| ci limits mu	count=1
arg	function ||| function	count=2
function	required ||| res	count=1
function	of categorical variables ||| categorical	count=1
function	[function_1] tabular ||| [function_1] [function_2]	count=3
module	[module] (x'x)^ -1 ||| [module]	count=1
function	unsqueeze a ||| unsqueeze	count=1
function	the observation and ||| obs	count=1
class	the global [class] based on ||| global [class]	count=1
module	fit ols regression for ||| regression	count=1
function	vector containing [function] ||| [function]	count=1
function	list of datetime ||| from str	count=1
module	noise covariance ||| vector_ar	count=1
arg	transform for ||| transform group_iter	count=1
class	test statistic ||| test reg coef c	count=1
arg	summarize the ||| xname title alpha	count=3
function_arg	at [arg_2] ||| [function_1] obs [arg_2]	count=2
function	linearity the ||| linear	count=2
module	distributions with 1 ||| distributions	count=2
function	linear ||| est loc linear	count=2
module	on the ||| genmod	count=1
function	search for starting ||| start params search	count=1
arg	with respect to ||| offset_exposure	count=1
function	[function_1] home ||| [function_2] [function_1]	count=3
arg	mixedlmparams ||| fe_params cov_re cov_re_sqrt vcomp	count=1
class	a wald-test for ||| model results	count=1
class	a hypothesis ||| uv	count=1
arg	data [arg_2] ||| [arg_2] [arg_1]	count=1
arg	model ||| model	count=7
module	by ||| discrete	count=1
module_class	kalman [class_2] ||| [module_1] kalman [class_2]	count=2
function	the scale ||| scale	count=1
arg	confidence interval is ||| alpha	count=1
function	[function_1] autocorrelations from ||| [function_1] [function_2]	count=3
function	a list of datetime ||| dates from str	count=1
arg	noise at noise_level ||| noise_level	count=2
function	observations [function_2] ||| [function_1] [function_2]	count=1
arg	equal spaced time periods ||| time nlags	count=1
module	joblib only if available ||| tools	count=1
class	distributed ||| distributed model	count=2
class	of model returns -hessian ||| model	count=2
function	integer row labels from ||| maybe	count=1
function	affine ||| affine	count=1
arg	where this is ||| x	count=1
module_class	[module_1] smoothing does ||| [module_1] [class_2]	count=1
function	wang-ryzin kernel [function_2] ||| [function_1] [function_2]	count=1
module_class	kalman [class_2] ||| [module_1] [class_2]	count=2
arg	c and an ||| c	count=1
function	loglikelihood for an ||| loglike	count=1
module	var ||| vector_ar	count=1
function	standard deviation of ||| stde	count=1
module	[module] difference between ||| [module]	count=1
arg	one ||| value nobs alpha	count=1
class	random effects covariance ||| mixed	count=1
arg	a design matrix parameters ||| params exog exposure	count=1
module	of date strings ||| base	count=1
function	method to [function_2] ||| [function_2] [function_1]	count=2
arg	for a given family ||| maxiter method	count=1
function	[function_1] correlation ||| [function_1] [function_2]	count=1
function	set from a list ||| set	count=1
module	for simultaneous tests ||| sandbox stats	count=1
function	to get [function_2] ||| [function_2] [function_1]	count=2
function	autocorrelation ||| acorr	count=2
class	the significance value ||| test reg coef c	count=1
arg	& ||| y x beta alph	count=1
function	a correlation ||| correlation	count=1
module	regression returns ||| regression	count=1
function	convolution centered and ||| convolution filter	count=1
function	transform arbitrary ||| constrain sv	count=1
arg	for a [arg] ||| start_params method [arg]	count=2
function	estimates the regularized fitted ||| est regularized	count=1
arg	by cor_length ||| cor_length	count=1
arg	1 max_dim ||| indicators max_dim	count=1
arg	labels [arg_2] ||| [arg_2] [arg_1]	count=5
class	hypothesis ||| likelihood model results	count=2
arg	parameters ||| params transformed	count=1
function	h ||| get h	count=1
function	calculates the ||| wdesign	count=1
arg	x ||| x index counts dummies	count=1
function	[function_1] [function_2] of ||| [function_1] [function_2]	count=2
module	selection ||| tsa	count=1
module_class	the distributed estimation ||| base distributed model	count=1
module	for distributions with 1 ||| sandbox distributions	count=2
module	info needed for the ||| tsa	count=1
function	for starting ||| start params	count=1
module	plot of ||| graphics	count=1
class	string the table ||| simple table	count=1
arg	the delta method ||| exog	count=1
function	information matrix ||| information matrix	count=2
function	for a ||| wald test	count=1
function	determine ||| limits	count=1
function	stata's default ||| default stata fmt	count=2
function	update the ||| update	count=4
function	[function_1] regression ||| [function_2] [function_1]	count=1
arg	ljung-box ||| lags boxpierce	count=1
arg	divided by nobs ||| nobs n_bins alpha	count=1
arg	the fitted ||| method atexog dummy	count=2
function	of freedom of residuals ||| resid	count=1
function	helper function ||| sumofsq	count=1
function	[function] helper ||| [function]	count=1
module	coefficients as panel ||| tsa vector_ar	count=1
function_arg	[function_1] bitmask ||| [function_1] [arg_2]	count=7
arg	concatenate a [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] key [arg_2]	count=18
function	em step ||| em	count=2
class	significance value ||| reg coef c	count=1
arg	plot a reference ||| ax	count=1
arg	by time groupidx ||| groupidx	count=1
function	use gls to ||| get fe	count=1
class	estimates the regularized ||| regularized	count=1
class	p-p plot ||| prob plot	count=2
function	data for ||| data	count=1
module	in ipython notebook ||| iolib	count=1
function	for out ||| out	count=1
module	of date strings ||| tsa base	count=1
function_arg	ticks and [arg_2] ||| [arg_2] [function_1]	count=4
module	if available ||| tools	count=1
arg	of marginal ||| model params exog	count=1
function_arg	[function_1] bitmask from ||| [arg_2] [function_1]	count=7
function	delta method ||| cov params	count=1
module	distributions ||| distributions	count=2
arg	to obtain a single ||| group_ix	count=1
function	multinomial proportions ||| multinomial proportions	count=2
function	arma ||| arma	count=8
class	of the parameter estimates ||| phreg results	count=1
function_arg	[function_1] is a ||| [function_1] [arg_2]	count=1
function	residuals ||| residuals	count=2
class	var p ||| varresults	count=1
function	first ||| sumofsq	count=1
arg	for a ||| r_matrix	count=1
module	error of the parameter ||| sandbox regression	count=1
function	calculate sum ||| sumofsq	count=1
function	'data' contains [function] entries otherwise ||| has [function]	count=1
class	plot ||| components results	count=1
function	of the random effects ||| random effects	count=1
function	covariance of the sample ||| cov	count=1
class	[class] transform ||| [class]	count=1
arg	other ||| other	count=3
class	binomial data ||| binomial	count=1
function	power ||| power	count=6
arg	params parameters ||| params	count=2
module	and returns a list ||| base	count=1
function	prediction and out-of-sample forecasting ||| get prediction	count=4
module	info ||| kalmanf	count=1
function	lfilter to produce ||| miso lfilter	count=1
arg	for teststat ||| teststat	count=1
function	to generate the ||| calc	count=1
module	parameter ||| sandbox	count=1
function	observations ||| df	count=1
arg	norm ||| norm	count=1
arg	data as binary ||| endog exog groups time	count=2
arg	of an arima ||| order start_params method	count=1
function	estimate ||| fit find	count=1
arg	x y normed=true detrend=detrend_none ||| x y normed	count=1
arg	1d parameters ||| y unbiased	count=1
arg	arima ||| order start_params method	count=1
function	the location of a ||| loc	count=2
arg	calculates ||| mod params	count=1
module	the parameter estimates with ||| sandbox	count=1
module_class	[module_1] two independent ||| [module_1] gof chisquare [class_2]	count=1
function	rectangle [function] ||| prob [function]	count=3
class	calculates ||| opt functs	count=1
module	parameter estimates for ||| stats	count=1
class	perform simulation smoothing ||| simulation smooth	count=2
class	wald ||| model results	count=1
arg	generate ||| params	count=1
arg	eps by zero ||| x eps	count=2
arg	return's ljung-box ||| nobs type	count=1
function	log determinant ||| logdet	count=1
class	test ||| test reg coef c	count=1
class	autocovariance from [class] scaling ||| [class]	count=1
module	entering return ||| iolib	count=1
module	to [module_2] ||| [module_1] [module_2]	count=4
module	for one sample or ||| stats	count=1
arg	nlags of ||| nlags	count=1
arg	parameters ||| params transformed approx_complex_step	count=1
module	sequence ||| tsa	count=1
module	returns a list of ||| tsa base	count=1
class	linear ||| model	count=2
module_class	[module_1] filter ||| [module_1] [class_2]	count=2
arg	an index or ||| end index	count=1
arg	array >>> from ||| data axis oldshape	count=1
arg	confidence interval for a ||| sig	count=1
function	set ||| set	count=6
arg	indices are the variables ||| indices values	count=1
function	fisher information matrix ||| information	count=2
arg	views on [arg] ||| [arg] x	count=1
arg	given by a cdf ||| binsx binsy cdf	count=1
arg	complete equal spaced time ||| time	count=1
function_arg	the thresholded [arg_2] ||| [arg_2] [function_1]	count=1
function	from [function] ||| [function] state	count=1
function_arg	[function_1] unconstrained parameters ||| [function_1] [arg_2]	count=1
arg	try ||| results alpha float_format title	count=1
arg	d2 with d1 = ||| d1	count=1
arg	scale only tested ||| scale	count=2
class	significance value for the ||| coef	count=1
function	predict for the provided ||| predict	count=1
arg	the ||| model params exog	count=2
function	effects by the ||| cov	count=1
module	test ||| sandbox tsa	count=2
module	date strings ||| tsa base	count=1
function	calculates ||| wdesign	count=1
module	p ||| tsa vector_ar	count=2
arg	given exogenous variables ||| params exog exposure offset	count=1
module	matrix s ||| sandbox	count=1
function_arg	derivative of [arg_2] ||| [arg_2] [function_1]	count=2
function	test ||| check	count=1
arg	linear ||| r_matrix cov_p scale	count=1
module	and returns a ||| tsa	count=1
module	the a table for ||| stats	count=2
function	standard errors of estimated ||| bse	count=1
arg	train/test indexes [arg] split ||| [arg]	count=3
function	a knockoff [function_2] ||| [function_2] [function_1]	count=2
arg	* [arg] * ||| results [arg]	count=1
class	kalman [class_2] ||| [class_1] [class_2]	count=1
arg	frequency of x parameters ||| x	count=1
module	for distributions with ||| distributions	count=2
class	the f-test for a ||| model results	count=1
class	imputed values ||| micedata	count=1
function_arg	[function_1] exog see ||| [function_1] [arg_2]	count=1
arg	from the total partition ||| keep_all	count=1
arg	= rhs and returns ||| rhs	count=1
arg	string formula to data ||| data	count=2
module	the statespace ||| tsa statespace	count=1
arg	sample mean difference r ||| r	count=1
function	smoothing a lowess function ||| lowess	count=2
arg	and ||| cls	count=1
arg	or sf x returns ||| x n	count=1
class	notes ||| results	count=1
function	helper function [function] ||| [function]	count=1
arg	probability p [arg_2] ||| [arg_1] [arg_2]	count=1
class	of a two sample ||| gof	count=1
arg	approximate ||| mod	count=1
function	list of the names ||| names	count=1
module	interval for ||| stats	count=1
function	covariance [function_2] ||| [function_1] [function_2]	count=4
arg	test given in testfunc ||| testfunc	count=1
arg	columns [arg] ||| [arg]	count=1
arg	a wald-test for ||| r_matrix cov_p scale	count=1
arg	of nm ||| nm	count=2
class	none ||| simple table	count=2
class	arma process is ||| arma	count=1
function_arg	[function_1] teststat ||| [arg_2] [function_1]	count=1
function_arg	violin [arg_2] ||| [arg_2] [function_1]	count=6
arg	full rank scale_matrix ||| scale_matrix	count=2
function	for computing marginal effects ||| derivative	count=1
module_class	variance [class_2] ||| [module_1] variance [class_2]	count=1
arg	effects by the delta ||| model params	count=1
function	containing the score ||| score	count=1
arg	y ||| y normed detrend	count=1
class	371 in [8] ||| reg coef c	count=1
function	[function_1] tost the ||| [function_1] [function_2]	count=1
class	the table in ||| table	count=1
module	values for ||| stats	count=4
function	the efron method to ||| efron loglike	count=1
function	covariance for coefficients for ||| cov	count=1
module	distribution for ||| distributions	count=2
module	or jacobian if function ||| tools	count=1
function	computes the ||| margeff	count=1
function_arg	anova with [arg_2] ||| [arg_2] [function_1]	count=1
arg	for a parameter ||| param_num	count=1
arg	joint ||| invcov	count=1
class	a table ||| table	count=1
class	estimates ||| gmmresults	count=1
class	bspline ||| bspline	count=2
module	points to use for ||| stats	count=2
function	svd method ||| using svd	count=2
arg	norm ||| scale norm axis	count=1
function	by the delta ||| margeff	count=1
class	[class_1] smoothing does ||| [class_2] [class_1]	count=1
arg	stratifiedtable object ||| cls var1 var2 strata	count=1
class	returns the kernel smoothing ||| custom kernel	count=1
function	model ||| anova2 lm single	count=1
function	a random sample of ||| sample	count=1
class	and other ||| filter	count=1
class	of model returns -hessian ||| likelihood model	count=2
arg	equivalence of one sample ||| low upp	count=1
class	model returns ||| likelihood model	count=2
arg	effects by the ||| exog	count=1
function	transforms ||| star	count=1
class	padding of ||| fft	count=1
function	of the value effect ||| conf int	count=1
module	degrees of freedom correction ||| tsa vector_ar	count=1
module	the irls ||| genmod families	count=1
arg	x [arg_2] ||| [arg_2] [arg_1]	count=4
module	of ||| base	count=6
arg	the group ||| group	count=1
arg	autocorrelation function plots lags ||| x ax lags alpha	count=1
arg	nodewise_weightvalue ||| nodewise_row idx alpha	count=1
function	band ||| band	count=2
module	the elements of ||| tsa statespace	count=1
function	vector ||| vector	count=2
arg	weights ||| weights	count=1
function	return predicted probability ||| predict prob	count=2
arg	is not a ||| x	count=1
arg	calculate ||| effect_size nobs alpha alternative	count=1
class	compute a ||| model	count=1
arg	returns 1d array ||| epsilon args	count=1
arg	for n ||| n	count=1
arg	non- equivalence ||| x1 x2 low upp	count=1
function	approximate ||| calc wdesign mat	count=2
function	compute multivariate partial ||| compute multivariate pacf	count=2
arg	bitmask from a set ||| simulation_output simulate_state simulate_disturbance simulate_all	count=1
arg	value ||| value	count=1
arg	for univariate case ||| init_state init_var	count=1
arg	for any model ||| start_params fargs	count=1
function	of marginal effects ||| margeff cov	count=1
function_arg	[function_1] to y ||| [function_1] [arg_2]	count=1
arg	formula parameters ||| x formula	count=2
function	theoretical autocorrelation function ||| acf	count=1
function	of date ||| from	count=1
arg	respect to ||| offset_exposure	count=1
arg	[arg_1] of ||| [arg_1] [arg_2]	count=3
arg	any one parameter of ||| effect_size nobs	count=2
function	variance [function_2] ||| [function_1] [function_2]	count=5
arg	[arg_1] the results ||| [arg_2] [arg_1]	count=4
class	invertible by inverting roots ||| arma process	count=1
arg	with confidence ||| alpha	count=1
function	the random [function_2] ||| [function_1] [function_2]	count=4
arg	correlations determined ||| n num_nonconst_covariates	count=1
function	[function_1] all odds ||| [function_1] equal [function_2]	count=1
function	of marginal effects by ||| margeff	count=1
function_arg	[function_1] [arg_2] ||| [function_1] coefficients coefficients error_variance [arg_2]	count=4
arg	teststat ||| teststat regression	count=1
arg	the variance-covariance of marginal ||| cov_params	count=1
function_arg	create equicorrelated [function_1] [arg_2] on off diagonal ||| [function_1] [arg_2]	count=1
arg	this assumes we have ||| weights_func	count=1
function	pooled ||| pooled	count=1
arg	calculate ||| effect_size nobs alpha	count=4
function	the distribution ||| get distribution	count=1
function	correlation coefficient ||| corr	count=1
arg	brings [arg] into correct ||| [arg]	count=1
class	a model instance ||| likelihood model	count=1
module	and other ||| tsa	count=1
class	[class_1] ratio ||| genmod global [class_1] [class_2]	count=1
function_arg	a monotone [arg_2] ||| [arg_2] [function_1]	count=3
arg	plots lags ||| ax lags alpha	count=1
arg	single regressor ||| endog exog_i exog_others data	count=1
arg	the ar ||| ar ma	count=1
class	draw and random disturbance ||| simulation smooth	count=1
module	returns ||| genmod	count=2
module	function ||| tsa	count=1
arg	lags on the ||| ax lags alpha	count=1
class	to estimate the gls ||| short panel gls	count=1
arg	throws away ||| x1 x2 alternative usevar	count=1
class	-> [class] dictionary with ||| [class]	count=1
arg	plot a reference line ||| ax line x y	count=1
arg	[arg_1] reweighted ||| [arg_2] [arg_1]	count=1
function	slices ||| slices	count=1
arg	studentized ||| external	count=1
function	add lowess ||| add lowess	count=2
function_arg	to test [arg_2] ||| [arg_2] [function_1]	count=3
function	against mean comparison ||| diff mean nm	count=2
function	use gls ||| fe	count=1
function	density estimate ||| fit	count=1
arg	to obtain ||| group_ix	count=1
module	general specification test for ||| stats	count=1
module	and ||| tools	count=1
arg	results instances side-by-side coefs ||| results	count=1
function	[function_1] of random ||| [function_1] [function_2]	count=1
module	other ||| tsa kalmanf	count=2
function	all against [function_2] ||| [function_1] [function_2] nm	count=2
function	loglikelihood ||| loglike	count=3
module	compute ||| base	count=1
function	normalize the random variable ||| normalize	count=1
arg	model ||| model endog exog	count=1
module	error of ||| sandbox regression	count=1
function	return the ||| get	count=3
class	computes the significance value ||| test reg coef	count=1
function	returns an exog array ||| exog	count=1
module	of the parameter estimates ||| sandbox	count=1
class	returns ||| filter	count=1
class	of a t-test ||| ttest	count=1
arg	loc ||| loc	count=1
function	for all pairs of ||| allpairs	count=1
function_arg	indices [arg_2] ||| [function_1] [arg_2]	count=1
arg	for 1d ||| unbiased demean	count=1
arg	nlags ||| nlags	count=1
arg	[arg_1] this ||| [arg_2] [arg_1]	count=4
arg	anderson [arg] correlations test ||| [arg]	count=1
function_arg	at params ||| score obs params	count=1
arg	null hypothesis is ||| value ddof	count=1
function_arg	for arma [arg_2] ||| [function_1] periodogram ar ma [arg_2]	count=1
module	with options ||| sandbox regression	count=1
function_arg	[function_1] the unconditional ||| [function_1] start_params method maxiter [arg_2]	count=1
function	possibly time-varying vector ||| vector shape	count=1
function	get final simulation output ||| get simulation output	count=1
arg	>>> from numpy import ||| data axis oldshape	count=1
module	date strings and ||| tsa	count=1
module	only if ||| tools	count=1
function_arg	violin [arg_2] ||| [function_1] data [arg_2]	count=4
arg	flat [arg_2] ||| [arg_2] [arg_1]	count=2
function	cusum [function_2] ||| [function_2] [function_1]	count=3
function	difference between the log ||| ci limits	count=1
arg	helper function ||| x	count=1
class	arma ||| arma	count=13
function	the [function] just ||| [function]	count=1
class	for arma ||| arma	count=4
module	and ||| tsa	count=2
arg	may contain one matrix ||| inversion_method	count=1
module	labels [module] unique index ||| [module]	count=1
function	the approximate inverse ||| wdesign	count=1
class	on the grouping ||| grouping	count=1
function	of date ||| dates from str	count=1
module_class	of the arma ||| tsa arma	count=1
module_class	[module_1] [class_2] ||| [module_1] likelihood [class_2]	count=1
arg	one fitted linear model ||| model	count=1
arg	variable ||| variable lags fig	count=1
function_arg	generic [arg_2] ||| [function_1] [arg_2]	count=1
function	return predicted [function_2] ||| [function_2] [function_1]	count=2
arg	computes ||| params	count=1
function_arg	[function_1] the parameters ||| [arg_2] [function_1]	count=1
function	plot axes are needed ||| create mpl	count=1
module_class	regression ?) [class_2] ||| [module_1] [class_2]	count=2
function	for quantiles ||| quantiles	count=1
function	generate the approximate inverse ||| wdesign mat	count=1
arg	an index or ||| start end index silent	count=1
function	calculate ||| sumofsq	count=1
class	now ||| ar	count=1
function	log-likelihood function [function] at ||| llf [function]	count=2
function	correlation ||| norm corr	count=2
function	to the distribution ||| distribution	count=1
arg	is ||| x d	count=1
function	given variable ||| split data	count=1
arg	variance-covariance of marginal ||| cov_params	count=1
function	the determinant ||| logdet	count=1
function_arg	[function_1] divided by ||| [arg_2] [function_1]	count=3
function	partial autocorrelation [function_2] ||| [function_2] [function_1]	count=2
class	[class_1] mean ||| [class_1] [class_2]	count=7
function_arg	[function_1] fitted ||| [arg_2] [function_1]	count=1
function	squares along first ||| sumofsq	count=1
arg	a comparemeans object ||| cls data1 data2 weights1	count=1
arg	null hypothesis ||| value ddof	count=1
arg	mu [arg_2] ||| [arg_2] [arg_1]	count=1
function	pattern ||| pattern	count=1
function	values ||| fittedvalues	count=1
module	compute orthogonalized ||| vector_ar	count=1
function	the breslow method ||| breslow loglike	count=1
function	compute the plotting ||| plotting	count=1
arg	parameters ||| distfn params	count=2
function	inverse ||| wdesign mat	count=2
class	global odds ratio ||| global odds ratio	count=3
module	p loglikelihood ||| tsa vector_ar	count=1
arg	factor b ||| b	count=1
function	nominal ||| nominal	count=2
function	time point weighted ||| weighted	count=1
arg	objects in [arg_2] ||| [arg_1] [arg_2]	count=4
function	ratio test to test ||| test	count=1
class	kernel density ||| kernel	count=1
class	a 2x2 ||| table2x2	count=1
function	sample from a mixture ||| mixture rvs	count=1
class	var ||| varresults	count=1
function	text [function] ||| [function]	count=3
function	matrices with singular ||| pacf python	count=1
function	[function_1] fit ||| [function_2] [function_1]	count=4
function_arg	[function_1] row ||| [function_1] idx [arg_2]	count=1
arg	a wald-test for a ||| r_matrix	count=1
arg	compute a wald-test for ||| scale	count=1
class	and ||| kalman filter	count=2
function	calculate the ceres residuals ||| ceres	count=1
module	q test for ||| sandbox stats	count=1
arg	using [arg] matrix ||| maxn [arg]	count=1
arg	computes the ||| model params exog	count=1
class	v]) -> [class] ||| [class]	count=1
class	for a hypothesis ||| stat uv	count=1
arg	create ||| k_vars ar ma	count=1
arg	soln = rhs and ||| rhs	count=1
arg	the estimated density ||| density nobs alpha	count=1
arg	factor b nested ||| b	count=1
function_arg	[function_1] error bands ||| [function_1] [arg_2]	count=3
function	a panel of time ||| panel	count=1
module	for nested categories ||| stats	count=1
arg	regression results parameters ||| xname yname title alpha	count=1
function	less than [function_2] ||| [function_1] [function_2]	count=1
function_arg	clayton or [arg_2] ||| [arg_2] [function_1]	count=1
function	the approximate inverse covariance ||| calc	count=1
function	filtering via convolution centered ||| convolution	count=1
arg	with respect ||| params offset_exposure	count=1
function	breslow method to handle ||| breslow loglike	count=1
module	another distribution ||| distributions	count=1
function	movorder ||| check movorder	count=1
function	and other ||| kalman state	count=1
function	periodogram for arma process ||| arma periodogram	count=1
function	full parameter [function_2] ||| [function_1] [function_2] exog_re	count=1
arg	via hamilton filter ||| transformed cov_type cov_kwds	count=1
class	computes the significance ||| coef	count=1
function	insert ||| insert stubs	count=1
arg	name in tmp_arr ||| tmp_arr offset	count=1
arg	squares along first ||| x	count=1
function	derivative of the ||| deriv	count=7
module	date strings and ||| tsa base	count=1
module	distributions with 1 shape ||| sandbox distributions	count=2
function_arg	nominal [arg_2] ||| genmod nominal gee setup [function_1] [arg_2]	count=4
function	out of ||| out of	count=1
function	of variance [function_2] ||| [function_2] [function_1]	count=2
arg	whether variance is ||| y x idx split	count=1
function	predict for ||| predict	count=1
class	notebook ||| summary	count=1
function	full rank affine ||| affine	count=1
class	the object ||| mixed lmparams	count=1
function	the missing [function_2] ||| [function_1] [function_2]	count=1
arg	from a data array ||| data	count=1
arg	lags on ||| x ax lags alpha	count=1
function	get group means ||| group mean	count=2
class	model with t ||| model	count=1
function_arg	[function_1] corresponding distributedmodel ||| [function_1] [arg_2]	count=2
class	the tweedie family parameters ||| tweedie	count=1
module	estimator ||| robust	count=1
module	distribution of a ||| distributions	count=1
arg	to [arg_2] ||| tsa adfuller x maxlag [arg_1] [arg_2]	count=3
arg	structure to ||| rank ctol lam_min	count=1
function	the mediator ||| mediator	count=1
function	[function] is dropped ||| [function]	count=3
module	anderson-darling test for ||| stats	count=1
function	the baseline [function_2] ||| [function_2] [function_1]	count=8
function	ratio for a ||| ratio	count=1
arg	error bands assuming normally ||| orth repl t	count=2
arg	of each count level ||| n exog exposure offset	count=1
class	compute a wald-test for ||| likelihood model	count=1
function_arg	[function_1] debiasing parameters ||| [function_1] [arg_2]	count=2
function	all odds ||| odds	count=1
arg	data as ||| endog exog groups	count=2
function	partial [function_2] ||| [function_2] [function_1]	count=1
class	effects variables with ||| mixed lm	count=1
arg	is positive semi-definite ||| threshold	count=1
function	covariance ||| get covariance	count=1
module	compute var ||| tsa	count=1
module	required results ||| stats	count=1
class	[class_1] cross validation ||| [class_2] [class_1]	count=2
function	to determine [function_2] ||| [function_2] [function_1]	count=4
function	validate ||| validate	count=1
function	many degrees of freedom ||| df fit	count=1
function	used [function] reference ||| [function] reference	count=1
function	difference between ||| ci limits mu	count=1
class	factor ||| factor	count=2
function	binomial tost [function_2] ||| [function_1] [function_2]	count=4
arg	and principle components using ||| clf	count=1
function	function ||| function	count=1
function	[function] for a ||| [function]	count=1
function	evaluate the hessian function ||| hessian	count=1
arg	spectral projected gradient ||| grad start project	count=1
function	at ||| score	count=3
function	list ||| from str	count=1
function_arg	[function_1] data array ||| [arg_2] [function_1]	count=1
function	regularized fitted parameters is ||| regularized	count=1
class	from [class] scaling ||| [class]	count=1
function	vector containing [function] values ||| [function]	count=1
module_class	of [class_2] ||| [module_1] [class_2]	count=30
class	parameter estimates ||| phreg results	count=1
module	for all ||| stats	count=3
module	error ||| sandbox	count=1
function	[function] just the ||| make param [function]	count=1
arg	x returns ||| x	count=2
class	the discrete ||| discrete	count=2
function_arg	[function_1] [arg_2] ||| [function_1] corr [arg_2]	count=4
function_arg	[function_1] model ||| [function_1] [arg_2]	count=5
function	score with ||| score	count=1
class	a ||| results	count=4
function	values for a single ||| update	count=1
arg	gets a ||| true_params	count=1
arg	this assumes we have ||| nlags weights_func	count=1
function	simulate standard garch ||| generate garch	count=2
class	a wald-test ||| likelihood model	count=1
arg	the ||| model params	count=2
function	[function_1] means of ||| [function_1] [function_2]	count=2
function_arg	[function_1] the fitted ||| [arg_2] [function_1]	count=2
module	restriction matrix [module] ||| [module]	count=2
function	provide a summary ||| summary	count=1
module	required results from the ||| stats	count=1
arg	unconditional ||| tol	count=1
arg	compute a ||| r_matrix cov_p scale	count=1
arg	transform shape ||| shape	count=1
function	to test ||| test	count=1
function	[function_1] odds ||| [function_1] [function_2]	count=2
function	bivariate [function_2] ||| [function_2] [function_1]	count=1
function	proportion ||| proportion	count=1
arg	function f returns ||| x f epsilon	count=1
function	a list of ||| str	count=1
arg	[arg_1] lags ||| [arg_1] [arg_2]	count=2
arg	unconstrained ||| unconstrained	count=1
arg	endog resid ||| endog	count=1
arg	plots lags on ||| lags alpha	count=1
arg	in the data sequence ||| data	count=1
function	expanded [function] given the ||| [function]	count=1
arg	by the delta ||| params exog	count=1
arg	test whether variance is ||| y x	count=1
class	sample z-test ||| gof chisquare ind	count=1
function	representation of an ||| arma2ar	count=1
function	of the power ||| power	count=1
module	var p loglikelihood ||| vector_ar	count=1
arg	either upper or lower ||| a b lower	count=1
class	global [class_2] ||| [class_2] [class_1]	count=5
class	needed ||| filter	count=1
module	us macro ||| macrodata	count=1
function_arg	[function_1] formula parameters ||| [arg_2] [function_1]	count=1
module	time series with zero ||| stats	count=1
function	[function] credit ||| [function]	count=1
function	control performs [function_2] ||| [function_2] [function_1]	count=2
arg	computes ||| exog	count=1
module	be ||| sandbox	count=1
function	the hessian of the ||| hessian	count=1
function	covariance matrix for ||| get covariance matrix	count=2
function	coefficients [function_2] ||| [function_2] [function_1]	count=1
function	filtering via convolution ||| convolution	count=1
function	cumulative hazard ||| cumulative hazard	count=2
arg	key and ||| key	count=1
function	covariance for coefficients ||| cov params	count=1
function	group indices ||| combine indices	count=1
function	descriptive ||| group	count=1
function	simultaneous [function_2] ||| [function_1] [function_2]	count=1
class	formula ||| formula	count=2
function	hypothesis that mean is ||| mean	count=1
function_arg	[function_1] [arg_2] ||| [function_1] acf [arg_2]	count=9
arg	zero-th axis ||| k_diff k_seasonal_diff seasonal_periods	count=1
arg	a joint linear hypothesis ||| invcov	count=1
arg	in-sample ||| start end	count=1
module	for one fitted linear ||| stats	count=1
function	the data [function_2] ||| [function_2] [function_1]	count=1
function	labels ||| label	count=2
arg	fitted mean response ||| freq_weights scale	count=4
function	pearson [function_2] ||| [function_2] [function_1]	count=2
module	for nested ||| sandbox stats	count=1
arg	y and ||| y	count=1
function	stata date formats ||| stata	count=1
function	expanding ||| expanding	count=1
function_arg	ccpr [arg_2] ||| [function_1] [arg_2]	count=1
class	[class] x currently ||| arma [class]	count=1
arg	function f returns 1d ||| f epsilon args	count=1
function	state ||| generated state	count=1
function	a rectangle [function] ||| prob [function]	count=3
arg	basic version ||| correction	count=1
arg	variance-covariance of marginal effects ||| model params exog cov_params	count=1
arg	x by time or ||| x index	count=1
module	compute ||| vector_ar	count=14
function	a [function] ||| get [function]	count=1
function	fit to ||| fit	count=2
arg	function func ||| func low	count=1
function	the vector ||| missing vector	count=1
function	the delta ||| cov	count=1
arg	data ||| data	count=13
function	another set from a ||| set	count=1
arg	covariance matrix ||| mod	count=1
arg	just a harmonic mean ||| nobs_all srange	count=2
arg	vals ||| vals dcrit	count=1
arg	[arg] log-likelihood ||| mu [arg]	count=1
function	interval includes the end ||| reject interval	count=2
arg	variance-covariance of marginal effects ||| exog cov_params	count=1
class	results ||| olsinfluence	count=1
class	estimates of ||| factor results	count=1
arg	variable ||| variable lags fig figsize	count=1
arg	against a set ||| results exog_idx	count=1
function	sorted order ||| terms	count=1
arg	time selected by r ||| d r	count=1
module	matrices ||| statespace	count=1
class	of a mixture ||| mixture distribution	count=1
function	returns the dot product ||| dot	count=1
class	and model ||| model	count=1
module	calculates ||| base	count=1
class	to the random effects ||| mixed	count=1
arg	against a set of ||| results exog_idx	count=1
module	of the parameter estimates ||| sandbox regression	count=1
function	info needed for the ||| init	count=1
class	the significance value ||| coef	count=1
function	parameters for [function_2] ||| [function_2] start [function_1]	count=1
function	to [function_2] ||| [function_2] [function_1]	count=1
arg	fitted model ||| method atexog dummy	count=2
function_arg	ceres [arg_2] ||| [arg_2] [function_1]	count=1
module	info needed for the ||| kalmanf	count=1
arg	f returns 1d ||| f epsilon	count=1
arg	one sample proportion ||| nobs alpha alternative	count=1
function	a list of datetime ||| from str	count=1
module	the ||| stats	count=1
arg	where this is the ||| x	count=1
module	distribution for equal ||| distributions	count=1
arg	cutoff ||| cutoff	count=1
arg	for a [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	[function_1] row-wise ||| [function_1] data [arg_2]	count=4
function	independent ||| ind	count=1
arg	summarize the model ||| start title model_name	count=1
function	[function_1] home ||| [function_1] [function_2]	count=3
class	significance value for the ||| test reg coef	count=1
function	sif to datetime ||| elapsed date to datetime	count=1
module	list of datetime ||| tsa	count=1
function	all against [function_2] ||| [function_2] [function_1]	count=2
class	the table ||| table	count=3
module	of white ||| tsa vector_ar	count=1
arg	return ||| output_format	count=1
function	[function_1] inflation factor ||| [function_2] [function_1]	count=4
arg	eps ||| x eps	count=2
class	by inverting roots ||| arma process	count=1
function	[function] this is ||| sigma2 [function]	count=1
class	for a ||| model results	count=2
function	[function_1] minus ||| [function_2] [function_1]	count=3
class	comparison ||| tukey	count=1
module	in construction uses ||| tsa	count=1
function_arg	partial regression [arg_2] ||| [arg_2] [function_1]	count=1
arg	the corresponding distributedmodel ||| fit_kwds parallel_method	count=1
arg	variance/covariance ||| r_matrix column scale cov_p	count=1
function	[function_1] limit ||| [function_1] [function_2]	count=3
module	the stata manual on ||| base	count=1
arg	of error ||| x1 x2	count=1
arg	of ma ||| ma nobs	count=2
function	insert a ||| insert	count=1
arg	whether variance is ||| x	count=1
function	to get final simulation ||| get simulation	count=1
arg	structure to a ||| rank ctol lam_min	count=1
arg	x by time or ||| x index counts dummies	count=1
function	random draw [function] from ||| simulated [function]	count=1
arg	the scatter of ||| scatter ax	count=1
arg	lags on the horizontal ||| x ax lags	count=1
arg	key in a formula ||| key	count=1
function_arg	axes with [arg_2] ||| [arg_2] [function_1]	count=3
module	branches and list of ||| sandbox	count=1
class	writing to file ||| stata writer	count=1
function	[function_1] method ||| [function_1] [function_2]	count=2
arg	as a deepcopy in ||| tables keep_headers	count=1
function	[function_1] of ||| [function_1] [function_2]	count=3
arg	to matrices with singular ||| order k_endog	count=1
module	product of two ||| sandbox stats	count=2
arg	other info needed ||| params	count=1
function	freedom ||| df	count=1
function	determination (:math r^2) ||| determination	count=1
arg	and throws away the ||| x1 x2 alternative usevar	count=1
module	for distributions ||| distributions	count=2
arg	is the ||| x idx	count=1
arg	maxiter or change ||| maxiter	count=1
arg	a wald-test for a ||| cov_p	count=1
function	the model ||| model	count=1
function	[function] table ||| [function]	count=2
function	probability of ||| prob	count=1
arg	1 max_dim ||| max_dim	count=1
arg	for teststat ||| teststat regression	count=1
module	regression ?) ||| panel	count=1
module	imputation results ||| imputation	count=1
function_arg	transformed [arg_2] ||| [function_1] [arg_2]	count=1
function	variable the variance inflation ||| variance inflation	count=1
function	inner covariance matrix ||| s	count=1
arg	an arima ||| order start_params	count=1
arg	of marginal effects ||| model params	count=1
arg	and other info needed ||| params	count=1
function	[function_1] t ||| [function_1] [function_2]	count=1
function	cross validation [function_2] ||| [function_1] [function_2]	count=1
function	the ||| params	count=2
arg	axis ||| x axis	count=1
module	estimates for ||| stats	count=1
function	lowess function ||| lowess	count=2
function	a sequence ||| from str	count=1
module	kernel ||| nonparametric	count=1
function	model ||| fit	count=3
function	[function_1] extreme value ||| [function_1] [function_2]	count=2
module	the approximate inverse ||| base	count=1
function	corresponding detection ||| detection	count=1
function_arg	insert a row ||| insert idx row	count=2
class	[class_1] padding ||| [class_1] [class_2] filter2 x pad	count=3
function	inverse transformed ||| inverse transformed	count=2
arg	of s*i + a*b*a' ||| s a ata bi	count=1
arg	anderson [arg] correlations ||| [arg]	count=1
arg	rhs and ||| rhs	count=1
module	the parameter given by ||| regression	count=1
function	autocorrelation function of ||| acf	count=1
function	the covariance ||| get covariance	count=1
class	using the kalman filter ||| kalman filter	count=1
function	normal distribution [function_2] ||| [function_1] [function_2]	count=4
function	density the confidence interval ||| density confint	count=1
module	of estimates of ||| sandbox	count=1
arg	a set of x ||| x	count=1
function	[function_1] the correlation ||| [function_1] [function_2]	count=1
arg	[arg_1] and ma ||| [arg_1] [arg_2]	count=1
arg	r ||| d r	count=1
module	white noise covariance ||| tsa vector_ar	count=1
function	of datetime ||| from	count=1
function	each observation ||| obs	count=2
function	linear ||| wald test	count=2
function	multivariate autocovariances [function_2] ||| [function_2] [function_1]	count=1
arg	given by a cdf ||| binsy cdf	count=1
arg	first elements ||| inplace prefix	count=1
function	the test statistic see ||| compute test	count=1
function_arg	quantiles [arg_2] ||| [arg_2] [function_1]	count=1
arg	maxfact factors ||| maxfact	count=1
function	string ||| pad	count=1
arg	equations ||| rhs	count=1
module	the parameter ||| regression	count=1
module	the variables in the ||| nonparametric	count=1
class	test statistic ||| test	count=1
module	returns the confidence interval ||| regression	count=1
arg	calculates the nodewise_weightvalue ||| exog nodewise_row idx	count=1
arg	return a ||| method alpha start_params	count=2
arg	returns 1d array ||| epsilon	count=1
class	the ||| olsinfluence	count=1
function	marginal ||| cov	count=1
arg	[arg_1] string summarizing ||| [arg_2] [arg_1]	count=1
class	results from ||| olsinfluence	count=1
arg	to matrix ||| params	count=1
function	summary of all ||| summary	count=1
function	the anscombe residuals ||| resid anscombe	count=2
function	the difference between ||| ci limits mu	count=1
function	list ||| dates from str	count=1
arg	from ||| data	count=1
arg	in preparation for the ||| variance complex_step	count=1
class	white noise ||| varresults	count=1
function	effects for ||| effects	count=1
function_arg	[function_1] of equations ||| [function_1] [arg_2]	count=1
function	covariance for coefficients ||| cov	count=1
function	grid ||| grid	count=1
function_arg	of squares [arg_2] ||| [function_1] alpha [arg_2]	count=1
function	of observations minus ||| df resid	count=2
arg	preparation for the ||| variance complex_step	count=1
arg	hypothesis ||| r_matrix cov_p	count=1
function	final simulation [function_2] ||| [function_1] [function_2]	count=1
arg	results [arg_2] ||| [arg_1] [arg_2]	count=1
function	and returns ||| dates from	count=1
function	dummy variable array ||| dummy	count=1
function	by the delta method ||| margeff cov params	count=1
arg	range having v degrees ||| v	count=1
arg	function plots lags ||| ax lags	count=1
function_arg	latex tabular [arg_2] ||| [arg_2] [function_1]	count=1
function	the distribution of ||| get distribution	count=1
function	split the given rectangle ||| split	count=1
function	chisquare ||| chisquare	count=1
arg	is the ||| y x idx split	count=1
function_arg	[function_1] func ||| [function_1] [arg_2]	count=2
arg	autocorrelation ||| nlags	count=1
module_class	for comparison ||| sandbox stats tukey	count=1
module	endog duration values for ||| duration	count=2
class	of ||| model	count=1
function	hazard [function_2] ||| [function_1] [function_2]	count=4
function	other info needed ||| kalman state	count=1
arg	maxiter or ||| start maxiter	count=1
function	make plot ||| plot	count=1
class	for the conditional ||| conditional	count=1
class	results of [class_2] ||| [class_2] [class_1]	count=2
function	the breslow method to ||| breslow loglike	count=1
function	and other info needed ||| kalman state	count=1
function	baseline cumulative [function_2] ||| [function_1] [function_2]	count=5
function	the approximate inverse covariance ||| wdesign	count=1
class	of ||| factor results	count=1
function	[function_1] axes with ||| [function_1] [function_2]	count=1
function	a sequence of date ||| dates	count=1
function_arg	[function_1] plot ||| [arg_2] [function_1]	count=3
arg	the spectral projected gradient ||| grad	count=1
function	life ||| life	count=1
function_arg	[function_1] row into ||| [arg_2] [function_1]	count=1
function	kernel ||| kernel	count=1
function_arg	[function_1] [arg_2] ||| [function_1] ax [arg_2]	count=2
arg	and other ||| cls params	count=1
function	[function_1] names for ||| [function_1] [function_2]	count=2
function	distribution of ||| get distribution	count=2
arg	f returns ||| f epsilon args	count=1
module_class	for two independent ||| stats ttest ind	count=1
arg	linear transform for ||| x transform	count=1
arg	a parameter and ||| param_num	count=1
function	approximate inverse covariance matrix ||| wdesign	count=1
function	of the measurement disturbance ||| measurement disturbance	count=1
function	[function_1] [function_2] ||| [function_1] reject [function_2]	count=4
class	table ||| table	count=5
function	distribution ||| distribution	count=3
function_arg	frequency using [arg_2] ||| [arg_2] [function_1]	count=1
function	the covariance matrix ||| get covariance matrix	count=2
function	cumulant given moments ||| cumulant from moments	count=1
function	containing the score residuals ||| score residuals	count=1
function	affine transformation ||| affine	count=1
arg	variable ||| variable lags	count=1
function	return determinant of ||| detomega	count=1
arg	a string summarizing ||| get_l1_slsqp_results get_l1_cvxopt_results	count=1
arg	full ||| cov_type cov_kwds use_t	count=1
function	returns a ||| dates from str	count=1
arg	shape [arg_2] ||| [arg_2] [arg_1]	count=2
module	distributions with ||| distributions	count=2
arg	[arg_1] npcs and ||| [arg_2] [arg_1]	count=4
module	a simple ||| graphics	count=1
arg	[arg_1] we have ||| [arg_2] [arg_1]	count=1
function	used [function] ||| [function] reference	count=1
module	likelihood evaluation ||| regime_switching	count=2
function	covariance matrix ||| calc wdesign mat	count=1
function	generate the approximate inverse ||| mat	count=1
arg	and r samples ||| r	count=2
function	covariance matrix [function_2] ||| [function_2] [function_1]	count=13
class	needed for the ||| kalman filter	count=1
arg	intervals ||| counts	count=1
function	for the ||| init	count=1
function	lagorder selection ||| info	count=1
function_arg	test [arg_2] ||| [arg_2] [function_1]	count=9
arg	scale ||| scale	count=5
function_arg	[function_1] environment ||| [arg_2] [function_1]	count=4
function_arg	hessian [arg_2] ||| [function_1] factor [arg_2]	count=3
arg	contingency table ||| count_dict horizontal gap	count=1
function	of squares statistic and ||| squares	count=1
function	repr ||| repr	count=1
module	function in terms ||| genmod families	count=4
arg	function plots lags on ||| ax lags	count=1
arg	of z-scores ||| zscores null_proportion null_pdf deg	count=1
module	discrete ||| discrete	count=2
arg	exog see ||| exog	count=1
module	function in ||| genmod families	count=4
arg	k or ||| x k n	count=1
function	values() ||| values	count=1
arg	environment ||| center	count=1
function_arg	[function_1] whether restricted ||| [arg_2] [function_1]	count=8
class	model with t distributed ||| model	count=1
module	for distributions with 1 ||| distributions	count=2
function	test for the ||| test	count=1
arg	rater2 brings [arg] into correct ||| [arg]	count=1
function	add ||| add	count=2
function	of date strings ||| dates from str	count=1
arg	turns a sequence ||| dates	count=1
function	from data ||| from data	count=2
arg	likelihood via hamilton filter ||| transformed cov_type cov_kwds	count=1
arg	arrays in preparation ||| variance complex_step	count=1
arg	is ||| transform	count=2
arg	approximate inverse covariance matrix ||| mod params	count=1
function	starting ||| start	count=4
class	and other info needed ||| kalman	count=1
function	for out of ||| predict out of	count=1
function	indices ||| indices	count=1
class	of the kalman filter ||| kalman filter	count=1
function	a correlation [function_2] ||| [function_2] [function_1]	count=1
function	default ||| default	count=3
class	two independent sample parameters ||| ind	count=1
arg	order along [arg] 0 ||| x order [arg]	count=1
arg	tree to get ||| tree	count=1
function	get integer group indices ||| combine indices	count=1
function_arg	test if [arg_2] ||| [arg_2] [function_1]	count=6
arg	harmonic mean ||| srange	count=2
function	[function_1] hurvich criteria ||| [function_2] [function_1]	count=2
arg	teststat ||| teststat	count=1
function	transformed ||| transformed	count=1
module	of the roots of ||| tsa	count=1
function_arg	chisquare statistic [arg_2] ||| [function_1] power effect_size nobs [arg_2]	count=1
function	update the endpoints of ||| lowess update	count=1
function	var p loglikelihood ||| llf	count=1
arg	nodewise_weightvalue ||| nodewise_row	count=1
function	eubank similar to fan ||| fg1eu	count=1
module_class	on box-cox ||| base box cox	count=1
class	kernel density ||| custom kernel	count=1
function	regression [function_2] ||| [function_2] [function_1]	count=1
arg	x x can be ||| x	count=1
arg	principle components using mayavi ||| ix iy iz clf	count=1
module	matrix for white on ||| stats	count=1
class	for kernel ||| custom kernel	count=3
function	determinant of ||| smw logdet	count=1
function	x12path ||| find x12	count=1
function	to obtain the crude ||| observed crude oddsratio	count=1
function	to a text ||| savetxt	count=1
function	corresponding detection limit ||| detection limit index	count=2
function	single ||| update	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] pooled [function_arg_2]	count=1
function_arg	[function_1] [arg_2] off diagonal ||| [function_1] [arg_2]	count=1
function	[function_1] compute small ||| [function_2] using [function_1]	count=1
arg	marginal ||| exog	count=1
class	of logit ||| logit	count=1
function	orthogonalized ma ||| orth ma	count=1
function	constant ||| est loc constant	count=1
function_arg	[function_1] exog ||| [function_1] [arg_2]	count=1
class	[class_1] filter ||| [class_2] [class_1]	count=6
module	distribution given ||| distributions	count=1
function	calculate sum of squares ||| sumofsq	count=1
module	with ||| sandbox	count=1
arg	mixedlmparams ||| params k_fe k_re use_sqrt	count=1
arg	of columns according to ||| ar_coefs	count=1
class	table ||| simple table	count=1
arg	d1 ||| d1	count=1
module_class	of arma model ||| sandbox tsa arma	count=1
module	distribution of ||| distributions	count=2
module	and other ||| tsa kalmanf	count=1
function	aitchison-aitken [function_2] ||| [function_2] [function_1]	count=1
arg	with d1 [arg_2] ||| [arg_2] [arg_1]	count=1
arg	the system matrices and ||| cls params arma_model	count=1
arg	freedom v ||| v	count=1
function	[function_1] component ||| [function_1] [function_2]	count=1
function	method ||| cov	count=1
arg	method ||| params	count=1
function_arg	[function_1] fitted model ||| [arg_2] [function_1]	count=1
arg	by the delta method ||| model	count=1
class	info ||| kalman	count=1
function_arg	of chisquare [arg_2] ||| [function_1] power [arg_2]	count=1
function	influence ||| influence	count=1
module	wald-test ||| base	count=1
class	time stata ||| stata	count=1
function	missing [function_2] ||| [function_2] [function_1]	count=1
arg	nodewise_weightvalue ||| nodewise_row idx	count=1
function_arg	[function_1] rho ||| [arg_2] [function_1]	count=3
class	trimmed mean ||| trimmed mean	count=2
function	[function_1] data pattern ||| [function_2] [function_1]	count=2
arg	ma ||| ma	count=2
function_arg	[function_1] each observation ||| [function_1] [arg_2]	count=4
function	orders of each of ||| orders	count=1
module	runs test ||| stats	count=1
function	the measure of dispersion ||| dispersion	count=2
class	of freedom ||| varresults	count=1
function	the matrix ||| matrix	count=1
arg	residuals and cusum ||| skip lamda alpha	count=1
module	coefficients ||| tsa vector_ar	count=1
arg	for arma ||| ma	count=1
function	[function_1] interval includes ||| [function_2] [function_1]	count=2
class	with ||| gmmresults	count=1
module	model jacobian ||| discrete	count=1
function	estimate for [function] ||| est [function]	count=3
arg	value [arg_2] ||| [arg_2] [arg_1]	count=1
arg	creates ||| mu1_low mu1_upp mu2_low mu2_upp	count=1
module	other info needed ||| tsa kalmanf	count=1
arg	create a mixedlmparams ||| params k_fe k_re	count=1
arg	first elements of the ||| inplace prefix	count=1
function	ratio for ||| ratio	count=1
function	hac independent ||| all hac	count=1
function	[function_1] hazard function ||| [function_2] [function_1]	count=5
function	a rectangle [function] distribution ||| prob [function]	count=1
function	of marginal effects ||| margeff	count=1
module	parameter estimates ||| sandbox regression	count=1
function	from ||| handle formula data	count=1
arg	create a ||| results yname xname	count=1
class	of a mixture ||| mixture	count=1
function	vech(sigma_u) ||| sigma	count=1
class	values for ||| micedata	count=1
class	[class_1] effects parameters ||| [class_1] [class_2]	count=1
module	of the ||| sandbox tsa	count=1
arg	[arg] that ||| [arg]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] pacf [arg_2]	count=4
arg	at the theoretical ||| score	count=1
function	regularized fitted parameters ||| est regularized	count=1
class	spectral density ||| fft	count=1
arg	collapsed array >>> from ||| data axis oldshape	count=1
module	the anes96 ||| anes96	count=1
module	simulation ||| tsa statespace	count=1
arg	mayavi ||| iz	count=1
module	likelihood ||| tsa regime_switching	count=2
arg	equal spaced time periods ||| x time nlags	count=1
arg	computes the variance-covariance of ||| cov_params	count=1
function	tost the [function_2] ||| [function_1] reject [function_2]	count=1
function	standard errors ||| standard errors	count=1
arg	for any model ||| fargs	count=1
function	other ||| kalman state	count=2
class	linear ||| regression model	count=1
class	[class] matrix c ||| [class]	count=4
module	in ||| tsa statespace	count=1
function	estimation using ||| fit	count=1
arg	a cdf ||| binsx binsy cdf	count=1
module	and other info needed ||| tsa kalmanf	count=1
class	linear hypothesis ||| results	count=1
function	to ||| calc wdesign mat	count=2
module	returns a ||| tsa	count=1
arg	for a ||| cov_p	count=1
class	of the model ||| likelihood model	count=1
function_arg	[function_1] [arg_2] ||| [function_1] constrained [arg_2]	count=1
function	the offset vector to ||| offset	count=1
function	out [function_2] ||| [function_2] [function_1]	count=3
module	the parameter estimates ||| regression	count=1
function	[function_1] the formatted ||| [function_2] [function_1]	count=2
class	the tweedie family ||| tweedie	count=1
module	p-value for ||| stats	count=4
arg	[arg_1] power of ||| [arg_2] [arg_1]	count=10
function_arg	location of [arg_2] ||| [function_1] key [arg_2]	count=2
arg	calculate ||| effect_size nobs	count=4
arg	[arg] parameters ||| [arg]	count=2
arg	given groups ||| pvals groups	count=1
function	power of chisquare ||| power	count=1
function	[function_1] probability ||| [function_2] [function_1]	count=1
function	a sequence of date ||| dates from	count=1
class	poisson ||| poisson zi gmle	count=1
function	for ||| wald test	count=2
function	returns ||| from	count=1
arg	matrix ||| mod params	count=1
function	datetime ||| str	count=1
function	grid [function_2] ||| [function_1] [function_2]	count=4
arg	index or ||| start end index silent	count=1
arg	all pairwise comparisons ||| count nobs multitest_method	count=1
arg	of the fitted ||| atexog dummy	count=2
class	model's ||| mixed lm	count=1
arg	1d ||| x unbiased	count=2
module	only if available ||| tools	count=1
function_arg	mean [arg_2] ||| [arg_2] [function_1]	count=3
function	scalar version of psturng ||| psturng	count=1
module	of ||| sandbox distributions	count=3
function	returns a list of ||| str	count=1
function	provides [function_2] ||| [function_2] [function_1]	count=6
class	cached jacobian of ||| result mixin	count=1
arg	calculates the nodewise_weightvalue ||| exog nodewise_row	count=1
function	for fit ||| fit	count=1
function	split the ||| split	count=1
function	gof tests ||| gof	count=1
arg	function func is ||| func	count=1
arg	marginal effects ||| params	count=1
arg	summarize the model parameters ||| title model_name	count=1
arg	the spectral projected gradient ||| grad start project	count=1
function	the ||| kalman state	count=4
class	now depends on ||| ar	count=1
module	with ||| sandbox regression	count=2
class	ols model ||| ols	count=1
module_class	t-test for [class_2] ||| [module_1] [class_2]	count=6
function_arg	[function_1] in ||| [function_1] [arg_2]	count=2
arg	by ||| model	count=1
function	efron method to handle ||| efron	count=1
class	with degrees ||| varresults	count=1
class	sample z-test ||| gof	count=1
arg	mayavi ||| iy iz	count=1
function	residuals [function_2] ||| [function_1] [function_2]	count=2
module	cochran's q test for ||| stats	count=1
function	matrix for the ||| matrix	count=2
arg	of equivalence ||| low upp	count=1
function	[function_1] common ||| [function_1] [function_2] n	count=4
module	instance ||| cancer	count=1
class	a pickle of ||| likelihood model results	count=1
arg	multivariate linear filter parameters ||| x b const	count=1
function	the slices ||| slices	count=1
module	regression parameters ||| regression	count=1
module	exponential [module_2] ||| [module_1] [module_2]	count=3
arg	results of the ||| alpha	count=1
function_arg	[function_1] 1d parameters ||| [arg_2] [function_1]	count=2
arg	a wald-test for a ||| r_matrix cov_p scale	count=1
arg	_est_regularized_debiased ||| results_l	count=1
function	[function_1] proportions ||| [function_2] [function_1]	count=1
arg	equal spaced time ||| x time	count=1
module	a ||| tsa base	count=4
function	summary of ||| summary	count=3
arg	confidence interval of the ||| alpha	count=1
function	[function_1] cumulative ||| [function_2] [function_1]	count=4
function_arg	[function_1] graphical display ||| [function_1] [arg_2]	count=1
function	and returns the debiased ||| debiased	count=1
module	compute a wald-test for ||| base	count=1
function	[function_1] chisquare test ||| [function_2] [function_1]	count=5
module	family distribution ||| genmod	count=2
module	[module_1] two ||| [module_1] [module_2]	count=4
arg	variance is the ||| y x idx	count=1
function	a wald-test for a ||| wald test	count=1
function	[function_1] inverse ||| [function_1] [function_2]	count=1
class	global odds [class_2] ||| [class_2] [class_1]	count=4
function	of the data ||| clear data	count=1
arg	at the ||| score	count=1
module	method for ||| stats	count=1
arg	create ||| yname	count=1
function	to control performs a ||| pairscontrol	count=1
function	ipython notebook ||| repr	count=1
function_arg	[function_1] correlations determined ||| [arg_2] [function_1]	count=2
module	[module_1] distribution of ||| [module_1] [module_2]	count=4
function	[function_1] sums for ||| [function_1] [function_2]	count=3
arg	first item [arg] ||| [arg]	count=1
module	fourier transform of the ||| tsa	count=1
function	2-dimensional plot ||| plot2d	count=1
function	lambda parameter ||| lambda	count=1
arg	returns ||| n	count=1
module	for the ||| stats	count=8
function	the [function_1] [function_2] just the exogenous random ||| [function_1] [function_2] exog_re	count=1
function	mackinnon's approximate p-value for ||| mackinnonp	count=1
arg	and labels [arg_2] ||| [arg_2] [arg_1]	count=4
module	arma ||| sandbox tsa	count=3
arg	estimation of the bandwidth ||| bw func	count=1
function	by ||| margeff cov params	count=2
class	process ||| arma	count=1
class	negative [class_2] ||| [class_1] [class_2]	count=3
function	pairwise distance ||| distance	count=1
function	of date strings and ||| from	count=1
arg	random ||| rvs alpha	count=1
arg	given index ||| index	count=1
class	hypothesis ||| uv	count=1
arg	k ||| k n p	count=1
arg	the ar ||| ar	count=1
function	multivariate autocovariances [function_2] ||| [function_1] [function_2]	count=1
arg	of error parameters ||| x1 x2 ddof	count=1
function	coefficients of ||| coefficients of	count=3
function	covariance matrix [function_2] ||| [function_1] params [function_2]	count=3
arg	with ||| exog	count=1
function	[function_1] residuals for ||| [function_2] [function_1]	count=6
function	required results ||| res	count=1
function	[function_1] sums ||| [function_2] [function_1]	count=3
function	discrete ||| binning discrete	count=1
function_arg	[function_1] single regressor ||| [arg_2] [function_1]	count=2
class	the value of the ||| markov switching results	count=1
arg	the orthogonal polynomial approximation ||| polybase order limits	count=1
arg	1d parameters ||| x y unbiased	count=1
function	return the path of ||| get	count=1
arg	returns 1d ||| epsilon	count=1
module	distribution given by a ||| distributions	count=1
class	discrete ||| discrete	count=2
function	partial autocorrelation function ||| pacf	count=1
class	test ||| test reg	count=1
class	keys used in model ||| model	count=1
class	sample z-test ||| gof chisquare ind power	count=1
function_arg	restructure [function_1] [arg_2] ||| genmod nominal gee setup [function_1] [arg_2]	count=4
class	compute var ||| varresults	count=1
arg	group are different from ||| group exact	count=1
arg	the null hypothesis ||| value	count=1
arg	for point x ||| x	count=2
arg	ar and [arg_2] ||| [arg_2] [arg_1]	count=2
arg	lags on the ||| lags alpha	count=1
arg	f returns 1d array ||| x f epsilon args	count=1
function	the basis of ||| basis	count=1
function	final simulation [function_2] ||| [function_2] [function_1]	count=1
function	the matrix ||| missing matrix	count=1
function	of the vector ||| missing vector	count=1
function	the approximate inverse covariance ||| calc wdesign	count=1
module	this and another distribution ||| distributions	count=1
arg	ses parameters ||| float_format model_names stars	count=1
arg	calculate the ||| effect_size nobs	count=3
function	generate ||| generate sample	count=2
function	wald-test ||| test	count=1
function_arg	insert [arg_2] ||| [arg_2] [function_1]	count=3
arg	create [arg_2] ||| [arg_2] [arg_1]	count=2
arg	fit_constrained methods or ||| model constraints start_params	count=1
function	number of observations minus ||| df resid	count=1
module	the parameter given ||| regression	count=1
function	from each parameter ||| from	count=1
module	return string ||| iolib	count=1
class	for the negative binomial ||| negative binomial	count=1
module	rejection region for ||| stats	count=1
module	generate the approximate ||| base	count=1
class	a wald-test for ||| likelihood model	count=1
function	confidence interval for a ||| ci	count=1
function	get final [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] test for ||| tsa adfuller x maxlag [arg_1] [arg_2]	count=4
arg	function f ||| x f	count=1
class	pooled ||| odds ratio	count=1
function	returns an exog ||| get exog	count=1
class	freedom correction ||| varresults	count=1
function	a knockoff design matrix ||| design knockoff	count=1
arg	line given an intercept ||| intercept	count=1
arg	the name in tmp_arr ||| tmp_arr	count=1
arg	approximate inverse covariance matrix ||| params	count=1
function_arg	convert [arg_2] ||| [function_1] [arg_2]	count=4
arg	mayavi ||| ix iy iz	count=1
function	[function_1] iqr ||| [function_1] [function_2]	count=2
function	bivariate gaussian ||| bivariate	count=1
function	as [function_2] ||| [function_1] [function_2]	count=4
function	inverse transformed cdf ||| inverse transformed	count=2
function_arg	[function_1] cook johnson ||| [function_1] [arg_2]	count=1
class	the significance value for ||| reg coef	count=1
class	a single random effects ||| mixed lm	count=1
arg	the null hypothesis is ||| value	count=1
function	to generate the approximate ||| calc wdesign	count=1
function	categorical variables ||| categorical	count=1
function_arg	the derivative [arg_2] ||| [function_1] exog [arg_2]	count=1
function	recursive ||| recursive	count=2
function	effects by ||| cov	count=1
module_class	[module_1] [class_2] ||| [module_1] simulation [class_2]	count=4
function	two-sided confidence interval ||| zconfint	count=1
arg	variance is the same ||| y x idx split	count=1
class	means this should ||| compare means	count=1
class	tweedie ||| tweedie	count=2
arg	to ||| regression	count=1
arg	resets the index ||| index	count=1
arg	variance is ||| x	count=1
function	computed using the ||| oim	count=1
function	to stata's default ||| default stata	count=1
class	loglikelihood [class] p ||| [class]	count=1
arg	the power ||| alpha power	count=4
function	array starting [function_2] ||| [function_2] [function_1]	count=9
module	the hessian ||| genmod	count=1
function	plot fitted versus ||| plot	count=1
class	of the hypothesis ||| contrast	count=1
function	copula ||| copula	count=4
class	p-p [class_2] ||| [class_1] [class_2]	count=1
function	if [function] is ||| [function]	count=1
class	cdf ||| cdflink	count=3
class	odds [class_2] ||| [class_2] [class_1]	count=5
function	computes ||| margeff cov params	count=2
function	the thresholded ||| thresholded	count=1
arg	a plot ||| ax	count=1
arg	against one regressor ||| results exog_idx y_true	count=1
function	widths ||| get colwidths	count=1
module_class	[module_1] comparison ||| [module_1] [class_2]	count=2
class	for kernel ||| kernel	count=3
function	as ||| as	count=2
class	of ||| phreg	count=1
module	noise covariance with ||| tsa vector_ar	count=1
arg	difference r and ||| r	count=1
function	a [function] ||| gof [function]	count=2
module	regression for ||| sandbox regression	count=1
class	for now depends on ||| ar	count=1
function	observation vector ||| obs	count=1
arg	marginal effects ||| model params	count=1
function	is [function_2] ||| [function_2] [function_1]	count=1
arg	the system matrices and ||| arma_model	count=1
function	sum of ||| sumofsq	count=1
module	runstest [module] two samples ||| [module]	count=1
function	c^{-1} ||| inv dot	count=1
arg	of the fitted ||| method atexog dummy	count=2
function	returns mackinnon's approximate p-value ||| mackinnonp	count=1
function	and ||| dates from	count=1
module	the rhs matrix for ||| tsa	count=1
arg	[arg_1] line ||| [arg_2] [arg_1]	count=1
module_class	the [class_2] ||| [module_1] parameter [class_2]	count=1
function_arg	for autoregressive [arg_2] ||| [function_1] [arg_2]	count=1
function	out of sample ||| out of sample	count=1
function	computes the ||| margeff cov	count=1
function	[function_1] random sample ||| [function_2] [function_1]	count=1
class	of autoregressive lag-polynomial ||| process	count=1
function	svd ||| svd	count=1
function	most [function_2] ||| [function_2] [function_1]	count=1
arg	the scatter of ||| scatter	count=1
arg	get the ar ||| ar ma	count=1
module	the delta ||| discrete	count=1
arg	scatter of the ||| scatter ax	count=1
module	the elements of a ||| tsa statespace	count=1
class	[class] distributions ||| [class]	count=2
arg	a wald-test for ||| scale	count=1
function	normal inverse transformed ||| normal inverse transformed	count=3
arg	of non- equivalence ||| low upp	count=3
class	of the log transform ||| log	count=1
function	data home ||| data home	count=1
module	for minimum distance step ||| stats	count=1
function	the inverse ||| inverse	count=1
class	the kalman filter ||| kalman filter	count=4
arg	linear ||| cov_p scale	count=1
class	poisson ||| poisson offset gmle	count=1
class	for factor ||| factor	count=1
arg	[arg_1] difference r ||| [arg_2] [arg_1]	count=2
function	strings and ||| str	count=1
arg	endog resid mu of ||| endog	count=1
function	latex [function_2] ||| [function_1] [function_2]	count=1
arg	for a ||| method tol	count=1
class	linear hypothesis ||| model results	count=1
arg	the kalman ||| params start p	count=1
class	two sample ||| gof chisquare ind power	count=1
function_arg	[function_1] [arg_2] identical ||| [function_1] [arg_2]	count=1
arg	of creating ||| new_entries x_copy_i width	count=1
function_arg	[function_1] and formula ||| [arg_2] [function_1]	count=1
module	in the ||| tsa	count=1
arg	at the given parameters ||| params	count=1
module	returns the ||| tsa	count=1
arg	updates the representation matrices ||| transformed complex_step	count=1
arg	at the estimated density ||| density nobs alpha	count=1
class	estimates ||| factor results	count=1
class	returns ||| kalman	count=1
function	return conditional ||| conditional	count=1
class	an ||| emplike aft	count=1
function	odds ratio ||| oddsratio	count=1
function_arg	[function_1] orthogonal polynomial ||| [arg_2] [function_1]	count=1
arg	natural frequency of x ||| x	count=1
arg	returns the ||| cls params	count=1
arg	likelihood via kalman filter ||| trend method transparams	count=2
arg	[arg_1] ma parameters ||| [arg_1] [arg_2]	count=1
function	difference a ||| diff	count=1
function	log determinant ||| smw logdet	count=1
function	matrices with singular values ||| python	count=1
arg	linear transform ||| transform	count=1
module	the parameter estimates with ||| sandbox regression	count=1
module	variance for distributions ||| sandbox distributions	count=2
function	filtering via convolution ||| convolution filter	count=1
function	generic bivariate ||| bv	count=1
function	split the given ||| split	count=1
arg	graphical display of ||| periods figsize	count=1
arg	value ||| value alternative	count=1
arg	plots lags on the ||| lags	count=1
function	return integer [function_2] ||| [function_1] [function_2]	count=1
module	returns ||| regression	count=14
arg	norm and ||| scale norm	count=1
function	a binomial proportion parameters ||| proportion	count=1
class	of the smoothing ||| smoothing spline	count=1
module	covariance with degrees of ||| tsa vector_ar	count=1
function	an array of shape ||| adjust shape	count=1
function	function ||| sumofsq	count=1
function	date ||| dates from str	count=1
function	[function_1] a summary ||| [function_2] [function_1]	count=2
function	the baseline cumulative hazard ||| baseline cumulative hazard	count=1
function	delta ||| margeff	count=1
function	[function_1] correlation matrix ||| [function_2] [function_1]	count=1
function	headers ||| headers	count=1
module	[module_1] family distribution ||| [module_1] [module_2]	count=1
class	inverse gaussian ||| inverse gaussian	count=2
function_arg	[function_1] [arg_2] of identical ||| [function_1] [arg_2]	count=1
function	a latex [function_2] ||| [function_2] [function_1]	count=1
arg	power of a ||| power	count=4
function_arg	plot [arg_2] ||| [function_1] [arg_2]	count=2
arg	to generate the ||| mod	count=1
arg	projected gradient method ||| grad start	count=1
arg	p q coefficients that ||| p q	count=1
class	kalman ||| kalman	count=5
function_arg	transform unconstrained ||| transform params unconstrained	count=1
function_arg	sums for [arg_2] ||| [function_1] [arg_2]	count=1
module	variance for distributions with ||| distributions	count=2
function	return predicted values for ||| predict	count=1
function	[function_1] tabular ||| [function_2] [function_1]	count=3
function	[function_1] mean ||| [function_2] [function_1]	count=5
function	[function_1] ccpr ||| [function_2] [function_1]	count=1
class	of ||| gmmresults	count=1
arg	index or ||| end index	count=1
function	simultaneous [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] x d2 ||| [arg_2] [arg_1]	count=3
function	for ||| state	count=1
module	respect to the distribution ||| sandbox distributions	count=2
function	sequence of date ||| from str	count=1
function_arg	[function_1] [arg_2] ||| emplike opt functs [function_1] star [arg_2]	count=8
function	a panel of ||| panel	count=1
function	less than ||| less than	count=2
module	single ||| imputation	count=1
function	proportion parameters ||| proportion	count=1
function	its conditional distribution ||| simulated	count=2
function_arg	[function_1] for 1d ||| [function_1] [arg_2]	count=3
function_arg	[function_1] process parameters ||| [function_1] generate sample [arg_2]	count=3
arg	transform shape scale for ||| shape scale	count=1
function_arg	estimate the [arg_2] ||| [function_1] [arg_2]	count=3
module	degrees ||| vector_ar	count=1
module	test for ||| sandbox tsa	count=1
function	search for ||| params search	count=1
class	of autoregressive ||| arma process	count=1
module	array roots [module] the ||| [module]	count=1
module	for pvalues ||| stats	count=1
module	critical values for ||| sandbox stats	count=2
arg	multiple results instances ||| results	count=1
arg	in the first elements ||| b index inplace	count=1
function	human readable parameter names ||| param names	count=1
class	cross validation iterator ||| leave one out	count=1
function_arg	exog [arg_2] ||| [arg_2] [function_1]	count=2
arg	mean squared error parameters ||| x1 x2 axis	count=1
function	l1 regularized problem using ||| fit l1	count=1
arg	[arg] either iterable ||| [arg]	count=1
module	values for a single ||| imputation	count=1
function	[function_1] [function_2] vector from its conditional ||| simulation smooth results simulated [function_1] [function_2]	count=2
function_arg	bias [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] that mean ||| [function_1] [function_2]	count=1
function	chisquare type gof tests ||| gof binning	count=1
arg	parameters ||| params alpha	count=1
class	kernel ||| custom kernel	count=5
function	[function_1] matrix ||| [function_2] [function_1]	count=6
class	huber's [class_2] ||| [class_1] [class_2]	count=2
function	determine envelope ||| envelope	count=1
function_arg	returns the [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
function	ordinal variables ||| ordinal	count=1
arg	y ||| y normed	count=1
function_arg	chisquare statistic [arg_2] ||| [arg_2] [function_1]	count=2
function	periodogram for ||| periodogram	count=1
function	list of datetime ||| dates from	count=1
arg	return a ||| method alpha	count=2
module	generate the ||| base	count=1
function	the approximate inverse ||| calc	count=1
arg	exogenous variables ||| exog	count=1
arg	covariance arguments still need ||| maxiter inv_weights weights_method	count=1
function_arg	confidence [arg_2] ||| [function_1] int el param_num [arg_2]	count=4
arg	nd convolution to ||| x	count=1
function	text ||| savetxt	count=1
class	linear ||| likelihood model	count=1
class	the model ||| additive model	count=1
function	another set from ||| set	count=1
arg	function f returns ||| f epsilon	count=1
module	from the ||| stats	count=1
module	noise ||| tsa vector_ar	count=2
function_arg	[function_1] 1d ||| [function_1] [arg_2]	count=3
function	model of joe ||| transform joe	count=1
module	committee data and returns ||| datasets committee	count=1
function	returns ||| dates from str	count=1
arg	with [arg] on off ||| k_vars [arg]	count=1
arg	with kernel ||| kernel	count=1
function	for the ||| kalman	count=1
module	of estimated ||| tsa	count=1
arg	info needed for ||| cls params	count=1
arg	orthogonal ||| x polybase order limits	count=1
function	impute missing ||| impute	count=1
function	measurement [function_2] ||| simulation smooth results simulated [function_1] [function_2]	count=1
function	log-likelihood gradient for the ||| calc grad	count=1
function	state vector [function_2] ||| [function_2] [function_1]	count=1
function_arg	autoregressive coefficients [arg_2] ||| [arg_2] [function_1]	count=1
function	the efron method ||| efron	count=1
arg	sorted by time groupidx ||| groupidx	count=1
module	for ||| sandbox	count=1
function	of ||| cov	count=1
arg	x y normed=true ||| x y normed detrend	count=1
arg	a wald-test ||| cov_p	count=1
arg	time periods ||| x time	count=1
function	use f ||| f	count=1
function	for probability ||| prob mv	count=1
arg	kernel ||| x kernel	count=1
arg	one parameter of ||| effect_size nobs	count=2
class	now depends ||| ar	count=1
class	test ||| stratified table	count=2
function	all correlation sums for ||| correlation sums	count=1
module	sequence of ||| tsa base	count=1
function	by ||| params	count=1
arg	a cdf ||| binsy cdf	count=1
function	get ||| get prediction	count=1
function	model from a ||| from	count=1
function	generate the approximate inverse ||| calc wdesign mat	count=1
function	to generate the approximate ||| mat	count=1
function	trace of ||| trace	count=1
module	and another distribution ||| sandbox distributions	count=1
arg	delta ||| model params	count=1
function	the log ||| log	count=4
class	gmm ||| gmm	count=4
arg	k or ||| x k	count=1
arg	carlo for arma ||| ma	count=1
arg	a specific ||| base_index	count=2
function	returns the ||| kalman state	count=1
function	from ||| res	count=1
module	actually included in the ||| tsa	count=1
function	compute ||| wald test	count=2
function	reset specification test for ||| reset	count=1
arg	function func is ||| func low upp	count=1
function	test for movorder ||| movorder	count=1
class	regularized ||| regularized	count=1
arg	for 1d ||| x unbiased demean fft	count=1
function	use gls ||| fe params	count=1
class	of ||| arma	count=1
class	the parameter estimates ||| results	count=1
class	[class_1] decomposition of ||| [class_2] [class_1]	count=1
module_class	that [class_2] ||| [module_1] [class_2]	count=2
function	variables are discrete ||| check discrete	count=1
module	to calculate sum ||| tsa	count=1
class	white noise covariance with ||| varresults	count=1
arg	key in ||| key	count=1
arg	indexes [arg] split ||| [arg]	count=3
function_arg	exog array [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	convolution centered [arg_2] ||| [arg_2] [function_1]	count=1
arg	symmetric [arg] around ||| [arg]	count=1
function	sims-zha error band method ||| err band	count=2
arg	in-sample prediction and out-of-sample ||| params start end probabilities	count=1
module	the distribution location and ||| sandbox distributions	count=2
function	means of ||| mean	count=1
function	observation ||| obs	count=1
module	a regime ||| regime_switching	count=1
class	linear ||| likelihood model results	count=2
arg	with d1 ||| d1	count=1
module	entries equal [module] 0 as ||| [module]	count=1
arg	a harmonic mean ||| nobs_all srange	count=2
function	confidence intervals [function_2] ||| [function_1] [function_2]	count=2
module	of white ||| vector_ar	count=1
arg	[arg_1] model updates ||| [arg_1] [arg_2]	count=2
function	data ||| data	count=7
class	fitted ||| geeresults	count=1
arg	labels on horizontal ||| data labels positions	count=3
module	instance ||| engel	count=1
arg	[arg_1] ar ||| [arg_2] [arg_1]	count=2
function	mutual ||| mutualinfo	count=1
function	estimate lag ||| fit	count=1
module	date strings ||| base	count=1
function	standard error of the ||| get bse	count=1
module	ols regression for ||| regression	count=1
module	noise covariance with degrees ||| tsa	count=1
class	the negative binomial ||| negative binomial	count=5
module_class	[module_1] kalman ||| [module_1] [class_2] filter	count=1
function_arg	[function_1] row-wise ||| [arg_2] [function_1]	count=4
arg	phase of creating the ||| new_entries x_copy_i width	count=1
arg	mean_params and ||| mean_params	count=1
arg	parameters of [arg_2] ||| [arg_2] [arg_1]	count=2
module	the parameter estimates ||| sandbox	count=1
function	[function_1] correlation coefficient ||| [function_1] [function_2]	count=1
function	multiindex dataframe ||| frame	count=1
function	observations during which ||| loglikelihood burn	count=1
function	two ordinal ||| ordinal	count=1
function	test statistic see p ||| compute test	count=1
function	get the [function_2] ||| [function_2] [function_1]	count=6
function	second derivative of ||| deriv2	count=1
module	matrix for white ||| stats	count=1
arg	transform for ||| x transform group_iter	count=1
arg	one ||| nobs	count=1
function	a sorted [function] helper ||| [function]	count=1
arg	endog with respect ||| offset_exposure	count=1
arg	some basic ||| y plt	count=1
function	log odds ratio ||| log oddsratio	count=2
class	autoregressive lag-polynomial ||| process	count=1
function_arg	bds test [arg_2] ||| [arg_2] [function_1]	count=4
function	uniform ||| uniform	count=1
function	starting parameters for maximum ||| start params	count=2
function	matrix ||| wdesign mat	count=2
function	residuals for ||| resid	count=5
arg	the delta ||| params	count=1
function	difference ||| diff	count=1
function	marginal effects by ||| margeff cov	count=1
function	summary of the ||| summary	count=1
arg	add correlation of ma ||| ma nobs	count=1
arg	into ||| has_fe	count=1
module	[module] z-test the ||| [module]	count=3
arg	equivalence of ||| low upp	count=1
function_arg	[function_1] product intersection ||| [arg_2] [function_1]	count=3
arg	effects ||| model	count=1
function	the derivative ||| derivative	count=1
arg	with [arg] on ||| k_vars [arg]	count=1
function	transform matrices with singular ||| coefficients from multivariate pacf python	count=1
module	cli ||| examples l1_demo	count=1
function	the residuals [function_2] ||| [function_2] [function_1]	count=1
arg	y normed=true detrend=detrend_none ||| y	count=1
function	generate a random ||| generate	count=1
arg	a grid ||| grid fig	count=1
class	compute ||| model	count=1
function	cusum of [function_2] ||| [function_1] [function_2]	count=3
function	is false [function] ||| [function]	count=1
arg	a mixedlmparams ||| k_fe k_re use_sqrt	count=1
arg	for teststat ||| teststat regression n lags	count=1
function	log-likelihood gradient for the ||| grad	count=1
arg	for regression results parameters ||| xname yname title	count=1
function	[function_1] confidence intervals ||| [function_1] [function_2]	count=1
arg	wald-test ||| r_matrix cov_p	count=1
arg	a data ||| a	count=1
arg	a data array ||| data	count=1
arg	orthogonal polynomial approximation ||| polybase order limits	count=1
arg	spaced time ||| x time	count=1
function	cohen's kappa ||| kappa	count=1
arg	range of z ||| z	count=3
module	covariance with ||| tsa vector_ar	count=1
function	[function_1] collier ||| [function_2] [function_1]	count=1
arg	autocorrelation function plots lags ||| lags	count=1
class	[class_1] smoothing ||| [class_1] [class_2]	count=1
module	lagorder ||| tsa vector_ar	count=2
arg	maxiter or change in ||| start maxiter	count=1
arg	inverse ||| mod params	count=1
function	trace ||| trace	count=2
function	quantize ||| prob quantize	count=1
function	generalized residuals ||| resid generalized	count=4
arg	data confidence interval ||| alpha alternative	count=1
function	correlation coefficient parameters ||| corr	count=1
function	gaussian expanded [function] given ||| [function]	count=1
class	returns the ||| kalman filter	count=1
module	a ||| tsa	count=2
module	loglikelihood ||| tsa	count=1
function_arg	[function_1] structure ||| [function_1] corr [arg_2]	count=1
arg	common rows [arg] [y ||| [arg]	count=1
function	jacobian ||| jacobian	count=1
module	list of ||| tsa	count=1
module	distributed test ||| stats	count=1
function	score vector ||| score	count=3
arg	grid ||| grid fig	count=1
module	of the parameter estimates ||| regression	count=1
class	least ||| least	count=2
arg	[arg_1] given family ||| [arg_2] [arg_1]	count=2
arg	marginal effects ||| params exog	count=1
module	effects ||| discrete	count=1
function	recursive ||| recursive olsresiduals	count=1
arg	optimized for univariate case ||| init_state init_var	count=1
function_arg	[function_1] [arg_2] ||| [function_1] generate sample [arg_2]	count=6
module	needed for ||| tsa	count=1
arg	null hypothesis ||| value	count=2
function	of residuals ||| resid	count=1
module_class	[module_1] [class_2] currently works only if ||| [module_1] [class_2]	count=1
arg	2x2 tables ||| tables	count=1
arg	this is the special ||| x	count=1
function	integer row labels from ||| maybe reset	count=1
arg	in a probability p ||| p	count=1
function	ttest ||| ttest	count=2
module	on the hessian ||| genmod	count=1
class	a ||| model results	count=6
arg	wald-test ||| cov_p scale	count=1
module	for the ||| tsa	count=1
function	is a ||| is	count=1
module	for the parameter given ||| regression	count=1
function	the logistic ||| logistic	count=1
function	[function_1] lowess line ||| [function_2] [function_1]	count=1
arg	a contingency table ||| count_dict horizontal gap	count=1
function_arg	each observation parameters ||| score obs params	count=1
function_arg	[function_1] least ||| [arg_2] [function_1]	count=2
arg	joint linear ||| r_matrix cov_p scale invcov	count=1
arg	1d ||| x unbiased nlags	count=1
arg	plot ||| index ax	count=1
function	power of a ||| power	count=2
function	unintegrate ||| unintegrate	count=1
class	fixed [class_2] ||| [class_1] [class_2]	count=2
function	most ||| most	count=1
arg	corresponding distributedmodel ||| fit_kwds parallel_method	count=1
module	variable ||| imputation	count=1
function	are needed ||| create mpl fig	count=1
arg	white's lagrange multiplier ||| resid exog retres	count=1
arg	the first elements of ||| inplace prefix	count=1
function_arg	[function_1] [arg_2] ||| ztest [function_1] [arg_2]	count=1
arg	time groupidx ||| groupidx	count=1
function	periodogram [function_2] ||| [function_2] [function_1]	count=4
function	names of ||| names	count=1
function	scatter ||| scatter	count=1
function	predict response variable of ||| predict	count=1
arg	[arg] for ||| params [arg]	count=2
function	the approximate ||| mat	count=1
function	power [function_2] ||| [function_2] [function_1]	count=4
function	to stata's [function_2] ||| [function_2] [function_1]	count=10
arg	teststat ||| teststat regression n lags	count=1
function_arg	create equicorrelated [function_1] [arg_2] off diagonal ||| [function_1] equi [arg_2]	count=1
function	logistic ||| untransform logistic	count=2
class	model using the kalman ||| kalman	count=1
class	quantiles ||| quantiles	count=1
function	get marginal effects ||| get margeff	count=2
arg	[arg] unit ||| x maxlag [arg]	count=1
function	to generate ||| mat	count=1
function	setup ||| setup	count=1
function_arg	[function_1] [arg_2] ||| [function_1] y axis [arg_2]	count=4
arg	on [arg] ||| [arg] x	count=1
function	all against ||| all one	count=2
module	in any [module] ||| [module]	count=1
class	hampel's ||| hampel	count=3
function	the ||| calc wdesign mat	count=4
function	two-sided ||| zconfint	count=1
function	estimate scale and the ||| estimate	count=1
class	an nominal ||| nominal	count=1
function	exact tost ||| binom tost	count=1
function	returns a list ||| dates	count=1
arg	against one regressor ||| results exog_idx ax	count=1
module	the likelihood ||| tsa statespace	count=1
function	copy ||| copy missing	count=1
function	returns an exog array ||| get exog	count=1
arg	regression results parameters ||| xname yname	count=1
arg	one ||| nobs alpha	count=1
module	and another distribution int ||| sandbox distributions	count=1
function	sqrt of chisquare statistic ||| chisquare	count=1
module	two sample z-test for ||| stats	count=1
function	of random ||| random univariate	count=1
function_arg	[function_1] [arg_2] the ||| [function_1] [arg_2]	count=6
arg	[arg_1] the results ||| [arg_2] true_params [arg_1]	count=2
arg	f returns 1d ||| f epsilon args	count=1
function_arg	[function_1] [arg_2] ||| [function_1] data [arg_2]	count=8
arg	variance is the same ||| y x	count=1
function	em step [function_2] ||| [function_1] [function_2]	count=4
arg	in a grid ||| grid	count=1
class	negative [class_2] ||| [class_2] [class_1]	count=3
module	with ||| vector_ar	count=1
function	covariance ||| calc wdesign	count=1
function	the ||| cov params	count=4
arg	plots studentized ||| results external alpha	count=1
arg	linear ||| r_matrix cov_p	count=1
function	observations within ||| within	count=1
arg	mu ||| endog mu	count=1
function	disturbance ||| disturbance	count=2
function	of the data home ||| data home	count=1
function	sequence of ||| dates from	count=1
function	effects by the delta ||| margeff	count=1
function	effects for each ||| effects	count=1
arg	x y normed=true detrend=detrend_none ||| x y normed detrend	count=1
class	covariance ||| varresults	count=1
arg	statistic x : ||| x	count=1
function	results ||| get summary str	count=1
module	var p ||| vector_ar	count=1
function_arg	survival function [arg_2] ||| [arg_2] [function_1]	count=1
class	row ||| time series	count=1
function	than ||| than	count=1
arg	results instances side-by-side ||| results	count=1
arg	model of ||| t	count=1
function	[function_1] [function_2] convention by default ||| [function_1] [function_2]	count=1
arg	probability p ||| p	count=1
class	a wald-test for ||| results	count=1
arg	time periods ||| x time nlags	count=1
function	[function_1] covariance ||| [function_2] [function_1]	count=4
arg	plot from a ||| data index ax	count=1
class	model returns -hessian of ||| model	count=2
function	the parameter estimates with ||| get	count=1
arg	effects by ||| exog	count=1
function	names ||| exog names	count=1
function	a list of ||| dates from	count=1
function	sif to [function_2] ||| [function_1] [function_2]	count=1
function	exog array ||| exog	count=1
arg	against a ||| results exog_idx	count=1
arg	bandwidth with kernel ||| x kernel	count=1
function	distribution for discrete ||| discrete	count=1
arg	function for the ||| z	count=3
function_arg	tabular [arg_2] ||| [function_1] [arg_2]	count=1
arg	vector autoregression coefficient ||| forward_autocovariances	count=1
class	estimate random effects ||| one way mixed	count=1
function	solves matrix ||| matrix solve	count=2
function	marginal effects ||| margeff cov params	count=1
function	[function_1] sums ||| [function_1] [function_2]	count=3
arg	params for ||| params	count=1
arg	drop_idx is only ||| drop_idx sparse	count=1
arg	from ||| data index	count=1
function	theoretical autocovariance function of ||| acovf	count=1
function	a summary ||| summary	count=4
function_arg	[function_1] of error ||| [function_1] [arg_2]	count=1
function	function for probability ||| prob	count=1
module	a sequence ||| tsa	count=1
class	hypothesized ||| stat uv	count=1
arg	with self and ||| weights	count=1
function	mean of data ||| mean	count=3
arg	the upper left corner ||| missing_rows	count=1
function	info needed for the ||| state	count=1
function	list ||| str	count=1
arg	calculate ||| effect_size df_num df_denom	count=2
function	correlation [function_2] ||| [function_2] [function_1]	count=5
class	needed for the ||| kalman	count=1
class	parameter ||| phreg	count=1
arg	an ar p covariance ||| x	count=1
function	the discrete ||| discrete	count=1
function	hac independent of categorical ||| hac	count=1
class	linear ||| likelihood	count=1
arg	the [arg] of identical ||| alternative usevar [arg]	count=1
function	observations within a categorical ||| s within	count=1
arg	[arg_1] key ||| [arg_2] [arg_1]	count=12
function	seasonal decomposition using moving ||| seasonal decompose	count=1
function	test statistic see ||| test	count=1
arg	other ||| params	count=1
function	against ||| diff	count=2
function	strings and returns ||| dates from str	count=1
arg	each count level ||| exog exposure offset	count=1
function	nested optimization ||| ks1	count=1
class	model row ||| time series model	count=2
function_arg	hierarchical way [arg_2] ||| [function_1] split [arg_2]	count=1
arg	and dataframe ||| cls	count=3
module	reference line [module] rejection ||| [module]	count=1
function	[function_1] cp ||| [function_1] [function_2]	count=2
module	distribution int ||| sandbox distributions	count=1
function	the vector ||| copy index vector	count=1
module	and returns a list ||| tsa base	count=1
class	chisquare test ||| gof chisquare	count=1
arg	consistent with the true_params ||| true_params	count=2
class	[class] log-likelihood ||| [class]	count=3
arg	returns ||| params	count=4
function	compute x^twy (transposed ?) ||| compute xtwy	count=1
arg	projected gradient ||| grad start	count=1
function	[function_1] squares ||| [function_1] [function_2]	count=1
arg	try to ||| alpha float_format title	count=1
function	to calculate ||| sumofsq	count=1
class	self ||| term	count=1
arg	complete equal spaced time ||| time nlags	count=1
function	simulation output ||| simulation output	count=2
function	a list of ||| from str	count=1
function	[function] influence ||| [function]	count=2
module	of ||| tsa	count=32
arg	wald-test for ||| r_matrix	count=1
function	the correlation ||| norm corr	count=1
arg	apply ||| level	count=1
arg	pairwise comparisons with ||| multitest_method	count=1
function_arg	[function_1] the ||| [arg_2] [function_1]	count=4
arg	for product intersection ||| prefix sep return_labels	count=1
function	gradient of ||| approx fprime	count=1
arg	a dummy matrix ||| dictnames	count=1
module	and returns ||| tsa base	count=1
arg	intercept ||| intercept	count=1
function	cluster [function_2] ||| [function_2] [function_1]	count=2
arg	principle components using matplotlib ||| ix iy clf	count=1
function	for observations within a ||| within	count=1
function	[function_1] names for ||| [function_2] [function_1]	count=2
arg	obtain a ||| group_ix	count=1
arg	observed ||| observed	count=1
function	pooled odds [function_2] ||| [function_1] [function_2]	count=4
function_arg	autocovariance [arg_2] ||| [arg_2] [function_1]	count=2
function	final statistics to compute ||| compute rsquare and ic	count=1
arg	function f [arg_2] ||| [arg_1] [arg_2]	count=4
function	returns the ||| init	count=1
function_arg	[function_1] results ||| [arg_2] [function_1]	count=2
class	a two sample ||| gof chisquare ind power	count=1
function	[function] with ||| [function]	count=1
function_arg	an arma [arg_2] ||| [function_1] generate sample [arg_2]	count=2
class	initial state [class] ||| [class]	count=2
function	[function_1] [function_2] comparison ||| [function_1] [function_2] nm	count=4
function	panel of time series ||| panel	count=1
module	a sequence of date ||| tsa	count=1
function_arg	q statistic [arg_2] ||| [function_1] [arg_2]	count=3
function	[function] and confidence ||| wls prediction [function]	count=2
arg	of each count level ||| exog exposure offset	count=1
module	example method [module] moment ||| [module]	count=1
arg	error bands assuming ||| orth repl t	count=2
arg	lags on the horizontal ||| x ax lags alpha	count=1
class	monte carlo ||| mc	count=2
class	significance value for the ||| coef c	count=1
function	of chisquare ||| chisquare	count=1
class	of the parameter ||| phreg results	count=1
function	conditional on ||| conditional	count=3
arg	name in tmp_arr ||| tmp_arr	count=1
function	a sorted [function] ||| [function]	count=1
function	the logistic transform ||| untransform logistic	count=1
function_arg	[function_1] critical values ||| [function_1] [arg_2]	count=3
function	point weighted ||| weighted	count=1
function	of the vector ||| index vector	count=1
arg	to data ||| data	count=2
function	a text [function] ||| [function]	count=3
arg	wald-test for a joint ||| cov_p scale invcov	count=1
module_class	[module_1] theoretical ||| [module_1] [class_2]	count=2
module	degrees ||| tsa vector_ar	count=2
arg	is the same ||| y x idx split	count=1
function	computes ||| cov params	count=2
function	starting ||| start params	count=1
module	of freedom correction ||| vector_ar	count=1
arg	in preparation ||| variance complex_step	count=1
function	load ||| load pandas	count=7
module	with ||| tsa vector_ar	count=2
class	value of the ||| switching results	count=1
class	fixed [class_2] ||| [class_2] [class_1]	count=2
function	utility function to compute ||| compute	count=1
class	autoregressive lag-polynomial ||| arma	count=1
arg	variance-covariance ||| exog cov_params	count=1
module	on a ||| graphics	count=1
module	mean variance for distributions ||| sandbox distributions	count=2
module	of white noise covariance ||| tsa vector_ar	count=1
class	compute a wald-test for ||| model	count=1
class	model this reduces the ||| likelihood model	count=1
function	estimated covariance for coefficients ||| cov params	count=1
function	f ||| f	count=1
arg	for ||| r_matrix	count=1
class	significance value ||| coef	count=1
class	in ||| sarimax	count=1
function	[function] or raise ||| validate [function]	count=3
function_arg	group means [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] arma ||| [function_2] generate [function_1]	count=2
module	duration ||| duration	count=2
arg	transform constrained ||| constrained	count=6
arg	function fn ||| fn	count=1
arg	rhs and returns the ||| rhs	count=1
arg	with d1 [arg_2] ||| [arg_1] [arg_2]	count=1
arg	norm and a ||| a scale norm	count=1
arg	estimation of the bandwidth ||| bw	count=1
module	and list of ||| sandbox	count=1
function	computing marginal effects ||| derivative	count=1
arg	[arg] through ||| [arg]	count=3
function	var ||| llf	count=1
module	parameters used in ||| tsa	count=3
arg	function plots lags on ||| x ax lags alpha	count=1
arg	[arg_1] : int ||| [arg_2] [arg_1]	count=1
function	a text ||| savetxt	count=1
function	the ||| init	count=2
arg	sequence ||| labels positions	count=1
arg	and r ||| r	count=2
function	computes the test statistic ||| compute test stat	count=1
function	[function_1] fdr ||| [function_1] [function_2]	count=2
arg	of x by time ||| x index	count=1
module	longer than the ||| examples tsa	count=1
arg	updates the representation ||| transformed complex_step	count=1
function	indicators ||| indicators	count=1
function	parameter names list ||| make param names	count=1
class	other ||| kalman filter	count=2
arg	for ||| method	count=1
class	data ||| descr	count=1
function	prepare [function] ||| prepare [function]	count=2
function	text ||| text	count=1
function	along first ||| sumofsq	count=1
class	kernel smoothing ||| custom kernel	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2]	count=225
class	the significance value for ||| coef c	count=1
arg	time ||| time	count=1
module	with degrees of freedom ||| vector_ar	count=1
function	matrix for the dataset ||| matrix	count=1
function_arg	the psi [arg_2] ||| [arg_2] [function_1]	count=4
arg	npcs ||| npcs	count=1
function	time point weighted by ||| weighted	count=1
function_arg	[function_1] statistic for ||| [function_1] [arg_2]	count=1
arg	the value [arg_2] ||| [arg_2] [arg_1]	count=1
function	of marginal effects by ||| params	count=1
function	sequence of date strings ||| from	count=1
arg	[arg_1] d2 ||| [arg_1] [arg_2]	count=2
arg	independent columns [arg] either iterable ||| [arg]	count=1
arg	unconstrained parameters used ||| unconstrained	count=1
function	marginal distribution of random ||| random	count=1
function	silverman normal ||| normal	count=1
function	the trace [function_2] ||| [function_2] [function_1]	count=4
function	confidence interval is ||| confint	count=1
arg	given standard deviation parameters ||| std	count=1
arg	shape ||| shape	count=2
arg	to obtain a ||| group_ix	count=1
arg	computes ||| model params	count=1
function_arg	confidence [arg_2] ||| [function_1] kurt [arg_2]	count=2
arg	polynomials for n ||| n	count=1
arg	apply ||| smooth_method results run_filter	count=1
arg	resids vs leverage ||| criterion	count=1
function	based on normal distribution ||| ztost	count=1
module	with zero ||| stats	count=1
function_arg	[function_1] name ||| [function_1] [arg_2]	count=4
class	hypothesis ||| contrast	count=1
arg	[arg] unit root ||| x maxlag regression [arg]	count=1
module	the value of the ||| tsa statespace	count=1
arg	given an array of ||| data col	count=1
function	quantize a continuous ||| prob quantize cdf	count=1
function	inverse covariance matrix ||| mat	count=1
arg	first elements ||| inplace	count=3
function	be steady-state values notes ||| steady state	count=1
function	by the ||| margeff cov params	count=1
function	variable name ||| get endog name	count=1
arg	[arg_1] to matrix ||| [arg_2] [arg_1]	count=2
function	the variable s tested ||| sig	count=1
class	jacobian of ||| result mixin	count=1
class	the kalman ||| kalman	count=2
function	trace [function_2] ||| [function_2] [function_1]	count=4
function	effects by ||| params	count=1
module_class	factor [class_2] ||| [module_1] [class_2]	count=2
class	two sample ||| gof	count=1
arg	returns endog ||| endog	count=1
function	[function_1] location ||| [function_1] index label [function_2]	count=1
module	maximum likelihood of ||| tsa	count=1
module	product of ||| sandbox	count=1
module	the parameter ||| sandbox	count=1
function	perform a test that ||| test	count=1
module	is a measure for ||| stats	count=1
function	the approximate ||| wdesign mat	count=1
class	observation to the domain ||| ortho poly	count=1
function	for a ||| update	count=1
arg	to ||| mod	count=1
function	an array of shape ||| shape	count=1
function	of freedom ||| df	count=1
arg	index or ||| index silent	count=1
arg	r ||| r	count=5
function	solves matrix equations of ||| matrix solve	count=1
module	function to ||| tsa	count=1
class	371 in [8] ||| test reg coef c	count=1
module	the likelihood is ||| statespace	count=1
arg	calculates ||| params	count=1
module	sum of squares ||| tsa	count=1
class	sample z-test ||| gof chisquare	count=1
function	nominal ||| test nominal	count=1
arg	model ||| t beta	count=1
function	multivariate partial autocorrelations ||| multivariate pacf	count=2
arg	function to each column ||| function	count=1
function	date strings and ||| dates from	count=1
function_arg	[function_1] weighted empirical ||| [arg_2] [function_1]	count=1
arg	asymmetric ||| theta	count=2
arg	resids vs leverage ||| alpha criterion	count=1
module	not longer than the ||| examples tsa	count=1
module	likelihood of ||| tsa	count=1
arg	apply linear transform ||| x transform group_iter	count=1
class	dataset ||| stata reader	count=1
function_arg	plot the [arg_2] ||| [arg_2] [function_1]	count=1
module_class	for a [class_2] ||| [module_1] [class_2]	count=2
function	the trace ||| trace	count=1
function	strings and returns ||| dates	count=1
function	marginal effects ||| margeff	count=3
function	inflation factor is a ||| inflation factor	count=1
function	information criteria for lagorder ||| criteria	count=1
module	the second moment of ||| sandbox	count=1
module	compute a ||| base	count=1
class	results ||| results	count=9
class	[class] x ||| arma [class]	count=1
module	error of the parameter ||| sandbox	count=1
arg	a plot ||| ax lines_idx frac	count=1
module	and other info ||| tsa kalmanf	count=1
arg	compute ||| cov_p scale	count=1
function	dependent paired ||| paired	count=1
class	estimation ||| autoregression	count=1
function	the schoenfeld [function_2] ||| [function_2] [function_1]	count=1
arg	to test for a ||| regression autolag	count=1
module_class	[module_1] box-cox regressions ||| [module_1] [class_2]	count=8
class	least [class_2] ||| [class_2] [class_1]	count=2
function_arg	bilogistic [arg_2] ||| [arg_2] [function_1]	count=4
function	add lowess line to ||| add lowess	count=1
class	of a chisquare ||| gof chisquare	count=1
class	of the inverse of [class_1] [class_2] transform ||| [class_1] [class_2]	count=1
function	includes ||| reject	count=2
function_arg	[function_1] process parameters ||| [function_1] [arg_2]	count=6
arg	lags : ||| start_params lags maxiter	count=2
function_arg	[function_1] parameter in ||| [arg_2] [function_1]	count=3
function	multivariate partial autocorrelations from ||| multivariate pacf from	count=1
function	summary table [function_2] ||| [function_1] [function_2]	count=1
module	calculate ||| tsa	count=1
module	parameter estimates with ||| regression	count=1
arg	the kalman ||| params start	count=1
arg	by r [arg_2] ||| [arg_1] [arg_2]	count=1
arg	equal spaced time ||| time	count=1
class	significance value ||| coef c	count=1
function	using the efron method ||| efron	count=1
class	andrew's [class_2] ||| [class_1] [class_2]	count=2
arg	one sample proportion ||| value nobs	count=1
function	log-likelihood gradient for ||| grad	count=1
class	function ||| mlemodel	count=1
function	log-likelihood function [function] at params ||| llf [function]	count=2
module	distributions with ||| sandbox distributions	count=2
function	fitted values for ||| fittedvalues	count=1
arg	function f returns 1d ||| x f epsilon args	count=1
class	the parameter estimates ||| gmmresults	count=1
class	degrees of freedom ||| varresults	count=1
module	[module] z-test ||| [module]	count=3
arg	the bandwidth ||| bw	count=1
function	make plot [function_2] ||| [function_2] [function_1]	count=1
class	tukey's biweight ||| tukey biweight	count=8
arg	of creating the weights ||| weights new_entries x_copy_i width	count=1
function	needed ||| mpl	count=1
function_arg	[function_1] model of ||| [arg_2] [function_1]	count=1
function	compute cohen's kappa ||| cohens kappa	count=1
class	the tweedie ||| tweedie	count=1
function_arg	[function_1] formula parameters ||| [function_1] y [arg_2]	count=1
function	[function_1] function for ||| [function_2] [function_1]	count=6
arg	[arg_1] positive semi-definite ||| [arg_2] [arg_1]	count=1
function	number of observations ||| df	count=1
function	lutkepohl 2005 book ||| lutkepohl	count=1
function	wald-test ||| wald test	count=2
module	period's regime (and the ||| tsa regime_switching	count=1
arg	confidence interval ||| alpha alternative	count=1
function	convolution ||| convolution filter	count=1
function	[function_1] bivariate ||| [function_2] [function_1]	count=4
function	debiased ||| debiased	count=1
function	hac independent of ||| hac	count=1
function	returns a list ||| dates from	count=1
function	tost the ||| tost	count=1
function	a correlation [function_2] ||| [function_1] [function_2]	count=1
function	partial regression for a ||| partregress grid	count=1
function	[function_1] one ||| [function_2] [function_1]	count=2
function	info needed for the ||| kalman	count=1
module	var ||| tsa	count=1
function	the mean of ||| mv mean	count=1
module	period's regime ||| regime_switching	count=2
function	[function_1] means of ||| [function_2] [function_1]	count=2
module	of white noise covariance ||| tsa	count=1
function	the solvers using ||| solvers	count=1
function	[function] coefficient matrices ||| [function]	count=1
module	noise covariance with ||| vector_ar	count=1
function	the trace ab ||| trace symbanded	count=2
arg	marginal effects by ||| model	count=1
function	ma ||| orth ma	count=1
module	all observations the regression ||| sandbox regression	count=1
arg	of data confidence interval ||| alpha	count=1
function	to test ||| compare lr test	count=1
function	annotate ||| annotate	count=1
arg	and a ||| a	count=1
function	a discrete ||| discrete	count=1
function	integer row ||| maybe reset	count=1
function	test statistic ||| test	count=1
arg	needed for ||| cls	count=1
module	[module_1] coefficients ||| [module_1] [module_2]	count=2
module	the constrained ||| genmod	count=1
arg	array [arg] ||| [arg]	count=6
arg	indices ||| indices values	count=1
function	display as html ||| html	count=1
class	sample ||| gof chisquare	count=1
function	mean of bivariate ||| mv mean	count=1
class	comparison of ||| tukey	count=1
class	counter object ||| counter	count=1
function	of marginal ||| margeff cov	count=1
module	with degrees of ||| tsa	count=1
arg	1d parameters ||| unbiased demean	count=1
function_arg	at params for ||| score obs params	count=1
function	location ||| loc	count=2
function	by ||| cov params	count=2
arg	namespace ||| namespace	count=1
module	equal [module] 0 ||| [module]	count=1
arg	is positive semi-definite this ||| threshold	count=1
arg	other info needed ||| cls params	count=1
arg	a series ||| series	count=1
function_arg	marginal effects [arg_2] ||| [function_1] [arg_2]	count=2
function	given a monotone ||| monotone fn inverter	count=2
function	turns a sequence ||| dates from range	count=1
class	in a formula ||| formula	count=1
module	[module] a ||| [module]	count=5
arg	all pairs of vals ||| vals	count=1
function	table ||| summary	count=2
function	solve ||| solve	count=8
arg	parameters ||| params	count=22
function	correlation matrix for a ||| matrix	count=1
function	update ||| lowess update	count=1
arg	the delta ||| model params exog	count=1
function	residuals ||| resid	count=22
class	the smoothing ||| smoothing	count=1
module	along the ||| sandbox tsa	count=1
function	to datetime ||| elapsed date to datetime	count=1
function	create a summary ||| summary	count=1
arg	bitmask from ||| simulation_output simulate_state simulate_disturbance simulate_all	count=1
function	test of the ||| test	count=1
function	the confidence interval ||| density confint	count=1
arg	recursions ||| arma_model set_sigma2	count=1
arg	model ||| t	count=1
function	approximate ||| mat	count=1
arg	is a [arg_2] ||| [arg_1] [arg_2]	count=1
module	needed for ||| kalmanf	count=1
arg	coefs and ses parameters ||| float_format model_names stars	count=1
function	joe ||| joe	count=1
arg	optional estimate of mu ||| mu initscale	count=1
module	returns ||| emplike	count=6
function	partial ||| pacf	count=1
function_arg	the log [arg_2] ||| [arg_2] [function_1]	count=2
function	get group ||| group	count=1
class	is equal to ||| descr	count=1
arg	observed and expected data ||| observed expected	count=1
module	with ||| sandbox stats	count=3
arg	by the delta method ||| exog	count=1
module	string is provided ||| iolib	count=1
class	of linear model ||| tlinear model	count=2
function	rectangle in a bivariate ||| bv rectangle	count=1
function	experimental function ||| summary2	count=1
arg	f returns 1d array ||| f epsilon	count=1
function	other ||| kalman	count=1
arg	generate the approximate inverse ||| mod	count=1
function	[function_1] normal ||| [function_2] [function_1]	count=2
class	fixed effects parameters ||| one way mixed	count=2
module	a list of ||| tsa base	count=1
arg	data array ||| data	count=1
function_arg	the mutual [arg_2] ||| [arg_2] [function_1]	count=2
function	the distribution of uncensored ||| get distribution	count=1
arg	rhs ||| rhs	count=2
function	the ||| res	count=1
module	of a regime ||| regime_switching	count=1
module	by the delta method ||| discrete	count=1
arg	determine if a polynomial ||| polynomial	count=1
function	the se of ||| compute se	count=1
arg	arrays y and ||| y	count=1
module	return ||| iolib	count=9
class	significance value for the ||| test reg coef c	count=1
function	calculate recursive ||| recursive	count=1
arg	in-sample prediction and out-of-sample ||| params start end	count=1
arg	optionally the scatter of ||| scatter ax	count=1
function	of observations during which ||| loglikelihood burn	count=1
function	grid in a multivariate ||| mv grid	count=1
arg	in-sample prediction and out-of-sample ||| start end	count=1
function	of ||| params	count=1
arg	* [arg] * pinv ||| results [arg]	count=1
function	[function_1] disturbance ||| statespace simulation smooth results [function_1] [function_2]	count=2
class	in the formula ||| formula	count=2
function	[function_1] mediator ||| [function_1] [function_2]	count=1
arg	and labels on ||| labels positions	count=1
arg	eps by zero makes ||| x eps	count=2
function	add lowess line ||| add lowess	count=2
function	is [function_2] ||| [function_1] [function_2]	count=1
arg	lags ||| x ax lags	count=1
arg	variation if ||| x bounds window_length scale	count=1
function	chisquare test ||| chisquare	count=3
function	to generate ||| wdesign	count=1
function	aic [function_2] ||| [function_1] [function_2]	count=3
arg	and other info ||| cls	count=1
module	single variable ||| imputation	count=1
module_class	[module_1] g'' ||| [module_1] [class_2]	count=5
class	notes ||| logit results	count=1
module_class	back-transforms [module_1] [class_2] ||| [module_1] [class_2]	count=8
function	a sequence ||| dates from	count=1
arg	model of coles and ||| t beta	count=1
function	versus the probabilities percetiles ||| ppplot	count=1
module	distribution where sigma=corr ||| sandbox distributions	count=1
function	[function_1] vech(sigma_u) ||| [function_1] [function_2]	count=1
module	for white ||| stats	count=1
class	of freedom correction ||| varresults	count=1
arg	calculates the ||| mod	count=1
function	the dot product of ||| dot	count=1
function	likelihood of the ||| likelihood	count=1
class	of identical [class] parameters ||| compare [class]	count=1
function	strings and returns ||| dates from	count=1
module	loglikelihood ||| vector_ar	count=1
class	for kernel density the ||| custom kernel	count=1
function_arg	[function_1] r ||| [arg_2] [function_1]	count=3
module	for minimizing a differentiable ||| stats	count=1
arg	endog with respect to ||| params offset_exposure	count=1
module_class	[module_1] [class_2] ||| [module_1] parameter [class_2]	count=1
function	approximate inverse covariance matrix ||| calc	count=1
function	values for ||| update	count=1
arg	[arg_1] sequence ||| [arg_1] ax [arg_2]	count=4
arg	unconditional maximum likelihood ||| start_params method maxiter tol	count=1
function	subsets of another set ||| set	count=1
function	bias ||| bias	count=1
function	ttest of [function_2] ||| [function_1] [function_2]	count=1
function	component ||| components	count=1
arg	first item [arg] array-like ||| [arg]	count=1
function	returns the correlation ||| corr	count=1
arg	y normed=true detrend=detrend_none ||| y normed detrend	count=1
arg	d1 = [arg_2] ||| [arg_1] [arg_2]	count=1
class	computes the significance ||| test reg coef c	count=1
module	variance for distributions with ||| sandbox distributions	count=2
arg	[arg_1] axis ||| [arg_2] [arg_1]	count=8
class	inverse of [class] ||| [class]	count=2
arg	distributedmodel ||| fit_kwds	count=1
function_arg	[function_1] p ||| [function_1] [arg_2]	count=1
arg	scatter of the sample ||| scatter ax	count=1
function	[function_1] names ||| [function_1] [function_2]	count=2
arg	for regression results parameters ||| xname yname title alpha	count=1
function	the standard errors ||| bse	count=1
function	less than one ||| less than one	count=1
function_arg	starting parameters [arg_2] ||| [function_1] search [arg_2]	count=2
function	matrices with singular values ||| compute coefficients from multivariate pacf python	count=1
function	estimated covariance for ||| cov params	count=1
function	test ||| compare lr test	count=1
function	instance of ||| add	count=1
function	use gls to update ||| get fe	count=1
arg	parameters [arg_2] ||| [arg_1] [arg_2]	count=1
module	exponential family distribution ||| genmod families	count=2
function	sif to ||| date to	count=1
function	calculates the ||| calc wdesign mat	count=1
module	fan and ||| sandbox	count=1
arg	name ||| name	count=1
function	derivative of [function_2] ||| [function_2] [function_1]	count=2
function	array expected ||| expected	count=1
function	observation evaluated ||| obs	count=1
arg	residuals and cusum test ||| skip lamda	count=1
module	parameter estimates with options ||| regression	count=1
arg	plots lags on ||| ax lags alpha	count=1
module	sequence ||| tsa base	count=2
class	value of the ||| results	count=1
function	return predicted values ||| predict	count=1
module	other ||| kalmanf	count=1
function	group [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] x ||| [arg_2] [function_1]	count=5
arg	from cache ||| cache	count=1
function	minus ||| resid	count=2
arg	at (endog mu freq_weights ||| mu freq_weights	count=1
arg	components enthresh npcs ||| enthresh npcs	count=1
function	list of ||| from	count=1
module	array ||| tsa statespace	count=1
arg	x returns ||| x n	count=2
module	ipython notebook ||| iolib	count=1
function	outlier ||| outlier	count=1
module_class	arma [class_2] ||| [module_1] [class_2] filter2 x pad	count=3
function	a wald-test ||| wald	count=1
function	returns a list ||| str	count=1
function	flexible grid plots of ||| irf grid plot	count=1
arg	eps by zero makes ||| eps	count=2
class	parameters including the intercept ||| varresults	count=1
class	period [class] only ||| [class]	count=1
function	of date ||| from str	count=1
function	a list ||| from	count=1
function	plots of ||| plot	count=1
module_class	[module_1] constraint ||| [module_1] [class_2]	count=1
module	the marginal ||| genmod	count=1
function	group means ||| group mean	count=2
function	function by monte carlo ||| mc	count=1
arg	dataset in the data ||| data	count=2
arg	list of z-scores ||| zscores null_proportion null_pdf deg	count=1
function	linear ||| multi ols	count=1
function	the four [function_2] ||| [function_2] [function_1]	count=3
function	pointwise product computed efficiently ||| dotsum	count=1
function	basis of ||| basis	count=1
class	means this ||| means	count=1
function	std ||| std	count=1
function	sum ||| sum	count=3
function	comonotonic ||| min	count=1
function	the integer row ||| maybe reset	count=1
class	derivative of the [class_1] [class_2] transform ||| [class_1] [class_2] inverse deriv z	count=1
arg	selected by r ||| r	count=1
module	negative ||| genmod families	count=2
function	the logistic ||| untransform logistic	count=1
function	test ||| compute test	count=2
arg	of the fitted model ||| atexog dummy	count=2
arg	binned data using ||| distfn freq binedges start	count=1
function_arg	[function_1] log-likelihood parameters ||| [function_1] [arg_2]	count=2
class	the ||| kalman	count=2
function	a monotone ||| monotone fn	count=2
arg	if the given groups ||| pvals groups	count=1
function	rectangle in ||| rectangle	count=1
module	qsturng ||| stats libqsturng	count=1
function	computes the test ||| test	count=2
arg	p sample mean difference ||| p	count=1
function	the loglikelihood for an ||| loglike	count=1
function	the deviance ||| deviance	count=1
function	linear ||| linear	count=2
arg	computes fitted values ||| exog_predict exog_nonparametric_predict	count=1
function	[function] star98 ||| [function]	count=1
function_arg	correlation matrix [arg_2] ||| [function_1] equi [arg_2]	count=2
function_arg	fit the [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] [arg_2] on off diagonal ||| [function_1] [arg_2]	count=1
function	of the vector ||| copy index vector	count=1
function	the plotting ||| plotting	count=1
function_arg	local constant [arg_2] ||| [function_1] [arg_2]	count=4
function	of scale ||| scale	count=1
function	remove sets ||| remove	count=1
module	and another distribution ||| distributions	count=1
function	cusum of [function_2] ||| [function_2] [function_1]	count=3
function	matrices with singular ||| compute coefficients from multivariate pacf python	count=1
function	[function] or ||| validate [function]	count=3
function	q statistic ||| q stat	count=1
class	of ||| varresults	count=2
function	get [function_2] ||| [function_1] [function_2]	count=1
arg	uses 'iteritems' [arg] available ||| [arg]	count=1
module	and other info needed ||| tsa	count=1
function	function to compute ||| compute	count=1
module_class	[module_1] none ||| [module_1] [class_2]	count=6
arg	given ||| exposure	count=1
arg	first elements of the ||| index inplace	count=1
class	and other ||| kalman filter	count=1
class	jp check ||| unit	count=1
function	returns ||| kalman	count=1
function	[function_1] recarray ||| [function_1] [function_2]	count=1
function	[function_1] for autoregressive ||| [function_1] [function_2]	count=1
function_arg	thresholded [arg_2] ||| [arg_2] [function_1]	count=1
function	starting ||| starting	count=1
module	the ||| tsa statespace	count=12
function	rectangle in [function_2] ||| [function_2] [function_1]	count=2
arg	the fitted ||| atexog dummy	count=2
function_arg	[function_1] error parameters ||| [function_1] [arg_2]	count=1
arg	polynomial is not longer ||| x	count=1
module	test for normality parameters ||| stats	count=1
arg	p [arg_2] ||| [arg_1] [arg_2]	count=4
arg	the delta ||| model params	count=1
arg	the true_params ||| true_params	count=2
arg	fitted mean response ||| mu freq_weights scale	count=4
function	return the [function_2] ||| [function_1] [function_2]	count=1
function	harvey [function_2] ||| [function_1] [function_2]	count=1
arg	to calculate ||| x	count=1
function	from [function] ||| parse [function]	count=3
module	of white noise ||| tsa vector_ar	count=1
arg	process ||| ar ma nsample sigma	count=1
function_arg	[function_1] series simply ||| [function_1] [arg_2]	count=1
arg	and labels on horizontal ||| data labels positions	count=1
function	normal inverse transformed cdf ||| normal inverse transformed	count=1
module	mean along the ||| tsa	count=1
arg	(endog mu [arg_2] ||| [arg_2] [arg_1]	count=1
module	fit ols regression ||| sandbox regression	count=1
arg	line ||| line x	count=1
class	the variance ||| variance	count=1
module	compute orthogonalized ||| tsa vector_ar	count=1
arg	1d ||| y unbiased demean	count=1
arg	test of non- equivalence ||| x2 low upp	count=1
arg	wald-test for a ||| cov_p	count=1
module	of ||| stats	count=7
function	[function_1] the mediator ||| [function_2] [function_1]	count=1
function	integrated ||| errband	count=3
class	wald ||| likelihood model results	count=1
function_arg	standard deviation [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	[function_1] interval for ||| [function_1] beta param_num [arg_2]	count=1
function	create equicorrelated [function] ||| [function]	count=1
arg	[arg_1] difference r ||| [arg_1] [arg_2]	count=2
class	box-cox transformed ||| box cox	count=1
module	needed for the ||| tsa kalmanf	count=1
arg	summarize the ||| start title model_name	count=1
function	2 subsamples parameters ||| het goldfeldquandt2 old	count=1
function	scalar version of qsturng ||| qsturng	count=1
class	[class_1] binomial ||| [class_1] [class_2] inverse deriv z	count=3
function	conditional ||| conditional	count=1
function	and integer location of ||| maybe	count=1
class	[class_1] squares ||| [class_1] [class_2]	count=2
class	fits [class] ||| [class]	count=1
function	insert column of ||| insert stubs	count=1
function	standardized t with respect ||| tstd dlldy	count=1
function_arg	[function_1] data ||| genmod ordinal gee setup [function_1] [arg_2]	count=1
module	number [module_2] ||| [module_2] [module_1]	count=1
function	given a monotone ||| monotone fn	count=2
function	split ||| split rect	count=2
class	andrew's ||| andrew	count=2
class	significance value ||| test reg coef	count=1
function	confidence interval is centered ||| density confint	count=1
function_arg	transform [arg_2] ||| [function_1] [arg_2]	count=4
arg	[arg_1] [arg_2] ||| [arg_1] ax [arg_2]	count=6
function	hessian matrix of the ||| hessian	count=4
module	with one ||| sandbox stats	count=1
arg	and other ||| cls	count=1
module_class	link function [class_2] ||| [class_2] [module_1]	count=2
function	chi-square ||| chi2	count=1
class	other info ||| kalman	count=1
function	estimates with ||| get	count=1
class	filter [class] x ||| arma [class]	count=1
class	variable of a count ||| count	count=1
module	in a ||| graphics	count=1
module	strings and returns ||| tsa base	count=1
function_arg	axes with [arg_2] ||| [function_1] index [arg_2]	count=2
function	nipals implementation [function_2] ||| [function_2] [function_1]	count=5
arg	is not a vectorized ||| x	count=1
class	tukey's biweight estimator ||| tukey biweight	count=2
function	the score ||| score	count=2
function	computes the cohn ||| cohn	count=1
module	with consecutive equal spaced ||| stats	count=1
function	the se of ||| se	count=1
module	the parameter estimates with ||| regression	count=1
function	of the names ||| names	count=1
function	for lagorder ||| info	count=1
module	based on the hessian ||| genmod	count=1
module	effects by the ||| discrete	count=1
arg	criteria are [arg] ||| [arg] start_invweights	count=3
arg	of non- equivalence ||| x1 x2 low upp	count=1
arg	shape [arg_2] ||| [arg_1] [arg_2]	count=2
class	the parameter ||| phreg	count=1
module	p ||| tsa	count=1
function	used to determine ||| limits	count=1
class	user ||| mixed lm	count=1
arg	the value ||| resid omega	count=1
arg	the data ||| data alpha beta axis	count=1
arg	parameters of the model ||| params	count=1
module	because of distribution ||| distributions	count=1
arg	returns an array with ||| x col	count=1
class	summary ||| square table	count=1
function	default format ||| to default	count=1
function	margeff ||| check margeff	count=1
arg	the orthogonal polynomial ||| x polybase order limits	count=1
function	information criteria for ||| criteria	count=1
arg	whether restricted model ||| restricted large_sample	count=1
function	the covariance matrix for ||| covariance matrix	count=1
arg	along [arg] 0 ||| x order [arg]	count=1
class	an instance of ||| olsresults	count=1
module	to calculate sum of ||| tsa	count=1
arg	having v ||| v	count=2
module_class	[module_1] [class_2] ||| [module_1] kalman [class_2]	count=2
arg	all ||| all	count=1
arg	frequency of x ||| x	count=1
arg	appropriate length for ||| p q k_trend	count=1
function_arg	probability [arg_2] ||| [arg_2] [function_1]	count=1
arg	variance-covariance of ||| cov_params	count=1
arg	be fe optional model ||| model	count=1
module_class	on box-cox regressions ||| base box cox	count=1
function	to generate the approximate ||| wdesign mat	count=1
module	regression ||| sandbox regression	count=3
arg	estimator of g ||| bw	count=3
arg	plot a reference line ||| ax line	count=1
function_arg	psi [arg_2] ||| [function_1] [arg_2]	count=4
function	gradient ||| grad	count=3
arg	the first elements of ||| inplace	count=3
function	hac for observations within ||| within hac	count=1
function	test statistic see p ||| compute test stat	count=1
function	given ||| split data	count=2
function	calculate the ceres ||| ceres	count=1
arg	with correlations determined by ||| n num_nonconst_covariates	count=1
function_arg	[function_1] [arg_2] ||| [function_1] heteroskedasticity [arg_2]	count=1
arg	power ||| power	count=5
class	parameter estimates with options ||| gmmresults	count=1
function	ceres residuals ||| ceres	count=1
function	sequence of ||| str	count=1
function	[function_1] timing ||| filter [function_1] [function_2] alternate_timing	count=1
function	monotone ||| monotone	count=2
arg	return x ||| x	count=2
class	the regularized ||| regularized	count=1
module	graphical ||| sandbox	count=1
arg	singular values ||| order k_endog	count=1
function	from arrays and ||| handle formula data	count=1
function	[function_1] sum ||| [function_1] [function_2]	count=2
arg	first elements of ||| inplace	count=3
arg	drop_idx is ||| drop_idx	count=1
function	moving average parameters actually ||| maparams	count=1
arg	in parallel ||| init_kwds_generator	count=1
arg	'lhs only' ||| bounds options	count=1
module	distribution given by ||| distributions	count=1
arg	plot of ||| ax	count=2
class	[class_1] biweight ||| [class_1] [class_2]	count=5
module	needed ||| kalmanf	count=1
class	other info needed for ||| kalman	count=1
function	other info ||| kalman state	count=1
arg	effects by ||| model params exog	count=1
class	table ||| contrast results	count=1
function	h ||| h	count=1
function	the log-likelihood gradient ||| grad	count=1
function	x minus ||| detrend	count=1
function	constant used [function] reference ||| [function] reference	count=1
arg	a joint linear hypothesis ||| r_matrix cov_p scale invcov	count=1
function	baseline cumulative ||| baseline cumulative	count=2
arg	the range for z ||| z	count=1
function	fdr values ||| fdr	count=1
function	a latex [function_2] ||| [function_1] [function_2]	count=1
module	for ||| sandbox tsa	count=2
arg	interval for ||| sig upper_bound lower_bound	count=3
arg	for binned data using ||| distfn freq binedges start	count=1
arg	calculate the ||| effect_size nobs alpha k_groups	count=1
arg	of columns according ||| ar_coefs	count=1
module	(m in regression ?) ||| panel	count=1
function_arg	estimation using [arg_2] ||| [function_1] [arg_2]	count=1
function	return predicted [function_2] ||| [function_1] [function_2]	count=2
arg	estimation [arg] ||| data_generator fit_kwds parallel_backend [arg]	count=1
function	the marginal survival function ||| survfunc	count=1
function	wald-test for ||| wald test	count=1
arg	returns views on [arg_1] [arg_2] where missing observations are ||| [arg_1] [arg_2]	count=1
arg	parameters ||| axis	count=1
arg	model updates ||| transformed complex_step	count=1
arg	in ||| y x	count=1
module	for ||| base	count=1
function	get group [function_2] ||| [function_2] [function_1]	count=2
function	and ||| init kalman	count=1
function	covariance matrix [function_2] ||| [function_2] effects [function_1]	count=1
function	[function_1] a type ||| [function_2] [function_1]	count=1
arg	for ||| cov_p scale	count=1
function	as a ||| as	count=1
function	latex ||| latex	count=2
arg	power of a two ||| power	count=2
function	a sequence of ||| str	count=1
function	the ||| calc	count=2
module	graphical test ||| sandbox	count=1
arg	tree to ||| tree	count=1
function	least squares irls ||| irls	count=1
function	aitchison-aitken ||| aitchison aitken	count=1
arg	spaced time ||| x time nlags	count=1
function	confidence ||| ci	count=5
function	slices ||| get slices	count=1
arg	delta method ||| exog	count=1
arg	of variation ||| x bounds window_length scale	count=1
function	seasonal decomposition ||| seasonal decompose	count=2
class	negative ||| negative	count=5
arg	squares along first axis ||| x axis	count=1
function_arg	[function_1] function fn ||| [arg_2] [function_1]	count=3
class	the ||| kalman filter	count=4
function	grid in ||| mv grid	count=1
module_class	[module_1] pooled ||| [module_1] [class_2]	count=2
arg	computes the variance-covariance ||| model params exog cov_params	count=1
arg	for 1d ||| y unbiased demean	count=1
arg	mu freq_weights ||| endog mu freq_weights	count=2
arg	concatenate [arg_2] ||| [arg_2] [arg_1]	count=2
arg	the model updates the ||| transformed complex_step	count=1
arg	initial phase of creating ||| new_entries x_copy_i width	count=1
module	test for normality ||| stats	count=2
function	parser parse but ||| parser	count=1
function	the lambda parameter in ||| lambda	count=1
class	for a single variable ||| micedata	count=1
function	of marginal ||| margeff	count=1
function	get the location ||| get prediction	count=1
function	and ||| dates from str	count=1
class	ramsay's ea ||| ramsay e	count=3
arg	to maxfact factors the ||| maxfact	count=1
class	tukey's ||| tukey	count=4
arg	maxiter ||| maxiter	count=1
arg	info ||| params	count=1
arg	the approximate inverse covariance ||| params	count=1
function	[function_1] [function_2] to the least ||| [function_1] [function_2] n	count=4
module_class	for one [class_2] ||| [module_1] [class_2]	count=1
arg	that ||| endog exog	count=1
function	runs the solvers using ||| run solvers	count=1
function	returns the hessian ||| hessian	count=1
function	calculate local fdr ||| local fdr	count=2
module	the integrated ||| tsa	count=1
arg	polynomial roots ||| arroots maroots	count=1
function	of joe ||| joe	count=1
function	[function_1] vech(sigma_u) ||| [function_2] [function_1]	count=1
module	distribution location ||| distributions	count=2
function	sample of [function_2] ||| [function_2] generate [function_1]	count=1
arg	for a ||| r_matrix cov_p	count=1
module	parameter estimates with options ||| sandbox	count=1
function	on the observation and ||| obs	count=1
function	2-dimensional plot of the ||| plot2d	count=1
function	[function_1] lowess line ||| [function_1] [function_2]	count=1
class	trimmed [class_2] ||| [class_1] [class_2]	count=1
arg	estimating distribution parameters ||| params	count=1
arg	x by ||| x index	count=1
function_arg	[function_1] new empty ||| [function_1] [arg_2]	count=1
function	covariance matrix ||| calc wdesign	count=1
arg	turns a sequence of ||| dates	count=1
function	missing data [function_2] ||| [function_1] [function_2]	count=1
function	bartlett ||| bartlett	count=1
function	of the data home ||| clear data home	count=1
arg	the data sequence ||| data	count=1
function	[function_1] [function_2] matrices ||| [function_1] [function_2]	count=2
function	calculates ||| wdesign mat	count=2
function_arg	means [arg_2] ||| [function_1] [arg_2]	count=3
function	random sample [function_2] ||| [function_2] [function_1]	count=1
function	margeff ||| margeff	count=1
function	[function_1] factor ||| [function_1] [function_2]	count=5
arg	the value [arg_2] ||| [arg_1] [arg_2]	count=1
arg	plots lags on the ||| lags alpha	count=1
function	by monte carlo ||| mc	count=1
function	less than one ||| less than one python	count=1
module	number [module_2] ||| [module_1] [module_2]	count=1
arg	design matrix parameters ||| params	count=1
arg	add correlation of ||| nobs	count=1
class	a wald-test for a ||| likelihood	count=1
function	from each [function_2] ||| [function_2] [function_1]	count=1
arg	comparemeans object ||| data1 data2 weights1	count=1
class	significance value for ||| test reg coef	count=1
function	of squares of ||| squares	count=1
function	partial autocorrelations [function_2] ||| [function_1] [function_2]	count=1
function	residuals [function_2] ||| [function_2] [function_1]	count=2
module	info ||| tsa	count=1
module	regression returns ||| sandbox regression	count=1
function	initial ||| initial imputation	count=1
module	lagorder selection ||| tsa	count=1
function	of date strings and ||| dates from	count=1
function	one ||| one python	count=2
function_arg	autocovariance for [arg_2] ||| [arg_2] [function_1]	count=2
function	to generate the approximate ||| calc	count=1
class	covariance ||| cov struct	count=1
module	a sequence of date ||| tsa base	count=1
function	to generate ||| wdesign mat	count=1
function	variance ||| var	count=7
arg	matrix ||| params	count=5
function	date ||| from	count=1
function	of [function_2] ||| [function_2] [function_1]	count=4
class	two sample ||| gof chisquare	count=1
function	baseline cumulative hazard function ||| baseline cumulative hazard	count=1
arg	omitted variables ||| params_constrained k_constraints exog_extra observed	count=1
function	wrapper around [function] method of ||| pairwise [function]	count=1
function	[function_1] partial ||| [function_2] [function_1]	count=2
module	confidence interval for ||| stats	count=1
function	info needed ||| init kalman state	count=1
function	of ||| exog	count=1
function	sample prediction ||| sample	count=1
arg	returns the system matrices ||| params arma_model	count=1
function	of ||| from	count=2
function	as string ||| as	count=2
arg	generate the approximate ||| mod params	count=1
function_arg	create [arg_2] ||| [arg_2] [function_1]	count=1
function	inverse covariance ||| calc wdesign mat	count=1
function	plot of marginal ||| plot	count=1
class	an ar ||| ar	count=1
class	significance value for ||| coef	count=1
arg	assumes [arg_2] ||| [arg_1] [arg_2]	count=2
function	or ||| or	count=1
function	pmm-like procedure for initial ||| initial imputation	count=1
function	returns the mutual ||| mutualinfo	count=1
function	test statistic see p ||| test	count=1
function	std and ||| std	count=1
function	qqplot ||| qqline	count=1
function	confidence ||| ci skew	count=1
function	summary table ||| summary	count=4
function	by the ||| cov	count=1
arg	given in testfunc ||| testfunc	count=1
function	default format for this ||| to default	count=1
module	with estimation of number ||| stats	count=1
arg	[arg_1] sequence ||| [arg_2] [arg_1]	count=5
class	wald-test ||| model	count=1
arg	ma parameters ||| ma	count=1
function	a monotone ||| monotone	count=2
function	string padded ||| pad	count=1
arg	data as ||| endog exog groups time	count=2
module	than the ||| tsa	count=1
arg	power of a one ||| power	count=1
module	and returns ||| emplike	count=1
function	an exog ||| exog	count=1
arg	[arg_1] observed ||| [arg_2] [arg_1]	count=3
function	position of requested equation ||| eq index	count=1
arg	p just a placeholder ||| p	count=1
function	needed ||| state	count=1
function	test to test ||| test	count=2
function	lambda ||| lambda	count=1
arg	linear hypothesis ||| cov_p scale	count=1
function	out ||| out	count=1
module	mean ||| sandbox distributions	count=1
arg	__repr__() <==> ||| _repr_running	count=1
arg	the group are different ||| group exact	count=1
arg	key and return the ||| key default	count=1
function	em step for autoregressive ||| em autoregressive	count=1
class	compute a ||| likelihood model	count=1
arg	assume symmetric [arg] around ||| [arg]	count=1
arg	[arg] around ||| [arg]	count=1
module_class	return none ||| iolib simple table	count=2
arg	mean error parameters ||| x1 x2 axis	count=1
module	the parameters ||| genmod	count=1
function	[function] just ||| [function]	count=2
function	compute ||| compute	count=8
function	[function_1] names list ||| [function_2] [function_1]	count=3
arg	on canonical correlation coefficient ||| x1 x2 demean	count=1
function	autocovariance ||| acovf	count=1
module	of freedom correction ||| tsa vector_ar	count=1
function	the difference between ||| ci limits	count=1
arg	calculate ||| indicators	count=2
function	based ||| ztost	count=1
arg	the given groups ||| groups	count=1
function	linear hypothesis ||| wald	count=1
function_arg	solve a [arg_2] ||| [function_1] [arg_2]	count=1
function	a ||| from	count=2
function	the value effect ||| conf int	count=1
function	ryan procedures ||| homogeneous subsets	count=1
class	and model this reduces ||| likelihood model	count=1
arg	series of columns according ||| ar_coefs	count=1
function	marginal effects by the ||| margeff cov params	count=1
arg	of data ||| data	count=1
function	info needed for ||| kalman state	count=1
function	returns a ||| from str	count=1
class	weighted correlation with ||| descr stats w	count=1
class	results ||| discrete results	count=2
class	-> [class] ||| [class]	count=1
module	mean variance for distributions ||| distributions	count=2
module	scipy stats ||| sandbox stats	count=1
arg	a wald-test for a ||| cov_p scale	count=1
arg	transform for ||| x transform	count=1
function	returns the correlation ||| norm corr	count=1
function	a list of datetime ||| str	count=1
arg	[arg_1] and ma ||| [arg_2] [arg_1]	count=1
function	of the measurement ||| measurement	count=1
arg	with the true_params ||| true_params	count=2
module_class	return [class_2] ||| [module_1] [class_2]	count=8
module	returns the ||| genmod	count=2
class	get factor decomposition ||| factor model univariate	count=2
arg	[arg_1] y ||| [arg_2] [arg_1]	count=5
arg	upper or lower form ||| b lower	count=1
class	summary ||| factor model univariate	count=1
function_arg	each observation [arg_2] ||| [arg_2] [function_1]	count=2
class	the ||| gmmresults	count=1
arg	enthresh [arg_2] ||| [arg_1] [arg_2]	count=2
function	se of ||| compute se	count=1
class	and ||| filter	count=1
function	freedom used ||| df model	count=1
function	error of the ||| get	count=1
arg	of a specific key ||| key base_index	count=2
module	regression for ||| regression	count=1
module_class	with factor-structured coefficients ||| stats factored psdmatrix	count=1
function	of marginal effects ||| params	count=1
function	regression ||| regress	count=1
arg	arrays ||| nlags qstat	count=1
arg	the delta method ||| params exog	count=1
function	generate ||| calc wdesign mat	count=2
module	the parameter estimates ||| sandbox regression	count=1
arg	for each observation ||| obs	count=1
arg	statistics ||| min_uncensored	count=1
module	date ||| tsa	count=1
class	variance function ||| variance function	count=1
function_arg	create a [arg_2] ||| [function_1] [arg_2]	count=1
arg	system matrices and ||| arma_model	count=1
function	determine the confidence intervals ||| ci limits	count=1
arg	variance-covariance of marginal ||| model params exog cov_params	count=1
function_arg	kurtosis [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] given moments ||| [function_2] [function_1]	count=1
arg	index or ||| end index silent	count=1
arg	of the ||| nobs alpha	count=2
class	hypothesized ||| desc stat uv	count=1
function_arg	[function_1] divided by ||| [function_1] power effect_size nobs [arg_2]	count=3
arg	n ||| n	count=1
function	csv format ||| csv	count=1
class	collect required ||| olsinfluence	count=1
module	covariance with degrees ||| tsa vector_ar	count=1
class	or [class] ||| [class]	count=1
arg	studentized resids vs leverage ||| results external alpha criterion	count=1
arg	impulse response function ||| steps impulse orthogonalized	count=1
module	selection ||| vector_ar	count=1
function	[function_1] autocovariances ||| [function_1] [function_2]	count=2
function	forecast covariance matrices ||| forecast cov steps	count=1
function	variance inflation factor ||| variance inflation factor	count=3
function_arg	plot regression [arg_2] ||| [function_1] [arg_2]	count=2
class	other ||| kalman	count=1
function	plot the ||| plot	count=5
arg	main results ||| float_format	count=1
arg	freq ||| freq	count=1
function	and other info needed ||| init kalman	count=1
arg	lags on ||| lags	count=1
function	score gradient vector of ||| score	count=1
arg	to generate ||| mod params	count=1
function	limit for ||| limit	count=1
function	multinomial ||| multinomial	count=1
function_arg	[function_1] assumes ||| [arg_2] [function_1]	count=1
function	bds test ||| bds	count=1
function	linear ||| test	count=1
function	[function_1] observations within ||| [function_2] [function_1]	count=2
function	effects ||| effects	count=1
function	datetime ||| dates	count=1
function	html ||| html	count=1
arg	line to a plot ||| ax lines_idx frac	count=1
function	compute multivariate ||| compute multivariate	count=2
function	squares statistic and ||| squares	count=1
class	[class] dictionary with ||| [class]	count=1
arg	[arg_1] : ||| [arg_2] [arg_1]	count=1
function	[function_1] leave-one-out estimator ||| [function_1] [function_2]	count=3
arg	[arg] unit root ||| x maxlag [arg]	count=1
module	exponential family ||| genmod families	count=2
class	values for a single ||| micedata	count=1
module	anes96 ||| anes96	count=1
function	[function_1] computed using ||| [function_2] [function_1]	count=1
function	degrees of freedom ||| df	count=1
function	helper function to get ||| get	count=1
arg	lags [arg_2] ||| [arg_2] [arg_1]	count=2
arg	the fitted mean response ||| endog mu freq_weights scale	count=4
function	a test ||| test	count=1
function	the model [function] an (nobs ||| [function]	count=1
module	parameters used [module] likelihood ||| [module]	count=1
module	the copper ||| copper	count=1
class	factor decomposition of ||| factor model univariate	count=1
function	cumulative ||| cum	count=1
arg	method [arg_2] ||| [arg_2] [arg_1]	count=1
module	function parameters ||| genmod families	count=3
class	a wald-test ||| model	count=1
module	distribution int f ||| sandbox distributions	count=1
function_arg	of arma [arg_2] ||| [function_1] acovf [arg_2]	count=2
module	the ||| duration	count=3
arg	is for ||| x d	count=1
arg	updates ||| transformed complex_step	count=1
function	covariance matrix for the ||| covariance matrix	count=1
module	and other info ||| tsa	count=1
arg	summarize the regression ||| yname xname title alpha	count=1
arg	groups ||| groups	count=1
module	other info needed for ||| tsa	count=1
function_arg	on [arg_2] ||| [function_1] [arg_2]	count=2
function	get ||| get	count=9
function	difference between the ||| ci limits mu	count=1
function	all pairs this ||| pairs unbalanced	count=1
module	representation of ||| tsa	count=1
function	used in the fit ||| fit	count=1
module	matrix [module] ||| [module]	count=2
class	an ar p process ||| ar	count=3
arg	lags on the ||| lags	count=1
function	response [function_2] ||| [function_2] [function_1]	count=2
arg	lags on the ||| x ax lags alpha	count=1
arg	of marginal effects by ||| params exog	count=1
function	than one ||| than one	count=1
function_arg	determinant [arg_2] ||| [function_1] [arg_2]	count=1
function	datetime ||| datetime	count=1
arg	x returns the ||| x	count=2
function_arg	[function_1] with respect ||| [function_1] sqrt params [arg_2]	count=1
function	sample of [function_2] ||| [function_2] [function_1]	count=1
function	generate latex ||| as latex	count=2
module	of ||| graphics	count=2
module	options ||| sandbox	count=1
arg	info needed for the ||| params	count=1
function_arg	[function_1] params for ||| [function_1] obs [arg_2]	count=1
arg	is a [arg_2] ||| [arg_2] [arg_1]	count=1
module	returns the ||| regression	count=1
function	calculate recursive ||| recursive olsresiduals	count=1
function_arg	[function_1] with respect ||| [arg_2] [function_1]	count=1
arg	for a given family ||| maxiter method tol	count=1
function	a confidence interval ||| ci	count=1
function	strings and ||| get	count=1
class	effects variables ||| mixed lm	count=1
function	matrix ||| calc wdesign mat	count=2
arg	info needed for ||| cls	count=1
arg	matrix parameters ||| params	count=2
class	factor instance ||| factor	count=1
function	product kernel ||| kernel	count=1
class	lagorder ||| varresults	count=1
function	clayton or ||| clayton	count=1
module	in the ||| nonparametric	count=1
module	a list of datetime ||| base	count=1
function	[function_1] correlation matrix ||| [function_1] [function_2]	count=1
arg	marginal effects ||| model	count=1
arg	plot ||| xdata	count=1
arg	probability p sample ||| p	count=1
class	fftconvolve3 with arma ||| arma	count=1
module	helper function to calculate ||| tsa	count=1
arg	marginal ||| model params exog	count=1
arg	of data confidence interval ||| alpha alternative	count=1
function	hamilton ||| cy hamilton	count=1
function	rectangle [function] distribution ||| prob [function]	count=1
class	the logistic ||| logit	count=1
function	difference between ||| ci limits	count=1
function	strings and ||| from str	count=1
module	the parameter ||| duration	count=1
class	box-cox ||| box cox	count=4
class	needed ||| kalman filter	count=2
arg	compute a ||| cov_p	count=1
arg	computes the variance-covariance ||| cov_params	count=1
arg	mu ||| mu initscale	count=1
arg	against a set ||| exog_idx	count=1
arg	are different from ||| exact	count=1
module	fit ols regression for ||| sandbox regression	count=1
module	test for no ||| sandbox stats	count=1
arg	confidence ||| alpha	count=4
function_arg	[function_1] estimator ||| [arg_2] [function_1]	count=6
function	default [function_2] ||| [function_2] [function_1]	count=8
arg	autocorrelation robust ||| results nlags	count=1
function	factor is a ||| factor	count=1
arg	assume symmetric [arg] ||| [arg]	count=1
class	normal ||| custom kernel	count=1
function_arg	latex tabular [arg_2] ||| [function_1] [arg_2]	count=1
module_class	manual on box-cox ||| base box cox	count=1
arg	helper function to calculate ||| x	count=1
arg	ddt ||| ddt	count=3
class	loglikelihood ||| varresults	count=1
function	list of datetime ||| str	count=1
arg	and expected data ||| expected	count=1
function	info needed for ||| init kalman state	count=1
arg	inverse covariance matrix ||| mod params	count=1
module	function ||| families	count=1
module_class	[module_1] g' ||| [class_2] [module_1]	count=1
arg	assumes we have a ||| groupidx weights_func	count=1
arg	a ||| alpha method	count=1
class	parameter ||| phreg results	count=1
arg	[arg] based ||| [arg] mom2	count=4
arg	x by time ||| x index	count=1
function	the orders of ||| orders	count=1
function	[function_1] a type ||| [function_1] [function_2]	count=1
function	local linear ||| linear	count=2
function	and ||| init kalman state	count=2
module	ipython ||| iolib	count=1
class	sample ||| gof	count=1
arg	k or more ||| x k	count=1
class	ordered ||| ordered	count=2
class	of model ||| model	count=3
class	identical means ||| means	count=1
class	means parameters ||| compare means	count=1
function	transform ||| transform params	count=1
arg	a regression that goes ||| b0_vals param_nums method stochastic_exog	count=1
function	local fdr ||| local fdr	count=2
module	parameter given ||| regression	count=1
module_class	[module_1] a 2x2 ||| [module_1] [class_2]	count=2
class	weights for a hypothesis ||| desc stat uv	count=1
function	conditional covariance matrix ||| cov	count=1
arg	create ||| k_vars	count=1
function	save the ||| save	count=1
class	clip logistic values to ||| logit	count=1
function_arg	mean of [arg_2] ||| [arg_2] [function_1]	count=3
arg	lags ||| lags	count=3
module	returns a ||| tsa base	count=1
class	the power ||| power	count=3
function	set the [function_2] ||| [function_2] [function_1]	count=1
function	survival function ||| kernel survfunc	count=1
function	other ||| init	count=1
class	noise covariance ||| varresults	count=1
arg	current value [arg] ||| [arg]	count=1
class	including ||| varresults	count=1
module	a list of ||| tsa	count=1
function	autocovariances ||| acovf	count=1
function	marginal survival function ||| kernel survfunc	count=1
function	function for each stratum ||| function	count=1
function	integer group indices ||| indices	count=1
arg	method ||| model params	count=1
function	discrete ||| solve discrete	count=1
arg	for the debiasing parameters ||| mod params alpha l1_wt	count=1
arg	a wald-test for a ||| r_matrix cov_p	count=1
module	observations the regression ||| regression	count=1
arg	range distribution having v ||| v	count=1
class	instance for ||| likelihood	count=1
function	info needed for ||| init	count=1
function	[function_1] effects for ||| [function_1] [function_2]	count=2
function	the cumulative distribution function ||| cdf	count=1
function	the random effects ||| random effects	count=2
function	[function_1] lowess ||| [function_1] [function_2]	count=1
function_arg	predict for [arg_2] ||| [arg_2] [function_1]	count=2
arg	plots lags on ||| x ax lags alpha	count=1
class	for andrew's wave ||| andrew wave	count=2
module	[module] based on ||| [module]	count=1
function_arg	[function_1] graphical display ||| [arg_2] [function_1]	count=1
class	get [class] influence with ||| [class]	count=1
function	nipals implementation [function_2] ||| [function_2] using [function_1]	count=3
arg	plot of each dataset ||| ax	count=2
function	the slices ||| get slices	count=1
function	the log [function_2] ||| [function_1] [function_2]	count=2
arg	array ||| array	count=1
module	time series with ||| stats	count=2
function	sum of squares along ||| sumofsq	count=1
module	of [module_2] ||| [module_1] [module_2]	count=6
function	calculates the baseline ||| baseline	count=1
module	distribution int ||| distributions	count=1
function_arg	[function_1] [arg_2] ||| [function_1] ar x [arg_2]	count=5
class	results of the ||| results	count=1
class	parameters including the ||| varresults	count=1
class	wald-test for ||| model results	count=1
function	the mutual ||| mutualinfo	count=1
function_arg	a regularized [arg_2] ||| [arg_2] [function_1]	count=1
arg	the components enthresh ||| vals enthresh	count=1
function	return an instance of ||| get	count=1
function	generate html ||| as html	count=2
class	[class] uses ||| all pairs [class]	count=3
class	autocovariance from [class] ||| [class]	count=1
function_arg	fit [arg_2] ||| [function_1] start_params method maxiter [arg_2]	count=1
class	the model ||| discrete model	count=1
arg	[arg_1] reweighted ||| start_params [arg_1] [arg_2]	count=1
module	used in ||| tsa	count=3
class	-> [class] dictionary ||| [class]	count=1
class	equal to ||| descr stats w	count=1
module	degrees of freedom correction ||| vector_ar	count=1
function	[function_1] partial regression ||| [function_1] [function_2]	count=1
arg	for the [arg] of ||| alternative usevar [arg]	count=1
function	final statistics to ||| rsquare and ic	count=1
arg	shape scale for ||| shape scale	count=2
function	[function_1] parameter component ||| [function_1] [function_2]	count=1
class	computes the significance value ||| coef	count=1
function	the ceres ||| ceres	count=1
function_arg	fit [arg_2] ||| [function_1] [arg_2]	count=2
arg	error ||| x1 x2 ddof axis	count=1
function	point weighted by hazard ||| weighted	count=1
function_arg	[function_1] columns according ||| [arg_2] [function_1]	count=1
function	ascii ||| text	count=1
function_arg	log-likelihood gradient [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] probability of ||| [function_1] [function_2]	count=1
class	arima p d ||| arima	count=1
arg	deepcopy in contrast ||| tables keep_headers	count=1
class	leave-one-label_out cross validation provides ||| leave one label out	count=1
function_arg	estimation using [arg_2] ||| [arg_2] [function_1]	count=1
function	ttest of [function_2] ||| [function_2] [function_1]	count=1
function	of the mean ||| mean	count=1
class	a wald-test for ||| likelihood model results	count=1
arg	returns 1d ||| epsilon args	count=1
function	solve for any ||| solve power	count=5
arg	parameters ||| params exog exposure	count=1
arg	throws away the intermediate ||| x1 x2 alternative usevar	count=1
arg	endog resid [arg_2] ||| [arg_1] [arg_2]	count=1
arg	2d a can be ||| a	count=1
class	svar ||| svarprocess	count=1
function	returns a list of ||| dates	count=1
module	transform of the ||| sandbox tsa	count=1
arg	an index or ||| start end index	count=1
function	sequence of ||| from	count=1
function	binomial tost [function_2] ||| [function_2] [function_1]	count=5
class	squares ||| squares	count=2
function	indicators for a ||| indicators	count=1
arg	parameter of the ||| nobs alpha	count=2
function	datetime ||| dates from str	count=1
module	of datetime ||| base	count=1
arg	variance-covariance ||| cov_params	count=1
class	model to ||| additive model	count=1
arg	parameters by matching ||| params	count=1
arg	a probability p ||| p	count=1
class	transform ||| dynamic factor	count=1
arg	non- equivalence of ||| low upp	count=1
function	returns the standard errors ||| bse	count=1
function	logarithm of probability ||| logpdf	count=1
arg	on order statistics ||| min_uncensored	count=1
arg	returns 1d array parameters ||| epsilon	count=1
module	info needed for ||| kalmanf	count=1
function	test for movorder ||| check movorder	count=1
module	a table for ||| stats	count=2
function	information ||| information	count=1
function	[function_1] ratio for ||| [function_2] [function_1]	count=2
arg	returns true if data ||| data	count=1
function_arg	[function_1] whether restricted ||| [function_1] [arg_2]	count=8
function	search for ||| search	count=1
function	and returns ||| dates from str	count=1
arg	[arg_1] ma ||| [arg_2] [arg_1]	count=7
function	save the object ||| save	count=1
module	parameters of distribution function ||| distributions	count=2
module	ar representation of ||| tsa	count=1
class	conditional ||| conditional	count=2
module	returns the profile log ||| emplike	count=1
arg	x y ||| x y	count=1
function	method to compute ||| compute using	count=3
module	approximate inverse ||| base	count=1
module	or ||| sandbox	count=2
function_arg	autocorrelation function [arg_2] ||| [function_1] [arg_2]	count=2
function	autocorrelation function ||| acf	count=2
arg	estimate with confidence ||| alpha	count=1
arg	and optionally the scatter ||| scatter ax	count=1
arg	transform constrained parameters ||| constrained	count=4
arg	iterating over ||| as_dict	count=1
function	the variance inflation factor ||| variance inflation factor	count=1
function_arg	fit model ||| fit constrained model	count=1
arg	standard deviation parameters ||| std	count=1
class	for ||| likelihood model results	count=2
function	labels [function_2] ||| [function_2] [function_1]	count=1
function	[function] a ||| [function]	count=4
class	info needed ||| kalman filter	count=1
function	return [function_2] ||| [function_1] [function_2]	count=1
arg	whether variance is the ||| x	count=1
function	the errors of ||| geterrors	count=1
function	parser ||| parser	count=1
arg	new time series following ||| nsimulations measurement_shocks state_shocks initial_state	count=1
module	in the regression ||| nonparametric	count=1
function	for out of sample ||| predict out of sample	count=1
function	all pairs ||| allpairs	count=1
function_arg	filter [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] matrix for ||| [function_2] [function_1]	count=3
function	prediction and ||| get prediction	count=4
arg	[arg_1] scale for ||| [arg_2] [arg_1]	count=2
function	sets the slices ||| get slices	count=1
arg	against one regressor ||| results exog_idx	count=1
class	g' ||| link	count=1
arg	info needed for ||| params	count=1
function	to generate the ||| mat	count=1
class	arma model ||| arma	count=2
function	split the given ||| split rect	count=1
arg	plots lags on the ||| ax lags alpha	count=1
function	the observation ||| obs	count=1
function	return the model ||| get	count=1
function	[function_1] odds ratio ||| [function_2] [function_1]	count=2
arg	x d2 ||| d2	count=1
function	hierarchical way given ||| hierarchical	count=1
function	[function_1] joblib ||| [function_1] [function_2] data_generator fit_kwds parallel_backend	count=1
arg	on [arg] ||| a b [arg]	count=1
class	the variance [class_2] ||| [class_2] [class_1]	count=1
function_arg	from [arg_2] ||| [function_1] coefficients coefficients error_variance [arg_2]	count=1
function	get the location of ||| get prediction	count=1
function	stata's default format ||| to default stata	count=1
arg	smoothing estimate with confidence ||| x alpha	count=1
function_arg	add lowess [arg_2] ||| [function_1] [arg_2]	count=1
function	return critical ||| get	count=2
arg	error bands ||| orth repl signif seed	count=1
module	return distribution of an ||| sandbox distributions	count=1
function	[function_1] tost ||| [function_2] [function_1]	count=1
function	odds ||| odds	count=3
function	generate ||| as	count=2
module	with one ||| stats	count=1
arg	in the data ||| data	count=2
function_arg	gradient for [arg_2] ||| [arg_2] [function_1]	count=1
function	svd method to ||| using svd	count=2
arg	x12path ||| x12path	count=1
function	[function_1] chisquare test ||| [function_1] [function_2]	count=1
function	draw [function] vector from ||| simulated [function]	count=1
arg	with respect to ||| params offset_exposure	count=1
module	specification test for additional ||| stats	count=1
module	with ||| regression	count=1
function	from the ||| res	count=1
class	constraint ||| constraint	count=1
function	[function_1] the correlation ||| [function_2] [function_1]	count=1
module	with one confidence ||| stats	count=1
arg	product intersection ||| prefix sep return_labels	count=1
function	roots of ||| arroots	count=1
function	lfilter ||| miso lfilter	count=1
arg	function plots lags ||| lags	count=1
function	seasonal ||| seasonal	count=2
arg	& ||| y x beta	count=1
module_class	[module_1] [class_2] transform ||| [module_1] negative [class_2] inverse deriv z	count=1
class	of the power ||| power	count=1
function_arg	[function_1] labels on ||| [function_1] ax data [arg_2]	count=1
arg	1d ||| x unbiased demean fft	count=1
function	parameters note ||| re	count=1
arg	from a ||| data	count=1
module	of white noise ||| tsa	count=1
arg	random effects to obtain ||| group_ix	count=1
arg	for the provided exog ||| exog	count=1
function	results [function_2] ||| [function_2] [function_1]	count=4
arg	against one regressor ||| results exog_idx y_true ax	count=1
arg	[arg_1] freedom v ||| [arg_2] [arg_1]	count=2
function	to generate the ||| wdesign	count=1
function_arg	arma [arg_2] ||| [function_1] pacf [arg_2]	count=1
function	for lagorder selection ||| info	count=1
function_arg	from arrays [arg_2] ||| [function_1] y x [arg_2]	count=1
arg	plot ||| ax	count=5
class	including the ||| varresults	count=1
function	to the distribution of ||| distribution	count=1
function	lfilter to ||| miso lfilter	count=1
function_arg	test [arg_2] ||| [function_1] heteroskedasticity [arg_2]	count=1
arg	process parameters ||| ar ma nsample sigma	count=1
class	white ||| varresults	count=1
function	sorted [function] helper function ||| [function]	count=1
function	f [function_2] ||| [function_1] [function_2]	count=1
function	generate the ||| calc	count=1
class	var p loglikelihood ||| varresults	count=1
function	proportions ||| proportions	count=3
module	columns [module] zeros can ||| [module]	count=1
module	of date ||| tsa base	count=1
class	compute a ||| results	count=1
module	for distributions ||| sandbox distributions	count=2
arg	is [arg_2] ||| [arg_1] [arg_2]	count=1
arg	try ||| float_format title	count=1
module	computes ||| discrete	count=1
function	autocovariance function of ||| acovf	count=1
arg	optionally the scatter of ||| scatter	count=1
function_arg	[function_1] [arg_2] ||| [function_1] periodogram ar ma [arg_2]	count=4
module	unit ||| sandbox panel	count=1
arg	process ||| ar ma	count=1
function	subset ||| compute subset	count=2
module	for ||| tsa vector_ar	count=2
arg	other ||| cls params	count=1
class	a hypothesis ||| stat uv	count=1
function	hurvich criteria ||| hurvich	count=1
arg	plots studentized ||| results external	count=1
module	distributed test statistic ||| stats	count=1
function	turns a sequence of ||| dates from range	count=1
module	white noise ||| tsa	count=1
arg	matrices with singular values ||| order k_endog	count=2
function	partial autocorrelations [function_2] ||| [function_2] [function_1]	count=1
arg	given ||| maxiter	count=1
function	the test statistic ||| compute test stat	count=1
function_arg	autoregressive [arg_2] ||| [function_1] [arg_2]	count=1
module	coefficients as panel ||| vector_ar	count=1
class	and other info ||| kalman	count=1
function	solve a linear system ||| solve	count=2
function	[function_1] a normal ||| [function_2] [function_1]	count=2
arg	delta method ||| model	count=1
arg	with singular values ||| order k_endog	count=1
function	of chisquare statistic ||| chisquare	count=1
function	flexible grid plots ||| irf grid plot	count=2
class	computes ||| coef c	count=1
arg	whether variance is ||| y x	count=1
function	summary table of regression ||| summary	count=1
function	all pairs this is ||| pairs	count=1
function	estimate the ||| fit	count=2
function	[function_1] [function_2] ||| [function_1] params [function_2]	count=3
class	and previous ||| autoregression	count=1
function	provides ||| find nfact	count=1
class	to the domain ||| ortho poly	count=1
arg	p just ||| p	count=1
arg	x ||| x order method df	count=1
function	stata's [function_2] ||| [function_2] [function_1]	count=10
function	control performs ||| pairscontrol	count=1
class	the ||| multinomial results	count=1
function	a linear ||| ols	count=1
function	coefficients of [function_2] ||| [function_1] [function_2]	count=2
function	no autocorrelation ||| acorr	count=1
class	model this reduces the ||| model	count=1
function_arg	criterion [arg_2] ||| [function_1] [arg_2]	count=8
arg	marginal ||| params exog	count=1
function_arg	[function_1] polynomial roots ||| [function_1] [arg_2]	count=3
arg	the number [arg] that ||| [arg]	count=1
arg	the variance/covariance ||| r_matrix column scale cov_p	count=1
function	[function] from ||| simulated [function]	count=5
module	unconditional maximum likelihood of ||| tsa	count=1
function	correlation ||| correlation	count=2
function	to control [function_2] ||| [function_2] [function_1]	count=2
arg	maps numpy dtype ||| dtype	count=1
arg	one sample ||| value nobs	count=1
function	group [function_2] ||| [function_2] [function_1]	count=2
function_arg	requested equation [arg_2] ||| [function_1] [arg_2]	count=1
function	test to test ||| lm test	count=1
function	lowess line to ||| lowess	count=1
class	of the ||| gmmresults	count=1
arg	orthogonal polynomial ||| polybase order limits	count=1
function	update ||| update	count=9
function	standard errors of ||| bse	count=3
function	other info ||| kalman	count=1
module	series with consecutive equal ||| stats	count=1
module	the rhs matrix ||| tsa	count=1
function	version of qsturng ||| qsturng	count=1
arg	in-sample ||| start end dynamic index	count=4
arg	the name in tmp_arr ||| tmp_arr offset	count=1
function	sequence of date strings ||| dates from	count=1
function	[function_1] errors ||| [function_1] [function_2]	count=2
class	sample ||| gof chisquare ind power	count=1
module	test for one proportion ||| stats	count=1
class	tukey's [class_2] ||| [class_1] [class_2]	count=5
arg	x ||| x order method	count=1
module	of date strings ||| tsa	count=1
arg	generate the ||| params	count=1
arg	-2 x log-likelihood and ||| return_weights	count=2
arg	series simply ||| series	count=1
arg	covariance ||| mod	count=1
function	limit ||| limit index	count=1
module	for t-test the keywords ||| stats	count=1
function_arg	[function_1] [arg_2] ||| [function_1] factor [arg_2]	count=3
arg	in-sample ||| start end probabilities	count=1
module	date strings and returns ||| tsa base	count=1
arg	residuals conditional expectation partial ||| results focus_exog frac cond_means	count=1
function	inverse covariance ||| mat	count=1
function	z-test ||| ind	count=1
class	model ||| additive model	count=1
function_arg	lowess line [arg_2] ||| [arg_2] [function_1]	count=1
arg	and a dataframe ||| dataframe	count=1
arg	if [arg] proper ||| [arg]	count=1
arg	[arg_1] line ||| [arg_1] [arg_2]	count=1
function	[function] of ||| get [function]	count=1
arg	of x by time ||| x index counts	count=1
function	for observations ||| loglikeobs	count=1
arg	computes the ||| model params	count=1
class	of the parameter ||| results	count=1
arg	computes fitted values and ||| exog_predict exog_nonparametric_predict	count=1
class	a model ||| model	count=1
function	matrix equations of ||| matrix	count=1
function	p ||| llf	count=1
function	[function_1] simulation ||| [function_2] [function_1]	count=3
module	the [module] ||| [module]	count=1
function	std and [function_2] ||| [function_1] [function_2]	count=4
class	table in ||| table	count=1
module	to the distribution location ||| sandbox distributions	count=2
function	null hypothesis that mean ||| mean	count=1
module_class	and [class_2] ||| [module_1] [class_2]	count=2
function	[function_1] [function_2] ||| [function_1] [function_2] data_generator fit_kwds parallel_backend	count=2
function_arg	[function_1] parameter ||| [arg_2] [function_1]	count=3
function	from packed parameter vector ||| from packed	count=1
arg	the delta ||| params exog	count=1
function	search ||| search	count=1
arg	the orthogonal ||| polybase order limits	count=1
arg	1d parameters ||| x y unbiased demean	count=1
function	generate the approximate ||| wdesign mat	count=1
function	that mean is ||| mean	count=1
function	determine envelope [function_2] ||| [function_2] [function_1]	count=2
function	linear filtering via convolution ||| convolution	count=1
function	numerical hessian ||| hessian	count=2
module	for the ||| tsa kalmanf	count=1
arg	f returns ||| x f epsilon	count=1
module	exponential [module_2] ||| [module_2] [module_1]	count=3
arg	stubs at column loc ||| loc stubs	count=1
function_arg	the location [arg_2] ||| [function_1] key [arg_2]	count=2
arg	calculate the ||| effect_size	count=8
arg	= x d2 ||| d2	count=1
function	likelihood ||| likelihood	count=2
module	a list ||| base	count=1
arg	to ||| n	count=3
class	float [class] log-likelihood function ||| [class]	count=1
function	lowess line to a ||| lowess	count=1
function	hessian ||| hessian	count=13
function	marginal effects by ||| cov	count=1
function	the difference between the ||| ci limits	count=1
function	[function_1] packed ||| [function_1] [function_2]	count=1
module	degrees of ||| tsa	count=1
arg	transform constrained parameters ||| constrained error_variance	count=1
arg	a row into ||| idx row datatype	count=1
module	to generate the ||| base	count=1
arg	upper left corner of ||| missing_rows	count=1
function	interval [function_2] ||| [function_2] [function_1]	count=16
arg	marginal effects by the ||| params	count=1
class	significance value for ||| test reg coef c	count=1
function	marginal effects by the ||| cov params	count=1
function	of date ||| dates	count=1
class	space representation ||| mlemodel	count=1
module_class	for comparison of ||| sandbox stats tukey	count=1
arg	y normed=true ||| y normed detrend	count=1
arg	mosaic given the data ||| data	count=1
function	variance of the residuals ||| resid var	count=1
class	linear ||| tlinear	count=1
arg	plot ||| ax lines_idx	count=1
function	[function_1] of squares ||| [function_2] [function_1]	count=1
arg	diag [arg] * pinv ||| results [arg]	count=1
module	distribution location and ||| distributions	count=2
function	local [function_2] ||| [function_1] [function_2]	count=2
module	of squares along first ||| tsa	count=1
arg	to value ||| value	count=1
function_arg	for quantiles [arg_2] ||| [function_1] [arg_2]	count=1
function	the covariance ||| covariance	count=1
function	the most ||| most	count=1
function	confidence interval ||| confint	count=2
arg	iteratively reweighted ||| maxiter tol scale	count=1
arg	gets the ||| results true_params	count=2
arg	convolution to ||| x	count=1
module_class	manual on [class_2] ||| [module_1] [class_2]	count=8
function	[function_1] parameters for ||| [function_1] [function_2]	count=6
function	an index ||| index	count=1
function	[function_1] decomposition using ||| [function_1] [function_2]	count=1
function	unconstrained parameters used by ||| untransform params	count=1
function	and other info ||| kalman state	count=1
module	model returns ||| regression	count=1
function_arg	[function_1] for ||| [arg_2] [function_1]	count=1
function	other info needed for ||| kalman state	count=1
class	the parameter ||| phreg results	count=1
arg	endog with respect ||| params offset_exposure	count=1
class	p 371 in [8] ||| coef c	count=1
module	the ||| tsa kalmanf	count=4
arg	effects ||| params	count=1
class	wave ||| wave	count=3
arg	of squares along first ||| x	count=1
arg	the delta ||| model	count=1
class	structural ||| svarresults	count=1
function	measure of dispersion ||| compute dispersion	count=2
arg	[arg_1] returns ||| [arg_2] [arg_1]	count=6
function	copy ||| copy	count=2
arg	apply ||| smoother_output smooth_method results run_filter	count=1
function	split ||| split	count=2
arg	point x ||| x	count=2
class	fitted parameters ||| geeresults	count=1
function	using joblib parameters ||| fit joblib	count=1
class	t-test ||| ttest	count=1
class	with degrees of freedom ||| varresults	count=1
module	for minimum distance ||| stats	count=1
function	string the ||| as	count=1
arg	k or more ||| k n	count=1
arg	interval for the ||| sig upper_bound lower_bound	count=1
module	compute var p loglikelihood ||| vector_ar	count=1
function	using [function_2] ||| [function_2] [function_1]	count=5
function_arg	ticks [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] tests ||| [function_2] [function_1]	count=1
function	and ||| kalman state	count=2
arg	endog resid mu ||| endog	count=1
arg	standard deviation ||| std	count=1
function	the model [function] an ||| [function]	count=1
class	of linear ||| tlinear	count=1
function	test if ||| test	count=1
arg	covariance arrays in preparation ||| variance complex_step	count=1
function_arg	at [arg_2] ||| [function_1] [arg_2]	count=1
arg	is the same ||| y x idx	count=1
function	sample from a mixture ||| mixture	count=1
arg	to ||| params	count=1
arg	assume symmetric [arg] around mean ||| [arg]	count=1
function_arg	difference a [arg_2] ||| [function_1] [arg_2]	count=5
arg	for a given ||| maxiter method tol	count=2
class	return ||| mixed lmparams	count=1
function	[function_1] of random ||| [function_2] [function_1]	count=1
arg	dummy matrix [arg_2] ||| [arg_2] [arg_1]	count=4
module	exponential ||| families	count=1
arg	r2_adj ||| skip_crossval cv_iter	count=1
function	marginal effects of the ||| margeff	count=1
arg	v degrees ||| v	count=2
function	extend ||| extend	count=1
arg	an arima ||| order start_params method	count=1
function	[function_1] simulation output ||| [function_2] [function_1]	count=3
module	covariance ||| sandbox panel	count=1
class	solve ||| ind power	count=1
arg	embedding dimensions 1 max_dim ||| max_dim	count=1
arg	apply function to ||| function level	count=2
function	missing data ||| missing	count=1
arg	d1 = ||| d1	count=1
arg	key and return ||| key default	count=1
module	lagorder selection ||| tsa vector_ar	count=1
function	equicorrelated [function] ||| [function]	count=1
function	needed for the ||| kalman state	count=1
function	[function_1] [function_2] convention by default ||| filter [function_1] [function_2] alternate_timing	count=1
class	of model returns ||| model	count=2
function	for ||| stats	count=1
arg	of a weighted empirical ||| eta est_vect weights nobs	count=1
function	the correlations on vertical ||| acf	count=1
arg	autocorrelation ||| results nlags	count=1
class	for tukey's biweight estimator ||| tukey biweight	count=1
function	collier ||| collier	count=1
function	computing marginal effects ||| derivative exog	count=1
arg	during ||| tmp_result mu	count=1
class	compute a wald-test ||| likelihood	count=1
module	of exogenous variables ||| base	count=1
arg	[arg_1] q ||| [arg_2] [arg_1]	count=1
function	the probabilities percetiles of ||| ppplot	count=1
class	required results from ||| olsinfluence	count=1
function	of the residuals ||| resid	count=1
arg	coefficient of variation ||| x bounds window_length scale	count=1
module	return ||| sandbox	count=2
function_arg	squares statistic [arg_2] ||| [arg_2] [function_1]	count=1
arg	dummy matrix ||| dictnames	count=1
function	needed for ||| init kalman	count=1
arg	this is ||| x	count=2
arg	[arg_1] parameters ||| [arg_1] [arg_2]	count=1
module	continuous distribution ||| distributions	count=1
class	decomposition of ||| model univariate	count=1
arg	time selected by r ||| r	count=1
function	confidence interval is ||| density confint	count=1
function	hac for [function_2] ||| [function_2] [function_1]	count=6
function	cooks distance ||| cooks distance	count=2
class	count ||| count	count=1
class	computes ||| reg	count=1
arg	for 1d parameters ||| x y unbiased	count=1
function	string the [function_2] ||| [function_2] [function_1]	count=2
function	of marginal effects by ||| margeff cov	count=1
module	to ||| tools	count=1
module	fevd ||| tsa vector_ar	count=1
class	returns ||| phreg	count=1
module	in ipython ||| iolib	count=1
arg	of ||| params	count=2
function	expanded [function] given ||| [function]	count=1
function	all ||| all one	count=2
class	[class_1] t ||| [class_1] [class_2]	count=3
function	to stata's default format ||| to default stata	count=1
function	date strings ||| from	count=1
arg	function to ||| function	count=2
arg	x * [arg] * pinv ||| results [arg]	count=1
module	in any [module] _2d_ arrays ||| [module]	count=1
function_arg	[function_1] maximum likelihood ||| [arg_2] [function_1]	count=3
class	other info ||| kalman filter	count=1
module	with ||| stats	count=12
arg	x parameters ||| x	count=2
arg	[arg_1] are different ||| [arg_1] [arg_2]	count=9
module	results ||| stats	count=1
function	the errors ||| geterrors	count=1
arg	any model with an ||| fargs	count=1
function	and other ||| kalman	count=1
module	of x given ||| sandbox	count=1
arg	create a mixedlmparams ||| params k_fe k_re use_sqrt	count=1
arg	for any model with ||| start_params fargs	count=1
function	normal ||| bw normal	count=1
class	error of ||| gmmresults	count=2
module	array frequency [module] the reduced ||| [module]	count=1
function	a linear ||| multi ols	count=1
function	convert from sif to ||| to	count=1
module	the hessian i ||| genmod	count=1
arg	a design matrix parameters ||| params exog	count=1
arg	compute ||| r_matrix cov_p scale	count=1
arg	cor_length ||| cor_length	count=1
class	weighted correlation with ||| descr stats	count=1
function_arg	estimate the [arg_2] ||| [arg_2] [function_1]	count=3
function	of the rows ||| rows	count=1
arg	given groups ||| groups	count=1
arg	spaced time periods ||| time nlags	count=1
function	cvxopt solvers [function_2] ||| [function_2] [function_1]	count=1
module	method [module] moment estimator ||| [module]	count=1
function	hazard function for each ||| hazard function	count=1
function	variance of ||| var	count=1
function	by ||| cov	count=1
function	cohn numbers for the ||| cohn numbers	count=1
function	fn ||| fn inverter	count=1
function	the interval ||| interval	count=2
module	parameter ||| sandbox regression	count=2
function	inverse ||| mat	count=1
class	ratio first ||| ratio	count=1
function	generic bivariate extreme value ||| bv ev	count=1
function	[function_1] [function_2] ||| [function_1] equal [function_2]	count=2
arg	x : array-like ||| x	count=1
function	random effects for each ||| random effects	count=1
class	a pickle ||| likelihood model results	count=1
function	[function_1] the residuals ||| [function_2] [function_1]	count=6
arg	function to calculate ||| x	count=1
arg	summary for regression ||| yname xname title	count=1
function	the ceres residuals ||| ceres	count=1
arg	r and degrees of ||| r	count=1
function	the residuals ||| resid	count=2
arg	the nodewise_weightvalue ||| exog nodewise_row idx alpha	count=1
function	crude ||| crude	count=1
function	the test statistic ||| compute test	count=1
module	list of ||| tsa base	count=1
module	for a binomial ||| stats	count=1
arg	against ||| results exog_idx	count=1
function	names for parameters actually ||| names	count=3
arg	a row into a ||| idx row datatype	count=1
arg	specific ||| base_index	count=2
function	[function_1] cumulative hazard ||| [function_1] [function_2]	count=4
class	model row ||| series model	count=1
arg	norm ||| norm axis	count=1
function	compute var p ||| llf	count=1
function_arg	[function_1] bitmask ||| [arg_2] [function_1]	count=7
function	weights ||| weights	count=2
function	to generate the ||| calc wdesign	count=1
function	covariance for ||| cov params	count=1
arg	of signal [arg] at all ||| [arg]	count=1
arg	in-sample prediction ||| start end	count=1
class	log-likelihood ||| negative binomial	count=1
class	smoothing ||| smoothing	count=2
arg	rows [arg] [y x] ||| [arg]	count=1
arg	a polynomial ||| polynomial	count=1
function	[function_1] odds ||| [function_2] [function_1]	count=3
function	[function_1] garch ||| [function_2] [function_1]	count=1
class	wald-test ||| model results	count=2
arg	computes the ||| params	count=1
function	[function_1] data pattern ||| [function_1] [function_2]	count=2
module	the rows or columns ||| statespace	count=2
function	data ||| clear data	count=1
module_class	the covariance ||| genmod cov struct	count=1
arg	reusable function ||| values stderr impcol rescol	count=1
function_arg	[function_1] rank scale_matrix ||| [function_1] transformed shift [arg_2]	count=1
function	the standard errors ||| standard errors	count=2
function	the corresponding detection limit ||| detection limit index	count=1
function	type gof tests ||| gof binning	count=1
arg	in testfunc is ||| testfunc	count=1
module	and ||| tsa kalmanf	count=2
arg	[arg_1] imposed ||| [arg_2] [arg_1]	count=1
arg	a [arg] ||| q r [arg]	count=1
function	variance for ||| var	count=1
arg	key ||| key	count=3
function	centered within each group ||| centered	count=1
module	the full ||| base	count=1
function	[function_1] multiindex dataframe ||| [function_2] [function_1]	count=1
function	variance inflation factor is ||| variance inflation factor	count=1
module	and returns a ||| base	count=1
function	delta ||| cov params	count=2
module	with consecutive ||| stats	count=1
function_arg	[function_1] [arg_2] ||| [function_1] panel results nlags [arg_2]	count=3
arg	the fitted mean response ||| freq_weights	count=4
arg	[arg_1] npcs ||| [arg_1] [arg_2]	count=4
class	for ||| model	count=1
function	anscombe ||| anscombe	count=2
module	of scipy stats ||| stats	count=1
arg	by r this is ||| x d r weights	count=1
function	partial regression for a ||| partregress	count=2
arg	produce a ||| alpha float_format	count=2
function_arg	estimate model [arg_2] ||| [arg_2] [function_1]	count=4
arg	for 1d ||| x unbiased	count=2
arg	estimator of ||| bw	count=3
function	get integer group indices ||| indices	count=1
class	the value of the ||| switching results	count=1
arg	complete equal spaced time ||| x time	count=1
arg	random sample ||| rvs	count=1
module	inverse covariance ||| base	count=1
function	computes the ||| cov	count=1
class	using the kalman ||| kalman	count=1
function	needed for ||| state	count=1
arg	function ||| x	count=1
function	against mean ||| diff mean	count=2
module	matrix [module] a single ||| [module]	count=1
module	current period's regime ||| regime_switching	count=2
class	sample ||| gof chisquare ind	count=1
function	note ||| re	count=1
function	is defined piecewise over ||| subset	count=5
arg	data as binary ||| endog	count=2
function_arg	plot fit [arg_2] ||| [function_1] [arg_2]	count=1
function	return endog ||| get	count=1
arg	system matrices and other ||| params arma_model	count=1
function	info ||| state	count=1
arg	model ||| t beta delta	count=1
class	get factor decomposition of ||| factor model univariate	count=1
function	the baseline cumulative ||| baseline cumulative	count=2
arg	the namespace ||| namespace	count=1
function	to ||| date to	count=1
class	[class] __init__ ||| [class]	count=3
arg	pairwise comparisons with ||| value multitest_method	count=1
module	?) ||| sandbox panel	count=1
arg	just ||| cls y k k_ar	count=1
function_arg	using [arg_2] ||| [arg_2] [function_1]	count=5
function	matrices with singular values ||| multivariate pacf python	count=1
function	by the delta method ||| margeff	count=1
function	means ||| mean	count=1
arg	variation if no ||| bounds window_length scale	count=1
function_arg	[function_1] [arg_2] on off diagonal ||| [function_1] equi k_vars [arg_2]	count=1
class	dta ||| stata reader	count=1
function	information [function_2] ||| [function_1] [function_2]	count=1
function	iqr for each ||| iqr	count=1
arg	plug-in bandwidth with kernel ||| kernel	count=1
class	estimated parameters including ||| varresults	count=1
function	approximate inverse covariance matrix ||| calc wdesign	count=1
function	and returns a ||| from str	count=1
arg	ddt ||| ddt nrepl	count=3
function	a list ||| dates from str	count=1
function	svd [function_2] ||| [function_2] [function_1]	count=6
class	the fitted emirical null ||| null	count=1
function	the correlation ||| corr	count=2
module	returns ||| tsa base	count=2
function_arg	using the [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] the location ||| [function_2] [function_1]	count=1
function	the ||| margeff cov params	count=4
arg	a wald-test for ||| cov_p scale	count=1
arg	[arg] of identical ||| alternative usevar [arg]	count=1
module	whether the ||| tsa	count=2
arg	for 1d ||| y unbiased	count=1
function	each observation ||| loglikeobs	count=2
class	[class] log-likelihood function ||| [class]	count=3
class	monte carlo and save ||| mc	count=2
module_class	link function g' ||| families link	count=1
class	a mixture ||| mixture distribution	count=2
class	plot ||| tukey hsdresults	count=1
function_arg	location of [arg_2] ||| [function_1] [arg_2]	count=2
function	human readable parameter ||| param	count=1
arg	approximate inverse covariance ||| mod params	count=1
class	interval for kernel ||| custom kernel	count=1
function	and ||| from	count=1
arg	generate the approximate ||| params	count=1
arg	of marginal effects ||| model params exog	count=1
function	exogenous variables are discrete ||| discrete	count=1
module	the ||| examples tsa	count=1
function	numbers for the detection ||| numbers	count=1
function	[function_1] than ||| [function_1] [function_2]	count=1
module	collect required ||| stats	count=1
module	info ||| tsa kalmanf	count=2
function	[function_1] of sample ||| [function_2] [function_1]	count=2
function	a plot ||| plot	count=1
arg	the provided exog see ||| exog	count=1
function	other info needed for ||| init kalman	count=1
function	turns a sequence ||| dates from	count=1
function_arg	[function_1] series ||| [function_1] [arg_2]	count=1
arg	at (endog mu ||| endog mu	count=1
function	return the path ||| get	count=1
function	gradient for the ||| grad	count=1
class	a single ||| micedata	count=1
module	distribution parameters ||| distributions	count=2
function	for out [function_2] ||| [function_2] [function_1]	count=3
arg	an array [arg] ||| [arg]	count=6
function_arg	group indices [arg_2] ||| [function_1] [arg_2]	count=1
function	marginal effects by ||| cov params	count=1
function_arg	means [arg_2] ||| [arg_2] [function_1]	count=3
module	string is ||| iolib	count=1
class	degrees ||| varresults	count=1
function	and returns a list ||| from str	count=1
function	random draw [function] vector from ||| simulated [function]	count=1
function	[function_1] nonparametric regression ||| [function_1] [function_2]	count=2
function	using [function_2] ||| [function_1] l1 [function_2]	count=3
function	of the vector ||| vector	count=2
arg	[arg] int ||| [arg]	count=1
arg	the nodewise_weightvalue ||| nodewise_row idx alpha	count=1
function	contains [function] entries otherwise ||| has [function]	count=1
arg	error bands ||| repl signif	count=1
arg	pairwise comparisons with a ||| value multitest_method	count=1
arg	plots lags ||| x ax lags	count=1
module	[module_1] test fdrcorrection ||| [module_1] [module_2]	count=2
function	method to ||| x	count=1
arg	a deepcopy ||| tables keep_headers	count=1
class	is equal to ||| descr stats w	count=1
function	cumulative effect ||| cum	count=1
class	[class_1] wave ||| [class_1] [class_2]	count=3
function	a sequence ||| str	count=1
arg	mu of appropriate length ||| p q k_trend	count=1
function	kurtosis measures ||| kurtosis	count=1
arg	pairwise comparisons ||| nobs value multitest_method	count=1
function	multivariate t ||| multivariate t	count=2
function	mean of ||| mean	count=6
module	the model and ||| emplike	count=1
class	[class_1] padding of ||| [class_1] [class_2] filter2 x pad	count=3
function	based on [function] of jacobian ||| [function]	count=1
module	pairwise interactions [module] given ||| [module]	count=1
class	logistic ||| logit	count=1
arg	asymmetric mixed ||| theta k	count=1
function	[function_1] filter ||| [function_1] [function_2]	count=1
arg	given endogenous variable ||| rtol maxiter	count=1
function	solvers using the specified ||| run solvers	count=1
module	regime (and the ||| tsa regime_switching	count=1
arg	fitted ||| at method atexog dummy	count=2
module	helper function to ||| tsa	count=1
function	monte carlo integrated ||| sirf errband mc	count=2
class	a two sample z-test ||| gof	count=1
function	reverse the logistic ||| untransform logistic	count=1
module	results from ||| stats	count=1
function	of random ||| random	count=1
function_arg	[function_1] the kalman ||| [arg_2] [function_1]	count=1
arg	system matrices ||| params arma_model	count=1
function_arg	[function_1] rho ||| [function_1] equi k_vars [arg_2]	count=3
function	the approximate ||| calc wdesign mat	count=1
function_arg	[function_1] unconstrained ||| [function_1] [arg_2]	count=1
function	compute multivariate [function_2] ||| [function_1] [function_2]	count=5
function_arg	matrix [arg_2] ||| [function_1] [arg_2]	count=1
arg	any model ||| gradient start_params fargs	count=1
module	for distributions with ||| sandbox distributions	count=2
function	using conditional sum of ||| css	count=1
module	or jacobian if ||| tools	count=1
function	sequence ||| dates	count=1
arg	delta ||| params exog	count=1
function	bilogistic ||| bilogistic	count=1
class	[class_1] decomposition ||| [class_1] [class_2]	count=1
class	compute ||| likelihood model results	count=2
module	make a ||| graphics	count=2
function	hessian up ||| hessian	count=1
module	compute var p ||| tsa	count=1
arg	with confidence ||| x alpha	count=1
function_arg	[function_1] [arg_2] such that :math \sigma_u ||| [function_1] [arg_2]	count=2
arg	model : ||| model	count=1
class	of a count ||| count	count=1
function	using ||| fit	count=7
class	the c-log-log transform ||| clog log	count=1
function	copy of ||| copy	count=1
function	to generate ||| calc wdesign mat	count=1
function	the test statistic see ||| test stat	count=1
function	function to get ||| get	count=1
class	single variable ||| micedata	count=1
module	matrix [module] a ||| [module]	count=1
function	for ||| test	count=1
class	of the object ||| mixed lmparams	count=1
arg	the ||| params start p end	count=1
class	in the formula the ||| formula	count=1
function	linear ||| wald	count=1
arg	to the ||| params	count=1
function	leverage ||| leverage	count=1
function_arg	constant [arg_2] ||| [arg_2] [function_1]	count=4
module	error ||| regression	count=1
class	variables ||| model	count=1
function_arg	model [arg_2] ||| [function_1] gradient [arg_2]	count=2
function	a sequence ||| dates	count=1
function	test of the mean ||| test mean	count=1
function_arg	chisquare statistic [arg_2] ||| [function_1] power [arg_2]	count=1
function	from a mixture ||| mixture rvs	count=1
function	sums for embedding ||| sums	count=1
function_arg	[function_1] function ||| [function_1] [arg_2]	count=8
module	of autoregressive lag-polynomial ||| tsa	count=1
module	the scotvote ||| scotland	count=1
function	inverse covariance matrix ||| wdesign mat	count=1
arg	[arg_1] group ||| [arg_1] [arg_2]	count=2
function	plot ||| plot	count=26
module	subclass because of distribution ||| distributions	count=1
function	a sequence of date ||| dates from str	count=1
arg	respect to ||| params offset_exposure	count=1
function	prediction and out-of-sample ||| get prediction	count=4
module	of ||| sandbox	count=14
function	hac independent of ||| s all hac	count=1
arg	[arg_1] test ||| tsa adfuller x maxlag [arg_1] [arg_2]	count=4
class	to another od ||| ordered dict	count=1
module	estimates ||| regression	count=1
module	squares along ||| tsa	count=1
function	[function_1] than one ||| [function_1] [function_2]	count=1
function	to construct a knockoff ||| knockoff	count=1
arg	all pairs of vals ||| vals dcrit	count=1
class	the significance ||| coef	count=1
arg	[arg_1] r and ||| [arg_1] [arg_2]	count=1
arg	any model ||| fargs	count=1
function	[function] f-test ||| solve [function]	count=2
function	pearson residuals ||| resid pearson	count=2
class	another od ||| ordered dict	count=1
class	a wald-test for a ||| model results	count=1
function	hessian up in the ||| hessian	count=1
arg	an array with lags ||| col lags	count=1
function	vector ||| index vector	count=2
arg	wald-test for ||| cov_p scale	count=1
function	function [function] of a ||| [function]	count=1
class	and other info needed ||| kalman filter	count=1
function	vertically ||| vstackarma minus1	count=1
arg	[arg] for the ||| params [arg]	count=2
function	the derivative of ||| deriv	count=5
arg	scatter of the sample ||| scatter	count=1
class	table object ||| table	count=1
function	iqr for ||| iqr	count=1
arg	goodness-of-fit ||| f_obs f_exp	count=1
function	flexible grid [function_2] ||| [function_2] [function_1]	count=4
class	two sample ||| gof chisquare ind	count=1
arg	the unconditional ||| tol	count=1
arg	given the data ||| data	count=1
function	between two ordinal ||| ordinal	count=1
arg	polynomial ||| polynomial threshold	count=1
function	the [function] ||| [function]	count=16
function	moving average lag polynomial ||| maroots	count=1
function	in ipython notebook ||| repr	count=1
class	for a ||| likelihood model results	count=2
arg	system of equations ||| rhs	count=1
function_arg	of chisquare [arg_2] ||| [arg_2] [function_1]	count=2
module	of the parameter estimates ||| duration	count=1
function_arg	for arma [arg_2] ||| [function_1] periodogram [arg_2]	count=4
arg	univariate case ||| init_state init_var	count=1
function	a 2-dimensional plot of ||| plot2d	count=1
function	by the ||| margeff	count=1
function	the standard ||| standard	count=1
function	marginal effects by ||| params	count=1
module	the statespace model ||| tsa statespace	count=1
arg	model of coles and ||| t beta delta	count=1
function	plot [function_2] ||| [function_1] [function_2]	count=6
arg	b nested within factor ||| b	count=1
arg	a mixedlmparams ||| k_fe k_re	count=1
arg	apply ||| results run_filter	count=1
function	normalized ||| normalized	count=1
function	date strings and ||| str	count=1
function	of the statsmodels data ||| data	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=246
function	plots of impulse ||| plot	count=1
arg	maxiter or change in ||| maxiter	count=1
function	single variable ||| update	count=1
function	table ||| table	count=2
function	the approximate inverse covariance ||| calc wdesign mat	count=1
module	the regression ||| regression	count=1
arg	r this is ||| x d r weights	count=1
function	autocovariance function with ||| acovf fft	count=1
function	local constant ||| est loc constant	count=1
class	ipython notebook ||| summary	count=1
module_class	[module_1] [class_2] ||| [module_1] variance [class_2]	count=1
module	[module] _2d_ ||| [module]	count=1
arg	ar and [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] variances ||| [function_1] [arg_2]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] split [arg_2]	count=3
arg	is the same in ||| x idx	count=1
module	parameter ||| duration	count=1
function	monte carlo [function_2] ||| [function_2] [function_1]	count=6
module	estimates ||| duration	count=1
arg	creating the weights ||| weights new_entries x_copy_i width	count=1
class	of the cdf ||| cdflink	count=1
function	computes ||| cov	count=1
arg	gets a [arg_2] ||| [arg_1] [arg_2]	count=2
function	plot partial regression for ||| plot partregress	count=1
arg	estimated density and ||| density nobs alpha	count=1
function_arg	insert a [arg_2] ||| [arg_2] [function_1]	count=3
module	stats ||| stats	count=1
arg	bw ||| bw	count=2
arg	returns the value of ||| resid omega nobs	count=1
function	positions ||| positions	count=1
function	for autoregressive coefficients and ||| autoregressive	count=1
arg	observed [arg_2] ||| [arg_1] [arg_2]	count=1
arg	spectral projected gradient method ||| grad	count=1
function	the most [function_2] ||| [function_1] [function_2] n	count=1
module	and ||| emplike	count=1
arg	univariate case ||| params init_state init_var	count=1
module	compute var p loglikelihood ||| tsa vector_ar	count=1
arg	process parameters ||| ar ma nsample	count=1
arg	matrices with singular ||| error_variance order k_endog	count=1
function	kalman ||| kalman	count=1
arg	evaluate ||| scale	count=2
arg	compute ||| cov_p	count=1
function	weights ||| wt standardize	count=1
arg	lags : int ||| lags maxiter maxfun	count=1
function	distribution of ||| distribution	count=2
function_arg	[function_1] [arg_2] ||| [function_1] params sinv [arg_2]	count=3
module	system of [module] ||| [module]	count=2
class	gls ||| short panel gls	count=1
module	create [module] elimination matrix ||| [module]	count=1
function	by the delta ||| margeff cov	count=1
arg	a ||| method alpha start_params refit	count=2
arg	given in testfunc is ||| testfunc	count=1
module	the irls algorithm ||| genmod	count=1
class	of the discrete ||| rv discrete	count=2
module	noise covariance with degrees ||| tsa vector_ar	count=1
arg	function plots lags on ||| lags alpha	count=1
function	insert ||| insert	count=2
class	confidence interval for kernel ||| kernel	count=1
arg	reference line ||| line x	count=1
function	a random sample ||| sample	count=1
function	and other info ||| kalman	count=1
function	cross validation leave-one-out estimator ||| cv loo	count=1
module	a sequence of ||| tsa base	count=1
function	to the log ||| log	count=1
arg	a mixedlmparams ||| params k_fe k_re	count=1
function	asymptotically consistent estimate ||| ybar	count=1
function	for a single ||| update	count=1
function	autocorrelation function [function_2] ||| [function_2] [function_1]	count=2
class	model this ||| likelihood model	count=1
function	vertically ||| hstackarma minus1	count=1
arg	exposure ||| exposure	count=1
function	breslow method ||| breslow	count=2
arg	mixedlmparams ||| params k_fe k_re	count=1
function	filtering via convolution centered ||| convolution filter	count=1
function	effects by the delta ||| cov params	count=1
arg	to q ||| q	count=1
module_class	the constraint ||| genmod parameter constraint	count=1
class	[class_1] ratio first ||| [class_1] [class_2]	count=2
function	on [function] of jacobian ||| [function]	count=1
module	a single variable ||| imputation	count=1
arg	[arg_1] : ||| [arg_1] [arg_2]	count=1
arg	calculates the ||| params	count=1
arg	the parameters of the ||| params	count=1
function	the basis ||| basis	count=1
function	whiten a series of ||| whiten	count=2
function	crude ||| observed crude	count=1
function	samples compared to control ||| pairscontrol	count=1
class	noise ||| varresults	count=1
function	a type ||| type	count=1
arg	norm ||| scale norm	count=1
function	the variance inflation ||| variance inflation	count=2
class	variance ||| variance	count=1
function	[function_1] confidence intervals ||| [function_2] [function_1]	count=7
module	the spector ||| spector	count=1
function	to generate ||| calc wdesign	count=1
function	order ||| order	count=1
arg	p q coefficients that ||| p q n	count=1
function	polynomials in the model ||| model	count=1
module	list of datetime ||| base	count=1
function	for ||| wald	count=1
function	grid in a multivariate ||| grid	count=1
function	and ||| kalman	count=1
arg	likelihood via kalman filter ||| transparams	count=2
class	[8] ||| reg coef c	count=2
function	[function_1] to compute ||| [function_2] [function_1]	count=7
function	uniform [function_2] ||| [function_2] [function_1]	count=2
module	observations the regression ||| sandbox regression	count=1
module	covariance with ||| tsa	count=1
arg	max_dim ||| indicators max_dim	count=1
function	parameters with bse ||| params	count=1
function_arg	the ceres [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	the mutual [arg_2] ||| [function_1] [arg_2]	count=2
arg	the ||| cls	count=2
module	and returns ||| tsa	count=1
class	[class_1] the hypothesis ||| [class_2] [class_1]	count=2
function	of the matrix ||| matrix	count=1
function	linearity ||| linear	count=2
arg	series simply and/or seasonally ||| series	count=1
function	convolution centered ||| convolution	count=1
function	sample of a discrete ||| discrete	count=1
function	using [function_2] ||| [function_1] [function_2] data_generator fit_kwds parallel_backend	count=2
function_arg	fit the [arg_2] ||| [function_1] start_params method maxiter [arg_2]	count=1
module	returns a list ||| tsa	count=1
module	loglikelihood ||| tsa vector_ar	count=2
arg	inverse covariance ||| mod params	count=1
arg	for a ||| cov_p scale	count=1
module	degrees ||| tsa	count=1
function	calculates the se ||| compute se	count=1
class	row ||| row	count=1
function	multinomial [function_2] ||| [function_2] [function_1]	count=1
module	for ols ||| stats	count=1
function	returns the standard errors ||| standard errors	count=1
function_arg	[function_1] ols ||| [function_1] [arg_2]	count=2
function	the baseline [function_2] ||| [function_1] [function_2]	count=8
class	box-cox regressions where ||| box cox	count=1
function	vector ||| copy missing vector	count=2
function	marginal effects ||| params	count=1
function	[function_1] than one ||| [function_2] [function_1]	count=1
module	by the ||| discrete	count=1
arg	deepcopy in ||| tables keep_headers	count=1
arg	lags ||| ax lags alpha	count=1
arg	for any model with ||| gradient start_params fargs	count=1
class	for the tweedie ||| tweedie	count=1
function	the measure of dispersion ||| compute dispersion	count=2
function	covariance ||| calc wdesign mat	count=2
function	of the parameter estimates ||| get	count=1
class	model returns -hessian of ||| likelihood model	count=2
function_arg	from arrays [arg_2] ||| [function_1] y [arg_2]	count=1
arg	(endog mu [arg_2] ||| [arg_1] [arg_2]	count=1
arg	delta ||| exog	count=1
arg	[arg_1] reference line ||| [arg_1] [arg_2]	count=1
function	errors of the ||| errors	count=1
arg	of the ||| effect_size nobs alpha	count=4
arg	of marginal effects ||| params exog	count=1
function	returns a ||| dates from	count=1
function	decomposition using moving ||| decompose	count=1
function	normalize the ||| normalize	count=2
function_arg	[function_1] confidence ||| [function_1] [arg_2]	count=1
class	of the smoothing ||| smoothing	count=1
arg	linear system of equations ||| rhs	count=1
arg	returns the ||| params	count=1
function	[function] of ||| [function]	count=9
function	[function_1] ab ||| [function_1] [function_2]	count=3
function	parameters with bse and/or ||| params	count=1
arg	white on group sums ||| group	count=1
function	no autocorrelation parameters ||| acorr	count=1
arg	of the power ||| nobs alpha power	count=2
class	odds ratio ||| odds ratio	count=3
function	compute a ||| wald	count=1
function	normal [function_2] ||| [function_2] [function_1]	count=3
arg	summarizes results ||| alpha float_format method	count=1
function	of vech(sigma_u) ||| sigma	count=1
function	sequence of date ||| dates from	count=1
arg	log 'star' ||| eta est_vect weights	count=1
function	other info needed for ||| init	count=1
function	method ||| cov params	count=2
module	grunfeld ||| grunfeld	count=1
arg	x [arg_2] ||| [arg_1] [arg_2]	count=4
arg	nm ||| nm	count=2
arg	is the ||| y x idx	count=1
class	kernel density the ||| kernel	count=1
class	[class_1] odds ||| [class_1] [class_2]	count=1
function	from packed parameter ||| from packed	count=2
function_arg	[function_1] process parameters ||| [function_1] acovf [arg_2]	count=2
function	a list of datetime ||| from	count=1
module	error of ||| sandbox	count=1
function	probability of success is ||| binom	count=1
arg	x if x is ||| x	count=1
arg	the ||| alpha beta	count=1
class	[class] based ||| global [class]	count=1
function	[function] to ||| [function]	count=6
class	writing to file for ||| stata writer	count=1
function	of all looo regressions ||| params not obsi	count=1
function	affine transform for full ||| affine	count=1
function	fits ||| fit	count=1
function	generate a [function_2] ||| [function_1] [function_2]	count=3
arg	for teststat ||| teststat regression n	count=1
function_arg	[function_1] statistic ||| [arg_2] [function_1]	count=1
arg	other info needed for ||| params	count=1
function	errors ||| errors	count=1
module	of parameters ||| tsa	count=1
arg	bandwidth ||| bw func	count=1
arg	for 1d parameters ||| x unbiased demean	count=1
class	estimates ||| factor	count=1
module	helper ||| tsa	count=1
function_arg	latex tabular environment ||| latex tabular center	count=1
function	/ [function_2] ||| [function_2] [function_1]	count=12
module_class	[module_1] two independent ||| [module_1] [class_2]	count=10
function	estimated covariance for coefficients ||| cov	count=1
class	solve ||| chisquare ind power	count=1
arg	a ||| a	count=5
module	a simple ordered ||| graphics	count=1
function	standard error of ||| get bse	count=1
function	helper function [function] of a ||| [function]	count=1
function	info ||| kalman	count=1
function	than one ||| than one python	count=2
function	for starting ||| start	count=1
function	solves [function_2] ||| [function_2] [function_1]	count=8
class	inverse [class_2] ||| [class_2] [class_1]	count=1
function	compute forecast covariance ||| forecast cov	count=1
arg	ar [arg_2] ||| [arg_2] [arg_1]	count=2
function	iterating on the observation ||| obs	count=1
arg	time ||| x time nlags	count=1
module	degrees of ||| tsa vector_ar	count=1
function_arg	[function_1] bitmask from ||| [function_1] [arg_2]	count=7
arg	are different ||| exact	count=2
function	stata date [function_2] ||| [function_2] [function_1]	count=1
arg	* diag [arg] * ||| results [arg]	count=1
class	and other info needed ||| filter	count=1
class	derivative of the inverse [class_1] [class_2] transform ||| [class_1] [class_2] inverse deriv z	count=1
arg	p q coefficients ||| p q	count=1
function	inverse covariance ||| calc wdesign	count=1
function	hypothesis ||| wald	count=1
function	linear ||| loc linear	count=2
arg	the approximate ||| mod params	count=1
function	return the mediator ||| get mediator	count=3
module	second moment of ||| sandbox	count=1
module	of ||| tsa statespace	count=2
function	set ||| set filter	count=1
arg	the delta method ||| model params	count=1
module_class	link function [class_2] ||| [module_1] [class_2]	count=2
function_arg	linear [arg_2] ||| [function_1] [arg_2]	count=9
function	is a [function_2] ||| [function_2] [function_1]	count=1
arg	a mixedlmparams ||| fe_params cov_re cov_re_sqrt vcomp	count=1
class	tweedie family ||| tweedie	count=1
arg	the approximate inverse covariance ||| mod	count=1
arg	[arg_1] power ||| [arg_1] [arg_2]	count=10
function	[function_1] packed ||| [function_2] [function_1]	count=1
arg	from a ||| data index	count=1
function	includes the end points ||| reject	count=2
class	needed ||| kalman	count=1
function	[function_1] using ||| [function_2] [function_1]	count=4
function	no detrending ||| detrend none	count=1
module	the stack loss ||| stackloss	count=1
arg	given [arg_2] ||| [arg_2] [arg_1]	count=4
function	compute likelihoods conditional on ||| conditional likelihoods	count=2
class	identical means this should ||| compare means	count=1
function	kernel for nonparametric regression ||| reg	count=2
arg	of marginal ||| model params	count=1
arg	indices are ||| indices	count=1
arg	components enthresh ||| enthresh	count=1
function	[function_1] autoregressive coefficients ||| [function_2] [function_1]	count=1
function	required results from the ||| res	count=1
function_arg	[function_1] unconstrained parameters ||| [arg_2] [function_1]	count=1
arg	a ||| r_matrix	count=2
function	jones reparameterization ||| ar invtransparams	count=1
function	string the ||| string	count=1
arg	for 1d ||| x unbiased nlags	count=1
class	lagorder selection ||| varresults	count=1
arg	pairwise comparisons ||| value multitest_method	count=1
arg	nodewise_weightvalue ||| exog nodewise_row idx	count=1
module	other ||| tsa	count=1
function_arg	recursive [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] iqr ||| [function_2] [function_1]	count=2
function	multinomial [function_2] ||| [function_1] [function_2]	count=1
module	for the ||| kalmanf	count=1
arg	_est_regularized_debiased and ||| results_l threshold	count=1
function	the loglikelihood ||| loglike	count=1
arg	see if [arg] proper probability ||| [arg]	count=1
module	transform link function ||| genmod families	count=1
function	impute missing values ||| impute	count=1
function	compute cohen's kappa ||| kappa	count=1
arg	sf x [arg_2] ||| [arg_1] [arg_2]	count=1
function	the score [function_2] ||| [function_1] [function_2]	count=1
function	tuple or [function] ndarray or ||| [function]	count=1
function	scr ||| scr	count=1
function	stata's default format for ||| to default stata fmt	count=1
module	of squares along ||| tsa	count=1
function	the formatted ||| as	count=1
arg	object for iterating over ||| as_dict	count=1
function	perform [function] ||| [function]	count=1
arg	onto the components enthresh ||| enthresh	count=1
arg	autocorrelation this is a ||| x	count=1
arg	summarize multiple results instances ||| results	count=1
module	distributions ||| sandbox distributions	count=4
arg	parameters ||| x	count=1
module	sequence of ||| tsa	count=1
module	a continuous distribution given ||| sandbox distributions	count=1
class	smoothing ||| smooth	count=1
function	estimated covariance ||| cov params	count=1
arg	x : ||| x	count=1
arg	determine if a polynomial ||| polynomial threshold	count=1
arg	matrices using [arg] matrix such ||| maxn [arg]	count=1
arg	points offset_points according to ||| points offset_points	count=1
class	white noise covariance ||| varresults	count=1
class	the global [class_1] [class_2] based on the current ||| genmod global [class_1] [class_2]	count=1
arg	a [arg] ||| start_params method [arg]	count=2
module	transform parameters ||| genmod families	count=2
class	a model instance for ||| likelihood model	count=1
function	returns ||| str	count=1
function	to datetime ||| date to datetime	count=1
class	other info needed for ||| filter	count=1
function	set from ||| set	count=1
function_arg	solve for [arg_2] ||| [function_1] [arg_2]	count=11
function	of a [function] ||| get [function]	count=1
module	along the ||| tsa	count=1
function	marginal ||| margeff	count=1
class	global odds [class_2] ||| [class_1] [class_2]	count=4
arg	rater2 brings [arg] into ||| [arg]	count=1
class	needed for ||| kalman	count=1
module	respect to the distribution ||| distributions	count=2
module_class	[module_1] function ||| [module_1] variance [class_2]	count=1
arg	a can be ||| a	count=1
class	in [8] ||| test reg coef c	count=1
function	[function_1] the mean ||| [function_2] [function_1]	count=3
module	for t-test the ||| stats	count=1
module_class	to the kdeunivariate ||| nonparametric kdeunivariate	count=1
function	maxfact ||| find nfact	count=1
function	strings and returns a ||| dates	count=1
arg	process ||| ar ma nobs	count=3
module	model of demarta and ||| sandbox	count=1
function	random ||| random univariate	count=2
class	means this ||| compare means	count=1
arg	q is ||| q	count=1
function	a sequence of ||| from	count=1
function	factors ||| calc factors	count=1
arg	x returns the column ||| x	count=2
arg	[arg_1] int ||| [arg_2] [arg_1]	count=2
function	moving average ||| maparams	count=1
arg	[arg] first it ||| [arg]	count=3
arg	of squares along ||| x	count=1
function	the confidence interval is ||| confint	count=1
function	to make flexible grid ||| irf grid	count=1
class	other ||| filter	count=1
arg	x or sf x ||| x	count=1
module	with degrees ||| vector_ar	count=1
arg	the first elements ||| inplace	count=3
function	variance parameters note ||| re	count=1
module	the el nino ||| elnino	count=1
function_arg	derivative of [arg_2] ||| [function_1] exog [arg_2]	count=1
module	a sequence ||| base	count=1
function	outlier [function_2] ||| [function_2] [function_1]	count=1
class	confidence interval for kernel ||| custom kernel	count=1
function	of date strings ||| from	count=1
arg	and in-sample ||| start end	count=1
function_arg	means of [arg_2] ||| [arg_2] [function_1]	count=4
function	nipals implementation to ||| nipals	count=1
function	calculates ||| calc	count=1
arg	[arg_1] [arg_2] ||| [arg_2] ma [arg_1]	count=4
class	a ||| model	count=2
function	computed using the method ||| oim	count=1
function	marginal ||| params	count=1
function	[function] distribution parameters ||| gof chisquare [function]	count=3
function_arg	[function_1] plot of ||| [function_1] data [arg_2]	count=1
module	marginal effects by the ||| discrete	count=1
function	[function_1] joblib ||| [function_2] [function_1]	count=1
arg	summarize the model parameters ||| alpha start title model_name	count=1
arg	a joint ||| scale invcov	count=1
arg	testfunc ||| testfunc	count=1
arg	new empty ||| iterable	count=1
function	wrapper around [function] method ||| pairwise [function]	count=1
module	compute var ||| tsa vector_ar	count=1
function_arg	cusum [arg_2] ||| [arg_2] [function_1]	count=1
arg	of appropriate length for ||| p q k_trend	count=1
function	stata's default format ||| dtype to default stata	count=1
function	[function] given the ||| [function]	count=1
class	collect required results ||| olsinfluence	count=1
module	by ||| regression	count=1
module	of [module] dependence ||| [module]	count=1
module	options ||| regression	count=1
class	object ||| mixed lmparams	count=3
arg	given family ||| maxiter	count=1
arg	test of equivalence ||| low upp usevar	count=1
function	the power of ||| power	count=1
function	ttest for the ||| ttest	count=1
arg	r and ||| r	count=1
arg	correlation matrix ||| corr	count=1
class	the kalman [class_2] ||| [class_2] [class_1]	count=2
class	grouping ||| grouping	count=1
function	matrix for the var ||| matrix	count=1
function_arg	q [arg_2] ||| [function_1] [arg_2]	count=7
arg	in ||| y axis	count=1
arg	marginal effects by ||| params	count=1
class	two independent sample ||| normal ind	count=1
arg	evaluate the ||| endog_predict exog_predict	count=1
module	[module] time-varying ||| [module]	count=1
arg	try to ||| results alpha float_format title	count=1
function	full rank affine transform ||| affine	count=1
function	estimate model ||| fit	count=2
function	proportions for all pairs ||| allpairs	count=1
function	model [function] an ||| [function]	count=1
function_arg	simulate a [arg_2] ||| [arg_2] [function_1]	count=2
module	the columns of ||| stats	count=1
arg	conditional expectation partial residuals ||| results focus_exog frac cond_means	count=1
arg	fe optional model ||| model	count=1
module	the approximate inverse covariance ||| base	count=1
module	[module] time-varying vector ||| [module]	count=1
arg	the estimated density ||| density nobs	count=1
function	variance inflation ||| variance inflation	count=2
function	sum of data ||| sum	count=1
function_arg	[function_1] results ||| [function_1] [arg_2]	count=2
function	estimated covariance ||| cov	count=1
arg	p ||| p	count=8
function	needed for the ||| init kalman state	count=1
function	is a [function_2] ||| [function_1] [function_2]	count=1
arg	range for z ||| z	count=1
function	computes the test ||| test stat	count=1
function	mean ||| mv mean	count=1
function	integer location of ||| maybe	count=1
arg	[arg_1] [arg_2] where missing observations are ||| tools drop missing [arg_1] [arg_2]	count=2
class	[class] p ||| [class]	count=1
module	distribution where ||| distributions	count=1
function	the se ||| compute se	count=1
function_arg	[function_1] specific ||| [function_1] key [arg_2]	count=6
arg	nlags of stable ||| nlags	count=1
function	cumulative hazard function ||| cumulative hazard	count=1
function_arg	crosscovariance for [arg_2] ||| [function_1] [arg_2]	count=2
class	text summarizing the results ||| results	count=1
class	for now ||| ar	count=1
function	covariance for coefficients for ||| cov params	count=1
module	returns parameters ||| regression	count=1
arg	a ||| method alpha	count=2
arg	of series ||| series	count=1
function	initialize ||| initialize	count=3
function	prediction ||| get prediction	count=4
class	[class_1] wave ||| [class_2] [class_1]	count=3
function	the ||| wdesign	count=2
function	less [function_2] ||| [function_2] [function_1]	count=2
function	the corresponding detection ||| detection	count=1
arg	a string summarizing the ||| get_l1_slsqp_results get_l1_cvxopt_results	count=1
function	estimates ||| get	count=1
function	with default ddof ||| corrcoef	count=1
function	dfbetas ||| dfbetas	count=1
arg	regression on order statistics ||| min_uncensored	count=1
function	data [function_2] ||| [function_2] [function_1]	count=1
arg	using cython inner loop ||| initial_probabilities regime_transition conditional_likelihoods	count=1
arg	or lower form ||| a b lower	count=1
function	loglikelihood for ||| loglike	count=1
arg	confidence ||| alpha alternative	count=1
function	the mean of bivariate ||| mean	count=1
function	scipy gradient optimizers ||| gradient	count=1
class	for ||| results	count=1
arg	_est_regularized_debiased and returns ||| results_l	count=1
class	of a chisquare test ||| gof chisquare	count=1
arg	plot [arg_2] ||| [arg_1] [arg_2]	count=1
module_class	of an ar ||| tsa ar	count=1
function	all against first comparison ||| all	count=2
arg	for fit_constrained methods or ||| constraints start_params	count=1
function	marginal effects by the ||| cov	count=1
class	autoregressive lag-polynomial ||| arma process	count=1
function	[function_1] autocovariances ||| [function_2] [function_1]	count=2
function	[function_1] the interval ||| [function_2] [function_1]	count=2
arg	the ||| cls params	count=2
function_arg	[function_1] labels ||| [function_1] ax data [arg_2]	count=1
class	values ||| micedata	count=1
function	quantize a ||| prob quantize cdf	count=1
function	[function_1] mediator ||| [function_2] [function_1]	count=1
function	control [function_2] ||| [function_2] [function_1]	count=2
arg	compute a wald-test ||| r_matrix	count=1
function	mean is ||| mean	count=1
arg	scatter of ||| scatter ax	count=1
function	the hessian function at ||| hessian	count=1
function	a sequence ||| from	count=1
function	of date strings and ||| from str	count=1
module	entries equal [module] 0 ||| [module]	count=1
function_arg	criterion function ||| rho z	count=4
function	[function_1] latex tabular ||| [function_1] [function_2]	count=1
function_arg	probability of [arg_2] ||| [arg_2] [function_1]	count=2
arg	first third of the ||| alternative use_f	count=1
arg	linear hypothesis ||| r_matrix cov_p scale	count=1
arg	and other info ||| params	count=1
function	pearson ||| pearson	count=1
function	and other info ||| init kalman state	count=1
module	the unconstrained ||| genmod	count=1
class	function ||| function	count=1
class	for the poisson ||| poisson	count=1
function_arg	[function_1] for teststat ||| [arg_2] [function_1]	count=2
arg	(endog mu freq_weights ||| endog mu freq_weights	count=2
module	based ||| sandbox stats	count=1
function	standard ||| bse	count=2
class	noise covariance with degrees ||| varresults	count=1
module	the grunfeld ||| grunfeld	count=1
arg	just a harmonic mean ||| srange	count=2
arg	mixedlmparams ||| k_fe k_re use_sqrt	count=1
function	shape ||| adjust shape	count=1
class	distributed estimation ||| distributed	count=1
arg	the fitted model ||| method atexog dummy	count=2
function_arg	tabular environment ||| tabular center	count=1
function	parameter [function_2] ||| [function_2] [function_1]	count=1
function	interest ||| wtd nuis regress	count=1
function	[function_1] all odds ||| [function_2] [function_1]	count=1
arg	estimator ||| bw	count=3
function	distribution of random ||| random univariate	count=1
arg	groups [arg_2] ||| [arg_1] [arg_2]	count=2
arg	a series simply and/or ||| series	count=1
class	linear model with t ||| tlinear model	count=1
function	needed ||| kalman state	count=2
function	autocovariances [function_2] ||| [function_2] [function_1]	count=1
arg	selected by r this ||| r weights	count=1
function	the names ||| names	count=1
class	arima ||| arima	count=1
class	estimates of ||| dynamic factor results	count=1
module	list of ||| sandbox	count=1
function	fitted values for the ||| fittedvalues	count=1
function	convert from sif to ||| date to	count=1
module	for ||| vector_ar	count=1
function	display (3 ||| compute a	count=1
class	objective function for gmm ||| gmm	count=1
function_arg	update [arg_2] ||| [arg_2] [function_1]	count=6
function	[function_1] the interval ||| [function_1] reject [function_2]	count=2
function	monotone ||| monotone fn	count=2
function	all pairs this ||| pairs	count=1
function	returns partial residuals ||| partial resids	count=1
function_arg	[function_1] and variances ||| [function_1] [arg_2]	count=3
class	significance ||| test reg coef	count=1
arg	gets a string summarizing ||| true_params get_l1_slsqp_results get_l1_cvxopt_results	count=1
function	stata's ||| stata	count=1
arg	contingency table ||| horizontal	count=1
arg	y and x ||| y x	count=1
arg	value ||| resid omega	count=1
function	inverse covariance ||| calc	count=1
function	multivariate archimedean ||| mv archimedean	count=1
function	plot regression ||| plot regress	count=1
arg	non- equivalence of one ||| low upp	count=1
arg	a cdf ||| cdf	count=1
function	and iqr ||| iqr	count=1
arg	delta method ||| params exog	count=1
arg	an index or ||| end index silent	count=1
function	difference between the ||| ci limits	count=1
function	[function] filter ||| [function] filter	count=1
module	of white ||| tsa	count=1
class	the ||| switching results	count=1
function_arg	indices for [arg_2] ||| [arg_2] [function_1]	count=1
function	the missing ||| missing	count=1
function	stata's default ||| default stata	count=1
function	or correlation matrix for ||| matrix	count=1
function	method ||| method	count=3
arg	variance is ||| x idx	count=1
function	pdf a ||| pdf	count=1
arg	drop_idx is only available ||| drop_idx sparse	count=1
module	of the ||| regression	count=1
arg	for the ||| cls params	count=1
arg	by a cdf ||| cdf	count=1
arg	for 1d parameters ||| x unbiased	count=1
arg	[arg_1] nobs ||| [arg_2] [arg_1]	count=4
function	partial [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] interval for ||| [function_1] int el param_num [arg_2]	count=3
function	reverse the logistic ||| logistic	count=1
function	squares statistic ||| squares	count=1
function	test ||| compute test stat	count=2
function	the vector ||| vector	count=2
function	mle ||| fitbinned	count=1
class	for the negative ||| negative	count=1
arg	the variance-covariance ||| model params exog cov_params	count=1
function	of eigenvalues and eigenvectors ||| using	count=1
function	iqr ||| iqr	count=1
function	known ||| known	count=1
function	contingency table ||| table	count=1
function	of date strings and ||| dates	count=1
arg	the delta method ||| model params exog	count=1
module	or its ||| sandbox	count=2
arg	computes the variance-covariance of ||| model params exog cov_params	count=1
module	including ||| tsa vector_ar	count=1
arg	formula and a dataframe ||| dataframe	count=1
class	lag-polynomial ||| arma process	count=1
arg	on group sums sandwich ||| group	count=1
arg	a [arg] ||| [arg]	count=3
function	the ||| kalman	count=2
arg	1d parameters ||| x unbiased demean	count=1
function	strings and returns a ||| dates from str	count=1
arg	as random permutations of ||| reps start_params transformed em_iter	count=1
function	cohen's kappa ||| cohens kappa	count=1
function	deviance ||| deviance	count=1
class	lag-polynomial ||| arma	count=1
arg	int ||| maxfun	count=1
arg	conditional expectation partial ||| results focus_exog frac cond_means	count=1
function	create a ||| init	count=2
module	available if ||| tools	count=1
function	second derivative ||| deriv2	count=2
module_class	for two independent ||| stats normal ind	count=1
class	from ||| results	count=1
class	kernel smoothing estimate ||| kernel	count=1
arg	the scatter ||| scatter	count=1
function	the missing data pattern ||| missing pattern	count=1
arg	per ||| method transformed approx_complex_step	count=1
class	kernel ||| kernel	count=4
function	use gls to ||| fe params	count=1
function	[function_1] transformed cdf ||| [function_2] [function_1]	count=2
function	date ||| str	count=1
module	centered ||| tsa vector_ar	count=1
function	the confidence intervals ||| ci	count=1
function	date strings and ||| dates	count=1
function_arg	log [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] unconditional ||| [arg_2] [function_1]	count=1
function	[function_1] mean ||| [function_1] [function_2]	count=1
function	wang-ryzin kernel for ||| wang ryzin	count=1
class	significance value ||| reg coef	count=1
arg	data ||| endog exog groups	count=2
function	[function_1] autocovariances from ||| [function_1] [function_2]	count=2
function	helper method to get ||| get	count=2
arg	at the ||| k_params alpha score	count=1
class	a wald-test ||| likelihood	count=1
class	model to data ||| model	count=1
class	two independent sample ||| ind	count=1
function	[function_1] to compute ||| [function_2] using [function_1]	count=1
function	[function_1] test ||| [function_2] [function_1]	count=1
function	integrated ||| irf errband	count=1
arg	of x by time ||| x index counts dummies	count=1
class	[class] influence ||| [class]	count=1
arg	impute missing values ||| vname	count=1
function	[function] of a ||| [function]	count=2
function	list of ||| dates from str	count=1
function	effects ||| cov params	count=2
function	the delta ||| params	count=1
class	fixed ||| one way	count=1
function	[function] 3 does ||| [function]	count=1
module	cochran's q test for ||| sandbox stats	count=1
arg	freq_weights ||| freq_weights	count=1
function_arg	[function_1] plots lags ||| [function_1] acf [arg_2]	count=1
arg	d2 ||| d2	count=1
arg	other info needed ||| cls	count=1
arg	results instances [arg_2] ||| [arg_1] [arg_2]	count=1
function	residual ||| resid	count=4
class	weighted ||| descr stats	count=1
function	convert from sif to ||| elapsed date to	count=1
function	discrete distribution ||| discrete	count=1
module	period's regime ||| tsa regime_switching	count=2
function	delta method ||| margeff cov params	count=1
function	get final ||| get	count=1
function	a sorted [function] helper function ||| [function]	count=1
arg	singular values ||| unconstrained order k_endog	count=1
arg	or lower form ||| lower	count=1
function	cached attribute [function_1] [function_2] influence ||| stats olsinfluence [function_2] [function_1]	count=2
function	determinant of ||| logdet	count=1
arg	of mu ||| mu initscale	count=1
arg	to a plot ||| ax lines_idx frac	count=1
function_arg	arma process [arg_2] ||| [function_1] periodogram ar ma [arg_2]	count=1
class	actual [class] ||| stat test [class]	count=3
class	the ||| results	count=5
function_arg	[function_1] [arg_2] ||| [function_1] exog [arg_2]	count=6
arg	estimating distribution parameters by ||| params	count=1
module	the distribution location ||| sandbox distributions	count=2
module	a wald-test ||| base	count=1
arg	helper function to ||| x	count=1
module	string labels [module] unique index ||| [module]	count=1
function	[function_1] of squares ||| [function_1] [function_2]	count=1
module	var p ||| tsa vector_ar	count=1
arg	upper or lower form ||| a b lower	count=1
arg	bitmask from a ||| simulation_output simulate_state simulate_disturbance simulate_all	count=1
function	for [function] ||| est [function]	count=3
module	variables in the regression ||| nonparametric	count=1
function	variance of the ||| var	count=1
function	calculate expected value ||| expect	count=2
arg	plots lags ||| lags	count=1
arg	variance and equal-zero ||| table weights return_results wt	count=1
module	effects by the delta ||| discrete	count=1
class	compute a wald-test for ||| likelihood	count=1
module	it is used for ||| stats	count=1
function	breslow method to ||| breslow loglike	count=1
function	fitting for arma ||| arma	count=1
module	distribution given ||| sandbox distributions	count=1
function	grid in a ||| mv grid	count=1
arg	matrix parameters ||| params exog exposure offset	count=1
module	data [module] data and ||| datasets [module]	count=2
module	the ||| sandbox	count=1
function	contrast or restriction matrix ||| contrast	count=2
arg	by the delta ||| model params exog	count=1
function	compute multivariate autocovariances from ||| compute multivariate acovf from	count=1
function	confidence region plot for ||| contour	count=1
function	the approximate inverse ||| mat	count=1
function	returns partial residuals for ||| partial	count=1
arg	one sample proportion the ||| nobs alpha alternative	count=1
function	dummy variable ||| dummy	count=1
arg	drop_idx is only ||| drop_idx	count=1
module	and other ||| kalmanf	count=1
class	roots ||| arma process	count=2
module_class	likelihood [class_2] ||| [module_1] [class_2]	count=1
class	irf ||| iranalysis	count=2
function	joblib parameters ||| joblib	count=1
function	return an instance ||| get	count=1
arg	an ar p ||| x	count=1
arg	fitted model ||| atexog dummy	count=2
arg	scale_matrix ||| scale_matrix	count=2
function	date strings and ||| from	count=1
arg	summary for regression ||| yname xname	count=1
arg	[arg_1] q ||| [arg_1] [arg_2]	count=1
function	uniform weights ||| weights uniform	count=2
function	display as html in ||| repr html	count=1
function	regression ||| beta	count=1
function_arg	hessian [arg_2] ||| [arg_2] [function_1]	count=3
class	linear hypothesis ||| likelihood model results	count=1
function	the scipy gradient optimizers ||| gradient	count=1
arg	x-values xs and y-values ||| xs	count=2
function	influence measure ||| influence	count=1
arg	the bandwidth ||| bw func	count=1
function	the correlation coefficient parameters ||| corr	count=1
arg	compute ||| r_matrix cov_p	count=1
module	loads the grunfeld ||| grunfeld	count=1
function	[function_1] random sample ||| [function_1] [function_2]	count=1
function	update the ||| lowess update	count=1
module	specific [module] to ||| [module]	count=1
function_arg	plot ccpr [arg_2] ||| [function_1] [arg_2]	count=1
function	list of datetime ||| dates	count=1
function	the difference between the ||| ci limits mu	count=1
arg	mu ||| mu initscale axis	count=1
class	returns ||| kalman filter	count=2
function_arg	[function_1] model ||| [function_1] constrained [arg_2]	count=1
function	breslow method to handle ||| breslow	count=2
module	sum ||| sandbox panel	count=1
arg	concatenate a ||| axis allow_mix	count=1
function	or ||| lower	count=1
function	graphical test ||| check	count=1
function	seasonal [function_2] ||| [function_1] [function_2]	count=4
module	wald-wolfowitz runstest [module] two samples ||| [module]	count=1
function	or an integer ||| or	count=1
arg	to matrices with singular ||| constrained error_variance order k_endog	count=1
module	of function by ||| distributions	count=1
function	test statistic see ||| test stat	count=1
class	generalized linear ||| glm	count=3
function	solvers using ||| solvers	count=1
function	[function_1] minus ||| [function_1] [function_2]	count=3
function	name ||| name	count=1
function	effects by ||| cov params	count=1
arg	principle components using mayavi ||| iz clf	count=1
module	of model coefficients notes ||| vector_ar	count=1
function_arg	information matrix [arg_2] ||| [function_1] [arg_2]	count=1
arg	of variation if ||| bounds window_length scale	count=1
function	generate the approximate ||| calc wdesign	count=1
function	standard error of the ||| bse	count=1
function	hurvich criteria for ||| hurvich	count=1
arg	spaced time ||| time nlags	count=1
function_arg	create [function_1] [arg_2] off diagonal ||| [function_1] equi [arg_2]	count=1
function	cells based on ||| cells	count=1
function	starting values [function] ||| fitstart [function]	count=1
class	f-test for a ||| likelihood model results	count=1
arg	set of regressors ||| results exog_idx grid fig	count=1
class	significance ||| reg coef	count=1
arg	for a joint ||| r_matrix cov_p scale invcov	count=1
module	the constrained model space ||| genmod	count=1
function	method ||| using	count=1
module	info needed ||| kalmanf	count=1
arg	[arg] first ||| [arg]	count=3
function	representation of an arma ||| arma2ar	count=1
function	factor is a measure ||| factor	count=1
arg	parameter in ||| param_num	count=1
class	for the ||| kalman	count=1
arg	having v degrees ||| v	count=2
arg	design matrix parameters ||| params exog	count=1
arg	model ||| model endog	count=1
arg	indices are the ||| indices values	count=1
function	of marginal effects ||| cov	count=1
arg	of vals ||| vals	count=1
arg	for fit_constrained methods or ||| model constraints start_params	count=1
function	integer row labels from ||| maybe reset index	count=1
function_arg	[function_1] formula ||| [function_1] y x [arg_2]	count=1
function	normal distributed ||| normal	count=1
arg	[arg_1] r ||| [arg_2] [arg_1]	count=1
arg	in [arg] int that ||| [arg]	count=1
class	for least trimmed mean ||| trimmed mean	count=2
class	for the ||| filter	count=1
function	of freedom used ||| df model	count=1
arg	of the probabilities ||| nobs	count=1
arg	matrices with singular values ||| constrained error_variance order k_endog	count=1
function	cvxopt solvers cp ||| cvxopt cp	count=2
module	frequency [module] ||| [module]	count=1
arg	the group [arg_2] ||| [arg_1] [arg_2]	count=3
arg	cdf ||| binsx binsy cdf	count=1
function	get the ||| get	count=3
arg	of stubs at column ||| stubs	count=1
function_arg	[function_1] process ||| [function_1] [arg_2]	count=9
function	lutkepohl 2005 book source ||| lutkepohl	count=1
function_arg	log determinant [arg_2] ||| [function_1] [arg_2]	count=1
function	fdr ||| fdr	count=1
function	[function] just ||| make param [function]	count=1
arg	in-sample prediction ||| params start end probabilities	count=1
module	distribution of an ||| distributions	count=1
function	string [function_2] ||| [function_2] [function_1]	count=2
arg	interval ||| beta_high beta_low sig	count=1
arg	joint ||| r_matrix cov_p scale invcov	count=1
function	[function_1] fit ||| [function_2] start [function_1]	count=1
arg	d2 with d1 ||| d1	count=1
function	covariance matrix of ||| cov	count=2
arg	[arg_1] [arg_2] ||| tsa adfuller x maxlag [arg_1] [arg_2]	count=8
arg	get the ar ||| ar	count=1
module	the ||| robust	count=1
function	jacobian matrix for ||| jacobian	count=1
arg	and ma ||| ma	count=1
class	for svar ||| svarprocess	count=1
arg	[arg] inversion ||| [arg]	count=1
module	example method [module] moment estimator ||| [module]	count=1
class	recursive residuals ||| recursive lsresults	count=1
function	rows ||| rows	count=1
arg	compute a wald-test for ||| r_matrix cov_p scale	count=1
function	variance inflation [function_2] ||| [function_2] [function_1]	count=4
arg	error bands assuming normally ||| orth repl t signif	count=2
function	return determinant of white ||| detomega	count=1
module	covariance matrix [module] a ||| [module]	count=1
module	of datetime ||| tsa base	count=1
function_arg	create equicorrelated [function_1] [arg_2] diagonal ||| [function_1] equi [arg_2]	count=1
function	approximate inverse ||| wdesign mat	count=1
function	compute small number ||| compute	count=1
arg	function f returns ||| f epsilon args	count=1
module	for minimum ||| sandbox stats	count=1
class	the significance value for ||| coef	count=1
arg	likelihood for a parameter ||| param_num	count=1
function	default format for ||| to default	count=1
function	summary table of ||| summary	count=1
function	covariance matrix ||| covariance matrix	count=1
module	marginal effects by ||| discrete	count=1
function_arg	[function_1] columns according ||| [function_1] ar x [arg_2]	count=1
module	exogenous variables ||| base	count=1
function	[function_1] for fit ||| [function_2] [function_1]	count=1
arg	residuals and cusum ||| skip lamda	count=1
function	in-sample prediction ||| predict	count=1
arg	[arg_1] this ||| [arg_1] [arg_2]	count=4
function	plot of [function_2] ||| [function_2] [function_1]	count=1
module_class	for [module_1] [class_2] ||| [module_1] [class_2]	count=4
function	intercept ||| intercept	count=2
function	computes the ||| margeff cov params	count=1
function_arg	[function_1] structure to ||| [arg_2] [function_1]	count=1
arg	drop_idx is only available ||| drop_idx sparse dtype	count=1
class	wald-test for ||| model	count=1
function	schoenfeld ||| schoenfeld	count=1
arg	using [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
function	needed for ||| init	count=1
function	the confidence interval ||| confint	count=1
arg	[arg_1] updates ||| [arg_2] [arg_1]	count=1
class	[class] matrix ||| [class]	count=4
function_arg	[function_1] confidence interval ||| [arg_2] [function_1]	count=1
arg	effects by the delta ||| model params exog	count=1
class	[class_1] padding ||| [class_2] [class_1]	count=3
class	model returns -hessian ||| likelihood model	count=2
function	integer row ||| maybe reset index	count=1
class	module ||| hold it	count=1
function	initialize [function_2] ||| [function_2] [function_1]	count=2
function	from [function] ||| [function]	count=1
arg	the [arg_2] ||| [arg_2] [arg_1]	count=9
function	test statistic see p ||| test stat	count=1
class	model this reduces ||| model	count=1
function	the delta ||| margeff	count=1
function_arg	lowess function [arg_2] ||| [arg_2] [function_1]	count=4
module	required ||| stats	count=1
function	function [function] at ||| llf [function]	count=2
function	update the endpoints ||| lowess update	count=1
function_arg	[function_1] impulse ||| [arg_2] [function_1]	count=1
function	evaluate the basis of ||| basis	count=1
function_arg	plot the [arg_2] ||| [function_1] acf [arg_2]	count=1
function	group ||| group	count=1
function	normal based equivalence ||| ztost	count=1
module	returns ||| tsa kalmanf	count=2
function	fit the model a ||| fit	count=1
function	power of ||| power	count=3
function_arg	[function_1] data ||| [function_1] [arg_2]	count=1
function	the ||| get	count=1
function	standard error of ||| bse	count=1
function	1d 2d or 3d ||| arfilter old	count=1
class	derivative of the [class_1] [class_2] transform ||| [class_1] [class_2]	count=1
arg	dummy matrix ||| dictnames drop	count=1
class	log-likelihood evaluated at ||| generic likelihood model	count=1
function_arg	[function_1] function for ||| [function_1] [arg_2]	count=8
class	for huber's t ||| huber t	count=2
arg	calculate the ||| effect_size df_num df_denom alpha	count=2
arg	tables ||| tables	count=1
arg	null hypothesis is that ||| value	count=1
function	all against first ||| all	count=2
function	stata ||| stata elapsed	count=1
function	of a discrete ||| discrete	count=1
arg	[arg_1] updates the ||| [arg_2] [arg_1]	count=1
function	[function_1] disturbance ||| [function_2] [function_1]	count=5
function	generate ||| mat	count=1
arg	given exogenous ||| params exog exposure	count=1
function	the density estimate ||| fit	count=1
class	error of the parameter ||| gmmresults	count=2
class	simulation smoothing does not ||| simulation smooth	count=1
module_class	[module_1] an ar ||| [module_1] [class_2]	count=8
function	formatted ||| as	count=1
class	estimates of ||| factor	count=1
function	use gls to ||| fe	count=1
arg	is the same ||| x	count=1
function	multivariate partial ||| multivariate pacf	count=2
module	roots [module] the ||| [module]	count=1
function	from arrays ||| data	count=1
module	regime (and the last ||| tsa regime_switching	count=1
module_class	returns the [class_2] ||| [module_1] [class_2]	count=2
function	[function_1] computed using ||| [function_1] params [function_2]	count=1
function	simulate standard [function_2] ||| [function_1] [function_2]	count=1
class	the ||| phreg results	count=2
class	values for a ||| micedata	count=1
arg	a single regressor ||| endog exog_i exog_others data	count=1
module	load data ||| datasets	count=1
function_arg	[function_1] r ||| [function_1] params sinv [arg_2]	count=3
function	solves the discrete ||| discrete	count=1
function	reverse the logistic transform ||| untransform logistic	count=1
function	[function_1] of sample ||| [function_1] [function_2]	count=2
module	rank [module] a matrix ||| [module]	count=1
function	bisquare function applied to ||| lowess bisquare	count=1
function	full parameter [function_2] ||| [function_2] [function_1]	count=1
arg	and formula [arg_2] ||| [arg_2] [arg_1]	count=2
function	derivative of the expected ||| deriv	count=3
class	clip logistic ||| logit	count=1
function	information [function_2] ||| [function_2] [function_1]	count=1
arg	info needed ||| params	count=1
class	compute ||| results	count=1
arg	construct a stratifiedtable object ||| var1 var2 strata	count=1
function_arg	[function_1] [arg_2] ||| [function_1] alpha [arg_2]	count=12
function	multivariate [function_2] ||| [function_2] [function_1]	count=7
arg	x ||| x index counts	count=1
function	plots for standardized ||| plot	count=1
arg	the ||| alpha beta axis	count=1
function	orders of ||| orders	count=1
function	the discrete ||| solve discrete	count=1
arg	spaced time periods ||| time	count=1
function_arg	affine transform [arg_2] ||| [function_1] transformed shift [arg_2]	count=1
class	get ||| simulation smoother	count=1
function	of the power of ||| power	count=1
module	of marginal effects by ||| discrete	count=1
arg	the estimated density and ||| density nobs	count=1
arg	c and an n ||| c	count=1
function	generalized ||| generalized	count=2
function	[function_1] [function_2] ||| [function_2] start [function_1]	count=2
function	compute the trace ||| trace	count=1
arg	shape should be a ||| shape	count=1
arg	distribution parameters ||| distfn params	count=2
function_arg	update the [arg_2] ||| [arg_2] [function_1]	count=8
function	instance [function] specified ||| [function] robustcov	count=1
function	test that all ||| test	count=2
function	date strings ||| str	count=1
arg	variance and equal-zero test ||| table weights return_results wt	count=1
class	global ||| global	count=1
arg	in-sample prediction and ||| start end	count=1
arg	to [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	gradient [arg_2] ||| [function_1] [arg_2]	count=2
class	computes the significance ||| reg coef	count=1
function	[function_1] method ||| [function_2] [function_1]	count=4
class	for huber's [class_2] ||| [class_2] [class_1]	count=1
class	of linear [class_2] ||| [class_2] [class_1]	count=4
function	ceres ||| ceres resids	count=2
arg	of an arima ||| order start_params	count=1
module	[module] difference ||| [module]	count=1
function	get the location ||| get prediction index	count=1
module	create [module] elimination ||| [module]	count=1
arg	[arg] through the ||| [arg]	count=3
function	[function_1] simulation ||| [function_1] [function_2]	count=3
arg	number [arg] that fall ||| [arg]	count=1
arg	for ||| params	count=4
function	[function_1] ab for ||| [function_1] [function_2]	count=3
function	to ||| wdesign	count=1
function	get final simulation ||| get simulation	count=2
arg	the system matrices ||| params arma_model	count=1
function	[function_1] [function_2] ||| statespace simulation smooth results [function_2] [function_1]	count=2
arg	appropriate length ||| p q k_trend	count=1
function	irf monte carlo ||| mc	count=1
function_arg	[function_1] 1d arrays ||| [function_1] [arg_2]	count=1
function	dataframe take a linear ||| ols	count=1
function	sequence of ||| dates	count=1
function	make flexible grid plots ||| irf grid plot	count=1
function	probabilities percetiles of ||| ppplot	count=1
function	sif to ||| to	count=1
function	return integer [function_2] ||| [function_2] [function_1]	count=1
module	moment of ||| sandbox	count=1
function	date strings ||| from str	count=1
function_arg	using [arg_2] ||| [function_1] [arg_2]	count=5
function	provides a summary for ||| summary find nfact	count=1
class	autoregressive ||| process	count=1
arg	if a polynomial ||| polynomial threshold	count=1
function	wang-ryzin kernel [function_2] ||| [function_2] [function_1]	count=1
module	graphical test ||| sandbox tsa	count=1
function	multivariate ||| multivariate	count=4
function	test_joint_skew_kurt ||| skew kurt	count=1
function	generate the ||| calc wdesign	count=1
arg	interval ||| beta_low sig	count=1
function	function for ||| function	count=1
function	instance ||| add	count=1
function	the ||| wdesign mat	count=4
function	calculate sum of ||| sumofsq	count=1
module	the joint model returns ||| regression	count=1
class	returns the kernel smoothing ||| kernel	count=1
arg	reweighted ||| scale	count=1
class	a wald-test ||| model results	count=1
class	[class] a ||| [class]	count=2
function	returns the ||| init kalman state	count=1
arg	summarize the model parameters ||| start title model_name	count=1
class	of ||| process	count=1
arg	assumes we have ||| nlags weights_func	count=1
module	delta ||| discrete	count=1
function	efron method ||| efron loglike	count=1
arg	group [arg_2] ||| [arg_2] [arg_1]	count=3
function	plot of [function_2] ||| [function_1] [function_2]	count=1
function_arg	restructure [function_1] [arg_2] ||| genmod ordinal gee setup [function_1] [arg_2]	count=4
class	global [class] based ||| global [class]	count=1
function	squares ||| sumofsq	count=1
arg	of a specific ||| base_index	count=2
class	options ||| gmmresults	count=1
function	returns a list ||| from str	count=1
arg	from [arg_2] ||| [arg_2] [arg_1]	count=1
function	transform observation to the ||| transform	count=1
module_class	[module_1] decomposition ||| [module_1] factor [class_2]	count=1
function	an exog array with ||| exog	count=1
arg	b nested ||| b	count=1
class	linear [class_2] ||| [class_2] [class_1]	count=4
function	test statistic see ||| compute test stat	count=1
class	tables ||| summary	count=1
class	the variance [class_2] ||| [class_1] [class_2]	count=1
class	leave-one-label_out cross validation ||| leave one label out	count=1
arg	needed ||| cls params	count=1
function_arg	the log [arg_2] ||| emplike opt functs [function_1] star [arg_2]	count=2
function	the aic hurvich criteria ||| aic hurvich	count=1
function	for out of ||| get predict out of	count=1
function	computes the test statistic ||| compute test	count=1
function_arg	[function_1] interval for ||| [function_1] [arg_2]	count=1
function	common ||| common	count=1
function	a sequence ||| dates from str	count=1
arg	data as binary indicators ||| endog exog groups time	count=2
arg	_est_regularized_debiased and ||| results_l	count=1
function	score vector of ||| score	count=1
function	the interval includes ||| reject interval	count=4
class	get factor [class_2] ||| [class_2] [class_1]	count=2
function_arg	z-test [arg_2] ||| ztest [function_1] [arg_2]	count=3
arg	the ||| params start p	count=1
function	success ||| binom	count=1
function	on ||| smooth	count=2
function	the integer row labels ||| maybe reset index	count=1
arg	a specific key ||| key base_index	count=4
arg	value of ||| resid omega nobs	count=2
function	if ||| is	count=1
arg	of error ||| x1 x2 ddof	count=1
arg	v degrees [arg_2] ||| [arg_2] [arg_1]	count=4
function	the variance [function_2] ||| [function_2] [function_1]	count=5
function	returns the ||| kalman	count=1
arg	system matrices and ||| params arma_model	count=1
module	set ||| sandbox stats	count=1
class	means this should ||| means	count=1
module	approximate ||| base	count=1
arg	and ||| skip	count=1
function_arg	[function_1] contingency table ||| [arg_2] [function_1]	count=1
class	space ||| mlemodel	count=1
module	variance for distributions ||| distributions	count=2
module_class	compute theoretical ||| tsa vector_ar varprocess	count=1
module	for a ||| imputation	count=1
arg	transform shape [arg_2] ||| [arg_2] [arg_1]	count=2
function	project series onto a ||| project	count=1
arg	for class distributedmodel ||| fit_kwds	count=1
arg	computes ||| model	count=1
function	predict for the ||| predict	count=1
function	scale ||| scale	count=2
function	derivative of the inverse ||| inverse deriv	count=1
function	helper method to update ||| update	count=1
function	estimate scale ||| estimate	count=1
function	of the vector ||| copy missing vector	count=1
function	of date strings ||| str	count=1
function_arg	location [arg_2] ||| [function_1] key [arg_2]	count=2
function	parameters for [function_2] ||| [function_2] [function_1]	count=1
arg	plots studentized ||| external alpha	count=1
module	for ||| stats	count=93
module	the ||| kalmanf	count=2
function	via convolution ||| convolution filter	count=1
function	the variance parameters note ||| re	count=1
function	coefficients ||| coefficients	count=4
function_arg	regularized [arg_2] ||| [function_1] [arg_2]	count=1
arg	assumes we have a ||| weights_func	count=1
class	weights for a hypothesis ||| stat uv	count=1
arg	at params ||| params	count=2
arg	indices are ||| indices values	count=1
function_arg	transformed parameters ||| sqrt params	count=1
function	inverse ||| calc wdesign mat	count=2
class	is the conditioning ||| mvnormal	count=1
function	mean_params ||| handle constraint	count=1
arg	a given endogenous variable ||| rtol maxiter	count=1
arg	via kalman filter ||| transparams	count=2
function	state disturbance vector ||| state disturbance	count=1
function	array starting [function_2] ||| [function_1] [function_2]	count=9
arg	at the estimated density ||| density nobs	count=1
arg	f returns ||| x f epsilon args	count=1
arg	vector of parameters ||| params	count=1
function	envelope ||| envelope	count=1
function	the score [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] that :math \sigma_u = ||| [function_1] [arg_2]	count=2
class	wald-test for a ||| likelihood model results	count=1
function	cached attribute [function_1] [function_2] ||| stats olsinfluence [function_2] [function_1]	count=2
function	correlation matrix from ||| corr	count=1
function	standard errors of ||| standard errors	count=1
function	from data parameters ||| from data	count=1
class	decorrelate ||| factored psdmatrix	count=1
function_arg	crosscovariance [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] latex tabular ||| [function_2] [function_1]	count=1
arg	in ||| y	count=3
arg	columns [arg] either ||| [arg]	count=1
function	[function_1] function ||| [function_1] [function_2]	count=6
arg	the objects in ||| pvalues group_name	count=1
class	of exogenous ||| model	count=1
function	ccpr ||| ccpr grid	count=2
function	of marginal ||| params	count=1
function	less ||| less	count=1
arg	assumes [arg_2] ||| [arg_2] [arg_1]	count=2
function	normal distribution unknown ||| normal ad	count=2
function	results ||| results	count=1
function	mackinnon's approximate p-value ||| mackinnonp	count=1
arg	calculate ||| effect_size nobs alpha k_groups	count=1
module	transform of the ||| tsa	count=1
class	identical [class] parameters ||| compare [class]	count=1
function	[function] just the ||| [function]	count=2
arg	regression plots studentized ||| external	count=1
function	marginal effects by the ||| params	count=1
function	[function_1] fdr ||| [function_2] [function_1]	count=2
function	representation of ||| arma2ar	count=1
function	[function_1] requested equation ||| [function_2] [function_1]	count=1
function	default format ||| dtype to default	count=2
arg	sum of squares ||| x	count=1
arg	r [arg_2] ||| [arg_1] [arg_2]	count=1
function	limit ||| limit	count=1
function	calculate local ||| local	count=1
class	other info needed for ||| kalman filter	count=1
function	[function] star98 data ||| [function]	count=1
function_arg	[function_1] process ||| [function_1] pacf [arg_2]	count=4
module	the statecrime ||| statecrime	count=1
arg	log-likelihoog ||| sig2_0	count=1
module	matrix for ||| sandbox stats	count=2
arg	period in [arg] int that ||| [arg]	count=1
module	of date ||| tsa	count=1
module	graphical test for ||| sandbox tsa	count=1
arg	first third ||| alternative use_f	count=1
function	wald-test for a ||| wald test	count=1
function	anscombe [function_2] ||| [function_2] [function_1]	count=10
arg	random sample of ||| rvs alpha	count=1
function	cross validation ||| cv	count=1
function	transform arbitrary matrices to ||| constrain sv	count=1
module	subclass because of distribution ||| sandbox distributions	count=1
arg	[arg_1] maximum likelihood ||| [arg_2] [arg_1]	count=4
arg	a series x x ||| x	count=1
function	degrees of freedom ||| df fit	count=1
arg	pairwise comparisons ||| count nobs multitest_method	count=1
function	multiplier to the log ||| log	count=1
arg	the results of the ||| alpha	count=1
arg	1d parameters ||| x unbiased demean fft	count=1
module	partial sum on a ||| graphics	count=1
function	estimate lag coefficients of ||| fit	count=1
function	to a type ||| type	count=1
class	the hypothesis ||| contrast	count=1
function	autocorrelation ||| acorr lm	count=1
class	and model this reduces ||| model	count=1
function	covariance matrix ||| mat	count=1
function	needed ||| create mpl	count=1
function	[function] attribute ||| [function]	count=2
arg	for 1d ||| unbiased	count=1
arg	the kalman filter ||| params start p end	count=1
function	by the delta ||| params	count=1
function	the stata date ||| stata	count=1
function	to reverse the logistic ||| untransform logistic	count=1
arg	polynomial roots ||| arroots maroots w	count=1
function	[function_1] given moments ||| [function_1] from [function_2]	count=1
class	conditioning ||| mvnormal	count=1
function	remove ||| remove	count=1
arg	[arg_1] other ||| [arg_2] [arg_1]	count=4
function	generates a 2-dimensional plot ||| plot2d	count=1
module	strings and ||| base	count=1
function	anova with ||| anova	count=1
module	equal [module] 0 as ||| [module]	count=1
class	fevd ||| fevd	count=1
arg	k or more ||| x k n p	count=1
arg	mean difference r and ||| r	count=1
arg	effects ||| exog	count=1
function	determine envelope for jitter ||| jitter envelope	count=1
function	the lambda parameter ||| lambda	count=1
arg	k ||| k	count=1
function	of ||| str	count=2
function	a chisquare test ||| chisquare	count=2
arg	bandwidth with kernel ||| kernel	count=1
function	estimate of variance ||| var	count=1
arg	variance-covariance ||| model params exog cov_params	count=1
arg	horizontal ||| data	count=1
arg	[arg] log-likelihood for ||| mu [arg]	count=1
module	only available if ||| tools	count=1
function_arg	monotone [arg_2] ||| [function_1] [arg_2]	count=3
function	linearity the null ||| linear	count=2
arg	of indices ||| indices	count=1
function	the bisquare function applied ||| lowess bisquare	count=1
arg	the orthogonal ||| x polybase order limits	count=1
function_arg	mean x ||| mean x	count=1
function	score gradient vector ||| score	count=1
arg	norm and ||| norm axis	count=1
function	integer group indices for ||| combine indices	count=1
function	compute ||| llf	count=1
class	single ||| micedata	count=1
class	estimates ||| dynamic factor results	count=1
arg	wald-test for a ||| r_matrix	count=1
function	basis ||| basis	count=2
arg	line ||| line	count=1
function	anscombe residuals for the ||| resid anscombe	count=1
module	the rank [module] a matrix ||| [module]	count=1
function	is ||| is	count=2
module	f-test [module] the ||| [module]	count=1
function	ftest ||| ftest	count=1
arg	[arg_1] given ||| [arg_2] [arg_1]	count=2
function	[function_1] tost ||| [function_1] [function_2]	count=1
arg	groups are different ||| groups exact	count=1
function	out [function_2] ||| [function_1] [function_2]	count=3
function	search ||| params search	count=1
function_arg	insert column [arg_2] ||| [arg_2] [function_1]	count=2
function	probability ||| prob mv	count=1
class	construct a contrast ||| contrast	count=2
function	insert column ||| insert stubs	count=1
arg	given an intercept ||| intercept	count=1
arg	to n the fourier ||| n	count=1
class	log-likelihood of logit ||| logit	count=1
function	em step for ||| em	count=2
class	[class_1] padding of ||| [class_2] [class_1]	count=3
arg	inverse of the ||| params	count=1
function	cohn ||| cohn	count=1
module	in ||| tsa	count=12
function	names of exogenous variables ||| names	count=1
function	add [function_2] ||| [function_2] [function_1]	count=4
function	returns a list of ||| from	count=1
function	determination (:math r^2) from ||| determination	count=1
function	using conditional sum ||| css	count=1
function	the variance ||| variance	count=1
function_arg	the location [arg_2] ||| [arg_2] [function_1]	count=4
function	method the kalman ||| method	count=1
arg	computes the ||| model	count=1
function	list ||| dates	count=1
module_class	of the [class_2] ||| [module_1] [class_2]	count=10
function	contrast or restriction ||| contrast	count=2
arg	transform constrained parameters used ||| constrained	count=4
class	random effects ||| one way mixed	count=1
arg	k or more ||| k	count=1
function	out ||| get predict out	count=1
arg	error parameters ||| x1 x2	count=1
module	matrix s pen ||| sandbox	count=1
function	for ||| check	count=1
function	[function_1] parameters for ||| [function_2] [function_1]	count=6
module	checks [module] see if ||| [module]	count=1
arg	fe optional model : ||| model	count=1
module_class	for the fitted ||| genmod geeresults	count=1
function	using the breslow method ||| breslow	count=2
function	list of datetime ||| from	count=1
function	tost [function_2] ||| [function_1] reject [function_2]	count=1
class	the kernel ||| custom kernel	count=1
function	update the endpoints ||| update	count=1
class	info needed for ||| kalman filter	count=1
module	and ||| kalmanf	count=1
arg	process parameters ||| ar ma	count=1
arg	to generate the ||| params	count=1
class	results from the ||| olsinfluence	count=1
arg	confidence interval ||| alpha	count=1
function	factor of ||| factor	count=1
module	test for ||| sandbox stats	count=7
function	[function_1] a bivariate ||| [function_2] [function_1]	count=4
class	including the intercept ||| varresults	count=1
class	results of the hypothesis ||| contrast results	count=1
arg	upper left corner ||| reorder_rows reorder_cols	count=1
arg	index or ||| data index	count=1
class	model to a ||| additive model	count=1
arg	of the ||| alpha	count=2
function	to ||| freq to	count=1
module	that ||| stats	count=1
arg	is the same in ||| y x idx split	count=1
arg	a ||| scale	count=2
module	log-likelihood ||| base	count=1
arg	of the bandwidth ||| bw	count=1
arg	r this ||| d r weights	count=2
arg	effects by ||| params exog	count=1
function	observations within a categorical ||| within	count=1
module	[module] _2d_ arrays ||| [module]	count=1
class	is equal ||| descr stats w	count=1
function	approximate inverse covariance ||| mat	count=1
function	[function_1] of ||| [function_2] [function_1]	count=3
function	[function_1] lowess ||| [function_2] [function_1]	count=1
function	parameter estimates with options ||| get	count=1
function_arg	chisquare [arg_2] ||| [function_1] power [arg_2]	count=1
class	compute a wald-test for ||| model results	count=1
arg	the data [arg_2] ||| [arg_2] [arg_1]	count=1
function	envelope for ||| envelope	count=1
module	the ||| genmod	count=27
module	lag-polynomial ||| tsa	count=1
class	gmm parameters ||| gmm	count=1
function	[function_1] tests ||| [function_1] [function_2]	count=1
arg	scatter ||| scatter	count=1
module	wald-test for ||| base	count=1
module	covariance with degrees ||| tsa	count=1
module	used for ||| stats	count=1
arg	j ||| j	count=1
arg	performs ||| parallel_backend	count=1
function	the missing [function_2] ||| [function_2] [function_1]	count=1
arg	is the same in ||| y x	count=1
module_class	negative [class_2] ||| [module_1] negative [class_2] inverse deriv z	count=1
arg	calculate ||| indicators embedding_dim	count=1
function_arg	[function_1] a plot ||| [arg_2] [function_1]	count=2
function	subset of ||| subset	count=1
arg	lags on the ||| ax lags	count=1
function	to generate the approximate ||| wdesign	count=1
module	of ||| regression	count=1
arg	of marginal effects by ||| model params exog	count=1
function	hamilton ||| hamilton	count=1
arg	covariance matrix ||| params	count=1
module	parameters ||| statespace	count=7
function	one way anova with ||| anova	count=1
function	log-likelihood ||| loglike	count=9
arg	bitmask ||| simulation_output simulate_state simulate_disturbance simulate_all	count=1
function	autocovariances [function_2] ||| [function_1] [function_2]	count=1
function	all pairs ||| pairs unbalanced	count=1
function	standard deviation of data ||| std	count=1
arg	process ||| nobs ar ma	count=1
arg	inverse covariance matrix ||| params	count=1
function	axes with ||| axes	count=1
class	smoother ||| smoother	count=1
function	split a ||| split	count=1
class	smoothing does not return ||| smooth	count=1
class	of white noise ||| varresults	count=1
function	a near ||| clipped	count=1
function	for arma ||| arma	count=2
class	of the ||| phreg results	count=1
function	regularized fit to ||| fit regularized	count=2
function	discrete distribution ||| binning discrete	count=1
arg	sum ||| x	count=1
class	ahead ||| arma	count=2
class	info ||| kalman filter	count=2
arg	linear ||| cov_p	count=1
arg	given [arg] ||| terms [arg]	count=3
function	[function_1] than ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] params [arg_2]	count=1
class	for huber's [class_2] ||| [class_1] [class_2]	count=1
arg	of marginal ||| params	count=1
module	jacobian if ||| tools	count=1
function	to compute ||| compute	count=5
function	of date strings ||| dates	count=1
arg	parameter ||| param_num beta_high	count=1
arg	results instances [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	calculate recursive [arg_2] ||| [function_1] [arg_2]	count=1
class	cached attribute parameter ||| olsinfluence	count=1
module	the regression ||| sandbox regression	count=1
arg	any model with ||| fargs	count=1
class	a pickle of this ||| model results	count=1
function	for all pairs ||| allpairs	count=1
arg	to n the ||| n	count=1
arg	number [arg] ||| [arg]	count=1
function	minimization ||| gmmobjective	count=1
module	el nino ||| elnino	count=1
function	summary for ||| summary	count=1
function	tost the [function_2] ||| [function_1] [function_2]	count=4
module	than the ||| examples tsa	count=1
function	ab for ||| symbanded	count=1
module_class	a p-p plot ||| graphics prob plot	count=1
arg	approximate inverse covariance ||| params	count=1
arg	the delta method ||| params	count=1
class	a count ||| count	count=1
module	the elements of a ||| statespace	count=1
arg	the kalman filter ||| params start	count=1
function_arg	[function_1] parameters ||| [arg_2] [function_1]	count=14
arg	summarize ||| alpha float_format	count=1
arg	selected by r this ||| d r weights	count=1
function	of another set from ||| set	count=1
function	the distribution of uncensored ||| distribution	count=1
arg	creating ||| new_entries x_copy_i width	count=1
function	std and [function_2] ||| [function_2] [function_1]	count=4
arg	d1 = x ||| d1	count=1
class	hypothesis ||| likelihood	count=1
function	[function_1] conditional on ||| [function_2] [function_1]	count=5
module	roots [module] the reduced ||| [module]	count=1
class	values [class] distributions ||| [class]	count=1
arg	needed ||| cls	count=1
arg	each count level for ||| n exog exposure offset	count=1
arg	whether variance is ||| x idx split	count=1
module	[module_1] test ||| [module_1] [module_2]	count=2
module	transform ||| genmod families	count=2
function	model of joe ||| joe	count=1
function	the regularized ||| est regularized	count=1
module	the rank [module] a ||| [module]	count=1
function	approximate ||| calc	count=1
arg	norm and a ||| a scale norm axis	count=1
arg	set of regressors ||| exog_idx grid fig	count=1
class	is equal to ||| descr stats	count=1
arg	pairwise comparisons ||| multitest_method	count=2
arg	estimated density ||| density	count=1
arg	and autocorrelation robust ||| nlags	count=1
arg	[arg] proper ||| [arg]	count=1
function	parameters [function_2] ||| [function_2] [function_1]	count=1
function	way anova ||| anova	count=1
module	and another distribution int ||| distributions	count=1
arg	see if [arg] ||| [arg]	count=2
arg	first item [arg] array-like object ||| [arg]	count=1
function	integer group indices for ||| indices	count=1
arg	a reference line ||| line	count=1
function	on the observation ||| obs	count=1
class	model this ||| model	count=1
arg	elements of x ||| x	count=1
arg	p sample ||| p	count=1
arg	one ||| value nobs	count=1
arg	[arg_1] q coefficients ||| [arg_1] [arg_2]	count=1
arg	given groups are different ||| pvals groups exact	count=1
module	of distribution parameters ||| distributions	count=2
module	for ddof differences ||| stats	count=1
function	possibly time-varying vector ||| vector	count=1
arg	calculate ||| effect_size df_num df_denom alpha	count=2
function_arg	derivative of the ||| derivative exog params	count=1
function	standard deviation ||| stde	count=1
function	[function_1] effects ||| [function_2] [function_1]	count=2
arg	sf x returns ||| x n	count=2
function	marginal effects by the ||| margeff cov	count=1
class	a chisquare test ||| gof chisquare	count=1
function	mixture ||| mixture rvs	count=1
arg	guerrero's coefficient of variation ||| x bounds window_length scale	count=1
module	covariance with degrees ||| vector_ar	count=1
class	kdeunivariate class ||| kdeunivariate	count=1
class	domain ||| ortho poly	count=1
function	of the data ||| data	count=1
arg	computes the variance-covariance ||| exog cov_params	count=1
function	is false [function] is dropped ||| [function]	count=1
function	the missing data ||| plot missing	count=1
arg	pairwise comparisons with ||| nobs value multitest_method	count=1
arg	at ||| k_params alpha score	count=1
function	f [function_2] ||| [function_2] [function_1]	count=1
arg	scale only ||| scale	count=2
function	moving average parameters ||| maparams	count=1
function	returns the covariance ||| get covariance	count=1
arg	value [arg_2] ||| [arg_1] [arg_2]	count=1
function	the breslow method to ||| breslow	count=2
function	of the determinant ||| logdet	count=1
arg	ar and ma parameters ||| ar ma	count=1
class	arima p d q ||| arima	count=1
module	discrete regressors ||| discrete	count=2
arg	key and return ||| key	count=1
arg	ma polynomial is not ||| x	count=1
arg	matrix parameters ||| params exog	count=1
function	hypothesis ||| test	count=1
function	the hessian function ||| hessian	count=1
function	random ||| rvs	count=1
arg	drop_idx is only ||| drop_idx sparse dtype	count=1
module	single time series with ||| stats	count=1
arg	self and ||| weights	count=1
arg	formula to data ||| data	count=2
arg	[arg] array-like object ||| [arg]	count=1
function	array starting parameters ||| start params	count=6
arg	enthresh [arg_2] ||| [arg_2] [arg_1]	count=2
arg	points [arg] ||| x [arg]	count=1
function	conditional on the current ||| conditional	count=2
arg	[arg] calculated ||| [arg] alpha method	count=3
function	sample ||| sample	count=3
function	attribute [function] ||| hat diag [function]	count=3
module	white noise ||| tsa vector_ar	count=1
arg	are different [arg_2] ||| [arg_1] [arg_2]	count=1
arg	studentized ||| results external alpha	count=1
arg	f returns 1d ||| x f epsilon args	count=1
arg	plots lags ||| ax lags	count=1
class	ipython ||| summary	count=1
arg	process ||| ar ma nsample	count=1
function	log-likelihood gradient ||| calc grad	count=1
arg	endog with respect to ||| offset_exposure	count=1
class	the negative ||| negative	count=3
arg	[arg_1] cor_length ||| [arg_1] [arg_2]	count=2
arg	produce linear mse ||| y coefs intercept	count=1
function	arima ||| arima	count=1
arg	wald-test ||| scale	count=1
function	sequence ||| dates from str	count=1
function	project series onto ||| project	count=1
class	identical means this should ||| means	count=1
function	[function] given ||| [function]	count=1
arg	for the [arg] of identical ||| alternative usevar [arg]	count=1
arg	by the delta ||| exog	count=1
function	the schoenfeld [function_2] ||| [function_1] [function_2]	count=1
function	matrix ||| missing matrix	count=2
arg	mixedlmparams ||| k_fe k_re	count=1
function	get the location of ||| get prediction index	count=1
arg	from 0 to q ||| q	count=1
arg	[arg_1] power of ||| [arg_1] [arg_2]	count=10
function	hazard function ||| hazard function	count=2
arg	lags ||| ax lags	count=1
module	ols regression ||| regression	count=1
arg	of variation ||| bounds window_length scale	count=1
function_arg	[function_1] parameter of ||| [function_1] [arg_2]	count=2
module	link function ||| genmod families	count=7
arg	the ||| params exog	count=2
function	a sequence of ||| from str	count=1
arg	by the ||| params	count=1
arg	used to [arg_2] ||| [arg_2] [arg_1]	count=3
function	eubank similar ||| fg1eu	count=1
arg	multivariate linear filter ||| b const	count=1
arg	estimated density and ||| density	count=1
arg	wald-test for a joint ||| invcov	count=1
arg	the first elements of ||| a b index inplace	count=1
function	of covariance of the ||| cov	count=1
function	[function_1] matrix equations ||| [function_2] [function_1]	count=2
function	default ddof ||| corrcoef	count=1
module	tweedie ||| genmod families	count=1
function	all pairs ||| pairs	count=1
function	by the ||| params	count=1
arg	[arg_1] sequence ||| [arg_1] [arg_2]	count=1
function	log-likelihood for each observation ||| obs	count=1
arg	by the ||| exog	count=1
arg	returns an array with ||| col	count=1
module	using ||| base	count=1
function_arg	[function_1] [arg_2] ||| [function_1] obs [arg_2]	count=2
function	method to get final ||| get	count=1
arg	the components enthresh npcs ||| vals enthresh npcs	count=1
function	[function_1] extreme value ||| [function_2] [function_1]	count=2
function_arg	[function_1] x by ||| [function_1] [arg_2]	count=3
function_arg	arma [arg_2] ||| [function_1] periodogram [arg_2]	count=4
function	plot [function_2] ||| [function_2] [function_1]	count=6
module	series with zero axis ||| stats	count=1
arg	for ||| r_matrix cov_p	count=1
module	non-monotone line search of ||| stats	count=1
module	distribution for ||| sandbox distributions	count=2
arg	for a joint linear ||| invcov	count=1
arg	k or ||| k n p	count=1
function	model for ||| fit	count=1
arg	computes the variance-covariance ||| params exog cov_params	count=1
arg	-2 x log-likelihoog ratio ||| sig2_0 return_weights	count=1
arg	by the delta ||| params	count=1
arg	x is ||| x varnames dtype	count=1
function	format ||| to table	count=1
arg	x by time ||| x index counts dummies	count=1
function	[function_1] compute ||| [function_2] [function_1]	count=7
class	of a two sample ||| gof chisquare ind	count=1
function	return predicted ||| predict	count=1
class	[class_1] biweight estimator ||| [class_2] [class_1]	count=2
function	evaluates the probability from ||| psturng	count=1
class	of the parameter ||| phreg	count=1
function	turns ||| dates from str	count=1
arg	each count level ||| n exog exposure offset	count=1
function	hessian of arma ||| hessian	count=2
function_arg	whiten a [arg_2] ||| [arg_2] [function_1]	count=1
module_class	[module_1] binomial family ||| [module_1] negative [class_2]	count=1
function	dataset ||| dataset	count=1
arg	p sample mean ||| p	count=1
arg	[arg_1] loc ||| [arg_2] [arg_1]	count=4
function	extend a list of ||| extend	count=1
function	[function_1] a recarray ||| [function_1] [function_2]	count=1
function	test that the probability ||| test	count=1
function	the aic [function_2] ||| [function_1] [function_2]	count=3
function	the approximate inverse covariance ||| wdesign mat	count=1
function	tost [function_2] ||| [function_2] [function_1]	count=5
module_class	[module_1] binomial family ||| [module_1] [class_2]	count=1
module	correction factor for ||| sandbox stats	count=1
function	[function_1] kurtosis ||| [function_2] [function_1]	count=1
function	of squares along ||| sumofsq	count=1
arg	data as binary indicators ||| endog	count=2
module_class	gradient of [class_2] ||| [module_1] [class_2]	count=2
module	t-test for ||| stats	count=2
arg	[arg_1] the weights ||| [arg_2] [arg_1]	count=8
arg	using [arg_1] [arg_2] ||| start_params [arg_1] [arg_2]	count=1
class	discrete ||| rv discrete	count=2
arg	to ||| x	count=2
function	of determination (:math r^2) ||| of determination	count=1
class	compute a wald-test ||| model results	count=1
function	transformed ||| sqrt	count=1
function	[function_1] for autoregressive ||| [function_2] [function_1]	count=1
arg	parameter of the power ||| nobs alpha power	count=2
function	inflation factor ||| inflation factor	count=2
class	needed for ||| kalman filter	count=1
class	baseline ||| phreg results	count=1
function	sum ||| sumofsq	count=1
function	reset specification ||| reset	count=1
function	the aic [function_2] ||| [function_2] [function_1]	count=3
class	pareto with ||| my pareto	count=1
module_class	of [class_2] ||| [module_1] likelihood [class_2]	count=1
function	random draw [function] ||| simulated [function]	count=3
function	computes ||| margeff	count=1
function_arg	[function_1] specific key ||| [arg_2] [function_1]	count=6
arg	[arg_1] [arg_2] unit root in a ||| [arg_1] [arg_2]	count=4
function	around [function] method ||| pairwise [function]	count=1
function	extend a ||| extend	count=1
arg	item [arg] ||| [arg]	count=1
function	compute a ||| wald test	count=1
function	approximate inverse covariance ||| calc wdesign	count=1
arg	for 1d parameters ||| unbiased demean	count=1
class	arima p ||| arima	count=1
function	cumulant [function_2] ||| [function_2] [function_1]	count=1
function	a normal distributed ||| normal	count=1
class	from ||| compare means	count=1
arg	of squares ||| x	count=1
function	the [function_1] [function_2] just the exogenous random ||| [function_1] [function_2]	count=1
function	labels [function_2] ||| [function_1] [function_2]	count=1
function	reverse the logistic transform ||| logistic	count=1
function_arg	anova with [arg_2] ||| [function_1] power [arg_2]	count=1
function	tost the interval ||| tost reject interval	count=2
class	[class_1] model ||| [class_2] [class_1]	count=2
function	for silverman normal ||| normal	count=1
function	for probability ||| prob	count=2
function	[function_1] fdr values ||| [function_2] [function_1]	count=2
arg	of regressors ||| exog_idx grid fig	count=1
function_arg	chisquare [arg_2] ||| [function_1] power effect_size nobs [arg_2]	count=1
arg	orthogonal ||| polybase order limits	count=1
arg	the approximate ||| params	count=1
function	the mean ||| mean	count=4
arg	a dataframe ||| dataframe	count=1
function	fitted values ||| fittedvalues	count=1
arg	given ||| exposure offset	count=1
arg	function plots lags ||| x ax lags alpha	count=1
function	log [function_2] ||| [function_2] [function_1]	count=2
function_arg	arma [arg_2] ||| [function_1] acf [arg_2]	count=1
arg	confidence interval for ||| sig	count=1
function	ticks ||| ticks labels	count=1
function	insert column ||| insert	count=1
function	to [function_2] ||| [function_1] [function_2]	count=1
module	method ||| discrete	count=1
module	of [module] dependence structure ||| [module]	count=1
function	determine the ||| limits	count=1
function	trace ab for ||| trace symbanded	count=2
function	trace of the ||| trace	count=1
function	for the ||| init kalman	count=1
arg	the fitted ||| at method atexog dummy	count=2
function_arg	[function_1] of data ||| [function_1] [arg_2]	count=1
function	delta method ||| margeff	count=1
function	regularized fitted ||| est regularized	count=1
class	of ||| factor	count=1
module_class	[module_1] box-cox ||| [module_1] [class_2]	count=10
function	[function_1] probability ||| [function_1] [function_2]	count=1
function	results from the ||| res	count=1
arg	time periods ||| time nlags	count=1
module	values for ||| sandbox stats	count=2
module	series with ||| stats	count=2
arg	interval for a ||| beta_high beta_low sig	count=1
function	generate the ||| mat	count=1
arg	use lagrange multiplier ||| demean use_lr	count=1
function	frequency using ||| spdroots	count=1
class	cdf transformation ||| cdflink	count=1
function	needed for the ||| kalman	count=1
arg	parameters of the ||| params	count=1
function	determine the [function_2] ||| [function_2] [function_1]	count=6
module	[module] leaves ||| [module]	count=3
arg	as a deepcopy ||| tables keep_headers	count=1
arg	of ||| x	count=1
function	cumulative hazard [function_2] ||| [function_2] [function_1]	count=4
arg	function plots lags ||| x ax lags	count=1
function	to compute small number ||| compute	count=1
function	parameters using ||| fit	count=1
class	an aft ||| aft	count=1
function	set the [function_2] ||| [function_1] [function_2]	count=1
arg	or index or array-like ||| index names	count=1
arg	lags on the horizontal ||| ax lags alpha	count=1
module	[module] of ||| [module]	count=1
function	arma ||| arma predict	count=1
arg	[arg_1] string summarizing ||| [arg_1] [arg_2]	count=1
module	for all ||| sandbox stats	count=3
class	of the discrete ||| discrete	count=2
function	date strings ||| dates from str	count=1
arg	given exogenous variables ||| exog exposure	count=1
arg	the approximate inverse ||| mod	count=1
function	sample of an ||| sample	count=1
arg	joint ||| cov_p scale invcov	count=1
arg	is for a generic ||| x	count=1
function	the response ||| response	count=1
function	[function_1] interval ||| [function_2] [function_1]	count=2
function	the probability of success ||| binom	count=1
module	freedom ||| tsa	count=1
function_arg	for arma [arg_2] ||| [arg_2] [function_1]	count=5
function	hypothesis ||| wald test	count=2
module	in an ||| tsa base	count=2
module	a wald-test for ||| base	count=1
function	solve a ||| solve	count=2
arg	a ||| cov_p scale	count=2
function	plot the autocorrelation ||| plot	count=1
class	in model ||| model	count=1
module	matrices ||| tsa statespace	count=1
arg	spectral projected gradient ||| grad start	count=1
function	the confidence ||| conf	count=1
arg	of x ||| x	count=4
class	collect ||| olsinfluence	count=1
function	[function_1] residuals ||| [function_1] [function_2]	count=6
function	by the kalman filter ||| kalman	count=1
arg	variance is the same ||| x idx	count=1
function	obtain the crude ||| observed crude oddsratio	count=1
arg	autocorrelation robust ||| nlags	count=1
arg	shape should ||| shape	count=1
arg	an array with ||| col	count=1
function_arg	from [arg_2] ||| [function_1] y x [arg_2]	count=1
module	number ||| vector_ar	count=2
arg	k or ||| k n	count=1
class	the negative binomial family ||| negative binomial	count=1
module	nodewise_row values for the ||| stats	count=1
class	results parameters ||| results	count=4
module	on the hessian i ||| genmod	count=1
arg	summarize regression ||| yname xname title alpha	count=1
arg	coefficients anderson [arg] correlations ||| [arg]	count=1
function_arg	estimate lag [arg_2] ||| [function_1] [arg_2]	count=1
class	residual after removing ||| unit	count=1
function	by the delta method ||| params	count=1
module	plot ||| tsa vector_ar	count=1
class	the model ||| factor model	count=1
function_arg	model [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] timing ||| [function_2] [function_1]	count=1
function	j x j prediction ||| pred	count=1
class	from ||| olsinfluence	count=1
arg	function func is ||| func low upp args	count=1
function	one ||| one	count=1
module	value of ||| tsa	count=1
module	regression ||| regression	count=6
arg	be used to ||| regression	count=1
function	hac independent of categorical ||| all hac	count=1
module	for simultaneous tests ||| stats	count=1
function	standard errors of the ||| bse	count=2
arg	returns the value ||| resid omega	count=1
function	a model from a ||| from	count=1
function	compute [function_2] ||| [function_2] [function_1]	count=2
arg	linear hypothesis ||| r_matrix	count=1
arg	order statistics ||| min_uncensored	count=1
class	a two sample z-test ||| gof chisquare	count=1
arg	other info needed for ||| cls params	count=1
arg	is the ||| y x	count=1
function	a ||| update	count=1
class	hypothesis ||| desc stat uv	count=1
function	transforms the log ||| star	count=1
arg	x is a ||| x	count=2
function	basis of the ||| basis	count=1
arg	pairwise comparisons with a ||| count nobs value multitest_method	count=1
function	a wald-test for ||| wald	count=1
class	compute ||| likelihood model	count=1
function	of datetime ||| dates from	count=1
module	function ||| genmod	count=1
function	correlation sums for embedding ||| correlation sums	count=1
function	hessian of the log ||| hessian	count=1
arg	inverse covariance ||| params	count=1
function_arg	derivative of [arg_2] ||| [function_1] [arg_2]	count=1
function	ma ||| ma	count=1
function	mean of bivariate data ||| mv mean	count=1
function	matrices with singular values ||| coefficients from multivariate pacf python	count=1
class	and time stata ||| stata	count=1
function	list of ||| dates	count=1
module	correction ||| vector_ar	count=1
function	a possibly time-varying vector ||| vector shape	count=1
arg	a joint ||| invcov	count=1
arg	apply linear transform ||| transform group_iter	count=1
arg	summarize ||| alpha start title model_name	count=1
function_arg	[function_1] exog see ||| [arg_2] [function_1]	count=1
module	fixed effects ||| sandbox panel	count=1
function	of marginal effects by ||| cov params	count=1
function	[function_1] covariance ||| [function_1] [function_2] steps	count=2
class	poisson ||| poisson	count=6
class	f-test ||| ftest	count=2
function	psi function notes ||| psi	count=3
function	to stata's default ||| default stata fmt	count=2
arg	r this ||| r weights	count=1
function	hurvich criteria for the ||| hurvich	count=1
function	a ||| dates from str	count=2
function	an affine ||| affine	count=1
arg	q ||| q	count=3
arg	a new empty ||| iterable	count=1
function_arg	[function_1] interval for ||| [function_1] kurt [arg_2]	count=1
class	least trimmed [class_2] ||| [class_2] [class_1]	count=4
class	stata ||| stata	count=1
class	computes the significance value ||| reg coef	count=1
class	two independent ||| normal ind	count=1
module_class	return string [class_2] ||| [module_1] [class_2]	count=2
function	cooks ||| cooks	count=1
arg	endog ||| endog	count=3
arg	one ||| value nobs alpha alternative	count=1
function	from each ||| from	count=1
function_arg	hessian parameters ||| hessian factor params	count=3
function	forecast at ||| forecast	count=1
function	confidence intervals [function_2] ||| [function_2] [function_1]	count=2
function	function for each ||| function	count=1
arg	each count level ||| exposure offset	count=1
module	date strings ||| tsa	count=1
function	'data' contains [function] entries ||| has [function]	count=1
function_arg	violin [arg_2] ||| [function_1] [arg_2]	count=2
arg	[arg_1] [arg_2] where missing observations are ||| [arg_1] [arg_2]	count=2
function	to [function] ||| [function] tweedie	count=3
class	clip logistic values ||| logit	count=1
function	or an integer and ||| or	count=1
function_arg	confidence [arg_2] ||| [arg_2] [function_1]	count=11
function_arg	[function_1] [arg_2] ||| [function_1] power effect_size nobs [arg_2]	count=7
class	get factor ||| factor	count=1
arg	get bins for chisquare ||| rvs distfn arg nsupp	count=1
function_arg	[function_1] in ||| [arg_2] [function_1]	count=2
function	test of ||| test	count=1
function	[function_1] compute ||| [function_2] using [function_1]	count=1
arg	function func is monotonic ||| func	count=1
module_class	[module_1] model ||| [module_1] [class_2]	count=3
function	binomial test ||| binom test	count=2
arg	be used to test ||| regression autolag	count=1
module	product of [module_2] ||| [module_1] [module_2]	count=2
module	nodewise_row values for ||| stats	count=1
function	[function_1] distance ||| [function_1] [function_2]	count=1
class	huber's t ||| huber t	count=4
arg	or lower form ||| b lower	count=1
arg	plots lags on the ||| ax lags	count=1
arg	calculates the nodewise_weightvalue ||| nodewise_row idx	count=1
function	full parameter ||| param	count=1
function	the probability density function ||| pdf	count=1
function	inflation [function_2] ||| [function_2] [function_1]	count=4
function	the default ||| default	count=1
function	the loglikelihood for ||| loglike	count=1
module	distributions with 1 shape ||| distributions	count=2
function	score ||| score	count=8
arg	structure to a given ||| rank ctol lam_min	count=1
arg	whether variance is the ||| x idx	count=1
arg	objects in the ||| pvalues group_name	count=1
class	effects ||| one way mixed	count=2
module	error of the ||| regression	count=1
function	via convolution ||| convolution	count=1
function	correlation with default ddof ||| corrcoef	count=1
function	[function_1] kurtosis measures ||| [function_2] [function_1]	count=1
function	the probability density ||| pdf	count=1
function_arg	[function_1] labels on ||| [arg_2] [function_1]	count=1
module	for a ||| stats	count=2
module_class	the [class_2] ||| [module_1] [class_2]	count=48
arg	columns according ||| ar_coefs	count=1
function_arg	[function_1] [arg_2] ||| [function_1] loc [arg_2]	count=2
function	compute a wald-test for ||| wald	count=1
function	all looo regressions ||| params not obsi	count=2
arg	canonical correlation coefficient ||| x1 x2 demean	count=2
function	with ||| get	count=2
module	check whether the ||| tsa	count=2
function	table analysis ||| summary	count=1
function	method to update ||| update	count=1
function	location of ||| loc	count=2
function	the ceres residuals ||| ceres resids	count=1
function	list of datetime ||| dates from str	count=1
arg	is ||| exog transform	count=2
arg	drop_idx ||| drop_idx sparse dtype	count=1
function	matrices with singular ||| multivariate pacf python	count=1
function	values [function] ||| fitstart [function]	count=1
function	normal ||| normal	count=4
class	unit instance ||| unit	count=1
function	false [function] is ||| [function]	count=1
arg	a contingency table ||| horizontal	count=1
module	table for ||| stats	count=2
function_arg	subset [arg_2] ||| [arg_2] [function_1]	count=1
module	[module] the ||| [module]	count=15
class	counter object and ||| counter	count=1
module	parameter given by ||| regression	count=1
arg	array with correlations determined ||| n num_nonconst_covariates	count=1
function	a list ||| from str	count=1
function	score residuals ||| score residuals	count=1
function	returns partial residuals ||| partial	count=1
class	identical means this ||| compare means	count=1
arg	maxfact factors the ||| maxfact	count=1
class	for ||| filter	count=1
function_arg	[function_1] to y ||| [arg_2] [function_1]	count=1
function	corresponding to the distribution ||| distribution	count=1
arg	indexes [arg] split data ||| [arg]	count=3
function	deviance [function_2] ||| [function_2] [function_1]	count=2
function	generic bivariate [function_2] ||| [function_1] [function_2]	count=1
module_class	arma [class_2] ||| [module_1] [class_2]	count=3
function	effects ||| cov	count=1
function	missing ||| plot missing	count=1
function	is ||| call	count=1
arg	one sample proportion the ||| nobs alpha	count=1
function	create new [function_1] [function_2] covariance estimator as default ||| [function_2] [function_1]	count=2
function	anscombe residuals for ||| resid anscombe	count=4
module	needed for the ||| kalmanf	count=1
module	of white noise ||| vector_ar	count=1
module	of ||| tsa vector_ar	count=4
function	values for a ||| update	count=1
arg	calculate sum of squares ||| x	count=1
function	names of exogenous ||| names	count=1
function	likelihood function ||| likelihood	count=1
arg	x * [arg] * ||| results [arg]	count=1
arg	calculate a ||| indicators embedding_dim	count=1
function	local ||| local	count=1
function	arbitrary matrices to matrices ||| constrain sv	count=1
module	the ||| regression	count=1
function_arg	a monotone [arg_2] ||| [function_1] [arg_2]	count=3
class	cross validation provides train/test ||| leave	count=1
arg	statistic divided by nobs ||| nobs n_bins alpha	count=1
arg	x by time or ||| x	count=1
function	the vector ||| copy missing vector	count=1
function	sorted [function] helper ||| [function]	count=1
module	strings and returns a ||| tsa	count=1
function	stata ||| stata elapsed date	count=1
arg	[arg_1] on horizontal ||| [arg_2] [arg_1]	count=4
module	on ||| base	count=1
function	out of sample ||| predict out of sample	count=1
arg	upper left corner of ||| reorder_rows reorder_cols	count=1
function_arg	[function_1] impulse ||| [function_1] orth [arg_2]	count=1
arg	fitted mean response ||| endog mu freq_weights scale	count=4
function	model for a given ||| fit	count=1
function	info needed for the ||| kalman state	count=1
function_arg	determinant of [arg_2] ||| [function_1] [arg_2]	count=1
function	of ||| of	count=3
function	display (3 ||| compute s	count=1
class	loglikelihood [class] ||| [class]	count=1
module	period's regime (and ||| regime_switching	count=1
function	orders of each ||| orders	count=1
function	[function_1] ratio for ||| [function_1] [function_2]	count=2
function	[function_1] effects for ||| [function_2] [function_1]	count=2
arg	creating the ||| new_entries x_copy_i width	count=1
arg	measure of discrepancy between ||| lambd axis	count=1
function	counts from the most ||| most	count=1
arg	onto the components enthresh ||| vals enthresh	count=1
function	[function_1] proportions ||| [function_1] [function_2]	count=1
arg	a row ||| row	count=1
arg	by noise at noise_level ||| noise_level	count=2
class	effects ||| one way mixed results	count=1
function_arg	solve a [arg_2] ||| [arg_2] [function_1]	count=1
function	indices for ||| combine indices	count=1
function	standard errors ||| bse	count=3
function_arg	[function_1] interval ||| [arg_2] [function_1]	count=6
function	sequence of date strings ||| str	count=1
function	harvey collier ||| harvey collier	count=2
arg	[arg_1] contingency table ||| [arg_1] [arg_2]	count=1
arg	the first third of ||| alternative use_f	count=1
class	of [class] ||| [class]	count=2
function	roots of autoregressive ||| arroots	count=1
arg	variance is ||| x idx split	count=1
arg	approximate inverse ||| mod params	count=1
class	simulation smoothing does ||| simulation smooth	count=1
arg	whether restricted model is ||| restricted large_sample	count=1
module	cpunish ||| cpunish	count=2
function	the data ||| data	count=1
function_arg	mutual [arg_2] ||| [arg_2] [function_1]	count=2
module	array frequency [module] ||| [module]	count=1
module_class	for [class_2] ||| [module_1] ftest [class_2]	count=1
module	the link function ||| genmod families	count=3
arg	system matrices and ||| cls params arma_model	count=1
function	options ||| get	count=1
function	and returns ||| from str	count=1
arg	of vals ||| vals dcrit	count=1
function	results ||| summary str	count=1
function	corresponding detection [function_2] ||| [function_1] [function_2]	count=2
arg	one sample ||| nobs alpha	count=1
arg	data as binary ||| endog exog	count=2
arg	is ||| params exog transform	count=2
function	computes the ||| params	count=1
function	marginal ||| margeff cov params	count=2
arg	y and [arg_2] ||| tools drop missing [arg_1] [arg_2]	count=1
module	correction factor for ||| stats	count=1
function	most [function_2] ||| [function_1] [function_2] n	count=1
arg	correlation matrix to ||| corr	count=1
class	model ||| results	count=2
class	log-likelihood of probit ||| probit	count=1
module	compute var ||| vector_ar	count=1
function	[function_1] table ||| [function_1] [function_2]	count=1
arg	omitted variables the ||| params_constrained k_constraints exog_extra observed	count=1
function	the score residuals ||| score residuals	count=2
arg	approximate inverse ||| params	count=1
arg	of the ||| nobs	count=1
module	function for ||| stats	count=2
arg	v degrees of freedom ||| v	count=2
function	computed using ||| oim	count=1
arg	effects by ||| model params	count=1
function	other info needed for ||| kalman	count=1
function	no autocorrelation ||| acorr ljungbox	count=1
class	computes ||| kernel reg	count=1
arg	of x by time ||| x	count=1
module	parse ||| tsa vector_ar	count=1
module	[module] (x'x)^ ||| [module]	count=1
function	fits the ||| fit	count=1
function	by ||| margeff cov	count=1
module	erase columns [module] zeros can ||| [module]	count=1
function	a test that ||| test	count=1
function	loglikelihood for observations ||| loglikeobs	count=1
arg	time ||| time nlags	count=1
function	the first variable name ||| endog name	count=1
function	plot the mean function ||| plot	count=1
function_arg	[function_1] exog ||| [arg_2] [function_1]	count=1
function	get the location of ||| get	count=1
arg	test whether variance is ||| x	count=1
class	[class_1] decomposition of ||| [class_1] [class_2]	count=1
arg	helper ||| x	count=1
module	in likelihood evaluation ||| tsa regime_switching	count=4
arg	a ||| method alpha start_params	count=2
function_arg	generic [arg_2] ||| [arg_2] [function_1]	count=1
class	gaussian ||| gaussian	count=3
arg	by the delta method ||| params	count=1
function_arg	nominal [arg_2] ||| [arg_2] [function_1]	count=4
arg	or index or ||| index names	count=1
class	can be printed ||| tukey hsdresults	count=1
arg	x by ||| x index counts	count=1
function	of shape ||| shape	count=1
function	transform arbitrary matrices ||| constrain sv	count=1
function	computes the confidence ||| conf	count=1
function	calculate local fdr values ||| local fdr	count=1
function	of date strings and ||| str	count=1
arg	the unconditional [arg_2] ||| [arg_2] [arg_1]	count=2
function	calculates the ||| wdesign mat	count=1
function	scipy optimize fmin_slsqp() ||| slsqp	count=1
function_arg	[function_1] fitted ||| [function_1] [arg_2]	count=1
function	to reverse the logistic ||| logistic	count=1
arg	plot from ||| data index ax	count=1
module	function to calculate ||| tsa	count=1
function	by the delta method ||| cov params	count=1
module	[module] the reduced ||| [module]	count=3
function_arg	[function_1] data as ||| genmod ordinal gee setup [function_1] [arg_2]	count=1
function	the integer row labels ||| maybe reset	count=1
arg	a parameter ||| param_num	count=1
arg	compute a wald-test ||| scale	count=1
function	the measurement [function_2] ||| simulation smooth results simulated [function_1] [function_2]	count=1
arg	[arg_1] returns 1d ||| [arg_2] [arg_1]	count=2
function	weighted by hazard ||| weighted	count=1
function	wald-test for ||| wald	count=1
arg	equal spaced time ||| x time nlags	count=1
function	list of ||| from str	count=1
class	negative binomial family ||| negative binomial	count=1
class	[class_1] [class_2] x currently works only ||| [class_1] [class_2] filter2 x pad	count=3
function	all pairs of ||| allpairs	count=1
arg	product intersection ||| groups prefix sep return_labels	count=1
arg	with kernel ||| x kernel	count=1
arg	plots lags ||| lags alpha	count=1
module	return distribution of ||| sandbox distributions	count=4
function	estimates the regularized fitted ||| regularized	count=1
function_arg	ccpr [arg_2] ||| [arg_2] [function_1]	count=1
function	calculate all correlation sums ||| correlation sums	count=1
function	a mixture ||| mixture	count=1
function_arg	[function_1] a row ||| [arg_2] [function_1]	count=1
function	generates a 2-dimensional ||| plot2d	count=1
arg	asymmetric ||| theta k	count=1
module	list ||| tsa base	count=2
module	distribution for equal shape ||| sandbox distributions	count=1
function	kurtosis measures in ||| kurtosis	count=1
function	variable the variance ||| variance	count=1
arg	used to test for ||| regression autolag	count=1
arg	parameter and ||| param_num	count=1
module_class	[module_1] smoothing does ||| [module_1] simulation [class_2]	count=1
module	initialization of ||| tsa	count=2
module	cusum test for ||| stats	count=1
function	string the formatted ||| as string	count=3
arg	compute a ||| scale	count=1
arg	complete equal spaced time ||| x time nlags	count=1
function	of squares of press ||| press	count=1
function_arg	update the parameters ||| update params	count=2
module	not longer than the ||| tsa	count=1
arg	computes the ||| exog	count=1
arg	or index or ||| index	count=1
module	model ||| discrete	count=12
arg	if ||| obj	count=1
arg	[arg_1] ar and ||| [arg_2] [arg_1]	count=2
arg	provided exog ||| exog	count=1
class	info needed for the ||| filter	count=1
function_arg	limit [arg_2] ||| [function_1] [arg_2]	count=1
arg	specific key ||| key base_index	count=4
arg	enthresh ||| enthresh	count=1
function	wald-test for ||| test	count=1
function	[function] attribute to ||| [function]	count=2
class	smoothing does not ||| smooth	count=1
module	another distribution int ||| sandbox distributions	count=1
arg	observations ||| df	count=1
module	the likelihood is ||| tsa statespace	count=1
arg	spaced time periods ||| x time	count=1
arg	function ||| z	count=10
function	the delta method ||| cov	count=1
module	used [module] likelihood ||| [module]	count=1
arg	to nlags ||| nlags	count=1
arg	updates the ||| transformed complex_step	count=1
arg	of the [arg_2] ||| [arg_1] [arg_2]	count=7
arg	scatter of the ||| scatter	count=1
function_arg	to transformed [arg_2] ||| [arg_2] [function_1]	count=1
function	to ||| to	count=2
function	an index or ||| index	count=1
function	matrix equations ||| matrix	count=1
function	return x minus ||| detrend	count=1
class	factor-structured coefficients ||| factored psdmatrix	count=1
function	z-test ||| zstat generic2	count=1
arg	x y normed=true ||| x y	count=1
function	sequence of date strings ||| dates from str	count=1
arg	q coefficients ||| q	count=1
class	[class_1] effects ||| [class_1] [class_2]	count=1
arg	at (endog mu freq_weights ||| endog mu freq_weights	count=1
module_class	a p-p ||| graphics prob	count=1
function_arg	predict [arg_2] ||| [function_1] [arg_2]	count=1
function	returns partial residuals for ||| partial resids	count=1
function	string padded with ||| pad	count=1
arg	for a ||| method	count=1
arg	f ||| x f	count=1
class	endog in an nominal ||| nominal	count=1
module	squares ||| tsa	count=1
function	[function_1] names ||| [function_2] [function_1]	count=2
arg	interval for a ||| sig	count=2
module_class	[module_1] model ||| [module_1] likelihood [class_2]	count=1
class	factor decomposition ||| factor model univariate	count=1
class	parameter estimates ||| results	count=1
function_arg	[function_1] debiasing parameters ||| [arg_2] [function_1]	count=2
function	turns a sequence of ||| dates from	count=1
function	needed ||| init kalman	count=1
function	computes the ||| cov params	count=1
class	contrast ||| contrast	count=2
module	time series with consecutive ||| stats	count=1
function_arg	lowess function [arg_2] ||| [function_1] endog [arg_2]	count=2
class	[class_1] function ||| [class_2] [class_1]	count=1
function	test statistic see ||| compute test	count=1
arg	summarize ||| start title model_name	count=1
module	of the model ||| tsa statespace	count=2
function	covariance [function_2] ||| [function_2] [function_1]	count=4
arg	an array with lags ||| x col lags	count=1
function	annotate [function_2] ||| [function_2] [function_1]	count=1
arg	by the ||| params exog	count=1
function	[function_1] names list ||| [function_1] [function_2] exog_re	count=3
function	integer row labels ||| maybe reset	count=1
arg	[arg_1] x ||| [arg_2] [arg_1]	count=3
arg	_est_regularized_debiased and returns the ||| results_l threshold	count=1
module	of the ||| stats	count=1
function	a wald-test ||| wald test	count=1
function	information criteria for lagorder ||| info criteria	count=1
module	the current period's regime ||| tsa regime_switching	count=2
function	weighted ||| weighted	count=1
arg	the parameters ||| params	count=1
module	another distribution ||| sandbox distributions	count=1
function	[function_1] correlation coefficient ||| [function_2] [function_1]	count=1
function	the basis of the ||| basis	count=1
function_arg	create [function_1] [arg_2] diagonal ||| [function_1] equi [arg_2]	count=1
function	and other info ||| state	count=1
function	gradient of function or ||| approx fprime	count=1
function	[function_1] a recarray ||| [function_2] [function_1]	count=1
function	returns a list of ||| dates from str	count=1
module	distribution function ||| sandbox distributions	count=1
function_arg	[function_1] model ||| [arg_2] [function_1]	count=6
class	for huber's ||| huber	count=1
module	model coefficients notes ||| tsa vector_ar	count=1
class	ratio ||| ratio	count=2
arg	lags on the ||| x ax lags	count=1
module	sequence ||| base	count=1
arg	groups ||| pvals groups	count=1
function	the interval [function_2] ||| [function_2] [function_1]	count=16
function	fitting for arma ||| arma predict	count=1
arg	item [arg] array-like ||| [arg]	count=1
function_arg	hessian matrix [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] numbers ||| [function_1] [function_2]	count=3
arg	aic bic and r2_adj ||| skip_crossval cv_iter	count=1
arg	regression that goes ||| b0_vals param_nums method stochastic_exog	count=1
function_arg	[function_1] the fitted ||| [function_1] [arg_2]	count=2
arg	to n ||| n	count=1
function	of datetime ||| dates	count=1
function	list of ||| str	count=1
module	method of ||| sandbox distributions	count=1
class	random effects ||| mixed lm	count=2
arg	on group ||| group	count=1
function	helper function [function] of ||| [function]	count=1
function	lutkepohl ||| lutkepohl	count=1
module	of white noise covariance ||| vector_ar	count=1
arg	optional model : ||| model	count=1
arg	and labels on horizontal ||| data labels	count=1
arg	computes the variance-covariance of ||| params exog cov_params	count=1
arg	computes ||| model params exog	count=1
function_arg	linear model ||| multi ols model	count=1
function	chisquare statistic ||| chisquare	count=1
module_class	[module_1] kalman filter ||| [module_1] [class_2]	count=2
class	one factor anova ||| anova	count=1
module	the data [module] data and ||| datasets [module]	count=2
class	model instance ||| likelihood model	count=1
function	joblib ||| joblib	count=1
arg	symmetric [arg] around mean ||| [arg]	count=1
function_arg	ceres residuals [arg_2] ||| [function_1] [arg_2]	count=2
class	significance value for ||| reg coef	count=1
arg	if a polynomial ||| polynomial	count=1
module	and returns a list ||| tsa	count=1
function_arg	[function_1] data as ||| genmod nominal gee setup [function_1] [arg_2]	count=1
function	from sif to ||| to	count=1
class	least trimmed [class_2] ||| [class_1] [class_2]	count=4
module_class	[module_1] [class_2] x currently works only ||| [module_1] [class_2]	count=1
module	other info ||| tsa	count=1
function_arg	[function_1] [arg_2] diagonal ||| [function_1] equi [arg_2]	count=1
arg	coefficients and variances ||| result betas tmp	count=1
function	a ||| wald	count=2
arg	v degrees of ||| v	count=2
class	freedom ||| varresults	count=1
module	likelihood evaluation to ||| regime_switching	count=2
arg	against a ||| exog_idx	count=1
module	strings ||| tsa base	count=3
arg	plot ||| xdata labels	count=1
function	the regularized fitted parameters ||| regularized	count=1
module	with degrees of ||| tsa vector_ar	count=1
class	[class_1] hypothesis ||| [class_2] [class_1]	count=2
module	graphical test for ||| sandbox	count=1
arg	and in-sample fitting for ||| start end	count=1
function	files from [function] ||| parse [function]	count=3
arg	of discrepancy between ||| lambd axis	count=1
class	model ||| factor model	count=1
module	noise covariance ||| tsa vector_ar	count=1
class	test statistic ||| test reg	count=1
module_class	[module_1] binomial ||| [module_1] negative [class_2]	count=1
arg	results ||| results	count=3
function	strings ||| dates from	count=1
arg	of marginal ||| params exog	count=1
function_arg	[function_1] specific ||| [arg_2] [function_1]	count=6
arg	a ||| alpha	count=2
function	of requested equation ||| eq index	count=1
function	to ||| wdesign mat	count=2
function	/ covariance matrix computed ||| cov params	count=2
function	numbers for ||| numbers	count=1
function	of datetime ||| str	count=1
arg	lags ||| x ax lags alpha	count=1
function	array starting parameters for ||| start params	count=3
module	family ||| genmod	count=2
module	with consecutive equal ||| stats	count=1
class	for marginal effects ||| geemargins	count=1
function	hierarchical way ||| hierarchical	count=1
arg	given exogenous ||| exog exposure	count=1
function_arg	kurtosis measures [arg_2] ||| [function_1] y axis [arg_2]	count=1
function	via convolution centered and ||| convolution	count=1
arg	each observation ||| obs cohn	count=1
arg	integer [arg] i e ||| [arg]	count=1
arg	flat to [arg_2] ||| [arg_2] [arg_1]	count=2
module	for lagorder selection ||| vector_ar	count=1
module	test for ||| stats	count=15
module	of x given y ||| sandbox	count=1
arg	maxfact factors the selection ||| maxfact	count=1
arg	canonical ||| x1 x2 demean fullrank	count=1
module	the ||| statespace	count=12
arg	and scale only ||| scale	count=2
function	to obtain the factors ||| calc factors	count=1
function	for the mean ||| mean	count=1
arg	the null hypothesis ||| value ddof	count=1
function	compute var p loglikelihood ||| llf	count=1
module	to ||| sandbox	count=12
arg	the ||| params	count=11
function	sims-zha error band method ||| err band sz2	count=1
function_arg	[function_1] labels ||| [function_1] index [arg_2]	count=2
arg	to save typing ||| std_diff alternative	count=1
arg	apply ||| run_filter	count=1
arg	an intercept ||| intercept	count=1
class	inverting roots ||| arma process	count=1
function	freedom ||| df fit	count=1
function	knockoff design matrix ||| design knockoff	count=2
arg	of marginal ||| model	count=1
arg	by ||| model params	count=1
function	marginal effects ||| cov	count=1
arg	1d ||| x unbiased demean	count=1
class	for lagorder selection ||| varresults	count=1
module	the ||| tsa	count=18
module	and ||| sandbox	count=2
function	compute a wald-test ||| wald	count=1
class	covariance ||| covariance	count=1
arg	the unconditional maximum likelihood ||| start_params method maxiter tol	count=1
function	to obtain the crude ||| observed crude	count=1
class	exogenous ||| binary	count=1
function	of shape ||| adjust shape	count=1
function	and other ||| init kalman state	count=1
function	parameter ||| param	count=1
module	sequence of ||| base	count=1
arg	data confidence interval ||| alpha	count=1
arg	[arg] proper probability ||| [arg]	count=1
arg	observed [arg_2] ||| [arg_2] [arg_1]	count=1
module	set initialization of ||| tsa	count=2
class	[class_1] odds ratio ||| [class_1] [class_2]	count=1
function	odds ratio for a ||| odds ratio	count=1
function	covariance of the ||| cov	count=1
function_arg	[function_1] and labels ||| [function_1] ax data [arg_2]	count=1
function	solve for ||| solve power	count=5
class	for kernel density ||| kernel	count=1
class	the parameter ||| results	count=1
module	data and ||| datasets	count=2
module	number of ||| tsa vector_ar	count=2
class	for tukey's [class_2] ||| [class_1] [class_2]	count=2
function	all pairs of k ||| allpairs	count=1
arg	y normed=true ||| y	count=1
class	mixed effects ||| mixed	count=1
function	load the ||| load	count=19
function_arg	[function_1] [arg_2] ||| [function_1] ar ma [arg_2]	count=2
arg	polynomial ||| polynomial	count=1
arg	a wald-test ||| r_matrix cov_p scale	count=1
arg	[arg_1] parameters ||| [arg_2] [arg_1]	count=11
class	provides regression results ||| elorigin regress	count=1
function_arg	the confidence [arg_2] ||| [arg_2] [function_1]	count=4
arg	any model with ||| start_params fargs	count=1
module	scotvote ||| scotland	count=1
arg	a wald-test ||| r_matrix	count=1
arg	1d parameters ||| y unbiased demean	count=1
function	the ||| init kalman state	count=4
function	gaussian ||| gaussian	count=3
module_class	[module_1] binomial ||| [module_1] negative [class_2] inverse deriv z	count=1
function	array starting ||| start	count=3
function	the random effects for ||| random effects	count=1
function	the ||| margeff cov	count=2
module_class	[module_1] least ||| [module_1] [class_2]	count=2
function	test_kurt ||| kurt	count=1
function	the data home ||| clear data home	count=2
module	[module_1] likelihood ||| [module_1] [module_2]	count=18
function	effects for each group ||| effects	count=1
module_class	the least squares ||| robust least squares	count=1
arg	for iterating over the ||| as_dict	count=1
arg	series x x ||| x	count=1
function	of the stata date ||| stata	count=1
module	the [module_2] ||| [module_1] [module_2]	count=4
function	calculates the ||| calc wdesign	count=1
function	of joe ||| transform joe	count=1
function	em step [function_2] ||| [function_2] [function_1]	count=4
function	and ||| str	count=1
function	are needed ||| mpl	count=1
arg	the variance-covariance of ||| params exog cov_params	count=1
module	in likelihood evaluation to ||| tsa regime_switching	count=2
arg	axis ||| ax	count=1
module	estimates the ||| base	count=1
arg	one sample proportion the ||| nobs	count=1
function	an affine transform for ||| affine	count=1
arg	[arg_1] are different ||| [arg_2] [arg_1]	count=9
module	lagorder ||| vector_ar	count=1
arg	phase of creating ||| new_entries x_copy_i width	count=1
function	confidence intervals ||| ci	count=4
arg	data confidence ||| alpha	count=1
arg	marginal ||| model params	count=1
function_arg	create [arg_2] ||| [function_1] [arg_2]	count=1
function	sequence of date strings ||| dates	count=1
function	run ||| run	count=1
arg	_est_regularized_debiased and returns the ||| results_l	count=1
arg	with respect to ||| calc_fe	count=1
function	regression [function_2] ||| [function_1] [function_2]	count=1
function	criterion ||| rho	count=4
function_arg	the [function_1] [arg_2] ||| [function_1] sqrt params [arg_2]	count=2
function	[function_1] correlation ||| [function_2] [function_1]	count=1
function	inverse ||| calc wdesign	count=1
function_arg	limit for [arg_2] ||| [arg_2] [function_1]	count=1
module	a simple ordered set ||| graphics	count=1
arg	construct ||| shift_zeros	count=1
arg	other info ||| cls	count=1
function	ticks and ||| ticks labels	count=1
function_arg	a regression [arg_2] ||| [arg_2] [function_1]	count=3
arg	or restriction matrix ||| nm	count=2
arg	[arg_1] observed ||| [arg_2] expected [arg_1]	count=3
arg	effects ||| model params exog	count=1
class	plots ||| gauss process	count=1
function_arg	[function_1] statistic x ||| [function_1] [arg_2]	count=1
function	an affine transform ||| affine	count=1
class	for unit ||| unit	count=1
function	datetime ||| from	count=1
module	for a ||| base	count=1
function	to ||| calc	count=1
class	in ipython ||| summary	count=1
function	the approximate ||| wdesign	count=1
class	for tukey's biweight ||| tukey biweight	count=2
function	the covariance [function_2] ||| [function_2] [function_1]	count=4
function_arg	the derivative [arg_2] ||| [arg_2] [function_1]	count=1
function	hac independent ||| s all hac	count=1
arg	mean_params and covariance matrix ||| mean_params	count=1
arg	in-sample ||| params start end probabilities	count=1
module	stata manual on ||| base	count=1
function	between two ordinal variables ||| ordinal	count=1
function	transform matrices with singular ||| multivariate pacf python	count=1
function	the l1 regularized problem ||| l1	count=1
function	multivariate [function_2] ||| [function_1] [function_2]	count=7
function	ceres ||| ceres	count=1
function	of ||| margeff	count=1
function	of dispersion ||| dispersion	count=2
function	parameters for maximum ||| params	count=2
module	in likelihood ||| tsa regime_switching	count=6
arg	variance-covariance of ||| model params exog cov_params	count=1
class	effects ||| mixed lm	count=6
function	results ||| summary col	count=1
function_arg	[function_1] corresponding distributedmodel ||| [arg_2] [function_1]	count=2
module	the series ||| tsa	count=1
module	the delta method ||| discrete	count=1
class	of wls ||| wls	count=1
function	covariance for ||| cov	count=1
arg	effects by ||| params	count=1
function	draw [function] from ||| simulated [function]	count=1
arg	summary for regression results ||| yname xname title alpha	count=1
function	heteroskedasticity of standardized ||| heteroskedasticity	count=1
function	the parameter ||| get	count=1
arg	evaluated at params ||| params	count=2
function	sequence ||| dates from	count=1
function	time-varying vector ||| vector shape	count=1
arg	y ||| y df	count=1
arg	variance-covariance of ||| exog cov_params	count=1
function	factor is ||| factor	count=1
module	generate ||| base	count=1
function	independent ||| indep	count=1
arg	a ||| a scale	count=1
function	normal inverse [function_2] ||| [function_1] [function_2]	count=2
arg	covariance matrix ||| cov	count=1
arg	matrices with singular values ||| unconstrained order k_endog	count=1
class	a ||| likelihood model	count=2
module	specific [module] ||| [module]	count=2
function	covariance matrix of the ||| cov	count=1
arg	fit_constrained methods or ||| constraints start_params	count=1
function	plots for ||| plot	count=1
arg	reference line ||| line x y	count=1
function_arg	[function_1] plot ||| [function_1] [arg_2]	count=2
function	forecast at the ||| forecast	count=1
arg	gradient ||| grad start	count=1
arg	is the ||| x idx split	count=1
function	[function_1] autoregressive ||| [function_1] [function_2]	count=1
function_arg	location of [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	[function_1] provided exog ||| [arg_2] [function_1]	count=1
module	or restriction matrix for ||| stats	count=2
function	crude ||| crude oddsratio	count=1
function	autocovariance function [function_2] ||| [function_2] [function_1]	count=2
module	the ||| genmod families	count=4
module	for no ||| sandbox stats	count=1
arg	covariance ||| mod params	count=1
class	significance value for the ||| reg coef	count=1
class	mean ||| mean	count=5
function	pdf function ||| pdf	count=1
arg	_est_regularized_debiased and returns ||| results_l threshold	count=1
class	[class] filter ||| [class]	count=3
arg	wald-test for a ||| r_matrix cov_p scale	count=1
arg	[arg_1] a ||| [arg_2] [arg_1]	count=4
function	periodogram for arma ||| arma periodogram	count=3
function	sum of ||| sum	count=1
function	two ordinal variables ||| ordinal	count=1
module	model coefficients ||| tsa vector_ar	count=2
function	format for this type ||| to	count=1
module	gmm ||| sandbox regression	count=1
class	for a ||| micedata	count=1
function	unconstraint the linear constraint ||| constraint	count=1
arg	for any ||| fargs	count=1
arg	b nested within ||| b	count=1
function	from ||| data	count=1
module	compute var p ||| vector_ar	count=1
class	arma p q ||| arma	count=1
function	arma models parameters ||| arma	count=1
function	control ||| pairscontrol	count=1
function	annotate [function_2] ||| [function_1] [function_2]	count=1
module_class	[module_1] [class_2] ||| [module_1] ttest [class_2]	count=1
function_arg	test [arg_2] ||| [function_1] [arg_2]	count=8
function	probability of success ||| binom	count=1
function_arg	[function_1] environment ||| [function_1] [arg_2]	count=4
function	full parameter names list ||| param names	count=1
function	function of an arma ||| arma	count=1
function	gradient for the ||| calc grad	count=1
class	mediation analysis ||| mediation	count=1
function	errors of ||| errors	count=1
arg	concatenate ||| axis allow_mix	count=1
class	derivative of the inverse [class_1] [class_2] transform ||| [class_1] [class_2]	count=1
module	measure for ||| stats	count=1
arg	assumes we have complete ||| weights_func	count=1
arg	is the same in ||| y x idx	count=1
function_arg	squares statistic [arg_2] ||| [function_1] alpha [arg_2]	count=1
function	ccpr ||| ccpr	count=2
class	theoretical ||| varprocess	count=1
arg	that outs smoothed estimates ||| exog frac it	count=2
function	parameter component ||| components	count=1
function	the four ||| robust	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2] results	count=1
function	dot product of the ||| dot	count=1
module	to ||| base	count=1
class	filter [class] x currently ||| arma [class]	count=1
function	ratio for a list ||| ratio	count=1
function	[function_1] arma process ||| [function_2] [function_1]	count=2
module	psturng ||| stats libqsturng	count=1
function	the lambda ||| lambda	count=1
function	standard ||| standard	count=1
function	pools ||| combine	count=1
function	[function_1] [function_2] ||| [function_1] l1 [function_2]	count=3
function	chisquare type gof tests ||| gof	count=1
function	starting values [function] distribution parameters ||| fitstart [function]	count=1
arg	summarize [arg_2] ||| [arg_2] [arg_1]	count=2
module	model ||| tsa	count=1
arg	exogenous ||| exog	count=1
function_arg	test if [arg_2] ||| [function_1] [arg_2]	count=6
arg	construct a stratifiedtable object ||| cls var1 var2 strata	count=1
class	quantreg model ||| quant reg	count=1
module	endog duration ||| duration	count=2
arg	function f returns 1d ||| f epsilon	count=1
function	computes the test statistic ||| test	count=1
arg	data ||| endog exog groups time	count=2
arg	1d ||| x y unbiased demean	count=1
function	marginal effects of ||| margeff	count=1
function	test of [function_2] ||| [function_2] [function_1]	count=1
module	for a single ||| imputation	count=1
arg	the given groups ||| pvals groups	count=1
arg	throws away the ||| x1 x2 alternative usevar	count=1
arg	parameters by matching quantiles ||| params	count=1
module	method of ||| distributions	count=1
module	of function by ||| sandbox distributions	count=1
function	derivative of the ||| mean deriv	count=2
arg	the debiasing parameters ||| mod params alpha l1_wt	count=1
class	chisquare ||| gof chisquare	count=1
arg	[arg_1] x d2 ||| [arg_1] [arg_2]	count=3
module	estimates with options ||| sandbox	count=1
arg	first axis ||| axis	count=1
function	the confidence interval is ||| density confint	count=1
function	gradient ||| calc grad	count=1
function	of variance ||| var	count=1
function	hac over group sums ||| hac groupsum	count=1
function_arg	hamilton filter [arg_2] ||| [arg_2] [function_1]	count=1
arg	harmonic mean ||| nobs_all srange	count=2
arg	of mu ||| mu	count=1
arg	correlations determined by cor_length ||| n num_nonconst_covariates cor_length	count=1
function	collect required results from ||| res	count=1
arg	variation ||| bounds window_length scale	count=1
arg	of polynomials for n ||| n	count=1
function	[function_1] location of ||| [function_1] index [function_2]	count=1
function	other info needed ||| init	count=1
arg	be 2d a can ||| a	count=1
function	by the ||| cov params	count=1
function	cusum [function_2] ||| [function_1] [function_2]	count=3
function	starting parameters ||| start	count=1
module	[module] data and ||| datasets [module]	count=19
function	matrices with singular ||| coefficients from multivariate pacf python	count=1
class	number ||| stata reader	count=1
module	sequence of date ||| tsa base	count=1
function_arg	[function_1] assumes ||| [function_1] panel results nlags [arg_2]	count=1
class	with ||| varresults	count=1
function	of sample prediction ||| of sample	count=2
function	are needed ||| mpl fig	count=1
module	the likelihood is not ||| statespace	count=1
function	a lowess function ||| lowess	count=2
function	returns ||| init kalman	count=1
arg	comparemeans object ||| cls data1 data2 weights1	count=1
module	because of distribution ||| sandbox distributions	count=1
function	marginal ||| cov params	count=2
function	containing the thresholded ||| thresholded	count=1
function	covariance matrix computed using ||| cov	count=4
function_arg	update the [arg_2] ||| [function_1] [arg_2]	count=8
function	method ||| params	count=1
function	statistical power function ||| power	count=1
arg	test of non- equivalence ||| low upp	count=3
module_class	model and [class_2] ||| [module_1] [class_2]	count=2
arg	[arg] either ||| [arg]	count=1
arg	a grid ||| grid	count=1
class	exogenous random [class] ||| [class]	count=2
function_arg	regression [arg_2] ||| [arg_2] [function_1]	count=5
function	calling function for ||| get columns	count=1
function	dot product of ||| dot	count=1
module	continuous distribution given by ||| distributions	count=1
arg	calculate ||| effect_size nobs1	count=3
module	with degrees ||| tsa	count=1
class	date and time stata ||| stata	count=1
function	[function_1] the random ||| [function_2] effects [function_1]	count=2
function	derivative of ||| mean deriv	count=2
arg	1d parameters ||| x unbiased	count=1
arg	on horizontal ||| data	count=1
function	factor ||| factor	count=3
class	with options ||| gmmresults	count=1
function	odds [function_2] ||| [function_1] [function_2]	count=4
arg	1d ||| unbiased demean	count=1
arg	create ||| yname xname	count=1
arg	construct a comparemeans object ||| data1 data2 weights1	count=1
arg	orthogonal polynomial ||| x polybase order limits	count=1
function	to get [function_2] ||| [function_1] [function_2]	count=2
arg	system matrices and other ||| arma_model	count=1
class	a pickle ||| model results	count=1
arg	a wald-test for a ||| scale	count=1
class	v]) -> [class] dictionary with ||| [class]	count=1
arg	is not longer ||| x	count=1
module	of ||| sandbox tsa	count=2
arg	linear transform ||| transform group_iter	count=1
function	method [function_2] ||| [function_2] [function_1]	count=2
function	plot of marginal distribution ||| plot	count=1
function	are discrete ||| check discrete	count=1
function	that all odds ||| odds	count=1
class	binomial ||| binomial	count=6
module	frequency [module] the reduced ||| [module]	count=1
function	forecast [function_2] ||| [function_1] [function_2] steps	count=1
function	a wald-test ||| test	count=1
function	linear ||| ols	count=1
function	odds ||| oddsratio	count=3
class	for ||| micedata	count=1
arg	random sample of ||| rvs	count=1
arg	model updates the representation ||| transformed complex_step	count=1
class	the significance value for ||| test reg coef	count=1
arg	of marginal effects ||| exog	count=1
function	[function_1] compute small ||| [function_2] [function_1]	count=1
function	if [function] is not ||| [function]	count=1
class	wald-test for a ||| likelihood model	count=1
class	kalman [class_2] ||| [class_2] [class_1]	count=1
arg	the value of ||| resid omega nobs	count=2
function	panel of ||| panel	count=1
arg	and other info needed ||| cls	count=1
function	recarray ||| recarray	count=1
function	the hessian ||| hessian	count=2
arg	of [arg] ||| [arg]	count=4
function	the anscombe residuals for ||| resid anscombe	count=1
arg	inverse ||| params	count=1
function	periodogram ||| periodogram	count=1
function	regression ||| regression	count=1
function_arg	of squares [arg_2] ||| [arg_2] [function_1]	count=1
arg	is the same ||| x idx	count=1
class	decomposition of ||| model	count=1
function	the exog ||| exog	count=1
function	stata date ||| stata	count=1
function	inverse [function_2] ||| [function_1] [function_2]	count=2
arg	the system matrices ||| arma_model	count=1
function	matrix ||| matrix	count=7
module_class	[module_1] [class_2] ||| [module_1] factor [class_2]	count=2
function	autocorrelation function of an ||| acf	count=1
arg	joint linear hypothesis ||| invcov	count=1
module	the ||| sandbox tsa	count=2
arg	delta method ||| model params exog	count=1
arg	approximate ||| mod params	count=1
function	values [function] distribution ||| fitstart [function]	count=1
arg	this [arg_2] ||| [arg_2] [arg_1]	count=4
function	least squares ||| ls	count=1
module	needed for ||| tsa kalmanf	count=1
function	labels cells based on ||| label cells	count=1
function	the ceres ||| ceres resids	count=1
class	the significance ||| coef c	count=1
arg	distribution having v ||| v	count=1
arg	fitted mean response ||| mu freq_weights	count=4
module	method [module] ||| [module]	count=1
function	needed for the ||| init	count=1
module	a t-test for t-test ||| stats	count=1
module	date strings and returns ||| tsa	count=1
class	for a hypothesis ||| desc stat uv	count=1
class	returns the kernel ||| custom kernel	count=1
function_arg	mean [arg_2] ||| [function_1] [arg_2]	count=3
class	returns the ||| phreg results	count=1
function	the crude ||| crude	count=1
function	cumulative hazard function for ||| cumulative hazard function	count=1
function	standard errors of the ||| standard errors	count=1
function_arg	[function_1] >>> from ||| [function_1] [arg_2]	count=1
function	lutkepohl 2005 ||| lutkepohl	count=1
function	based on [function] ||| [function]	count=1
module	return distribution of a ||| sandbox distributions	count=1
class	for negative binomial ||| negative binomial	count=2
function	model [function] an (nobs ||| [function]	count=1
function	false [function] is dropped ||| [function]	count=1
arg	-2 ||| return_weights	count=1
arg	correlation of ma ||| ma nobs	count=2
class	of identical means ||| means	count=1
function	aitchison-aitken kernel ||| aitchison aitken	count=1
function	for the correlation ||| corr	count=1
class	likelihood ||| likelihood	count=1
function	q statistic ||| q	count=1
arg	bandwidth ||| bw	count=1
arg	effects by the delta ||| params exog	count=1
arg	estimate of mu ||| mu initscale	count=1
arg	function func ||| func	count=1
module	covariance with ||| vector_ar	count=1
arg	kernel ||| kernel	count=1
function	statsmodels data ||| data	count=1
arg	calculate the ||| effect_size nobs1 alpha	count=3
function	the integer row ||| maybe	count=1
module	of marginal ||| discrete	count=1
function	other info ||| init kalman state	count=1
arg	of variation if no ||| x bounds window_length scale	count=1
function	= ||| transform	count=1
function	logarithm of probability density ||| logpdf	count=1
function	power of a normal ||| normal power	count=1
function	[function_1] fit ||| [function_1] [function_2]	count=1
class	the results to ||| results	count=2
class	biweight ||| biweight	count=4
function_arg	returns the [function_1] [arg_2] ||| [function_1] beta param_num [arg_2]	count=3
module	white ||| vector_ar	count=1
function	the approximate inverse ||| calc wdesign	count=1
function_arg	[function_1] data as ||| [arg_2] [function_1]	count=2
class	spectral density ||| arma fft	count=2
function	expanded [function] ||| [function]	count=1
function	formatting ||| get fmt	count=1
module	noise covariance with ||| tsa	count=1
arg	to maxfact ||| maxfact	count=1
function	a latex tabular ||| latex tabular	count=2
function	return r ||| get	count=1
function_arg	[function_1] 1d parameters ||| [function_1] [arg_2]	count=2
arg	[arg_1] and ses ||| [arg_1] [arg_2]	count=1
class	complement is the conditioning ||| mvnormal	count=1
module	stats ||| sandbox stats	count=1
function	as stationary ||| stationary	count=1
function	effects by the ||| margeff cov params	count=1
arg	null hypothesis is that ||| value ddof	count=1
function_arg	an arma [arg_2] ||| [arg_2] [function_1]	count=4
arg	autocorrelation ||| x nlags	count=1
function	hac ||| hac	count=1
arg	to a plot ||| ax	count=1
arg	nodewise_weightvalue ||| exog nodewise_row idx alpha	count=1
module	in ||| tsa base	count=4
function	bivariate gaussian ||| bivariate normal	count=1
arg	calculates the nodewise_weightvalue ||| nodewise_row idx alpha	count=1
function_arg	autocovariances from [arg_2] ||| [function_1] coefficients coefficients error_variance [arg_2]	count=1
function	split the given rectangle ||| split rect	count=1
class	significance ||| reg coef c	count=2
function	forecast ||| forecast	count=2
function	squares of press ||| press	count=1
arg	period in [arg] ||| [arg]	count=1
class	kdeunivariate ||| kdeunivariate	count=1
arg	in a grid ||| grid fig	count=1
class	comparison of means ||| tukey	count=1
function	for ||| info	count=1
function	a full rank affine ||| affine	count=1
class	for maximum ||| switching	count=1
function	compared to control ||| pairscontrol	count=1
function_arg	starting parameters [arg_2] ||| [arg_2] [function_1]	count=2
class	global odds ||| global odds	count=2
arg	2d a ||| a	count=1
function	kalman filter ||| kalman	count=1
arg	a joint linear ||| r_matrix cov_p scale invcov	count=1
arg	heteroscedasticity and autocorrelation robust ||| nlags	count=1
function	return a summary ||| summary	count=1
function	response ||| response	count=1
function	periodogram for [function_2] ||| [function_2] [function_1]	count=4
function_arg	unsqueeze a [arg_2] ||| [function_1] [arg_2]	count=1
arg	graphical display ||| periods figsize	count=1
function_arg	[function_1] correlation matrix ||| [arg_2] [function_1]	count=1
arg	whether restricted model ||| restricted	count=3
function	load ||| load	count=21
arg	labels on [arg_2] ||| [arg_2] [arg_1]	count=4
function	for each observation ||| score obs	count=1
class	decomposition ||| model univariate	count=2
arg	along the zero-th axis ||| k_diff k_seasonal_diff seasonal_periods	count=1
class	perform simulation [class_2] ||| [class_2] [class_1]	count=4
module_class	[module_1] estimation ||| [module_1] [class_2]	count=1
arg	given endogenous variable y ||| y rtol maxiter	count=1
module	model [module_2] ||| [module_1] [module_2]	count=2
arg	the fitted model ||| at method atexog dummy	count=2
function	t ||| t	count=1
function	a sequence of ||| dates	count=1
function	correlations on vertical axis ||| acf	count=1
arg	max_dim ||| max_dim	count=1
function	log-likelihood gradient for ||| calc grad	count=1
function	distribution ||| get distribution	count=2
module	interactions [module] given ||| [module]	count=1
module	sandwich [module] pinv ||| [module]	count=2
function	the debiased ||| debiased	count=1
class	computes the ||| reg	count=1
arg	od __repr__() <==> ||| _repr_running	count=1
module	of function ||| distributions	count=1
arg	pairwise comparisons ||| nobs multitest_method	count=1
function	the probability ||| pdf	count=1
function	dummy ||| dummy	count=1
arg	for 1d parameters ||| x unbiased demean fft	count=1
module	use runs test ||| sandbox stats	count=1
function	to impute ||| impute	count=1
arg	independent columns [arg] ||| [arg]	count=1
function_arg	[function_1] significance bounds ||| [arg_2] [function_1]	count=4
module	period's regime (and ||| tsa regime_switching	count=1
arg	and other info ||| cls params	count=1
function	stata's default format ||| dtype to default stata fmt	count=1
class	returns the ||| multinomial results	count=1
function	cdf of ||| cdf	count=1
function	freedom used in ||| df model	count=1
function	array to a text ||| savetxt	count=1
arg	[arg_1] r ||| [arg_1] [arg_2]	count=1
function	parser parse but also ||| parser	count=1
function_arg	an exog [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	insert [arg_2] ||| [function_1] [arg_2]	count=2
function	strings and returns ||| from str	count=1
arg	linear transform ||| x transform group_iter	count=1
function	date strings and returns ||| from	count=1
function	between two ordinal variables ||| test ordinal	count=1
class	the logit ||| logit	count=2
class	the table ||| simple table	count=1
function_arg	plot [arg_2] ||| [arg_2] [function_1]	count=3
arg	optionally the scatter ||| scatter ax	count=1
function	sequence of ||| from str	count=1
function	statistical power ||| power	count=1
module	a continuous distribution given ||| distributions	count=1
module	collect required results ||| stats	count=1
module	generate the approximate inverse ||| base	count=1
function	the mean of bivariate ||| mv mean	count=1
function	other info needed for ||| state	count=1
arg	func ||| func	count=1
function	monotone ||| monotone fn inverter	count=2
module	another distribution int f ||| sandbox distributions	count=1
function	of observations [function_2] ||| [function_1] [function_2]	count=1
class	estimates ||| phreg	count=1
arg	any model with ||| gradient start_params fargs	count=1
module	[module_1] [module_2] ||| [module_2] [module_1]	count=8
function	cumulant ||| cumulant	count=1
function	info needed for ||| init kalman	count=1
arg	key and ||| key default	count=1
class	[class] uses the ||| all pairs [class]	count=3
function	cumulative sum of squares ||| squares	count=1
function	returns the hessian of ||| hessian	count=1
function	logistic transform ||| logistic	count=1
function	plots of impulse responses ||| plot	count=1
function	the measurement disturbance ||| measurement disturbance	count=1
function	a ||| test	count=2
arg	signal [arg] at all ||| [arg]	count=1
module_class	a [class_2] ||| [module_1] [class_2]	count=4
module	provides a [module] for the ||| [module]	count=1
function	the delta method ||| params	count=1
function	probability density function ||| pdf	count=1
arg	diag [arg] * ||| results [arg]	count=1
function	estimate model using ||| fit	count=1
function	many degrees of freedom ||| df	count=1
function	all against ||| all	count=2
module	model jacobian of ||| discrete	count=1
function	of observations ||| df	count=1
module	or its derivative ||| sandbox	count=2
class	wald-test for ||| likelihood	count=1
function	the missing data pattern ||| plot missing pattern	count=1
class	fixed effects ||| mixed lm	count=1
arg	against a set of ||| exog_idx	count=1
arg	dimensions 1 max_dim ||| indicators max_dim	count=1
class	for andrew's [class_2] ||| [class_1] [class_2]	count=1
module	calculate sum ||| tsa	count=1
class	estimated ||| varresults	count=1
function	[function_1] [function_2] matrices ||| [function_1] [function_2] steps	count=2
class	negative binomial family parameters ||| negative binomial	count=1
function	[function_1] format for ||| [function_2] [function_1]	count=6
class	the ||| phreg	count=2
arg	generate the approximate inverse ||| params	count=1
arg	case of 'lhs only' ||| bounds options	count=1
function	calculates the se of ||| se	count=1
class	equal ||| descr	count=1
function	generic bivariate [function_2] ||| [function_2] [function_1]	count=1
arg	teststat ||| teststat regression n	count=1
class	hypothesis of identical means ||| means	count=1
module	function ||| distributions	count=1
arg	the zero-th axis ||| k_diff k_seasonal_diff seasonal_periods	count=1
function_arg	location [arg_2] ||| [arg_2] [function_1]	count=4
class	estimate the gls ||| short panel gls	count=1
arg	the [arg_2] ||| [arg_1] [arg_2]	count=7
function	the fit ||| fit	count=1
function	strings and returns a ||| dates from	count=1
function_arg	[function_1] a data ||| [arg_2] [function_1]	count=1
arg	autocorrelation function plots lags ||| ax lags	count=1
function_arg	q statistic x ||| q stat x	count=2
class	used in model ||| model	count=1
function	function ||| lowess	count=2
class	single random effects ||| mixed lm	count=1
module	matrix ||| sandbox stats	count=1
function_arg	ordinal [arg_2] ||| genmod ordinal gee setup [function_1] [arg_2]	count=4
function	quantile ||| quantile	count=1
class	of identical means this ||| means	count=1
arg	given groups [arg_2] ||| [arg_2] [arg_1]	count=2
class	kernel smoothing ||| kernel	count=1
arg	r and [arg_2] ||| [arg_1] [arg_2]	count=1
arg	dataframe ||| dataframe	count=1
class	[class_1] plot ||| [class_1] [class_2]	count=1
class	compute ||| model results	count=2
function	a ||| dates	count=2
function_arg	insert a [arg_2] ||| [function_1] idx [arg_2]	count=1
function	[function_1] output ||| [function_2] [function_1]	count=6
function	numerical hessian for ||| hessian	count=2
function	[function_1] default ||| [function_2] [function_1]	count=4
module	columns of ||| stats	count=1
arg	group ||| group	count=2
arg	respect ||| offset_exposure	count=1
function	deviance residuals ||| resid dev	count=2
arg	d1 [arg_2] ||| [arg_2] [arg_1]	count=1
function	other info needed for ||| init kalman state	count=1
class	for ||| varresults	count=1
class	of poisson ||| poisson zi gmle	count=1
arg	fitted ||| method atexog dummy	count=2
function	bivariate ||| bv	count=2
function	of ||| from str	count=2
function	procedure for initial ||| initial imputation	count=1
function_arg	[function_1] interval ||| [function_1] kurt [arg_2]	count=1
arg	by r this ||| d r weights	count=2
arg	linear hypothesis ||| r_matrix cov_p	count=1
function	confidence interval for ||| ci	count=1
module	test for mean based ||| stats	count=1
class	trimmed [class_2] ||| [class_2] [class_1]	count=1
function	to the distribution of ||| get distribution	count=1
class	[class_1] gaussian ||| [class_2] [class_1]	count=1
arg	plot ||| xdata labels depth	count=1
function	generate ||| generate	count=2
module	used for ||| sandbox stats	count=1
module	test fdrcorrection ||| stats	count=1
arg	of data ||| class_type data	count=1
function	theoretical autocorrelation function of ||| acf	count=1
class	p-p [class_2] ||| [class_2] [class_1]	count=1
function	dataframe take a linear ||| multi ols	count=1
module	score [module] ||| [module]	count=1
module	of distribution function ||| sandbox distributions	count=2
class	linear [class_2] ||| [class_1] [class_2]	count=4
module	graphical test ||| tsa	count=1
function	a wald-test for a ||| test	count=1
class	array ||| sarimaxresults	count=1
function	of date strings ||| dates from	count=1
module_class	[module_1] distributed ||| [module_1] [class_2]	count=4
function	of ||| get	count=1
function	covariance matrix ||| get covariance matrix	count=2
function	exog array with ||| get exog	count=1
class	[class] based on ||| global [class]	count=1
function	hat_matrix used in ||| hat diag	count=1
function	deviance ||| dev	count=1
function	matrix ||| wdesign	count=1
class	the cdf transformation ||| cdflink	count=1
arg	formula ||| formula	count=1
function	derivative of ||| deriv	count=15
class	cross-validation ||| censored reg	count=1
module	of freedom ||| vector_ar	count=1
function	trace ab for two ||| trace symbanded	count=1
function	pooled odds ratio for ||| pooled odds ratio	count=1
function	[function_1] normal distributed ||| [function_2] [function_1]	count=2
function	[function_1] pattern ||| [function_1] [function_2]	count=2
arg	[arg_1] of ||| [arg_2] [arg_1]	count=3
class	arma p ||| arma	count=1
function	test that all tables ||| test	count=1
function	a sequence of ||| dates from	count=1
module	the parameter estimates ||| duration	count=1
arg	and backward displaced moving ||| x filt nsides	count=1
function	initialize state and state ||| initialize state	count=1
module	rank tests ||| stats	count=1
arg	of marginal effects ||| model	count=1
class	the variance function ||| variance function	count=2
class	effects parameters ||| one way mixed results	count=1
arg	asymmetric mixed model ||| theta	count=1
class	the kernel ||| kernel	count=1
function	covariance ||| wdesign mat	count=2
arg	asymmetric mixed model ||| theta k	count=1
arg	[arg_1] function ||| [arg_2] [arg_1]	count=2
arg	for a single regressor ||| endog exog_i exog_others data	count=1
function	psturng ||| psturng	count=1
function	measurement ||| generated measurement	count=1
class	a wald-test ||| results	count=1
class	perform simulation smoothing does ||| simulation smooth	count=1
function	f ||| compare f	count=1
module	whiten ||| sandbox panel	count=1
function	use gls ||| get fe params	count=1
function	errors of the ||| geterrors	count=1
function	discrete distribution parameters ||| binning discrete	count=1
function	anscombe residuals ||| resid anscombe	count=4
class	cross-validation ||| kernel reg	count=1
module	two ||| stats	count=1
arg	cook johnson ||| v theta	count=1
function	to get ||| get	count=3
class	update the fixed effects ||| mixed lm	count=1
module_class	[module_1] decomposition of ||| [module_1] [class_2]	count=1
module_class	[module_1] kdeunivariate ||| [module_1] [class_2]	count=2
arg	[arg_1] [arg_2] ||| [arg_2] r [arg_1]	count=6
function	ttest of ||| ttest	count=1
function	sum of squares ||| squares	count=1
arg	info needed ||| cls	count=1
function_arg	[function_1] labels ||| [arg_2] [function_1]	count=3
arg	regressors ||| exog_idx grid fig	count=1
function	transform matrices with singular ||| compute coefficients from multivariate pacf python	count=1
arg	fitted ||| atexog dummy	count=2
function	predict response ||| predict	count=1
arg	and ses ||| float_format model_names stars	count=1
arg	to generate the approximate ||| params	count=1
function	the data [function_2] ||| [function_1] [function_2]	count=1
class	an ||| olsresults	count=1
arg	plot a [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] location of ||| [function_2] [function_1]	count=2
function	matrix ||| calc	count=1
function	use gls to ||| get fe params	count=1
function	get ||| get prediction index	count=2
arg	generate the approximate ||| mod	count=1
module_class	[module_1] kalman ||| [module_1] [class_2]	count=3
arg	fn ||| fn	count=1
module	line [module] rejection ||| [module]	count=1
arg	[arg_1] test for ||| [arg_2] [arg_1]	count=4
function	label ||| label	count=1
function	of the ||| get	count=1
function	array ||| array	count=1
function	x^twy (transposed ?) for ||| xtwy	count=1
arg	order of a ||| order	count=1
function_arg	exog [arg_2] ||| [function_1] [arg_2]	count=2
function	for the correlation coefficient ||| corr	count=1
class	linear model ||| tlinear model	count=2
function	harvey ||| harvey	count=1
arg	confidence ||| x alpha	count=1
function_arg	[function_1] statistic ||| [function_1] [arg_2]	count=1
function	time-varying vector ||| vector	count=1
arg	[arg_1] is imposed ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] an arima ||| [arg_2] [function_1]	count=1
arg	[arg_1] q coefficients ||| [arg_2] [arg_1]	count=1
module	covariance ||| base	count=1
function	and returns a list ||| dates from	count=1
arg	wald-test for a ||| cov_p scale	count=1
function	returns default ||| default	count=1
arg	of marginal effects by ||| model	count=1
function	for a single variable ||| update	count=1
function_arg	[function_1] objects in ||| [function_1] [arg_2]	count=1
function	[function_1] factor is ||| [function_1] [function_2]	count=5
function	convolution ||| convolution	count=1
arg	one parameter of the ||| effect_size nobs alpha	count=2
class	hypothesis ||| model	count=1
function	[function_1] odds ||| [function_1] equal [function_2]	count=1
function	contrast ||| contrast	count=6
module	exogenous ||| base	count=1
function_arg	[function_1] [arg_2] ||| [function_1] power [arg_2]	count=10
function	for initial ||| initial imputation	count=1
class	for hampel's ||| hampel	count=2
function	[function_1] cumulative ||| [function_1] [function_2]	count=4
function_arg	[function_1] [arg_2] ||| [function_1] y [arg_2]	count=3
arg	in the first elements ||| index inplace	count=1
function_arg	autoregressive coefficients [arg_2] ||| [function_1] [arg_2]	count=1
function	regularized ||| est regularized	count=1
function_arg	[function_1] [arg_2] that :math \sigma_u = ||| [function_1] rep [arg_2]	count=2
module	matrix ||| base	count=1
arg	[arg_1] imposed ||| [arg_2] r [arg_1]	count=1
function	[function_1] a latex ||| [function_2] [function_1]	count=1
function	cohn numbers ||| cohn numbers	count=2
function	out of [function_2] ||| [function_2] [function_1]	count=2
function	with options ||| get	count=1
arg	needed ||| params	count=1
function	a list ||| str	count=1
function	second derivative of the ||| deriv2	count=1
class	gmm and ||| gmm	count=1
function	the log [function_2] ||| [function_2] [function_1]	count=2
arg	given a contingency table ||| count_dict horizontal gap	count=1
module	regime (and ||| tsa regime_switching	count=1
function	the _tricube function applied ||| lowess tricube	count=1
function_arg	insert [arg_2] ||| [function_1] idx [arg_2]	count=1
function	and ||| dates	count=1
arg	for ||| cov_p	count=1
arg	of [arg_2] ||| [arg_1] [arg_2]	count=9
module	float [module] ||| [module]	count=1
function_arg	[function_1] p ||| [arg_2] [function_1]	count=1
arg	returns endog resid mu ||| endog	count=1
function	the covariance matrix for ||| get covariance matrix	count=1
module	degrees of freedom ||| vector_ar	count=1
function	other ||| init kalman state	count=2
arg	first elements of the ||| b index inplace	count=1
function	partial regression ||| partregress grid	count=1
class	decomposition ||| model	count=1
function	other info ||| state	count=1
function_arg	[function_1] is ||| [function_1] [arg_2]	count=1
function	lagorder ||| info	count=1
function	[function_1] [function_2] ||| [function_2] generate [function_1]	count=8
arg	info needed for the ||| cls params	count=1
arg	asymmetric mixed ||| theta	count=1
function_arg	[function_1] data confidence ||| [function_1] [arg_2]	count=1
module	the info criterion ||| tsa	count=1
class	simulation ||| simulation	count=1
arg	the results ||| results	count=1
function	effects by ||| margeff cov	count=1
class	coefficients ||| dynamic factor results	count=1
function	of [function_1] [function_2] ||| [function_1] [function_2]	count=14
module	the full parameter ||| base	count=1
function	packed ||| packed	count=1
function	sums ||| sums	count=1
function	nearest ||| nearest	count=2
class	info needed for the ||| kalman	count=1
function_arg	[function_1] [arg_2] identical ||| ztest [function_1] [arg_2]	count=1
arg	the kalman filter notes ||| params	count=1
arg	calculate sum of ||| x	count=1
module	longer than the ||| tsa	count=1
arg	assumes we have complete ||| nlags weights_func	count=1
class	of poisson ||| poisson gmle	count=1
module	line [module] rejection in ||| [module]	count=1
function	fits the model by ||| fit	count=1
function	whiten ||| whiten	count=2
function	a list of datetime ||| dates from	count=1
module	a single ||| imputation	count=1
class	a wald-test for a ||| likelihood model results	count=1
arg	of variation if no ||| bounds window_length scale	count=1
module	and ||| tsa base	count=2
function	make flexible grid plots ||| grid plot	count=1
class	create a formula ||| formula	count=1
module	approximate inverse covariance ||| base	count=1
arg	create ||| k_vars ar	count=1
function	confidence ||| conf	count=1
arg	be 2d a ||| a	count=1
arg	q coefficients that ||| q n	count=1
arg	for z ||| z	count=1
function	of squares along first ||| sumofsq	count=1
function	robust covariance matrix ||| cov	count=2
arg	[arg_1] freq_weights ||| [arg_1] [arg_2]	count=3
class	of c-log-log transform ||| clog log	count=1
function	binomial proportion ||| proportion	count=1
class	compute a ||| likelihood	count=1
function	logistic ||| logistic	count=1
function	format for this ||| to	count=1
arg	distributions ||| prob size dist kwargs	count=1
function	for out of sample ||| out of sample	count=1
arg	for ||| cls	count=1
class	least trimmed mean ||| trimmed mean	count=8
module	for one fitted ||| stats	count=1
function	info needed ||| kalman state	count=1
arg	needed for ||| params	count=1
module	used in likelihood ||| tsa regime_switching	count=6
arg	see if [arg] proper ||| [arg]	count=1
module	strings and returns a ||| base	count=1
arg	in-sample prediction and ||| params start end	count=1
function	the log odds ||| log oddsratio	count=2
function_arg	create equicorrelated [function_1] [arg_2] diagonal ||| [function_1] [arg_2]	count=1
function	for discrete ||| discrete	count=1
function_arg	bds test [arg_2] ||| [function_1] [arg_2]	count=4
arg	results instances ||| results	count=1
module	the likelihood ||| statespace	count=1
class	instance ||| likelihood	count=1
arg	for a ||| scale	count=1
function	than [function_2] ||| [function_2] [function_1]	count=1
function	multivariate partial [function_2] ||| [function_1] [function_2]	count=1
function	sample sizes ||| varcorrection	count=1
function	of date ||| str	count=1
module	for lagorder selection ||| tsa vector_ar	count=1
arg	if [arg] proper probability ||| [arg]	count=1
function	estimate ||| fit	count=5
function	score function ||| score	count=1
function	approximate inverse ||| mat	count=1
function	heteroskedasticity ||| heteroskedasticity	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2] deviance endog mu freq_weights	count=1
function_arg	[function_1] product intersection ||| [function_1] [arg_2]	count=3
arg	and scale ||| scale	count=2
function_arg	violin plot ||| violinplot data ax	count=1
function	covariance matrix ||| wdesign	count=1
function	generate the approximate inverse ||| wdesign	count=1
function	prediction ||| predict	count=1
arg	first elements of ||| a b index inplace	count=1
arg	to generate the approximate ||| mod	count=1
function	calculates the se ||| se	count=1
arg	at the ||| alpha score	count=1
function	squares ||| squares	count=2
function	[function_1] test ||| [function_1] [function_2]	count=1
function	format ||| dtype to	count=1
function	of ||| dates	count=2
function	values ||| update	count=1
function	to the distribution ||| get distribution	count=1
module	other info needed ||| kalmanf	count=1
function	sample of ||| sample	count=1
function	cumulative distribution function for ||| cdf	count=1
function	using cvxopt solvers ||| fit l1 cvxopt	count=1
function	a ||| from str	count=2
module	a ||| imputation	count=1
arg	hypothesis ||| r_matrix	count=1
class	for ||| model results	count=2
function	observations minus ||| df resid	count=2
module	kalman ||| tsa kalmanf	count=2
function	the most common ||| most common	count=1
function	of marginal effects ||| margeff cov params	count=1
function	for the mean of ||| mv mean	count=1
arg	soln, where covmat is ||| expval index stdev	count=1
arg	either upper or lower ||| b lower	count=1
module	estimated ||| tsa vector_ar	count=1
function	returns ||| dates from	count=1
function	exogenous variables ||| exog	count=1
function	from packed ||| from packed	count=2
class	ratio first pool all ||| ratio	count=1
arg	to y ||| y df	count=1
module	the statespace model ||| statespace	count=1
function	aitchison-aitken kernel [function_2] ||| [function_1] [function_2]	count=1
function	from sif to ||| date to	count=1
function	less than [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] the mediator ||| [function_1] [function_2]	count=1
function	test [function_2] ||| [function_1] [function_2]	count=1
function	copy of the ||| copy	count=1
class	a wald-test for ||| model	count=1
function	list ||| from	count=1
class	plot ||| univariate function	count=1
arg	linear transform for ||| transform	count=1
function_arg	ticks and [arg_2] ||| [function_1] [arg_2]	count=1
module	for simultaneous ||| stats	count=1
function	a recarray ||| recarray	count=1
function	location of a ||| loc	count=2
function	[function_1] and iqr ||| [function_1] [function_2]	count=1
class	of a f-test ||| ftest	count=1
class	f-test for a ||| model results	count=1
module	[module_1] family distribution ||| [module_2] [module_1]	count=1
function	measurement ||| measurement	count=2
arg	needed for the ||| cls	count=1
arg	formula [arg_2] ||| [arg_2] [arg_1]	count=2
function	function [function] ||| [function]	count=2
arg	of error ||| x1 x2 ddof axis	count=1
arg	gradient method ||| grad start project	count=1
function	grid [function_2] ||| [function_2] [function_1]	count=4
arg	beta ||| beta	count=1
function	and returns a list ||| from	count=1
arg	joint linear hypothesis ||| r_matrix cov_p scale invcov	count=1
arg	system matrices and other ||| cls params arma_model	count=1
function	log determinant of ||| smw logdet	count=1
module	info needed for the ||| tsa kalmanf	count=1
arg	an ar ||| x	count=1
function	get the [function_2] ||| [function_1] index [function_2]	count=3
arg	apply ||| filter_method inversion_method stability_method conserve_memory	count=1
arg	variation ||| x bounds window_length scale	count=1
arg	a wald-test for ||| r_matrix cov_p	count=1
class	a pickle of ||| model results	count=1
function	measurement disturbance ||| measurement disturbance	count=1
function	against [function_2] ||| [function_2] [function_1]	count=2
function	probability density ||| pdf	count=1
function_arg	of arma [arg_2] ||| [arg_2] [function_1]	count=2
module	[module] log-likelihood function ||| [module]	count=1
module	current period's regime (and ||| regime_switching	count=1
function	[function_1] includes ||| [function_2] [function_1]	count=12
arg	autocorrelation function plots lags ||| ax lags alpha	count=1
function	std and iqr for ||| std iqr	count=1
arg	[arg_1] is imposed ||| [arg_2] r [arg_1]	count=1
module	evaluation ||| tsa statespace	count=1
arg	fitted model ||| at method atexog dummy	count=2
function	gaussian expanded [function] given the ||| [function]	count=1
function	implement the derivative of ||| derivative	count=1
function	an exog array ||| get exog	count=1
function	baseline cumulative hazard function ||| baseline cumulative hazard function	count=1
function	info needed ||| kalman	count=1
module	modechoice ||| modechoice	count=2
class	based on ||| global	count=1
class	info needed for ||| filter	count=1
module	used [module] likelihood evaluation ||| [module]	count=1
function	[function_1] inflation factor ||| [function_1] [function_2]	count=4
function	[function_1] output ||| [function_1] [function_2]	count=6
module	date strings and ||| base	count=1
arg	wald-test for ||| scale	count=1
function	[function] for a ||| stationary [function]	count=1
arg	statistic divided by ||| n_bins alpha	count=1
function	[function_1] method the ||| [function_2] [function_1]	count=1
class	returns the ||| phreg	count=1
class	distributed ||| distributed	count=2
arg	[arg_1] is ||| [arg_2] r [arg_1]	count=1
function	missing data ||| plot missing	count=1
class	of the parameter estimates ||| phreg	count=1
function	out of ||| predict out of	count=1
function	results ||| res	count=1
arg	order ||| order	count=2
arg	a stratifiedtable object ||| var1 var2 strata	count=1
module	needed ||| tsa	count=1
module	the robust ||| robust	count=4
arg	effects by the delta ||| params	count=1
arg	is not longer than ||| x	count=1
arg	used to [arg_2] ||| tsa adfuller x maxlag [arg_1] [arg_2]	count=3
function	[function_1] partial ||| [function_1] [function_2]	count=2
function	psi function ||| psi	count=4
function_arg	[function_1] maximum likelihood ||| [function_1] [arg_2]	count=3
function	autocovariances from ||| acovf from	count=2
arg	key in a ||| key	count=1
module	information [module] two ||| [module]	count=1
arg	error bands assuming normally ||| orth repl	count=2
function	[function] vector ||| simulated [function]	count=3
module	matrix ||| sandbox	count=2
arg	of the log-likelihood parameters ||| params	count=3
arg	model of coles and ||| t	count=1
arg	f [arg_2] ||| [arg_1] [arg_2]	count=4
arg	index or a ||| data index	count=1
module	compute var p loglikelihood ||| tsa	count=1
arg	first axis ||| x axis	count=1
arg	by the delta ||| model	count=1
function	of squares ||| squares	count=2
function_arg	survival function [arg_2] ||| [function_1] [arg_2]	count=1
arg	lags : [arg_2] ||| [arg_1] [arg_2]	count=1
function	a summary for ||| summary	count=1
function	list of ||| dates from	count=1
arg	effects by the delta ||| model	count=1
arg	whether variance is the ||| y x idx	count=1
function	estimates of unobserved factors ||| factors	count=1
class	returns the kernel ||| kernel	count=1
function	names for ||| names	count=3
function	[function_1] sample of ||| [function_2] [function_1]	count=1
class	fft ||| fft	count=1
class	returns ||| results	count=1
function	standard ||| std	count=1
class	power ||| power	count=3
arg	x is ||| x	count=3
function	the odds ||| oddsratio	count=2
arg	deepcopy in contrast to ||| tables keep_headers	count=1
arg	matrix ||| mod	count=1
class	of the model ||| model	count=2
module	[module] the increase ||| [module]	count=3
function	calculates ||| calc wdesign mat	count=2
module_class	[module_1] estimation ||| [module_1] markov [class_2]	count=1
arg	test whether variance is ||| y x idx	count=1
function	the trace [function_2] ||| [function_1] [function_2]	count=4
function	missing ||| missing	count=2
function	loglikelihood for an arma ||| loglike	count=1
arg	is ||| y x idx	count=1
function	[function_1] quantiles ||| [function_2] [function_1]	count=1
class	model ||| discrete model	count=1
arg	nodewise_weightvalue ||| exog nodewise_row	count=1
arg	testfunc is ||| testfunc	count=1
module	sequence of date strings ||| tsa base	count=1
function	regularized fitted parameters is ||| est regularized	count=1
function_arg	from arrays [arg_2] ||| [arg_2] [function_1]	count=2
function	names of exogenous ||| exog names	count=1
module	var p loglikelihood ||| tsa vector_ar	count=1
arg	lagrange multiplier ||| demean use_lr	count=1
class	[class_1] ratio first ||| [class_2] [class_1]	count=2
function	than [function_2] ||| [function_1] [function_2]	count=1
function	kde ||| kde	count=1
module	estimates with ||| sandbox	count=1
module	test for mean ||| stats	count=1
class	results ||| multivariate test results	count=1
module	is only available if ||| tools	count=1
arg	for a joint ||| invcov	count=1
function	freedom used in the ||| df model	count=1
class	compute ||| varresults	count=1
arg	the kalman ||| params	count=1
function	distribution of uncensored endog ||| distribution	count=2
function	[function] for ||| [function] split	count=1
module	covariance ||| vector_ar	count=1
arg	[arg_1] of series ||| [arg_2] [arg_1]	count=2
function	state and state ||| state	count=1
arg	and throws away ||| x1 x2 alternative usevar	count=1
function	first variable name ||| name	count=1
function	are discrete ||| discrete	count=1
arg	r [arg_2] ||| [arg_2] [arg_1]	count=1
module	compute the ||| tsa statespace	count=1
arg	k ||| x k n	count=1
function	gradient ||| approx fprime	count=2
arg	wald-test for a ||| r_matrix cov_p	count=1
module	a sequence of ||| base	count=1
arg	for full rank scale_matrix ||| scale_matrix	count=2
function	estimate ||| estimate	count=1
arg	transform shape [arg_2] ||| [arg_1] [arg_2]	count=2
function	project series ||| project	count=1
rep	[module_class_1] at params ||| [module_class_1] [function_arg_2]	count=4
function	general product kernel ||| kernel	count=1
function	and other info needed ||| init kalman state	count=1
arg	model ||| params	count=4
class	for kernel density the ||| kernel	count=1
arg	of regressors ||| results exog_idx grid fig	count=1
function_arg	a regression [arg_2] ||| [function_1] [arg_2]	count=3
class	means this should also ||| means	count=1
function	returns the debiased ||| debiased	count=1
arg	of non- equivalence ||| x2 low upp	count=1
function	get group [function_2] ||| [function_1] [function_2]	count=2
arg	a joint ||| r_matrix cov_p scale invcov	count=1
module	options ||| sandbox regression	count=2
function	[function_1] transformed ||| [function_1] [function_2]	count=2
function	summary table for quantiles ||| summary quantiles	count=1
function	[function_1] packed parameter ||| [function_1] [function_2]	count=1
arg	of ||| params exog	count=1
function	generate ccpr ||| ccpr grid	count=1
function	autocorrelation parameters ||| acorr	count=1
module	nile ||| nile	count=1
arg	projected gradient ||| grad	count=1
function	labels parameters ||| label	count=1
arg	kim & white parameters ||| axis ab dg	count=1
function	estimates with options ||| get	count=1
function	[function_1] format ||| [function_2] [function_1]	count=6
arg	signal [arg] at ||| [arg]	count=1
arg	or lower ||| a b lower	count=1
function_arg	[function_1] the ||| [function_1] [arg_2]	count=1
module	compute the ||| statespace	count=1
function	marginal effects by the ||| margeff	count=1
module	use for ||| stats	count=2
module	sum of ||| tsa	count=1
class	wald-test for a ||| model results	count=1
arg	should be equivalent ||| xranks	count=1
class	two independent sample parameters ||| normal ind	count=1
function_arg	at params ||| score params	count=1
arg	a polynomial ||| polynomial threshold	count=1
function	the crude ||| observed crude	count=1
arg	the variance-covariance ||| cov_params	count=1
function	data for use ||| data	count=1
function_arg	ceres [arg_2] ||| [function_1] [arg_2]	count=1
arg	and formula parameters ||| x formula	count=2
function	ttest independent sample convenience ||| ttest ind	count=1
arg	returns ||| epsilon args	count=1
function	find the nearest ||| nearest	count=2
module	of date ||| base	count=1
module	for no interaction ||| sandbox stats	count=1
arg	[arg_1] is for ||| [arg_2] [arg_1]	count=1
function	the log-likelihood gradient ||| calc grad	count=1
module	white ||| tsa vector_ar	count=2
function	the trace ab for ||| trace symbanded	count=1
module	distribution location and ||| sandbox distributions	count=2
arg	[arg] for ||| ax [arg]	count=2
arg	to test for ||| regression autolag	count=1
function	packed parameter ||| packed	count=1
arg	parameters [arg_2] ||| [arg_2] [arg_1]	count=1
arg	row into ||| idx row datatype	count=1
function	approximate inverse covariance matrix ||| mat	count=1
function	of success is ||| binom	count=1
arg	a series simply ||| series	count=1
module	returns the ||| emplike	count=2
arg	plot a [arg_2] ||| [arg_1] [arg_2]	count=1
arg	[arg_1] series ||| [arg_2] [arg_1]	count=2
arg	fitted linear model ||| model	count=1
function	determinant of cov_params ||| det cov	count=1
class	cross-validation ||| kernel censored reg	count=1
function	whiten a ||| whiten	count=2
function	the measurement [function_2] ||| [function_2] [function_1]	count=1
function	or correlation matrix ||| matrix	count=1
module	the longley ||| longley	count=1
function	summary for the selection ||| summary	count=1
arg	components enthresh npcs and ||| enthresh npcs	count=1
module	approximate inverse covariance matrix ||| base	count=1
function	linear hypothesis ||| wald test	count=1
function_arg	[function_1] critical values ||| [arg_2] [function_1]	count=3
arg	arrays y and x ||| y x	count=1
function	compute likelihoods [function_2] ||| [function_2] [function_1]	count=12
function	fisher information matrix of ||| information	count=2
function	strings ||| from str	count=1
module	for panel ||| stats	count=1
arg	rho ||| rho	count=1
function	to transformed ||| sqrt	count=1
class	sur ||| sur	count=1
module	[module] of the ||| [module]	count=1
module	compute a wald-test ||| base	count=1
function	using a regularized ||| regularized	count=1
module	distribution given by ||| sandbox distributions	count=1
class	of the bspline ||| bspline	count=2
arg	returns data ||| data	count=1
arg	of marginal effects by ||| exog	count=1
class	parameter estimates with ||| gmmresults	count=1
arg	a plot ||| ax lines_idx	count=1
function_arg	to test [arg_2] ||| [function_1] [arg_2]	count=3
module	marginal ||| discrete	count=1
function_arg	restructure [function_1] [arg_2] ||| [function_1] [arg_2]	count=8
function	function is optimized over ||| opt	count=3
module	parameters ||| tools	count=2
module	linear ||| base	count=1
function	simulate standard [function_2] ||| [function_2] [function_1]	count=1
arg	gradient method ||| grad	count=1
function	approximate ||| wdesign	count=1
arg	one sample ||| nobs alpha alternative	count=1
arg	impulse response function parameters ||| params steps impulse orthogonalized	count=1
arg	f returns 1d array ||| x f epsilon	count=1
function_arg	[function_1] [arg_2] off diagonal ||| [function_1] equi [arg_2]	count=1
arg	returns the ||| cls	count=1
module_class	[module_1] arma model ||| [module_1] [class_2]	count=2
arg	the objects in the ||| pvalues group_name	count=1
arg	x ||| x axis	count=1
function_arg	of chisquare [arg_2] ||| [function_1] power effect_size nobs [arg_2]	count=1
function	of the random ||| random	count=1
arg	apply linear transform ||| transform	count=1
function	autocovariance function of arma ||| arma acovf	count=1
arg	calculate the ||| effect_size df_num df_denom	count=2
module	for lagorder ||| tsa	count=1
arg	for any model with ||| fargs	count=1
function	efron method ||| efron	count=1
class	for negative [class_2] ||| [class_2] [class_1]	count=1
class	estimates ||| dynamic	count=1
class	mixture ||| parametric mixture d	count=1
function_arg	indices [arg_2] ||| [arg_2] [function_1]	count=1
arg	estimate with confidence ||| x alpha	count=1
module	all observations the regression ||| regression	count=1
function	calculates the log-likelihood gradient ||| calc grad	count=1
function	formats to a type ||| type	count=1
function	tost [function_2] ||| [function_1] [function_2]	count=4
function	a multiindex dataframe ||| frame	count=1
function	log-likelihood of ||| loglike	count=3
function	from arrays ||| formula data	count=1
module	the nodewise_row values for ||| stats	count=1
function	return determinant ||| detomega	count=1
function	to generate the ||| calc wdesign mat	count=1
function	matrix for ||| matrix	count=3
module	the ||| base	count=7
module_class	[module_1] [class_2] ||| [module_1] negative [class_2]	count=3
arg	any one parameter of ||| nobs	count=2
function	of covariance ||| cov	count=1
module	instance ||| fair	count=1
module_class	performs [module_1] [class_2] estimation ||| [module_1] [class_2]	count=2
module	z-test for ||| stats	count=2
function	multivariate partial [function_2] ||| [function_2] [function_1]	count=1
arg	function plots lags on ||| x ax lags	count=1
class	interval for kernel density ||| kernel	count=1
function	known ||| initialize known	count=1
arg	the likelihood function ||| scale	count=1
function	autoregressive coefficients and ||| autoregressive	count=1
module	distribution ||| sandbox distributions	count=11
function	test for ||| test	count=1
arg	transform shape scale ||| shape scale	count=2
arg	inverse covariance matrix ||| mod	count=1
function	[function] is ||| [function]	count=3
function_arg	[function_1] statistic for ||| [arg_2] [function_1]	count=1
function	evaluates the probability ||| psturng	count=1
function	approximate inverse ||| calc	count=1
arg	specific [arg_2] ||| [arg_2] [arg_1]	count=4
arg	f ||| f	count=1
function	logarithm of ||| logpdf	count=1
function	of date strings and ||| dates from str	count=1
function	distribution of uncensored ||| distribution	count=2
function	and returns ||| dates	count=1
module	mean along the ||| sandbox tsa	count=1
function	var p ||| llf	count=1
arg	for autocorrelation this is ||| x	count=1
module_class	[module_1] 2x2 ||| [module_1] [class_2]	count=2
arg	transform ||| x transform	count=1
module	approximation to ||| sandbox	count=1
function	baseline [function_2] ||| [function_2] [function_1]	count=6
module	for ddof ||| stats	count=1
function_arg	[function_1] the parameters ||| [function_1] [arg_2]	count=1
arg	[arg_1] [arg_2] for ||| [arg_1] [arg_2]	count=6
function	the derivative of ||| derivative	count=1
function	[function_1] location ||| [function_1] index [function_2]	count=1
module	the rows or columns ||| tsa statespace	count=2
arg	variable ||| variable	count=1
arg	0 to q ||| q	count=1
arg	interval for the parameter ||| sig upper_bound lower_bound	count=1
arg	given an array ||| data col	count=1
function_arg	[function_1] name ||| [arg_2] [function_1]	count=4
arg	2d a can ||| a	count=1
arg	[arg_1] [arg_2] unit root in a ||| tsa adfuller x maxlag [arg_1] [arg_2]	count=4
function	seaonal arima order ||| order	count=1
module	fourier transform of the ||| sandbox tsa	count=1
class	of the ||| phreg	count=1
arg	series simply and/or ||| series	count=1
function	returns ||| init kalman state	count=2
class	g'' ||| cdflink	count=1
class	mice ||| mice	count=1
module_class	[module_1] table ||| [module_1] [class_2]	count=2
function	multivariate autocovariances from ||| multivariate acovf from	count=3
module	the constrained model ||| genmod	count=1
function	info needed ||| init	count=1
arg	and in-sample fitting ||| start end	count=1
arg	weighted design matrix necessary ||| params hess_kwds	count=1
module	deviance [module] for ||| [module]	count=1
function	/ covariance matrix ||| cov params	count=4
function_arg	factor [arg_2] ||| [function_1] corr [arg_2]	count=4
class	logit ||| logit	count=5
function_arg	[function_1] row ||| [arg_2] [function_1]	count=1
class	significance value for ||| reg coef c	count=1
function	implement the derivative ||| derivative	count=1
class	means this should also ||| compare means	count=1
function	solve for ||| solve	count=6
function	create equicorrelated [function] with ||| [function]	count=1
function_arg	subset of [arg_2] ||| [function_1] [arg_2]	count=1
function	probability ||| pdf	count=1
function_arg	[function_1] function fn ||| [function_1] [arg_2]	count=3
arg	or lower ||| lower	count=1
function	hessian up in ||| hessian	count=1
function	test that the ||| test	count=1
class	hypothesis ||| results	count=1
class	weighted correlation ||| descr stats w	count=1
module_class	[module_1] filter ||| [module_1] kalman [class_2]	count=2
function	to compute small ||| compute	count=1
function	plot ccpr ||| plot ccpr	count=2
module_class	[module_1] factor-structured ||| [module_1] [class_2]	count=2
function	cusum statistic and ||| cusum	count=1
class	[class_1] function ||| [class_1] [class_2]	count=1
function	from [function_2] ||| [function_1] [function_2]	count=4
module	and other info needed ||| kalmanf	count=1
arg	given parameters ||| params	count=1
function_arg	[function_1] weighted empirical ||| [function_1] [arg_2]	count=1
arg	lags on ||| x ax lags	count=1
arg	x by ||| x	count=1
function	schoenfeld residuals ||| schoenfeld residuals	count=1
function_arg	[function_1] error bands ||| [arg_2] [function_1]	count=6
class	schoenfeld ||| phreg results	count=1
function	error ||| get	count=1
arg	a ||| method	count=8
class	for factor instance ||| factor	count=1
arg	given family iteratively ||| maxiter tol	count=1
function	strings and ||| dates from str	count=1
module	for the one sample ||| stats	count=1
arg	effects by the delta ||| exog	count=1
function_arg	clayton or [arg_2] ||| [function_1] [arg_2]	count=1
function	make plot [function_2] ||| [function_1] [function_2]	count=1
function	from the most common ||| most common	count=1
module	for lagorder ||| vector_ar	count=1
arg	summarize the ||| alpha start title model_name	count=1
module	graphical test for ||| tsa	count=1
arg	create a ||| results yname	count=1
module	for t-test ||| stats	count=1
arg	is for ||| x	count=1
arg	least ||| z	count=1
module	error of the ||| sandbox regression	count=1
function_arg	convert [arg_2] ||| [arg_2] [function_1]	count=4
function	other ||| init kalman	count=1
arg	delta ||| model params exog	count=1
arg	computes the variance-covariance of ||| exog cov_params	count=1
arg	the fitted model ||| atexog dummy	count=2
arg	run of [arg] ||| [arg]	count=3
module	calculated [module] ||| [module]	count=2
function	set from a ||| set	count=1
function	containing the schoenfeld residuals ||| schoenfeld residuals	count=1
module	line search of ||| stats	count=1
arg	r and [arg_2] ||| [arg_2] [arg_1]	count=1
class	wald-test ||| likelihood model results	count=2
module	covariance ||| tsa vector_ar	count=2
function_arg	[function_1] process parameters ||| [arg_2] [function_1]	count=11
function_arg	[function_1] parameter in ||| [function_1] [arg_2]	count=3
arg	function ||| scale	count=2
function	the se ||| se	count=1
function	local constant ||| constant	count=1
module	with estimation of ||| stats	count=1
class	of model returns ||| likelihood model	count=2
class	[class_1] t ||| [class_2] [class_1]	count=3
arg	'iteritems' [arg] available and ||| [arg]	count=1
function	integer row labels ||| maybe reset index	count=1
function	stata date formats to ||| stata	count=1
arg	autocorrelation this is ||| x	count=1
function	stata's default [function_2] ||| [function_2] [function_1]	count=8
function	date strings and returns ||| from str	count=1
function	forecast covariance ||| forecast cov	count=1
module	white noise covariance with ||| vector_ar	count=1
arg	compute a wald-test ||| cov_p	count=1
function_arg	ticks and [arg_2] ||| [function_1] ax data [arg_2]	count=2
function	inverse covariance matrix ||| wdesign	count=1
function_arg	[function_1] model of ||| [function_1] [arg_2]	count=1
arg	returns the [arg] ||| param_num upper_bound lower_bound [arg]	count=3
arg	function fn no checking ||| fn	count=1
arg	brings [arg] into ||| [arg]	count=1
arg	return a ||| method	count=2
function	exog ||| exog	count=3
function	collect required ||| res	count=1
class	an instance ||| olsresults	count=1
module_class	[module_1] binomial ||| [module_1] [class_2]	count=2
module	in any [module] _2d_ ||| [module]	count=1
module	noise covariance with degrees ||| vector_ar	count=1
function	return endog and ||| get	count=1
arg	c and ||| c	count=1
arg	of data confidence ||| alpha alternative	count=1
arg	at (endog mu ||| mu	count=1
function_arg	lowess [arg_2] ||| [arg_2] [function_1]	count=1
function	of [function] ||| compute min [function]	count=1
function	to ||| sumofsq	count=1
class	a two sample ||| gof chisquare ind	count=1
arg	used to test ||| regression autolag	count=1
arg	flat to matrix ||| params nar nma	count=3
module	to ||| sandbox regression	count=2
function	correlation matrix for ||| matrix	count=1
function	using the breslow method ||| breslow loglike	count=1
function	minus the ||| resid	count=1
class	wald-test for a ||| results	count=1
arg	string summarizing the ||| get_l1_slsqp_results get_l1_cvxopt_results	count=1
class	the cdf ||| cdflink	count=1
function	the solvers using ||| run solvers	count=1
arg	[arg_1] 2d a ||| [arg_2] [arg_1]	count=1
function_arg	a linear model ||| multi ols model	count=1
class	compute var p ||| varresults	count=1
arg	plots lags on the ||| x ax lags	count=1
function	[function_1] text ||| [function_1] [function_2]	count=1
module	estimates of ||| sandbox	count=1
function	other info ||| init	count=1
class	other info ||| filter	count=1
arg	function f returns ||| x f epsilon args	count=1
arg	iteratively [arg_2] ||| start_params [arg_1] [arg_2]	count=1
module	collect required results from ||| stats	count=1
module	with options ||| sandbox	count=1
arg	reusable function to make ||| values stderr impcol rescol	count=1
class	of autoregressive lag-polynomial ||| arma process	count=1
module_class	[module_1] two independent ||| [module_1] ttest [class_2]	count=1
function	observation and transition ||| obs	count=1
function	the distribution of ||| distribution	count=1
arg	effects ||| model params	count=1
function	inflation factor is ||| inflation factor	count=2
arg	generate an image showing ||| ax row_order column_order hide_complete_rows	count=1
arg	apply linear transform for ||| x transform	count=1
arg	line to a plot ||| ax	count=1
arg	the nodewise_weightvalue ||| exog nodewise_row	count=1
module	with zero axis consecutive ||| stats	count=1
function	of marginal effects by ||| margeff cov params	count=1
class	smoothing ||| smoothing spline	count=1
function	computes ||| params	count=1
arg	enthresh npcs and ||| enthresh npcs	count=1
function_arg	marginal effects [arg_2] ||| [arg_2] [function_1]	count=2
function	discrete ||| discrete	count=5
module	engle's test for ||| sandbox stats	count=1
function	[function_1] quantiles ||| [function_1] [function_2]	count=1
arg	reference line ||| line	count=1
arg	having v degrees of ||| v	count=2
function	covariance ||| mat	count=1
class	covariance with degrees ||| varresults	count=1
function	p loglikelihood ||| llf	count=1
function	x^twy (transposed ?) ||| xtwy	count=1
function	the memory ||| memory	count=1
function_arg	[function_1] parameter ||| [function_1] [arg_2]	count=3
function	[function] credit card ||| [function]	count=1
arg	compute a ||| r_matrix	count=1
arg	estimates ||| cov_re vcomp	count=1
function	aic hurvich criteria ||| aic hurvich	count=2
module	uncensored endog duration ||| duration	count=2
function	[function_1] [function_2] to the least ||| [function_1] [function_2]	count=4
arg	equivalence ||| low upp usevar	count=1
function	iqr for each variable ||| iqr	count=1
function	ttest independent sample ||| ttest ind	count=1
class	the f-test for a ||| likelihood model results	count=1
function	approximate inverse ||| wdesign	count=1
function	parse ||| parse	count=1
function_arg	gradient of [arg_2] ||| [function_1] [arg_2]	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] table [function_arg_2]	count=3
function	returns a list ||| from	count=1
class	in an nominal ||| nominal	count=1
arg	evaluate ||| endog_predict exog_predict	count=1
function	return integer position of ||| get	count=1
function	the test statistic ||| test stat	count=1
function	for the mean ||| mv mean	count=1
function	from each parameter component ||| from components	count=1
module	sequence of date strings ||| base	count=1
arg	plot [arg_2] ||| [arg_2] [arg_1]	count=1
class	the poisson ||| poisson	count=1
class	representation ||| representation	count=2
module	svar ||| tsa vector_ar	count=1
module	(m in regression ?) ||| sandbox panel	count=1
arg	calculate sum ||| x	count=1
function	evaluate the basis ||| basis	count=1
module	distribution parameters ||| sandbox distributions	count=2
arg	a joint linear ||| invcov	count=1
function	the log-likelihood ||| loglike	count=5
module	calculate the ||| tsa	count=1
arg	spaced time ||| time	count=1
arg	the fitted mean response ||| freq_weights scale	count=4
class	to estimate the gls ||| gls	count=1
class	row ||| series	count=1
function	[function_1] limit for ||| [function_2] [function_1]	count=3
function	standard error ||| std	count=1
class	the ||| filter	count=2
function	of ||| stats	count=1
arg	ma polynomial is ||| x	count=1
arg	polynomial is not ||| x	count=1
arg	one sample proportion the ||| value nobs	count=1
arg	data as binary indicators ||| endog exog	count=2
function	[function_1] residuals ||| [function_2] [function_1]	count=28
function	state vector ||| state	count=1
class	the global [class_1] [class_2] based on the current ||| [class_1] [class_2]	count=1
function	random sample of ||| sample	count=1
module	of scipy stats ||| sandbox stats	count=1
arg	of params ||| params	count=1
arg	a joint linear hypothesis ||| cov_p scale invcov	count=1
function	the regularized fitted ||| est regularized	count=1
function_arg	[function_1] params ||| [function_1] obs [arg_2]	count=1
class	in ipython notebook ||| summary	count=1
function	a normal ||| normal	count=1
function	a rectangle in ||| rectangle	count=1
class	model returns ||| model	count=2
function	covariance matrix for ||| covariance matrix	count=1
module	columns [module] zeros ||| [module]	count=1
function	corresponding detection limit ||| detection limit	count=1
arg	f returns 1d ||| x f epsilon	count=1
class	for ||| likelihood model	count=1
arg	data as binary ||| endog exog groups	count=2
class	significance value for ||| coef c	count=1
function_arg	score [arg_2] ||| [function_1] sqrt params [arg_2]	count=2
function	[function_1] [function_2] ||| [function_1] from [function_2]	count=1
arg	the number [arg] ||| [arg]	count=1
function	[function_1] for quantiles ||| [function_2] [function_1]	count=1
module	of parameters in ||| tsa	count=1
function	for the ||| init kalman state	count=1
arg	variance is the ||| x idx split	count=1
function	for movorder ||| movorder	count=1
function	and returns a ||| dates	count=1
module	white noise covariance with ||| tsa	count=1
function	[function_1] leave-one-out estimator ||| [function_2] [function_1]	count=3
function	used [function] reference asymtotic ||| [function] reference	count=1
arg	upper or lower ||| b lower	count=1
arg	location and scale only ||| scale	count=2
function	standard error ||| get bse	count=1
arg	at the theoretical minimum ||| alpha score	count=1
arg	p q ||| p q	count=1
function	nipals implementation ||| nipals	count=1
arg	measures in kim and ||| ab dg	count=1
arg	principle components using ||| ix iy clf	count=1
function	compared to control performs ||| pairscontrol	count=1
class	derivative ||| discrete model	count=1
function	hessian of the ||| hessian	count=1
class	trimmed ||| trimmed	count=1
function	the cohn numbers for ||| cohn numbers	count=1
module	sum on a ||| graphics	count=1
function	extend a list ||| extend	count=1
class	of autoregressive ||| process	count=1
module	compute var p ||| tsa vector_ar	count=1
function	cumulative [function_2] ||| [function_1] [function_2]	count=5
function	provides a [function_2] ||| [function_2] [function_1]	count=6
arg	regression plots studentized ||| results external	count=1
arg	s ||| s axis	count=1
arg	horizontal axis ||| ax data	count=2
function	interval ||| interval	count=2
arg	calculate the ||| effect_size df_num	count=2
arg	is the same in ||| x	count=1
function	effects by the ||| margeff cov	count=1
function	observations within a ||| s within	count=1
function_arg	the psi function ||| psi z	count=2
arg	given term ||| query_term dict	count=1
function	return dictionary with extra ||| get	count=1
class	error of the ||| gmmresults	count=2
module	returns a list of ||| tsa	count=1
function	[function_1] parameter component ||| [function_2] [function_1]	count=1
function	a bivariate ||| bv	count=1
function	one way anova ||| anova	count=1
function	the confidence intervals for ||| ci	count=1
module_class	likelihood of [class_2] ||| [module_1] [class_2]	count=6
class	covariance with degrees of ||| varresults	count=1
function	the cohn [function_2] ||| [function_1] [function_2]	count=4
arg	the ||| results	count=1
arg	labels on horizontal axis ||| ax data labels	count=1
function	of the parameter ||| get	count=1
module	of ||| sandbox regression	count=2
function	[function_1] of covariance ||| [function_2] [function_1]	count=2
module	convolution ||| tsa filters	count=1
function	value effect ||| conf int	count=1
arg	objects in ||| pvalues group_name	count=1
function	a list of ||| from	count=1
function	variable s tested ||| sig	count=1
module	sequence of date ||| base	count=1
class	[class_1] odds ratio ||| [class_2] [class_1]	count=1
arg	on horizontal [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] x ||| [function_1] [arg_2]	count=5
module_class	with [class_2] ||| [module_1] [class_2]	count=4
function_arg	cusum statistic [arg_2] ||| [function_1] alpha [arg_2]	count=1
function	get the location ||| get	count=1
class	kstepahead cross validation iterator ||| kstep ahead	count=1
function_arg	transformed [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	for starting [arg_2] ||| [arg_2] [function_1]	count=1
module	float [module] log-likelihood ||| [module]	count=1
function_arg	[function_1] params ||| [function_1] [arg_2]	count=1
arg	any ||| start_params fargs	count=1
module	[module] log-likelihood ||| [module]	count=1
arg	the kalman filter ||| params start p	count=1
class	coefficients ||| factor results	count=1
class	the model to ||| additive model	count=1
class	[class_1] squares ||| [class_2] [class_1]	count=2
arg	[arg_1] d2 ||| [arg_2] [arg_1]	count=2
class	the conditioning ||| mvnormal	count=1
function	generate the approximate inverse ||| calc wdesign	count=1
function	sequence ||| from str	count=1
function	mixture ||| mixture	count=1
arg	needed for ||| cls params	count=1
function	roots ||| arroots	count=1
function	the missing ||| plot missing	count=1
arg	y normed=true detrend=detrend_none ||| y normed	count=1
function	to update ||| update	count=1
class	equal ||| descr stats	count=1
function	estimate of variance of ||| var	count=1
function	the mean ||| mv mean	count=1
arg	divided by nobs ||| effect_size nobs n_bins alpha	count=1
class	for andrew's ||| andrew	count=1
class	the significance ||| test reg coef	count=1
module	returns ||| duration	count=1
function	dot product ||| dot	count=1
class	estimates of ||| dynamic factor	count=1
function	the schoenfeld ||| schoenfeld	count=1
function_arg	score [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] sums for ||| [function_2] [function_1]	count=3
function	autocovariance for ||| acovf	count=1
module	strikes ||| strikes	count=1
function	covariance ||| calc	count=1
function_arg	create [function_1] [arg_2] on off diagonal ||| [function_1] [arg_2]	count=1
class	and model this ||| model	count=1
arg	the ||| exog	count=2
module	error of the ||| sandbox	count=1
function_arg	[function_1] is a ||| [arg_2] [function_1]	count=1
arg	a wald-test ||| cov_p scale	count=1
module	t-test for t-test ||| stats	count=1
module	to print ||| sandbox	count=2
module	density ||| sandbox nonparametric	count=1
module_class	[module_1] covariance ||| [module_1] [class_2]	count=2
function	theoretical autocovariance function ||| acovf	count=1
function_arg	[function_1] log-likelihood parameters ||| [arg_2] [function_1]	count=2
function	perform a test ||| test	count=1
module	p ||| vector_ar	count=1
function_arg	quantiles [arg_2] ||| [function_1] [arg_2]	count=1
module	instance ||| fertility	count=1
arg	z ||| z	count=6
function	procedure for initial ||| initial	count=1
arg	run ||| nrepl	count=1
arg	function plots lags ||| ax lags alpha	count=1
module_class	[module_1] sarimax ||| [module_1] [class_2]	count=2
function	test ||| test group	count=1
function_arg	[function_1] a data ||| [function_1] thresholded [arg_2]	count=1
arg	estimate of mu ||| mu initscale axis	count=1
class	compute a wald-test for ||| results	count=1
function	out of sample ||| get predict out of sample	count=1
function	errors of ||| geterrors	count=1
function_arg	fit the [arg_2] ||| [function_1] [arg_2]	count=1
function	the stata ||| stata	count=1
function	packed parameter vector ||| packed	count=1
function	info ||| init kalman	count=1
module	covariance ||| panel	count=1
arg	ar and ||| ar	count=1
arg	[arg_1] is for ||| [arg_2] r [arg_1]	count=1
function	evaluates ||| psturng	count=1
arg	indices are the variables ||| indices	count=1
arg	statistic ||| x max_dim epsilon distance	count=1
function	and ||| state	count=1
function	starting parameters ||| start params	count=7
function	[function] of jacobian ||| [function]	count=1
arg	marginal effects by ||| model params	count=1
arg	the ||| mod params	count=2
arg	parameters ||| params exog exposure offset	count=1
function	sequence of ||| dates from str	count=1
function	_tricube function applied ||| lowess tricube	count=1
arg	this ||| weights	count=1
arg	[arg] around mean ||| [arg]	count=1
module	apply the ||| tsa	count=1
module	a list ||| tsa base	count=1
arg	parameter in ||| param_num beta_high beta_low	count=1
function	method to get ||| get	count=2
function	for out of sample ||| get predict out of sample	count=1
module	the info ||| tsa	count=1
arg	by the delta method ||| params exog	count=1
function_arg	[function_1] func ||| [arg_2] [function_1]	count=2
module	of the parameter ||| duration	count=1
arg	pairwise comparisons with a ||| multitest_method	count=1
function	test that [function_2] ||| [function_2] [function_1]	count=3
class	writing ||| stata writer	count=1
class	parameter ||| gmmresults	count=1
function	calculate the ceres ||| ceres resids	count=1
function	the approximate inverse ||| wdesign mat	count=1
arg	by the delta method ||| model params	count=1
function_arg	squares [arg_2] ||| [arg_2] [function_1]	count=1
class	return results ||| test results	count=1
arg	x x [arg_2] ||| [arg_2] [arg_1]	count=1
function	to test ||| lr test	count=1
arg	groups are different ||| pvals groups exact	count=2
function	residuals parameters ||| resid	count=3
function	standard deviation of ||| std	count=1
function_arg	derivative of least ||| deriv z	count=1
function	of an arma ||| arma	count=3
module	[module_1] family ||| [module_1] [module_2]	count=1
module	fit ols regression ||| regression	count=1
arg	correlation matrix to covariance ||| corr	count=1
class	info needed for the ||| kalman filter	count=1
function_arg	[function_1] row into ||| [function_1] [arg_2]	count=1
module	based on the ||| genmod	count=1
function	random effects for ||| random effects	count=1
class	a ||| micedata	count=1
arg	studentized resids vs leverage ||| external alpha criterion	count=1
function	of ||| margeff cov params	count=2
class	factor decomposition of ||| factor model	count=1
arg	any model ||| start_params fargs	count=1
function	the integer row labels ||| maybe	count=1
function	partial autocorrelations from ||| pacf from	count=3
function	[function_1] unknown mean ||| [function_1] [function_2]	count=1
arg	objects in [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	frequency using [arg_2] ||| [function_1] [arg_2]	count=1
arg	error bands assuming ||| orth repl	count=2
function	summary table [function_2] ||| [function_2] [function_1]	count=1
class	ratio ||| table2x2	count=2
arg	fits ||| start_params	count=1
module	with degrees of freedom ||| tsa vector_ar	count=1
class	[class_1] [class_2] ||| [class_1] [class_2] filter2 x pad	count=3
function	calculates the ||| mat	count=1
function	a monotone ||| monotone fn inverter	count=2
module	another distribution int f ||| distributions	count=1
function_arg	partial regression [arg_2] ||| [function_1] [arg_2]	count=1
module	parameters ||| tsa	count=4
function	be steady-state values notes ||| initialize steady state	count=1
class	for negative ||| negative	count=1
function	of cumulative effect ||| cum	count=1
arg	multivariate linear filter parameters ||| b const	count=1
function	an arma ||| arma	count=3
function	[function] copper ||| [function]	count=1
arg	any model with an ||| start_params fargs	count=1
arg	return a ||| method alpha start_params refit	count=2
arg	to nlags of ||| nlags	count=1
module	jacobian for [module] ||| [module]	count=4
function	initialize possibly re-initialize a ||| initialize	count=1
arg	x y normed=true ||| x y normed	count=1
function	date strings and ||| dates from str	count=1
function	correlation matrix from a ||| corr	count=1
arg	y ||| y	count=4
function	solves ||| solve	count=1
arg	random sample of a ||| rvs	count=1
class	the negative [class_2] ||| [class_1] [class_2]	count=4
module	error of ||| regression	count=1
arg	[arg_1] and r ||| [arg_2] [arg_1]	count=4
module	rank [module] a ||| [module]	count=1
function	other info needed ||| init kalman	count=1
arg	plot ||| ax lines_idx frac	count=1
arg	derivative of [arg] ||| [arg]	count=1
arg	stratifiedtable object ||| var1 var2 strata	count=1
function	format ||| format	count=1
module	helper function [module] ||| [module]	count=2
class	lag-polynomial ||| process	count=1
arg	is a k-sample ||| x	count=1
function	[function_1] squares statistic ||| [function_2] [function_1]	count=1
arg	variance-covariance of ||| params exog cov_params	count=1
function	quantiles ||| quantiles	count=1
module	from ||| stats	count=1
function	returns the covariance ||| covariance	count=1
function	initial ||| initial	count=2
module	series with consecutive ||| stats	count=1
class	fit ||| can corr	count=1
class	pareto ||| pareto	count=1
function	aitchison-aitken kernel for ||| aitchison aitken	count=1
function	the correlation coefficient ||| corr	count=1
function	[function_1] and iqr ||| [function_2] [function_1]	count=1
function	default format for this ||| dtype to default	count=1
function	names of exogenous variables ||| exog names	count=1
function	cooks [function_2] ||| [function_1] [function_2]	count=1
module	model parameters ||| discrete	count=2
arg	q ||| q n	count=1
function	correlation ||| corr	count=2
function	transform observation to ||| transform	count=1
arg	hypothesis ||| cov_p scale	count=1
function	decomposition using ||| decompose	count=1
function	all against ||| diff	count=2
arg	the first elements ||| inplace prefix	count=1
module	coefficients as ||| vector_ar	count=1
arg	effects by ||| model	count=1
arg	corresponding distributedmodel ||| data_generator fit_kwds parallel_method	count=1
arg	s ||| s	count=1
function_arg	output [arg_2] ||| [arg_2] [function_1]	count=4
function	local linear ||| loc linear	count=2
class	ar p process ||| ar	count=2
function	a sequence of date ||| from str	count=1
function	containing the schoenfeld ||| schoenfeld	count=1
function_arg	[function_1] [arg_2] ||| [function_1] int el param_num [arg_2]	count=12
arg	compute a wald-test ||| cov_p scale	count=1
module	the data [module] data ||| datasets [module]	count=2
function	gaussian expanded [function] ||| [function]	count=1
module_class	[module_1] [class_2] ||| [module_1] markov [class_2]	count=1
function	file ||| file	count=1
class	= z ||| dummy transform	count=1
arg	basic version of ||| correction	count=1
arg	summarize ||| title model_name	count=1
function	forecast [function_2] ||| [function_2] [function_1]	count=1
arg	of the [arg_2] ||| [arg_2] [arg_1]	count=7
module	returns ||| base	count=1
function	corresponding detection [function_2] ||| [function_2] [function_1]	count=2
function	to stata's ||| stata fmt	count=1
class	inverse [class_2] ||| [class_1] [class_2]	count=1
function	for the ||| kalman state	count=1
arg	= d2 with d1 ||| d1	count=1
arg	is the same ||| x idx split	count=1
function_arg	psi [arg_2] ||| [arg_2] [function_1]	count=4
class	the significance value ||| test reg coef	count=1
arg	one sample proportion the ||| value nobs alpha alternative	count=1
arg	n [arg_2] ||| [arg_2] [arg_1]	count=4
arg	random sample of a ||| rvs alpha	count=1
function	to impute missing values ||| impute	count=1
function	graphical test for movorder ||| movorder	count=1
function	cohn [function_2] ||| [function_1] [function_2]	count=4
function	plotting ||| plotting	count=2
arg	impulse ||| impulse	count=1
function	efron method to ||| efron	count=1
function	variable name ||| endog name	count=1
function_arg	[function_1] fitted model ||| [function_1] [arg_2]	count=1
class	[class_1] smoothing does ||| [class_1] [class_2]	count=1
function_arg	[function_1] parameters of ||| [arg_2] [function_1]	count=1
arg	maximum likelihood ||| start_params method maxiter full_output	count=1
arg	[arg_1] exogenous ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] each observation ||| [arg_2] [function_1]	count=4
function	the conditional covariance matrix ||| cov	count=1
arg	this [arg_2] ||| [arg_2] r [arg_1]	count=4
function	the delta method ||| margeff	count=1
arg	get bins for ||| rvs distfn arg nsupp	count=1
class	needed for ||| filter	count=1
function	for out ||| get predict out	count=1
function	cvxopt solvers [function_2] ||| [function_1] [function_2]	count=1
class	smoothing does ||| smooth	count=1
arg	a stratifiedtable object ||| cls var1 var2 strata	count=1
class	autocovariance from [class] scaling is ||| [class]	count=1
arg	sf x [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] parameters ||| [function_2] [function_1]	count=6
module	of ||| discrete	count=1
function	tukeyhsd ||| tukeyhsd	count=1
function	integrated ||| sirf errband	count=1
arg	andrews and ||| skip	count=1
function	wang-ryzin [function_2] ||| [function_1] [function_2]	count=1
function	needed for the ||| state	count=1
function	predict ||| predict	count=2
function_arg	arma [arg_2] ||| [function_1] acovf [arg_2]	count=2
function	determinant ||| smw logdet	count=1
function	get the [function_2] ||| [function_1] index label [function_2]	count=3
class	value of the ||| markov switching results	count=1
module	regime (and ||| regime_switching	count=1
function	[function_1] numbers ||| [function_2] [function_1]	count=3
class	significance value for the ||| reg coef c	count=1
function_arg	axes with labels ||| axes index labels	count=1
arg	data confidence ||| alpha alternative	count=1
module	?) ||| panel	count=1
function	data [function_2] ||| [function_1] [function_2]	count=1
arg	the variance-covariance of marginal ||| params exog cov_params	count=1
function	the solvers using the ||| run solvers	count=1
arg	regression results parameters ||| xname yname title	count=1
function	[function_1] hurvich criteria ||| [function_1] [function_2]	count=2
arg	set of series ||| series	count=1
arg	ols ||| olsresults	count=2
function	control performs a ||| pairscontrol	count=1
arg	to maxfact factors ||| maxfact	count=1
class	estimates of ||| dynamic	count=1
function	log-likelihood gradient ||| grad	count=1
function	nonparametric regression ||| reg	count=2
function	ratio test to test ||| compare lr test	count=1
function	the breslow method ||| breslow	count=2
arg	given by a cdf ||| cdf	count=1
function	[function] reference ||| [function] reference	count=2
class	model [class_2] ||| [class_2] [class_1]	count=4
module	returns the ||| kalmanf	count=1
function	proportion the interval ||| interval	count=1
class	noise covariance with ||| varresults	count=1
function	by the delta ||| margeff cov params	count=1
arg	of x parameters ||| x	count=1
arg	of error parameters ||| x1 x2	count=1
module	the constraint ||| genmod	count=1
function	of marginal effects ||| cov params	count=1
function	of marginal ||| margeff cov params	count=1
function	inverse covariance ||| wdesign	count=1
function	a ||| str	count=2
function_arg	= [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] common ||| [function_2] [function_1]	count=4
function	of press ||| press	count=1
arg	for product intersection ||| groups prefix sep return_labels	count=1
class	effects parameters ||| mixed	count=1
class	for a ||| likelihood model	count=1
function	arbitrary ||| constrain sv	count=1
arg	first elements of ||| b index inplace	count=1
class	wls ||| wls	count=1
function_arg	[function_1] contingency table ||| [function_1] split [arg_2]	count=1
function	robust ||| nw	count=1
arg	[arg_1] updates ||| [arg_1] [arg_2]	count=1
class	a chisquare ||| gof chisquare	count=1
arg	marginal effects ||| model params exog	count=1
arg	ljung-box ||| x lags boxpierce	count=1
class	analyze structural ||| svarresults	count=1
function	q ||| q stat	count=1
arg	one parameter of the ||| nobs alpha	count=2
class	parameter estimates ||| phreg	count=1
function	of ||| margeff cov	count=1
function_arg	arma [arg_2] ||| [function_1] periodogram ar ma [arg_2]	count=1
module	for white on ||| stats	count=1
function	between two ordinal ||| test ordinal	count=1
function	with ||| with	count=1
class	none ||| simple	count=2
function	and returns a ||| dates from str	count=1
function	effects ||| margeff	count=1
function	the log odds ratio ||| log oddsratio	count=1
arg	parameters by ||| params	count=1
class	returns the ||| filter	count=1
function_arg	[function_1] new empty ||| [arg_2] [function_1]	count=1
function	generate the approximate ||| calc wdesign mat	count=1
function	mean of bivariate data ||| mean	count=1
function	mean subtracted ||| demeaned	count=1
arg	joint linear ||| cov_p scale invcov	count=1
function	seasonal [function_2] ||| [function_2] [function_1]	count=4
class	of ||| phreg results	count=1
function	version of psturng ||| psturng	count=1
function	compute forecast ||| forecast	count=1
function	solvers using ||| run solvers	count=1
arg	d1 [arg_2] ||| [arg_1] [arg_2]	count=1
function	dispersion ||| dispersion	count=2
class	identical means this ||| means	count=1
function	use gls to update ||| fe	count=1
class	gls ||| panel gls	count=1
function	for observations within a ||| s within	count=1
arg	gets [arg_2] ||| [arg_2] [arg_1]	count=4
arg	plot of each ||| ax	count=2
function	of the state vector ||| state	count=1
function	as a multiindex dataframe ||| summary frame	count=1
function	using empirical likelihood ||| el	count=1
function	[function_1] inverse transformed ||| [function_1] [function_2]	count=1
function	sequence ||| str	count=1
function	predict response variable ||| predict	count=1
function	vars ||| vars type	count=1
function	from arrays ||| handle formula data	count=1
arg	data confidence interval is ||| alpha alternative	count=1
function	a test that the ||| test	count=1
function	and other info needed ||| kalman	count=1
function	the solvers using the ||| solvers	count=1
arg	labels [arg_2] ||| [arg_1] [arg_2]	count=1
function	information criteria ||| info criteria	count=1
function_arg	autocovariance for [arg_2] ||| [function_1] [arg_2]	count=2
module_class	[module_1] [class_2] works only if x ||| [module_1] [class_2]	count=1
function	[function] for ||| [function]	count=1
arg	independent columns [arg] either ||| [arg]	count=1
function	generated ||| generated	count=1
function	corresponding to the distribution ||| get distribution	count=1
module	the full parameter space ||| base	count=1
class	probability ||| kdemultivariate conditional	count=1
arg	of the profile log-likelihood ||| profile_fe	count=1
function	[function] to the ||| [function]	count=3
arg	first elements ||| a b index inplace	count=1
arg	the nodewise_weightvalue ||| nodewise_row idx	count=1
class	k-folds cross validation iterator ||| kfold	count=1
arg	components enthresh [arg_2] ||| [arg_2] [arg_1]	count=2
module	regression ?) ||| sandbox panel	count=1
function	the intercept ||| intercept	count=1
arg	x c ||| x	count=1
class	a two sample z-test ||| gof chisquare ind power	count=1
arg	period in [arg] int ||| [arg]	count=1
arg	process parameters ||| ar ma nobs	count=1
function_arg	[function_1] correlations determined ||| [function_1] [arg_2]	count=2
function	[function_1] random effects ||| [function_2] [function_1]	count=2
function	[function_1] regression ||| [function_1] [function_2]	count=1
function	covariance matrix ||| calc	count=1
class	compute a ||| model results	count=1
class	the formula ||| formula	count=1
function	needed for ||| kalman	count=1
function	given a monotone ||| monotone	count=2
function	approximate inverse covariance matrix ||| wdesign mat	count=1
arg	and labels ||| labels positions	count=1
function	[function_1] text ||| [function_2] [function_1]	count=1
function	parameter of the power ||| power	count=1
arg	divided by [arg_2] ||| [arg_2] [arg_1]	count=2
function	eigenvalue decomposition ||| eig	count=1
function	numbers ||| numbers	count=1
function	band ||| band sz2	count=2
arg	residuals conditional expectation partial ||| focus_exog frac cond_means	count=1
function	generate [function_2] ||| [function_1] [function_2]	count=4
module	returns a list of ||| base	count=1
module	current period's regime (and ||| tsa regime_switching	count=1
module	estimates of ||| statespace	count=1
class	kernel smoothing estimate with ||| kernel	count=1
function	format for this type ||| dtype to	count=1
class	weighted ||| phreg results	count=1
arg	and autocorrelation ||| results nlags	count=1
arg	the data [arg_2] ||| [arg_1] ax [arg_2]	count=1
function	[function_1] for jitter ||| [function_2] [function_1]	count=4
function	to a ||| to	count=1
function	generate the ||| calc wdesign mat	count=1
function	to make flexible grid ||| grid	count=1
function	[function_1] means ||| [function_1] [function_2]	count=2
function	[function_1] autocorrelations from ||| [function_2] [function_1]	count=3
function	covariance of estimates ||| cov	count=1
module	of the ||| tsa	count=2
function	[function_1] latex ||| [function_2] [function_1]	count=2
function	first variable name ||| endog name	count=1
arg	function to ||| x	count=1
class	computes the significance value ||| test reg coef c	count=1
module	for one sample ||| stats	count=2
arg	unconditional [arg_2] ||| [arg_2] [arg_1]	count=2
function	aic hurvich criteria for ||| aic hurvich	count=1
function	[function_1] sample of ||| [function_1] [function_2]	count=1
arg	the log 'star' ||| eta est_vect weights	count=1
function	forecast at the end ||| forecast	count=1
function	fit to a linear ||| fit	count=1
arg	calculates ||| mod	count=1
arg	parameter in ||| param_num beta_high	count=1
function	se ||| compute se	count=1
arg	loglikelihood function parameters ||| params scale	count=1
module	of uncensored endog duration ||| duration	count=2
function	generic multivariate archimedean ||| mv archimedean	count=1
arg	design matrix parameters ||| params exog exposure	count=1
function	parser parse ||| parser	count=1
function	covariance ||| wdesign	count=1
function	method the ||| method	count=1
function	the linear constraint ||| constraint	count=1
function	multivariate autocovariances ||| multivariate acovf	count=2
arg	groups [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	each observation [arg_2] ||| [function_1] [arg_2]	count=2
function	cusum of squares ||| cusum squares	count=3
function	determinant ||| det cov	count=1
arg	interval of the ||| alpha	count=1
function	date ||| dates from	count=1
function	returns the next ||| next sample	count=1
class	of the inverse of [class_1] [class_2] transform ||| [class_1] [class_2] inverse deriv z	count=1
class	[class] error variance ||| [class]	count=1
arg	matrices with singular ||| constrained error_variance order k_endog	count=1
function	3d ||| arfilter old	count=1
function	binomial [function_2] ||| [function_2] [function_1]	count=8
function	solves the discrete ||| solve discrete	count=1
arg	[arg_1] regression ||| [arg_2] [arg_1]	count=4
module	the rows ||| tsa statespace	count=2
function	derivative of the expected ||| mean deriv	count=2
function	[function_1] collier ||| [function_1] [function_2]	count=1
arg	to key in ||| key	count=1
function	use gls to update ||| fe params	count=1
class	selection ||| varresults	count=1
module	gradient of ||| base	count=1
arg	method ||| exog	count=1
function	[function_1] decomposition ||| [function_2] [function_1]	count=1
function	function to calculate sum ||| sumofsq	count=1
module	coefficients notes ||| tsa vector_ar	count=1
arg	[arg_1] is ||| [arg_2] [arg_1]	count=1
arg	a probability p sample ||| p	count=1
arg	of marginal ||| exog	count=1
function	grid in a ||| grid	count=1
function	residuals for the model ||| resid	count=1
function	heteroskedasticity of ||| heteroskedasticity	count=1
module	list ||| base	count=1
arg	method [arg_2] ||| [arg_1] [arg_2]	count=1
function	other info needed ||| kalman	count=1
arg	for 1d parameters ||| x y unbiased demean	count=1
function	equicorrelated [function] with ||| [function]	count=1
module	estimates ||| sandbox	count=1
function_arg	[function_1] of x ||| [arg_2] [function_1]	count=3
function	names for parameters ||| names	count=3
function	score with respect to ||| score	count=1
function	computes the cohn numbers ||| cohn numbers	count=1
arg	1d parameters ||| unbiased	count=1
arg	calculate the ||| effect_size nobs alpha	count=3
arg	multivariate linear filter ||| x b const	count=1
arg	plots lags on ||| lags	count=1
function_arg	cusum [arg_2] ||| [function_1] alpha [arg_2]	count=1
class	an ||| aft	count=1
function_arg	[function_1] [arg_2] ||| [function_1] gradient [arg_2]	count=2
function_arg	plot regression [arg_2] ||| [arg_2] [function_1]	count=2
function	fit the unconditional ||| fit	count=1
class	hypothesis ||| likelihood model	count=1
function	other info needed ||| init kalman state	count=1
function	have the integer row ||| maybe	count=1
function	random draw [function_1] [function_2] ||| statespace simulation smooth results [function_2] [function_1]	count=1
class	the significance ||| reg coef c	count=1
arg	try to ||| float_format title	count=1
module	computes the ||| discrete	count=1
function	constant ||| loc constant	count=1
arg	q is [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function] ndarray or ||| [function]	count=1
function_arg	log-likelihood gradient [arg_2] ||| [function_1] [arg_2]	count=1
arg	the weights ||| weights	count=1
function	roots of autoregressive lag-polynomial ||| arroots	count=1
module	f-test [module] the one ||| [module]	count=1
module	function ||| genmod families	count=19
function	the anscombe ||| anscombe	count=1
function	helper function to ||| sumofsq	count=1
arg	(endog mu freq_weights ||| mu freq_weights	count=1
function	a sequence of date ||| str	count=1
module	a sequence of date ||| base	count=1
arg	provided exog see ||| exog	count=1
arg	of marginal effects by ||| params	count=1
function	calculates the se of ||| compute se	count=1
function	exogenous variables are discrete ||| check discrete	count=1
function	way anova with ||| anova	count=1
function	lfilter to produce output ||| lfilter	count=1
function	returns the residuals ||| resid	count=1
arg	a data ||| data	count=1
function	which observations are misclassified ||| misclassified	count=1
module	of ||| vector_ar	count=2
arg	number [arg] that ||| [arg]	count=1
module_class	[module_1] fitted parameters ||| [module_1] [class_2]	count=2
arg	divided by ||| n_bins alpha	count=1
arg	summary for regression ||| yname xname title alpha	count=1
function	[function_1] html ||| [function_1] [function_2]	count=1
arg	moving ||| x	count=1
module	returns the confidence ||| regression	count=1
function_arg	for autoregressive [arg_2] ||| [arg_2] [function_1]	count=1
class	the discrete ||| rv discrete	count=2
function	with nested optimization ||| ks1	count=1
function	two ordinal variables ||| test ordinal	count=1
arg	rhs and returns ||| rhs	count=1
function	the approximate ||| calc	count=1
module	engle's test for ||| stats	count=1
function_arg	on [arg_2] ||| [arg_2] [function_1]	count=2
arg	approximate inverse covariance ||| mod	count=1
function_arg	[function_1] interval ||| [function_1] int el param_num [arg_2]	count=3
module	a continuous distribution ||| distributions	count=1
arg	labels on horizontal axis ||| ax data labels positions	count=1
class	autoregressive ||| arma	count=1
function	compute ||| test	count=1
function	or [function] ndarray or ||| [function]	count=1
arg	for estimating distribution parameters ||| params	count=1
module_class	[module_1] factor anova ||| [module_1] [class_2]	count=1
class	tweedie family parameters ||| tweedie	count=1
function_arg	determinant [arg_2] ||| [arg_2] [function_1]	count=1
arg	with d1 = x ||| d1	count=1
class	the significance ||| reg coef	count=1
function	wald-test for a ||| wald	count=1
module	return the ||| tsa	count=1
function	autoregressive ||| autoregressive	count=2
module_class	[module_1] smoothing ||| [module_1] [class_2]	count=1
function	joe ||| transform joe	count=2
module	to test ||| sandbox stats	count=2
arg	generate the approximate inverse ||| mod params	count=1
module	strings ||| tsa	count=1
module	the rows or ||| tsa statespace	count=2
function	the default ||| create default	count=1
function	create new [function] instance ||| get robustcov [function]	count=1
function	or an ||| or	count=1
arg	from results instance parameters ||| results yname xname alpha	count=1
arg	[arg_1] appropriate length ||| [arg_2] [arg_1]	count=1
function	svd method to compute ||| compute using svd	count=1
module	date strings and returns ||| base	count=1
function	the covariance matrix ||| covariance matrix	count=1
module	of the [module] ||| [module]	count=1
arg	of freedom and r ||| r	count=2
arg	covariance matrix to correlation ||| cov	count=1
function_arg	[function_1] orthogonal polynomial ||| [function_1] [arg_2]	count=1
module	test ||| stats	count=7
function_arg	[function_1] of equations ||| [arg_2] [function_1]	count=1
arg	ar ||| ar	count=2
function	the test ||| compute test	count=2
class	cached attribute ||| olsinfluence	count=3
function	is ||| loglik boxcox	count=1
function	[function_1] recarray ||| [function_2] [function_1]	count=1
function	autocovariance function ||| acovf	count=1
arg	soln = rhs ||| rhs	count=1
arg	[arg] parameters used ||| [arg]	count=2
arg	to y ||| y	count=1
module	covariance matrix ||| base	count=1
arg	wald-test for ||| r_matrix cov_p scale	count=1
arg	k equal sized groups ||| alpha k_groups	count=1
function	efron method to handle ||| efron loglike	count=1
function	whiten a series ||| whiten	count=2
function	from arrays and ||| data	count=1
module	sandwich [module] pinv x ||| [module]	count=2
class	for the ||| kalman filter	count=1
module	of exogenous ||| base	count=1
arg	the first elements ||| b index inplace	count=1
module	parameter estimates ||| sandbox	count=1
class	for kernel density ||| custom kernel	count=1
function	hessian matrix of ||| hessian	count=4
function	get [function_2] ||| [function_2] [function_1]	count=4
function	test to test ||| lr test	count=1
module_class	[module_1] g'' ||| [class_2] [module_1]	count=1
function	covariance matrix ||| wdesign mat	count=1
function	the interval includes the ||| reject interval	count=2
module_class	negative [class_2] ||| [module_1] negative [class_2]	count=3
class	a wald-test for a ||| model	count=1
function	for out ||| predict out	count=1
arg	corresponding to key in ||| key	count=1
function	graphical test for movorder ||| check movorder	count=1
arg	[arg_1] ma parameters ||| [arg_2] [arg_1]	count=1
function	compute var ||| llf	count=1
arg	marginal effects by ||| model params exog	count=1
function	return parallel ||| parallel	count=1
function	linearity the null hypothesis ||| linear	count=2
function	of arma ||| arma	count=1
function	sample proportion the interval ||| interval	count=1
function	missing data [function_2] ||| [function_2] [function_1]	count=1
function	of success ||| binom	count=1
function_arg	sums for [arg_2] ||| [arg_2] [function_1]	count=1
arg	estimated density and ||| density nobs	count=1
module	in construction uses loop ||| tsa	count=1
function	[function_1] partial autocorrelations ||| [function_1] [function_2]	count=2
function	[function_1] odds ratio ||| [function_1] [function_2]	count=2
arg	by ||| params exog	count=1
function_arg	[function_1] parameters ||| [function_1] factor [arg_2]	count=3
arg	scale only tested on ||| scale	count=2
function	bartlett [function_2] ||| [function_2] [function_1]	count=2
module	labels [module] unique ||| [module]	count=1
module	test ||| tsa	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=1410
function	of freedom ||| df fit	count=1
class	tukey's [class_2] ||| [class_2] [class_1]	count=5
function	summary for the ||| summary	count=1
function	sqrt of chisquare ||| chisquare	count=1
module	the elements ||| tsa statespace	count=1
arg	in-sample prediction and ||| start end probabilities	count=1
module	for minimum distance ||| sandbox stats	count=1
function	solve a linear ||| solve	count=2
function	returns a ||| from	count=1
function	parameters [function_2] ||| [function_2] start [function_1]	count=1
class	plot ||| plot	count=1
function	covariance matrix computed ||| cov	count=4
function_arg	ordinal [arg_2] ||| [arg_2] [function_1]	count=4
module	correction ||| tsa vector_ar	count=2
function	unobserved factors ||| factors	count=1
function	local constant ||| loc constant	count=1
function_arg	[function_1] for 1d ||| [arg_2] [function_1]	count=3
module	strings and returns ||| tsa	count=1
module	link parameters ||| genmod families	count=2
function	return integer ||| get	count=1
class	compute a wald-test for ||| likelihood model results	count=1
function	to calculate sum of ||| sumofsq	count=1
function_arg	[function_1] [arg_2] ||| [function_1] start_params method maxiter [arg_2]	count=2
function	power of [function_2] ||| [function_2] [function_1]	count=4
class	for gmm ||| gmm	count=1
arg	each count level for ||| exog exposure offset	count=1
class	summary ||| stratified table	count=1
function_arg	mean of [arg_2] ||| [function_1] [arg_2]	count=3
function	of ||| sumofsq	count=1
function_arg	[function_1] estimator ||| [function_1] [arg_2]	count=6
arg	generalized entropy parameters ||| px alpha logbase	count=1
class	the ||| markov switching results	count=1
function_arg	the [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
class	simulation smoothing ||| simulation smooth	count=1
class	andrew's wave ||| andrew wave	count=4
arg	create ||| use_loc	count=1
function	[function] vector from ||| simulated [function]	count=3
class	perform simulation ||| simulation	count=1
function_arg	bias [arg_2] ||| [function_1] [arg_2]	count=1
function	for autoregressive ||| autoregressive	count=1
arg	the first elements ||| a b index inplace	count=1
module	method for minimizing a ||| stats	count=1
arg	variance is ||| y x	count=1
arg	p sample [arg_2] ||| [arg_1] [arg_2]	count=3
function	the parameter estimates ||| get	count=1
function	residual correlation matrix ||| resid corr	count=2
arg	if the given groups ||| groups	count=1
module	the distribution location and ||| distributions	count=2
arg	ttest to save typing ||| value1 value2 std_diff dof	count=1
class	estimates ||| dynamic factor	count=1
arg	turns ||| dates	count=1
function	offset vector to ||| offset	count=1
module	the distribution location ||| distributions	count=2
function	in-sample prediction [function_2] ||| [function_2] [function_1]	count=2
function	observation and ||| obs	count=1
function	the test statistic ||| test	count=1
function_arg	create [function_1] [arg_2] off diagonal ||| [function_1] [arg_2]	count=1
arg	scale for ||| scale	count=1
function	out of [function_2] ||| [function_1] [function_2]	count=2
arg	indices are the ||| indices	count=1
class	using fftconvolve3 with arma ||| arma	count=1
function	using exact maximum likelihood ||| mle	count=1
function	display as html ||| repr html	count=1
arg	drop_idx ||| drop_idx	count=1
function	on [function] ||| [function]	count=1
function	for the ||| state	count=1
arg	are different from the ||| exact	count=1
arg	a deepcopy in contrast ||| tables keep_headers	count=1
function	and returns a ||| str	count=1
class	[class_1] model with ||| [class_2] [class_1]	count=2
function	observation and transition equations ||| obs	count=1
module	mutual information [module] two random ||| [module]	count=1
arg	get the ar ||| ar ma nobs	count=1
arg	object corresponding to the ||| params	count=1
function	_tricube function applied to ||| lowess tricube	count=1
class	for tukey's [class_2] ||| [class_2] [class_1]	count=2
class	[class] dictionary ||| [class]	count=1
function	cached attribute [function_1] [function_2] influence ||| [function_2] [function_1]	count=2
module	tests ||| stats	count=1
module	calculates ||| stats	count=2
class	cross validation ||| leave	count=1
class	standard ||| phreg results	count=1
module	matrices are ||| statespace	count=1
function	locates the corresponding detection ||| detection	count=1
arg	q coefficients that ||| q	count=1
function	the ||| margeff	count=2
arg	one parameter of ||| nobs	count=2
function	of dispersion ||| compute dispersion	count=2
class	for skewness ||| uv	count=1
function	of cumulative ||| cum	count=1
function	of sample ||| of sample	count=2
module	scipy stats ||| stats	count=1
function	determine envelope for ||| envelope	count=1
arg	estimated density ||| density nobs	count=1
arg	principle components using mayavi ||| iy iz clf	count=1
arg	for a parameter and ||| param_num	count=1
function	log [function_2] ||| [function_1] [function_2]	count=2
function	density the confidence interval ||| confint	count=1
function	[function_1] [function_2] just the exogenous random ||| [function_1] [function_2]	count=2
function	test if the ||| test	count=1
class	computes the significance ||| coef c	count=1
arg	pairwise comparisons with ||| count nobs value multitest_method	count=1
arg	to calculate sum of ||| x	count=1
arg	projected gradient method ||| grad start project	count=1
module	of freedom ||| tsa	count=1
module	datetime ||| base	count=1
arg	orthogonal polynomial approximation ||| x polybase order limits	count=1
module	the model ||| statespace	count=1
function	generated vector ||| generated	count=1
function_arg	exog array [arg_2] ||| [arg_2] [function_1]	count=3
function	knockoff [function_2] ||| [function_2] [function_1]	count=2
function	effects by the ||| margeff	count=1
function	exog ||| get exog	count=1
module	calculates the ||| base	count=1
function	f-test ||| ftest	count=1
module	list ||| tsa	count=1
function	fits the model ||| fit	count=1
arg	squares along ||| x	count=1
arg	gradient ||| grad start project	count=1
function	solve for any one ||| solve	count=6
arg	bic and r2_adj ||| skip_crossval cv_iter	count=1
class	wald-test ||| results	count=1
arg	exogenous ||| params exog	count=1
arg	and scale only tested ||| scale	count=2
arg	needed for the ||| cls params	count=1
arg	row-wise ||| minabs max_elt	count=1
arg	function to calculate sum ||| x	count=1
function	format for ||| dtype to	count=1
arg	difference r and degrees ||| r	count=1
class	[class_1] gaussian ||| [class_1] [class_2]	count=1
class	log-likelihood evaluated ||| generic likelihood model	count=1
arg	[arg_1] r and ||| [arg_2] [arg_1]	count=1
function	transforms the ||| star	count=1
arg	and labels ||| labels	count=1
function	factor of diagonal of ||| factor	count=1
function	the initial ||| initial	count=1
function	tost the [function_2] ||| [function_2] [function_1]	count=5
arg	by minimizing negative loglikelihood ||| start_params maxiter method tol	count=2
function	minus ||| detrend	count=1
function	strings and ||| from	count=1
arg	imposed ||| sinv	count=1
module	marginal effects ||| discrete	count=1
function_arg	recursive ols ||| recursive olsresiduals olsresults	count=1
class	computes the ||| kernel reg	count=1
module	the parameter ||| sandbox regression	count=1
function	from a ||| from	count=1
class	nominal ||| nominal	count=1
module	the ||| sandbox regression	count=2
function	around [function] method of ||| pairwise [function]	count=1
arg	computes empirical ||| alphap betap	count=1
function	dffits measure ||| dffits	count=2
function	compute a wald-test ||| wald test	count=1
class	equal ||| descr stats w	count=1
function_arg	filter [arg_2] ||| [function_1] [arg_2]	count=2
module	call to fftconvolve biased ||| sandbox archive	count=1
function	tuple or [function] ndarray ||| [function]	count=1
function	[function_1] squares statistic ||| [function_1] [function_2]	count=1
arg	1d ||| x y unbiased	count=1
module	parameter estimates with options ||| sandbox regression	count=1
arg	[arg] where ||| [arg]	count=2
arg	is ||| x	count=7
function	fit ||| fit	count=16
function	inverse covariance matrix ||| calc	count=1
arg	summary for regression results ||| yname xname	count=1
arg	b ||| b	count=1
arg	by a cdf ||| binsy cdf	count=1
class	filter ||| filter	count=3
function	[function_1] partial autocorrelations ||| [function_2] [function_1]	count=2
function	tweedie ||| tweedie	count=1
arg	of endog ||| endog	count=2
function	scipy stats distribution ||| distribution	count=1
function	of ||| dates from	count=2
function	ab ||| symbanded	count=1
function	the variance ||| var	count=1
arg	is factor b nested ||| b	count=1
module	of datetime ||| tsa	count=1
function	insert column of ||| insert	count=1
arg	coefficients of an arima ||| order start_params method	count=1
function	for beta ||| beta	count=1
arg	vector autoregression coefficient ||| maxlag forward_autocovariances	count=1
arg	autocorrelation function plots lags ||| lags alpha	count=1
function	compute multivariate [function_2] ||| [function_2] [function_1]	count=5
module	freedom correction ||| tsa vector_ar	count=1
arg	train/test indexes [arg] split data ||| [arg]	count=3
arg	panel hac ||| results nlags	count=1
function	[function_1] numbers for ||| [function_1] [function_2]	count=3
class	a formula ||| formula	count=1
function_arg	[function_1] estimator of ||| [function_1] [arg_2]	count=6
function	local linear ||| est loc linear	count=2
function	covariance matrix ||| cov	count=10
arg	a set of regressors ||| results exog_idx grid fig	count=1
function_arg	contrast [arg_2] ||| [function_1] all one [arg_2]	count=2
function	new [function] instance ||| get robustcov [function]	count=1
function	estimate the ||| fit find	count=1
arg	npcs and ||| npcs	count=1
function	containing [function] ||| [function]	count=1
arg	of ||| model params	count=1
function	[function_1] distance ||| [function_2] [function_1]	count=1
module	the irls algorithm ||| genmod families	count=1
function_arg	monotone [arg_2] ||| [arg_2] [function_1]	count=3
function	instance [function] specified covariance ||| [function] robustcov	count=1
function	stata ||| stata	count=2
arg	generate the ||| mod params	count=1
module	with degrees of ||| vector_ar	count=1
class	sarimax ||| sarimax	count=1
arg	[arg_1] we have ||| [arg_1] [arg_2]	count=1
class	in [8] ||| coef c	count=1
class	indexed ||| stata reader	count=1
function	the location of ||| loc	count=2
module_class	link function g'' ||| families cdflink	count=1
arg	regressors ||| results exog_idx grid fig	count=1
arg	inverse covariance ||| mod	count=1
rep	the distributed [function_arg_2] ||| [module_class_1] [function_arg_2]	count=2
arg	data ||| class_type data	count=1
module	for no interaction ||| stats	count=1
function	hierarchical ||| hierarchical	count=1
class	a ||| likelihood	count=2
module	reference line [module] rejection in ||| [module]	count=1
function	[function] this ||| sigma2 [function]	count=1
function	in-sample prediction [function_2] ||| [function_1] [function_2]	count=2
function	"create the default ||| default	count=1
function	a regularized ||| regularized	count=1
class	an ar p ||| ar	count=1
function	in csv format ||| csv	count=1
function	measure of dispersion ||| dispersion	count=2
function	solve for any ||| solve	count=6
function	and iqr for each ||| iqr	count=1
class	of white ||| varresults	count=1
arg	is not ||| x	count=2
function	ipython ||| repr	count=1
function	returns the ||| init kalman	count=1
function	the power of a ||| power	count=1
class	weighted correlation ||| descr	count=1
arg	a comparemeans object ||| data1 data2 weights1	count=1
function	gradient for ||| calc grad	count=1
function	for regime transition probabilities ||| regime transition	count=1
arg	gets [arg_2] ||| [arg_1] [arg_2]	count=2
arg	if [arg] ||| [arg]	count=2
arg	objects in the group ||| pvalues group_name group	count=1
function	to obtain the factors ||| factors	count=1
arg	to nlags of stable ||| nlags	count=1
module	selection ||| tsa vector_ar	count=2
function	indicators for ||| indicators	count=1
function	the most [function_2] ||| [function_2] [function_1]	count=1
class	exogenous ||| model	count=1
function	[function_1] axes with ||| [function_2] [function_1]	count=1
function	inverse [function_2] ||| [function_2] [function_1]	count=2
function	generate ||| calc	count=1
function	the cohn ||| cohn	count=1
class	a generalized linear ||| glm	count=2
arg	[arg] vector ||| vector missing [arg]	count=1
function	cluster robust [function_2] ||| [function_2] [function_1]	count=2
module	and returns ||| base	count=1
class	pareto ||| my pareto	count=1
arg	fitted mean response ||| freq_weights	count=4
module_class	[module_1] decomposition of ||| [module_1] factor [class_2]	count=1
function_arg	[function_1] least ||| [function_1] [arg_2]	count=2
function	[function_1] [function_2] comparison ||| [function_1] [function_2]	count=4
function	errors of the parameter ||| errors	count=1
module_class	[module_1] smoothing ||| [module_1] simulation [class_2]	count=1
class	of linear model with ||| tlinear model	count=1
function_arg	[function_1] plots lags ||| [arg_2] [function_1]	count=1
function	take a linear ||| multi ols	count=1
module	of x ||| sandbox	count=1
function	full parameter ||| make param	count=1
module	degrees of ||| vector_ar	count=1
arg	columns [arg] either iterable ||| [arg]	count=1
function	lowess ||| lowess	count=1
arg	[arg] int that ||| [arg]	count=1
function	the approximate inverse covariance ||| mat	count=1
arg	error bands ||| orth repl signif	count=2
arg	mu freq_weights ||| mu freq_weights	count=1
function	[function] distribution ||| gof chisquare [function]	count=3
arg	the ||| alpha	count=9
function_arg	autoregressive [arg_2] ||| [arg_2] [function_1]	count=1
class	exogenous variables ||| model	count=1
class	returns ||| geeresults	count=1
function	decomposition using moving averages ||| decompose	count=1
function	outlier tests ||| outlier test	count=2
arg	variation if no ||| x bounds window_length scale	count=1
module_class	for [class_2] ||| [module_1] gof chisquare [class_2]	count=3
class	for a ||| results	count=2
function	the errors of the ||| geterrors	count=1
module	for pvalues ||| sandbox stats	count=1
arg	factor b nested within ||| b	count=1
function_arg	[function_1] of data ||| [arg_2] [function_1]	count=1
module	parameter estimates with ||| sandbox	count=1
function	[function_1] joblib parameters ||| [function_2] [function_1]	count=1
function	crosscovariance for ||| ccovf	count=1
function	unsqueeze ||| unsqueeze	count=1
arg	by ||| params	count=1
class	[class_1] odds ||| [class_2] [class_1]	count=1
function	output ||| output	count=2
module	strings and returns ||| base	count=1
function	computes the test ||| compute test stat	count=1
module	demarta and ||| sandbox	count=1
function_arg	for [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] jitter ||| [function_2] [function_1]	count=4
arg	for regression results parameters ||| xname yname	count=1
arg	function f returns 1d ||| x f epsilon	count=1
class	inverse ||| inverse	count=1
function	return endog and exog ||| get	count=1
function	given moments ||| moments	count=1
module	for panel data of ||| stats	count=1
arg	the number [arg] that fall ||| [arg]	count=1
class	plot ||| recursive lsresults	count=3
function	arma models ||| arma	count=1
function	the logistic transform ||| logistic	count=1
module	string labels [module] unique ||| [module]	count=1
module	exponential family distribution parameters ||| genmod families	count=1
function	for the mean of ||| mean	count=1
function	returns ||| state	count=1
arg	compute a wald-test ||| r_matrix cov_p scale	count=1
function	success is p ||| binom	count=1
function	beta ||| beta	count=1
function_arg	ticks [arg_2] ||| [function_1] ax data [arg_2]	count=2
module	stack loss ||| stackloss	count=1
arg	hypothesis ||| r_matrix cov_p scale	count=1
function	likelihood of the data ||| likelihood	count=1
function	simulate a ||| simulate	count=2
arg	regression plots studentized ||| results external alpha	count=1
class	hypothesis ||| model results	count=2
function	envelope for jitter ||| jitter envelope	count=3
function	subset of ||| compute subset	count=1
arg	and a ||| a scale	count=1
function	for [function] ||| [function]	count=2
class	fitted emirical null ||| null	count=1
module	when entering return ||| iolib	count=1
arg	gradient method ||| grad start	count=1
arg	other info ||| cls params	count=1
function	method ||| margeff cov	count=1
module	a list of datetime ||| tsa base	count=1
class	the value of the ||| results	count=1
function_arg	criterion function for ||| rho z	count=4
arg	variance-covariance of marginal effects ||| params exog cov_params	count=1
module	the nile ||| nile	count=1
function	computes the test statistic ||| test stat	count=1
function	std [function_2] ||| [function_2] [function_1]	count=3
arg	[arg_1] reference line ||| [arg_2] [arg_1]	count=1
arg	>>> from numpy ||| data axis oldshape	count=1
arg	debiasing parameters ||| mod params alpha l1_wt	count=1
function	full parameter names list ||| make param names	count=1
arg	kim & white ||| ab dg	count=1
module_class	the kalman ||| tsa statespace kalman	count=1
arg	x by ||| x index counts dummies	count=1
function	the nearest ||| nearest	count=2
class	the model to ||| model	count=1
arg	create a mixedlmparams ||| fe_params cov_re cov_re_sqrt vcomp	count=1
class	fft ||| arma fft	count=1
function	autocorrelation ||| acorr ljungbox	count=2
function	[function_1] inflation ||| [function_2] [function_1]	count=4
function	function to calculate ||| sumofsq	count=1
function_arg	limit [arg_2] ||| [arg_2] [function_1]	count=1
module	use joblib only if ||| tools	count=1
function	marginal ||| margeff cov	count=1
function	covariate ||| covariate	count=1
arg	at the theoretical minimum ||| k_params alpha score	count=1
arg	first elements of the ||| a b index inplace	count=1
module	a list of ||| base	count=1
arg	the approximate inverse covariance ||| mod params	count=1
function	hamilton [function_2] ||| [function_1] [function_2]	count=1
function_arg	tabular [arg_2] ||| [arg_2] [function_1]	count=1
module	linear hypothesis ||| base	count=1
module	copper ||| copper	count=1
arg	v notes ||| v	count=1
function	cumulant [function_2] ||| [function_1] from [function_2]	count=1
arg	can produce several types ||| smoother_output	count=1
module	the china smoking/lung cancer ||| china_smoking	count=1
function	all ||| all	count=2
function	inflation ||| inflation	count=1
module_class	[module_1] function ||| [module_1] [class_2]	count=1
function	a list ||| dates from	count=1
arg	for the ||| cls	count=1
module	with one confidence ||| sandbox stats	count=1
module	with degrees ||| tsa vector_ar	count=1
function	lfilter to ||| lfilter	count=1
class	basic summary ||| summary	count=1
module	strings ||| base	count=2
function_arg	[function_1] of error ||| [arg_2] [function_1]	count=1
class	a mixture ||| mixture	count=2
function_arg	an arma [arg_2] ||| [function_1] acf [arg_2]	count=1
arg	exog ||| exog	count=2
function	distribution of random ||| random	count=1
function_arg	[function_1] confidence ||| [arg_2] [function_1]	count=1
function	calculate partial autocorrelations ||| pacf ols	count=1
function	vars ||| vars	count=1
module	lagorder ||| tsa	count=1
arg	summarizes results ||| float_format method	count=1
arg	apply linear transform for ||| transform group_iter	count=1
function	strings and returns ||| str	count=1
function	[function_1] ccpr ||| [function_1] [function_2]	count=1
arg	lags : [arg_2] ||| [arg_2] [arg_1]	count=1
arg	on group sums ||| group	count=1
arg	if data ||| data	count=1
function	test ||| lr test	count=1
arg	a set of regressors ||| exog_idx grid fig	count=1
arg	dataframe ||| cls	count=1
function	cached attribute [function] ||| hat diag [function]	count=3
arg	one sample ||| value nobs alpha alternative	count=1
class	for a ||| model	count=1
class	maximum ||| switching	count=1
arg	deepcopy ||| tables keep_headers	count=1
function	log-likelihood function ||| loglike	count=1
function	confidence region plot ||| contour	count=1
function_arg	[function_1] parameters of ||| [function_1] [arg_2]	count=1
class	linear hypothesis ||| likelihood model	count=1
arg	plots lags on ||| x ax lags	count=1
function	obtain the crude ||| observed crude	count=1
module	white noise ||| vector_ar	count=1
function	parameters display (3 ||| compute a	count=1
function	to stata's default format ||| dtype to default stata	count=1
module_class	likelihood [class_2] ||| [module_1] markov [class_2]	count=1
function	covariance ||| cov	count=5
function	or [function] ndarray ||| [function]	count=1
function	error of the parameter ||| get	count=1
function	solve for any one ||| solve power	count=5
arg	series x x can ||| x	count=1
module	the regression ||| nonparametric	count=1
module	the roots of ||| tsa	count=1
class	a wald-test ||| likelihood model results	count=1
module	to [module] ||| [module]	count=1
function	asymptotically consistent estimate of ||| ybar	count=1
arg	the fitted mean response ||| mu freq_weights scale	count=4
module	continuous distribution given ||| distributions	count=1
function	needed ||| init kalman state	count=2
function	grid plots of ||| irf grid plot	count=2
arg	model of ||| t beta delta	count=1
function	psi ||| psi	count=6
arg	summarize the [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] provided exog ||| [function_1] [arg_2]	count=1
function_arg	[function_1] of the ||| [function_1] exog [arg_2]	count=3
function	from the most ||| most	count=1
module_class	?) jp check ||| sandbox panel unit	count=1
arg	plot from [arg_2] ||| [arg_1] [arg_2]	count=1
arg	interval for ||| sig	count=2
arg	ar [arg_2] ||| [arg_1] [arg_2]	count=2
class	function for gmm ||| gmm	count=1
class	interval for kernel ||| kernel	count=1
class	of white noise covariance ||| varresults	count=1
arg	[arg_1] freq_weights ||| [arg_2] [arg_1]	count=3
function	ratio test to test ||| lr test	count=1
module	effects by ||| discrete	count=1
function_arg	[function_1] and labels ||| [arg_2] [function_1]	count=1
arg	gradient ||| grad	count=1
arg	omitted variables the covariance ||| params_constrained k_constraints exog_extra observed	count=1
function	ordinal ||| test ordinal	count=1
function	[function_1] marginal effects ||| [function_2] [function_1]	count=1
function	discrete distribution parameters ||| discrete	count=1
arg	gets ||| true_params	count=2
rep	return none [function_arg_2] ||| [module_class_1] table [function_arg_2]	count=3
function	evaluate the score ||| score	count=1
arg	time ||| x time	count=1
arg	against one regressor ||| exog_idx fig	count=1
function_arg	autocovariance [arg_2] ||| [function_1] [arg_2]	count=2
function	in 2 subsamples parameters ||| het goldfeldquandt2 old	count=1
function	mean of bivariate ||| mean	count=1
arg	[arg_1] the power ||| [arg_1] [arg_2]	count=8
function	[function_1] the inverse ||| [function_2] [function_1]	count=2
module	is based on the ||| genmod	count=1
function	names ||| names	count=6
module	returns a list ||| tsa base	count=1
module	estimates ||| statespace	count=1
arg	the kalman filter notes ||| params start p end	count=1
function	[function_1] of arma ||| [function_2] [function_1]	count=4
arg	joint linear hypothesis ||| cov_p scale invcov	count=1
arg	compute a wald-test for ||| r_matrix cov_p	count=1
function	get marginal effects of ||| get margeff	count=1
module	parameters ||| sandbox tsa	count=1
class	estimated parameters including the ||| varresults	count=1
arg	mean_params and covariance ||| mean_params	count=1
function	on [function] of ||| [function]	count=1
function_arg	ticks [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	[function_1] [arg_2] ||| [function_1] params constraint params [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] value [arg_2]	count=1
function	generate the ||| wdesign	count=1
arg	mean_params ||| mean_params	count=1
arg	for any ||| gradient start_params fargs	count=1
arg	calculate the ||| effect_size nobs1	count=3
arg	horizontal [arg_2] ||| [arg_2] [arg_1]	count=2
class	draw and random ||| simulation smooth	count=1
function_arg	at [arg_2] ||| [arg_2] [function_1]	count=3
function	conditional on the ||| conditional	count=3
function	helper function for probability ||| prob	count=1
class	the [class] ||| [class]	count=1
function	reorder ||| reorder	count=2
function	ttest of null ||| ttest	count=1
function	info ||| kalman state	count=2
module_class	[module_1] [class_2] transform ||| [module_1] [class_2]	count=1
arg	the [arg] ||| effect_size nobs1 alpha [arg]	count=6
class	arma process is calculated ||| arma	count=1
arg	k ||| x k n p	count=1
module	for nested ||| stats	count=1
function	panel of time ||| panel	count=1
function	strings and ||| dates from	count=1
arg	to matrices with singular ||| error_variance order k_endog	count=1
module	test ||| sandbox stats	count=1
module_class	?) [class_2] ||| [module_1] [class_2]	count=2
class	needed for the ||| filter	count=1
function	the crude ||| observed crude oddsratio	count=1
arg	components enthresh ||| vals enthresh	count=1
function	return the model parameters ||| get	count=1
arg	for a joint linear ||| r_matrix cov_p scale invcov	count=1
class	gmm and return ||| gmm	count=1
module	t-test for t-test the ||| stats	count=1
module	instance ||| heart	count=1
function	/ ||| params	count=2
function	partial autocorrelation function of ||| pacf	count=1
function	of exogenous variables ||| exog	count=1
function	[function_1] [function_2] just the exogenous random ||| [function_1] [function_2] exog_re	count=2
arg	test of non- equivalence ||| x1 x2 low upp	count=1
arg	and significance bounds ||| legend_loc fig figsize	count=2
class	odds [class_2] ||| genmod global [class_1] [class_2]	count=1
function	hessian function ||| hessian	count=1
arg	test ||| autolag	count=1
arg	variance is the same ||| x	count=1
function	the probabilities percetiles ||| ppplot	count=1
arg	lags : ||| lags maxiter	count=1
function	the score function ||| score	count=1
module	series with zero ||| stats	count=1
arg	variance is ||| y x idx split	count=1
arg	f [arg_2] ||| [arg_2] [arg_1]	count=4
module	test for no ||| stats	count=1
function	unsqueeze a collapsed array ||| unsqueeze	count=1
function	confidence interval ||| ci	count=1
arg	function func is ||| func low	count=1
module	distribution int f ||| distributions	count=1
arg	each count level for ||| exposure offset	count=1
function	axes are needed ||| mpl	count=1
function	a wald-test for ||| wald test	count=1
function	array of shape ||| adjust shape	count=1
arg	from a data ||| data	count=1
function	all looo regressions ||| not obsi	count=1
function	flexible grid ||| grid	count=1
module_class	[module_1] log-likelihood evaluated ||| [module_1] [class_2]	count=4
function	date strings and returns ||| str	count=1
function	returns a ||| dates	count=1
function	a summary for the ||| summary	count=1
function	test to test ||| compare lr test	count=1
class	for ||| kalman	count=1
arg	system matrices ||| cls params arma_model	count=1
module	estimates of ||| tsa statespace	count=1
class	gmm and return gmmresults ||| gmm	count=1
module	jacobian if function ||| tools	count=1
function	names list ||| names	count=1
function	decomposition ||| decompose	count=1
arg	marginal effects by the ||| exog	count=1
class	the summary table if ||| summary	count=1
function_arg	q is a ||| q x	count=1
function	orders ||| orders	count=1
arg	upper or lower form ||| lower	count=1
arg	parameters ||| params transformed approx_complex_step approx_centered	count=1
function_arg	the psi [arg_2] ||| [function_1] [arg_2]	count=4
arg	given groups [arg_2] ||| [arg_1] [arg_2]	count=2
class	correction ||| varresults	count=1
module	helper function ||| tsa	count=1
arg	the kalman filter ||| params	count=1
arg	effects to obtain ||| group_ix	count=1
class	odds [class_2] ||| [class_1] [class_2]	count=4
class	[class_1] mean ||| [class_2] [class_1]	count=7
function	simultaneous ||| simultaneous	count=1
arg	row into a ||| idx row datatype	count=1
arg	(endog mu ||| endog mu	count=1
function	generated vector of ||| generated	count=1
arg	r this is for ||| x d r weights	count=1
arg	the index ||| index	count=1
arg	1d ||| y unbiased	count=1
function	generate a [function_2] ||| [function_2] [function_1]	count=3
arg	first elements of ||| index inplace	count=1
arg	at ||| alpha score	count=1
function	[function_1] kurtosis ||| [function_1] [function_2]	count=1
module	link function ||| families	count=6
arg	discrepancy between [arg_2] ||| [arg_2] [arg_1]	count=3
class	of linear [class_2] ||| [class_1] [class_2]	count=4
arg	[arg_1] contingency table ||| [arg_1] ax [arg_2]	count=1
class	the negative [class_2] ||| [class_1] [class_2] inverse deriv z	count=1
arg	p sample [arg_2] ||| [arg_2] [arg_1]	count=3
function	update the endpoints of ||| update	count=1
function	confidence intervals for the ||| ci	count=2
arg	interval for ||| beta_low sig	count=1
function	transform ||| transform	count=6
class	parameter ||| results	count=1
module	to get ||| sandbox regression	count=1
function	[function_1] parameters ||| [function_1] [function_2]	count=6
arg	compute a ||| r_matrix cov_p	count=1
class	[class_1] biweight estimator ||| [class_1] [class_2]	count=2
function	minus the rank ||| resid	count=1
function	[function_1] nonparametric regression ||| [function_2] [function_1]	count=2
arg	equal spaced time ||| time nlags	count=1
function	and other info ||| init kalman	count=1
function	effects by ||| margeff	count=1
function	matrix containing the thresholded ||| thresholded	count=1
arg	effects by the ||| params	count=1
function	[function_1] for fit ||| [function_2] start [function_1]	count=1
function	of datetime ||| dates from str	count=1
function	lfilter ||| lfilter	count=1
class	to ||| regression	count=1
function	grid plots of impulse ||| irf grid plot	count=1
module	estimates ||| tsa	count=1
function	[function_1] sum ||| [function_2] [function_1]	count=2
arg	pairs of vals ||| vals dcrit	count=1
function	shape ||| shape	count=1
function	are needed ||| create mpl	count=1
arg	approximate inverse covariance matrix ||| mod	count=1
function	the schoenfeld residuals ||| schoenfeld residuals	count=2
arg	if x is ||| x	count=1
function	date strings and returns ||| dates	count=1
function	crosscovariance ||| ccovf	count=1
class	results [class_2] ||| [class_2] [class_1]	count=2
function	all correlation ||| correlation	count=1
function	fit the training explanatory ||| fit	count=1
module_class	[module_1] p-p plot ||| [module_1] [class_2]	count=2
function	approximate inverse covariance ||| calc wdesign mat	count=1
function	use f [function_2] ||| [function_1] [function_2]	count=1
arg	wald-test for ||| r_matrix cov_p	count=1
function_arg	plot [arg_2] ||| [function_1] orth [arg_2]	count=1
function	compute a wald-test for ||| wald test	count=1
function	based on normal ||| ztost	count=1
arg	a set of series ||| series	count=1
function	or [function] ||| [function]	count=1
function	of covariance of ||| cov	count=1
class	writing to ||| stata writer	count=1
class	for ||| kalman filter	count=2
function	dispersion ||| compute dispersion	count=4
class	[class_1] plot ||| [class_2] [class_1]	count=1
function_arg	simulate a [arg_2] ||| [function_1] params [arg_2]	count=1
module	matrices are ||| tsa statespace	count=1
class	box-cox regressions where this ||| box cox	count=1
function	using the efron method ||| efron loglike	count=1
arg	plots studentized ||| external	count=1
module	method for minimizing ||| stats	count=1
module	degrees of freedom correction ||| tsa	count=1
function	summary of estimates ||| summary	count=1
function	contrast or ||| contrast	count=2
function	smoother output the smoother ||| smoother output	count=1
function	final statistics ||| rsquare and ic	count=1
class	and other info ||| kalman filter	count=1
arg	lags on the horizontal ||| lags alpha	count=1
function_arg	[function_1] for ||| [function_1] heteroskedasticity [arg_2]	count=1
class	[class_1] row ||| [class_2] [class_1]	count=2
function	for observations within ||| within	count=1
function	[function_1] ratio ||| [function_1] [function_2]	count=2
function	exogenous ||| exog	count=1
function	test statistic ||| compute test	count=1
function_arg	fit [arg_2] ||| [arg_2] [function_1]	count=4
arg	observations ||| df censorship	count=1
function	[function] i ||| [function] target	count=3
module	of the parameter ||| sandbox regression	count=1
arg	ar ||| ar ma	count=1
function	compute a wald-test ||| test	count=1
function	harvey [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] y normed=true ||| [arg_1] [arg_2]	count=1
function	matrix containing the schoenfeld ||| schoenfeld	count=1
module	collect ||| stats	count=1
function	efron method to ||| efron loglike	count=1
function	[function_1] weights ||| [function_2] [function_1]	count=4
function	a confidence interval for ||| ci	count=1
class	and other ||| kalman	count=1
class	a mixture ||| parametric mixture d	count=1
arg	test whether variance is ||| x idx split	count=1
arg	in-sample ||| start end dynamic	count=4
module	provides a [module] for ||| [module]	count=1
arg	lags on the horizontal ||| lags	count=1
function	panel ||| panel	count=1
function	from ||| formula data	count=1
arg	to generate ||| params	count=1
arg	white on group ||| group	count=1
function_arg	create [function_1] [arg_2] on off diagonal ||| [function_1] equi k_vars [arg_2]	count=1
module	of means ||| sandbox stats	count=1
module	critical values for ||| stats	count=2
arg	mean difference r ||| r	count=1
arg	labels on horizontal ||| data labels	count=1
function	normal distribution unknown mean ||| normal ad	count=1
class	[class_1] binomial family ||| [class_2] [class_1]	count=2
function	in the fit ||| fit	count=1
arg	[arg_1] horizontal axis ||| [arg_2] [arg_1]	count=4
module	the ||| nonparametric	count=10
function	compute [function_2] ||| [function_1] [function_2]	count=2
function_arg	estimate model [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	bilogistic [arg_2] ||| [function_1] [arg_2]	count=4
module	of date strings and ||| tsa base	count=1
function	[function_1] probability of ||| [function_2] [function_1]	count=1
function	hierarchical way given a ||| hierarchical	count=1
function	multivariate sample ||| multivariate sample	count=2
class	interval for kernel density ||| custom kernel	count=1
arg	and ma parameters ||| ma	count=1
function	regime transition probabilities ||| regime transition	count=1
function	to generate ||| calc	count=1
arg	error bands ||| orth repl t signif	count=2
function	newman-keuls and ryan procedures ||| homogeneous subsets	count=1
arg	statistic divided by nobs ||| effect_size nobs n_bins alpha	count=1
function_arg	update [arg_2] ||| [function_1] [arg_2]	count=6
function	tost ||| tost	count=1
module	variables in the ||| nonparametric	count=1
arg	critical values ||| idx distppf frac varnames	count=1
function	hamilton filter ||| cy hamilton filter	count=2
function_arg	an arma [arg_2] ||| [function_1] pacf [arg_2]	count=1
function	corresponding detection limit for ||| detection limit index	count=1
function	effects by the delta ||| params	count=1
function	the data home ||| data home	count=1
module	factor ||| sandbox datarich	count=1
function	most common ||| most common	count=1
arg	to value ||| value alternative	count=1
arg	squares along first axis ||| axis	count=1
module	factor for ||| stats	count=1
function	random draw [function_1] [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] one ||| [function_1] [function_2]	count=2
arg	whether variance is ||| y x idx	count=1
module	matrix s pen todo ||| sandbox	count=1
function	for a ||| test	count=1
arg	range having v ||| v	count=1
function	lfilter to produce output ||| miso lfilter	count=1
module	of the ||| sandbox regression	count=1
function	of [function_2] ||| [function_1] [function_2]	count=4
function	[function] distribution ||| fitstart [function]	count=1
function	remove sets that are ||| remove	count=1
module	key in ||| tsa	count=1
module	coefficients notes ||| vector_ar	count=1
arg	z-test ||| nobs1	count=1
module	of function ||| sandbox distributions	count=1
function_arg	[function_1] rank scale_matrix ||| [arg_2] [function_1]	count=1
function	integer row labels ||| maybe	count=1
arg	= rhs ||| rhs	count=1
arg	run [arg] pairwise ||| testfunc [arg]	count=1
arg	order along [arg] 0 or ||| x order [arg]	count=1
module	used in likelihood evaluation ||| tsa regime_switching	count=2
module	strings and ||| tsa base	count=1
module	to the distribution location ||| distributions	count=2
arg	[arg_1] [arg_2] ||| [arg_2] labels [arg_1]	count=1
function	monte carlo ||| mc	count=5
arg	parameter of the ||| effect_size nobs alpha	count=4
arg	the kalman filter notes ||| params start p	count=1
class	t ||| t	count=2
module	a ||| graphics	count=7
function	for each observation ||| obs	count=2
arg	[arg_1] 2d a ||| [arg_1] [arg_2]	count=1
function	the loglikelihood [function] ||| score [function]	count=1
function	inner covariance ||| s	count=1
class	get [class] ||| [class]	count=2
function	[function_1] errors of ||| [function_1] [function_2]	count=2
arg	of 2x2 tables ||| tables	count=1
class	[class_1] binomial family ||| [class_1] [class_2]	count=2
arg	parameter ||| param_num	count=2
function	returns a confidence interval ||| ci	count=1
function	a 2-dimensional plot ||| plot2d	count=1
module	a measure for ||| stats	count=1
module	mutual information [module] two ||| [module]	count=1
arg	the upper left corner ||| reorder_rows reorder_cols	count=1
module	for minimum distance step ||| sandbox stats	count=1
module	array roots of ||| tsa	count=1
function	[function_1] sample prediction ||| [function_2] [function_1]	count=3
function	[function_1] arma ||| [function_2] [function_1]	count=12
module	sequence of date strings ||| tsa	count=1
function	the covariance [function_2] ||| [function_1] [function_2]	count=4
arg	heteroscedasticity and autocorrelation ||| nlags	count=1
function	axes are needed ||| mpl fig	count=1
module	joint model returns ||| sandbox regression	count=1
class	linear ||| model results	count=2
function	includes the ||| reject	count=2
function	monte carlo integrated ||| errband mc	count=4
arg	preparation for ||| variance complex_step	count=1
arg	line ||| line x y	count=1
function	graphical test for ||| check	count=1
arg	spectral projected gradient method ||| grad start	count=1
function	marginal effects ||| cov params	count=1
arg	given exogenous variables ||| exog exposure offset	count=1
class	from ||| stratified table	count=1
class	for arma model ||| arma	count=1
arg	calculate ||| effect_size df_num	count=2
class	[class_1] model ||| [class_1] [class_2]	count=2
function	a panel ||| panel	count=1
class	leave-one-out cross validation iterator ||| leave one out	count=1
module	p loglikelihood ||| tsa	count=1
function	[function_1] numbers for ||| [function_2] [function_1]	count=3
module	array frequency [module] the ||| [module]	count=1
module	imputation ||| imputation	count=1
class	model ||| likelihood model	count=6
function	ttest of null hypothesis ||| ttest	count=1
arg	an integer [arg] i ||| [arg]	count=1
module	china smoking/lung cancer ||| china_smoking	count=1
function	interaction ||| interaction	count=1
function	starting values [function] distribution ||| fitstart [function]	count=1
function	vertically ||| vstack	count=1
arg	the [arg] ||| param_num upper_bound lower_bound [arg]	count=3
arg	per ||| transformed	count=1
function	the four kurtosis ||| robust kurtosis	count=2
function	a latex ||| latex	count=1
arg	mu [arg_2] ||| [arg_1] [arg_2]	count=1
arg	apply linear transform for ||| x transform group_iter	count=1
arg	function f [arg_2] ||| [arg_2] [arg_1]	count=4
module	test statistic ||| stats	count=1
function	matrices with singular ||| from multivariate pacf python	count=1
arg	drop_idx is ||| drop_idx sparse	count=1
function	aic [function_2] ||| [function_2] [function_1]	count=3
function	get group means of ||| group mean	count=1
function	[function_1] location ||| [function_2] [function_1]	count=2
arg	studentized range having v ||| v	count=1
arg	the profile log-likelihood ||| profile_fe	count=1
class	significance ||| coef c	count=2
class	[class] influence with ||| [class]	count=1
arg	optional model ||| model	count=1
arg	group sums sandwich ||| group	count=1
arg	info ||| cls params	count=1
class	of the ||| results	count=2
class	of fevd ||| fevd	count=1
function	binomial [function_2] ||| [function_1] [function_2]	count=8
function	initialize possibly re-initialize ||| initialize	count=1
function	unknown mean and ||| ad	count=1
arg	the estimated density and ||| density nobs alpha	count=1
arg	arrays ||| qstat	count=1
class	the model to a ||| model	count=1
arg	returning numeric type ||| h domain norm	count=1
arg	grid ||| grid	count=1
module	array roots [module] the reduced ||| [module]	count=1
arg	principle components using ||| clf	count=1
function	plot of ||| plot	count=3
arg	expected endog with respect ||| params offset_exposure	count=1
arg	data confidence interval is ||| alpha	count=1
function_arg	[function_1] unconstrained ||| [arg_2] [function_1]	count=1
function_arg	[function_1] error ||| [function_1] [arg_2]	count=1
function	simulate standard ||| generate	count=1
function	save ||| save	count=1
function	ordered ||| ordered	count=1
module	restriction matrix for ||| sandbox stats	count=2
module	other info ||| tsa kalmanf	count=1
function	binomial ||| binom	count=2
class	of the ||| switching results	count=1
arg	k or more ||| k n p	count=1
module	duration values for each ||| duration	count=2
arg	[arg_1] matrix ||| [arg_2] [arg_1]	count=2
module	to generate ||| base	count=1
function	state ||| state	count=1
arg	respect ||| params offset_exposure	count=1
arg	y normed=true ||| y normed	count=1
module	for no ||| stats	count=1
arg	heteroscedasticity and autocorrelation robust ||| results nlags	count=1
function	arbitrary matrices to ||| constrain sv	count=1
function	covariance matrix for the ||| get covariance matrix	count=1
function_arg	convolution centered [arg_2] ||| [function_1] [arg_2]	count=1
function	limit for ||| limit index	count=1
function	date strings and returns ||| dates from str	count=1
arg	an integer [arg] i e ||| [arg]	count=1
function	of datetime ||| from str	count=1
arg	returns the system matrices ||| cls params arma_model	count=1
function_arg	[function_1] error ||| [arg_2] [function_1]	count=1
function_arg	[function_1] and formula ||| [function_1] y x [arg_2]	count=1
arg	of z ||| z	count=3
module	the elements ||| statespace	count=1
function	[function_1] an arma ||| [function_2] [function_1]	count=11
function	eubank similar to ||| fg1eu	count=1
class	the random effects ||| mixed	count=1
function	simulate ||| simulate	count=2
function	mean of data if ||| mean	count=1
arg	at the theoretical ||| alpha score	count=1
arg	and principle components using ||| ix iy clf	count=1
arg	in-sample prediction and ||| params start end probabilities	count=1
arg	selected by r ||| d r	count=1
function	test ||| test	count=15
function	return the [function_2] ||| [function_2] [function_1]	count=1
module	continuous distribution given by ||| sandbox distributions	count=1
module	condition to ||| sandbox	count=1
arg	create a mixedlmparams ||| k_fe k_re use_sqrt	count=1
module_class	[module_1] the table ||| [module_1] [class_2]	count=2
function	hac for observations within ||| s within hac	count=1
class	in ||| summary	count=1
arg	variance is the ||| y x	count=1
function	[function_1] transformed ||| [function_2] [function_1]	count=2
function	of the ||| stats	count=1
arg	[arg_1] test ||| [arg_2] [arg_1]	count=4
function	bisquare function applied ||| lowess bisquare	count=1
module	freedom ||| tsa vector_ar	count=2
class	state [class] ||| [class]	count=2
arg	computes ||| params exog	count=1
arg	given exogenous variables ||| params exog exposure	count=1
function	distribution of uncensored endog ||| get distribution	count=2
class	covariance with ||| varresults	count=1
arg	returns the variance/covariance ||| r_matrix column scale cov_p	count=1
function_arg	correlation matrix [arg_2] ||| [arg_2] [function_1]	count=4
class	the kernel smoothing estimate ||| custom kernel	count=1
function	for movorder ||| check movorder	count=1
module	freedom correction ||| vector_ar	count=1
arg	lags on ||| ax lags alpha	count=1
function	[function_1] hazard ||| [function_1] [function_2]	count=5
function	using the ||| fit	count=1
arg	for each observation ||| obs cohn	count=1
arg	[arg] array-like ||| [arg]	count=1
function	of squares statistic ||| squares	count=1
function_arg	[function_1] [arg_2] diagonal ||| [function_1] [arg_2]	count=1
module	duration values ||| duration	count=2
arg	item [arg] array-like object ||| [arg]	count=1
arg	gets a [arg_2] ||| [arg_2] [arg_1]	count=2
module_class	[module_1] test ||| [module_1] [class_2]	count=2
function	by the delta method ||| cov	count=1
class	from [class] scaling is ||| [class]	count=1
arg	from a [arg_2] ||| [arg_1] ax [arg_2]	count=1
arg	is factor b ||| b	count=1
class	of estimated parameters including ||| varresults	count=1
function	reset ||| reset	count=1
function	parameter [function_2] ||| [function_1] [function_2] exog_re	count=1
function	indices ||| combine indices	count=2
arg	rank scale_matrix ||| scale_matrix	count=2
arg	[arg_1] x ||| tools drop missing [arg_1] [arg_2]	count=3
function	a single ||| update	count=1
function	calculate all correlation ||| correlation	count=1
class	fits an aft ||| aftresults	count=1
module	a regime ||| tsa regime_switching	count=1
class	[class_1] ratio ||| [class_1] [class_2]	count=2
function	observations within ||| s within	count=1
function	solves matrix equations ||| matrix solve	count=2
arg	wald-test for a ||| scale	count=1
module	p loglikelihood ||| vector_ar	count=1
function	summary of the current ||| summary	count=1
class	of the kalman ||| kalman	count=1
function_arg	factor [arg_2] ||| [arg_2] [function_1]	count=4
arg	[arg_1] the group ||| [arg_2] [arg_1]	count=3
function	the approximate ||| calc wdesign	count=1
function	[function_1] default format ||| [function_2] [function_1]	count=4
function	the corresponding detection limit ||| detection limit	count=1
arg	x y ||| x y normed	count=1
arg	the data ||| data alpha	count=1
arg	exogenous variables ||| params exog	count=1
module_class	[module_1] box-cox transformed ||| [module_1] [class_2]	count=2
arg	coefficients of an arima ||| order start_params	count=1
function	return dictionary ||| get	count=1
arg	of each count level ||| exposure offset	count=1
arg	flat ||| nar nma	count=1
function	partial autocorrelations ||| pacf	count=1
function	display as html in ||| html	count=1
function_arg	a linear [arg_2] ||| [arg_2] [function_1]	count=1
arg	equivalence ||| low upp	count=6
function	[function_1] pattern ||| [function_2] [function_1]	count=2
arg	delta method ||| params	count=1
function	sif to [function_2] ||| [function_2] [function_1]	count=1
module	current period's regime ||| tsa regime_switching	count=2
module	for lagorder selection ||| tsa	count=1
arg	[arg_1] power ||| [arg_2] [arg_1]	count=10
class	get factor decomposition ||| factor model	count=1
function	[function_1] sample ||| [function_1] [function_2]	count=5
module_class	[module_1] least squares ||| [module_1] [class_2]	count=2
arg	order of ||| order	count=1
arg	of the fitted model ||| at method atexog dummy	count=2
function	[function_1] hazard function ||| [function_1] [function_2]	count=5
class	linear ||| results	count=1
arg	upper or lower ||| a b lower	count=1
class	aft model ||| aftresults	count=1
class	[class_1] effects ||| [class_2] [class_1]	count=1
function	determinant of ||| det cov	count=1
function	to ||| mat	count=1
function	calculates ||| calc wdesign	count=1
arg	index ||| index	count=2
arg	variance-covariance of marginal effects ||| cov_params	count=1
function_arg	[function_1] orthogonal ||| [arg_2] [function_1]	count=1
function_arg	local constant [arg_2] ||| [arg_2] [function_1]	count=4
function	needed ||| init	count=1
function	that mean ||| mean	count=1
function	[function_1] [function_2] ||| [function_1] index label [function_2]	count=6
function_arg	plot impulse ||| plot orth impulse	count=1
arg	the group [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	[function_1] 1 max_dim ||| [function_1] [arg_2]	count=4
class	compute a wald-test ||| likelihood model results	count=1
arg	whether restricted ||| restricted large_sample	count=1
function	needed for ||| kalman state	count=1
class	a pickle ||| results	count=1
module	[module_1] of ||| [module_1] [module_2]	count=1
function	find a near ||| clipped	count=1
function_arg	[function_1] data confidence ||| [arg_2] [function_1]	count=1
arg	filter x ||| x	count=1
module	estimates the ||| genmod	count=1
function	normal inverse ||| normal inverse	count=2
class	info needed for ||| kalman	count=1
function	out of sample prediction ||| get predict out of sample	count=1
function	strings and returns a ||| from	count=1
function	evaluated ||| obs	count=2
arg	cdf ||| cdf	count=1
arg	series ||| series	count=2
class	returns ||| phreg results	count=1
arg	pickle ||| cls fname	count=1
function	aitchison-aitken kernel [function_2] ||| [function_2] [function_1]	count=1
function	sorted [function] ||| [function]	count=1
function	from arrays and ||| formula data	count=1
function	of the stata ||| stata	count=1
arg	rows [arg] [y ||| [arg]	count=1
function_arg	[function_1] error parameters ||| [arg_2] [function_1]	count=1
arg	[arg_1] [arg_2] ||| [arg_2] expected [arg_1]	count=3
function	any of the rows ||| rows	count=1
arg	assumes we have ||| groupidx weights_func	count=2
arg	generate ||| mod	count=1
function	wang-ryzin ||| wang ryzin	count=1
class	global [class] based on ||| global [class]	count=1
function	and returns a list ||| dates	count=1
function	date strings and returns ||| dates from	count=1
module	[module_1] family ||| [module_2] [module_1]	count=1
function	mean ||| mean	count=15
module	a sequence of ||| tsa	count=1
module	inverse covariance matrix ||| base	count=1
module	of ||| sandbox stats	count=2
function	forecast error variance decomposition ||| fevd	count=1
function	[function_1] matrix ||| [function_1] [function_2]	count=4
function	[function_1] decomposition using ||| [function_2] [function_1]	count=1
function	plot axes are needed ||| mpl	count=1
function	distribution of uncensored ||| get distribution	count=2
function	obtain ||| augment exog	count=1
function	generic ||| generic	count=2
module_class	to [module_1] [class_2] ||| [module_1] [class_2]	count=4
function	of squares ||| sumofsq	count=1
arg	estimated density ||| density nobs alpha	count=1
function	delta ||| params	count=1
module	autoregressive ||| tsa	count=1
arg	impute missing ||| vname	count=1
module	values for ||| imputation	count=1
function	returns the hessian matrix ||| hessian	count=1
module_class	[module_1] test statistic ||| [module_1] [class_2]	count=2
arg	optional estimate of mu ||| mu initscale axis	count=1
arg	correlation of [arg_2] ||| [arg_2] [arg_1]	count=2
arg	the first elements of ||| index inplace	count=1
arg	variance is ||| y x idx	count=1
function_arg	standard deviation [arg_2] ||| [arg_2] [function_1]	count=2
function	generate the approximate inverse ||| calc	count=1
function	point weighted by ||| weighted	count=1
function	f test to test ||| f test	count=1
function	return predicted probability of ||| predict prob	count=1
arg	and autocorrelation ||| nlags	count=1
arg	arima ||| order start_params	count=1
arg	computes the ||| params exog	count=1
class	the significance value ||| coef c	count=1
arg	method ||| model params exog	count=1
module	spector ||| spector	count=1
arg	[arg] of ||| alternative usevar [arg]	count=1
arg	all pairwise comparisons ||| multitest_method	count=1
class	summary ||| summary	count=1
arg	for [arg] ||| [arg]	count=1
class	odds ratio first pool ||| odds ratio	count=1
arg	r samples ||| r	count=2
arg	inverse ||| mod	count=1
arg	computes [arg] estimate ||| [arg] bounds	count=1
function	information criteria for ||| info criteria	count=1
function	compute small ||| compute	count=1
function	to compute [function_2] ||| [function_1] [function_2]	count=2
function	transform observation ||| transform	count=1
function	use gls ||| get fe	count=1
class	negative binomial ||| negative binomial	count=8
arg	as random permutations ||| reps start_params transformed em_iter	count=1
arg	positive semi-definite ||| n_fact	count=1
class	of poisson ||| poisson offset gmle	count=1
function_arg	transform [arg_2] ||| [arg_2] [function_1]	count=4
arg	of x by ||| x	count=1
function	the standard [function_2] ||| [function_2] [function_1]	count=4
arg	to ||| n k	count=2
function	the standard errors of ||| standard errors	count=1
class	summarizing the results ||| results	count=1
module_class	[module_1] decomposition ||| [module_1] [class_2]	count=1
module	information [module] two random ||| [module]	count=1
function	the delta ||| margeff cov params	count=1
arg	for a joint linear ||| cov_p scale invcov	count=1
arg	the first elements ||| index inplace	count=1
class	the gls ||| gls	count=1
arg	the ar ||| ar ma nobs	count=1
arg	at the theoretical minimum ||| score	count=1
function	[function_1] autoregressive ||| [function_2] [function_1]	count=1
function	string ||| string	count=1
arg	y and [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] disturbance ||| simulation smooth results simulated [function_1] [function_2]	count=3
class	compute var p loglikelihood ||| varresults	count=1
function	matrices with singular values ||| pacf python	count=1
arg	[arg] loglikelihood ||| params [arg]	count=1
function	the test ||| test stat	count=1
function	for a ||| wald	count=1
function	[function_1] coefficients ||| [function_1] [function_2]	count=1
function	a knockoff ||| knockoff	count=1
class	padding ||| fft	count=1
class	imputed ||| micedata	count=1
function	a mixture ||| mixture rvs	count=1
arg	function plots lags on ||| lags	count=1
function_arg	create equicorrelated [function_1] [arg_2] off diagonal ||| [function_1] [arg_2]	count=1
arg	-2 x log-likelihood ||| return_weights	count=2
arg	key ||| key default	count=1
module	returns ||| sandbox regression	count=1
arg	for 1d ||| x y unbiased demean	count=1
arg	variance is the ||| x idx	count=1
function	tweedie ||| tweedie power	count=2
module	ols regression for ||| sandbox regression	count=1
function	generalized [function_2] ||| [function_2] [function_1]	count=4
arg	test for a ||| autolag	count=1
arg	k equal sized groups ||| effect_size nobs alpha k_groups	count=1
arg	estimate for point x ||| x	count=2
module	info needed for ||| tsa kalmanf	count=1
class	of identical means this ||| compare means	count=1
function	compute likelihoods ||| likelihoods	count=2
arg	string summarizing ||| get_l1_slsqp_results get_l1_cvxopt_results	count=1
arg	returns just the ||| cls y k k_ar	count=1
function	marginal effects by ||| margeff cov params	count=1
arg	function func is monotonic ||| func low	count=1
arg	lags ||| start_params lags	count=1
function	all against mean ||| diff mean	count=2
function_arg	kurtosis measures [arg_2] ||| [function_1] [arg_2]	count=1
arg	in the first elements ||| inplace	count=3
class	float [class] log-likelihood ||| [class]	count=1
function	[function_1] errors ||| [function_2] [function_1]	count=2
arg	list of 2x2 tables ||| tables	count=1
arg	returns y ||| y	count=1
arg	first third of ||| alternative use_f	count=1
function	press ||| press	count=1
arg	x freq is an ||| x freq	count=1
class	ttest ||| stats w	count=1
function	graphical ||| check	count=1
function_arg	probability [arg_2] ||| [function_1] [arg_2]	count=1
arg	used to ||| regression	count=1
class	collect required results from ||| olsinfluence	count=1
arg	given exogenous ||| params exog exposure offset	count=1
function	response residuals ||| resid response	count=2
function	latex [function_2] ||| [function_2] [function_1]	count=1
arg	a ||| cov_p	count=2
function	missing [function_2] ||| [function_1] [function_2]	count=1
arg	fitted mean response ||| endog mu freq_weights	count=4
function	draw [function] ||| simulated [function]	count=3
function	return critical values ||| get	count=2
class	names in the formula ||| formula	count=1
function	the baseline ||| baseline	count=2
arg	backward displaced moving ||| x filt nsides	count=1
function	from sif to ||| elapsed date to	count=1
arg	maxfact ||| maxfact	count=1
arg	from results instance parameters ||| results yname xname	count=1
function	output the ||| output	count=1
function	date strings and ||| from str	count=1
arg	returns the system matrices ||| arma_model	count=1
function	[function] in ||| nan [function]	count=3
function	the dataset ||| dataset	count=1
module_class	[module_1] constraint ||| [module_1] parameter [class_2]	count=1
function	via convolution centered and ||| convolution filter	count=1
arg	and returning numeric type ||| h domain norm	count=1
function	group indices ||| indices	count=1
arg	create ||| bins use_loc	count=1
function	parameter ||| make param	count=1
function	matrix for a given ||| matrix	count=1
arg	calculate a ||| indicators	count=1
function	less [function_2] ||| [function_1] [function_2]	count=2
class	mixture ||| mixture	count=2
function	ticks ||| ticks	count=1
function	vector ||| copy index vector	count=2
function	coefficients [function_2] ||| [function_1] [function_2]	count=1
function	the first variable name ||| name	count=1
function	[function_1] unknown ||| [function_2] [function_1]	count=1
function	strings and returns a ||| from str	count=1
function	[function_1] matrix for ||| [function_1] [function_2]	count=3
class	a two sample ||| gof	count=1
class	mixture ||| mixture distribution	count=2
arg	uses 'iteritems' [arg] available and ||| [arg]	count=1
function	score function at ||| score	count=1
function	convolution centered and ||| convolution	count=1
function_arg	linear [arg_2] ||| [arg_2] [function_1]	count=9
function	anova ||| anova	count=1
class	for marginal effects parameters ||| geemargins	count=1
function	test statistic ||| test stat	count=1
module	rainbow [module] ||| [module]	count=1
arg	drop_idx is ||| drop_idx sparse dtype	count=1
function	values [function] distribution parameters ||| fitstart [function]	count=1
arg	with respect ||| calc_fe	count=1
function	info needed for the ||| init kalman state	count=1
function	the cohn numbers ||| cohn numbers	count=2
class	kernel smoothing estimate with ||| custom kernel	count=1
class	plot ||| desc stat uv	count=1
function	an exog array with ||| get exog	count=1
module	parameters ||| discrete	count=1
arg	and ||| params	count=1
arg	in-sample prediction ||| start end probabilities	count=1
arg	apply function to each ||| function level	count=1
module	distribution function ||| distributions	count=1
arg	index or a ||| index	count=1
arg	a joint linear hypothesis ||| scale invcov	count=1
function	group indices for ||| indices	count=1
function	obtain the crude ||| crude oddsratio	count=1
function	the random ||| random	count=1
arg	array >>> from numpy ||| data axis oldshape	count=1
function	estimates the scale ||| scale	count=1
function	type gof tests ||| gof	count=1
module	[module] data ||| datasets [module]	count=19
function	sequence ||| from	count=1
arg	group [arg_2] ||| [arg_1] [arg_2]	count=3
module	distribution for equal ||| sandbox distributions	count=1
function	in ipython ||| repr	count=1
function	random [function_1] [function_2] vector from its conditional ||| [function_1] [function_2]	count=1
arg	x is a real ||| x	count=1
module	estimates ||| tsa statespace	count=2
function	the delta method ||| margeff cov params	count=1
function_arg	whiten a [arg_2] ||| [function_1] ar x [arg_2]	count=1
function	fit the training ||| fit	count=1
class	variable ||| micedata	count=1
arg	ses ||| float_format model_names stars	count=1
class	[class_1] effects parameters ||| [class_2] [class_1]	count=1
arg	is the special case ||| x	count=1
class	score ||| phreg results	count=1
module	use runs test ||| stats	count=1
arg	kwds ||| kwds	count=1
arg	eps by ||| eps	count=2
function	covariance matrix [function_2] ||| [function_1] [function_2]	count=1
arg	test whether variance is ||| y x idx split	count=1
module	a t-test for ||| stats	count=2
arg	function func ||| func low upp	count=1
arg	other info needed for ||| cls	count=1
function	create ||| init	count=3
arg	compute ||| r_matrix	count=1
arg	model of ||| t beta	count=1
class	estimates with options ||| gmmresults	count=1
arg	irf ||| seed	count=1
module_class	[module_1] arma ||| [module_1] [class_2]	count=4
module	of distribution function for ||| sandbox distributions	count=2
function	to ||| lm	count=1
function_arg	add lowess [arg_2] ||| [arg_2] [function_1]	count=1
class	wald-test for ||| results	count=1
arg	k or more ||| x k n	count=1
function	parameters for maximum likelihood ||| params	count=1
function	transform matrices with singular ||| python	count=1
arg	regressions where this is ||| x	count=1
module_class	simulation [class_2] ||| [module_1] simulation [class_2]	count=4
function	[function_1] final simulation ||| [function_2] [function_1]	count=3
function	[function_1] the location ||| [function_1] index label [function_2]	count=1
module_class	for one [class_2] ||| [module_1] ftest [class_2]	count=1
arg	the delta method ||| model	count=1
arg	recursions ||| params arma_model set_sigma2	count=1
function	gradient of ||| grad	count=1
function_arg	solve for [arg_2] ||| [arg_2] [function_1]	count=11
function	for ||| kalman	count=1
class	the log transform ||| log	count=1
function	variance [function_2] ||| [function_2] [function_1]	count=7
arg	transform for ||| transform	count=1
arg	parameter of the power ||| effect_size nobs alpha power	count=2
module	with options ||| regression	count=1
function	normal [function_2] ||| [function_1] [function_2]	count=3
function	display (3 ||| compute	count=3
module	estimates of ||| tsa	count=4
arg	* diag [arg] * pinv ||| results [arg]	count=1
function	approximate inverse ||| calc wdesign mat	count=1
function	[function_1] ab ||| [function_2] [function_1]	count=3
function	plot fitted ||| plot	count=1
function	effects by ||| margeff cov params	count=1
function	integer location of the ||| maybe	count=1
arg	data ||| endog	count=2
function	array of shape ||| shape	count=1
function	to obtain the crude ||| crude	count=1
arg	assumes we have ||| weights_func	count=2
function	to stata's default format ||| to default stata fmt	count=1
module	of distribution ||| distributions	count=1
function_arg	[function_1] the ||| [function_1] exog [arg_2]	count=3
arg	approximate ||| params	count=1
arg	interval for a regression ||| sig	count=1
arg	summarize the model ||| alpha start title model_name	count=1
class	autoregressive ||| arma process	count=1
arg	to ||| n k start kall	count=1
class	fixed effects ||| one way mixed	count=2
class	degrees of ||| varresults	count=1
class	return results ||| results	count=1
function	ab for two upper ||| symbanded	count=1
class	the random effects ||| mixed lm	count=1
arg	coefficient of variation if ||| bounds window_length scale	count=1
function	generate ||| calc wdesign	count=1
function_arg	gradient for [arg_2] ||| [function_1] [arg_2]	count=1
function	final statistics [function_2] ||| [function_2] [function_1]	count=2
class	[8] ||| test reg coef c	count=2
function	calculate local [function_2] ||| [function_1] [function_2]	count=2
function	evaluate the score function ||| score	count=1
module	of the parameter ||| sandbox	count=1
arg	model updates the ||| transformed complex_step	count=1
arg	k or ||| x k n p	count=1
function	for the variance ||| var	count=1
function	the test ||| compute test stat	count=1
class	[class_1] [class_2] ||| [class_1] [class_2]	count=145
function_arg	means of [arg_2] ||| [function_1] [arg_2]	count=4
module	function to calculate sum ||| tsa	count=1
function	a list of ||| dates	count=1
arg	the variance-covariance of marginal ||| model params exog cov_params	count=1
module	the rows ||| statespace	count=2
function	set the filtering ||| set filter	count=1
function	[function] 3 ||| [function]	count=1
function	convert ||| corr2cov	count=1
function	matrix equations of the ||| matrix	count=1
class	random effects covariance matrix ||| mixed	count=1
class	two sample z-test ||| gof chisquare ind	count=1
arg	by r ||| d r	count=1
function	for ||| init	count=1
arg	of the fitted ||| at method atexog dummy	count=2
arg	new time series following ||| nsimulations measurement_shocks state_shocks	count=1
function	constant used [function] reference asymtotic ||| [function] reference	count=1
class	get factor [class_2] ||| [class_1] [class_2]	count=2
arg	matrices with singular ||| order k_endog	count=1
function	in the model ||| model	count=1
arg	hac ||| nlags	count=3
arg	pairwise comparisons with a ||| nobs value multitest_method	count=1
arg	estimate distribution parameters ||| params	count=2
function	to determine the ||| limits	count=1
function_arg	ticks and [arg_2] ||| [function_1] ax [arg_2]	count=1
class	info needed ||| filter	count=1
function	missing data pattern ||| plot missing pattern	count=3
arg	_est_regularized_debiased ||| results_l threshold	count=1
function_arg	q [arg_2] ||| [arg_2] [function_1]	count=7
arg	columns according to ||| ar_coefs	count=1
function	generic statistical power function ||| power	count=1
function_arg	simulate a [arg_2] ||| [function_1] [arg_2]	count=1
function	representation ||| arma2ar	count=1
function	an exog ||| get exog	count=1
module	statecrime ||| statecrime	count=1
arg	[arg_1] the group ||| [arg_1] [arg_2]	count=3
class	fitted model ||| geeresults	count=1
arg	along ||| x	count=1
class	[class_1] binomial ||| [class_1] [class_2]	count=7
function	c^{-1} ||| inv dot right	count=1
function	the response [function_2] ||| [function_2] [function_1]	count=2
arg	z-test ||| effect_size nobs1	count=1
arg	with respect ||| offset_exposure	count=1
class	of the ||| markov switching results	count=1
class	for tukey's ||| tukey	count=1
function	collect ||| res	count=1
function_arg	crosscovariance for [arg_2] ||| [arg_2] [function_1]	count=2
module	key in an ||| tsa	count=1
function	breslow method ||| breslow loglike	count=1
arg	or sf x ||| x	count=1
class	the negative [class_2] ||| [class_2] [class_1]	count=5
module_class	[module_1] distributed estimation ||| [module_1] [class_2]	count=2
function	via convolution centered ||| convolution	count=1
function	info needed for ||| state	count=1
arg	at the estimated density ||| density	count=1
arg	data [arg_2] ||| [arg_1] ax [arg_2]	count=1
class	from the ||| olsinfluence	count=1
function	simulation [function_2] ||| [function_2] [function_1]	count=1
function	obtain the factors ||| calc factors	count=1
module	polynomial approximation to ||| sandbox	count=1
arg	expected endog with respect ||| offset_exposure	count=1
function	correlation sums for ||| correlation sums	count=2
class	perform simulation [class_2] ||| [class_1] [class_2]	count=4
function	set the ||| set	count=5
class	model to a ||| model	count=1
arg	[arg_1] by cor_length ||| [arg_1] [arg_2]	count=3
function	to determine ||| limits	count=1
module	of the ||| tsa statespace	count=2
function	compute multivariate autocovariances ||| compute multivariate acovf	count=2
function	make flexible grid ||| irf grid	count=1
function	info needed ||| init kalman	count=1
arg	arrays y and x ||| y x axis	count=1
function	the first variable name ||| get endog name	count=1
module_class	[module_1] fitted model ||| [module_1] [class_2]	count=2
function	as text ||| as text	count=2
module_class	the distributed ||| base distributed model	count=1
arg	correction ||| pvals	count=1
function	get final [function_2] ||| [function_1] [function_2]	count=2
class	of ||| dynamic factor results	count=1
function_arg	psi function ||| psi z	count=2
class	equal to ||| descr	count=1
function_arg	create a [arg_2] ||| [arg_2] [function_1]	count=1
module_class	for a 2x2 ||| stats table2x2	count=2
function_arg	[function_1] data array ||| [function_1] thresholded [arg_2]	count=1
function	[function] and ||| wls prediction [function]	count=2
class	significance ||| test reg coef c	count=2
function	and other info needed ||| init	count=1
class	[class_1] ratio ||| [class_2] [class_1]	count=3
class	of model ||| likelihood model	count=3
function_arg	kurtosis [arg_2] ||| [arg_2] [function_1]	count=2
function	a regression ||| beta	count=1
function	numbers for the ||| numbers	count=1
module_class	back-transforms the box-cox ||| base box cox	count=1
module	erase columns [module] zeros ||| [module]	count=1
arg	[arg_1] contingency table ||| [arg_2] [arg_1]	count=2
arg	delta method ||| model params	count=1
function_arg	chisquare [arg_2] ||| [arg_2] [function_1]	count=2
module	parameters used in likelihood ||| tsa regime_switching	count=3
module	compute ||| tsa statespace	count=2
function	matrix ||| calc wdesign	count=1
function	[function_1] cumulative hazard ||| [function_2] [function_1]	count=4
function	2-dimensional ||| plot2d	count=1
function	to compute [function_2] ||| [function_2] [function_1]	count=2
function	method ||| margeff	count=1
function	[function_1] covariance of ||| [function_2] [function_1]	count=2
function	autoregressive or recursive ||| recursive	count=1
function	generic ||| tstat generic	count=1
arg	a ||| r_matrix cov_p	count=2
function	delta ||| margeff cov	count=1
function	no autocorrelation parameters ||| acorr ljungbox	count=1
class	kernel density the ||| custom kernel	count=1
arg	correlations determined [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	confidence [arg_2] ||| [function_1] beta param_num [arg_2]	count=3
function	[function_1] a latex ||| [function_1] [function_2]	count=1
function	[function_1] function ||| [function_2] [function_1]	count=6
function	linear hypothesis ||| test	count=1
function	[function_1] [function_2] ||| [function_2] using [function_1]	count=7
function	to get final ||| get	count=1
function	stata's default format for ||| dtype to default stata fmt	count=1
function_arg	a regularized [arg_2] ||| [function_1] [arg_2]	count=1
arg	the ||| params start	count=1
arg	of the ||| params	count=2
function	of ||| cov params	count=2
function	[function_1] [function_2] ||| [function_1] index [function_2]	count=3
function	the integer row ||| maybe reset index	count=1
arg	the variance-covariance of ||| cov_params	count=1
function	the delta method ||| margeff cov	count=1
module	of two ||| sandbox stats	count=2
class	smoother to ||| smoother	count=1
arg	x is ||| x varnames	count=1
module	and other info ||| kalmanf	count=1
module	given by ||| regression	count=1
function	errors ||| geterrors	count=1
class	p ||| varresults	count=2
function	[function_1] of success ||| [function_2] [function_1]	count=2
function	wang-ryzin kernel ||| wang ryzin	count=1
arg	ss ||| ss	count=2
arg	we have a ||| weights_func	count=1
function	matrix containing the score ||| score	count=1
function_arg	test for ||| test heteroskedasticity method	count=1
function	observations of ||| loglikeobs	count=1
function_arg	[function_1] 1 max_dim ||| [arg_2] [function_1]	count=4
class	p 371 in [8] ||| test reg coef c	count=1
function	[function_1] joblib parameters ||| [function_1] [function_2] data_generator fit_kwds parallel_backend	count=1
function	date strings ||| dates	count=1
arg	continuous variables parameters ||| h xi x	count=1
module	manual on ||| base	count=1
arg	cdf ||| binsy cdf	count=1
arg	x x [arg_2] ||| [arg_1] [arg_2]	count=1
class	estimates ||| phreg results	count=1
function	selection ||| info	count=1
module_class	[module_1] [class_2] ||| [module_1] ftest [class_2]	count=2
arg	calculate ||| x	count=1
function	for ||| kalman state	count=2
module	for one ||| stats	count=4
function	set the ||| set filter	count=1
function_arg	indices for [arg_2] ||| [function_1] [arg_2]	count=1
arg	whether restricted model is ||| restricted	count=3
class	the fixed effects ||| mixed lm	count=1
module	of model coefficients notes ||| tsa vector_ar	count=1
arg	plots lags on ||| ax lags	count=1
arg	avelm by andrews and ||| skip	count=1
function	flexible grid [function_2] ||| [function_1] [function_2]	count=4
function	function [function] at params ||| llf [function]	count=2
function	helper ||| sumofsq	count=1
function	sample [function_2] ||| [function_2] generate [function_1]	count=1
function	simultaneous confidence intervals ||| simultaneous ci	count=2
function	returns the standard ||| standard	count=1
function	[function_1] coefficients ||| [function_2] [function_1]	count=1
module	covariance ||| tsa	count=1
arg	lags [arg_2] ||| [arg_1] [arg_2]	count=2
function	fit a model using ||| fit	count=1
function	used to determine the ||| limits	count=1
arg	mediator and exposure set ||| exposure mediator	count=1
arg	string summarizing [arg_2] ||| [arg_2] [arg_1]	count=1
function	confidence interval is centered ||| confint	count=1
function	hac independent ||| hac	count=1
class	of a two sample ||| gof chisquare ind power	count=1
function	based on ||| ztost	count=1
function	the ||| mat	count=2
class	the kernel smoothing ||| custom kernel	count=1
function	a ||| dates from	count=2
arg	of creating [arg_2] ||| [arg_2] [arg_1]	count=2
module	to the distribution ||| sandbox distributions	count=2
module	wald-wolfowitz runstest [module] two ||| [module]	count=1
function_arg	plot graphical display ||| plot periods figsize	count=1
module	other info needed for ||| tsa kalmanf	count=1
class	linear model with ||| tlinear model	count=2
arg	for n [arg_2] ||| [arg_2] [arg_1]	count=4
arg	monte carlo for arma ||| ma	count=1
class	estimate ||| ortho poly	count=1
arg	wald-test for ||| cov_p	count=1
module	of freedom correction ||| tsa	count=1
function	of qsturng ||| qsturng	count=1
arg	x by time ||| x	count=1
function	set the filtering method ||| set filter	count=1
module	and ||| base	count=1
arg	compute a ||| cov_p scale	count=1
module	a sequence ||| tsa base	count=1
function	standard ||| get bse	count=1
arg	other info ||| params	count=1
arg	measures in kim ||| ab dg	count=1
arg	in-sample prediction and out-of-sample ||| start end probabilities	count=1
module	test of ||| stats	count=1
function	[function_1] [function_2] ||| [function_2] [function_1]	count=486
function	[function_1] sample ||| [function_2] [function_1]	count=5
function	autocorrelation function for ||| acf	count=1
arg	wald-test for a joint ||| r_matrix cov_p scale invcov	count=1
function	returns an exog ||| exog	count=1
arg	[arg_1] npcs and ||| [arg_1] [arg_2]	count=4
class	test ||| test	count=1
class	other info needed ||| filter	count=1
function	each parameter component ||| components	count=1
function	the hessian matrix of ||| hessian	count=1
function_arg	[function_1] [arg_2] ||| [function_1] index [arg_2]	count=4
function	one of the stata ||| stata	count=1
arg	labels ||| labels positions	count=1
arg	freedom and r samples ||| r	count=2
arg	whether variance is the ||| y x	count=1
arg	components enthresh [arg_2] ||| [arg_1] [arg_2]	count=2
function	construct a knockoff ||| knockoff	count=1
arg	labels on ||| labels positions	count=1
arg	summarize ||| xname title alpha	count=2
function	stata date [function_2] ||| [function_1] [function_2]	count=1
arg	effects to obtain a ||| group_ix	count=1
module	test parameters ||| stats	count=1
function	split the ||| split rect	count=1
function	notebook ||| repr	count=1
function	names of ||| exog names	count=1
function	aitchison-aitken [function_2] ||| [function_1] [function_2]	count=1
class	of [class] transform ||| [class]	count=1
function	unknown mean and variance ||| ad	count=1
function	proportion the interval includes ||| reject interval	count=1
arg	wald-test for a joint ||| scale invcov	count=1
function	[function_1] plots ||| [function_1] [function_2]	count=4
module	roots of ||| tsa	count=2
function	[function_1] method to ||| [function_2] [function_1]	count=2
function	from a mixture ||| mixture	count=1
function	plot regression ||| plot regress exog	count=2
arg	side-by-side coefs and ses ||| float_format model_names stars	count=1
module	regime (and the last ||| regime_switching	count=1
module	any [module] ||| [module]	count=1
function	odds [function_2] ||| [function_2] [function_1]	count=4
module_class	negative [class_2] ||| [module_1] [class_2]	count=4
function	as [function_2] ||| [function_2] [function_1]	count=4
arg	akaike information criterion ||| llf nobs df_modelwc	count=1
function	a binomial proportion ||| proportion	count=1
function_arg	local linear [arg_2] ||| [arg_2] [function_1]	count=8
arg	is ||| y x idx split	count=1
class	of autoregressive lag-polynomial ||| arma	count=1
function	delta method ||| params	count=1
function	[function_1] filter ||| [function_2] [function_1]	count=1
arg	(endog mu ||| mu	count=1
arg	obtain ||| group_ix	count=1
class	ahead forecasting ||| arma	count=1
function	weights ||| lowess wt standardize	count=1
arg	statistic for independence ||| x max_dim epsilon distance	count=1
function	variables are discrete ||| discrete	count=1
function	matrix ||| cov params	count=1
function	helper function to calculate ||| sumofsq	count=1
function	[function_1] cp ||| [function_2] [function_1]	count=2
module_class	simulation [class_2] ||| [module_1] [class_2]	count=4
module_class	return none ||| iolib simple	count=1
arg	parameter of ||| nobs	count=2
arg	variance is the ||| y x idx split	count=1
arg	evaluate the ||| scale	count=2
function	and ||| init	count=1
module_class	the sarimax ||| tsa statespace sarimax	count=1
function	cp ||| cp	count=1
class	for the tweedie family ||| tweedie	count=1
module	test for additional non-linear ||| stats	count=1
function	of ||| dates from str	count=2
module	a list ||| tsa	count=1
module	period's regime (and the ||| regime_switching	count=1
arg	plot from [arg_2] ||| [arg_2] [arg_1]	count=1
function	rectangle in a ||| rectangle	count=1
function	all correlation [function_2] ||| [function_2] [function_1]	count=4
function	generate ccpr ||| ccpr	count=1
function	bilogistic ||| transform bilogistic	count=1
module_class	for [class_2] ||| [module_1] ttest [class_2]	count=1
arg	of mu ||| mu initscale axis	count=1
function	return a normalized ||| normalized	count=1
function	matrix for a ||| matrix	count=1
function	generate ||| wdesign mat	count=2
class	transform ||| unobserved components	count=1
arg	drop_idx is only available ||| drop_idx	count=1
function_arg	predict for [arg_2] ||| [function_1] [arg_2]	count=2
class	[class] provides train/test ||| [class]	count=4
module	white noise covariance with ||| tsa vector_ar	count=1
function	baseline cumulative [function_2] ||| [function_2] [function_1]	count=5
function	distance ||| distance	count=1
function	in-sample prediction conditional on ||| predict conditional	count=2
arg	error parameters ||| x1 x2 ddof	count=1
arg	a weighted empirical ||| eta est_vect weights nobs	count=1
arg	enthresh npcs ||| vals enthresh npcs	count=2
function	normal distribution ||| normal	count=1
arg	autocorrelation function plots lags ||| x ax lags	count=1
class	based on the grouping ||| grouping	count=1
module	q test for ||| stats	count=1
function	value for mu ||| mu	count=1
module	continuous distribution given ||| sandbox distributions	count=1
function	a single variable ||| update	count=1
module	continuous distribution ||| sandbox distributions	count=1
module	error of the parameter ||| regression	count=1
module	only [module] ||| [module]	count=3
function	the aic ||| aic	count=1
function	return ||| get	count=9
function	out ||| predict out	count=1
function	axes are needed ||| create mpl fig	count=1
function	garch ||| garch	count=1
class	of ||| dynamic	count=1
arg	estimator of g x ||| bw	count=3
arg	the power of ||| alpha power	count=4
module	test for one ||| stats	count=1
class	in [8] ||| reg coef c	count=1
function	unknown mean ||| ad	count=1
function	determine [function_2] ||| [function_2] [function_1]	count=4
arg	parameter of [arg_2] ||| [arg_1] [arg_2]	count=9
arg	error ||| x1 x2	count=2
function	generate ||| wdesign	count=1
class	fevd parameters ||| fevd	count=1
module	var p ||| tsa	count=1
function_arg	[function_1] structure to ||| [function_1] corr [arg_2]	count=1
module	a ||| base	count=4
function	subset ||| subset	count=1
function	of variance of ||| var	count=1
module_class	the [class_2] ||| [module_1] [class_2] filter	count=1
arg	confidence interval is based ||| alpha alternative	count=1
function	ratio ||| ratio	count=1
function	[function_1] limit ||| [function_2] [function_1]	count=3
module	delta method ||| discrete	count=1
function	design matrix ||| design	count=3
class	two sample z-test ||| gof chisquare ind power	count=1
function	hac independent of categorical ||| s all hac	count=1
arg	parameters as random permutations ||| reps start_params transformed em_iter	count=1
arg	a design matrix parameters ||| params exog exposure offset	count=1
arg	returns a dummy matrix ||| dictnames drop	count=1
function_arg	violin plot of ||| violinplot data ax	count=1
function	wald ||| wald	count=1
arg	one sample proportion ||| value nobs alpha	count=1
arg	iteratively ||| maxiter tol	count=1
function	make plot with ||| plot with	count=2
arg	by andrews and ||| skip	count=1
arg	interval ||| sig	count=2
module	[module] moment ||| [module]	count=1
arg	exogenous variables ||| exog linear	count=1
arg	by r this ||| r weights	count=1
class	of the summary table ||| summary	count=2
function	cooks [function_2] ||| [function_2] [function_1]	count=1
function	a wald-test for ||| test	count=1
function_arg	local linear [arg_2] ||| [function_1] [arg_2]	count=8
arg	that ma polynomial is ||| x	count=1
function	loglikelihood ||| llf	count=1
function	[function_1] tost the ||| [function_2] [function_1]	count=1
arg	model ||| model endog exog nobs	count=1
arg	of ||| exog	count=1
class	a wald-test for ||| likelihood	count=1
function	from sif to datetime ||| to datetime	count=1
function	effects by the delta ||| cov	count=1
arg	spectral projected gradient ||| grad	count=1
module_class	the least ||| robust least	count=1
function	other info ||| init kalman	count=1
module	and returns a ||| tsa base	count=1
arg	at ||| score	count=1
function	calculates ||| mat	count=1
function	for ||| init kalman	count=1
function	flexible grid plots of ||| grid plot	count=1
function	correlation matrix ||| corr	count=3
class	[class_1] [class_2] ||| [class_2] [class_1]	count=18
function	[function_1] for arma ||| [function_2] [function_1]	count=2
class	an ordered dictionary ||| ordered dict	count=1
module	of [module_1] [module_2] ||| [module_1] [module_2]	count=2
function	an exog array ||| exog	count=1
module	of the analysis ||| stats	count=1
function	the [function_1] [function_2] ||| [function_1] [function_2]	count=4
function	for initial ||| initial	count=1
arg	plot a ||| ax	count=1
module	covariance with degrees of ||| tsa	count=1
module	the distribution ||| distributions	count=2
module	estimates ||| sandbox regression	count=2
function	jacobian matrix ||| jacobian	count=1
arg	axis ||| axis	count=4
function	loglikelihood for observations of ||| loglikeobs	count=1
function	using joblib ||| fit joblib	count=1
function_arg	autocorrelation function [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] process ||| [arg_2] [function_1]	count=21
module	for simultaneous ||| sandbox stats	count=1
function	test to test ||| compare lm test	count=1
function	cross validation [function_2] ||| [function_2] [function_1]	count=1
function	the factors ||| factors	count=1
arg	the approximate ||| mod	count=1
arg	z-scores ||| zscores null_proportion null_pdf deg	count=1
arg	function func is monotonic ||| func low upp	count=1
module	longley ||| longley	count=1
function	test that ||| test	count=3
function	hypothesis that mean ||| mean	count=1
arg	the scatter of the ||| scatter ax	count=1
class	emirical null ||| null	count=1
function	skewness ||| skew	count=1
module	the likelihood is not ||| tsa statespace	count=1
module	for the one ||| stats	count=2
function_arg	psi function for ||| psi z	count=2
function_arg	[function_1] [arg_2] ||| [function_1] transformed shift [arg_2]	count=6
module	coefficients ||| vector_ar	count=3
function_arg	[function_1] [arg_2] ||| [function_1] mc [arg_2]	count=8
function	by the ||| margeff cov	count=1
function	[function_1] component ||| [function_2] [function_1]	count=1
module	inverse ||| base	count=1
function	thresholded ||| thresholded	count=1
function	[function_1] conditional on ||| [function_1] [function_2]	count=1
arg	marginal effects by the ||| params exog	count=1
module	list of ||| base	count=1
arg	labels on ||| labels	count=1
arg	value [arg] ||| [arg]	count=1
function	model ||| lm single	count=1
function	home ||| home	count=1
arg	just the ||| cls y k k_ar	count=1
module	wald-test for a ||| base	count=1
module	to calculate ||| tsa	count=1
function	the orders of each ||| orders	count=1
arg	c ||| c	count=1
function_arg	create equicorrelated [function_1] [arg_2] on off diagonal ||| [function_1] equi k_vars [arg_2]	count=1
module	transform parameters ||| families	count=2
function	f test to test ||| compare f test	count=1
class	the parameter estimates ||| phreg results	count=1
function	corresponding detection limit for ||| detection limit	count=1
arg	of ||| nobs	count=5
function	solvers using the ||| run solvers	count=1
function	marginal survival function ||| survfunc	count=1
module_class	with factor-structured ||| stats factored psdmatrix	count=1
function	gradient of a ||| grad	count=1
class	model this reduces ||| likelihood model	count=1
function	2-dimensional plot of ||| plot2d	count=1
class	monte carlo and ||| mc	count=2
arg	x ||| x order	count=1
module	of time series with ||| stats	count=1
arg	interval for ||| beta_high beta_low sig	count=1
function	[function_1] decomposition ||| [function_1] [function_2]	count=1
function	compute a wald-test for ||| test	count=1
function_arg	group means [arg_2] ||| [function_1] [arg_2]	count=3
function	effects by the delta ||| margeff cov	count=1
class	[class_1] smoothing ||| [class_2] [class_1]	count=1
module	a wald-test for a ||| base	count=1
arg	is a k-sample extension ||| x	count=1
arg	effects by the ||| model params	count=1
function	score with respect ||| score	count=1
function_arg	[function_1] [arg_2] ||| [function_1] acovf [arg_2]	count=4
function	event time point weighted ||| weighted	count=1
class	wald-test for a ||| likelihood	count=1
arg	conditional expectation partial residuals ||| focus_exog frac cond_means	count=1
function	of the matrix ||| missing matrix	count=1
function	jitter ||| jitter	count=1
function	of date strings ||| from str	count=1
function_arg	[function_1] confidence interval ||| [function_1] [arg_2]	count=1
arg	multiple results instances side-by-side ||| results	count=1
function	std and iqr ||| std iqr	count=1
function_arg	[function_1] [arg_2] ||| [function_1] exog exog [arg_2]	count=3
function	for observations within ||| s within	count=1
arg	1d arrays ||| x unbiased nlags qstat	count=1
module	variables ||| base	count=1
arg	norm and ||| norm	count=1
function	[function_1] html ||| [function_2] [function_1]	count=1
function	return integer position ||| get	count=1
module	noise ||| tsa	count=1
module	estimates with options ||| regression	count=1
function	for observations of ||| loglikeobs	count=1
function	to control performs ||| pairscontrol	count=1
class	hypothesis ||| stat uv	count=1
function_arg	z-test [arg_2] ||| [arg_2] [function_1]	count=4
function	use f ||| compare f	count=1
function	ticks and ||| ticks	count=1
function	chisquare test ||| gof chisquare	count=1
module_class	factor [class_2] ||| [module_1] factor [class_2]	count=2
function	the score function at ||| score	count=1
function	plot with ||| plot with	count=1
class	model instance for ||| likelihood model	count=2
arg	one sample ||| nobs	count=1
module	list of datetime ||| tsa base	count=1
module	along first ||| tsa	count=1
arg	is ||| x idx	count=1
class	random ||| mixed lmresults	count=1
class	linear hypothesis ||| model	count=1
arg	info ||| cls	count=1
function_arg	[function_1] function for ||| [arg_2] [function_1]	count=8
class	[class_1] biweight ||| [class_2] [class_1]	count=5
function	discrete ||| check discrete	count=1
class	means ||| compare means	count=1
class	leave-one-label_out [class_2] ||| [class_2] [class_1]	count=6
module	distribution where sigma=corr ||| distributions	count=1
function	plot axes are needed ||| create mpl fig	count=1
function	and other ||| init	count=1
function	the hessian matrix ||| hessian	count=1
arg	or lower ||| b lower	count=1
function	[function_1] effects ||| [function_1] [function_2]	count=2
arg	[arg_1] the ||| [arg_2] [arg_1]	count=10
function	[function_1] interval ||| [function_1] reject [function_2]	count=2
function	to stata's ||| stata	count=1
arg	the spectral projected gradient ||| grad start	count=1
arg	lags : int ||| start_params lags maxiter maxfun	count=1
function	[function_1] partial regression ||| [function_2] [function_1]	count=1
function	[function_1] marginal effects ||| [function_1] [function_2]	count=1
function	for kurtosis ||| kurt	count=1
module_class	[module_1] [class_2] currently works only if ||| [module_1] [class_2] filter2 x pad	count=1
arg	marginal ||| params	count=1
module	if ||| tools	count=3
function	and returns ||| from	count=1
function	jacobian matrix for the ||| jacobian	count=1
class	the bspline ||| bspline	count=2
function	parameters for fit ||| fit start params	count=2
arg	parameter ||| param_num beta_high beta_low	count=1
module	of date strings and ||| tsa	count=1
arg	nobs ||| effect_size nobs	count=1
function	[function_1] with ||| [function_2] [function_1]	count=1
arg	statistic x : array-like ||| x	count=1
function	exog array ||| get exog	count=1
function	information criteria ||| criteria	count=1
arg	nobs ||| nobs	count=1
function	confidence interval ||| density confint	count=1
arg	by the ||| model	count=1
arg	compute a wald-test for ||| cov_p scale	count=1
module	a [module] for ||| [module]	count=1
class	counter ||| counter	count=1
arg	returns a dummy matrix ||| dictnames	count=1
module	calculates the ||| nonparametric	count=1
arg	true_params ||| true_params	count=2
function	cusum of squares statistic ||| cusum squares	count=1
arg	info needed for the ||| cls	count=1
arg	of the bandwidth ||| bw func	count=1
function	probability ||| prob	count=3
arg	is for a generic ||| x d	count=1
arg	labels ||| labels	count=2
class	effects ||| mixed	count=3
class	the gls ||| short panel gls	count=1
function	[function_1] the mean ||| [function_1] [function_2]	count=1
arg	covariance matrix to ||| cov	count=1
function	calculate local [function_2] ||| [function_2] [function_1]	count=2
arg	equivalence ||| x1 x2 low upp	count=1
arg	compute a wald-test ||| r_matrix cov_p	count=1
module	with degrees of freedom ||| tsa	count=1
arg	maxiter ||| start maxiter	count=1
function_arg	criterion [arg_2] ||| [arg_2] [function_1]	count=8
function	kurtosis ||| kurt	count=2
function	the orders ||| orders	count=1
module	restriction matrix for ||| stats	count=2
arg	the first third ||| alternative use_f	count=1
function_arg	[function_1] polynomial roots ||| [arg_2] [function_1]	count=3
function	and iqr for ||| iqr	count=1
function	stata's default format for ||| to default stata	count=1
module	for minimum ||| stats	count=1
function	[function_1] formatted ||| [function_2] [function_1]	count=2
class	a t-test ||| ttest	count=1
function_arg	[function_1] [arg_2] ||| [function_1] periodogram [arg_2]	count=16
function	remove sets that ||| remove	count=1
arg	and optionally the scatter ||| scatter	count=1
function_arg	requested equation [arg_2] ||| [arg_2] [function_1]	count=1
function	draw [function] vector ||| simulated [function]	count=1
class	draw and random ||| simulation smooth results	count=1
function	of hat_matrix used in ||| hat diag	count=1
arg	and ||| cls params	count=1
class	for a single ||| micedata	count=1
arg	variance is the same ||| y x idx	count=1
module	distribution for equal shape ||| distributions	count=1
module	difference ||| tsa statespace	count=1
arg	apply linear transform for ||| transform	count=1
function	the approximate inverse ||| calc wdesign mat	count=1
module	test for ||| tsa	count=1
function_arg	the confidence [arg_2] ||| [function_1] int el param_num [arg_2]	count=4
arg	create a ||| results yname xname alpha	count=1
function	breslow method to ||| breslow	count=2
class	gls ||| gls	count=1
function	std [function_2] ||| [function_1] [function_2]	count=3
function	test if ||| test group	count=1
function	random effects ||| random effects	count=1
function	to generate the ||| wdesign mat	count=1
function	to stata's default format ||| dtype to default stata fmt	count=1
function	regularized fit to a ||| fit regularized	count=1
function	variable s tested ||| compute sig	count=1
function	error of ||| get	count=1
arg	the log-likelihood parameters ||| params	count=3
arg	an ||| x	count=3
function	to impute missing ||| impute	count=1
arg	one ||| nobs alpha alternative	count=1
arg	depends on [arg] ||| a b [arg]	count=1
class	required results ||| olsinfluence	count=1
function	effects ||| margeff cov params	count=2
module	required results from ||| stats	count=1
function	integer row ||| maybe	count=1
function	autocorrelation parameters ||| acorr ljungbox	count=1
function	the kalman filter ||| kalman	count=1
function_arg	lowess line [arg_2] ||| [function_1] [arg_2]	count=1
arg	a pickle ||| cls fname	count=1
arg	this is a ||| x	count=1
arg	first elements ||| index inplace	count=1
function	as a [function_2] ||| [function_1] [function_2]	count=3
module_class	convention by default [module_1] [class_2] filter follows durbin and ||| [module_1] [class_2]	count=1
function	[function_1] autocovariances from ||| [function_2] [function_1]	count=2
class	least [class_2] ||| [class_1] [class_2]	count=2
function	a sequence of ||| dates from str	count=1
class	weighted ||| descr	count=1
arg	plots lags on the ||| x ax lags alpha	count=1
module	error for ||| stats	count=1
class	to ||| markov regression	count=1
arg	embedding dimensions 1 max_dim ||| indicators max_dim	count=1
module	sum of squares along ||| tsa	count=1
function	calculate the ceres residuals ||| ceres resids	count=1
function	another set ||| set	count=1
class	factor-structured ||| factored psdmatrix	count=1
arg	the data ||| data	count=3
class	a basic summary ||| summary	count=1
arg	tree to get list ||| tree	count=1
module	estimates with ||| sandbox regression	count=1
function	[function_1] plots ||| [function_2] [function_1]	count=4
module	needed for the ||| tsa	count=1
class	for ||| likelihood	count=1
function_arg	squares [arg_2] ||| [function_1] alpha [arg_2]	count=1
arg	class distributedmodel ||| fit_kwds	count=1
module	needed ||| tsa kalmanf	count=2
class	leave-one-label_out ||| one label out	count=1
function	a normalized ||| normalized	count=1
arg	a specific [arg_2] ||| [arg_2] [arg_1]	count=4
function	for out [function_2] ||| [function_1] [function_2]	count=3
class	the domain ||| ortho poly	count=1
arg	[arg_1] appropriate length ||| [arg_1] [arg_2]	count=1
function	[function_1] fdr values ||| [function_1] [function_2]	count=2
function	array observation vector ||| obs	count=1
arg	eps by ||| x eps	count=2
arg	each observation ||| obs	count=1
function	type ||| type	count=1
arg	marginal effects by ||| exog	count=1
arg	the variance-covariance ||| exog cov_params	count=1
function	2d or 3d ||| arfilter old	count=1
function	list ||| dates from	count=1
arg	in testfunc ||| testfunc	count=1
function	pooled odds ratio ||| pooled odds ratio	count=2
arg	is for a ||| x	count=1
function	aic ||| aic	count=1
arg	of 'lhs only' ||| bounds options	count=1
function	[function_1] plots of ||| [function_1] [function_2]	count=4
module_class	of arma ||| sandbox tsa arma	count=1
function	a confidence region plot ||| contour	count=1
function_arg	[function_1] interval for ||| [arg_2] [function_1]	count=6
function	and returns a list ||| str	count=1
arg	linear transform for ||| x transform group_iter	count=1
function	normalize the random ||| normalize	count=1
arg	the power of a ||| alpha power	count=2
class	2x2 ||| table2x2	count=1
arg	from a [arg_2] ||| [arg_2] [arg_1]	count=1
arg	flat to ||| nar nma	count=1
arg	estimate of mu ||| mu	count=1
function	sif to datetime ||| to datetime	count=1
module	of distribution function ||| distributions	count=2
function	integer ||| maybe	count=1
class	of ||| arma process	count=1
function	data pattern ||| pattern	count=1
function	state vector [function_2] ||| statespace simulation smooth results [function_2] [function_1]	count=1
function	info needed for ||| kalman	count=1
function	selection matrix ||| selection	count=1
arg	true if data ||| data	count=1
module	values for the ||| stats	count=1
module_class	[module_1] [class_2] ||| [module_1] gof chisquare [class_2]	count=3
function	returns ||| kalman state	count=2
function	for autoregressive coefficients ||| autoregressive	count=1
arg	to key in a ||| key	count=1
function	strata containing the baseline ||| baseline	count=1
arg	iteratively [arg_2] ||| [arg_2] [arg_1]	count=1
class	wald-test for ||| likelihood model	count=1
arg	f returns 1d array ||| f epsilon args	count=1
module	estimates with options ||| sandbox regression	count=1
function_arg	transform unconstrained parameters ||| transform params unconstrained	count=1
function	obtain the factors ||| factors	count=1
arg	matrices with singular values ||| error_variance order k_endog	count=1
function	[function_1] with ||| [function_1] [function_2]	count=1
module	for all pairs ||| stats	count=1
module	parameter estimates ||| duration	count=1
arg	on horizontal axis ||| ax data	count=2
arg	the components enthresh npcs ||| enthresh npcs	count=1
class	random [class] ||| [class]	count=2
module	with ||| tsa	count=1
arg	d1 = [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] orth [arg_2]	count=1
class	summary table ||| summary	count=3
arg	heteroscedasticity and autocorrelation ||| results nlags	count=1
arg	generic lagrange multiplier test ||| maxlag autolag store	count=1
function	calling function ||| get columns	count=1
class	the gls ||| panel gls	count=1
function	grid plots of impulse ||| grid plot	count=1
class	p loglikelihood ||| varresults	count=1
module	returns the profile ||| emplike	count=1
arg	summarize the model ||| title model_name	count=1
function	compute small number of ||| compute	count=1
class	now depends on numdifftools ||| ar	count=1
arg	x by time or ||| x index counts	count=1
arg	calculates the nodewise_weightvalue ||| nodewise_row	count=1
class	least trimmed ||| trimmed	count=4
function	[function_1] limit for ||| [function_1] [function_2]	count=3
function	delta ||| cov	count=1
arg	a wald-test ||| r_matrix cov_p	count=1
function	linear filtering via convolution ||| convolution filter	count=1
function	and other info ||| init	count=1
function	regularized fitted ||| regularized	count=1
module	calculate sum of squares ||| tsa	count=1
arg	[arg] inversion that ||| [arg]	count=1
function	by the delta ||| cov	count=1
arg	transform constrained ||| constrained error_variance	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] [function_arg_2]	count=20
arg	and ses parameters ||| float_format model_names stars	count=1
function	index parameters ||| index	count=1
module	in regression ?) ||| panel	count=1
module	to generate the approximate ||| base	count=1
class	probit ||| probit	count=1
arg	transform ||| transform	count=1
arg	function plots lags on ||| ax lags alpha	count=1
function_arg	ticks [arg_2] ||| [function_1] ax [arg_2]	count=1
function	test statistic ||| compute test stat	count=1
arg	upper or lower ||| lower	count=1
arg	covariance matrix ||| mod params	count=1
function	bivariate extreme value ||| bv ev	count=2
function	the random [function_2] ||| [function_2] [function_1]	count=4
arg	eps by zero ||| eps	count=2
function_arg	fit [arg_2] ||| [function_1] constrained [arg_2]	count=1
arg	[arg] unit ||| x maxlag regression [arg]	count=1
module	duration values for ||| duration	count=2
function_arg	output [arg_2] ||| [function_1] [arg_2]	count=4
arg	[arg] that fall ||| [arg]	count=3
arg	s*i + a*b*a' ||| s a ata bi	count=1
function	ordinal variables ||| test ordinal	count=1
module_class	[module_1] kdeunivariate class ||| [module_1] [class_2]	count=2
arg	y and x ||| y x axis	count=1
function	function [function] of ||| [function]	count=1
function	next ||| next sample	count=1
function	simulation ||| simulation	count=1
class	the significance value ||| reg coef c	count=1
module	estimates with ||| regression	count=1
module	sandwich with ||| stats	count=1
function	cohn [function_2] ||| [function_2] [function_1]	count=4
function	cluster robust covariance matrix ||| cov cluster	count=1
function	other ||| state	count=1
arg	of signal [arg] at ||| [arg]	count=1
module	in [module_2] ||| [module_1] [module_2]	count=14
module	transform ||| families	count=2
function	centered within each group ||| centered split	count=1
arg	x y ||| x y normed detrend	count=1
module	of the ||| duration	count=1
class	returns the ||| kalman	count=1
class	[class] spline ||| [class]	count=1
function	sequence of date ||| from	count=1
function	measurement [function_2] ||| [function_2] [function_1]	count=1
function	cumulative distribution function ||| cdf	count=2
arg	any model with an ||| gradient start_params fargs	count=1
function_arg	[function_1] [arg_2] ||| [function_1] y x [arg_2]	count=3
class	box-cox transformed data array ||| box cox	count=1
function	extreme value ||| ev	count=1
arg	white's lagrange multiplier ||| exog retres	count=1
function_arg	[function_1] x : ||| [arg_2] [function_1]	count=1
arg	to calculate sum ||| x	count=1
module	coefficients as ||| tsa vector_ar	count=1
function_arg	kurtosis measures [arg_2] ||| [arg_2] [function_1]	count=2
arg	a given term ||| query_term	count=1
arg	x y normed=true detrend=detrend_none ||| x y	count=1
function	likelihood of ||| likelihood	count=1
arg	index or ||| index	count=2
function_arg	difference a [arg_2] ||| [arg_2] [function_1]	count=5
function	constant used [function] ||| [function] reference	count=1
function	plot fit ||| plot fit	count=2
arg	components enthresh npcs and ||| vals enthresh npcs	count=1
function	and ||| get	count=1
module	structural ||| tsa vector_ar	count=1
arg	data as binary indicators ||| endog exog groups	count=2
function	get [function_2] ||| [function_1] index label [function_2]	count=3
arg	compute exact ||| set_sigma2	count=1
arg	difference r ||| r	count=1
arg	line to a plot ||| ax lines_idx	count=1
class	a pickle of this ||| results	count=1
arg	r and degrees ||| r	count=1
arg	model of coles ||| t	count=1
arg	loglike evaluated at params ||| params	count=2
arg	should be equivalent of ||| xranks	count=1
function	binomial tost [function_2] ||| [function_1] reject [function_2]	count=1
function	factor of diagonal ||| factor	count=1
arg	and r2_adj ||| skip_crossval cv_iter	count=1
arg	in the first elements ||| inplace prefix	count=1
function	random draw [function] vector ||| simulated [function]	count=1
function	for computing marginal effects ||| derivative exog	count=1
arg	for any ||| start_params fargs	count=1
function	and ||| from str	count=1
function	degrees of freedom used ||| df model	count=1
function	[function] coefficient ||| [function]	count=1
module_class	[module_1] arma process ||| [module_1] [class_2]	count=6
function	bivariate [function_2] ||| [function_1] [function_2]	count=1
function	[function] in any ||| nan [function]	count=3
module	[module_1] [module_2] ||| [module_1] [module_2]	count=66
function	generate [function_2] ||| [function_2] [function_1]	count=4
function_arg	hierarchical way [arg_2] ||| [arg_2] [function_1]	count=1
module	in the model ||| tsa	count=1
arg	calculate ||| effect_size nobs1 alpha	count=3
function	factors ||| factors	count=1
function	function to ||| sumofsq	count=1
arg	drop_idx ||| drop_idx sparse	count=1
arg	first elements of ||| inplace prefix	count=1
arg	to ||| mod params	count=1
function	the variance [function_2] ||| [function_1] [function_2]	count=5
arg	pairs of vals ||| vals	count=1
function	cumulative hazard function ||| cumulative hazard function	count=3
arg	create ||| yname xname alpha	count=1
arg	correlations determined [arg_2] ||| [arg_1] [arg_2]	count=1
function	the residuals [function_2] ||| [function_1] [function_2]	count=1
arg	is a ||| x	count=2
arg	panel hac ||| nlags	count=1
arg	p [arg_2] ||| [arg_2] [arg_1]	count=4
function	[function] helper function ||| [function]	count=1
arg	lags ||| lags alpha	count=1
module	correction ||| tsa	count=1
function_arg	arma [arg_2] ||| [arg_2] [function_1]	count=11
arg	calculate the ||| effect_size nobs alpha df	count=1
class	get ||| time series model	count=1
function_arg	difference a series ||| diff series	count=1
function	effects ||| margeff cov	count=1
class	summary table if ||| summary	count=1
function	[function_1] requested equation ||| [function_1] [function_2]	count=1
function	random [function_1] [function_2] vector from its conditional ||| statespace simulation smooth results [function_1] [function_2]	count=1
module	distribution given by a ||| sandbox distributions	count=1
arg	obtain a single ||| group_ix	count=1
module	parameter estimates ||| regression	count=1
function_arg	[function_1] single regressor ||| [function_1] [arg_2]	count=2
function	ascii ||| add text	count=1
function	of date ||| dates from	count=1
module	the current period's regime ||| regime_switching	count=2
function	use gls to update ||| get fe params	count=1
function_arg	the location [arg_2] ||| [function_1] [arg_2]	count=2
arg	linear transform for ||| transform group_iter	count=1
arg	x ||| x index	count=1
function	summary ||| summary	count=9
arg	concatenate a set ||| axis allow_mix	count=1
arg	[arg_1] horizontal ||| [arg_2] [arg_1]	count=4
function	wang-ryzin [function_2] ||| [function_2] [function_1]	count=1
class	[class_1] decomposition ||| [class_2] [class_1]	count=1
arg	the kalman filter notes ||| params start	count=1
function	to ||| transform	count=1
function	project ||| project	count=1
function_arg	arma [arg_2] ||| [function_1] generate sample [arg_2]	count=2
arg	for 1d arrays ||| x unbiased nlags qstat	count=1
arg	random sample ||| rvs alpha	count=1
arg	a joint linear ||| cov_p scale invcov	count=1
module	is used for ||| sandbox stats	count=1
function	variables ||| exog	count=1
function	to obtain the crude ||| crude oddsratio	count=1
function	save the object to ||| save	count=1
function	grid plots of ||| grid plot	count=1
function	false [function] ||| [function]	count=1
function	test [function_2] ||| [function_2] [function_1]	count=1
arg	arma ||| ma	count=1
module	for nested categories ||| sandbox stats	count=1
arg	results against one regressor ||| results exog_idx fig	count=1
function	group indices for ||| combine indices	count=1
arg	via kalman filter ||| method transparams	count=2
class	compute a wald-test ||| results	count=1
function	dict ||| dict	count=1
arg	of error parameters ||| x1 x2 ddof axis	count=1
function	squares of ||| squares	count=1
arg	for 1d parameters ||| y unbiased	count=1
function	for out of ||| out of	count=1
function	latex tabular ||| latex tabular	count=2
module	of demarta and ||| sandbox	count=1
arg	of data confidence ||| alpha	count=1
function	effects by the ||| cov params	count=1
function	mean of ||| mv mean	count=1
class	the parameter estimates ||| phreg	count=1
function	[function_1] multiindex dataframe ||| [function_1] [function_2]	count=1
arg	delta ||| params	count=1
function	movorder ||| movorder	count=1
function	odds ratio for ||| odds ratio	count=2
arg	discrepancy between [arg_2] ||| [arg_2] expected [arg_1]	count=1
arg	[arg] based method ||| [arg] mom2	count=4
function	minimal ||| fit minimal	count=1
function	kurtosis ||| kurtosis	count=2
function	the next ||| next sample	count=1
module	of the ||| sandbox	count=1
function	generate the ||| wdesign mat	count=1
module_class	[module_1] g' ||| [module_1] [class_2]	count=3
function	the ||| calc wdesign	count=2
arg	lags on ||| ax lags	count=1
function	l1 regularized problem ||| l1	count=1
arg	of x ||| x index counts	count=1
class	compute a ||| likelihood model results	count=1
function	[function] table with ||| [function]	count=2
function	exog array with ||| exog	count=1
function	[function_1] method the ||| [function_1] [function_2]	count=1
arg	summary for regression results ||| yname xname title	count=1
function	qsturng ||| qsturng	count=1
function	computes ||| margeff cov	count=1
arg	use nd convolution to ||| x	count=1
function	a 2-dimensional ||| plot2d	count=1
function	for arma ||| arma predict	count=1
class	log transform ||| log	count=2
function	estimated covariance for ||| cov	count=1
function	hac for ||| hac	count=1
arg	a wald-test for ||| r_matrix	count=1
arg	the variance-covariance of ||| model params exog cov_params	count=1
function_arg	predict [arg_2] ||| [arg_2] [function_1]	count=1
arg	create a mixedlmparams ||| k_fe k_re	count=1
function_arg	[function_1] cook johnson ||| [arg_2] [function_1]	count=1
class	weights for a hypothesis ||| uv	count=1
module	var ||| tsa vector_ar	count=2
function	compute multivariate partial autocorrelations ||| compute multivariate pacf	count=1
function	[function] values ||| [function]	count=1
function_arg	plot fit [arg_2] ||| [arg_2] [function_1]	count=1
arg	distribution parameters by ||| params	count=1
function	log determinant of ||| logdet	count=1
class	draw and random disturbance ||| simulation smooth results	count=1
function	compute ||| wald	count=1
function_arg	integrated [arg_2] ||| [function_1] mc [arg_2]	count=8
function	mediator ||| mediator	count=1
arg	the variance-covariance ||| params exog cov_params	count=1
class	factor anova ||| anova	count=1
function	by the delta ||| cov params	count=1
arg	stubs at column ||| stubs	count=1
function	bartlett weights ||| weights bartlett	count=2
function	normal based equivalence test ||| ztost	count=1
module	for all pairs ||| sandbox stats	count=1
function	log-likelihood for each observation ||| score obs	count=1
function	the vector ||| index vector	count=1
function	test that [function_2] ||| [function_1] equal [function_2]	count=1
arg	linear filter x ||| x	count=1
function	calculates the log-likelihood gradient ||| grad	count=1
arg	degrees of freedom v ||| v	count=1
arg	a joint linear ||| scale invcov	count=1
arg	the parameters of ||| params	count=1
function	[function] distribution ||| expect [function]	count=3
arg	along first axis ||| x axis	count=1
function	the delta ||| margeff cov	count=1
function	the factors ||| calc factors	count=1
arg	or index or array-like ||| index	count=1
class	space representation parameters ||| mlemodel	count=1
function_arg	[function_1] params for ||| [arg_2] [function_1]	count=1
function	is false [function] is ||| [function]	count=1
arg	is positive semi-definite ||| threshold n_fact	count=2
arg	location and scale ||| scale	count=2
module	the rows or ||| statespace	count=2
function	tuple or [function] ||| [function]	count=1
function	return [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] scale ||| [arg_2] [arg_1]	count=2
arg	information between x ||| px py pxpy logbase	count=1
function	vector ||| missing vector	count=2
function_arg	calculate recursive [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] returns 1d ||| [arg_1] [arg_2]	count=2
function	load the ||| load pandas	count=6
class	from [class] ||| [class]	count=1
module	fixed effects ||| panel	count=1
class	get ||| discrete results	count=1
function_arg	using the [arg_2] ||| [function_1] [arg_2]	count=1
class	returns the ||| results	count=2
function	default ||| create default	count=1
function	fit the unconditional maximum ||| fit	count=1
function_arg	[function_1] error bands ||| [function_1] mc [arg_2]	count=3
arg	along first axis ||| axis	count=1
arg	returns views on [arg_1] [arg_2] where missing observations are ||| tools drop missing [arg_1] [arg_2]	count=1
function	odds ratio ||| odds ratio	count=2
function	regression coefficients ||| regression coefficients	count=2
function	orthogonalized ma ||| ma	count=1
class	exogenous variables ||| binary	count=1
module	specification test for ||| stats	count=1
module	regime ||| regime_switching	count=5
class	is equal ||| descr stats	count=1
function_arg	[function_1] parameters ||| [function_1] [arg_2]	count=11
function	q ||| q	count=3
arg	calculate the ||| effect_size nobs1 alpha ratio	count=3
function	for arma process ||| arma	count=1
arg	the data ||| data alpha beta	count=1
module	lagorder selection ||| vector_ar	count=1
arg	a can ||| a	count=1
module	returns a ||| base	count=1
arg	reference ||| reference	count=1
function_arg	[function_1] series ||| [arg_2] [function_1]	count=1
class	the multinomial logit ||| mnlogit	count=1
class	[class_1] instance for ||| [class_2] [class_1]	count=4
module	of ||| tsa base	count=4
module	strings and ||| tsa	count=1
function	arima order ||| order	count=1
function	starting value for mu ||| starting mu	count=1
function	pdf ||| pdf	count=2
function	filter [function] convention by ||| set filter [function]	count=1
function	method ||| margeff cov params	count=2
arg	linear model ||| model	count=1
function	the state disturbance vector ||| state disturbance	count=1
arg	linear transform ||| x transform	count=1
arg	if [arg] is false ||| yname yname_list [arg]	count=1
function_arg	group indices [arg_2] ||| [arg_2] [function_1]	count=1
arg	'star' [arg] ||| eta est_vect weights [arg]	count=2
arg	in kim & white ||| ab dg	count=1
function	ordinal ||| ordinal	count=2
class	other info needed ||| kalman filter	count=1
arg	with self and other ||| other weights	count=1
function_arg	arma process [arg_2] ||| [function_1] periodogram [arg_2]	count=4
function	should implement the derivative ||| derivative	count=1
function	the regularized fitted parameters ||| est regularized	count=1
function	covariance ||| covariance	count=1
function	estimate scale and ||| estimate	count=1
function	solvers using the ||| solvers	count=1
function	the regularized fitted ||| regularized	count=1
arg	indices ||| indices	count=2
function	final simulation ||| simulation	count=1
function	inflation [function_2] ||| [function_1] [function_2]	count=4
module	sequence of date ||| tsa	count=1
arg	[arg_1] model updates ||| [arg_2] [arg_1]	count=2
arg	method ||| params exog	count=1
function_arg	[function_1] [arg_2] such that :math \sigma_u ||| [function_1] rep [arg_2]	count=2
module	return string the ||| iolib	count=1
function	collect required results ||| res	count=1
arg	a joint ||| cov_p scale invcov	count=1
arg	are different [arg_2] ||| [arg_2] [arg_1]	count=1
function	the log-likelihood gradient for ||| calc grad	count=1
arg	model parameters ||| params	count=1
function	determinant of cov_params of ||| det cov	count=1
function	returns a list of ||| from str	count=1
function	parameters for ||| params	count=4
arg	d1 = x d2 ||| d1 d2	count=1
function	the ||| cov	count=2
function	sum of squares ||| sumofsq	count=1
function	returns partial ||| partial resids	count=1
function	initialize [function_2] ||| [function_1] [function_2]	count=2
function	plot the autocorrelation function ||| plot	count=1
arg	info needed ||| cls params	count=1
function	the location ||| loc	count=2
class	of a two sample ||| gof chisquare	count=1
function	wald-test ||| wald	count=1
module	parameters ||| tsa statespace	count=8
class	computes the significance value ||| coef c	count=1
function_arg	[function_1] the kalman ||| [function_1] [arg_2]	count=1
arg	of [arg_2] ||| [arg_2] [arg_1]	count=11
function	matrices with singular values ||| from multivariate pacf python	count=1
arg	marginal effects by ||| params exog	count=1
function	starting parameters for ||| start params	count=6
function	the four [function_2] ||| [function_1] [function_2]	count=3
function_arg	matrix [arg_2] ||| [arg_2] [function_1]	count=1
arg	into a single vector ||| has_fe	count=1
module	to the distribution ||| distributions	count=2
arg	observations ||| df censorship cohn	count=1
function	tost the interval includes ||| tost reject interval	count=1
arg	[arg_1] cor_length ||| [arg_2] [arg_1]	count=2
module	method [module] moment ||| [module]	count=1
function	all against first ||| all one	count=2
class	factor-structured matrix ||| factored psdmatrix	count=1
module_class	[module_1] jp check ||| [module_1] [class_2]	count=8
class	the significance value for ||| test reg coef c	count=1
arg	studentized ||| external alpha	count=1
arg	summarize the ||| title model_name	count=1
module	deviance [module] for either ||| [module]	count=1
function	have the integer row ||| maybe reset	count=1
function	regularized ||| regularized	count=3
function	log ||| log	count=4
arg	of x ||| x index counts dummies	count=1
arg	that goes ||| b0_vals param_nums method stochastic_exog	count=1
module	test for additional ||| stats	count=1
class	including the intercept / ||| varresults	count=1
module	cusum test for ||| sandbox stats	count=1
arg	and variances ||| result betas tmp	count=1
arg	compute a wald-test for ||| r_matrix	count=1
class	plot ||| unobserved components results	count=1
function	[function_1] covariance matrix ||| [function_2] [function_1]	count=8
function	compute forecast [function_2] ||| [function_1] [function_2] steps	count=1
arg	effects by the ||| model	count=1
arg	for 1d ||| x y unbiased	count=1
function_arg	constant [arg_2] ||| [function_1] [arg_2]	count=4
function	sequence of date strings ||| from str	count=1
function	of freedom used in ||| df model	count=1
arg	scatter of ||| scatter	count=1
function	sample [function_2] ||| [function_2] [function_1]	count=1
module	other info ||| kalmanf	count=1
module	solve by ||| regression	count=1
function	of a normal distributed ||| normal	count=1
module	for minimizing a ||| stats	count=1
function_arg	[function_1] function ||| [arg_2] [function_1]	count=8
function	[function_1] factor ||| [function_2] [function_1]	count=5
arg	eps ||| eps	count=2
function	containing [function] values ||| [function]	count=1
class	compute a wald-test ||| likelihood model	count=1
function	partial regression for ||| partregress	count=2
function	calculates the difference between ||| ci limits	count=1
class	info ||| filter	count=1
function	zero ||| zero	count=1
module_class	[module_1] factor anova ||| [module_1] ftest [class_2]	count=1
arg	to generate the ||| mod params	count=1
arg	error bands assuming ||| orth repl t signif	count=2
function	compute the trace ab ||| trace symbanded	count=1
class	skewness ||| uv	count=1
function	linear constraint ||| constraint	count=1
arg	[arg_1] ma ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] parameter of ||| [arg_2] [function_1]	count=2
arg	projected gradient method ||| grad	count=1
function_arg	[function_1] [arg_2] of identical ||| ztest [function_1] [arg_2]	count=1
function	that calculates the baseline ||| baseline	count=1
function	generic statistical power ||| power	count=1
function_arg	calculate recursive ols ||| recursive olsresiduals olsresults	count=1
function	approximate inverse covariance ||| calc	count=1
function	affine transform for ||| affine	count=1
arg	matrix given standard deviation ||| std	count=1
arg	in-sample ||| params start end	count=1
arg	under dependent censoring ||| time status exog kfunc	count=1
function	marginal effects by ||| margeff	count=1
arg	effects by the ||| params exog	count=1
class	pooled ||| global odds ratio	count=1
class	a model [class_2] ||| [class_2] [class_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] idx [arg_2]	count=2
class	return results ||| multivariate test results	count=1
function_arg	[function_1] [arg_2] ||| [function_1] thresholded [arg_2]	count=6
class	of the logit ||| logit	count=1
arg	a ||| r_matrix cov_p scale	count=2
function_arg	[function_1] x by ||| [arg_2] [function_1]	count=3
function	variance inflation [function_2] ||| [function_1] [function_2]	count=4
function	a list of datetime ||| dates	count=1
class	unit ||| unit	count=1
function	leave-one-out estimator ||| loo	count=1
arg	model of coles ||| t beta delta	count=1
function	to control ||| pairscontrol	count=1
function	for starting parameters ||| start params	count=1
class	estimates with ||| gmmresults	count=1
arg	coefficient of variation ||| bounds window_length scale	count=1
function	index or ||| index	count=1
class	is equal ||| descr	count=1
arg	for 1d parameters ||| y unbiased demean	count=1
arg	index or ||| start end index	count=1
module	white noise covariance ||| tsa	count=1
arg	regressionresults instances ||| model_results method alpha labels	count=1
function	success is ||| binom	count=1
arg	is the ||| x	count=2
module	search of ||| stats	count=1
class	of ||| results	count=2
arg	of marginal effects by ||| model params	count=1
class	results of ||| results	count=1
function	log odds ||| log oddsratio	count=2
arg	dimensions 1 max_dim ||| max_dim	count=1
class	of the multinomial logit ||| mnlogit	count=1
function	the hessian of ||| hessian	count=1
arg	structure ||| rank ctol lam_min	count=1
module	info needed for ||| tsa	count=1
arg	if the objects in ||| pvalues group_name	count=1
function	cumulative ||| cumulative	count=1
module_class	[module_1] fitted ||| [module_1] [class_2]	count=2
function	name ||| endog name	count=1
function	[function_1] ab for ||| [function_2] [function_1]	count=3
function	cusum of ||| cusum	count=1
