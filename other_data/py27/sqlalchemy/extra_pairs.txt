clause adapter	clones and modifies clauses based on column correspondence
ntext	mssql ntext type for variable-length unicode text up to 2^30 characters
columns	a sequence of local column names. the named columns
onebased	assume the sql representation of this value is
text	text of the hint
attribute_names	optional list of string attribute names
update_context	an "update context" object which contains
comparator	a helper class that allows easy construction of custom :class ~
unsupported compilation error	raised when an operation is not supported by the given compiler
dbapierror	raised when the execution of a database operation fails
executable	mark a clauseelement as supporting execution
doc	optional string that can be used by the orm or similar
scoped session	provides scoped management of :class session objects
real	mysql real type
display_width	optional maximum display width for this number
load	boolean when false :meth .merge switches into
columns	a collection of :func .expression.column constructs
names	deprecated. same purpose as the keyword-based alternate
serializable column getter	column-based getter used in version 0 7 6 only
instrumented list	an instrumented version of the built-in list
strong instance dict	a 'strong-referencing' version of the identity map
other	expression to compare with sql wildcard
creator	optional. when new items are added to this proxied
url	represent the components of a url used to connect to a database
tstzrange	represent the postgresql tstzrange type
index expression	represent the class of expressions that are like an "index" operation
name	name given to the common table expression. like
autoincrement	set up "auto increment" semantics for an integer
sawarning	issued at runtime
name	optional string name indicating the target table name
class_	class to use in order to create new :class .session
subject	the subject to be inspected
values	optional tuple of individual values
quoting	defaults to 'auto': automatically determine set value
inline	whether to generate insert statements as "inline", e.g
convert_unicode	same flag as that of
from_obj	a :class .fromclause object that will replace
line	the final line of show create table output
left	the left side of the join
value	the value that is to be returned before this event
disconnection error	a disconnect is detected on a raw db-api connection
load	represents loader options which modify the state of a :class
target	the object instance receiving the event
is_prepared	whether or not
target	the mapped instance being persisted. if
schema	optional retrieve names from a non-default schema
params	single parameter set a single dictionary
aliased insp	provide an inspection interface for an :class
precision	total digits in this number. if scale and precision
dispatch	mirror the event listening definitions of an events class with listener collections
check constraint	a table- or column-level check constraint
line	a line of show create table output
path registry	represent query load paths and registry functions
base	the base 'fallback' type
ordering_func	optional. a function that maps the position in
null pool	a pool which does not pool connections
expr	a column expression typically a :class .columnelement
inline	if true no attempt will be made to retrieve the
arg	argument representing the default value
no such column error	a nonexistent column is requested from a rowproxy
op	operator callable
cascade options	keeps track of the options sent to relationship() cascade
objects	a list of mapped object instances. the mapped
mapper	a mapped class or the actual :class .mapper object
version_id_generator	define how new version ids should
serializable column getter v2	updated serializable getter which deals with multi-table mapped classes
no inspection available	a subject passed to :func sqlalchemy inspection inspect produced
mssqlstrict compiler	a subclass of mssqlcompiler which disables the usage of bind parameters where not allowed natively by ms-sql
reset_on_return	determine steps to take on
varbinary	the mssql varbinary type
e	an exception object indicating a reason for the invalidation
whereclause	optional sql expression describing the where
conn	:class .connection object
schema type	mark a type as possibly requiring schema-level ddl for usage
compound select	forms the basis of union, union all, and other select-based set operations
schema	the returned :class .foreignkey will
callable_	a callable which will be invoked with
branch	if true this is a "branch" of an existing
criterion	an optional clauseelement formulated against the
create engine plugin	a set of hooks intended to augment the construction of an :class
my sqldialect	details of the mysql dialect
version_id_col	a :class .column
ordered dict	a dict that returns keys/values/items in the order they were added
create column	represent a :class column as rendered in a create table statement
base	the :class .automapbase class doing the prepare
instrumentation events	events related to class instrumentation events
preserve_parameter_order	if true the update statement is
static pool	a pool of exactly one connection used for all requests
mutable list	a list type that implements :class mutable
column	represents a column in a database table
instance	instance to be merged
recycle	if set to non -1 number of seconds between
ascii	same as that of
connection events	available events for :class connectable, which includes
local_table	the :class .table or other selectable
char	the sql char type
passive	indicates loading behavior for the attribute
session	a :class .session with which the :class .query
name	specified name used for the savepoint
expire_on_commit	defaults to true. when true, all
hstore	construct an hstore value within a sql expression using the postgresql hstore() function
length	optional number of bits
sadeprecation warning	issued once per usage of a deprecated api
flush error	a invalid condition was detected during flush()
binary	optional use the default binary collation for the
no loader	provide loading behavior for a :class relationshipproperty
binary	deprecated renamed to largebinary
bind	an optional :class .engine or :class .connection to
createfunc	a creation function that will generate
extract	represent a sql extract clause extract field from expr
value	the value to be bound. can be any python object supported by
dispatcher	descriptor used by target classes to deliver the _dispatch class at the class level
argument error	raised when an invalid or conflicting function argument is supplied
ormadapter	columnadapter subclass which excludes adaptation of entities from non-matching mappers
data error	wraps a db-api dataerror
meta data	a collection of :class table objects and their associated schema
proxy_bulk_set	optional use with proxy_factory. see
zerofill	optional. if true values will be stored as strings
fbcompiler	firebird specific idiosyncrasies
enum	generic enum type
drop table comment	represent a comment on table is null statement
bit	mysql bit type
charset	same as that of
defer none name	indicate a 'deferred' name that was ultimately the value none
dialect	may be a string tuple or a callable
require_embedded	only return corresponding columns for
close_with_result	passed to :meth .engine.connect,
collection_adpater	the :class .collectionadapter that will
select base	base class for select statements
flat	if true produce an alias of the left and right
aliased	when true the selectable will be wrapped in an
right	the right side of the join this is any
strategized property	a mapperproperty which uses selectable strategies to affect loading behavior
text clause	represent a literal sql text fragment
set	mysql set type
unicode	a variable length unicode string type
flat	will be passed through to if the given selectable
target	the :class .metadata or :class .table
mapping	dictionary of string dialect names to
cols	optional list of column key names or :class .column
dialect	the :class .dialect in use
drop index	represent a drop index statement
with_polymorphic	a tuple in the form (<classes>,
ordered properties	provide a __getattr__/__setattr__ interface with an ordereddict as backing store
null type	an unknown type
precision	optional integer precision value
datetime	mysql datetime type
dialect_name	defaults to *, if specified as the name
polymorphic_on	a column to be used as the "discriminator"
longblob	mysql longblob type for binary data up to 2^32 bytes
plain engine strategy	strategy for configuring a regular engine
add constraint	represent an alter table add constraint statement
sqlcompiler	default implementation of :class compiled
mapper	the :class .mapper which is the target
thread local registry	a :class scopedregistry that uses a threading local()
type clause	handle a type keyword in a sql statement
session	manages persistence operations for orm-mapped objects
a_subset	an optional expression that is a sub-component
smallint	the sql smallint type
name	label name
int4range	represent the postgresql int4range type
optional	boolean value when true, indicates that this
shard_chooser	a callable which passed a mapper a mapped
returning param	a bindparam value representing a returning parameter
column entity	column/expression based entity
isolation_level	available on :class .connection
longtext	mysql longtext type for text up to 2^32 characters
kwargs	keyword arguments passed to the __init__ method
memoized slots	apply memoized items to an object using a __getattr__ scheme
result	:class .resultproxy generated by the execution
attribute impl	internal implementation for instrumented attributes
alias	is the string name of an alias or a
varchar	mysql varchar type for variable-length character data
serialize manager	provide serialization of a :class classmanager
json	represent the postgresql json type
fields	string fields specifier. allows storage of fields
argument_name	name of the parameter
order_by	optional may be the string "foreign_key" to sort
no such module error	raised when a dynamically-loaded module usually a database dialect of a particular name cannot be located
enum	mysql enum type
oid	provide the postgresql oid type
object	the statement to be executed. may be
function	describe a named sql function
whens	the criteria to be compared against
visitable	base class for visitable objects applies the visitabletype metaclass
table_name	string name of the table. for special quoting
connection	a :class .connection
insert	represent an insert construct
varchar	firebird varchar type
array	represent a sql array type
session transaction	a :class session-level transaction
values	the range of valid values for this set
float	mysql float type
returning result proxy	result proxy which stuffs the _returning clause + outparams into the fetch
name	if a check constraint is generated specify
state	any value which will be passed to the callable\_
params	a dict of string/object pairs whose values will
joined loader	provide loading behavior for a :class relationshipproperty
create_type	defaults to true
onclause	a sql expression representing the on clause of the
populate dict	a dict which populates missing values via a creation function
false	represent the false keyword or equivalent in a sql statement
value	the value being set. if this listener
table_map	mapping of polymorphic identities to
query	orm-level sql construction object
statement error	an error occurred during execution of a sql statement
tinyblob	mysql tinyblob type for binary data up to 2^8 bytes
statement	string sql statement as to be passed to the dbapi
clause element	base class for elements of a programmatically constructed sql expression
value	the value being appended. if this listener
date	represent a python date object in sqlite using a string
name_for_scalar_relationship	callable function which will be
onclause	optional criterion for the on clause is
session_factory	a factory to create new :class .session
unmapped class error	an mapping operation was requested for an unknown class
fbddlcompiler	firebird syntactic idiosyncrasies
instance	mapped instance to be tested for pending changes
schema_translate_map	dictionary of schema names to be
over	represent an over clause
national	optional. if true use the server's configured
instance	the orm-mapped instance being operated upon
column loader	provide loading behavior for a :class columnproperty
char	firebird char type
entities	a sequence of entities and/or sql expressions
kwargs	additional keyword arguments to be consumed by the
inherit_condition	for joined table inheritance a sql
declared attr	mark a class-level method as representing the definition of a mapped property or special declarative member name
name	optional alias name
execution_options	a dictionary of execution options that will
on	see the description for 'on' in :class .ddl
key	attribute to be deferred
mediumtext	mysql mediumtext type for text up to 2^24 characters
dbapiproxy connection	proxy a dbapi connection
instance	the instance to be refreshed
target	the mapped instance. if
load deferred columns	serializable loader object used by deferredcolumnloader
instrumented attribute	class bound instrumented attribute which adds basic :term descriptor methods
index	a table-level index
comment	optional string that will render an sql comment on
timezone	not used by the mysql dialect
rank	implement the rank hypothetical-set aggregate function
percentile cont	implement the percentile_cont ordered-set aggregate function
target_collection	name of the attribute we'll proxy to
timeout error	raised when a connection pool times out on getting a connection
ordering list	a custom list that manages position information for its children
returning result proxy	resultproxy backed by the returning resultset results
read	boolean will render lock in share mode on mysql
compile error	raised when an error occurs during sql compilation
mutable composite	mixin that defines transparent propagation of change events on a sqlalchemy "composite" object to its
result meta data	handle cursor description applying additional info from an execution
precision	the numeric precision for use in ddl create
class_registry	optional dictionary that will serve as the
referred_schema_fn	optional callable which can be supplied
connection proxy	allows interception of statement execution by connections
string	the base for all string and character types
real	the sql real type
engine	connects a :class ~sqlalchemy pool pool and
sessionmaker	a configurable :class session factory
type engine	the ultimate base class for all sql datatypes
autocommit	available on connection statement
invalidate pool error	raised when the connection pool should invalidate all stale connections
sybase unitype mixin	these types appear to return a buffer object
info	optional data dictionary which will be populated into the
line	any column-bearing line from show create table
element	a :class .table that's the subject
args	positional arguments that were passed to the __init__
mapper	define the correlation of class attributes to database table columns
with_labels	if true :meth .with_labels will be called
clauseelement	sql expression construct :class .compiled
instrumentation manager	user-defined class instrumentation extension
column default	a plain default value on a column
name	name of the bundle
generate_relationship	callable function which will be used to
day_precision	for native interval types which
schema visitor	define the visiting for schemaitem objects
repr params	provide a string view of bound parameters
opts	dictionary of options that were passed to the
interface error	wraps a db-api interfaceerror
deferrable	optional bool. if set emit deferrable or not
non_primary	specify that this :class .mapper is in addition
extension	a :class .mapperextension instance or
xid	two-phase xid identifier
unique appender	appends items to a collection ensuring uniqueness
autoflush	the autoflush setting to use with newly created
nvarchar	the sql nvarchar type
binary	defaults to false short-hand pick the binary
concatenable	a mixin that marks a type as supporting 'concatenation', typically strings
thread local meta data	a metadata variant that presents a different bind in every thread
instrumented dict	an instrumented version of the built-in dict
match type	refers to the return type of the match operator
extend_existing	passed along to each :class .table as
decimal	mysql decimal type
encoding	defaults to utf-8. this is the string
mapper events	define events specific to mappings
pool_logging_name	string identifier which will be used within
attribute events	define events for object attributes
unique constraint	a table-level unique constraint
prop comparator	defines sql operators for :class mapperproperty objects
confirm_deleted_rows	defaults to true when a delete occurs
comparable property	instruments a python property for use in query expressions
hybridmethod	decorate a function as cls- or instance- level
initiator	an instance of :class .attributes.event
integer	a type for int integers
fsp	fractional seconds precision value
link_to_name	if true the string name given in column is
full	exception raised by queue put(block=0)/put_nowait()
object not executable error	raised when an object is passed to execute() that can't be
inherits	a mapped class or the corresponding :class .mapper
history	a 3-tuple of added unchanged and deleted values representing the changes which have occurred on an instrumented
of	sql expression or list of sql expression elements
lrucache	dictionary with 'squishy' removal of least recently used items
programming error	wraps a db-api programmingerror
column_keys	a list of column names to be compiled into an
dependencies	apply imported dependencies as arguments to a function
schema	schema name. if schema is left at none, the
keyed tuple	tuple subclass that adds labeled names
nchar	the sql nchar type
typecolname	string name of a "discriminator" column which will be
naming_convention	a dictionary referring to values which
string type	base for firebird string types
fbdialect	firebird dialect
column mapping	error reporting helper for mapper _columntoproperty
filter_fn	optional callable which will be passed a
autoflush	when true, all query operations will issue a
value	data to operate upon of any type expected by
pool_pre_ping	boolean if true will enable the connection pool
deleted	boolean. if true indicates this object moved
metadata	associate this type directly with a metadata
element	a :class .functionelement, :class .withingroup,
unmapped error	base for exceptions that involve expected mappings not present
dialect_name	base name of the dialect which uses
decoding row proxy	return unicode-decoded values based on type inspection
cycle	allows the sequence to wrap around when the maxvalue
create table	represent a create table statement
map_column	if true, the :func .synonym construct will
server_onupdate	a :class .fetchedvalue instance
grouping	represent a grouping within a column expression
target_collection	name of the collection we'll proxy to
default generator	base class for column *default* values
varchar	the sql varchar type
bulk delete fetch	bulkud which handles deletes using the "fetch" method of session resolution
scoped registry	a registry that can store one or multiple instances of a single class on the basis of a "scope" function
polymorphic_identity	specifies the value which
quote	force quoting of this column's name on or off
refcolumns	a sequence of foreign column names or column
column property	describes an object attribute that corresponds to a table column
referred_cls	the "referred" class to which the relationship or
percent schema names test	tests using percent signs spaces in table and column names
kwargs	keyword arguments that were passed to the __init__
onupdate	optional string. if set emit on update <value> when
asdecimal	the same flag as that of :class .numeric, but
skip_locked	boolean will render for update skip locked
cume dist	implement the cume_dist hypothetical-set aggregate function
type decorator	allows the creation of types which add additional functionality to an existing type
values	a dictionary with attributes names or alternatively
include_defaults	if true non-server default values and
boolean	a bool datatype
length	maximum data length in characters
drop view	semi-public 'drop view' construct
dialect	:class .dialect to compile against
numeric	mysql numeric type
info	optional dictionary of arbitrary data to be associated
getset_factory	optional. proxied attribute access is
bind	a connectable :class .engine,
type_	a :class .typeengine class or instance indicating
use_proxies	when true consider two columns that
name	string name to be assigned as the alias
event key	represent :func listen arguments
full	if false only functions added to this
table	the table to delete rows from
user defined type	base for user defined types
table	:class .tableclause which is the subject of the
generative select	base class for select statements where additional elements can be added
collection	the new collection. this will always be generated
previous_transaction	the :class .sessiontransaction
adapt_on_names	if true more liberal "matching" will be used when
type coerce	represent a python-side type-coercion wrapper
dialect	a :class .dialect that is involved in the comparison
mutable	mixin that defines transparent propagation of change events to a parent object
select	a :func .select construct :class .fromclause
bulk delete	bulkud which handles deletes
dialect	dialect instance in use
session events	define events specific to :class session lifecycle
existing_adapter	a :class .collectionadapter of
profile stats file	"store per-platform/fn profiling results in a file
oracle compiler	oracle compiler modifies the lexical structure of select statements to work under non-ansi configured oracle databases if
dimensions	if non-none the array will assume a fixed
within group	represent a within group order by clause
selectable	mark a class as being selectable
full	if true render a full outer join instead of left outer
legacy_is_orphan	boolean defaults to false
tuple	represent a sql tuple
events	define event listening functions for a particular target type
module marker	"refers to a module name within _decl_class_registry
deferred reflection	a helper class for construction of mappings based on a deferred reflection step
bind	an optional
transaction	the :class .sessiontransaction
compile_kwargs	optional dictionary of additional parameters
association set	generic converting set-to-set proxy
inline	used for insert statements for a dialect which does
create schema	represent a create schema statement
adict	dict keys available as attributes shadows
decimal_return_scale	default scale to use when converting
tinytext	mysql tinytext type for text up to 2^8 characters
compiled	represent a compiled sql or ddl expression
label reference	wrap a column expression as it appears in a 'reference' context
multiple class marker	refers to multiple classes of the same name within _decl_class_registry
table sample	represent a tablesample clause
default clause	a ddl-specified default column value
native_enum	use the database's native enum type when
col in annotations	seralizable equivalent to lambda c "name" in c
index property	a property generator the generated property describes an object
schema	optional schema name for the sequence if located
flat	boolean will be passed through to the
default	a scalar python callable or
class manager	tracks state information at the class level
nullable	when set to false, will cause the "not null"
mapper option	describe a modification to a query
whereclause	the where criterion that will be sent to
dialect kwargs	establish the ability for a class to have dialect-specific arguments with defaults and constructor validation
char	mysql char type for fixed-length character data
context	an :class .exceptioncontext object. see this
dialect_name	name of a dialect. the dialect must be
schema item	base class for items that define a database schema
dialect	define the behavior of a specific database and db-api combination
safe reraise	reraise an exception after invoking some handler code
assertion pool	a :class pool that allows at most one checked out connection at
collection history	overrides attributehistory to receive append/remove events directly
indexable	a mixin that marks a type as supporting indexing operations such as array or json structures
mapper extension	base implementation for :class mapper event hooks
int8range	represent the postgresql int8range type
immutable properties	provide immutable dict/object attribute to an underlying dictionary
daterange	represent the postgresql daterange type
cte	represent a common table expression
seed	any real-valued sql expression. when specified the
time	a type for datetime time() objects
batch	defaults to true, indicating that save operations
binary	define base behavior for binary types
array agg	support for the array_agg function
selectable	optional :class .table that specifies
baked query	a builder object for :class query query objects
return_fn	the function that is used by default to create the
uuid	postgresql uuid type
name	optional the in-database name of the key
bulk delete evaluate	bulkud which handles deletes using the "evaluate" method of session resolution
type_	a :class .typeengine that will be selected
ddlelement	base class for ddl expression constructs
mediumint	mysql mediuminteger type
only_synonyms	when true limit the removal of columns
isolation_level	this string parameter is interpreted by various
attr	attribute on the associated instance or instances we'll
statement	string sql statement as passed to the dbapi
strict	this flag has no effect
referred_cls	the class to be mapped on the referring side
nested transaction	represent a 'nested', or savepoint transaction
result	invokes a :class bakedquery against a :class session
create drop base	base class for ddl constructs that represent create and drop or equivalents
text	a variably sized string type
scale	the number of digits after the decimal point
name	savepoint name
conn dialect	partial implementation of :class dialect
tables	a sequence of :class .table objects
full	if true render a full outer join instead of
key	string attribute name
singleton thread pool	a pool that maintains one connection per thread
sqlalchemy error	generic error class
association list	generic converting list-to-list proxy
unicode text	an unbounded-length unicode string type
defer name	mark a name as 'deferred' for the purposes of automated name generation
astext_type	the type to use for the
conn	the newly copied :class .connection object
true	represent the true keyword or equivalent in a sql statement
default engine strategy	base class for built-in strategies
table	a :class .table object representing the database
cloning visitor	base class for visitor objects which can traverse using the cloned_traverse() function
event meta	intercept new event subclasses and create associated _dispatch classes
full	if true render a full outer join instead of join
echo	if true connections being pulled and retrieved
nominvalue	no minimum value of the sequence. this
quoting	defaults to 'auto': automatically determine enum value
association dict	generic converting dict-to-dict proxy
bulk ud	handle bulk update and deletes via a :class query
obj	an object whose class is instrumented by the
tinyint	mysql tinyint type
boolean	the sql boolean type
enums	the range of valid values for this enum. values will be
comparator	a 2-arg callable predicate used
right	the right side of the join
primary_key	if true, marks this column as a primary key
twophase	when true, all transactions will be started as
convert_unicode	when set to true, the
conn_type	the type object reflected from the backend
bigint	the sql bigint type
comparator_factory	a class which extends
context	:class .executioncontext in use. may be none
row	a :class .rowproxy instance. the columns which are
text as from	wrap a :class textclause construct within a :class selectbase
statement	:class .clauseelement to be compiled
kwargs	each keyword argument to engine_from_config() itself
string type	base for mysql string types
nchar	mysql nchar type
text	the text of the expression can be any sql expression
numeric type	base for mysql numeric types
json	represent a sql json type
name_for_collection_relationship	callable function which will
for_update	indicates this :class .sequence, when associated
unicode	same as that of
tablename	string name of the :class .table
reflect	if true the :meth .metadata.reflect method is called
schema translate map	provide translation of schema names based on a mapping
delete_context	a "delete context" object which contains
ident	primary key may be a scalar or tuple argument
abstract relationship loader	loaderstratgies which deal with related objects
compiled_cache	available on connection
expression	a sql expression such as a :class .columnelement
reflected state	stores raw information about a show create table statement
timestamp	mysql timestamp type
hybrid property	a decorator which allows definition of a python descriptor with both instance-level and class-level behavior
appender query	a dynamic query that supports basic collection storage operations
operational error	wraps a db-api operationalerror
shards	a dictionary of string shard names
module	a db-api 2.0 database module
scalar object attribute impl	represents a scalar-holding instrumentedattribute where the target object is also instrumented
name	the name of this column as represented in the database
close_with_result	when true the first :class .resultproxy
schema	schema name of this type. for types that exist on the
pickle type	holds python objects which are serialized using pickle
max_overflow	the maximum overflow size of the
compile label	lightweight label object which acts as an expression label
obj	a :class .columnelement
identifier error	raised when a schema name is beyond the max character limit
hash limit string	a string subclass that can only be hashed on a maximum amount of unique values
connection	provides high-level functionality for a wrapped db-api connection
asdecimal	default true. return whether or not
datetime	the sql datetime type
dialect	a :class .dialect instance
scopefunc	optional function which defines
conn	the newly copied :class .engine object
bundle	a grouping of sql expressions that are returned by a :class query
context	:class .executioncontext object in use. may
unbound execution error	sql was attempted without a database connection to execute it on
connection_proxy	the :class ._connectionfairy object which
time	the sql time type
multiple results found	a single database result was required but more than one were found
type compiler	produces ddl specification for typeengine objects
passive_updates	indicates update behavior of foreign key
function generator	generate :class function objects based on getattr calls
drop schema	represent a drop schema statement
invalid request error	sqlalchemy was asked to do something it can't do
load lazy attribute	serializable loader object used by lazyloader
attribute state	provide an inspection interface corresponding to a particular attribute on a particular mapped object
pre_ping	if true the pool will emit a "ping" (typically
binary	the sql binary type
protocol	defaults to pickle.highest_protocol
creator	a callable function that returns a db-api
bind	a :class ~sqlalchemy.engine.connectable,
is_literal	if true the :class .columnclause is assumed to
bind	an engine or connection from which a
listeners	deprecated. a list of
lazy loader	provide loading behavior for a :class relationshipproperty
exception context	encapsulate information about an error condition in progress
return type from args	define a function whose return type is the same as its arguments
poolclass	the class used by the pool module to provide
schema	when present in conjunction with the
quote_schema	set the quoting preferences for the schema
primary_key	a list of :class .column objects which define
attrs	sequence of attribute
detached instance error	an attempt to access unloaded attributes on a mapped instance that is detached
custom op	represent a 'custom' operator
recursive	if true, will render with recursive
mutable dict	a dictionary type that implements :class mutable
classes	a single class or mapper or list of
range operators	this mixin provides functionality for the range operators listed in table 9-44 of the postgres documentation__ for range
maxvalue	the maximum value of the sequence. this
detect key switch	for many-to-one relationships with no one-to-many backref searches for parents through the unit of work when a primary
column element	represent a column-oriented sql expression suitable for usage in the "columns" clause where clause etc
creator	a callable which returns a dbapi connection
name	optional string name to use for the alias if not specified
connection	the :class .connection where the
passive_deletes	indicates delete behavior of foreign key
identifier preparer	handle quoting and case-folding of identifiers based on options
extension	an optional
properties	a dictionary mapping the string names of object
validate_strings	when true string values that are being
collection attribute impl	a collection-holding attribute that instruments changes in membership
listener collection	instance-level attributes on instances of :class _dispatch
new_adapter	an empty :class .collectionadapter
exclude constraint	a table-level exclude constraint
order_by	a column element or string or a list
parameters	dictionary tuple or list of parameters being
operators	base of comparison and logical operators
xid	the two phase transaction id. if not supplied a
connection	optional use a specified connection. default is
dbapi_connection	a dbapi connection typically
key	an optional string identifier which will identify this
key	string name of the orm-mapped attribute being set
instance state	tracks state information at the instance level
msexecution context mxodbc	the pyodbc execution context is useful for enabling select scope_identity in cases where output clause
bind	optional a single connectable to use for all
descriptor property	:class mapperproperty which proxies access to a
dbapi_connection	a dbapi connection
equivalents	a dictionary of columns as keys mapped to sets
extended instrumentation registry	extends :class instrumentationfactory with additional
text	the text of the element
bulk update evaluate	bulkud which handles updates using the "evaluate" method of session resolution
label	represents a column label as
upper_bound	a column or python scalar expression serving as the
target	the target object
line	the first line of show create table
unmapped column error	mapping operation was requested on an unknown column
generic function	define a 'generic' function
column adapter	extends clauseadapter with extra utility functions
dont wrap mixin	a mixin class which when applied to a user-defined exception class will not be wrapped inside of :exc
minvalue	the minimum value of the sequence. this
loader strategy	describe the loading behavior of a strategizedproperty object
set column comment	represent a comment on column is statement
identity set	a set that considers only object id() for uniqueness
names	a sequence of string column names or :class .column
quote	set explicit quoting preferences for the type's name
allow_partial_pks	defaults to true. indicates that a
use_threadlocal	if set to true repeated calls to
scale	the numeric scale for use in ddl create table
local_cls	the class to be mapped on the local side
alias	optional selectable unit to map the element to. this should
integer	mysql integer type
descriptor	a python :term descriptor that will be used
replayable session	a simple record/playback tool
ident	a scalar or tuple value representing
state_dict	the dictionary returned by
ambiguous foreign keys error	raised when more than one foreign key matching can be located between two selectables during a join
collation	optional a column-level collation for
aliasname	name of the :func ~sqlalchemy.sql.expression.alias()
interval	a type for datetime timedelta() objects
nowait	boolean will render for update nowait on oracle
replacing cloning visitor	base class for visitor objects which can traverse using the replacement_traverse() function
pending collection	a writable placeholder for an unloaded collection
length	optional if provided the server may optimize storage
key	attribute to be undeferred
engine	an :class .engine or :class .connection with which
text	the sql text type
no foreign keys error	raised when no foreign keys can be located between two selectables during a join
create sequence	represent a create sequence statement
connectable	interface for an object which supports execution of sql constructs
class instrumentation adapter	adapts a user-defined instrumentationmanager to a classmanager
multiparams	multiple parameter sets a list of dictionaries
always_refresh	if true all query operations for this mapped
msnumeric mxodbc	include pyodbc's numeric processor
primary key constraint	a table-level primary key constraint
bulk evaluate	bulkud which does the 'evaluate' method of session state resolution
operator	a string which will be output as the infix operator
ms numeric pyodbc	turns decimals with adjusted() < 0 or > 7 into strings
value	an optional sql expression which will be used as a
system	when true, indicates this is a "system" column
include_backrefs	defaults to true; if false, the
numeric	a type for fixed precision numbers such as numeric or decimal
concrete inherited property	a 'do nothing' :class mapperproperty that disables
text_type	the type that should be used for indexed values
target	the mapped instance being deleted. if
update	represent an update construct
is_prepared	boolean indicates if
update base	form the base for insert, update, and delete statements
match	optional string. if set emit match <value> when issuing
result proxy	wraps a db-api cursor object to provide easier access to row columns
escape	optional escape character renders the escape
lockmode	passed to the :class ~sqlalchemy.orm.query.query
timezone	boolean. indicates that the datetime type should
kwargs	the keyword arguments passed to :func.create_engine
oldvalue	the previous value being replaced. this
small integer	a type for smaller int integers
skip_fn	optional callable which will be passed a
update_args	optional dictionary if present will be passed
plain column getter	plain column getter stores collection of column objects directly
slice	represent sql for a python array-slice object
ordered set agg	define a function where the return type is based on the sort expression type as defined by the expression passed to the
aggregate order by	represent a postgresql aggregate order by expression
exception	the exception object corresponding to the reason
query_cls	class which should be used to create new query
local_cls	the "local" class to which this relationship or backref
partition_by	a column element or string or a list
delete	represent a delete construct
str sqlcompiler	"a compiler subclass with a few non-standard sql features allowed
collection	decorators for entity collection classes
execution_options	dictionary execution options which will
tsrange	represent the postgresql tsrange type
transaction	the target :class .sessiontransaction
create_constraint	defaults to true. if the boolean
datetime	represent a python datetime object in sqlite using a string
collection adapter	bridges between the orm and arbitrary python collections
cast	represent a cast expression
url	the :class .url object. the plugin should inspect
include_removes	if true "remove" events will be
drop constraint	represent an alter table drop constraint statement
root registry	root registry defers to mappers so that paths are maintained per-root-mapper
interval	postgresql interval type
connection record	internal object which maintains an individual dbapi connection referenced by a :class
ddl	a literal ddl statement
properties	provide a __getattr__/__setattr__ interface over a dict
dbproxy	layers connection pooling behavior on top of a standard db-api module
inspection attr	a base class applied to all orm objects that can be returned by the :func
stale data error	an operation encountered database state that is unaccounted for
function filter	represent a function filter clause
session	target :class .session
weak_identity_map	defaults to true - when set to
bulk update	bulkud which handles updates
scalar attribute impl	represents a scalar value-holding instrumentedattribute
numrange	represent the postgresql numrange type
mode	implement the mode ordered-set aggregate function
second_precision	the second precision value. this is the
abstract concrete base	a helper class for 'concrete' declarative mappings
instance events	define events specific to object lifecycle
function element	base for sql function-oriented constructs
inspection attr info	adds the info attribute to :class inspectionattr
insert	postgresql-specific implementation of insert
dialect	a dialect instance from which a compiled
generative	allow a clauseelement to generate itself via the @_generative decorator
session extension	base implementation for :class session event hooks
session	the target :class .session
collection aggregate	forms the basis for right-hand collection operator modifiers any and all
element	element to be aliased. is normally a mapped class
smallint	mysql smallinteger type
array	postgresql array type
quote	boolean value when true or false, explicitly
mapped collection	a basic dictionary-based collection class
nvarchar	mysql nvarchar type
exists	represent an exists clause
column collection constraint	a constraint that proxies a columncollection
objects	optional restricts the flush operation to operate
item_type	the data type of items of this array. note that
integer	the sql int or integer type
create index	represent a create index statement
my sqltable definition parser	parses the results of a show create table statement
next value	represent the 'next value', given a :class sequence
array	a postgresql array literal
immutable	mark a clauseelement as 'immutable' when expressions are cloned
native	when true use the actual
has cte	mixin that declares a class to include cte support
instrumentation events hold	temporary marker object used to transfer from _accept_with() to _listen() on the instrumentationevents class
fetched value	a marker for a transparent database-side default
mutable	if false writes and deletes to the attribute will
mode	a string representing the desired locking mode
relationship property	describes an object property that holds a single item or list of items that correspond to a related database table
no referenced table error	raised by foreignkey when the referred table cannot be located
_enable_transaction_accounting	defaults to true. a
configuration	a dictionary (typically produced from a config file
query entity	represent an entity column returned within a query result
connection	the :class ~.engine.connection object
limit	an integer limit parameter or a sql expression
schema event target	base class for elements that are the targets of :class ddlevents
exception test	test basic exception wrapping
drop sequence	represent a drop sequence statement
precedence	precedence to apply to the operator when
concrete	if true indicates this mapper should use concrete
sql_only	if true raise only if the lazy load would emit sql
text	mysql text type for text up to 2^16 characters
unbound load	represent a loader option that isn't tied to a root entity
unique	when true, indicates that this column contains a
metadata	target :class .metadata object into which the
connection	the :class .connection being used to
ondelete	optional string. if set emit on delete <value> when
anonymous label	a unicode subclass used to identify anonymously generated names
table	a :class ~sqlalchemy.schema.table instance
portable instancemethod	turn an instancemethod into a parent name pair to produce a serializable callable
flush_context	internal :class .uowtransaction object
join	represent a join construct between two :class fromclause
include	specify which types of views to return. passed
innerjoin	if true an inner join will be used. this should
unary expression	define a 'unary' expression
syb numeric pyodbc	turns decimals with adjusted() < -6 into floats
events	a list of 2-tuples each of the form
date	the sql date type
attrname	the attribute name to which this relationship is being
date	a type for datetime date() objects
classproperty	a decorator that behaves like @property except that operates on classes rather than instances
instances	usually none, this is the collection of
queryable attribute	base class for :term descriptor objects that intercept attribute events on behalf of a :class
render_nulls	when true a value of none will result
column_prefix	a string which will be prepended
raiseerr	when true, if the given subject
float	type representing floating point types such as float or real
use_alter	if true do not emit the ddl for this constraint as
type	:class .types.typeengine object which can associate
column collection	an ordered dictionary that stores a list of columnelement instances
length	optional a length for the column for use in
increment	the increment value of the sequence. this
null	represent the null keyword in a sql statement
bind	a :class .engine or other :class .connectable with
lower_bound	a column or python scalar expression serving as the
datatype	default datatype to use when the field is empty
autoescape	optional escape character renders the escape
rows	optional rows clause for the window. this is a tuple
listeners	a list of one or more
name	the name of the existing mapped property. this
database error	wraps a db-api databaseerror
value	the incoming value
hstore	represent the postgresql hstore type
attribute_names	optional. an iterable collection of
cast_nulls	if true non-existent columns which are represented
start	the starting index of the sequence. this value is
blob	the sql blob type
prefix	prefix to match and then strip from keys
ascii	defaults to false short-hand for the latin1
name	optional string. an in-database name for the key if
include_columns	a list of string column names to include
innerjoin	if true, indicates that the joined eager load should
convert_unicode	enable unicode-aware bind parameter and
inspector	performs database schema inspection
mock engine strategy	strategy for configuring an engine-like object with mocked execution
drop column comment	represent a comment on column is null statement
exception context impl	implement the :class exceptioncontext interface
whereclause	a :class .clauseelement describing the where
logging_name	string identifier which will be used within
exclude_properties	a list or set of string column names to
alias	represents an table or selectable alias as
uninstrumented column loader	represent a non-instrumented mapperproperty
info	optional dictionary of information that will be available
mapped attribute	mixin for attributes which should be replaced by mapper-assigned attributes
variant	a wrapping type that selects among a variety of implementations based on dialect in use
aliased class	represents an "aliased" form of a mapped class for usage with query
timestamp	the sql timestamp type
attribute extension	base implementation for :class attributeimpl event hooks events
transaction	represent a database transaction in progress
binary	same as that of
class	mapped class must be a positional argument
tsvector	the :class postgresql tsvector type implements the postgresql
synchronize_session	chooses the strategy for the removal of
empty listener	serves as a proxy interface to the events served by a _clsleveldispatch when there are no
float	the sql float type
pool	abstract base class for connection pools
circular dependency error	raised by topological sorts when a circular dependency is detected
value	a sequence e.g. a list of the values being set. the
day_precision	the day precision value. this is the number of
row proxy	proxy values from a single cursor row
context	the :class .querycontext corresponding to the
column clause	represents a column expression from any textual string
primary_key	a list of values indicating the identifier
event	a token propagated throughout the course of a chain of attribute events
varbinary mxodbc	mxodbc support for varbinary column types
extra_dependencies	a sequence of 2-tuples of tables which will
name	the name of this type. this is required for postgresql
mapper entity	mapper/class/aliasedclass entity
initially	optional string. if set emit initially <value> when
checkfirst	if true, a query against
xid	xid
unsigned	a boolean optional
create_constraint	defaults to true. when creating a non-native
stream_results	available on connection statement
mappings	a list of dictionaries each one containing the state
tlengine	an engine that includes support for thread-local managed transactions
metadata	optional :class .metadata object which will be
bind parameter	represent a "bound expression"
creator	optional
hybrid method	a decorator which allows definition of a python object method with both instance-level and class-level behavior
composite property	defines a "composite" mapped attribute representing a collection of columns as one attribute
autoload_replace	passed along to each :class .table as
index	when true, indicates that the column is indexed
constraint	the :class .foreignkeyconstraint that is being
symmetric	if true will render " between symmetric ". note
timeout	the number of seconds to wait before giving up
classname_for_table	callable function which will be used to
object deleted error	a refresh operation failed to retrieve the database row corresponding to an object's known primary key identity
table clause	represents a minimal "table" construct
clause list	describe a list of clauses separated by an operator
binary expression	represent an expression that is left <operator> right
dict_	the attribute dictionary of this mapped object
string type	base for mssql string types
timezone	boolean. indicates that the timestamp type should
session class methods	class-level methods for :class session, :class sessionmaker
sequence	represents a named database sequence
isouter	if true render a left outer join instead of join
deferred column loader	provide loading behavior for a deferred :class columnproperty
date time	a type for datetime datetime() objects
quoted name	represent a sql identifier combined with quoting preferences
json	mysql json type
eager_defaults	if true the orm will immediately fetch the
values	an iterable of collection member instances
args	positional arguments passed to the __init__ method
table	the :class .table object itself
comparator_factory	a subclass of :class .propcomparator
soft	if true the connection isn't closed instead this
collation	optional a column-level collation for this string
recover	if the recover flag was passed
server_default	a :class .fetchedvalue instance str unicode
oracle execution context cx oracle with unicode	support with_unicode in python 2 xx
resource closed error	an operation was requested from a connection cursor or other object that's in a closed state
thread local engine strategy	strategy for configuring an engine with threadlocal behavior
case	represent a case expression
order_by	a single :class .column or list of :class .column
clob	the clob type
lateral	represent a lateral subquery
execution context	a messenger object for a dialect that corresponds to a single execution
no reference error	raised by foreignkey to indicate a reference cannot be resolved
name	name given to the alias
coltype	a sqlalchemy data type
column_keys	used for insert and update statements a list of
constraint	a table-level sql constraint
fbidentifier preparer	install firebird specific reserved words
two phase transaction	represent a two-phase transaction
nomaxvalue	no maximum value of the sequence. this
date	provide the oracle date type
mapper property	represent a particular class attribute mapped by :class mapper
pool events	available events for :class pool
drop table	represent a drop table statement
row	:class .rowproxy row returned by a :class .resultproxy
concrete base	a helper class for 'concrete' declarative mappings
unicode_error	optional a method to use to handle unicode
events hold	hold onto listeners against unmapped uninstrumented classes
fully buffered result proxy	a result proxy that buffers rows fully upon creation
from clause	represent an element that can be used within the from clause of a select statement
ensure kwarg type	apply translation of functions to accept **kw arguments if they don't already
attrs	sequence of attribute names which
automap base	base class for an "automap" schema
count	the ansi count aggregate function with no arguments
key_share	boolean will render for no key update,
default dialect	default implementation of dialect
selectable	a table or select() statement that will
symbol	a constant symbol
schema	optional string name indicating the target schema
collation	optional request a particular collation. must be
enum	postgresql enum type
schema_translate_map	available on connection engine
schema	schema name. if none the default schema
name	name of the table
dialect arg dict	a dictionary view of dialect-level arguments for a specific dialect
schema	string schema name if omitted uses the default schema
mode	defines the lockmode to use
mutable base	common base class to :class mutable
retrieve_as_bitwise	if true the data for the set type will be
passive default	a ddl-specified default column value
decimal	the sql decimal type
state_dict	the dictionary sent to
percentile disc	implement the percentile_disc ordered-set aggregate function
declarative_base	an existing class produced by
scopefunc	a function that returns a hashable
foreign key constraint	a table-level foreign key constraint
bulk fetch	bulkud which does the 'fetch' method of session state resolution
dialect arg view	a dictionary view of dialect-level arguments in the form <dialectname>_<argument_name>
coltype	dbapi coltype argument received in cursor.description
column	a :class .columnelement e.g. scalar sql expression
bigint	mysql biginteger type
values	collection of values to be inserted see
table	represent a table in a database
connection fairy	proxies a dbapi connection and provides return-on-dereference support
engine strategy	an adaptor that processes input arguments and produces an engine
binds	an optional dictionary which contains more granular
include_foreign_key_constraints	optional sequence of
direction	indicate the "direction" of the relationship this will
compile_kwargs	additional kwargs that will be
unicode	defaults to false short-hand for the ucs2
internal error	wraps a db-api internalerror
instrumented set	an instrumented version of the built-in set
not supported error	wraps a db-api notsupportederror
pickler	defaults to cpickle.pickle or pickle.pickle if
ormjoin	extend join to support orm constructs as input
dialect	:class .dialect to be used
empty_in_strategy	the sql compilation strategy to use when
default	default value of the parameter
instance	object instance must be given as a keyword arg
integrity error	wraps a db-api integrityerror
update_changed_only	when true update statements are rendered
instance logger	a logger adapter wrapper for :class identified subclasses
numeric	the sql numeric type
charset	optional a column-level character set for this string
element	a :class .functionelement construct typically
connection_record	the :class ._connectionrecord managing the
inherit_foreign_keys	when inherit_condition is used and
column	a single target column for the key relationship. a
repr row	provide a string view of a row
include_properties	an inclusive list or set of string column
proxy_factory	optional. the type of collection to emulate is
buffered row result proxy	a resultproxy with row buffering behavior
no result found	a database result was required but none was found
parent	the parent to which the target is being attached
foreign key	defines a dependency between two columns
return_defaults	when true rows that are missing values which
mutable set	a set type that implements :class mutable
sampling	a float percentage between 0 and 100 or
jsonb	represent the postgresql jsonb type
ddlevents	define event listeners for schema objects that is :class
dialect events	event interface for execution-replacement functions
year	mysql year type for single byte storage of years 1901-2155
group expirable memoized property	a family of @memoized_properties that can be expired in tandem
dense rank	implement the dense_rank hypothetical-set aggregate function
unpickle dispatch	serializable callable that re-generates an instance of :class _dispatch given a particular :class
second_precision	for native interval types
other	expression to be compared with sql wildcard
collation	same as that of
from grouping	represent a grouping of a from clause
instrumentation factory	factory for new classmanager instances
set table comment	represent a comment on table is statement
columns	a sequence of describe or show columns 6-tuples
large binary	a type for large binary byte data
cursor	dbapi cursor object. will have results pending
annotated	clones a clauseelement and applies an 'annotations' dictionary
is_comparison	if true the operator will be considered as a
pool_size	the size of the pool to be maintained
dialect	a :class .dialect that will handle the job
unmapped instance error	an mapping operation was requested for an unknown instance
id_chooser	a callable passed a query and a tuple of identity
empty	exception raised by queue get(block=0)/get_nowait()
bind	see the description for 'bind' in :class .ddl
synchronize_session	chooses the strategy to update the
use_alter	passed to the underlying
percent rank	implement the percent_rank hypothetical-set aggregate function
connect_args	a dictionary of options which will be
conv	mark a string indicating that a name has already been converted by a naming convention
time	represent a python time object in sqlite using a string
time	mysql time type
cls level dispatch	class-level events on :class _dispatch classes
executemany	boolean if true, this is an executemany()
visitable type	metaclass which assigns a _compiler_dispatch method to classes having a __visit_name__ attribute
offset	an integer offset parameter or a sql expression
sapending deprecation warning	issued once per usage of a deprecated api
post load	track loaders and states for "post load" operations
name	the name of the sequence
cursor	dbapi cursor object
onupdate	a scalar python callable or
reduce_columns	if true :meth .select.reduce_columns will
exception	the **unwrapped** exception emitted directly from the
order by label test	test the dialect sends appropriate order by expressions when labels are used
no such table error	table does not exist or is not visible to a connection
inherit_schema	when true, the "schema" from the owning
object dereferenced error	an operation cannot complete due to an object being garbage collected
selectable	any :class .fromclause subclass
column	the target :class .columnelement to be matched
joined dispatcher	represent a connection between two _dispatch objects
value	the value being removed
bulk update fetch	bulkud which handles updates using the "fetch" method of session resolution
rowid	oracle rowid type
query events	represent events within the construction of a :class query object
pool listener	hooks into the lifecycle of connections in a :class pool
range_	optional range clause for the window. this is a
association proxy	a descriptor that presents a read/write view of an object attribute
mediumblob	mysql mediumblob type for binary data up to 2^24 bytes
info	optional will be assigned to
queue pool	a :class pool that imposes a limit on the number of open connections
attr	attribute on the collected instances we'll proxy
varbinary	the sql varbinary type
collection_class	the python collection class that will be used
no referenced column error	raised by foreignkey when the referred column cannot be located
none_as_null	if true persist the value none as a
double	mysql double type
polymorphic_on	specifies the column attribute or
include_collections	indicates if multivalued collections
query_chooser	for a given query returns the list of shard_ids
ignore_nonexistent_tables	deprecated - this
autocommit	the autocommit setting to use with newly created
bind	optional engine or connection to compile this
no_parameters	when true, if the final parameter
buffered column result proxy	a resultproxy with column buffering behavior
values base	supplies support for :meth valuesbase values to
other	expression to be compared
date affinity	mixin date/time specific expression adaptations
truncated label	a unicode subclass used to identify symbolic " "names that may require truncation
memoized property	a read-only @property that is only evaluated once
dbapiproxy cursor	proxy a dbapi cursor
base	base class to be aliased
column operators	defines boolean comparison and other operators for :class
big integer	a type for bigger int integers
clause visitor	base class for visitor objects which can traverse using the traverse() function
select	represents a select statement
