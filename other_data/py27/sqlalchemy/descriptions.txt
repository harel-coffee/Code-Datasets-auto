dist	aggregate function implement cume_dist hypothetical-set
aliased	represents form "aliased" :class provide interface mapped usage query inspection class
results	database required one single result found
scalar	value-holding represents target object instrumentedattribute also scalar scalar-holding instrumented
disc	aggregate function implement percentile_disc ordered-set
visitable	assigns objects __visit_name__ visitabletype attribute _compiler_dispatch class classes visitable base applies metaclass method
query	operations represent object returned objects column dynamic builder within storage collection :class construction orm-level result sql basic query entity supports events
integrity	wraps db-api integrityerror
row	return string provide inspection view cursor single values proxy behavior unicode-decoded based buffering type resultproxy row
visitor	function traverse() traverse objects visiting visitor base schemaitem using replacement_traverse() class cloned_traverse() define
immutable	cloned 'immutable' dictionary provide attribute dict/object underlying clauseelement expressions mark immutable
deprecation	usage issued api per deprecated
string	string character maximum subclass hashed amount base values mysql unique mssql types firebird
returning	_returning bindparam returning clause + resultset results value parameter result stuffs backed outparams representing fetch resultproxy proxy
fbidentifier	specific words reserved firebird install
anonymous	anonymously used subclass generated identify names unicode
longtext	longtext text mysql characters 2^32 type
list	implements information position clauses list-to-list generic list describe built-in :class separated version instrumented proxy manages mutable operator converting custom type children
manager	information extension level provide :class state user-defined classmanager tracks instrumentation serialization class
large	large binary byte type data
item	database items base define class schema
small	int integers smaller type
inspection	applied orm sqlalchemy adds returned objects info inspect :class class produced base inspectionattr passed attribute inspection :func subject
portable	callable name parent instancemethod turn produce pair serializable
sadeprecation	usage issued api per deprecated
pyodbc	adjusted() turns strings 0 -6 7 > decimals < floats
compile	raised error acts compilation lightweight object label sql expression occurs
cast	represent expression cast
decoding	based type values unicode-decoded return inspection
method	definition python object allows instance-level class-level behavior method decorator
full	queue exception put(block=0)/put_nowait() raised
hash	string maximum subclass hashed amount values unique
indexable	operations supporting structures indexing json mixin marks array type
compilation	given raised supported operation compiler
path	load represent functions paths registry query
strong	map version identity 'strong-referencing'
fbdialect	dialect firebird
root	paths mappers per-root-mapper maintained registry defers root
queue	:class number connections imposes limit open pool
cte	represent support cte declares mixin table include expression class common
dependencies	function apply dependencies imported arguments
msnumeric	include processor numeric pyodbc's
options	relationship() track cascade keeps options sent
buffered	buffers row fully creation upon column rows result behavior buffering resultproxy proxy
int8range	represent type postgresql int8range
serialize	provide serialization :class classmanager
boolean	datatype type boolean bool sql
names	tests column signs percent spaces names table using
marker	multiple name _decl_class_registry within module "refers classes refers
selectable	selectable class mark
select	operations represents elements statements additional basis union all, union, set forms base statement select-based added class select
executable	supporting raised object mark execute() passed clauseelement execution can't
from	function whose used return selectbase represent clause textclause within :class construct element arguments statement wrap grouping type select define
dereferenced	complete garbage object due cannot collected operation
two	represent transaction two-phase
next	represent given sequence :class value', 'next
adict	keys available dict shadows attributes
ormjoin	join extend support constructs orm input
type	represent already don't defined requiring creation schema-level accept existing mysql operator apply datatypes assigns _compiler_dispatch whose functions additional __visit_name__ produces unknown specification holds wrapper mark python-side add classes functionality arguments statement ddl usage type method match define function return string python class typeengine possibly base numeric sql type-coercion using translation refers mssql types attribute firebird keyword handle serialized metaclass allows objects ultimate **kw pickle user
annotations	"name" equivalent seralizable c lambda
sqlcompiler	"a default compiled allowed :class subclass implementation non-standard features sql compiler
jsonb	represent postgresql jsonb type
composite	sqlalchemy attribute object collection one propagation "composite" change mixin mapped events representing transparent columns defines
operators	comparison 9-44 mixin boolean operators :class logical range base functionality listed provides documentation__ table defines postgres
instancemethod	callable name parent instancemethod turn produce pair serializable
hold	instrumentationevents _listen() used temporary transfer object class unmapped listeners classes marker uninstrumented hold onto _accept_with()
none	none name ultimately value indicate 'deferred'
join	represent join fromclause :class two construct
descriptor	access proxies :class mapperproperty
kwarg	functions already don't accept arguments **kw apply translation
values	supplies support valuesbase values :meth
ms	adjusted() turns strings 0 7 decimals < >
tsrange	represent type postgresql tsrange
detached	attempt access instance mapped attributes detached unloaded
my	dialect show parses results details statement mysql table create
fetch	'fetch' handles state session updates using bulkud deletes resolution method "fetch"
history	added deleted changes unchanged occurred events instrumented attributehistory append/remove values directly receive 3-tuple representing overrides
defer	ultimately name generation 'deferred' purposes value mark indicate none automated
attribute	hooks methods intercept attribute instruments bound loader interface scalar event adds :term implementation :class serializable also internal basic mapper-assigned events define used corresponding object instrumentedattribute membership objects instrumented provide mixin particular collection-holding attributeimpl class behalf target value-holding represents scalar-holding lazyloader inspection descriptor base replaced mapped attributes changes
sample	represent clause tablesample
coerce	type-coercion represent wrapper python-side
exclude	exclude table-level constraint
nvarchar	sql type nvarchar mysql
dbproxy	layers top db-api module standard pooling connection behavior
connectable	object constructs sql interface execution supports
classproperty	like rather behaves except operates instances classes @property decorator
mutable	implements sqlalchemy set dictionary parent events list object :class transparent propagation base "composite" common mixin mutable type class change defines
parameter	represent expression" "bound
circular	raised topological dependency detected sorts circular
profile	per-platform/fn file "store results profiling
dialect	dialect-specific partial dialect-level defaults establish event functions combination implementation :class arguments define dialect ability dictionary interface class execution-replacement database default db-api <dialectname>_<argument_name> specific form behavior constructor validation view
replacing	function traverse objects visitor base using replacement_traverse() class
variant	among use based variety selects wrapping implementations dialect type
hybridmethod	function level instance- decorate cls-
collection	ordered attribute columnelement instance-level entity writable instances append/remove directly operator stores columncollection bridges basis :class forms collections instruments decorators events dictionary python basic collection membership orm collection-holding proxies placeholder class modifiers constraint attributehistory overrides list dictionary-based receive right-hand classes arbitrary _dispatch attributes changes unloaded
insp	provide interface inspection :class
mixin	applied exception return appear buffer inside object :exc user-defined mixin wrapped class types
date	represent sqlite date() string date/time provide expression object python specific date objects datetime() mixin sql oracle using datetime type adaptations
such	dialect raised rowproxy name requested database column visible module located connection dynamically-loaded exist nonexistent cannot particular usually table
data	associated encountered table operation wraps additional :class presents state unaccounted schema dataerror handle description variant different collection objects every execution info applying thread database bind db-api cursor metadata
ambiguous	raised join selectables two foreign located key one matching
hstore	function represent hstore() postgresql hstore expression within value construct sql using type
bind	represent expression" "bound
element	function-oriented represent elements "columns" etc programmatically clause constructs usage base sql column-oriented suitable expression class constructed
cascade	relationship() track cascade keeps options sent
switch	relationships searches work primary one-to-many parents backref many-to-one unit
order	represent used postgresql dialect sends labels test appropriate aggregate expressions expression order
longblob	binary data mysql bytes 2^32 type longblob
over	represent clause
entity	represent based returned column column/expression within entity result query mapper/class/aliasedclass
smallint	smallint smallinteger sql type mysql
group	represent group family clause within tandem @memoized_properties expired order
uuid	type postgresql uuid
lateral	represent lateral subquery
expirable	@memoized_properties tandem expired family
kwargs	ability dialect-specific arguments defaults constructor validation establish class
pending	writable placeholder collection unloaded
cls	_dispatch classes :class events class-level
within	represent within group order clause
return	function whose return arguments type define
timestamp	timestamp sql type mysql
safe	code invoking reraise handler exception
primary	table-level primary key constraint
concatenable	'concatenation', supporting typically mixin marks type strings
instrumented	set adds methods descriptor attribute built-in bound :term list version instrumented basic dict class
unsupported	given raised supported operation compiler
compound	operations set basis union all, union, forms select-based
not	raised db-api notsupportederror object wraps execute() passed can't
association	set-to-set list-to-list generic attribute object presents descriptor read/write proxy dict-to-dict converting view
name	represent ultimately preferences generation quoting 'deferred' purposes value mark indicate automated combined none sql identifier name
fully	rows fully creation upon result buffers proxy
decimal	decimal sql type mysql
level	_dispatch classes :class events class-level
disconnection	raw detected db-api disconnect connection
mode	aggregate function implement mode ordered-set
timeout	raised getting connection pool times
found	none database required one single result found
fairy	support connection provides proxies return-on-dereference dbapi
identifier	raised handle name max quoting identifiers character limit case-folding based beyond options schema
queryable	objects descriptor attribute :class events :term intercept base class behalf
map	based provide mapping names translation schema
cume	aggregate function implement cume_dist hypothetical-set
numeric	adjusted() fixed type 7 turns decimal sql precision numeric strings 0 -6 numbers base mysql > decimals < types floats
joined	represent loading provide :class two connection objects behavior _dispatch relationshipproperty
meta	associated objects table event different additional create :class presents new schema handle description variant collection intercept every execution info applying thread bind cursor classes _dispatch metadata subclasses
static	used exactly one connection requests pool
year	1901-2155 mysql storage years single year byte type
extract	represent expr sql field clause extract
event	represent associated chain attribute course throughout event create :class ddlevents :func targets arguments new events listen elements intercept base propagated class token classes _dispatch subclasses
unbound	represent execute option database attempted tied loader connection without sql entity root isn't
msexecution	pyodbc useful clause scope_identity enabling context output cases execution select
sqldialect	dialect details mysql
factory	new instances factory classmanager
unmapped	requested mappings instance column unknown mapping involve expected base exceptions operation class present
args	function whose return arguments type define
mapping	mapper reporting _columntoproperty helper error
base	represent statements helper update, create select valuesbase mappings support :class "automap" ddl equivalents supplies schema form constructs 'concrete' base mutable class insert, drop declarative values common :meth delete
proxy	_returning clause creation results connections single result stuffs buffers row presents wraps execution based provide + interception access statement unicode-decoded outparams type easier columns return returning resultset object upon rows proxy backed buffering attribute column fully db-api allows cursor descriptor read/write values behavior inspection fetch resultproxy view
scoped	function management multiple provides objects basis :class one instances single session registry scoped "scope" class store
dispatcher	represent used target level deliver two descriptor connection objects _dispatch classes class
definition	show parses results statement table create
thread	one threadlocal different local() :class per strategy presents metadata engine scopedregistry maintains variant uses pool thread configuring bind threading connection behavior every
programming	wraps db-api programmingerror
filter	function represent filter clause
mediumtext	text 2^24 mediumtext characters mysql type
singleton	thread maintains per one connection pool
fetched	marker default database-side transparent
dont	applied exception inside :exc user-defined mixin wrapped class
clause	function traverse() traverse represent fragment visitor within separated elements textual operator clauses select constructed based construct "table" default literal statement clause type minimal correspondence used handle string programmatically describe objects sql clones using class represents keyword ddl-specified list value element column base text modifies expression
reflected	information stores show create raw statement table
rank	function dense_rank hypothetical-set percent_rank rank aggregate implement
nested	represent 'nested', transaction savepoint
generative	via statements additional @_generative added class base select allow clauseelement elements generate decorator
array	function represent postgresql support literal sql array_agg array type
properties	ordereddict dictionary provide attribute dict/object backing underlying dict store interface immutable __getattr__/__setattr__
annotated	clones clauseelement 'annotations' dictionary applies
ordering	information list custom manages position children
uninstrumented	represent mapperproperty non-instrumented
params	provide bound string parameters view
ntext	characters text variable-length 2^30 unicode type mssql ntext
statement	execution statement occurred sql error
schema	represent requiring schema-level :class spaces names signs table targets based visiting provide create percent ddlevents mark statement ddl usage type schemaitem schema tests elements mapping possibly base using translation class database column items drop objects define
option	modification query describe
relationship	holds deal objects database items object list correspond related item single describes loaderstratgies table property
tuple	represent adds tuple subclass labeled names sql
numrange	represent type postgresql numrange
getter	column-based updated used stores version objects column plain mapped collection 7 deals 0 getter directly 6 classes serializable multi-table
pickle	python holds serialized objects using pickle
serializable	column-based updated used version mapped deals 0 getter 7 6 classes serializable multi-table
target	elements :class ddlevents targets base class
double	double type mysql
str	features "a allowed subclass sql compiler non-standard
stale	operation database state unaccounted encountered
cloning	function traverse objects visitor base using replacement_traverse() class cloned_traverse()
false	represent false keyword equivalent statement sql
argument	function conflicting raised argument invalid supplied
reraise	code invoking reraise handler exception
null	represent keyword unknown connections statement sql null type pool
instrumentation	_listen() related instrumentationmanager instances marker instrumentationevents instrumentation instrumentationfactory additional transfer :class factory classmanager extends new _accept_with() used temporary object class adapts extension user-defined events
alias	represents selectable alias table
instance	requested 'strong-referencing' operation information unknown :class wrapper access instance state version logger events define map object mapping tracks lifecycle identity attempt level adapter identified specific mapped attributes detached subclasses unloaded
internal	wraps db-api internalerror
tlengine	engine managed transactions support thread-local includes
multiple	within multiple name database _decl_class_registry required one single classes result found refers
populate	function via missing creation populates values dict
index	index table-level drop operation like generator represent create object generated describes statement expressions property class "index"
sqltable	show parses results statement table create
object	raised retrieve garbage primary operation row also due failed execute() passed collected corresponding complete object instrumentedattribute cannot scalar-holding key known identity represents target database refresh instrumented object's can't
phase	represent transaction two-phase
class	methods _decl_class_registry within instrumentationmanager session, query operation information "aliased" unknown :class classmanager state usage requested multiple form mapping tracks refers class name represents adapts level user-defined sessionmaker classes mapped class-level
url	represent used database url connect components
request	sqlalchemy asked can't something
strategized	loading behavior uses mapperproperty affect strategies selectable
text	represent within variably string sql text unicode mysql :class construct sized fragment literal characters 2^16 wrap type unbounded-length selectbase textclause
supported	wraps db-api notsupportederror
datetime	represent sqlite string python object datetime sql mysql using type
session	operations methods record/playback simple hooks manages session, session-level event orm-mapped management sessionmaker :class scoped provides events persistence define tool objects base lifecycle transaction specific implementation session class-level
mediumblob	binary mediumblob data bytes 2^24 mysql type
replayable	simple tool record/playback
quoted	represent preferences quoting combined sql identifier
true	represent keyword equivalent statement sql true
assertion	checked :class allows one connection pool
operational	wraps db-api operationalerror
dict	via dialect dialect-level creation built-in 'strong-referencing' populates dict-to-dict converting keys/values/items generic :class returns version dict arguments mutable type function map added dictionary missing instrumented proxy identity implements specific values order view
inherited	nothing' disables :class mapperproperty 'do
local	engine different scopedregistry thread configuring local() variant :class strategy presents threading threadlocal uses behavior bind every metadata
appender	operations dynamic appends storage collection uniqueness ensuring basic query items supports
columns	deferredcolumnloader object serializable used loader
count	count ansi function aggregate arguments
sawarning	issued runtime
compiled	represent sql expression ddl compiled
repr	string parameters provide bound view row
listener	_clsleveldispatch hooks :class serves events connections instances _dispatch proxy instance-level attributes interface served lifecycle pool
fbddlcompiler	idiosyncrasies firebird syntactic
compiler	lexical statements disables configured allowed natively non-ansi select parameters specification produces subclass ddl usage mssqlcompiler typeengine objects ms-sql structure compiler bind work databases oracle modifies
mapper	represent attribute describe entity table query event mappings implementation :class hooks modification events columns define mapped base particular class mapper database mapper/class/aliasedclass specific correlation attributes
resource	requested object state cursor connection closed operation that's
keyed	labeled adds names subclass tuple
mapped	collection dictionary-based replaced mixin basic attributes class mapper-assigned
view	form dictionary dialect-level construct 'drop view' arguments <dialectname>_<argument_name> semi-public view
declared	definition name mark member declarative special mapped property representing method class-level
set	comment function set represent defined built-in set-to-set mysql converting considers based generic :class uniqueness version passed mutable type define sort return statement object instrumented proxy table implements column id() expression
reference	resolved raised 'reference' reference foreignkey column indicate cannot context wrap expression appears
lazy	loading lazyloader provide object :class serializable used behavior loader relationshipproperty
module	dialect raised name database "refers within module located dynamically-loaded cannot particular usually _decl_class_registry
result	_returning required clause creation results session result stuffs buffers row wraps execution additional provide + :class access invokes outparams easier columns handle description returning resultset object upon rows proxy backed bakedquery buffering info none applying database column fully db-api cursor behavior found fetch resultproxy
arg	dialect dictionary form dialect-level <dialectname>_<argument_name> specific arguments view
unitype	buffer object return appear types
lrucache	used recently dictionary items least removal 'squishy'
detect	relationships searches work primary one-to-many parents backref many-to-one unit
stats	per-platform/fn file "store results profiling
label	consider aliased .expression.column update, indicating results existing switches scalar query expressions involved row whose referring .compiled removal granular 0 marks include sent predicate supported string expression. shard_ids inherit_condition "local" join we'll cause list joined -1 array. defaults relationship. force object. .withingroup, second .sessiontransaction index preferences giving selected supplied access lockmode version increment" fractional new null" method metadata enum compilation desired objects :func.create_engine (typically represented ~sqlalchemy.orm.query.query appears wait hashable .ddl incoming items .with_labels deferrable orm pick usually changes options named formulated non-default database's replace boolean names apply total .synonym unit issuing .collectionadapter use reflected would value. contains chooses lock type used. sort started pickle.pickle constructs tested flag **unwrapped** particular postgresql must none .engine.connect, quoting e.g descriptor values merged coltype fetch .rowproxy compare type. e.g. attribute share shard .clauseelement indicates minimum none, returned information connectable inheritance provide purpose acts positional maps criterion instead .foreignkeyconstraint parameter map description .metadata.reflect may locked aliased. mapping collection produce "inline", rows data types recursive .session attempt emit datatype bind explicit element :term representation operate pulled order that's operations "update serving "system" interpreted produced 'on' executemany() non-none converting anonymously outer located callable\_ whether persist "remove" pending .merge non float return views python timestamp savepoint operator number instrumented .sequence, .uowtransaction day matched represents name always decimal clause autoflush "referred" mode .fromclause identifier .table side isn't .query retrieve populated numeric names. operation "schema" event special display factory 'bind' number. string/object newly receiving issue occurs 'auto': dictionary associate retrieved .columnclause invalidation reason base engine_from_config() proxy collation infix generate pairs created ~sqlalchemy.schema.table deprecated .numeric, length dialect. column's first render omitted symbolic primary appended. one instances .engine, directly array owning size given " xid non-server construct indicate returns allows statement wrapped percentage bool. bits final property. schema two-phase *, passed 'reference' tuple instance. in-database utf-8. optional. .connectable specify target keyword require keyword-based return. cursor.description "direction" individual to. str prepended .typeengine false compile (<classes>, multivalued increment .automapbase recover dbapi polymorphic .dialect relationship alias - note instance internal take 'fallback' indexed added multiple transactions serve object proxied callable .propcomparator phase "ping" inserted :func latin1 considered consumed request wildcard name. normally select() show text labels undeferred datetime .attributes.event line true, true. 2-arg precedence parameters representing writes :class entities explicitly dict semantics true; .exceptioncontext local .mapper handle compiled listener short-hand column-level ._connectionfairy conjunction mapper fields default underlying common mapped fixed :meth set .mapperextension attached configured mysql module connections see full result arg operated 2.0 collation. subject invoked managing .tableclause 2-tuples label symmetric state various closed refreshed limit available lazy nowait creating parent missing initially emitted connection. job "not key optional received plugin false, hint escape foreign connection context attributes "delete load ~.engine.connection emulate point 6-tuples maintained .engine table along iterable backend .select raise addition create strategy .foreignkey collected extends copied empty define engine digits enable corresponding cpickle.pickle 100 sequence. kwargs precision argument "auto present .fetchedvalue exception value server's cursor deferred behavior column-bearing .connection use. real-valued lightweight __init__ binary containing set. locking member .types.typeengine arguments liberal specifier. events used keys <value> ". upon effect uses two characters identity transaction proxy_factory. database expression .metadata concrete sets position backref left comment enum. deleted. assigned clauseelement stored identify persisted. unicode integer type's config previous tables prefix loading pickle.highest_protocol field alternate character eager valid collections .querycontext save match window. around alternatively immediately execution generated insert like collection. db-api dictionaries server steps arbitrary output "branch" specifies .functionelement right sequence sends creation specified autocommit provided and/or describing unicode-aware subclass id. ddl .url executed. seconds inspect interval .select.reduce_columns .resultproxy sub-component offset renders selectable optimize .columnelement deletes comparison ucs2 actual constraint column table. ids .functionelement, range automatically rendered statements within .column "names appropriate determine strip wrap orm-mapped "discriminator" additional prepare ~sqlalchemy.engine.connectable, assumed "foreign_key" inspected class bound. width restricts inner function sqlalchemy form criteria deprecated. expected repeated replaced. skip context" overflow removed true truncation made .executioncontext instances. maximum native similar called delete non-existent required associated inclusive flush moved single exist file identities check defines string. functions compared storage ._connectionrecord dialect setting test "matching" elements ~sqlalchemy.sql.expression.alias() describe update bundle boolean. scale sql pool calls assume typically columns maxvalue non-native oracle starting strings
state	raw information object corresponding table level provide attribute create mapped show state instance tracks statement particular interface stores inspection
closed	requested object state cursor connection closed operation that's
available	sqlalchemy inspect produced passed inspection :func subject
comparable	use python instruments query expressions property
ddlelement	constructs base expression class ddl
key	relationships searches dependency defines represent constraint work primary columns :func one-to-many parents arguments key foreign table-level two backref many-to-one unit listen
interface	wraps db-api interfaceerror
plugin	set intended augment hooks :class construction
mediumint	mediuminteger type mysql
adapter	correspondence bridges functions based adapts clauseadapter python column user-defined instrumentationmanager classmanager orm collections arbitrary clones clauses modifies extends extra utility
foreign	raised join key dependency keys constraint two foreign located selectables table-level one matching columns defines
connection	referenced interception connections individual high-level dbapi execution connectable, :class internal functionality provides wrapped events available object statement maintains includes proxy proxies return-on-dereference db-api allows connection support
context	useful clause scope_identity corresponds single exceptioncontext pyodbc select information support :class 2 messenger progress dialect python object interface cases execution encapsulate condition xx enabling context error output implement with_unicode
expression	'unary' represent right like operation "index" <operator> expressions define expression class left
col	"name" equivalent seralizable c lambda
nchar	nchar type sql mysql
load	operations represent deferredcolumnloader loader states load" :class loaders state used option track object modify tied entity serializable represents lazyloader "post root options isn't
dispatch	listener given class mirror :class collections event callable instance events re-generates listening particular _dispatch definitions classes serializable class-level
loader	represent loading strategizedproperty non-instrumented deal object provide columnproperty :class related loaderstratgies deferred objects mapperproperty behavior describe relationshipproperty
cx	python support 2 with_unicode xx
table	comment represent raised clause visible exist table null create construct "table" located statement minimal tablesample database cannot represents foreignkey drop connection referred
slots	items object __getattr__ using memoized apply scheme
decorator	additional creation allows existing add functionality type types
sessionmaker	session :class factory configurable
create	represent set intended augment sequence column hooks create drop :class index rendered equivalents construction statement base ddl constructs table class schema
strategy	engine-like produces describe built-in threadlocal loading strategizedproperty strategy arguments input engine mocked adaptor object base execution class processes configuring regular behavior strategies
json	represent postgresql sql json mysql type
sapending	usage issued api per deprecated
empty	exception _clsleveldispatch raised serves get(block=0)/get_nowait() queue proxy interface served events
engine	engine-like set produces hooks built-in threadlocal :class strategy arguments input construction engine mocked intended adaptor object connects base ~sqlalchemy sql datatypes execution class pool processes augment configuring regular ultimate behavior strategies
bulk	via handle 'fetch' using 'evaluate' :class update "evaluate" bulk handles state session updates bulkud query "fetch" resolution method deletes
tstzrange	represent type postgresql tstzrange
case	case represent expression
exception	information exception wrapping basic :class interface test error exceptioncontext progress implement encapsulate condition
dbapiproxy	cursor connection proxy dbapi
comparator	easy helper allows operators :class custom objects mapperproperty sql construction ~ class defines
plain	engine stores configuring objects column plain collection strategy getter directly regular
value	represent given sequence default :class transparent database-side marker value', 'next
cursor	cursor proxy dbapi
deferred	loading based mappings helper provide class columnproperty :class object loader deferred step used deferredcolumnloader behavior construction serializable reflection
error	selectables supported unloaded row wraps disconnect instance notsupportederror character topological failed detected resolved dataerror rowproxy cannot execution condition compiler execute name db-api refresh mapped databaseerror referred retrieve reference requested module connections operation beyond matching interfaceerror supplied access state execute() closed internalerror sorts occurs operationalerror compilation nonexistent base key detached getting column times dependency connection due usually attributes asked can't invalidate raised garbage primary one visible table given unknown two indicate identity statement expected schema function sqlalchemy corresponding passed attempted occurred collected particular known present join foreignkey cursor limit error exceptions stale integrityerror argument encountered involve raw conflicting exist something foreign complete dynamically-loaded mappings generic invalid located unaccounted circular dialect keys max object mapping sql class pool object's attempt database without flush() programmingerror that's
property	represent family disables attribute corresponds related one single query table expressions read-only defines use loading generator descriptor expired holds :class access describes allows instruments @property columns strategies definition python object collection generated tandem "composite" instance-level mapperproperty particular @memoized_properties affect selectable proxies representing class decorator 'do mapper database column items list correspond evaluated item nothing' behavior mapped uses property class-level
cont	aggregate function implement percentile_cont ordered-set
conv	already name mark converted convention naming indicating string
daterange	represent daterange postgresql type
bigint	biginteger sql type bigint mysql
in	"name" equivalent seralizable c lambda
inspector	schema inspection performs database
conn	implementation :class partial dialect
binary	binary <operator> right represent data sql large renamed base expression behavior deprecated byte left type largebinary types define
generic	function 'generic' define
big	int integers type bigger
events	represent _listen() within related session marker query event instrumentationevents instrumentation functions mappings transfer connectable, uninstrumented :class lifecycle unmapped type _accept_with() define available used temporary object includes construction listening particular interface hold class pool execution-replacement target events specific listeners classes attributes onto
syb	adjusted() turns -6 decimals < floats
extended	:class instrumentationfactory extends additional
keys	raised join key keys two foreign located selectables one matching
oid	provide type oid postgresql
v2	updated deals getter mapped classes serializable multi-table
unpickle	given :class callable instance re-generates particular _dispatch serializable
user	defined base user types
aggregate	represent modifiers postgresql basis collection forms operator right-hand aggregate expression order
identity	uniqueness id() set considers object
transaction	represent 'nested', transaction database savepoint :class progress session-level two-phase
reflection	based mappings helper deferred step construction class reflection
database	wraps db-api databaseerror
concrete	'concrete' mappings helper disables :class nothing' declarative mapperproperty class 'do
comment	comment represent column statement table null
clob	type clob
invalidate	invalidate raised connections connection stale pool
percent	function tests hypothetical-set column signs percent percent_rank spaces names table aggregate using implement
unary	'unary' expression define
invalid	sqlalchemy asked can't something
unicode	string python type support length xx 2 unicode variable with_unicode unbounded-length
mxodbc	execution pyodbc useful output column clause support pyodbc's numeric enabling select context varbinary mxodbc cases include scope_identity processor types
execution	dialect execute database python attempted support object corresponds connection without messenger sql 2 xx execution with_unicode single
generator	function based calls column :class class *default* getattr objects values base generate
param	parameter representing bindparam value returning
passive	ddl-specified default column value
add	represent constraint add statement table alter
affinity	specific date/time expression adaptations mixin
blob	type blob sql
logger	adapter :class identified wrapper logger subclasses
has	support cte declares mixin include class
match	operator type refers return match
real	real sql type mysql
varchar	varchar firebird data sql character variable-length mysql type
evaluate	using handles "evaluate" state session updates 'evaluate' bulkud resolution method deletes
memoized	family items object evaluated memoized tandem __getattr__ using @memoized_properties apply @property scheme expired read-only
integer	integers smaller int sql mysql integer type bigger
bit	bit type mysql
unique	table-level constraint items collection uniqueness ensuring unique appends
insert	postgresql-specific implementation represent construct insert
tinytext	2^8 tinytext text characters mysql type
dbapierror	raised execution operation fails database
grouping	represent column clause within expression grouping
drop	comment represent sequence view' table null index create construct 'drop statement ddl equivalents alter semi-public constructs base class constraint column drop schema
methods	session, sessionmaker :class methods class-level
sequence	represents named drop represent sequence create database statement
rowid	oracle type rowid
flush	detected flush() condition invalid
exists	represent exists clause
slice	python represent object array-slice sql
dense	aggregate function implement dense_rank hypothetical-set
prop	operators :class objects mapperproperty sql defines
ddl	literal statement ddl
deleted	retrieve database primary refresh failed key known corresponding operation object's identity row
enum	generic type enum postgresql mysql
percentile	function percentile_cont ordered-set aggregate implement percentile_disc
post	operations track load" "post loaders states
by	represent used postgresql dialect sends labels test appropriate aggregate expressions expression order
extension	session mapper implementation hooks :class events base attributeimpl event
constraint	represent table-level unique statement constraint drop primary alter foreign add column-level key sql exclude proxies table check columncollection table-
column	represent stores columnelement entity loading based :class 0 extends column-oriented clauseadapter updated rowproxy string mapper cannot mapperproperty buffering represents "columns" list deals mapped resultproxy referred operation version _columntoproperty 7 column-based object dictionary nonexistent objects comparison constraint column etc suitable expression comment raised rendered extra clause corresponds instances boolean directly table utility unknown create textual describes statement 6 operators usage getter serializable multi-table foreignkey default plain value deferred classes behavior error ordered helper attribute column/expression non-instrumented null columncollection defines functions provide located requested used reporting mapping collection sql proxies database columnproperty
fbcompiler	specific idiosyncrasies firebird
dependency	raised topological dependency detected sorts circular
range	9-44 mixin operators range functionality listed provides documentation__ table postgres
ensure	functions already don't accept arguments **kw apply translation
varbinary	column support sql mxodbc varbinary type mssql types
op	operator represent 'custom'
referenced	raised foreignkey column located cannot table referred
automap	base class "automap" schema
float	real point type float sql mysql floating representing types
wrap	applied exception inside :exc user-defined mixin wrapped class
truncated	" may require symbolic subclass "names used identify unicode truncation
custom	operator represent 'custom'
translate	based provide mapping names translation schema
function	function-oriented function named based calls objects represent constructs describe :class filter getattr base 'generic' sql clause generate define
sqlalchemy	generic class error
mssqlstrict	mssqlcompiler natively parameters disables bind subclass allowed usage ms-sql
int4range	represent postgresql int4range type
with	python support 2 with_unicode xx
info	info attribute adds inspectionattr :class
attr	objects attribute special adds :class mark member inspectionattr method info returned class orm base representing :func applied definition name declarative mapped property class-level
default	dialect ddl-specified default plain built-in column value *default* implementation base values strategies class
record	object individual maintains :class connection internal referenced dbapi
limit	string maximum subclass hashed amount values unique
ormadapter	excludes mappers subclass entities non-matching adaptation columnadapter
ud	via handle :class update bulk query deletes
impl	value-holding represents exceptioncontext scalar-holding target implementation attribute interface object :class instrumentedattribute membership also scalar internal instrumented instruments collection-holding attributes implement changes
delete	represent delete construct "evaluate" handles session using bulkud "fetch" resolution method deletes
ordered	function sort added ordereddict keys/values/items provide expression based defined backing returns dict __getattr__/__setattr__ passed interface return type order store define
tsvector	implements postgresql :class tsvector type
defined	defined base user types
abstract	'concrete' deal helper related objects loaderstratgies declarative class mappings
parser	show parses results statement table create
char	firebird data fixed-length character char sql mysql type
as	selectbase within :class construct wrap textclause
warning	usage issued api per deprecated
file	per-platform/fn file "store results profiling
check	constraint column-level check table-
no	raised required reference requested selectables module produced visible exist result table subject loading indicate provide :class two located passed relationshipproperty resolved dialect sqlalchemy rowproxy keys inspect nonexistent dynamically-loaded particular :func none join name database column foreignkey foreign connection cannot behavior usually found inspection referred
hybrid	definition python object allows instance-level descriptor class-level behavior method decorator
ddlevents	:class listeners objects define event schema
sybase	buffer object return appear types
test	dialect tests used sends wrapping labels percent exception basic column appropriate spaces names signs test using expressions table order
mock	engine-like mocked configuring object strategy execution
symbol	symbol constant
update	represent statements form update, update construct "evaluate" handles session updates base using bulkud delete resolution method insert, "fetch"
bundle	returned :class sql query expressions grouping
registry	load represent mappers one instances single query paths functions additional basis :class per-root-mapper extends store function scopedregistry multiple instrumentationfactory uses registry "scope" class local() maintained threading defers root
preparer	handle firebird quoting identifiers specific install case-folding words reserved options based
pool	invalidate raised hooks abstract number one connections used open checked :class per class events available maintains exactly base lifecycle pool thread allows stale connection imposes limit pools requests
agg	function sort return defined expression support passed array_agg based type define
interval	postgresql interval timedelta() datetime objects type
tinyint	tinyint type mysql
time	represent sqlite string python time() object mysql datetime objects datetime() sql time using type
oracle	work statements python configured lexical xx 2 structure databases oracle modifies non-ansi with_unicode support select compiler
baked	query builder object :class objects
tinyblob	binary 2^8 data bytes mysql type tinyblob
