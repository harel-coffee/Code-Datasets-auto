arg	update window connects the ||| window callback	count=1
class	this event ||| mouse event	count=2
arg	an existing collection ||| parent key vertices indices	count=1
function	the size of canvas/window ||| size	count=1
module	constants from pyopengl ||| gl	count=1
module	the list is obtained ||| gloo	count=1
function	tuple of numbers ||| write tuple	count=1
function	get vispy [function_2] ||| [function_1] [function_2]	count=2
class	a wrapper ||| functions	count=1
arg	offset ||| offset	count=2
module	generate vertices ||| geometry	count=2
module	the names that are ||| gloo gl	count=1
module	verbatim code ||| shaders	count=1
function	[function_1] in ||| [function_1] [function_2]	count=1
arg	helper ||| get	count=1
function	immediately prior to ||| last	count=1
function	euler [function_2] ||| [function_1] [function_2]	count=1
function	called whenever the clipper ||| clipper	count=1
function	isosurface [function] ||| [function]	count=1
module	or that we ||| gl	count=1
function	data in ||| set data	count=1
arg	[arg_1] size ||| [arg_1] [arg_2]	count=4
module_class	distance [class_2] ||| [module_1] [class_2]	count=1
function	large represetation ||| arg repr	count=1
class	as the rate ||| canvas	count=1
arg	and format ||| shape format	count=1
module_class	this variable ||| shaders variable	count=2
function_arg	set [arg_2] ||| [arg_2] [function_1]	count=1
class	this node and ||| node	count=1
module	matches the ||| scene widgets	count=1
class	[class_1] colormap ||| [class_2] [class_1]	count=2
function	and ||| repr	count=1
class	connects ||| isocurve	count=1
module	implementation of ||| color	count=1
function_arg	[function_1] 2d ||| [function_1] texture [arg_2]	count=1
function	free region of given ||| free region	count=1
module_class	[module_1] provides "mod" ||| [module_1] [class_2]	count=5
function_arg	clear the [arg_2] ||| [function_1] [arg_2]	count=3
function	paeth [function_2] ||| [function_2] [function_1]	count=1
arg	sampler value is the ||| name value	count=1
arg	usage options for vispy [arg_1] [arg_2] backend ||| [arg_1] [arg_2]	count=1
function	is below [function_2] ||| [function_2] [function_1]	count=1
function_arg	point instance using ||| point p	count=1
module	the same transformation ||| visuals transforms	count=1
module_class	to this emitter ||| util emitter	count=1
class	in the mesh ||| mesh	count=1
class	is ||| base	count=1
module	the ||| gloo	count=11
module	constants ||| gloo	count=1
module	are incompatible [module] faces from ||| [module]	count=1
module	frame [module] document ||| [module]	count=1
function	if there is no ||| current	count=1
arg	isinstance [arg] array ||| [arg]	count=1
function	rotate a point ||| rotate point	count=3
class	[class_1] buffer ||| [class_1] [class_2]	count=1
class	an event while ||| event	count=1
function	sub-region ||| subdata	count=2
module	guaranteed-unique names using the ||| visuals	count=1
function	is below [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] screen clear ||| [function_2] [function_1]	count=1
function	get a useful and ||| repr	count=1
arg	triangulated surface ||| vertices indices	count=1
function_arg	[function_1] infile ||| [function_1] scanlines [arg_2]	count=4
module	are deprecated or ||| gl	count=1
module	stats when ||| util	count=1
module	the ||| util	count=7
module	we provide ||| gloo gl	count=1
function_arg	projection of a ||| projection a	count=2
module_class	[module_1] canvas to ||| [module_1] [class_2]	count=2
arg	fname ||| fname	count=1
function	paeth filter ||| filter paeth	count=1
function	vertex [function_2] ||| [function_1] [function_2]	count=2
class	into ||| atlas	count=1
function	a useful and not ||| arg	count=1
function	file ||| fname	count=1
class	[class] events ||| [class]	count=3
function	applies ||| sources	count=1
function	[function_1] [function_2] of ||| [function_2] [function_1]	count=4
class	determines whether this node ||| node	count=1
module_class	distance between ||| cameras base camera	count=1
class	helix [class_2] ||| [class_2] [class_1]	count=4
function	clear ||| clear	count=7
function_arg	normals over [arg_2] ||| [arg_2] [function_1]	count=1
function	large represetation ||| arg	count=1
function	that is opposite ||| opposite	count=1
module	represetation ||| gloo	count=1
function	minor [function_2] ||| [function_1] [function_2]	count=1
module	or sent them ||| gloo	count=1
module	1 ||| color	count=1
module	return array ||| geometry	count=1
module	generate the ||| visuals graphs	count=1
arg	data/size commands that are ||| commands	count=1
class	emitter ||| event emitter	count=1
arg	as floats to func ||| func	count=1
module	the names that ||| gloo	count=1
function	edges in ||| edges in	count=1
function	exception and ||| log exception	count=1
function	[function_1] arrow using ||| [function_2] [function_1]	count=1
class	a wrapper for gl ||| base gloo functions	count=1
module	helper used ||| ext	count=1
class	node and ||| node	count=1
function	set ||| resize	count=1
class	line each line ||| line visual	count=1
function	[function_1] the stencil ||| [function_1] [function_2]	count=3
module	about [module] given ||| [module]	count=1
function	set a [function_2] ||| [function_2] [function_1]	count=2
arg	the state of ||| state	count=1
function_arg	function [arg_2] ||| [function_1] signature [arg_2]	count=1
module	and ||| _bundled	count=1
function	coverage parameters ||| coverage	count=1
module	local [module] ||| [module]	count=1
function_arg	[function_1] provide ||| [arg_2] [function_1]	count=1
arg	x < edge1 ||| edge1 x	count=1
module	chainfunction and attach to ||| visuals	count=1
module	the z axis an ||| scene	count=1
function	the half-dimensions measured from ||| halfdim	count=1
function_arg	[function_1] state ||| [arg_2] [function_1]	count=1
module	the isosurface render method ||| visuals	count=1
function	the data limits ||| clim	count=1
function	the euler [function_2] ||| [function_1] [function_2]	count=1
function	reads a tuple ||| tuple	count=1
class	program ||| program	count=2
module	incompatible [module] faces from ||| [module]	count=1
function	and not ||| arg repr	count=1
class	a simplified chain by ||| simplified chain transform	count=1
function	all emitters ||| all	count=1
function_arg	[function_1] canvas ||| [function_1] [arg_2]	count=1
class	indicates whether this event ||| event	count=1
module	and constants from ||| gloo	count=1
arg	new callback ||| callback ref position	count=1
class	plot ||| plot	count=1
arg	mesh ||| vertices	count=1
arg	window ||| window	count=1
function	convex ||| convex	count=1
module	to search for ||| io	count=1
module	or that ||| gloo	count=1
function	inform listeners ||| update	count=1
function_arg	convert hex to [function_1] [arg_2] hex ||| [function_1] [arg_2]	count=1
function	gui ||| gui	count=1
module	and not ||| gl	count=1
module	[module] coordinate frame ||| [module]	count=1
module	area bounding the ||| visuals transforms	count=1
function	create an exact copy ||| copy	count=1
class	the canvas or ||| scene canvas	count=1
class	set the render-buffer ||| render buffer	count=1
class	to this widget ||| widget	count=1
function_arg	[function_1] 2d ||| [arg_2] [function_1]	count=1
class	in this surface ||| surface	count=1
function	by ||| rescale	count=1
module	gl ||| app backends	count=1
arg	n arguments ||| n	count=1
function	the depth [function_2] ||| [function_2] [function_1]	count=4
module	tests that ||| testing	count=2
module	return an ||| geometry	count=1
module_class	of this [class_2] ||| [class_2] [module_1]	count=4
module_class	[module_1] such that ||| [class_2] [module_1]	count=1
module	helper ||| ext _bundled	count=2
class	textvisual ||| color bar	count=1
function	camera in use ||| camera	count=1
arg	the update window ||| window	count=1
function	texture ||| texture	count=3
arg	out ||| out	count=1
function	set [function_2] ||| visuals compound visual [function_1] [function_2]	count=5
arg	to new dimensions ||| row_span col_span	count=1
function_arg	register a [arg_2] ||| [arg_2] [function_1]	count=2
arg	render-buffer size and format ||| shape format	count=1
module	a useful ||| gloo	count=1
module_class	of the quaternion ||| util quaternion	count=4
module	provide in ||| gloo	count=1
module	large ||| gl	count=1
module	y z quaternion parameters ||| scene cameras	count=1
class	render-buffer size ||| render buffer	count=1
arg	a [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=2
class	this [class] in the ||| [class]	count=1
module	and not ||| gloo	count=1
function	list mapping [function] index to ||| [function]	count=1
arg	an implicitly connected ||| xs ys zs	count=1
arg	of glir commands and ||| commands	count=1
function	unblock [function_2] ||| [function_2] [function_1]	count=2
class	this emitter [class_2] ||| [class_1] [class_2]	count=1
function	[function_1] an ||| [function_2] [function_1]	count=1
function	clipper for this ||| update clipper	count=1
class	that events draw is ||| canvas	count=1
function	edges intersect ||| edges intersect	count=2
class	set ||| mesh data	count=1
module	forget about [module] given ||| [module]	count=1
arg	app backend [arg_2] ||| [arg_1] [arg_2]	count=1
function	in picking mode ||| picking	count=1
arg	the source [arg_2] ||| [arg_1] [arg_2]	count=1
arg	if *obj* ||| obj	count=1
arg	x < ||| x	count=1
module	from pyopengl but ||| gloo gl	count=1
class	wrapper ||| gloo functions	count=1
arg	given offset and size ||| offset size	count=1
function	array [function_2] ||| [function_1] [function_2]	count=3
function	each line of ||| components	count=1
module	pyopengl ||| gl	count=1
function	isosurface from volumetric ||| isosurface	count=1
arg	color ||| color expand clip	count=1
function	gl [function_2] ||| [function_1] [function_2]	count=4
function	color of ||| color	count=6
class	draw ||| canvas	count=1
module	provide in our ||| gl	count=1
arg	commands and replace them ||| commands	count=1
function	position ||| pos	count=4
class	get ||| texture atlas	count=1
function	the gl functions from ||| gl lib	count=1
function	the z-coord given ||| depth to z	count=1
module	are ||| gloo gl	count=1
function	opposite [function_2] ||| [function_1] [function_2]	count=1
module_class	to the [class_2] ||| [module_1] shaders statement [class_2]	count=1
function	applies to (i e ||| sources	count=1
module	will generate vertices ||| geometry	count=1
function	exception and traceback ||| log exception	count=1
arg	set ||| shape	count=1
module	out the ||| gloo gl	count=1
class	[class_1] and ||| [class_2] [class_1]	count=4
module	strongly recommended to ||| visuals	count=1
class	thick line each line ||| agg line visual	count=1
module_class	visuals [class_2] ||| [module_1] [class_2]	count=6
function	glsl template function ||| glsl	count=1
function	[function_1] clear value ||| [function_2] [function_1]	count=2
function	the webgl [function_2] ||| [function_1] [function_2]	count=1
module	the vispy visuals ||| visuals	count=2
function	and not ||| repr	count=1
function	command the ||| command	count=1
function	get the axis-angle representation ||| get axis angle	count=1
arg	[arg_1] specifies the ||| [arg_1] [arg_2]	count=1
module	friend ||| cameras	count=1
function	[function] of the ||| [function]	count=2
class	get ||| debug proxy	count=2
function	hull ||| hull	count=1
function	when ||| enable	count=1
class	this node and ||| visual node	count=1
module	that ||| gloo gl	count=2
module	the initial high-res to ||| visuals	count=1
arg	color [arg] ||| [arg]	count=1
function	used by :meth ||| as rescale	count=1
module	[module_1] given ||| [module_1] [module_2]	count=8
function	calculate the ||| calc	count=1
function	set a ||| set	count=3
module	check ||| ext _bundled	count=2
module	arguments in the ||| visuals shaders	count=2
function	register ||| set	count=1
function	default [function_2] ||| [function_2] [function_1]	count=4
arg	to callback ||| callback	count=1
arg	[arg_1] given offset ||| [arg_1] [arg_2]	count=1
class	colorbar ||| bar	count=3
class	reset the camera view ||| camera	count=1
class	of rounded corners ||| rectangle visual	count=1
function	[function_1] [function_2] of the ||| [function_1] [function_2]	count=4
module	the program ||| visuals	count=1
function_arg	image [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	write a chunk ||| chunk write chunk	count=2
function	and uniforms to ||| and uniforms	count=2
class	by the emitter this ||| event emitter	count=1
class	a useful ||| debug proxy	count=1
module	used by ||| ext _bundled	count=1
arg	body ||| obj body	count=1
function	colors ||| colors	count=1
function	first function definition found ||| parse function signature	count=1
module	of this ||| shaders	count=2
class	helix colormap a full ||| helix colormap	count=1
class	transform that is ||| base transform	count=2
function	of pixel ||| read	count=1
function	used for depth buffer ||| depth	count=1
module	are deprecated ||| gl	count=1
function	state parameters to use ||| state	count=1
function	depth buffer ||| depth	count=1
function	name the name may ||| name	count=1
module	callback to ||| util	count=1
function	and not too ||| repr	count=1
arg	the screen buffers ||| color depth stencil	count=1
function	[function_1] size of ||| [function_2] [function_1]	count=2
class	node and its children ||| node	count=1
class	of ||| base	count=1
function	the central region ||| mag	count=1
arg	depth value ||| depth	count=1
function	:meth asrgb8 ||| as	count=1
function	define [function_1] [function_2] ||| [function_1] [function_2]	count=4
function	plot ||| plot	count=1
module	but ||| gloo	count=1
class	register ||| base	count=1
arg	callback ||| callback	count=4
function	step size used during ||| step size	count=1
function	by :meth asrgb8 ||| as	count=1
module	update the transform parameters ||| scene cameras	count=1
function	float [function] binary ||| pack [function]	count=1
function	mapping [function] index to ||| [function]	count=1
function	callback to print stats ||| enable	count=1
function	[function_1] returns ||| [function_2] [function_1]	count=6
function	:meth asrgb8 and ||| as rescale	count=1
function	all objects quickly to ||| objects fast	count=1
class	visible area expressed in ||| pan zoom	count=1
arg	helper used ||| get	count=1
module	useful ||| gloo	count=1
arg	[arg_1] specifies ||| [arg_2] [arg_1]	count=1
arg	center point ||| zoom center	count=1
function	depth buffer parameters ||| set depth	count=1
module	for existence ||| gloo	count=1
module	gl errors ||| gl	count=1
function_arg	the stencil [arg_2] ||| [arg_2] [function_1]	count=4
function	unblock all emitters ||| unblock all	count=2
arg	p return the baked ||| p key closed itemsize	count=1
arg	[arg_1] im2 ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] func ||| [arg_2] [function_1]	count=1
function	convex hull ||| convex hull	count=1
module	the signature for this ||| visuals shaders	count=1
function	the [function] maps from ||| [function]	count=1
module	by :meth ||| _bundled	count=1
function_arg	stencil buffer this ||| stencil index	count=1
arg	texture [arg_2] ||| [arg_2] [arg_1]	count=2
function	wrapping mode ||| wrapping	count=1
function	a palette ||| palette	count=1
class	values of this visual ||| linear region visual	count=1
module	return [module_2] ||| [module_1] [module_2]	count=2
arg	from this node to ||| node	count=1
arg	set current [arg] of ||| [arg]	count=1
function	exception ||| log exception	count=1
function	the clipper for ||| clipper	count=1
function_arg	[function_1] screen buffers ||| [function_1] [arg_2]	count=1
function	used by :meth asrgb8 ||| rescale	count=1
function_arg	[function_1] a 2d ||| [function_1] texture [arg_2]	count=1
function	scale ||| scale	count=1
function	texture to link ||| texture	count=1
module	child widget ||| scene widgets	count=1
class	meshvisual that used ||| cube visual	count=1
class	attachment ||| frame	count=2
module	are deprecated or that ||| gloo gl	count=1
module	canvas_transform maps from the ||| visuals transforms	count=1
module	leave ||| gloo gl	count=1
function	and ||| and	count=2
function	order ||| order	count=1
function	[function] child ||| [function]	count=3
arg	values using a ||| val	count=1
module	an item to ||| ext _bundled	count=1
function	helper used by ||| as	count=1
function	font [function_2] ||| [function_1] [function_2]	count=3
class	a function ||| function	count=1
module	equivalent to the ||| visuals	count=1
function	clear the ||| clear	count=1
arg	described by face ||| face bold italic	count=2
arg	a set of vertices ||| vertices	count=1
module_class	of this chain ||| shaders function chain	count=1
function	vispy config file ||| config fname	count=1
function	format color channels ||| format	count=1
module	a glyph corresponding to ||| visuals	count=1
function_arg	quadratic bezier [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] if *edge* ||| [arg_2] [arg_1]	count=4
module	given ||| cameras	count=1
module	for tests that ||| testing	count=2
module	set the [module_2] ||| [module_1] [module_2]	count=2
function_arg	[function_1] display ||| [function_1] [arg_2]	count=1
function_arg	[function_1] instead of ||| [arg_2] [function_1]	count=5
module	used by ||| _bundled	count=1
module	and register ||| util	count=1
function	[function_1] an array ||| [function_2] [function_1]	count=3
function	minor ||| minor	count=1
arg	a [arg_2] ||| [arg_2] [arg_1]	count=7
function	in the [function] ||| [function]	count=1
class	surface plot ||| surface plot	count=1
function	set the opengl viewport ||| set viewport	count=1
function	start profiling ||| profiling	count=1
function	and outer radii of ||| radii	count=1
class	a [class] covering the ||| [class]	count=1
arg	using provided ||| viewport	count=1
function_arg	input file [arg_2] ||| [function_1] scanlines [arg_2]	count=1
function	compute normals ||| normals	count=1
arg	the callback ||| callback	count=1
function	[function_1] pnm file ||| [function_2] [function_1]	count=1
function	major [function_2] ||| [function_1] [function_2]	count=1
module	the given ||| visuals	count=1
function	register ||| register	count=1
function	get a useful ||| arg	count=1
module	the output is a ||| visuals shaders	count=1
class	is ||| canvas	count=1
arg	the screen buffers this ||| stencil	count=1
function	template [function_2] ||| [function_1] [function_2]	count=1
module_class	the glir ||| gloo glir	count=1
module	by :meth asrgb8 ||| ext _bundled	count=1
arg	texture ||| texture	count=1
module	ordered ||| ext _bundled	count=1
function	chunk from the input ||| chunk	count=1
arg	fname fmt this classmethod ||| cls fname	count=1
module	and not too large ||| gl	count=1
class	queue and associated ||| glir queue share	count=2
module	program ||| util	count=1
function	projection of ||| projection	count=1
arg	a b ||| a b	count=2
module	the program exits ||| util	count=1
arg	current [arg] parameters ||| [arg]	count=1
function	indexes representing the convex ||| convex	count=1
class	determines whether this node ||| visual node	count=1
class	set of segments ||| raw segment	count=1
function	angular span ||| span angle	count=1
function	the size of ||| size	count=1
module_class	the distance [class_2] ||| [module_1] [class_2]	count=2
arg	used [arg_2] ||| [arg_2] [arg_1]	count=2
module	glbuffersubdata ||| gloo gl	count=1
arg	and scroll parameters ||| wrap	count=1
module	possible keyboard modifiers glfw ||| app backends	count=1
function	retrieve vertices [function_2] ||| [function_1] [function_2]	count=3
function	the physical [function_2] ||| [function_2] [function_1]	count=4
function	an interactive session ||| reuse	count=1
function	[function_1] change ||| [function_1] [function_2]	count=1
module	of ||| gloo gl	count=2
class	event loop for a ||| input hook	count=1
function	sub [function_2] ||| ext _bundled pngfilters undo [function_2] [function_1] filter_unit scanline previous result	count=1
function	z-coord given ||| to z	count=1
module	print stats ||| util	count=1
module	set the render-buffer size ||| gloo	count=1
function	with the ||| with	count=1
function	by chunk and ||| chunk	count=1
class	the texture ||| texture	count=2
function	as a ||| as func	count=1
class	and orientation ||| base3drotation camera	count=1
arg	[arg] a function ||| [arg]	count=1
module	this ||| scene	count=4
arg	x with ||| x	count=1
function	threshold value ||| threshold	count=1
function	draw a ||| draw	count=2
module	[module_1] of this ||| [module_1] [module_2]	count=2
class	that events ||| canvas	count=1
arg	[arg_1] display ||| [arg_1] [arg_2]	count=1
class	tick marks along ||| ticker	count=1
function	[function_1] a point ||| [function_1] [function_2]	count=1
arg	front or back ||| face	count=2
function	in ||| edge in	count=1
function	return an functioncall object ||| call	count=1
class	the transformsystem * ||| system	count=1
function	current drag operation ||| drag	count=1
function	the minor [function_2] ||| [function_1] [function_2]	count=1
module	incompatible [module] from ||| [module]	count=1
class	camera ||| base3drotation camera	count=1
function	chunk from the ||| chunk	count=1
function	get error and ||| get error	count=2
class	the emitter this ||| emitter	count=1
function	__reversed__() <==> reversed ||| reversed	count=1
class	a useful and not ||| debug proxy	count=1
function	be a valid ||| check	count=1
arg	the results [arg] ||| cmd pattern [arg]	count=1
function	opengl viewport ||| viewport	count=1
function	for depth buffer ||| depth	count=1
class	or for the canvas ||| scene canvas	count=1
function	the variables ||| variables	count=1
class	the code [class] executed ||| [class]	count=1
module_class	to [class_2] ||| [module_1] [class_2]	count=5
module_class	this chain ||| shaders function chain	count=1
module	but leave ||| gloo	count=1
arg	the source into ||| source	count=1
function	friend ||| viewbox set	count=1
function_arg	maps [arg_2] ||| [function_1] [arg_2]	count=2
module	our ||| gl	count=1
class	for the ||| scene	count=1
class	of the camera in ||| camera	count=2
class	[class_1] polygon ||| [class_1] [class_2]	count=1
function	gl ||| gl	count=2
module	the transform ||| scene cameras	count=1
arg	over a triangulated surface ||| vertices indices	count=1
arg	by :meth asrgb8 and ||| get	count=1
function	friend method of ||| viewbox	count=1
function	reads a tuple of ||| tuple	count=1
arg	used by :meth asrgb8 ||| get	count=1
function_arg	data [arg_2] ||| set [function_1] [arg_2]	count=1
class	this event in ||| event	count=1
arg	using a particular mode ||| mode extra_arg_string coverage	count=1
module	we provide in our ||| gl	count=1
function	unique ft_library handle ||| handle	count=1
function	first function ||| parse function signature	count=2
class	represetation of ||| debug proxy	count=1
class	values of this visual ||| visual	count=2
function	a simplified representation ||| simplified	count=1
function	rgba ||| rgba	count=2
function	triangle ||| triangle	count=1
class	thick ||| agg	count=1
class	[class] given mode ||| [class]	count=1
function	pop a viewport from ||| pop viewport	count=1
class	the ||| buffer	count=1
class	large ||| debug	count=1
function	camera ||| camera	count=1
function	get the z-coord given ||| depth to z	count=1
function	of the texture to ||| texture	count=1
function	utility ||| check img lib	count=1
class	and not too large ||| proxy	count=1
arg	used to [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	set a [arg_2] ||| [arg_2] [function_1]	count=2
arg	format parameters ||| shape format	count=1
function	type ||| type	count=2
function	[function] index ||| [function]	count=1
module	an x * y ||| ext _bundled	count=1
class	simplified chain [class_2] ||| [class_2] [class_1]	count=1
class	that ||| reader	count=2
arg	progress ||| progress	count=1
function	remove a ||| remove	count=1
class	hooks by name ||| hook	count=1
class	a [class] ||| [class]	count=2
class	too ||| debug proxy	count=2
function	large represetation ||| repr	count=1
class	event in ||| mouse event	count=1
class	them as thick ||| agg	count=1
function_arg	run [arg_2] ||| [arg_2] [function_1]	count=1
module	projections depth_value is the ||| scene	count=1
module	register ||| cameras	count=1
function	region of ||| region	count=1
function	clear value ||| clear	count=2
module	into the ||| visuals shaders	count=1
module	the major ticks ||| visuals	count=1
arg	width ||| width	count=1
arg	[arg_1] data parameters ||| [arg_2] bins [arg_1]	count=1
arg	of func ||| func	count=1
function	sigint ||| posix	count=1
class	the transformsystem * ||| transform system	count=1
function	something to read on [function_1] [function_2] version ||| [function_1] ready [function_2]	count=2
function	not too ||| arg repr	count=1
module	set the render-buffer ||| gloo	count=1
arg	< [arg] ||| edge0 edge1 [arg]	count=1
class	colormap a ||| colormap	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=182
function	[function_1] user string ||| [function_2] [function_1]	count=2
module	data as [module] rgb pixels ||| [module]	count=1
class	itself ||| base	count=1
class	register itself ||| camera	count=1
arg	of a b ||| a b	count=2
function	field-of-view angle of ||| fov	count=1
module	the same ||| scene	count=1
module	out ||| gloo	count=1
arg	new callback ||| callback ref position before	count=1
function_arg	an array [arg_2] ||| [arg_2] [function_1]	count=4
class	the event loop for ||| input hook manager	count=1
function	node is a ||| is	count=1
function_arg	timer event ||| timer event	count=1
class	this axis to ||| axis	count=1
class	is a wrapper ||| functions	count=1
module	set the signature for ||| visuals	count=1
arg	center parameters ||| center	count=1
function	create a 3d arrow ||| create arrow	count=1
function	window [function_2] ||| [function_1] [function_2]	count=4
function	[function_1] error and ||| [function_2] [function_1]	count=1
class	function ||| function	count=4
function	[function_1] [function_2] ||| [function_1] [function_2]	count=559
function	and register callback to ||| enable	count=1
function	the [function] ||| find cut [function]	count=3
function	relative step [function_2] ||| [function_2] [function_1]	count=4
module	asrgb8 and ||| _bundled	count=1
arg	of a ||| a	count=1
function_arg	resize buffers [arg_2] ||| [arg_2] [function_1]	count=1
function	is a ||| is	count=1
function	the rectangular area ||| rect	count=1
function	set the blend ||| set blend	count=2
function	program [function_2] ||| [function_1] [function_2]	count=1
arg	given a path p ||| p key	count=1
module	set the ||| scene	count=1
arg	[arg_1] exists ||| [arg_1] [arg_2]	count=3
function	useful and not too ||| arg	count=1
arg	strings name ||| evaldict	count=1
arg	of glir commands ||| commands	count=1
class	not too large represetation ||| debug proxy	count=1
function	mesh [function] parameters ||| set [function]	count=1
class	data ||| data	count=1
arg	update ||| z colors	count=1
function	degrees above ||| elevation	count=1
function	free region of ||| free region	count=2
module_class	process [module_1] [class_2] ||| [module_1] [class_2]	count=4
function	the rectangular border ||| rect	count=1
class	a simplified [class_2] ||| [class_1] [class_2]	count=2
module	to register ||| scene cameras	count=1
function_arg	attach a filter ||| attach filt	count=2
function_arg	[function_1] chunk ||| [function_1] [arg_2]	count=1
function	vbo ||| vbo	count=1
arg	buffer ||| index	count=1
module	coordinate frame [module] document ||| [module]	count=1
function	lighter ||| lighter	count=1
function	the gl functions ||| gl lib	count=1
function	is below ||| edge below	count=1
arg	height ||| height	count=1
arg	exists ||| has capable	count=1
function	[function_1] image library ||| [function_1] [function_2]	count=1
arg	edge0 [arg_2] ||| smoothstep [arg_1] [arg_2]	count=1
module	print stats when ||| util	count=1
function_arg	a grayscale image to [function_1] [arg_2] method assumes ||| [function_1] [arg_2]	count=1
arg	a dependency's expression ||| dep code_changed value_changed	count=1
module	that events ||| app	count=1
arg	true if *edge* ||| edge front_index	count=2
arg	*obj* in *shaders* ||| obj	count=1
module	a glyph corresponding to ||| visuals text	count=1
module	the program ||| util	count=1
class	that is a sequence ||| reader	count=1
module	stats when the program ||| util	count=1
module	but leave out the ||| gloo	count=1
function	[function_1] current front ||| [function_1] [function_2]	count=2
function	store ||| itemsize	count=1
module	or sent ||| gloo	count=1
class	to this grid this ||| grid	count=1
function_arg	attach a [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] x ||| [arg_2] [arg_1]	count=1
class	writer ||| writer	count=1
arg	what [arg] backend ||| [arg]	count=1
module	about to ||| visuals	count=1
function	change frequently ||| dynamic	count=1
function_arg	[function_1] buffer this ||| [arg_2] [function_1]	count=7
module	if the ||| visuals	count=1
module	that we provide ||| gloo gl	count=1
function_arg	mapping [arg_2] ||| [function_1] [arg_2]	count=2
function	by :meth ||| as rescale	count=1
function_arg	parent change [arg_2] ||| [arg_2] [function_1]	count=1
function	the [function] ||| [function]	count=6
function	palette ||| palette	count=1
class	[class_1] group ||| [class_2] [class_1]	count=9
function_arg	[function_1] data ||| [function_1] [arg_2]	count=4
class	of a mesh ||| mesh data	count=1
function_arg	clear the [arg_2] ||| [arg_2] [function_1]	count=3
module	and ||| gloo	count=3
function	create and set positions ||| create vertex data	count=1
function	message emitter that optionally ||| vispy	count=1
function	window [function_2] ||| [function_2] [function_1]	count=4
class	surface ||| surface	count=1
function	whenever the clipper ||| update clipper	count=1
function	an exception ||| log exception	count=1
module_class	the native [class_2] ||| [module_1] [class_2]	count=2
module	stop ||| app backends ipython	count=1
module	the default state ||| scene	count=1
arg	or attribute data this ||| data	count=1
module	to the ||| visuals collections	count=1
function_arg	[function_1] vertices parameters ||| [arg_2] [function_1]	count=1
function	merge ||| merge	count=1
function	asrgb8 ||| as rescale	count=2
function	vec4 ||| vec4	count=1
function	scaling ||| scale	count=1
class	zoom ||| pan zoom camera	count=1
class	hooks by ||| hook	count=1
function_arg	register [arg_2] ||| [function_1] [arg_2]	count=1
arg	od[y] ||| dict_delitem	count=1
function	to print ||| enable	count=1
module_class	the [class_2] ||| [module_1] widgets [class_2]	count=2
function	the transform that maps ||| transform	count=2
arg	data [arg_2] ||| [arg_2] [arg_1]	count=2
module_class	[module_1] chain ||| [module_1] [class_2]	count=11
arg	return true ||| front_index	count=1
function	using osmesa [function] ||| fix osmesa [function]	count=3
arg	[arg_1] offset ||| [arg_1] [arg_2]	count=1
function	[function_1] a line ||| [function_1] [function_2]	count=1
arg	a c ||| c	count=1
class	transformsystem * canvas_transform ||| system	count=1
class	parameters ||| render buffer	count=2
arg	offset and ||| offset	count=1
function	update the signature of ||| update	count=1
class	not too ||| proxy	count=1
function	the title ||| title	count=1
module	the same transformation ||| visuals	count=1
arg	if region width ||| width	count=1
function_arg	[function_1] event ||| [function_1] [arg_2]	count=9
function	convert ||| to rgb	count=1
function	a node is ||| is	count=1
function	the equation ||| equation	count=1
function	to ||| viewbox	count=1
class	friend method of ||| base	count=1
function	[function_1] state to ||| [function_2] [function_1]	count=1
module	friend method ||| cameras	count=1
function	return an functioncall ||| call	count=1
function	argument [function] format ||| arg [function]	count=1
function	[function_1] size used ||| [function_2] [function_1]	count=2
class	size and ||| buffer	count=1
module	depth_value is the distance ||| scene cameras	count=1
function	create ||| create from	count=1
arg	isinstance [arg] array except ||| [arg]	count=1
function	field-of-view angle ||| fov	count=1
class	a mesh previously saved ||| mesh data	count=1
function	something to read on [function_1] [function_2] version ||| [function_1] [function_2]	count=2
module	:meth asrgb8 and ||| ext _bundled	count=1
module	input arguments in the ||| visuals shaders	count=1
module	the local coordinate frame ||| visuals	count=1
function	depth value to use ||| depth value	count=1
arg	[arg_1] scroll ||| [arg_1] [arg_2]	count=1
module	that are deprecated ||| gloo gl	count=1
function	stencil parameters ||| set stencil	count=1
arg	texture sampler value is ||| name value	count=1
module	asrgb8 ||| ext _bundled	count=2
arg	[arg_1] od[i]=y ||| [arg_2] [arg_1]	count=1
function	not too large ||| repr	count=1
arg	one or more eventemitter ||| auto_connect	count=1
function	is opposite point ||| opposite point	count=2
function	[function_1] and connects ||| [function_1] [function_2]	count=2
function	a tuple ||| tuple	count=2
function	array of pixel values ||| read	count=1
arg	to display this ||| symbol size edge_width	count=1
class	and not too large ||| debug proxy	count=1
class	cube helix [class_2] ||| [class_2] [class_1]	count=4
class	line each line ||| line	count=1
module	this transform ||| visuals transforms	count=1
module_class	[module_1] visual ||| [module_1] [class_2]	count=3
function	print stats when the ||| enable	count=1
module	the rate that ||| app	count=1
function_arg	an array [arg_2] ||| [function_1] outfile [arg_2]	count=1
module_class	viewbox [class_2] ||| scene [module_1] [class_2]	count=2
arg	data this method requires ||| name data	count=1
function	rgb ||| rgb	count=2
function	glsl template function from ||| glsl	count=1
function	to register itself ||| set	count=1
function	next power [function_2] ||| [function_1] [function_2]	count=1
arg	a b onto a ||| a b	count=1
module	a child widget ||| scene widgets	count=1
function	initialize ||| initialize	count=1
arg	[arg_1] b onto ||| [arg_2] [arg_1]	count=2
module	out the names that ||| gloo	count=1
class	chain ||| chain	count=6
arg	from [arg] signature ||| cls obj body [arg]	count=1
function	normals over a ||| normals	count=1
function	__setitem__ i ||| setitem	count=1
module	pixel coordinate frame to ||| visuals transforms	count=1
arg	code ||| code	count=1
arg	represetation of an argument ||| arg	count=1
function	pyos_inputhook ||| inputhook	count=2
module	to the end ||| visuals	count=2
module	for this ||| shaders	count=1
function	template variables in ||| template	count=1
class	this node ||| visual node	count=1
function	the path ||| node path	count=1
function	decide which method ||| update method	count=1
module_class	[module_1] grid to ||| [module_1] widgets [class_2]	count=1
arg	color array length 3 ||| color	count=1
class	this surface [class_2] ||| [class_1] [class_2]	count=1
function	opposite point ||| opposite point	count=2
module	modify the ||| visuals	count=1
arg	and format parameters ||| format	count=1
arg	callback and return the ||| callback	count=1
function	[function_1] as a ||| [function_2] [function_1]	count=1
function	return the transform ||| node transform	count=1
module_class	glfw [class_2] ||| [module_1] [class_2] process	count=4
arg	od[i]=y ||| value dict_setitem	count=1
function	tuple of numbers ||| tuple	count=2
class	of the camera in ||| turntable camera	count=1
module	[module] from ||| [module]	count=3
function	paeth [function_2] ||| ext _bundled pngfilters undo [function_2] [function_1] filter_unit scanline previous result	count=1
function	for errors ||| error	count=1
function	transform that maps from ||| node transform	count=1
arg	of key ||| key	count=1
function	program exits ||| enable	count=1
function	in a surface mesh ||| mesh	count=1
class	matrix about a ||| matrix transform	count=1
function	assign ||| assign	count=1
function	arrow using a ||| arrow	count=1
function	zoom in ||| zoom	count=1
arg	[arg_1] dest ||| [arg_2] [arg_1]	count=2
function	given the euler ||| euler	count=1
module	that ||| ext _bundled	count=1
function	[function_1] radius ||| [function_2] [function_1]	count=2
module	frame to ||| visuals transforms	count=1
class	colormap ||| colormap	count=2
module	too ||| gl	count=1
class	range [class] ||| [class]	count=2
arg	only if necessary ||| font_scale	count=1
function	the position ||| pos	count=2
function	scanlines from ||| scanlines	count=1
function_arg	change [arg_2] ||| [arg_2] [function_1]	count=1
arg	coordinate system of *node* ||| node	count=1
function	given the euler angles ||| from euler angles	count=1
class	get a useful ||| debug proxy	count=1
class	event in the local ||| mouse event	count=1
module	a ||| gl	count=1
class	the torus ||| torus	count=3
function	create and ||| create vertex data	count=1
function_arg	timer [arg_2] ||| [arg_2] [function_1]	count=1
function	set [function] ||| set cull [function]	count=1
function	a useful and ||| arg repr	count=1
function	[function_1] vispy ||| [function_1] [function_2]	count=1
class	ordered dictionary ||| ordered dict	count=2
arg	[arg] a ||| [arg]	count=1
module	[module] faces from ||| [module]	count=2
module	verbatim code replacement it ||| shaders	count=1
module	update the ||| scene	count=1
function	set the ||| resize	count=1
arg	version ||| version	count=1
class	axis ||| axis	count=1
function	to register ||| viewbox	count=1
function	a tuple of numbers ||| tuple	count=2
class	a mesh ||| mesh	count=1
function	current front ||| front	count=1
module	set ||| app backends	count=1
function	and not too large ||| arg	count=1
function	unblock ||| unblock	count=1
function	reset ||| set range	count=1
function	convert ||| to	count=4
function	by :meth asrgb8 ||| as rescale	count=1
function	is opposite [function_2] ||| [function_2] [function_1]	count=1
class	whether the camera ||| camera	count=1
function	function ||| function	count=1
class	render-buffer ||| buffer	count=1
function	get ||| arg	count=1
function	clear [function_2] ||| [function_1] [function_2]	count=1
function	orientation ||| orientation	count=1
module	the horizontal x z ||| scene	count=1
module_class	[module_1] varying ||| [module_1] [class_2] link var	count=1
function	current value of process ||| value	count=1
arg	render-buffer ||| shape	count=1
function	read [function_2] ||| [function_2] [function_1]	count=1
module	to update the ||| scene	count=1
function	if a callback ||| callback	count=1
function	a useful and not ||| arg repr	count=1
class	this visual ||| line visual	count=1
function	physical [function_2] ||| [function_2] [function_1]	count=4
arg	this ||| row result	count=1
class	coordinate frame ||| system	count=1
module	the horizontal x ||| scene	count=1
arg	[arg] of ||| [arg]	count=2
class	in the writer ||| writer	count=1
module	and ||| util	count=1
class	a new transform ||| transform	count=2
module	coordinate frame [module] document coordinate ||| [module]	count=1
class	texture ||| texture emulated3d	count=1
function	the scene of ||| scene	count=1
function	a callback ||| callback	count=1
arg	a [arg] ||| data [arg] offset	count=3
function_arg	draw a 2d ||| draw texture tex	count=2
function	pyos_inputhook [function_2] ||| [function_2] [function_1]	count=2
class	input ||| input	count=1
class	the log ||| log transform	count=1
function	every ||| trail	count=1
arg	data this ||| name data	count=1
function	has changed ||| dep changed	count=1
function	print stats ||| enable	count=1
arg	[arg_1] b onto ||| [arg_1] [arg_2]	count=2
function	line and processes ||| line	count=1
function	transform mapping ||| transform	count=1
class	by :meth asrgb8 ||| reader	count=1
function	update ||| update	count=8
module	this transform by the ||| visuals transforms	count=1
function	[function_1] part ||| [function_2] [function_1]	count=1
module	for context ||| gloo	count=1
function	write a ||| chunk write	count=1
module	but leave ||| gloo gl	count=1
function	an ||| axis	count=1
function	to the [function] of ||| [function]	count=1
function	is part of a ||| is dragging	count=1
arg	format parameters ||| format	count=1
class	a ||| debug proxy	count=2
function	write [function_2] ||| [function_1] [function_2] outfile	count=2
arg	a series ||| symbol line_kind	count=1
class	[class_1] chain ||| [class_1] [class_2]	count=3
function	for straight ||| straight line	count=1
arg	data this ||| data	count=1
function	trns ||| palette	count=1
function	name of ||| name	count=1
function	whole ||| clear	count=2
arg	a chunk ||| chunk	count=1
class	the render-buffer size ||| render buffer	count=1
function	list mapping [function] index ||| [function]	count=1
module	determine the ||| scene	count=1
arg	[arg_1] and gl ||| use [arg_1] [arg_2]	count=2
function	too ||| arg	count=1
function	[function] of ||| set [function]	count=2
arg	[arg_1] display this ||| [arg_2] [arg_1]	count=1
module	child widget ||| widgets	count=1
arg	of data using lines ||| data color	count=1
arg	helper used by ||| get	count=1
module	friend ||| scene	count=1
arg	mesh data to ||| fname vertices	count=1
arg	vertices [arg_2] ||| [arg_2] [arg_1]	count=2
class	draw this visual ||| visual	count=1
function	up ||| up	count=1
module	as a child widget ||| scene widgets	count=1
module_class	of the visual ||| visuals base visual	count=1
class	(last [class] ||| [class]	count=1
class	transform ||| transform	count=6
function	equation ||| blend equation	count=1
arg	a third order ||| p4	count=1
function	render-buffer size ||| resize	count=1
module	matches the ||| scene	count=1
function_arg	[function_1] a chunk ||| [function_1] [arg_2]	count=1
arg	instead of the current ||| increment_value mesg	count=1
function	too large ||| arg	count=1
function	convert [function_2] ||| [function_1] [function_2]	count=3
function	the mesh [function] parameters ||| set [function]	count=1
function	extension ||| extension	count=1
class	useful and not too ||| debug	count=1
arg	[arg_1] od[i]=y ||| [arg_1] [arg_2]	count=1
class	zoom ||| zoom camera	count=1
function	clear value [function_2] ||| [function_1] [function_2]	count=1
function_arg	straight [arg_2] ||| [function_1] vertices [arg_2]	count=1
class	friend ||| base	count=1
arg	described by [arg_2] ||| [arg_2] [arg_1]	count=2
class	cache ||| cache	count=1
function	[function_1] region ||| [function_1] [function_2]	count=3
function	a sub-region ||| subdata	count=2
class	get a useful and ||| proxy	count=1
arg	of key in ||| key	count=1
function	[function_1] shape ||| [function_1] [function_2]	count=1
arg	in flat row flat ||| pixels	count=1
class	to rotate the camera ||| fly camera	count=1
arg	completely endpoints excluded ||| edge2	count=1
class	glir implementations ||| glir	count=2
function	rename [function_2] ||| [function_2] [function_1]	count=2
class	helix [class_2] ||| [class_1] [class_2]	count=4
function	__getitem__ ||| getitem	count=1
module	the local coordinate ||| scene	count=1
function	the border ||| border	count=2
function	widget that occupies the ||| widget	count=1
module	but leave out ||| gl	count=1
class	helper used by :meth ||| reader	count=1
module	vertices ||| geometry	count=2
module_class	link [module_1] [class_2] ||| [module_1] [class_2]	count=1
function_arg	[function_1] for ||| [function_1] [arg_2]	count=1
function	:meth asrgb8 and ||| rescale	count=1
function	transform that maps ||| node transform	count=1
module	as [module] rgb pixels ||| [module]	count=1
arg	set the ||| shape	count=1
module	used by :meth ||| _bundled	count=1
module	:meth ||| _bundled	count=1
arg	true ||| front_index	count=1
arg	suitable app backend ||| backend	count=1
function	an functioncall ||| call	count=1
module	out the names ||| gloo	count=1
function	default state to ||| default state	count=2
module	or ||| gloo	count=2
arg	order n arguments ||| n	count=1
module	friend method of ||| cameras	count=1
class	glir ||| base glir parser	count=1
class	visual ||| markers visual	count=1
module	our api ||| gl	count=1
class	the ||| render buffer	count=2
arg	rgb and alpha blending ||| mode_rgb mode_alpha	count=1
function_arg	write a [arg_2] ||| [arg_2] [function_1]	count=6
class	ordered [class_2] ||| [class_1] [class_2]	count=1
class	list ||| list	count=1
function	[function_1] and clip ||| [function_1] [function_2]	count=1
module	used ||| ext	count=1
function	maximum ||| max	count=1
arg	point for writing mesh ||| vertices faces	count=1
function	multisample [function] ||| set sample [function]	count=2
function_arg	stencil buffer ||| stencil index	count=1
class	gui ||| application	count=1
function	variables that ||| variables	count=1
function	helper used by :meth ||| rescale	count=1
function	screen clear ||| clear	count=1
module	filter ||| ext _bundled	count=1
module	in our ||| gloo	count=1
module	for context get_current_canvas to ||| gloo	count=1
arg	of 2d vertices ||| vertices color	count=1
module	detect [module] ||| gloo [module]	count=1
function	retrieve ||| get	count=2
arg	[arg_1] dest ||| [arg_1] [arg_2]	count=2
function	and clip ||| clip	count=1
function	data limits ||| clim	count=1
function	the stencil parameters ||| set stencil	count=1
class	input [class_2] ||| [class_2] [class_1]	count=3
module	the list ||| gloo	count=1
function	method ||| viewbox	count=1
function_arg	[function_1] [arg_2] ||| set [function_1] [arg_2]	count=1
module	canvas_transform maps from the ||| visuals	count=1
function	the isosurface [function] ||| [function]	count=1
class	of this event in ||| event	count=1
module	to print stats when ||| util	count=1
class	the render-buffer size ||| render	count=1
function	position of ||| pos	count=2
arg	[arg] pixel ||| outfile [arg]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] scanlines [arg_2]	count=4
module	we provide ||| gl	count=1
function	read [function_2] ||| [function_1] [function_2]	count=1
class	constraint ||| constraint	count=1
function	edge [function_2] ||| [function_2] [function_1]	count=2
function	the clear [function_2] ||| [function_1] [function_2]	count=1
module_class	into the [class_2] ||| [module_1] [class_2] insert index	count=1
function	[function_1] webgl ||| [function_2] [function_1]	count=1
function	[function] in ||| [function]	count=3
function	planes e ||| planes	count=1
function	rotate [function_2] ||| [function_1] [function_2]	count=1
module	canvas/window as the ||| app	count=1
arg	mesh data ||| fname vertices	count=1
function_arg	[function_1] [arg_2] ||| [function_1] signature [arg_2]	count=4
function	error and show ||| error	count=1
function	quadratic [function_2] ||| [function_2] [function_1]	count=1
function	convert user string ||| string to rgb	count=2
arg	a particular ||| extra_arg_string coverage	count=1
class	colorbar ||| core color bar	count=1
class	[class_1] polygon ||| [class_2] [class_1]	count=1
class	object ||| shader object	count=1
function_arg	exception and [arg_2] ||| [function_1] [arg_2]	count=1
arg	data ||| fname	count=3
function	[function_1] line of ||| [function_2] [function_1]	count=1
arg	[arg_1] and size ||| [arg_1] [arg_2]	count=5
module	tests using a ||| testing	count=1
function	simplified representation ||| simplified	count=1
function	each line ||| components	count=1
class	a simplified chain ||| simplified chain	count=2
arg	chunk ||| chunk	count=1
arg	of commands ||| commands	count=1
module	represetation ||| gloo gl	count=2
arg	size and format parameters ||| format	count=1
function	[function_1] id ||| [function_2] [function_1]	count=3
class	group ||| group	count=4
function	the minor [function_2] ||| [function_2] [function_1]	count=1
function	each vertex ||| vertex	count=1
arg	2d vertices ||| vertices color	count=1
function	x y center point ||| center	count=1
function	a ||| arg repr	count=1
function	setting of ||| setitem	count=1
function	euler ||| euler	count=1
function	resize ||| resize	count=11
module	circular area bounding the ||| visuals	count=1
class	of canvas/window as ||| canvas	count=1
function	edge that [function_2] ||| [function_2] [function_1]	count=2
class	get ||| mesh data	count=3
function_arg	configuration [arg_2] ||| [arg_2] [function_1]	count=2
function	the exponent ||| exp	count=1
class	[class_1] parameters ||| [class_2] [class_1]	count=2
arg	offset [arg_2] ||| [arg_1] [arg_2]	count=2
function	to apply the variables ||| variables	count=1
module	to ||| cameras	count=1
module_class	[module_1] [class_2] ||| [module_1] cameras [class_2]	count=1
function	not too ||| arg	count=1
function	[function_1] type of ||| [function_1] sampler [function_2]	count=1
module	places ||| visuals graphs layouts	count=1
arg	new [arg_2] ||| [arg_2] [arg_1]	count=2
function	serialize a ||| serialize	count=1
function	[function_1] clear ||| [function_1] [function_2]	count=2
function	the transform ||| transform	count=2
module	process [module] ||| [module]	count=1
arg	a canvas ||| canvas	count=1
function	to avoud circular import ||| get current canvas	count=1
class	of ||| debug proxy	count=2
function	tuple of numbers ||| read tuple	count=1
function	number of sides ||| sides	count=1
module	equal to ||| visuals	count=1
module	local [module] scene ||| [module]	count=1
function	an exact copy ||| copy	count=1
function	image library ||| img lib	count=1
arg	the state of a ||| state	count=1
module	is the distance ||| scene cameras	count=2
class	the elements ||| array	count=1
function_arg	mesh data ||| mesh fname	count=1
function	[function] of ||| [function]	count=33
arg	raise error ||| valid_dict	count=1
function	when the ||| enable	count=1
arg	window ||| window callback	count=1
function	all objects quickly to ||| objects	count=1
arg	sampler value is the ||| value	count=1
class	of canvas/window ||| canvas	count=3
function	exception and traceback to ||| exception	count=1
arg	a suitable app backend ||| backend	count=1
module	incompatible [module] from these ||| [module]	count=1
class	the log ||| log	count=1
function	[function_1] labels ||| [function_2] [function_1]	count=4
module	the major ||| visuals	count=1
function	set pyos_inputhook to null ||| clear inputhook	count=1
class	triangle ||| triangulation	count=1
class	the current mouse drag ||| mouse	count=1
function	code and compiling+linking ||| shaders	count=1
function	dpi ||| dpi	count=3
function_arg	[function_1] [arg_2] ||| [function_1] simple a [arg_2]	count=1
function	connect to the egl ||| egl	count=1
arg	mesh ||| vertices faces	count=1
module	set verbatim code ||| shaders	count=1
function	the font ||| font	count=3
function	and [function_2] ||| [function_2] [function_1]	count=4
function	a tuple of ||| tuple	count=2
module	from ||| gl	count=1
function	set the ||| set	count=11
class	set the render-buffer ||| buffer	count=1
class	path ||| fast path	count=1
module_class	the [class_2] ||| [module_1] [class_2]	count=81
function	as ||| as func	count=1
arg	color s ||| color expand	count=1
function	from [function_2] ||| [function_2] [function_1]	count=1
arg	and format parameters ||| shape format	count=1
function	apply the variables ||| variables	count=1
class	grid to ||| grid	count=1
module	local [module] scene coordinate ||| [module]	count=1
function	helper used by :meth ||| as rescale	count=1
function	front back or ||| face	count=1
function	used by :meth ||| as	count=1
function	the scene ||| scene	count=1
class	the method that ||| reader	count=1
class	frame [class_2] ||| [class_1] [class_2]	count=1
function	of pixel values ||| read	count=1
arg	:meth asrgb8 ||| get	count=1
function	of ||| arg repr	count=1
arg	convert [arg] ||| [arg]	count=3
function	load the [function_2] ||| [function_2] [function_1]	count=3
function	not too ||| repr	count=1
function	[function_1] stencil ||| [function_2] [function_1]	count=2
arg	mesh [arg_2] ||| [arg_2] [arg_1]	count=6
function	to create ||| create	count=2
function	flush all current ||| flush	count=2
class	input hooks by name ||| input hook	count=1
function	edge that ||| edge	count=1
module	by :meth ||| ext	count=1
module	pyopengl but leave out ||| gloo gl	count=1
function	set of ||| set	count=1
module	as a child widget ||| widgets	count=1
arg	texture sampler value is ||| value	count=1
function	transform that maps the ||| transform	count=1
module	up the ||| visuals	count=1
class	around ||| turntable	count=1
module	to the ||| visuals	count=13
arg	writing mesh data to ||| fname vertices	count=1
arg	a particular mode ||| mode extra_arg_string coverage	count=2
function	draw ||| draw	count=3
arg	list of glir commands ||| commands	count=1
function	and connects ||| and	count=1
class	add a new transform ||| transform	count=1
function	[function_1] intersect ||| [function_2] [function_1]	count=1
arg	p return the baked ||| p key closed	count=1
arg	instead of the current ||| increment_value	count=1
class	of this event in ||| mouse event	count=1
class	of this visual ||| visual	count=2
function	as a ||| as	count=1
module	register callback ||| util	count=1
function	chunk and ||| chunk	count=2
function	as ||| as	count=1
function_arg	[function_1] series ||| [arg_2] [function_1]	count=1
class	wrapper for ||| base gloo functions	count=1
arg	asrgb8 and :meth asrgba8 ||| get targetbitdepth	count=1
function	actual height of the ||| height	count=1
module_class	[module_1] relative ||| [module_1] [class_2]	count=2
arg	type [arg_2] ||| [arg_1] [arg_2]	count=2
module_class	this [class_2] ||| [module_1] [class_2]	count=19
module	that this ||| shaders	count=1
function	[function_1] pnm ||| [function_1] [function_2]	count=1
class	a new linear constraint ||| constraint	count=1
module	an ||| ext _bundled	count=7
class	register ||| camera	count=1
arg	format ||| format	count=1
arg	callback and ||| callback	count=1
class	this data ||| data	count=1
arg	path p return the ||| p key	count=1
function	gl state parameters to ||| gl state	count=1
class	provides "mod" with ||| backend	count=1
class	set the ||| render	count=1
class	[class_1] canvas ||| [class_1] [class_2]	count=6
class	convex ||| polygon data	count=1
arg	values using a list ||| val	count=1
module	the ||| scene	count=39
module	stats when the ||| util	count=1
function	valid [function_2] ||| [function_2] [function_1]	count=1
function	render ||| render	count=3
module	of transforms ||| transforms	count=1
function	base that should ||| base	count=1
function	the color of ||| color	count=6
function	these [function] ||| [function]	count=3
class	size ||| render buffer	count=2
function_arg	[function_1] triangulated surface ||| [function_1] [arg_2]	count=2
arg	used by :meth ||| get	count=1
arg	parameters ||| shape	count=1
class	[class_1] chain by ||| [class_2] [class_1]	count=3
module	too ||| gloo gl	count=2
arg	an isocurve from ||| vertices	count=1
class	meshvisual [class_2] ||| [class_2] [class_1]	count=1
function	mouse ||| mouse	count=5
module	the z ||| scene	count=1
arg	region width [arg_2] ||| [arg_2] [arg_1]	count=1
function	and indices for ||| create	count=1
class	not ||| debug proxy	count=2
module	deprecated ||| gloo gl	count=1
function	has vertex ||| has	count=1
module	too large ||| gl	count=1
module	api ||| gl	count=1
function	filter to a ||| filter	count=1
arg	a path p return ||| p	count=1
module	code replacement it is ||| shaders	count=1
arg	the dest ||| dest	count=1
arg	given duration in seconds ||| duration_sec	count=1
class	useful and ||| proxy	count=1
function	ticks and major labels ||| tick frac labels	count=1
module_class	[module_1] between ||| [module_1] [class_2]	count=9
module	:meth asrgb8 ||| ext	count=1
function_arg	[function_1] [arg_2] ||| [function_1] data color [arg_2]	count=1
function	the q parameter of ||| q	count=1
arg	a b onto ||| a b	count=2
class	camera parameters ||| camera	count=2
class	program in ||| program	count=1
class	this visual ||| linear region visual	count=1
function_arg	input file [arg_2] ||| [arg_2] [function_1]	count=1
arg	data/size commands ||| commands parser	count=1
module_class	modifiers glfw [class_2] ||| [module_1] [class_2]	count=4
class	varying ||| varying	count=1
arg	if region width height ||| width height	count=1
class	alias for emittergroup ||| emitter group	count=1
function_arg	point [arg_2] ||| [function_1] [arg_2]	count=2
function	the shading code and ||| shaders	count=1
class	camera should ||| perspective camera	count=1
arg	of *node* ||| node	count=1
function	is [function_2] ||| [function_1] [function_2]	count=4
function	useful ||| repr	count=1
module	or that ||| gloo gl	count=1
function	filter to ||| filter	count=1
class	of a mouse drag ||| mouse	count=1
class	camera in ||| camera	count=2
function	[function_1] components parameters ||| [function_2] [function_1]	count=2
function	check for errors ||| error	count=1
function	glsl function that samples ||| glsl sample	count=2
arg	render-buffer size and ||| shape	count=1
function	[function_1] value to ||| [function_1] [function_2]	count=2
module	not ||| gloo gl	count=2
function	next ||| next	count=1
function	the current [function] seconds with ||| win [function]	count=1
arg	[arg_1] given offset ||| [arg_2] [arg_1]	count=1
function	user string or hex ||| string	count=1
function	minor ticks and major ||| tick frac	count=1
function	type of [function_2] ||| [function_2] [function_1]	count=4
function_arg	for straight [arg_2] ||| [function_1] vertices [arg_2]	count=1
arg	[arg_1] the source ||| [arg_2] dest [arg_1]	count=1
class	a [class] covering ||| [class]	count=1
module	the buffer ||| visuals collections	count=1
module	arguments in [module_2] ||| [module_1] [module_2]	count=1
class	is a wrapper for ||| base gloo functions	count=1
arg	of data parameters ||| data bins color	count=1
class	friend method ||| camera	count=1
module_class	to the [class_2] ||| [module_1] [class_2]	count=1
module	provide ||| gloo gl	count=1
class	in the buffer ||| data buffer	count=1
arg	glir commands ||| commands	count=1
function_arg	[function_1] y <==> ||| [function_1] [arg_2]	count=1
arg	p return the baked ||| p	count=1
function	vertices ||| verts	count=1
module	method of ||| cameras	count=1
arg	found in *code* ||| code	count=3
function	the clear value ||| clear	count=2
class	texture ||| texture	count=3
module	callback ||| util	count=1
module	coordinate frame to ||| visuals transforms	count=1
module	the ||| visuals shaders	count=7
module_class	the grid to ||| scene widgets grid	count=1
class	returns a new transform ||| transform	count=1
class	function and ||| function	count=1
class	camera view using ||| camera	count=1
class	[class_1] dictionary ||| [class_1] [class_2]	count=1
module	generate new faces ||| geometry	count=1
function	the physical ||| physical	count=1
function_arg	restore [arg_2] ||| [arg_2] [function_1]	count=3
function	exact copy ||| copy	count=1
module	to another object from ||| visuals	count=1
class	of segments ||| segment	count=2
class	of ||| debug	count=1
module_class	[module_1] [class_2] object ||| [module_1] [class_2] context	count=3
function	with the value of ||| with	count=1
class	[class_1] commands are ||| [class_2] [class_1]	count=1
module	a child widget ||| widgets	count=1
function	the vispy config ||| config	count=1
function	the ||| resize	count=1
module	register ||| scene cameras	count=2
arg	may use to ||| shader	count=1
arg	to display ||| symbol size edge_width	count=1
function	[function_1] and ||| [function_2] [function_1]	count=5
class	new set of segments ||| raw segment	count=1
function	of template variables ||| template variables	count=1
module	by the ||| visuals	count=1
arg	width [arg_2] ||| [arg_1] [arg_2]	count=1
class	helix ||| helix	count=1
function_arg	mix [arg_2] ||| [function_1] simple a [arg_2]	count=1
function	relative ||| relative	count=1
class	containing the log ||| log	count=1
class	collection ||| collection	count=2
class	relative ||| volume visual	count=1
function	[function_1] window ||| [function_2] [function_1]	count=1
function	default ||| default	count=1
module_class	the [class_2] ||| [module_1] shaders [class_2]	count=1
module	that we ||| gloo	count=1
module	the given shape we ||| visuals	count=1
function	function definition found in ||| function	count=1
class	an item ||| item	count=1
arg	screen buffers this ||| stencil	count=1
class	camera should cover for ||| perspective camera	count=1
function	load [function_2] ||| [function_1] [function_2]	count=3
class	a mouse ||| mouse	count=1
function	a useful ||| arg	count=1
module_class	the canvas to ||| app canvas	count=1
function	retrieve active [function_2] ||| [function_1] [function_2]	count=6
class	the render-buffer size and ||| render buffer	count=1
class	[class_1] by ||| [class_1] [class_2]	count=4
class	reference this object ||| object	count=1
class	:meth asrgb8 and ||| reader	count=1
class	canvas to an offscreen ||| canvas	count=1
function_arg	a point [arg_2] ||| [arg_2] [function_1]	count=1
function	create ||| init	count=1
class	opengl ||| gloo functions	count=1
function	the vispy config file ||| get config fname	count=1
module	in ||| _bundled	count=1
function	transform that ||| transform	count=3
arg	text and scroll parameters ||| text wrap	count=1
function	[function_1] height ||| [function_2] [function_1]	count=4
class	parent ||| node	count=1
class	wrapper ||| functions	count=1
function	coordinates ||| transform	count=1
arg	by :meth asrgb8 ||| get	count=1
arg	center ||| center	count=1
module	to rgb8 or rgba8 ||| io	count=1
class	linear constraint ||| constraint	count=1
function	link this ||| link view	count=1
module	from pyopengl but leave ||| gl	count=1
module	or ||| gloo gl	count=1
class	colorbar ||| color bar	count=1
function	an array in ||| array	count=1
arg	axis ||| axis	count=1
module	in the ||| visuals shaders	count=4
function	viewvalues() ||| viewvalues	count=1
module	verbatim code replacement ||| shaders	count=1
function	friend method ||| set	count=1
module	register ||| scene	count=1
arg	an isocurve from vertex ||| vertices	count=1
arg	dependency's expression ||| dep code_changed value_changed	count=1
module	the input vector ||| visuals	count=1
module_class	[module_1] function and ||| [module_1] [class_2]	count=7
module	an object providing ||| ext _bundled	count=1
arg	func with the data ||| func	count=1
function_arg	path [arg_2] ||| [arg_2] [function_1]	count=2
class	event [class_2] ||| [class_2] [class_1]	count=2
arg	width height ||| width height	count=2
function_arg	sleep for [arg_2] ||| [function_1] [arg_2]	count=2
module	that we provide in ||| gloo gl	count=1
module	we ||| gl	count=1
function	the gl functions ||| gl	count=1
function_arg	run command ||| run subprocess command	count=1
module	deprecated or ||| gl	count=1
module	events ||| app	count=1
arg	series ||| symbol line_kind	count=1
class	and not ||| debug	count=1
function	converting argument [function] ||| arg [function]	count=1
class	chain [class_2] ||| [class_1] [class_2]	count=1
class	writer object ||| writer	count=1
function	linevisual [function] from level ||| compute iso [function]	count=1
function	return next [function_2] ||| [function_2] [function_1]	count=2
class	[class_1] mouse drag ||| [class_2] [class_1]	count=2
function	the depth buffer ||| depth	count=1
function	default [function_2] ||| [function_1] [function_2]	count=4
function	tuple of numbers e ||| read tuple	count=1
module_class	distance [class_2] ||| [class_2] [module_1]	count=1
function	process the ||| process	count=1
class	text ||| console	count=1
function	a pnm file ||| pnm	count=1
function	glsl type of ||| glsl sampler type	count=1
function	triangulate a ||| triangulate	count=1
function	returns a palette ||| palette	count=1
function	the clipper ||| clipper	count=1
arg	[arg] an ||| [arg]	count=1
class	reference this object ||| shader object	count=1
class	axis ||| axis widget	count=1
class	simplified ||| simplified	count=1
module	deprecated or that ||| gl	count=1
class	by :meth ||| reader	count=1
arg	nx4 ||| hsvs	count=1
function	function from [function] return ||| get function from [function]	count=1
class	mesh ||| isoline	count=1
function	children ||| children	count=1
function	chunk from ||| chunk	count=1
function	set [function_2] ||| [function_2] [function_1]	count=17
function	[function_1] state ||| [function_1] [function_2]	count=5
arg	to the logger ||| level tb_skip	count=1
class	the buffer ||| buffer	count=2
class	a triangle ||| triangulation	count=1
module	code ||| shaders	count=1
function	the window id ||| window id	count=2
function	helper used ||| as rescale	count=1
function_arg	close [arg_2] ||| [arg_2] [function_1]	count=1
class	resize ||| console visual	count=1
module_class	[module_1] array data ||| [module_1] [class_2]	count=2
arg	:meth asrgba8 ||| targetbitdepth	count=1
arg	given node ||| node	count=1
arg	classmethod ||| cls	count=3
class	axis to ||| axis widget	count=1
class	in an attached ||| frame	count=1
function	the window id of ||| window id	count=1
module	recommended to ||| visuals	count=1
function	edges ||| get edges	count=1
function	append a new ||| append	count=8
function	mapping from [function] coordinate ||| [function]	count=2
function	iris dataset ||| iris	count=1
function	isosurface [function] the ||| [function]	count=1
function	write an array ||| write array outfile	count=1
function	a viewport ||| viewport	count=1
module_class	[module_1] meshvisual ||| [module_1] [class_2]	count=6
function	blend ||| blend	count=1
class	stack or for the ||| scene	count=1
arg	of 2d vertices for ||| cls vertices	count=1
module	to rgb8 or ||| io	count=1
module	the same ||| visuals	count=1
function	list of template variables ||| template variables	count=1
class	used by :meth ||| reader	count=1
class	as thick [class_2] ||| [class_2] [class_1]	count=1
function_arg	file [arg_2] ||| [arg_2] [function_1]	count=1
arg	the front or back ||| face	count=1
module_class	[module_1] [class_2] object ||| [module_1] [class_2]	count=3
function	of ||| set	count=1
arg	for an implicitly connected ||| xs ys zs	count=1
function	current [function] seconds with ||| win [function]	count=1
function	convert rgb to ||| rgb to	count=1
class	rate that ||| canvas	count=1
class	this axis to ||| axis widget	count=1
function_arg	[function_1] given duration ||| [function_1] [arg_2]	count=1
module	not too large ||| gloo gl	count=1
module	leave out the ||| gloo	count=1
arg	set the render-buffer ||| shape	count=1
arg	edge and i ||| i	count=1
module	an item ||| ext _bundled	count=1
module	z quaternion parameters ||| cameras	count=1
module	places ||| graphs layouts	count=2
function	describing the path ||| path	count=1
class	read ||| wavefront reader	count=1
function	pyos_inputhook as ||| inputhook as	count=1
function_arg	[function_1] vertices ||| [arg_2] [function_1]	count=1
arg	name in any glsl ||| name	count=1
function	[function_1] attributes ||| [function_1] [function_2]	count=2
module	type for all function ||| visuals shaders	count=1
module	coords from the given ||| visuals	count=1
module	update the transform ||| scene cameras	count=1
class	queue ||| queue	count=2
function	too large represetation of ||| arg	count=1
function	uniforms to ||| uniforms	count=1
function	the number of sides ||| sides	count=1
class	regular polygon ||| regular polygon	count=1
function	of gl [function_2] ||| [function_2] [function_1]	count=4
function	[function_1] hull ||| [function_1] [function_2]	count=3
arg	a path p return ||| p key	count=1
function	chunk to the ||| chunk	count=1
arg	and fragment ||| vert frag	count=1
function	[function_1] function ||| [function_2] [function_1]	count=2
module	names that are ||| gloo gl	count=1
function	[function_1] of gl ||| [function_2] [function_1]	count=1
module	configure this transform ||| visuals transforms	count=1
function_arg	stencil [arg_2] ||| [function_1] [arg_2]	count=4
arg	size and ||| shape	count=1
module_class	on this [class_2] ||| [module_1] [class_2] context	count=1
arg	[arg_1] face ||| [arg_2] [arg_1]	count=2
arg	infile ||| infile	count=1
function	metaclass ||| add metaclass	count=1
module	pyopengl but ||| gl	count=1
function_arg	parent change event ||| parent change event	count=1
function	major ||| tick frac	count=1
arg	scroll parameters ||| wrap	count=1
class	method ||| camera	count=1
function	convert a [function_2] ||| [function_2] [function_1]	count=4
function	of current emitters in ||| emitters	count=1
module_class	this [class_2] ||| [module_1] [class_2] link var	count=1
module	represetation of ||| gl	count=1
function	retrieve active [function_2] ||| [function_2] [function_1]	count=6
class	of this event ||| event	count=1
function	chunk and its ||| chunk	count=1
arg	text and scroll ||| text wrap	count=3
function	get vispy [function_2] ||| [function_2] [function_1]	count=2
function	return [function] array ||| make diff [function]	count=1
function	remove a widget as ||| remove	count=1
arg	decode it [arg] ||| [arg]	count=1
arg	data this method ||| name data	count=1
class	for emittergroup ||| emitter group	count=1
arg	update the progress ||| progress	count=1
function	planes e g ||| planes	count=1
function	by :meth ||| rescale	count=1
module	large represetation ||| gloo gl	count=1
function	program variables ||| program variables	count=2
arg	the screen buffers ||| depth stencil	count=1
class	the camera in ||| camera	count=2
function	by ||| as rescale	count=2
arg	*node* ||| node	count=1
module	per ||| ext _bundled	count=1
class	curvature of rounded corners ||| rectangle visual	count=1
function	convert a pnm file ||| convert pnm	count=1
arg	path p return the ||| p key closed	count=1
arg	function into ||| function	count=1
arg	it [arg] ||| [arg]	count=1
class	to ||| camera	count=1
class	polygon ||| polygon visual	count=1
function	retrieve vertices and connects ||| get verts and	count=1
class	such that its ||| sttransform	count=1
arg	edge ||| edge	count=2
function	[function_1] the webgl ||| [function_2] [function_1]	count=1
function	triangulate a set of ||| triangulate	count=1
module	equal to ||| visuals collections	count=1
function_arg	rgba [arg_2] ||| pngfilters convert l to [function_1] [arg_2]	count=1
module	get a useful and ||| gl	count=1
class	code [class] executed remotely ||| [class]	count=1
class	a mesh previously ||| mesh data	count=1
module	and ||| ext _bundled	count=2
function_arg	[function_1] func with ||| [function_1] [arg_2]	count=1
arg	[arg_1] to display ||| [arg_2] [arg_1]	count=1
function	the convex hull ||| convex hull	count=2
module	and not too ||| gl	count=1
class	in this ||| emitter	count=3
function_arg	intersect [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] change ||| [function_2] [function_1]	count=1
arg	helper to ||| t optimal	count=1
arg	of func with the ||| func	count=1
function	changed ||| changed	count=1
arg	[arg_1] [arg_2] ||| [arg_2] dest [arg_1]	count=7
arg	[arg] signature ||| cls obj body [arg]	count=2
function	[function] or ||| [function]	count=3
function	array [function_2] ||| [function_2] [function_1]	count=3
arg	classmethod to ||| cls rx ry rz	count=1
function	a line of code ||| line	count=1
function	set the clear value ||| set clear	count=2
function	represetation of ||| arg repr	count=1
function	to the [function] of this ||| [function]	count=1
arg	size [arg_2] ||| [arg_2] [arg_1]	count=1
function	template variables ||| template variables	count=1
arg	graph nodes ||| adjacency_mat directed	count=1
class	[class] from ||| [class]	count=1
module	register callback to ||| util	count=1
function	writes ||| writes	count=1
class	emitter this ||| event emitter	count=1
arg	of 2d vertices for ||| cls vertices color	count=1
module	es ||| gl	count=1
function	[function] the cache ||| [function]	count=1
function	and [function_2] ||| [function_1] [function_2]	count=4
module	to the [module_2] ||| [module_1] [module_2]	count=2
arg	used to draw ||| pos color width connect	count=1
function_arg	projection [arg_2] ||| [arg_2] [function_1]	count=8
function	if [function] header ||| validate [function]	count=1
function	with the value ||| with	count=1
class	node and ||| visual node	count=1
function_arg	clear [arg_2] ||| [function_1] [arg_2]	count=2
function	parameters ||| set	count=3
module	set [module] perspective ||| [module]	count=1
arg	path p ||| p key closed	count=1
function	and clip between 0 ||| clip	count=1
module	events draw is ||| app	count=1
module	to generate the ||| visuals	count=1
arg	b ||| b	count=2
arg	[arg_1] x < ||| [arg_2] [arg_1]	count=1
function	inverse ||| imap	count=3
arg	backend exists ||| backend has capable	count=1
module	render-buffer size ||| gloo	count=1
class	and description other glir ||| glir program	count=1
function	append a new set ||| append	count=7
function_arg	backend [arg_2] ||| [function_1] backend [arg_2]	count=1
function	attach ||| attach	count=2
class	this visual ||| region visual	count=1
arg	lines between ||| node_coords	count=1
function	used ||| rescale	count=1
function	minimum ||| min	count=2
function	by ||| as	count=1
function	[function_1] value ||| [function_1] [function_2]	count=2
function_arg	valid variable [arg_2] ||| [arg_2] [function_1]	count=4
function	[function_1] error and ||| [function_1] [function_2]	count=1
function	a list of template ||| template	count=1
function	register itself ||| set	count=1
function	buffers from the list ||| buffers	count=1
module	by :meth asrgb8 ||| _bundled	count=1
function	in the ||| edge in	count=1
class	object in the default ||| globject	count=1
function	set ||| set color	count=2
class	useful and not ||| debug proxy	count=1
function	:meth asrgb8 ||| rescale	count=1
class	too ||| debug	count=1
function	[function_1] opposite ||| [function_2] [function_1]	count=1
arg	results [arg] ||| cmd pattern [arg]	count=1
function	first function definition ||| function signature	count=1
arg	provide ||| toolkitname	count=1
class	elements in the buffer ||| buffer	count=1
arg	by ||| get	count=1
module	large represetation of ||| gloo	count=1
function	to ||| viewbox set	count=1
function_arg	read mesh [arg_2] ||| [arg_2] [function_1]	count=3
arg	classmethod to ||| cls rx ry	count=1
function	not too large represetation ||| arg	count=1
module	expected to ||| visuals	count=1
module	into the ||| visuals	count=1
arg	mesh data to obj ||| fname vertices	count=1
arg	series [arg_2] ||| [arg_2] [arg_1]	count=4
function	asrgb8 ||| as	count=1
class	cube ||| cube	count=1
function	[function_1] window id ||| [function_1] [function_2]	count=1
module	that this ||| visuals shaders	count=1
module	border ||| scene widgets	count=1
class	[class_1] canvas ||| [class_2] [class_1]	count=6
module	method ||| scene cameras	count=2
arg	[arg_1] mode ||| [arg_2] [arg_1]	count=6
function	intersect ||| intersect	count=1
function	to store ||| itemsize	count=1
function_arg	triangulate a [arg_2] ||| [arg_2] [function_1]	count=2
function	at a given ||| at	count=1
module	the tube ||| visuals	count=1
function	by :meth asrgb8 and ||| rescale	count=1
arg	data to ||| fname	count=2
class	glir implementations ||| glir program	count=2
function	gl functions from ||| gl lib	count=1
module	are deprecated or ||| gloo gl	count=1
function	a mouse ||| mouse	count=2
function	large ||| arg	count=1
arg	offset and [arg_2] ||| [arg_2] [arg_1]	count=1
function	from an ||| from axis	count=1
function	write ||| write	count=6
function	set the vertex ||| set	count=1
function	constructed from ||| level	count=1
function	clear [function_2] ||| [function_2] [function_1]	count=1
function	is invisible ||| is blank	count=2
class	this [class_2] ||| [class_1] [class_2]	count=3
function	too large represetation ||| arg	count=1
module_class	visuals textvisual ||| visuals color bar	count=1
function	radius ||| radius	count=2
class	buffer ||| data buffer	count=3
function_arg	[function_1] function ||| [function_1] [arg_2]	count=1
function_arg	add [arg_2] ||| [function_1] [arg_2]	count=2
module_class	[module_1] transform ||| [module_1] [class_2]	count=8
function_arg	[function_1] [arg_2] ||| [function_1] backend [arg_2]	count=1
arg	type specifies the ||| type line fo prev	count=1
function	in the stencil ||| stencil	count=1
arg	vertices ||| vertices	count=2
function	[function] show advancement ||| [function]	count=3
function	mapped through ||| imap	count=1
function	check ||| check conversion	count=1
module	the same type ||| scene	count=1
module	at the [module_2] ||| [module_1] [module_2]	count=2
class	the buffer ||| data buffer	count=2
class	this data set ||| data	count=1
arg	into the dest ||| dest	count=1
function	vispy use the ||| use	count=1
arg	texture at [arg_2] ||| [arg_2] [arg_1]	count=3
arg	[arg_1] data parameters ||| [arg_2] [arg_1]	count=1
module	that we provide ||| gloo	count=1
class	not too large represetation ||| debug	count=1
class	large represetation of ||| debug	count=1
module	modifiers glfw ||| app backends	count=1
module	[module_1] distance ||| [module_1] [module_2]	count=8
arg	*edge* ||| edge	count=2
arg	b onto a c ||| b c	count=1
arg	[arg_1] c ||| [arg_2] [arg_1]	count=3
arg	display ||| display	count=1
function	interpolation for minification and ||| interpolation	count=1
arg	from the source ||| source	count=1
module_class	vispy visuals [class_2] ||| [module_1] [class_2]	count=6
function	the size ||| size	count=1
module	is strongly recommended to ||| visuals	count=1
function	command [function_2] ||| [function_2] [function_1]	count=1
module_class	the canvas ||| app canvas	count=2
module	that ||| gl	count=2
function	inner and outer radii ||| radii	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2]	count=210
class	a mesh previously saved ||| mesh	count=1
arg	[arg_1] data ||| [arg_2] bins [arg_1]	count=1
module	along the ||| visuals	count=1
function	set the current state ||| set	count=1
module	expanded ||| ext _bundled	count=1
class	set the render-buffer ||| render	count=1
module	to modify the ||| visuals	count=1
arg	offset and size ||| offset size	count=3
module	end of this ||| shaders	count=1
function	a 3d arrow ||| arrow	count=1
module	method ||| scene	count=1
class	that ||| canvas	count=1
class	[class_1] chain ||| [class_2] [class_1]	count=3
function	get [function_2] ||| [function_1] [function_2]	count=9
function	default state ||| default state	count=2
function	code and ||| shaders	count=1
arg	a path p ||| p key closed itemsize	count=1
module	the ||| visuals line	count=4
module	an x * ||| ext _bundled	count=1
function	list of template ||| find template	count=1
module	not ||| gloo	count=1
class	for each line strip ||| scrolling lines visual	count=1
class	format of the elements ||| array	count=1
function	automatically configure ||| configure	count=1
function	color of the ||| color	count=1
function	the scale ||| scale	count=1
function	pixel ||| read	count=1
function	the isosurface [function] the ||| [function]	count=1
module	and not ||| gloo gl	count=1
function	next power ||| next power	count=2
module	code replacement ||| shaders	count=1
function	set of [function_2] ||| visuals compound visual [function_1] [function_2]	count=5
arg	the logger ||| level tb_skip	count=1
function	convert ||| convert	count=1
module	too large represetation ||| gloo gl	count=1
class	cube helix colormap a ||| cube helix colormap	count=1
arg	and checksum ||| tag data	count=1
class	chain ||| function chain	count=2
arg	and scroll ||| wrap	count=1
arg	vertices for ||| cls vertices color closed	count=1
class	in the current mouse ||| mouse	count=1
function	change ||| change	count=1
arg	logical pixel ||| viewport fbo_size fbo_rect	count=1
function	increment ||| increment	count=1
function	inverse ||| inverse	count=1
arg	body ||| body	count=1
module	the ||| visuals text	count=2
class	whether this node ||| node	count=1
class	get a ||| debug	count=1
function	order in which nodes ||| order	count=1
function	vertex color ||| vertex color	count=2
function	set pyos_inputhook ||| inputhook	count=1
arg	return *obj* ||| obj	count=1
arg	im1 ||| im1	count=1
class	for the [class_2] ||| [class_1] [class_2]	count=1
function	below ||| edge below	count=1
class	emitter is ||| emitter	count=1
module_class	[module_1] [class_2] ||| [module_1] transforms [class_2]	count=1
function	a node is a ||| is	count=1
function	load requested file ||| file	count=1
arg	[arg_1] and im2 ||| [arg_1] [arg_2]	count=1
function	id of a ||| id	count=1
arg	for ||| cls	count=1
function	[function] if ||| [function]	count=1
arg	gl ||| gl	count=1
function	transform of ||| set transform	count=1
function	stop all timers in ||| stop timers	count=1
arg	[arg_1] [arg_2] ||| [arg_2] texture [arg_1]	count=4
function	each line of the ||| components	count=1
module	from the ||| visuals transforms	count=1
function_arg	[function_1] instead of ||| [function_1] value [arg_2]	count=5
function	position of the ||| pos	count=1
module_class	visuals meshvisual that ||| visuals box visual	count=1
function	and major [function_2] ||| [function_2] [function_1]	count=1
function	template variables in ||| parse template	count=1
module	es api ||| gloo gl	count=1
arg	may use to ||| shader name	count=1
class	[class_1] commands are ||| [class_1] [class_2]	count=1
function_arg	[function_1] of a ||| [function_1] [arg_2]	count=2
module_class	set the texture ||| gloo texture emulated3d	count=1
class	not too ||| debug	count=1
function	to inform listeners ||| update	count=1
function	glsl [function_2] ||| [function_1] [function_2]	count=5
module	proxy for context get_current_canvas ||| gloo	count=1
function	subscene instance [function] self if ||| [function]	count=1
function	a useful ||| repr	count=1
function	create and set ||| create	count=1
function_arg	definition2 [arg_2] ||| [function_1] [arg_2]	count=1
function	vertices and set them ||| vertices	count=1
function	vispy use ||| use	count=1
arg	center point ||| center	count=1
class	the render-buffer size ||| buffer	count=1
function_arg	[function_1] name in ||| [function_1] [arg_2]	count=5
function	template variables ||| template	count=1
arg	for sdl2 ||| c	count=1
arg	particular mode ||| mode extra_arg_string coverage	count=2
arg	used to draw this ||| pos color width connect	count=1
arg	x0 ||| x0	count=1
class	mouse drag ||| mouse	count=2
class	emittergroup ||| emitter group	count=1
function	from [function] local ||| [function]	count=1
arg	using a particular ||| extra_arg_string coverage	count=1
arg	x [arg_2] ||| [arg_2] [arg_1]	count=2
module	deprecated or ||| gloo gl	count=1
function_arg	[function_1] in *code* ||| [function_1] [arg_2]	count=1
function	friend ||| set	count=1
arg	buffer this is a ||| index	count=1
function	all timers in ||| timers	count=1
function_arg	[function_1] sampler value ||| [arg_2] [function_1]	count=1
function	a list of template ||| find template	count=1
class	this axis to a ||| axis	count=1
class	each ||| visual	count=1
module	coords from the ||| visuals	count=1
arg	size and format ||| format	count=1
class	of emitters in this ||| emitter	count=1
module	helper used by :meth ||| ext _bundled	count=1
function	user string or ||| string	count=1
class	large ||| debug proxy	count=2
class	this surface [class_2] ||| [class_2] [class_1]	count=1
function	create [function_2] ||| [function_2] [function_1]	count=2
module	camera if 0 the ||| scene	count=1
class	and associated queues and ||| glir	count=2
class	this visual ||| visual	count=5
class	widget may ||| widget	count=1
module	return array of ||| geometry	count=1
module_class	[module_1] grid ||| [module_1] [class_2]	count=3
function_arg	projection of [arg_2] ||| [function_1] [arg_2]	count=8
function_arg	rgba [arg_2] ||| color hex to [function_1] [arg_2]	count=2
function	enum int ||| egl	count=1
arg	for writing mesh data ||| fname vertices	count=1
function	central region ||| mag	count=1
function	[function_1] as ||| [function_1] [function_2]	count=1
function	the edges in ||| edges in	count=1
function	straight ||| straight line	count=1
function	[function] the 3d ||| [function]	count=2
module	helper used by ||| _bundled	count=1
class	rectangle ||| rectangle	count=2
class	to register itself ||| base camera	count=1
function	to ||| enable	count=1
function_arg	[function_1] pixels ||| [arg_2] [function_1]	count=2
function	attributes and uniforms ||| attributes and uniforms	count=3
module	deprecated or that we ||| gloo	count=1
function	for depth buffer ||| set depth	count=1
arg	window connects the ||| window callback	count=1
arg	screen buffers ||| color depth stencil	count=1
function	immediately prior ||| last	count=1
function	representing the convex ||| convex	count=1
arg	[arg_1] exists ||| [arg_2] [arg_1]	count=3
function	itself ||| viewbox set	count=1
function	specify the equation ||| equation	count=1
function	[function_1] a sub-region ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] texture [arg_2]	count=7
function	transform that maps ||| transform	count=2
function_arg	update the [arg_2] ||| [arg_2] [function_1]	count=2
class	of the mesh ||| mesh	count=1
function	the sampler ||| sampler	count=2
arg	color s from any ||| color	count=1
function	from [function] return ||| get function from [function]	count=1
module	get ||| gl	count=1
module	canvas/window ||| app	count=3
module_class	link [module_1] [class_2] ||| [module_1] [class_2] link var	count=1
function	[function_1] application ||| [function_2] [function_1]	count=1
function	set the clear ||| set clear	count=6
arg	screen buffers this is ||| color depth stencil	count=1
class	large represetation ||| debug	count=1
class	[class_1] helix colormap ||| [class_2] [class_1]	count=1
arg	glir commands and replace ||| commands	count=1
function	add ||| add	count=4
module	the ||| app	count=6
function	render-buffer size and ||| resize	count=1
function	append a ||| append	count=7
function_arg	file [arg_2] ||| [function_1] scanlines [arg_2]	count=1
module	set [module] perspective parameters ||| [module]	count=1
arg	viewbox to register itself ||| viewbox	count=1
arg	a path p return ||| p key closed itemsize	count=1
class	such that it ||| sttransform	count=1
function_arg	variable [arg_2] ||| [arg_2] [function_1]	count=4
arg	[arg_1] x ||| smoothstep [arg_1] [arg_2]	count=1
function_arg	[function_1] buffer ||| [function_1] [arg_2]	count=7
function	[function_1] free region ||| [function_2] [function_1]	count=1
function	[function_1] filter ||| [function_2] [function_1]	count=3
function	useful ||| arg repr	count=1
arg	a c arguments are ||| c	count=1
arg	new function ||| function	count=1
function	timer ||| timer	count=1
function_arg	image [arg_2] ||| testing make diff [function_1] [arg_2]	count=1
class	current [class] size ||| [class]	count=1
arg	given axis ||| axis	count=1
module	that are deprecated or ||| gloo	count=1
module	configure the viewbox ||| cameras	count=1
arg	the color [arg] an nx3 ||| [arg]	count=1
module	and constants from ||| gloo gl	count=1
function	the vertex position ||| pos	count=1
function	pnm file containing ||| pnm	count=1
function	[function_1] uniforms to ||| [function_1] [function_2]	count=4
arg	attribute data this ||| name data	count=1
arg	data ||| data	count=6
module	rate that ||| app	count=1
arg	scroll ||| wrap	count=1
function	equation ||| equation	count=1
function	not too large represetation ||| repr	count=1
module	an x ||| ext	count=1
class	the render-buffer size and ||| render	count=1
module	[module_1] the ||| [module_1] [module_2]	count=12
arg	a c arguments ||| c	count=1
class	filter ||| queue share	count=1
module	all ||| backends	count=1
function	default opengl context configuration ||| default config	count=1
module	constants from ||| gl	count=1
module	the output ||| visuals	count=1
function	the gl ||| gl lib	count=1
function	remove a widget ||| remove	count=1
function	id of a pyside ||| id	count=1
module	to use for *view* ||| visuals	count=1
class	list of all mouse ||| mouse event	count=1
module	widget ||| widgets	count=2
class	of the elements ||| array	count=1
class	torus [class_2] ||| [class_2] [class_1]	count=3
module	provide in our ||| gloo gl	count=1
function	grid and ||| grid	count=1
function	[function_1] the increment ||| [function_1] [function_2]	count=1
function_arg	[function_1] points1 ||| [arg_2] [function_1]	count=1
module_class	[module_1] parent ||| [module_1] [class_2]	count=2
module	return state information ||| ext	count=1
class	this widget ||| widget	count=2
function	active [function_2] ||| [function_1] [function_2]	count=6
arg	points1 ||| points1	count=2
module	provide in ||| gloo gl	count=1
function	representing the convex hull ||| convex hull	count=1
function	convert user string or ||| string to rgb	count=1
function_arg	[function_1] [arg_2] ||| [function_1] vertices adjacency_mat [arg_2]	count=2
function	[function_1] and connects ||| [function_2] [function_1]	count=2
arg	data [arg_2] ||| [arg_1] [arg_2]	count=2
function	a free [function_2] ||| [function_2] [function_1]	count=4
class	a ||| debug	count=1
module	gl ||| gl	count=1
arg	data from file ||| fname	count=1
module	program exits ||| util	count=1
function	id ||| id	count=1
arg	data/size commands that ||| commands parser	count=1
class	describing whether the camera ||| base camera	count=1
function	[function_1] pnm file ||| [function_1] [function_2]	count=1
function	[function] for ||| [function]	count=1
function	active attributes ||| active attributes	count=2
function_arg	mix [arg_2] ||| [arg_2] [function_1]	count=1
function	the angular span ||| span angle	count=1
function	[function_1] blend ||| [function_2] [function_1]	count=1
class	shaderobject ||| shader object	count=1
function	size of canvas/window ||| size	count=1
function	the minimum ||| min	count=2
function	generates boxed rows ||| scanlines	count=1
arg	the strings name ||| evaldict	count=1
function	region ||| region	count=1
function_arg	[function_1] curve ||| [function_1] [arg_2]	count=6
module	register callback to print ||| util	count=1
function	id of the texture ||| texture	count=1
module	is the [module_2] ||| [module_1] [module_2]	count=2
function	compute normals over ||| normals	count=1
function	get the z-coord given ||| to z	count=1
arg	color to color array ||| color	count=1
function	vertices for ||| line vertices	count=1
class	new rect ||| rect	count=1
arg	color ||| color expand	count=1
function_arg	[function_1] [arg_2] ||| testing [function_1] [arg_2]	count=1
class	calculate ||| bar widget	count=1
function	register itself ||| viewbox set	count=1
function	mapping from [function] coordinate frame ||| [function]	count=2
module	area bounding the ||| visuals	count=1
arg	specifies ||| line fo prev	count=1
class	friend method of ||| camera	count=1
function_arg	variables [arg_2] ||| [function_1] [arg_2]	count=1
arg	text and ||| text	count=1
function	initialize ||| init	count=1
function	uniforms to be able ||| uniforms	count=1
function	projection ||| projection	count=1
module	the ||| scene widgets	count=7
arg	[arg] backend ||| app [arg]	count=1
function	return the transform that ||| node transform	count=1
arg	text and [arg_2] ||| [arg_2] [arg_1]	count=2
class	set ||| base gloo functions	count=4
function	[function_1] the stencil ||| [function_2] [function_1]	count=3
class	[class] events in ||| [class]	count=3
module	arguments in [module_2] ||| [module_2] [module_1]	count=1
function	and uniforms ||| and uniforms	count=2
function	a glsl template ||| glsl	count=1
function	the rectangular ||| rect	count=1
module	asrgb8 and ||| ext	count=1
arg	to color array length ||| color	count=1
function	large represetation of ||| arg repr	count=1
class	and ||| reader	count=1
module	calculate ||| graphs layouts	count=1
module	a useful and not ||| gl	count=1
function	of vertices in ||| vertices	count=1
arg	size and format ||| shape format	count=1
class	events ||| canvas	count=1
function	specify the equation ||| set blend equation	count=1
function_arg	[function_1] state of ||| [arg_2] [function_1]	count=1
class	visual is about ||| visual	count=1
class	per :meth asdirect ||| reader	count=1
module	in a ||| scene widgets	count=1
function	height ||| height	count=3
module	leave ||| gloo	count=1
function	[function] seconds ||| win [function]	count=1
function_arg	source [arg_2] ||| [function_1] source [arg_2]	count=1
class	emitter is ||| event emitter	count=1
arg	y <==> ||| key	count=2
class	reset ||| base camera	count=1
function_arg	[function_1] filter ||| [function_1] [arg_2]	count=1
arg	state of a ||| state	count=1
function_arg	[function_1] of vertices ||| [arg_2] [function_1]	count=1
function	and not too ||| arg repr	count=1
module	out at the given ||| scene cameras	count=1
function	by :meth asrgb8 and ||| as rescale	count=1
function	write a [function_2] ||| [function_2] [function_1]	count=4
module	constants from pyopengl but ||| gloo gl	count=1
module_class	[module_1] [class_2] at *index* ||| [module_1] [class_2]	count=2
function_arg	data used ||| data pos	count=1
arg	checksum ||| tag data	count=1
class	emitter this ||| emitter	count=1
function	method to use ||| method	count=1
module	a useful and ||| gl	count=1
function	list mapping [function] ||| [function]	count=1
arg	y <==> [arg_2] ||| [arg_1] [arg_2]	count=1
module_class	[module_1] function and ||| [class_2] [module_1]	count=3
function	glsl ||| glsl	count=7
module_class	of all items in [module_1] [class_2] by 1 items whose ||| [module_1] [class_2]	count=1
function	require an [function_2] ||| [function_2] [function_1]	count=2
arg	app backend [arg_2] ||| [arg_2] [arg_1]	count=1
module	out the names ||| gloo gl	count=1
function	the natural logarithm ||| log	count=1
class	description other glir ||| glir	count=1
function_arg	configuration for ||| config c	count=1
arg	options for vispy specify [arg_1] [arg_2] backend ||| [arg_1] [arg_2]	count=1
function_arg	attach [arg_2] ||| [function_1] [arg_2]	count=1
module	pixel coordinate frame to ||| visuals	count=1
function	filter ||| filter	count=5
function	edge that [function_2] ||| [function_1] [function_2]	count=2
module	set the signature ||| visuals	count=1
module	function ||| shaders	count=1
function	get vispy ||| get vispy	count=2
function	of the current value ||| value	count=1
arg	update window connects ||| window callback	count=1
module	[module] which ||| [module]	count=1
module	or equal to ||| visuals collections	count=1
module	from the given ||| visuals	count=1
function	parse ||| parse	count=1
class	emit an event ||| event	count=1
class	this axis to a ||| axis widget	count=1
class	cube helix [class_2] ||| [class_1] [class_2]	count=4
class	size and ||| render buffer	count=1
function	when the program ||| enable	count=1
function	return [function] array showing ||| make diff [function]	count=1
function	path ||| path	count=1
function	stats ||| enable	count=1
arg	map coordinates parameters ||| coords	count=3
arg	a path p ||| p key	count=1
function	first [function_2] ||| [function_2] [function_1]	count=8
function	all objects quickly ||| objects fast	count=1
class	such that it maps ||| sttransform	count=1
function	value of the increment ||| increment	count=1
function_arg	buffers [arg_2] ||| [function_1] [arg_2]	count=1
class	to ||| base	count=1
arg	mesh data ||| fname vertices faces	count=2
module	for attributes and ||| gloo	count=1
function	[function_1] opposite ||| [function_1] [function_2]	count=1
function	[function_1] 3d arrow ||| [function_2] [function_1]	count=1
arg	given offset and ||| offset	count=1
function	get a useful ||| repr	count=1
function	[function_1] the clear ||| [function_2] [function_1]	count=2
module	the buffer ||| visuals	count=1
function	[function] of ||| border [function]	count=1
module	:meth asrgb8 and ||| _bundled	count=1
module	for this ||| gloo	count=1
arg	for the given duration ||| duration_sec	count=1
class	emitted ||| canvas	count=1
arg	data/size commands ||| commands	count=1
module	asrgb8 ||| _bundled	count=1
function	definition2 ||| find functions	count=1
module	names that ||| gl	count=1
function	and indices for ||| create grid	count=1
class	get a useful ||| debug	count=1
function	of template ||| template	count=1
arg	texture at a given ||| texture	count=1
class	per :meth asdirect method ||| reader	count=1
function_arg	[function_1] [arg_2] as a png file ||| [function_1] [arg_2]	count=4
module	the array ||| visuals	count=1
module	a list of transforms ||| transforms	count=1
class	cube [class_2] ||| [class_1] [class_2]	count=5
arg	a [arg] ||| [arg]	count=1
function	helper used by ||| rescale	count=1
function	vispy [function_2] ||| [function_2] [function_1]	count=2
function_arg	backend for [arg_2] ||| [function_1] [arg_2]	count=1
arg	a triangulated surface ||| vertices indices	count=1
function_arg	[function_1] to provide ||| [function_1] [arg_2]	count=1
function	when the program exits ||| enable	count=1
function	threshold value to apply ||| threshold	count=1
arg	the appearance or behavior ||| filt view	count=1
function	radius of ||| radius	count=1
function	load the webgl ||| load webgl	count=3
class	that is ||| base	count=1
function	[function] axis-angle ||| create [function]	count=1
function	[function_1] line of ||| [function_1] [function_2]	count=1
function	[function_1] the increment ||| [function_2] [function_1]	count=1
function_arg	convert hex to [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	of vertices in the ||| vertices	count=1
class	of the [class_2] ||| [class_2] [class_1]	count=1
function	for the scale ||| scale	count=1
function	the fps ||| fps	count=1
module_class	an ordered ||| ext _bundled ordered	count=1
module_class	[module_1] canvas ||| [module_1] [class_2] context	count=3
module	the render-buffer size ||| gloo	count=1
function	to register itself ||| viewbox	count=1
arg	region width [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] name ||| [function_1] [arg_2]	count=5
function	a pnm file containing ||| pnm	count=1
class	event in [class_2] ||| [class_2] [class_1]	count=4
function	exponent ||| exp	count=1
function	load the [function_2] ||| [function_1] [function_2]	count=3
class	on ||| arcball	count=1
function_arg	compute normals [arg_2] ||| [arg_2] [function_1]	count=1
function	time ||| time	count=1
module	the viewbox ||| cameras	count=1
class	this event in the ||| event	count=1
class	of a mesh previously ||| mesh	count=1
function	edges [function_2] ||| [function_2] [function_1]	count=2
module	mangled in [module_2] ||| [module_2] [module_1]	count=3
arg	a path p return ||| p key closed	count=1
class	simplified chain by ||| simplified chain transform	count=3
function	the center ||| center	count=2
module	the default state ||| scene cameras	count=1
module	the distance ||| scene cameras	count=2
class	the render-buffer ||| render buffer	count=1
function	[function_1] of gl ||| visuals compound visual [function_1] [function_2]	count=1
function	gl functions ||| gl	count=1
class	transformation matrix ||| matrix transform	count=1
module_class	of the [module_1] [class_2] ||| scene [module_1] [class_2]	count=2
function	value of ||| value	count=1
arg	[arg_1] offset and ||| [arg_1] [arg_2]	count=1
module_class	update the [module_1] [class_2] ||| [module_1] [class_2]	count=3
module	a full implementation of ||| color	count=1
function	whenever the clipper for ||| update clipper	count=1
module	of [module] underlying ||| [module]	count=1
function	fps ||| fps	count=2
module	transforms ||| transforms	count=3
arg	*obj* in ||| obj	count=1
function	tuple of ||| tuple	count=2
function	return true if this ||| data	count=1
function	of the increment ||| increment	count=1
function	width ||| width	count=4
function	the isosurface [function] the 3d ||| [function]	count=1
module	the same type linked ||| scene	count=1
class	mesh previously saved using ||| mesh	count=1
class	helix colormap a ||| helix colormap	count=2
class	camera should cover for ||| camera	count=1
module	by :meth asrgb8 and ||| ext _bundled	count=1
function	print ||| enable	count=1
class	transform [class_2] ||| [class_2] [class_1]	count=4
function	calling function from ||| caller	count=1
function	size used ||| size	count=1
class	frame [class_2] ||| [class_2] [class_1]	count=1
arg	a path p ||| p	count=1
function	pixel values in ||| read	count=1
function	retrieve vertices [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] gl state ||| visuals compound visual [function_1] [function_2]	count=1
module_class	the [class_2] ||| [module_1] [class_2] insert index	count=1
function_arg	[function_1] a b ||| [function_1] [arg_2]	count=2
module	the same type linked ||| scene cameras	count=1
function	value for the stencil ||| stencil	count=1
arg	color s from any ||| color expand	count=1
arg	used by ||| get	count=1
function	retrieve vertices and ||| get verts and	count=2
module	in ||| gloo gl	count=1
class	for this object ||| object	count=1
function	run ||| run	count=1
class	colormap a full ||| colormap	count=1
class	mouse ||| mouse	count=3
module_class	[module_1] [class_2] ||| [module_1] [class_2] process	count=16
arg	appearance or behavior ||| filt view	count=1
class	canvas to an ||| canvas	count=1
function	parent return ||| parent	count=1
arg	p return the ||| p key closed itemsize	count=1
module	incompatible [module] ||| [module]	count=2
function	type of ||| type	count=2
module	from pyopengl ||| gl	count=1
class	to reference this object ||| object	count=1
module_class	[module_1] node ||| [module_1] [class_2] clip	count=1
function	set of callback ||| callback	count=1
function	packs float [function] binary ||| pack [function]	count=1
class	an event ||| event	count=1
module	and not too large ||| gloo gl	count=1
module	not too large represetation ||| gl	count=1
module	not too large ||| gl	count=1
function	large ||| arg repr	count=1
function	write an array ||| write array	count=1
function_arg	function [arg_2] ||| [arg_2] [function_1]	count=1
function	below the current front ||| below front	count=1
class	[class_1] by ||| [class_2] [class_1]	count=4
arg	the source ||| source	count=1
module	[module] to apply ||| visuals [module]	count=3
function	data in this ||| set data	count=1
function	[function_1] type of ||| [function_2] [function_1]	count=1
function	an functioncall object ||| call	count=1
function_arg	return projection [arg_2] ||| [function_1] [arg_2]	count=8
function	attach a filter ||| attach	count=1
module	the output is a ||| visuals	count=1
function	errors ||| error	count=1
class	this emitter ||| emitter	count=2
function	exception and ||| exception	count=1
class	on the mouse ||| scene mouse	count=1
function	and return an functioncall ||| call	count=1
module	the final ||| visuals	count=1
module	the names ||| gloo gl	count=1
function	code and compiling+linking it ||| shaders	count=1
function	equation ||| set blend equation	count=1
class	:meth ||| reader	count=1
function	and ||| arg	count=1
function	view ||| view	count=1
function	arrow ||| arrow	count=1
function	opengl viewport this ||| viewport	count=1
module	represetation of ||| gloo gl	count=1
function	whenever the clipper ||| clipper	count=1
class	as the rate that ||| canvas	count=1
class	a useful and not ||| debug	count=1
function	be a valid variable ||| check variable	count=1
function	[function_1] a line ||| [function_2] [function_1]	count=1
module	the rate that events ||| app	count=1
module	pyopengl but leave out ||| gloo	count=1
function	the current value of ||| value	count=1
function	attributes and uniforms to ||| attributes and uniforms	count=1
function	[function_1] an ||| [function_1] [function_2] angle	count=1
arg	writing mesh [arg_2] ||| [arg_2] [arg_1]	count=6
arg	size ||| shape	count=1
arg	[arg_1] parameters ||| [arg_2] texture [arg_1]	count=4
module	to update the transform ||| scene cameras	count=1
function	used by :meth asrgb8 ||| as rescale	count=1
function	[function_1] arrow ||| [function_2] [function_1]	count=1
module	translation of this transform ||| transforms	count=1
arg	or raise error ||| valid_dict	count=1
function	backend for ||| backend	count=1
function_arg	[function_1] the logger ||| [function_1] [arg_2]	count=1
module	mangled in the final ||| visuals shaders	count=1
arg	start with 'gl' ||| constants	count=1
module	too large represetation of ||| gl	count=1
function	for errors [function_2] ||| [function_2] [function_1]	count=2
module	let ||| gl	count=1
class	path ||| path	count=1
module	generate the glsl ||| visuals	count=1
arg	of data ||| data bins color	count=1
module	names that are deprecated ||| gl	count=1
arg	im1 [arg_2] ||| [arg_2] [arg_1]	count=1
arg	the source [arg_2] ||| [arg_2] [arg_1]	count=1
class	method of ||| camera	count=1
class	subscene ||| pan zoom	count=1
arg	squares ||| connected extend_to_edge	count=1
class	the ||| render	count=1
module	if 0 the ||| scene	count=1
function	writes a tuple ||| write tuple	count=1
function	examples and ||| examples	count=1
module	method of ||| scene	count=1
module	asrgb8 ||| ext	count=1
function	create and set ||| create vertex	count=1
function	by :meth asrgb8 and ||| as	count=1
function_arg	exception and [arg_2] ||| [arg_2] [function_1]	count=1
arg	and format ||| format	count=1
function_arg	[function_1] used to ||| [arg_2] [function_1]	count=2
module	to register ||| cameras	count=1
function_arg	attach [arg_2] ||| [arg_2] [function_1]	count=1
function	send an exception ||| log exception	count=1
module	register itself ||| cameras	count=1
function	[function_1] and ||| [function_1] [function_2]	count=5
module	names that are deprecated ||| gloo	count=1
function_arg	[function_1] [arg_2] pixel format as a ||| [function_1] [arg_2]	count=6
arg	data/size commands that are ||| commands parser	count=1
function	the current [function] seconds ||| win [function]	count=1
module	rate that events ||| app	count=1
function	from ||| from	count=1
function_arg	__setitem__ i [arg_2] ||| [arg_2] [function_1]	count=2
module	get a useful ||| gloo gl	count=1
module	used [module] ||| [module]	count=2
module	get a useful and ||| gloo gl	count=1
class	describing whether the camera ||| camera	count=1
function	rename all objects quickly ||| rename objects fast	count=1
module	vertices and ||| geometry	count=1
function	unblock [function_2] ||| [function_1] [function_2]	count=2
function	of vertices ||| vertices	count=2
module_class	[module_1] meshvisual that ||| [module_1] [class_2]	count=6
function	zoom ||| zoom	count=1
class	set ||| data buffer	count=1
class	regular polygon ||| regular polygon visual	count=2
function	known color names returns ||| color names	count=1
class	asrgb8 ||| reader	count=1
function	represetation ||| arg	count=1
function	source ||| copy gl functions	count=1
module	generate the definition ||| visuals	count=1
function	a glsl template function ||| glsl	count=1
function	the path ||| path	count=1
module	or that we provide ||| gloo	count=1
class	camera in ||| turntable camera	count=1
module_class	of [module_1] [class_2] will inherit its clipper ||| [module_1] [class_2]	count=1
module	from the ||| visuals	count=2
module_class	the [class_2] ||| [module_1] cameras [class_2]	count=1
module	strings required [module] a ||| [module]	count=2
function	value of process as ||| value	count=1
arg	as isinstance [arg] array except ||| [arg]	count=1
module	used by :meth ||| ext _bundled	count=1
module	:meth ||| ext _bundled	count=2
module	used to determine the ||| scene	count=1
function	[function] format ||| arg [function]	count=1
function	[function_1] state ||| [function_2] [function_1]	count=5
module	the currently active canvas ||| gloo	count=1
function	set [function_2] ||| [function_1] [function_2]	count=12
function	the parent ||| parent	count=1
function	not ||| repr	count=1
function	clipper for ||| update clipper	count=1
arg	[arg_1] height ||| [arg_1] [arg_2]	count=4
module	an x * y ||| ext	count=1
module	to update the transform ||| scene	count=1
function	write the ||| write	count=1
module	useful and ||| gloo	count=1
arg	including length and checksum ||| tag data	count=1
function	helper used ||| as	count=1
function	vertices and connects ||| verts and	count=2
class	this axis ||| axis widget	count=1
module_class	in the grid ||| scene widgets grid	count=1
class	new linear constraint ||| constraint	count=1
module	too large ||| gloo gl	count=1
module	proxy for context ||| gloo	count=1
function	radius of curvature of ||| radius	count=1
function	the equation ||| blend equation	count=1
module	backend [module] use ||| [module]	count=1
module_class	[module_1] regular polygon ||| [module_1] [class_2]	count=2
arg	used ||| pos color width connect	count=1
module	that are deprecated or ||| gloo gl	count=1
function_arg	for straight [arg_2] ||| [function_1] vertices adjacency_mat [arg_2]	count=1
arg	data from ||| fname	count=1
class	this emitter [class_2] ||| [class_2] [class_1]	count=1
function	too large represetation of ||| repr	count=1
function_arg	[function_1] a filter ||| [function_1] [arg_2]	count=1
function	with the [function_2] ||| [function_2] [function_1]	count=1
module	that events draw is ||| app	count=1
class	connects and ||| isocurve	count=1
module	of [module] current ||| [module]	count=1
arg	using marching cubes algorithm ||| level	count=1
function	[function_1] power ||| [function_1] [function_2]	count=2
module	tests using ||| testing	count=1
class	knot or link ||| knot	count=3
class	set the render-buffer size ||| render buffer	count=1
function	the euler angles ||| euler angles	count=1
module	and [module] when ||| [module]	count=1
arg	p ||| p	count=1
class	provides "mod" with ||| canvas backend	count=1
function	relative step [function_2] ||| [function_1] [function_2]	count=4
arg	value ||| value	count=1
module	leave out ||| gloo gl	count=1
module	provide ||| gloo	count=1
module	the names ||| gl	count=1
function	undo [function_1] [function_2] ||| [function_2] [function_1]	count=3
module	get ||| gloo gl	count=2
arg	b onto [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	restore the [arg_2] ||| [arg_2] [function_1]	count=3
function	link this ||| link	count=1
class	program object that ||| program	count=1
module	we provide in ||| gloo gl	count=1
function	get the window id ||| get window id	count=1
function	[function] raises ||| print [function]	count=3
arg	parameters ||| data	count=1
module	mangled in ||| shaders	count=1
module_class	[module_1] canvas ||| [module_1] [class_2]	count=7
module	that we provide in ||| gloo	count=1
function	data ||| set data	count=3
arg	characters ||| font anchor_x anchor_y	count=1
function	[function] maps ||| [function]	count=1
function	list of current emitters ||| emitters	count=1
module	let ||| gloo gl	count=1
class	the glir ||| glir parser	count=1
module	viewbox ||| cameras	count=2
module	the signature ||| visuals	count=1
function	a png ||| png	count=1
function	the current value ||| value	count=1
module	but leave out the ||| gloo gl	count=1
function_arg	[function_1] position ||| [arg_2] [function_1]	count=2
class	render-buffer size ||| render	count=1
function	unit length ||| normalize	count=1
function	texture shape ||| texture shape	count=2
module	in our api ||| gl	count=1
module	using the ||| visuals	count=1
function_arg	[function_1] for sdl2 ||| [function_1] [arg_2]	count=1
class	deferred operation ||| data	count=1
function	instance [function] self ||| [function]	count=1
module	that are ||| gl	count=1
function	[function_1] region of ||| [function_1] [function_2]	count=3
function	[function_1] ends ||| [function_2] [function_1]	count=2
module	by ||| ext	count=1
module	and not too ||| gloo gl	count=1
function_arg	[function_1] infile ||| [arg_2] [function_1]	count=4
arg	an existing ||| parent key vertices indices	count=1
arg	may use ||| shader name	count=1
class	visible area expressed ||| pan zoom	count=1
function	specify the equation ||| blend equation	count=1
function	register ||| viewbox	count=1
module	this ||| visuals shaders	count=1
arg	commands and ||| commands	count=1
module	of ||| app	count=3
function	[function_1] value to ||| [function_2] [function_1]	count=2
module_class	the coordinate frame of [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	pop the whole ||| clear	count=2
function_arg	add an item ||| add item	count=1
function	register a class to ||| register	count=1
function	[function_1] gl ||| [function_2] [function_1]	count=1
function	if necessary a trns ||| palette	count=1
function	resize buffers ||| resize buffers	count=1
function	from [function_2] ||| [function_1] [function_2] angle	count=1
arg	of viewbox to ||| viewbox	count=1
class	camera should ||| camera	count=1
function	[function_1] color ||| [function_1] [function_2]	count=1
module	provide in our api ||| gloo gl	count=1
function	immediately prior to this ||| last	count=1
function	base that should be ||| base	count=1
arg	for writing mesh ||| vertices	count=1
class	for this object ||| shader object	count=1
arg	when [arg_1] [arg_2] ||| smoothstep [arg_1] [arg_2]	count=1
module	and constants from pyopengl ||| gl	count=1
module	useful and not too ||| gloo	count=1
arg	fmt this classmethod is ||| cls	count=1
function	current emitters ||| emitters	count=1
function	attach a filter to ||| attach	count=1
function	widget ||| widget	count=1
function	to create ||| create from	count=1
module_class	[module_1] glir ||| [module_1] [class_2]	count=2
arg	chunk to file ||| chunk	count=1
function	transform mapping from ||| transform	count=1
function	the euler [function_2] ||| [function_2] [function_1]	count=1
class	this event in the ||| mouse event	count=1
function_arg	[function_1] data from ||| [arg_2] [function_1]	count=2
module	the names that are ||| gloo	count=1
class	set ||| glir program	count=1
module	too large represetation of ||| gloo	count=1
function	method ||| viewbox set	count=1
module	of ||| scene	count=1
arg	classmethod to ||| cls	count=2
class	axis to ||| axis	count=1
arg	instance using ||| p	count=1
module_class	into the [class_2] ||| [module_1] [class_2]	count=1
class	to draw this visual ||| visual	count=1
arg	*code* ||| code	count=1
function	visual at a given ||| visual at	count=1
function	for the stencil ||| stencil	count=1
arg	body ||| cls obj body	count=1
function_arg	update [arg_2] ||| [function_1] [arg_2]	count=1
function	[function] of ||| get [function]	count=2
module	the default ||| scene cameras	count=1
arg	deferred operation ||| copy	count=1
arg	curve ||| p1 p2 p3	count=2
arg	existence of key in ||| key	count=1
function	return the [function] ||| find cut [function]	count=3
module	png ||| ext _bundled	count=1
module	decorator for tests that ||| testing	count=2
module	the margin border ||| scene	count=1
arg	produce ||| dv copy	count=1
arg	for a third order ||| p4	count=1
module	register ||| util	count=1
function_arg	[function_1] an item ||| [function_1] [arg_2]	count=1
arg	a new function ||| function update	count=1
class	regular ||| regular	count=1
function	vertices for straight ||| straight line vertices	count=1
arg	[arg_1] c arguments ||| [arg_2] [arg_1]	count=3
function	get the window ||| get window	count=2
class	camera ||| base camera	count=1
function	write a line of ||| write line	count=1
function	reads a tuple of ||| read tuple	count=1
function	triangulate a set ||| triangulate	count=1
function	define the [function_1] [function_2] ||| visuals compound visual [function_1] [function_2]	count=14
class	of the canvas ||| scene canvas	count=2
arg	the update window connects ||| window callback	count=1
function	each vertex ||| get vertex	count=1
module	that we provide in ||| gl	count=1
module	this ||| transforms	count=2
function	the clipper for this ||| update clipper	count=1
module	the glsl code needed ||| visuals	count=1
function	the window ||| window	count=1
module	constants from pyopengl but ||| gloo	count=1
module	to ||| visuals transforms	count=2
module	coordinate frame [module] ||| [module]	count=1
arg	and ||| get	count=1
function	gl state parameters ||| gl state	count=2
class	meshvisual that used ||| sphere visual	count=1
function	step [function_2] ||| [function_2] [function_1]	count=4
function	step size used ||| step size	count=2
module	that events draw ||| app	count=1
function_arg	opposite point [arg_2] ||| [function_1] [arg_2]	count=1
module_class	for this [class_2] ||| [class_2] [module_1]	count=3
arg	a = rgba ||| ipixels apixels ipsize apsize	count=1
class	of the widget ||| widget	count=1
function	packs float [function] binary representation ||| pack [function]	count=1
function_arg	the path [arg_2] ||| [function_1] [arg_2]	count=2
function	sleep for the ||| sleep	count=1
function	vertices and set ||| vertices	count=1
arg	method of viewbox to ||| viewbox	count=1
function	3d arrow using a ||| arrow	count=1
arg	[arg_1] logical pixel ||| [arg_2] [arg_1]	count=2
arg	[arg_1] and scroll ||| [arg_1] [arg_2]	count=1
function	string ||| string	count=1
function	variable ||| variable	count=1
arg	display ||| display name	count=1
function	to print stats ||| enable	count=1
function_arg	[function_1] this ||| [arg_2] [function_1]	count=1
function	get a useful and ||| arg	count=1
function	center point ||| center	count=1
function	convert user string or ||| string to	count=1
class	to register itself ||| base	count=1
function	picking mode returning a ||| picking	count=1
arg	given duration in ||| duration_sec	count=1
function	require an ||| requires	count=2
function	a callback ||| callback errors	count=1
function	if there is ||| current	count=1
class	grid this ||| grid	count=1
module	to update the ||| scene cameras	count=1
class	rotate the camera ||| camera	count=1
arg	im1 and [arg_2] ||| [arg_2] [arg_1]	count=1
function	register itself ||| viewbox	count=1
function	the webgl [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] of func ||| [function_1] [arg_2]	count=1
function	only tri that contains ||| tri	count=1
class	useful ||| debug proxy	count=2
arg	return true if *obj* ||| obj	count=1
function	the title of canvas/window ||| title	count=1
module	deprecated or that we ||| gl	count=1
function	generate a glsl template ||| glsl	count=1
module	[module_1] the final ||| [module_2] [module_1]	count=1
module	in ||| shaders	count=2
module	the axis ||| visuals	count=1
function	unload ||| unload	count=1
arg	order n ||| n	count=1
module	proxy for ||| gloo	count=1
class	visual [class_2] ||| [class_2] [class_1]	count=2
class	the ||| scene	count=4
arg	may use ||| shader	count=1
class	not too large ||| debug	count=1
arg	type specifies ||| type line fo prev	count=1
module_class	[module_1] node ||| [module_1] [class_2]	count=3
class	of ||| base camera	count=2
module	writer ||| ext _bundled	count=1
class	dictionary ||| dict	count=1
function	up [function_2] ||| ext _bundled pngfilters undo [function_2] [function_1] filter_unit scanline previous result	count=1
function	[function_1] attributes and ||| [function_1] [function_2]	count=2
function	function definition found ||| parse function	count=1
class	the rate that ||| canvas	count=1
module	return [module_2] ||| [module_2] [module_1]	count=2
class	event in the current ||| event	count=1
class	mesh ||| mesh data	count=3
module	provide in our api ||| gl	count=1
class	too large represetation of ||| debug	count=1
module_class	the object in ||| gloo globject	count=1
function	retrieve active attributes ||| get active attributes	count=2
function_arg	[function_1] *code* ||| [function_1] [arg_2]	count=1
function	this ||| add	count=1
function_arg	data [arg_2] ||| [arg_2] [function_1]	count=9
module	we provide in our ||| gloo	count=1
arg	p return the ||| p key closed	count=1
function	return next power ||| next power	count=2
arg	the ipython notebook ||| ipython	count=1
class	the mesh ||| mesh	count=3
function	transform ||| transform	count=7
function	only tri that contains ||| tri from	count=1
function	[function_1] filter ||| ext _bundled pngfilters undo [function_2] [function_1] filter_unit scanline previous result	count=3
module	[module_1] framebuffer ||| [module_1] [module_2]	count=1
function	ignore ||| ignore	count=2
function	large represetation of ||| arg	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=95
function	get a free region ||| get free region	count=1
function	returns the exponent ||| exp	count=1
class	this data ||| mesh data	count=1
class	description other glir implementations ||| glir	count=1
class	in this [class_2] ||| [class_2] [class_1]	count=3
module	to determine the ||| scene	count=1
arg	true if *edge* is ||| edge front_index	count=1
function	shading code ||| shaders	count=1
function	exception ||| exception	count=1
module	deprecated ||| gl	count=1
arg	for ||| c	count=1
function	with ||| with	count=1
function_arg	[function_1] used ||| [function_1] [arg_2]	count=2
function	for converting argument [function_1] [function_2] format suitable for 4x4 ||| visuals transforms arg [function_1] [function_2]	count=1
function	surface mesh ||| iso mesh	count=1
function	value associated with ||| value	count=1
arg	(*type*,*data*) tuple ||| seek lenient	count=1
module	to ||| visuals	count=17
function	the primary [function] of ||| [function]	count=1
function	add a new ||| add	count=1
class	that is equivalent ||| base	count=1
module	of this ||| transforms	count=2
function	to register ||| set	count=1
arg	data this method requires ||| data	count=1
function	render-buffer ||| resize	count=1
function	chunk by chunk and ||| chunk	count=1
arg	texture sampler value ||| value	count=1
module	if ||| geometry	count=1
function_arg	[function_1] [arg_2] ||| [function_1] source [arg_2]	count=1
function	[function_1] type ||| [function_1] sampler [function_2]	count=1
arg	[arg_1] < edge1 ||| [arg_2] [arg_1]	count=2
arg	a [arg_2] ||| [arg_1] [arg_2]	count=7
function	array and clip between ||| array clip	count=1
function	the convex [function_2] ||| [function_2] [function_1]	count=1
module	in a ||| widgets	count=1
function	the euler angles ||| from euler angles	count=2
function	inform listeners that ||| update	count=1
arg	p ||| p key closed itemsize	count=1
function	program ||| enable	count=1
class	the camera ||| fly camera	count=1
class	parameters ||| buffer	count=1
function	input file ||| file	count=1
class	as the ||| canvas	count=1
module	pyopengl but leave out ||| gl	count=1
function	[function_1] opposite point ||| [function_2] [function_1]	count=1
function	the orientation ||| orientation	count=1
function	delta ||| delta	count=1
class	log ||| log transform	count=1
class	in the buffer ||| buffer	count=1
module	events draw is emitted ||| app	count=1
function	float [function] binary representation ||| pack [function]	count=1
arg	deferred operation parameters ||| copy	count=1
module	view ||| cameras	count=1
module	an ||| geometry	count=1
module	modify the program ||| visuals	count=1
class	of a mesh ||| mesh	count=1
function	get the [function_2] ||| [function_2] [function_1]	count=8
function	the stencil ||| stencil	count=2
class	of canvas/window as the ||| canvas	count=1
module	from pyopengl but ||| gl	count=1
arg	a chunk to ||| chunk	count=1
module	leave out the names ||| gl	count=1
class	get ||| backend egl	count=1
module	get a ||| gloo gl	count=1
function	vispy config ||| get config	count=1
module	as the rate that ||| app	count=1
arg	data/size commands that ||| commands	count=1
class	[class_1] colormap a ||| [class_2] [class_1]	count=2
function	emitter that optionally ||| vispy	count=1
function	state parameters ||| state	count=1
function	quadratic [function_2] ||| [function_1] [function_2]	count=1
module	used by :meth asrgb8 ||| ext	count=1
module	of the internal transforms ||| transforms	count=1
module	[module_1] the ||| [module_2] [module_1]	count=12
module	the view ||| scene cameras	count=2
module	along the axis ||| visuals	count=1
module	not too ||| gl	count=1
module	the names ||| gloo	count=1
arg	to func ||| func	count=1
class	and description other glir ||| glir	count=1
function	[function_1] axis-angle representation ||| [function_1] [function_2]	count=1
function	mesh ||| mesh	count=3
module	of [module] ||| [module]	count=16
class	node ||| node	count=10
class	the emitter is ||| emitter	count=1
function	too large ||| repr	count=1
class	render-buffer ||| render buffer	count=2
function	line to match new ||| line	count=1
arg	set of vertices parameters ||| vertices	count=1
class	function and return ||| function	count=1
module	not too ||| gloo	count=1
module_class	process [module_1] [class_2] ||| [module_1] [class_2] process	count=4
function	the z-coord given ||| to z	count=1
arg	color array ||| color	count=1
function	a free ||| free	count=1
module	the graph ||| visuals	count=1
function	id of ||| id	count=1
module	always matches the ||| scene widgets	count=1
function	[function_1] part of ||| [function_2] [function_1]	count=1
module	in ||| ext _bundled	count=1
function	useful ||| arg	count=1
function_arg	backend for [arg_2] ||| [arg_2] [function_1]	count=1
module	of canvas/window ||| app	count=3
function	the glir parser ||| parser	count=1
function	data ||| data	count=8
class	all mouse ||| mouse event	count=1
class	and not too ||| proxy	count=1
class	this is a wrapper ||| gloo functions	count=1
class	too large represetation ||| proxy	count=1
function	vertices [function_2] ||| [function_2] [function_1]	count=3
function	attributes and [function_2] ||| [function_1] [function_2]	count=4
function	array of pixel ||| read	count=1
function	line of code ||| line	count=1
function	attributes [function_2] ||| [function_2] [function_1]	count=5
class	helper used ||| reader	count=1
arg	to provide ||| toolkitname	count=1
function	webgl ||| webgl	count=1
class	friend method ||| base	count=1
module_class	return [class_2] ||| [module_1] [class_2] normalized	count=2
module	to another object ||| visuals	count=1
class	cache ||| transform cache	count=1
function	visual [function_2] ||| [function_1] [function_2]	count=1
function	inject functions ||| inject	count=1
arg	2d vertices for ||| cls vertices color closed	count=1
module	the ||| visuals collections	count=4
function_arg	[function_1] chunk to ||| [arg_2] [function_1]	count=1
module	state to be the ||| scene	count=1
module	represetation of ||| gloo	count=1
function_arg	[function_1] provide ||| [function_1] [arg_2]	count=1
arg	new dimensions ||| row_span col_span	count=1
module	widgets in the ||| scene widgets	count=2
function_arg	[function_1] [arg_2] ||| [function_1] adjacency_mat [arg_2]	count=1
function_arg	[function_1] state ||| [function_1] [arg_2]	count=1
function	is [function_2] ||| [function_2] [function_1]	count=4
class	of segments ||| raw segment	count=1
class	queue and ||| glir queue	count=3
function	trace if a callback ||| callback	count=1
function_arg	first function [arg_2] ||| [function_1] [arg_2]	count=1
class	ellipse ||| rectangle	count=2
class	[class_1] and associated ||| [class_2] [class_1]	count=4
function	image pixels as ||| as	count=1
module	thick ||| visuals line	count=1
class	for the [class_2] ||| [class_2] [class_1]	count=1
function	window ||| window	count=1
function	converting argument [function] format ||| arg [function]	count=1
module_class	[module_1] matrix about ||| [module_1] [class_2]	count=2
function	attributes and ||| attributes and	count=2
class	glir commands are ||| glir queue	count=2
function_arg	set [arg_2] ||| [function_1] shaders [arg_2]	count=1
function	the transform that ||| node transform	count=1
class	this surface ||| surface	count=1
function	stdin ||| stdin	count=2
function	edge [function_2] ||| [function_1] [function_2]	count=2
function	set the view ||| set	count=1
function	bounds ||| bounds	count=2
function_arg	write a [arg_2] ||| [function_1] [arg_2]	count=6
class	[class] given ||| [class]	count=1
module	return ||| geometry	count=12
class	reset the camera ||| camera	count=1
function	callback ||| callback	count=2
module	that are deprecated ||| gl	count=1
function_arg	and indices [arg_2] ||| [arg_2] [function_1]	count=1
function	define [function_1] [function_2] ||| visuals compound visual [function_1] [function_2]	count=4
class	not too large represetation ||| proxy	count=1
module	or that we provide ||| gloo gl	count=1
module	useful and not too ||| gl	count=1
module	to modify the program ||| visuals	count=1
function	power ||| power	count=1
function_arg	[function_1] and fragment ||| [arg_2] [function_1]	count=1
function	valid variable ||| check variable	count=2
module	in the ||| scene widgets	count=2
function	a free region ||| free region	count=2
arg	see set_mapping for ||| cls x0 x1	count=1
arg	and gl ||| gl	count=1
arg	kind of order n ||| n	count=1
module	are deprecated or that ||| gloo	count=1
function	itself ||| viewbox	count=1
module	the clipping ||| visuals filters	count=2
module	an object ||| ext	count=1
class	visual parameters ||| base visual	count=2
function	[function_1] an array ||| [function_1] [function_2] outfile	count=1
module	to the ||| visuals transforms	count=1
class	in the writer object ||| writer	count=1
module	[module] coordinate ||| [module]	count=1
module	the output is ||| visuals	count=1
module	always matches the ||| scene	count=1
module	get a ||| gl	count=1
module	clipping ||| filters	count=1
module	the internal transforms ||| transforms	count=1
arg	p ||| p key closed	count=1
function	tuple of ||| write tuple	count=1
function_arg	projection of [arg_2] ||| [arg_2] [function_1]	count=8
class	[class_1] mouse ||| [class_2] [class_1]	count=3
function	path ||| node path	count=1
function	get a [function_2] ||| [function_1] [function_2]	count=5
function	next [function_2] ||| [function_2] [function_1]	count=2
function	add a widget as ||| add	count=1
function	return the transform ||| transform	count=1
class	deferred ||| data	count=1
class	object ||| globject	count=2
module	in our api ||| gloo	count=1
module_class	to this node ||| scene node	count=1
function	to print stats when ||| enable	count=1
module_class	of the widget ||| scene widgets widget	count=4
module_class	in the [class_2] ||| [module_1] [class_2]	count=6
arg	event ||| event	count=8
function_arg	increment [arg_2] ||| [function_1] value [arg_2]	count=4
function	and clip between ||| clip	count=1
module	of ||| gloo	count=1
module	the native ||| app	count=3
function	active attributes [function_2] ||| [function_1] [function_2]	count=5
class	of ||| camera	count=1
function	all objects quickly ||| objects	count=1
function	physical ||| physical	count=1
module	get ||| util dpi	count=3
module_class	[module_1] grid to ||| [module_1] [class_2]	count=3
arg	helper ||| t optimal	count=1
class	visual ||| line visual	count=1
arg	given a path p ||| p	count=1
class	[class_1] colormap ||| [class_1] [class_2]	count=2
class	that events draw ||| canvas	count=1
class	allocate to this widget ||| widget	count=1
function	[function_1] attributes and ||| [function_2] [function_1]	count=2
function	[function_1] variables ||| [function_1] [function_2]	count=5
function	half-dimensions measured from ||| halfdim	count=1
class	reset the camera ||| perspective camera	count=1
arg	offset x y z ||| offset dtype	count=1
module	not too large represetation ||| gloo	count=1
class	is emitted ||| canvas	count=1
class	node ||| visual node	count=1
class	and ||| debug	count=1
function	check this from time ||| check	count=1
arg	x ||| x	count=3
module	the rate ||| app	count=1
module	to the end of ||| visuals	count=1
class	queue and ||| glir queue share	count=2
module_class	of this [class_2] ||| [module_1] [class_2]	count=4
function	write an array in ||| write array	count=1
arg	options for vispy specify [arg_1] [arg_2] backend ||| use [arg_1] [arg_2]	count=1
module	render-buffer ||| gloo	count=1
function	vertex position ||| pos	count=1
function	is opposite ||| opposite	count=1
function	write [function_2] ||| [function_2] [function_1]	count=5
arg	dest ||| dest	count=1
function	return array of pixel ||| read	count=1
module	this ||| util	count=1
module	names using the ||| visuals	count=1
function_arg	[function_1] func with ||| [arg_2] [function_1]	count=1
module	indicates whether the ||| util	count=1
class	transform ||| magnify transform	count=1
function	reset ||| reset	count=1
module	helper ||| _bundled	count=1
module	too large represetation ||| gloo	count=1
module	stats ||| util	count=1
function	set of gl state ||| set gl state	count=1
function	shading code and compiling+linking ||| shaders	count=1
function	size of ||| size	count=2
function	depth [function_2] ||| [function_1] [function_2]	count=4
function	of gl state ||| gl state	count=2
module	used ||| _bundled	count=1
module	framebuffer ||| transforms	count=1
module_class	[module_1] cache ||| [module_1] [class_2]	count=1
function_arg	backend [arg_2] ||| [arg_2] [function_1]	count=1
arg	progress bar ||| local_file progress	count=2
function_arg	and indices [arg_2] ||| [function_1] mesh [arg_2]	count=1
function	create a [function_2] ||| [function_1] [function_2]	count=3
function	convert a [function_2] ||| [function_1] [function_2]	count=4
module	write ||| ext _bundled	count=1
function	set pyos_inputhook to null ||| inputhook	count=1
function	the threshold value to ||| threshold	count=1
module	instances to ||| util	count=1
module	from pyopengl but ||| gloo	count=1
module_class	the glir commands ||| gloo glir queue	count=1
module	friend method of ||| scene cameras	count=1
module	of ||| gl	count=1
arg	[arg_1] [arg_2] ||| [arg_1] local_file [arg_2]	count=3
module	mangled in the ||| visuals shaders	count=2
function	the color of the ||| color	count=1
function	actual height of ||| height	count=1
function_arg	triangulate [arg_2] ||| [arg_2] [function_1]	count=1
function	not too large ||| arg	count=1
class	a wrapper for ||| base gloo functions	count=1
class	the camera view ||| camera	count=1
function	used ||| as	count=1
function_arg	plot a [arg_2] ||| [arg_2] [function_1]	count=3
module	provide in our api ||| gloo	count=1
class	the rate that events ||| canvas	count=1
function	load ||| load	count=3
class	scalar array ||| isocurve	count=1
module	useful and not too ||| gloo gl	count=1
function	the set of callback ||| callback	count=1
arg	an argument ||| arg	count=1
arg	of a [arg_2] ||| [arg_1] [arg_2]	count=7
class	of the camera ||| turntable camera	count=1
function	view on ||| view	count=1
class	values in an attached ||| frame	count=1
function_arg	[function_1] i ||| [function_1] [arg_2]	count=5
arg	viewbox to ||| viewbox	count=1
function	get [function_2] ||| [function_2] [function_1]	count=9
module	places ||| layouts	count=2
module_class	on this [class_2] ||| [module_1] [class_2]	count=1
class	[class_1] helix ||| [class_1] [class_2]	count=1
function	the input file ||| file	count=1
arg	return true [arg_2] ||| [arg_2] [arg_1]	count=4
module	the final code ||| visuals	count=1
module	large ||| gloo gl	count=2
module	size ||| gloo	count=1
class	get ||| view box	count=1
module	type for all function ||| shaders	count=1
class	sttransform ||| sttransform	count=1
class	friend method of ||| base camera	count=1
arg	provide the ||| toolkitname	count=1
function	line of code to ||| line	count=1
arg	instead of the ||| increment_value	count=1
function	get a ||| arg repr	count=1
function	gl functions from libgl ||| gl	count=1
module	the same ||| scene cameras	count=1
function	used by ||| rescale	count=1
arg	color [arg] an nx3 ||| [arg]	count=1
class	cube [class_2] ||| [class_2] [class_1]	count=5
function	the window [function_2] ||| [function_2] [function_1]	count=4
function	if this ||| data	count=1
arg	func with the ||| func	count=1
function	reset the view ||| reset	count=1
function	vertices and connects from ||| verts and	count=1
function	[function_1] labels ||| [function_1] [function_2]	count=4
class	glir implementations may ||| glir program	count=2
function_arg	[function_1] screen buffers ||| [arg_2] [function_1]	count=1
module	the horizontal ||| scene	count=1
arg	a texture sampler value ||| value	count=1
function	y center point ||| center	count=1
function	an fbo ||| fbo	count=1
function	line of ||| line	count=1
arg	position parameters ||| pos	count=1
arg	region width ||| width	count=1
arg	of [arg_2] ||| [arg_2] [arg_1]	count=2
arg	attribute data this method ||| name data	count=1
arg	viewbox ||| viewbox	count=1
module	for all function ||| visuals shaders	count=1
function	radius of curvature ||| radius	count=1
arg	key in dict ||| key	count=1
class	for this widget may ||| widget	count=1
module	entities if the ||| scene	count=1
function	template variables ||| parse template	count=1
module	attach to ||| visuals	count=1
function	viewport ||| viewport	count=1
class	a useful ||| debug	count=1
arg	update window connects ||| window	count=1
function	requested file ||| file	count=1
function	[function_1] type ||| [function_2] [function_1]	count=1
arg	the color [arg] an ||| [arg]	count=1
module	large represetation of ||| gl	count=1
function	the glir queue ||| glir	count=2
arg	produce a ||| dv copy	count=1
module	and constants from pyopengl ||| gloo gl	count=1
arg	and size [arg_2] ||| [arg_2] [arg_1]	count=1
class	useful and not too ||| proxy	count=1
function	value ||| value	count=2
module	frame [module] coordinate frame ||| [module]	count=1
function_arg	[function_1] provide the ||| [arg_2] [function_1]	count=1
class	emit an event while ||| event	count=1
function	used for depth buffer ||| set depth	count=1
function	first function ||| function signature	count=1
function	[function_1] [function_2] axis-angle representation ||| [function_1] [function_2] angle	count=1
arg	data this method ||| data	count=1
arg	source into [arg_2] ||| [arg_1] [arg_2]	count=1
class	values of this visual ||| region visual	count=1
class	a useful and not ||| proxy	count=1
function	scanlines from [function_2] ||| [function_2] [function_1]	count=2
function	iterates over the names ||| iter	count=1
module	from pyopengl ||| gloo gl	count=1
function	send an exception and ||| log exception	count=1
module_class	[module_1] list ||| [module_1] shaders statement [class_2]	count=1
function	type of the sampler ||| sampler type	count=2
function	convert a ||| convert	count=1
class	[class_1] hooks by ||| [class_2] [class_1]	count=1
arg	values using ||| val	count=2
function	argument [function] ||| arg [function]	count=1
arg	by :meth ||| get	count=1
function	and connects from ||| and	count=1
module	print stats when the ||| util	count=1
function	the ||| enable	count=1
function	components parameters ||| set	count=1
function_arg	resize [arg_2] ||| [arg_2] [function_1]	count=5
function	vertices and ||| vertices	count=1
arg	the source into the ||| source	count=1
module	api ||| gloo gl	count=1
function	read ||| read	count=2
class	and ||| buffer	count=1
module	to rgb8 ||| io	count=1
function	for a quadratic ||| curve3	count=1
module	of this transform by ||| transforms	count=1
class	provides "mod" ||| canvas backend	count=1
function	[function_1] state to ||| [function_1] [function_2]	count=1
module_class	[module_1] subscene ||| [module_1] cameras [class_2]	count=1
module	callback to print stats ||| util	count=1
function	sleep for ||| sleep	count=1
arg	state ||| state	count=1
arg	this will cause other ||| row col row_span	count=1
function	errors [function_2] ||| [function_2] [function_1]	count=2
class	matrix ||| matrix transform	count=1
class	given a triangle ||| triangulation	count=1
function	[function_1] bezier ||| [function_2] [function_1]	count=4
module	return state information for ||| ext	count=1
function_arg	[function_1] pixels ||| [function_1] scanlines interlace [arg_2]	count=1
function	to [function_2] ||| [function_2] [function_1]	count=1
module	helper used by :meth ||| _bundled	count=1
module	the margin ||| scene	count=1
function	command ||| command	count=2
function	rectangular ||| rect	count=1
arg	classmethod ||| cls rx	count=1
module_class	the relative ||| visuals volume visual	count=1
arg	center ||| factor center	count=1
arg	edge1 ||| edge1	count=1
function	the primary [function] of the ||| [function]	count=1
class	meshvisual ||| box	count=1
arg	length and checksum ||| tag data	count=1
arg	a b [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function] raises an ||| print [function]	count=3
module	not ||| gl	count=1
function_arg	for straight [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] instance using ||| [arg_2] [function_1]	count=3
arg	specifies the ||| line fo prev	count=1
class	array ||| array	count=4
class	queue and associated queues ||| glir queue	count=2
function	represetation ||| arg repr	count=1
arg	center parameters ||| factor center	count=1
class	a mouse drag operation ||| mouse	count=1
module	rate that events draw ||| app	count=1
function	[function_1] screen clear ||| [function_1] [function_2]	count=1
module	circular area bounding the ||| visuals transforms	count=1
function	the clear value for ||| clear	count=2
arg	classmethod is the entry ||| cls	count=1
function	rename all objects quickly ||| rename objects	count=1
function	of the texture ||| texture	count=1
arg	new function into ||| function update	count=1
arg	of order n arguments ||| n	count=1
class	provides "mod" with many ||| backend	count=1
arg	the color [arg] ||| [arg]	count=1
arg	vertices for ||| cls vertices	count=1
class	axis to a ||| axis	count=1
function	the clipper for this ||| clipper	count=1
function	set ||| set	count=30
function	represetation of ||| arg	count=1
arg	update ||| y z colors	count=1
function	from [function] coordinate ||| [function]	count=2
function	sub [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] free ||| [function_1] [function_2]	count=1
function	undo [function_1] [function_2] ||| ext _bundled pngfilters undo [function_2] [function_1] filter_unit scanline previous result	count=3
function	set of gl ||| set gl	count=1
module	that we provide ||| gl	count=1
function	helper ||| as rescale	count=2
function	mesh ||| iso mesh	count=1
class	helix colormap ||| helix colormap	count=2
class	camera view ||| perspective camera	count=1
class	code [class] executed ||| [class]	count=1
module	to search ||| io	count=1
class	input hooks ||| input hook	count=2
class	camera ||| camera	count=9
arg	classmethod ||| cls rx ry rz	count=1
function	edge that is ||| edge	count=1
module	vertices and stores ||| geometry	count=1
class	the camera view using ||| perspective camera	count=1
function	given the euler angles ||| euler angles	count=1
class	a useful ||| proxy	count=1
class	ratio ||| texture font	count=1
function_arg	set the [arg_2] ||| [arg_2] [function_1]	count=1
module_class	[module_1] function ||| [class_2] [module_1]	count=3
arg	window connects the draw ||| window	count=1
function	setting of replacements through ||| setitem	count=1
function_arg	[function_1] a ||| [arg_2] [function_1]	count=2
arg	p return ||| p key closed	count=1
function	[function_1] in ||| [function_2] [function_1]	count=1
function_arg	[function_1] callback ||| [function_1] [arg_2]	count=1
class	transformsystem ||| system	count=1
class	emitters in this group ||| emitter group	count=1
module	widgets in ||| widgets	count=1
class	size ||| render	count=1
module	[module] scene ||| [module]	count=2
module	the list is ||| gloo	count=1
function	get ||| repr	count=1
function	pnm ||| pnm	count=1
function	set a [function_2] ||| [function_1] [function_2]	count=2
class	current mouse drag ||| mouse	count=1
module	helper used ||| _bundled	count=1
arg	from an existing collection ||| parent key vertices indices	count=1
function	[function_1] backend for ||| [function_1] [function_2]	count=3
function	returns the natural logarithm ||| log	count=1
arg	buffer this ||| index	count=1
module	constants from pyopengl ||| gloo gl	count=1
function	[function_1] image library ||| [function_2] [function_1]	count=1
module	the local ||| visuals	count=3
class	set the render-buffer size ||| render	count=1
module_class	[module_1] variable ||| [class_2] [module_1]	count=3
module	bounding the ||| visuals transforms	count=1
function_arg	[function_1] [arg_2] ||| [function_1] shaders [arg_2]	count=4
arg	[arg_1] edge1 ||| [arg_2] [arg_1]	count=2
class	draw is ||| canvas	count=1
function	egl ||| egl	count=1
module_class	[module_1] collection ||| [module_1] [class_2]	count=2
function	automatically configure the ||| configure	count=1
function	[function_1] error ||| [function_1] [function_2]	count=1
function	the opengl viewport ||| viewport	count=1
function	color ||| color	count=4
function	too large represetation of ||| arg repr	count=1
module	not too ||| gloo gl	count=1
function	in degrees above ||| elevation	count=1
function_arg	draw [arg_2] ||| [arg_2] [function_1]	count=1
class	in this surface plot ||| surface plot	count=1
function	the threshold value ||| threshold	count=1
class	between ||| base camera	count=1
module	this transform ||| transforms	count=2
function	mapping ||| mapping	count=1
function	[function_1] state parameters ||| visuals compound visual [function_1] [function_2]	count=2
function_arg	an array [arg_2] ||| [function_1] [arg_2]	count=2
class	the code [class] executed remotely ||| [class]	count=1
class	set the texture ||| base texture	count=1
function	relative step size ||| relative step size	count=2
function_arg	[function_1] in *code* ||| [function_1] signature [arg_2]	count=1
module	data in ||| _bundled	count=1
function	callback ||| enable	count=1
module	to ||| io	count=2
arg	when [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
module	colour ||| ext _bundled	count=1
function	physical size of the ||| physical size	count=1
function_arg	[function_1] [arg_2] format as a png ||| [function_1] [arg_2]	count=4
function	free [function_2] ||| [function_1] [function_2]	count=4
function	window id ||| window id	count=2
module	this transform [module_2] ||| [module_2] [module_1]	count=1
function	friend method ||| viewbox	count=1
module	get a ||| gloo	count=1
function_arg	resize buffers [arg_2] ||| [function_1] [arg_2]	count=1
module	or sent them away ||| gloo	count=1
function	register ||| viewbox set	count=1
class	represetation of ||| debug	count=1
function	template [function_2] ||| [function_2] [function_1]	count=1
arg	p ||| p key	count=1
function	start profiling and register ||| enable profiling	count=1
function_arg	bezier [arg_2] ||| [function_1] [arg_2]	count=2
module	to framebuffer ||| visuals transforms	count=1
class	canvas to ||| canvas	count=1
function	error ||| error	count=1
module	:meth asrgb8 ||| ext _bundled	count=1
class	rate that events draw ||| canvas	count=1
arg	the screen buffers ||| stencil	count=1
class	canvas/window as ||| canvas	count=1
arg	2d vertices [arg_2] ||| [arg_2] [arg_1]	count=2
arg	system of *node* ||| node	count=1
module	are deprecated or that ||| gl	count=1
arg	[arg_1] transform ||| [arg_2] [arg_1]	count=2
module	pyopengl but ||| gloo gl	count=1
module	function ||| visuals shaders	count=1
class	rect ||| rect	count=4
module	friend method ||| scene	count=1
function	callback ||| callback errors	count=1
arg	i ||| tri i	count=1
module	set the ||| gloo	count=2
arg	update window ||| window callback	count=1
module_class	[module_1] gui ||| [module_1] [class_2]	count=2
function_arg	write [arg_2] ||| [arg_2] [function_1]	count=5
function	returns the norm ||| norm	count=1
function	of template [function_2] ||| [function_2] [function_1]	count=1
function	clear value for the ||| clear	count=2
function_arg	[function_1] chunk ||| [arg_2] [function_1]	count=1
arg	path p return ||| p key closed	count=1
module	deprecated ||| gloo	count=1
function	[function_1] and uniforms ||| [function_2] [function_1]	count=3
module	the inverse ||| visuals transforms	count=1
function_arg	file infile ||| file scanlines infile	count=1
arg	glir commands and ||| commands	count=1
class	render-buffer size ||| buffer	count=1
arg	of 2d vertices ||| vertices	count=1
arg	a new function into ||| function update	count=1
arg	nx4 ||| rgbs	count=1
function	[function_1] bezier ||| [function_1] [function_2]	count=4
module	return ||| shaders	count=2
function	[function_1] the clear ||| [function_1] [function_2]	count=2
function	plane ||| plane	count=1
function	signature : [(arg_name arg_type), ||| args	count=1
class	mouse ||| mouse event	count=1
function	[function_1] variable ||| [function_2] [function_1]	count=4
function	text ||| text	count=1
module	the z axis ||| scene	count=1
function	not too large ||| arg repr	count=1
class	meshvisual [class_2] ||| [class_1] [class_2]	count=1
function_arg	attach a [arg_2] ||| [function_1] [arg_2]	count=1
function	load the ||| load	count=2
function	boundaries ||| clipper	count=1
function	the iris dataset ||| iris	count=1
module	stop ||| backends ipython	count=1
arg	vertices ||| vertices color	count=1
arg	given a path p ||| p key closed	count=1
function	get the [function_2] ||| [function_1] [function_2]	count=8
arg	edge0 ||| edge0	count=1
module	the isosurface render ||| visuals	count=1
function_arg	parent change [arg_2] ||| [function_1] [arg_2]	count=1
module	of the [module] in ||| [module]	count=1
module	this transform by ||| transforms	count=1
arg	key ||| key	count=1
function_arg	[function_1] data ||| [arg_2] [function_1]	count=4
function	subprocess ||| subprocess	count=1
class	this axis ||| axis	count=1
class	for the canvas ||| scene canvas	count=2
function	method of ||| viewbox	count=1
module	names that are ||| gl	count=1
function	write [function_2] ||| [function_1] [function_2]	count=3
arg	type ||| type	count=1
arg	of a [arg_2] ||| [arg_2] [arg_1]	count=7
module	the names that are ||| gl	count=1
function	the minimum height ||| height min	count=1
class	canvas/window ||| canvas	count=3
arg	im1 and im2 ||| im1 im2	count=1
function	[function_1] axis-angle representation ||| [function_2] [function_1]	count=1
module	vispy visuals ||| visuals	count=2
function	the current [function] ||| win [function]	count=1
class	useful and not ||| proxy	count=1
function	quadratic bezier ||| curve3 bezier	count=2
arg	list of commands ||| commands	count=1
function	[function_1] variable ||| [function_1] [function_2]	count=4
module	to [module] ||| [module]	count=7
module	to be the ||| scene	count=1
function	texture to the ||| texture	count=1
function	iterkeys() ||| iterkeys	count=1
module	the type of ||| visuals	count=1
function_arg	register [arg_2] ||| [arg_2] [function_1]	count=1
function	set the vertex and ||| set	count=1
function	create and set positions ||| create vertex	count=1
module	return state ||| ext	count=1
function	glir queue ||| glir	count=2
module	should ||| scene cameras	count=1
arg	classmethod to ||| cls rx	count=1
function	inject functions and constants ||| inject	count=1
arg	or attribute data this ||| name data	count=1
module	too large represetation ||| gl	count=1
module	frame [module] coordinate ||| [module]	count=1
function	up [function_2] ||| [function_2] [function_1]	count=1
class	the glir ||| base glir parser	count=1
module	to register itself ||| cameras	count=1
class	as ||| canvas	count=1
function	widget that occupies ||| widget	count=1
function	represetation ||| repr	count=1
function_arg	[function_1] *code* ||| [function_1] signature [arg_2]	count=1
function_arg	[function_1] event ||| [arg_2] [function_1]	count=9
module_class	this function ||| shaders function	count=1
class	camera should cover ||| camera	count=1
function	the screen clear ||| clear	count=1
class	this [class] do ||| [class]	count=1
class	render-buffer size and ||| render buffer	count=1
arg	to color array ||| color	count=1
function	inject functions and ||| inject	count=1
module	using the ||| scene cameras	count=1
module_class	glfw [class_2] ||| [module_1] [class_2]	count=4
function	argument [function] format suitable ||| arg [function]	count=1
function	code ||| shaders	count=1
function	coverage parameters parameters ||| coverage	count=1
function	the convex ||| convex	count=1
arg	screen buffers ||| depth stencil	count=1
function	value to use in ||| value	count=1
function	get a [function_2] ||| [function_2] [function_1]	count=5
function	error and ||| error	count=1
function	euler angles ||| euler angles	count=1
arg	y <==> od[i]=y ||| key value dict_setitem	count=2
function	bytes required to store ||| itemsize	count=1
function	iterates over the ||| iter	count=1
function	of ||| viewbox set	count=1
module	callback to print ||| util	count=1
function	picking mode returning ||| picking	count=1
function	shading code and ||| shaders	count=1
function	vertices for ||| vertices	count=1
function	of ||| repr	count=1
function	a useful ||| arg repr	count=1
class	the render-buffer ||| buffer	count=1
function	rotate a ||| rotate	count=1
function_arg	[function_1] [arg_2] ||| [function_1] scanlines interlace [arg_2]	count=1
class	node and its ||| node	count=1
module	leave out the names ||| gloo	count=1
function	ticks and major ||| tick frac	count=1
function	for every ||| trail	count=1
module	whether the ||| util	count=1
class	to register ||| base camera	count=1
module	[module] to ||| visuals [module]	count=3
class	queue ||| queue share	count=1
function	outer radii of ||| radii	count=1
module	to ||| util	count=5
module	[module] from these ||| [module]	count=3
class	this surface plot ||| surface plot	count=1
function	stencil ||| stencil	count=4
class	the emitter this ||| event emitter	count=1
function	depth value to ||| depth value	count=2
function	the axis-angle representation ||| axis angle	count=1
module	an ||| ext	count=6
arg	y <==> [arg_2] ||| [arg_2] [arg_1]	count=1
module_class	the texture ||| gloo texture emulated3d	count=1
module	the isosurface ||| visuals	count=1
module_class	for this [class_2] ||| [module_1] [class_2]	count=5
module	[module_1] the final ||| [module_1] [module_2]	count=1
class	represetation ||| debug	count=1
module	to print ||| util	count=1
class	and not ||| debug proxy	count=1
function	attributes ||| attributes	count=1
function	interpolation for minification ||| interpolation	count=1
arg	given a path p ||| p key closed itemsize	count=1
function_arg	mesh [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	source [arg_2] ||| [arg_2] [function_1]	count=1
module	the transform parameters ||| scene cameras	count=1
function	the [function] maps ||| [function]	count=1
module_class	bounding the [class_2] ||| [module_1] [class_2]	count=2
class	and not too ||| debug	count=1
class	too large represetation ||| debug	count=1
class	glir ||| glir parser	count=1
class	the render-buffer ||| render	count=1
class	[class_1] hooks ||| [class_2] [class_1]	count=1
module	coordinate frame [module] coordinate ||| [module]	count=1
function	create a [function_2] ||| [function_2] [function_1]	count=3
function	list system fonts returns ||| list fonts	count=1
class	plot ||| plot widget	count=1
class	of ||| proxy	count=1
arg	a class to provide ||| toolkitname	count=1
function	depth [function_2] ||| [function_2] [function_1]	count=4
function	application ||| application	count=1
class	camera ||| turntable camera	count=2
function_arg	set the [arg_2] ||| [function_1] shaders [arg_2]	count=1
function	helper used by :meth ||| as	count=1
function	data in ||| data	count=1
module	:meth asrgb8 and ||| ext	count=1
module	by an ||| util	count=1
function	:meth ||| rescale	count=1
class	method of ||| base	count=1
arg	of 2d vertices for ||| cls vertices color closed	count=1
function_arg	[function_1] [arg_2] ||| [function_1] mesh [arg_2]	count=2
module	using the ||| scene	count=1
arg	path p return ||| p key closed itemsize	count=1
module_class	the [class_2] ||| [module_1] [class_2] roll	count=1
module	that are deprecated ||| gloo	count=1
arg	see set_mapping for details ||| cls x0 x1	count=1
function	a line ||| line	count=1
function	box ||| box	count=1
function	colormap ||| cmap	count=2
function	interpolation for ||| interpolation	count=1
module_class	of [module_1] [class_2] will inherit its clipper ||| [module_1] [class_2] clip	count=1
function	[function_1] size used ||| [function_1] [function_2]	count=2
function_arg	change [arg_2] ||| [function_1] [arg_2]	count=1
module	to ||| scene	count=1
class	to this grid ||| grid	count=1
arg	asrgb8 ||| get	count=1
class	[class_1] that ||| [class_2] [class_1]	count=1
module	es ||| gloo gl	count=1
function_arg	configuration for sdl2 ||| config c	count=1
module	by :meth asrgb8 and ||| _bundled	count=1
module	internal transforms ||| transforms	count=1
function	[function] a ||| [function] euler	count=1
arg	a given axis ||| axis	count=1
class	and orientation ||| base3drotation	count=1
function	subscene instance [function] self ||| [function]	count=1
class	[class_1] of ||| [class_2] [class_1]	count=2
module	arguments in ||| shaders	count=1
module_class	thick [class_2] ||| [module_1] [class_2]	count=1
module	transforms ||| visuals transforms	count=1
function	an exception and traceback ||| exception	count=1
arg	type [arg_2] ||| [arg_2] [arg_1]	count=2
module	are incompatible [module] from these ||| [module]	count=1
function	to ||| set	count=1
class	the glir ||| base glir	count=1
module	that are ||| gloo	count=1
arg	array showing the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
module	the names that ||| gloo gl	count=1
function	rectangular border ||| rect	count=1
function	size of the ||| size	count=1
class	the transformsystem * canvas_transform ||| transform system	count=1
class	and ||| glir	count=2
module	keyboard modifiers glfw ||| app backends	count=1
arg	this ||| row	count=1
module	from pyopengl but leave ||| gloo gl	count=1
arg	third order ||| p4	count=1
class	coordinate frame ||| transform system	count=1
function	vertices for a quadratic ||| curve3	count=1
function_arg	valid variable name ||| check variable name	count=1
function	buffers from ||| buffers	count=1
function	setting of replacements ||| setitem	count=1
class	camera should cover ||| perspective camera	count=1
function	triangle mode used to ||| mode	count=1
function	position of this ||| pos	count=1
function	first component line of ||| first component	count=1
function	interleave ||| interleave	count=1
function	function that samples the ||| sample	count=2
class	of this visual ||| linear region visual	count=1
module	strings required [module] a variable ||| [module]	count=2
module	at the given ||| scene cameras	count=2
function	below [function_2] ||| [function_2] [function_1]	count=1
arg	name ||| name	count=1
class	to register ||| camera	count=1
function	tree ||| tree	count=2
arg	decorator ||| func	count=3
function	calculate ||| calculate	count=1
function_arg	[function_1] a 2d ||| [arg_2] [function_1]	count=1
function	an exception and traceback ||| log exception	count=1
function	[function_1] as a ||| [function_1] [function_2]	count=1
module_class	[module_1] array ||| [module_1] [class_2]	count=1
class	new transform that is ||| base transform	count=1
module	the inverse ||| visuals	count=1
module	mangled in [module_2] ||| [module_1] [module_2]	count=3
class	queue [class_2] ||| [class_2] [class_1]	count=16
class	queue and associated ||| glir queue	count=3
class	friend ||| camera	count=1
function	the current front ||| front	count=1
function	add a ||| add	count=1
module	from pyopengl ||| gloo	count=1
module	of canvas/window as ||| app	count=1
function	[function_1] id of ||| [function_2] [function_1]	count=3
module	the currently ||| gloo	count=1
class	in the collection ||| collection	count=1
module	to ||| visuals collections	count=1
module	view using the ||| scene cameras	count=1
function	the fps of canvas/window ||| fps	count=1
arg	traceback to the logger ||| level tb_skip	count=1
function_arg	normals over [arg_2] ||| [function_1] [arg_2]	count=1
class	other glir ||| glir	count=2
function	isosurface [function] the 3d ||| [function]	count=1
class	ellipse ||| ellipse	count=3
arg	[arg_1] c ||| [arg_1] [arg_2]	count=3
function	active attributes and ||| active attributes and	count=3
function	get ||| get	count=18
function	parent [function_2] ||| [function_2] [function_1]	count=1
module	constants from pyopengl but ||| gl	count=1
function	stats when the ||| enable	count=1
class	[class_1] plot ||| [class_2] [class_1]	count=3
function	return projection ||| projection	count=1
function	opposite [function_2] ||| [function_2] [function_1]	count=1
function_arg	function definition [arg_2] ||| [arg_2] [function_1]	count=1
arg	p return ||| p key	count=1
function	[function_1] uniforms ||| [function_2] [function_1]	count=4
function	edges [function_2] ||| [function_1] [function_2]	count=2
function	line and ||| line	count=1
module_class	the collection ||| visuals collections collection	count=1
module	the graph ||| visuals graphs	count=1
arg	a new function ||| function	count=1
arg	nx4 ||| labs	count=1
arg	out the ||| out	count=1
module	out the names ||| gl	count=1
class	this node and its ||| visual node	count=1
class	the transformsystem * canvas_transform ||| system	count=1
function	friend method of ||| set	count=1
function	for straight ||| straight	count=1
module	the horizontal x z ||| scene cameras	count=1
class	and associated queues ||| glir	count=2
arg	floats to func ||| func	count=1
arg	*obj* ||| obj	count=2
function	edge that is opposite ||| edge opposite	count=1
arg	and :meth asrgba8 ||| get targetbitdepth	count=1
function	interpolation ||| interpolation	count=1
function	opposite ||| opposite	count=1
module	get/set the ||| scene	count=1
module	to register itself ||| scene cameras	count=1
function_arg	[function_1] [arg_2] ||| [function_1] vertices [arg_2]	count=2
function	[function_1] a pnm ||| [function_1] [function_2]	count=1
function	represetation of ||| repr	count=1
function_arg	[function_1] canvas ||| [arg_2] [function_1]	count=1
module	when ||| util	count=1
function	of ||| arg	count=1
module	the initial ||| visuals	count=1
module	the ||| visuals transforms	count=14
class	description other glir implementations ||| glir program	count=1
function	the [function] ||| [function] gl	count=1
function	texture [function_2] ||| [function_2] [function_1]	count=1
class	to ||| base camera	count=2
arg	render-buffer size ||| shape	count=1
function	title ||| title	count=1
function	a 3d arrow using ||| arrow	count=1
function	examples ||| examples	count=1
function	[function_1] color information ||| [function_2] [function_1]	count=1
function	active attributes and uniforms ||| active attributes and uniforms	count=1
function	rotate [function_2] ||| [function_2] [function_1]	count=1
arg	source ||| source	count=1
function	helper ||| as	count=1
module	in [module_2] ||| [module_1] [module_2]	count=3
class	a wrapper ||| gloo functions	count=1
function	[function] seconds with ||| win [function]	count=1
function	pop an fbo from ||| pop fbo	count=1
class	widget may need ||| widget	count=1
arg	update the progress bar ||| local_file progress	count=1
function	and ||| rescale	count=1
function	step ||| step	count=1
module_class	[module_1] [class_2] at *index* ||| [module_1] [class_2] insert index	count=2
function	relative step size used ||| relative step size	count=1
function	pyos_inputhook as a ||| inputhook as	count=1
module	get ||| gloo	count=1
arg	canvas parameters ||| canvas	count=1
module	glyph corresponding to ||| visuals	count=1
class	event loop for ||| input hook	count=1
function	major labels ||| tick frac labels	count=2
arg	writing mesh data ||| fname vertices faces	count=2
class	to reference this object ||| shader object	count=1
module	in ||| widgets	count=2
function	first component line ||| first component	count=1
function_arg	register a [arg_2] ||| [function_1] [arg_2]	count=2
function	the render-buffer ||| resize	count=1
class	size ||| buffer	count=1
function_arg	[function_1] for ||| [arg_2] [function_1]	count=1
module	or that we ||| gloo gl	count=1
arg	of [arg_2] ||| [arg_2] bins [arg_1]	count=2
function	a tuple of numbers ||| write tuple	count=1
module_class	[module_1] cache ||| [module_1] [class_2] roll	count=1
class	the current [class] size ||| [class]	count=1
arg	pixels ||| pixels	count=1
module_class	of the [module_1] [class_2] ||| [module_1] [class_2]	count=2
arg	command ||| command	count=2
function	random ||| random	count=1
arg	when a dependency's expression ||| dep code_changed value_changed	count=1
function	transform that ||| node transform	count=1
class	scalar array ||| isosurface	count=1
function	generates boxed rows in ||| scanlines	count=1
module	to the end ||| visuals collections	count=1
module_class	[module_1] varying ||| [class_2] [module_1]	count=1
module	deprecated or ||| gloo	count=1
class	array data ||| data buffer	count=1
function	a valid [function_2] ||| [function_1] [function_2]	count=1
function_arg	mesh data from ||| mesh fname	count=1
function	all timers in a ||| timers	count=1
class	to register itself ||| camera	count=1
function	the norm ||| norm	count=1
module	a useful and not ||| gloo	count=1
class	canvas ||| canvas	count=10
function	activate/use ||| activate	count=1
class	event loop for a ||| input hook manager	count=1
module	to print stats ||| util	count=1
module	or that we provide ||| gl	count=1
arg	or attribute data ||| name data	count=1
class	indicating whether the emitter ||| event emitter	count=1
module	return ||| ext	count=1
module_class	return [class_2] ||| [module_1] [class_2]	count=4
module	leave out the names ||| gloo gl	count=1
module	the input ||| visuals transforms	count=1
module	method of ||| scene cameras	count=1
function	the euler ||| euler	count=1
module	the ||| gloo gl	count=1
function	register a ||| register	count=1
class	the emitter ||| emitter	count=1
module_class	transform [class_2] ||| visuals [module_1] [class_2]	count=3
class	too large ||| debug	count=1
arg	instead of ||| increment_value	count=1
function	with the [function_2] ||| [function_1] [function_2]	count=1
class	camera view using ||| perspective camera	count=1
module_class	that this [class_2] ||| [module_1] [class_2]	count=2
module	leave out ||| gl	count=1
class	object in ||| globject	count=1
function	rgba uint8s ||| rgb	count=1
module	corresponding to ||| visuals text	count=1
module	we provide ||| gloo	count=1
arg	color ||| color	count=1
function	used by ||| as	count=1
arg	or nx4 ||| rgbs	count=1
module	helper used ||| ext _bundled	count=1
module	out the ||| gl	count=1
function	to calculate ||| calculate	count=1
function	write the given ||| write	count=1
module	texture coords from the ||| visuals	count=1
arg	c ||| c	count=1
arg	alpha blending ||| mode_rgb mode_alpha	count=1
function	and not too large ||| arg repr	count=1
function	remove ||| remove	count=1
function	parent ||| parent	count=2
module	when the program exits ||| util	count=1
arg	state of ||| state	count=1
arg	an item ||| item	count=2
function	below [function_2] ||| [function_1] [function_2]	count=1
function	whenever the clipper for ||| clipper	count=1
arg	lines between nodes ||| adjacency_mat node_coords directed	count=1
function	current [function] seconds ||| win [function]	count=1
class	meshvisual that ||| box visual	count=2
arg	whether the given node ||| node	count=1
class	isocurves ||| isoline	count=1
arg	a given offset and ||| offset	count=1
arg	[arg] hex ||| [arg]	count=1
function	the program ||| enable	count=1
class	for gl ||| base	count=1
function	glsl [function_2] ||| [function_1] sampler [function_2]	count=3
class	[class_1] group ||| [class_1] [class_2]	count=9
function	and outer radii ||| radii	count=1
module	method ||| cameras	count=1
function	load [function_2] ||| [function_2] [function_1]	count=3
class	node and its ||| visual node	count=1
module	useful ||| gloo gl	count=2
module	in a layout ||| scene widgets	count=1
arg	given offset [arg_2] ||| [arg_2] [arg_1]	count=1
module	of vertices to the ||| visuals	count=5
function	tuple ||| read tuple	count=2
function	translate ||| translate	count=1
class	of all mouse ||| mouse event	count=1
function	signature ||| signature	count=1
function_arg	normals [arg_2] ||| [function_1] [arg_2]	count=1
module	the definition ||| visuals	count=1
function	q parameter ||| q	count=1
module_class	this frame buffer ||| gloo frame buffer	count=1
module	from the given shape ||| visuals	count=1
function	source ||| gl functions	count=1
class	an item from ||| item	count=1
class	[class_1] plot ||| [class_1] [class_2]	count=3
function	component ||| component	count=1
function	node is ||| is	count=1
module	two entities if the ||| scene	count=1
function	method of ||| set	count=1
class	get a useful and ||| debug	count=1
module	the data in ||| _bundled	count=1
function	from the input file ||| file	count=1
class	a mouse drag ||| mouse	count=1
module	helper ||| ext	count=1
function	minor radius ||| minor radius	count=1
arg	c arguments are point ||| c	count=1
arg	signature of func with ||| func	count=1
class	new transform [class_2] ||| [class_2] [class_1]	count=4
class	[class_1] current mouse ||| [class_2] [class_1]	count=2
class	segments ||| segment	count=2
class	the camera in ||| turntable camera	count=1
function	check for errors returns ||| get error	count=1
function	out ||| write chunks	count=1
module	if two ||| geometry	count=1
function	friend method of ||| viewbox set	count=1
function_arg	the stencil [arg_2] ||| [function_1] [arg_2]	count=4
function	euler angles ||| from euler angles	count=2
function	chain [function_2] ||| [function_2] [function_1]	count=2
module	from pyopengl but leave ||| gloo	count=1
arg	series of data using ||| data color symbol line_kind	count=1
class	visible area expressed in ||| pan zoom camera	count=1
arg	showing the differences between [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
class	the ||| visual	count=1
class	[class_1] hooks by ||| [class_1] [class_2]	count=1
module_class	[module_1] array ||| [module_1] collections [class_2] list reserve	count=1
function	the gl functions from ||| gl	count=1
module	pyopengl but ||| gloo	count=1
arg	onto points2 ||| points2	count=1
arg	window connects the draw ||| window callback	count=1
module	set of [module] ||| [module]	count=3
arg	given duration ||| duration_sec	count=1
arg	points1 [arg_2] ||| [arg_1] [arg_2]	count=1
class	this widget may need ||| widget	count=1
function	send an exception and ||| exception	count=1
arg	position ||| pos	count=1
class	of this [class] in ||| [class]	count=1
arg	when [arg] < ||| [arg] edge1	count=1
function	vispy config [function_2] ||| [function_1] [function_2]	count=1
function	the depth buffer parameters ||| set depth	count=1
function	unblock all emitters in ||| unblock all	count=1
function	rename [function_2] ||| [function_1] [function_2]	count=2
function	size and ||| resize	count=1
module	of input arguments in ||| shaders	count=1
arg	texture [arg_2] ||| [arg_1] [arg_2]	count=2
class	generate a simplified ||| simplified	count=1
function	rendering ||| framebuffer	count=1
function	an exception and ||| exception	count=1
function	of the [function] ||| [function]	count=2
function	[function_1] region ||| [function_2] [function_1]	count=3
arg	about a given axis ||| axis	count=1
module_class	[module_1] event ||| [module_1] [class_2]	count=2
arg	the progress bar ||| local_file progress	count=2
arg	classmethod is ||| cls	count=1
module	of ||| color	count=2
function_arg	quadratic bezier [arg_2] ||| [arg_2] [function_1]	count=1
class	the camera ||| perspective camera	count=2
function	chain ||| chain	count=1
function_arg	[function_1] [arg_2] ||| [function_1] subprocess [arg_2]	count=1
arg	fname [arg_2] ||| [arg_2] [arg_1]	count=4
arg	instead ||| increment_value	count=1
arg	source into the ||| source	count=1
function_arg	[function_1] display ||| [arg_2] [function_1]	count=1
class	in this [class_2] ||| [class_1] [class_2]	count=3
function	system fonts returns ||| fonts	count=1
class	transformsystem * canvas_transform maps ||| system	count=1
module	update the transform ||| scene	count=1
arg	a 2d ||| tex	count=1
module	size and ||| gloo	count=1
function	webgl backend for ||| webgl backend	count=2
arg	writing mesh data to ||| fname vertices faces	count=1
arg	text [arg_2] ||| [arg_1] [arg_2]	count=2
arg	texture at [arg_2] ||| [arg_1] [arg_2]	count=3
function	state parameters to ||| state	count=1
function	first function definition found ||| function signature	count=1
function	necessary a trns ||| palette	count=1
function	buffer base ||| base	count=1
function	size [function] and viewport ||| update [function]	count=1
function	the [function] ||| [function] opposite	count=2
function	from these [function] ||| [function]	count=3
module	in ||| gl	count=1
arg	2d vertices for ||| cls vertices	count=1
function_arg	[function_1] lines between ||| [function_1] vertices adjacency_mat [arg_2]	count=2
class	the camera view ||| perspective camera	count=1
function	nf 3 of vertices ||| vertices	count=1
class	containing the log ||| log transform	count=1
arg	differences between [arg] ||| [arg]	count=2
class	provides ||| backend	count=1
function	time in ||| time	count=1
module_class	[module_1] [class_2] the same area but ||| [module_1] [class_2] normalized	count=1
function	useful and not ||| repr	count=1
class	[class_1] helix ||| [class_2] [class_1]	count=1
module_class	list of objects that [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	[function_1] gl state ||| [function_2] [function_1]	count=1
class	retrieve ||| isocurve visual	count=1
module	increment the ||| visuals	count=1
arg	called by subclasses ||| tr	count=1
function	a tuple of ||| read tuple	count=1
function	in the central region ||| mag	count=1
arg	source into [arg_2] ||| [arg_2] [arg_1]	count=1
class	parameters ||| render	count=1
arg	translated by *a* ||| a	count=1
arg	to callback and return ||| callback	count=1
class	and associated ||| glir	count=2
module	by ||| ext _bundled	count=2
module	not too large represetation ||| gloo gl	count=1
arg	of viewbox ||| viewbox	count=1
arg	return true if *edge* ||| edge front_index	count=1
class	commands ||| queue	count=2
function	indicating whether [function] of ||| clip [function]	count=1
function_arg	[function_1] triangulated surface ||| [arg_2] [function_1]	count=2
arg	the render-buffer ||| shape	count=1
module	out at the ||| scene	count=1
function	required to store ||| itemsize	count=1
function	[function] of ||| font [function]	count=3
arg	to callback and ||| callback	count=1
function	function definition ||| parse function	count=1
class	visual ||| region visual	count=1
function	vertices and ||| verts and	count=2
class	method of ||| base camera	count=1
function	ratio ||| ratio	count=1
class	used by ||| reader	count=1
arg	backend ||| backend	count=1
class	this visual is ||| visual	count=1
module	a useful and ||| gloo	count=1
class	the [class_2] ||| [class_2] [class_1]	count=3
module	rate ||| app	count=1
function	attach a ||| attach	count=2
module	an object providing a ||| ext	count=1
module	for ||| gloo	count=5
module	names that ||| gloo	count=1
module_class	[module_1] [class_2] ||| [module_1] collections [class_2] list reserve	count=1
arg	data to obj ||| fname	count=1
arg	using provided transform ||| transform viewport	count=2
class	represetation of ||| proxy	count=1
function	png ||| png	count=1
arg	current [arg] of ||| [arg]	count=1
class	bessel ||| bessel	count=1
module	but ||| gl	count=1
function	normals over ||| normals	count=1
function	paeth ||| paeth	count=1
class	is ||| base glir parser	count=1
module	or ||| gl	count=1
function	physical [function_2] ||| [function_1] [function_2]	count=4
module	useful and ||| gl	count=1
function	line to ||| line	count=1
class	[class_1] helix colormap ||| [class_1] [class_2]	count=1
function	[function_1] region of ||| [function_2] [function_1]	count=3
function_arg	template variables [arg_2] ||| [function_1] [arg_2]	count=1
class	the ||| canvas	count=4
class	the canvas or currently ||| scene canvas	count=1
function	for a quadratic bezier ||| curve3 bezier	count=1
module	that ||| gloo	count=2
module	the horizontal ||| scene cameras	count=1
arg	[arg_1] and im2 ||| [arg_2] [arg_1]	count=1
function	print stats when ||| enable	count=1
class	set the ||| buffer	count=1
function	[function_1] intersect ||| [function_1] [function_2]	count=1
function	and major [function_2] ||| [function_1] [function_2]	count=1
function	calculate ||| calc	count=1
function_arg	maps [arg_2] ||| [arg_2] [function_1]	count=2
module_class	this chain ||| transforms chain	count=2
class	log ||| log	count=1
module_class	[module_1] variable ||| [module_1] [class_2]	count=3
module	a useful and not ||| gloo gl	count=1
function	method of ||| viewbox set	count=1
function	retrieve active ||| get active	count=1
class	to emit an event ||| event	count=1
arg	[arg_1] onto points2 ||| [arg_2] [arg_1]	count=1
class	for this widget ||| widget	count=1
class	register itself ||| base camera	count=1
module	get ||| ext _bundled	count=1
function	[function_1] value ||| [function_2] [function_1]	count=2
function	if a callback ||| callback errors	count=1
function	[function_1] is opposite ||| [function_1] [function_2]	count=1
module_class	[module_1] path ||| [module_1] [class_2]	count=2
function	handler parameters ||| on	count=7
function_arg	[function_1] fragment ||| [arg_2] [function_1]	count=1
arg	[arg_1] height ||| [arg_2] [arg_1]	count=4
class	set in the writer ||| writer	count=1
function	texture to the current ||| texture	count=1
class	object in the ||| globject	count=1
function	size in points ||| size	count=3
function_arg	[function_1] y <==> ||| [arg_2] [function_1]	count=1
function	next [function_2] ||| [function_1] [function_2]	count=2
function	a useful and ||| arg	count=1
module	when the program ||| util	count=1
module	input arguments in ||| shaders	count=1
function	[function_1] angles ||| [function_2] [function_1]	count=3
module	maps from the ||| visuals	count=1
arg	by some angle about ||| angle	count=1
module	by ||| _bundled	count=1
arg	[arg_1] data to ||| [arg_2] [arg_1]	count=8
arg	function ||| function	count=2
function	specify multisample [function] ||| set sample [function]	count=2
function	write a line ||| write line	count=3
function	the render-buffer size ||| resize	count=1
class	friend ||| base camera	count=2
module	to [module_2] ||| [module_1] [module_2]	count=1
module	[module_1] by the ||| [module_2] [module_1]	count=3
class	that ||| visual	count=2
function	up filter ||| filter up	count=1
function	return the transform that ||| transform	count=1
function	a tuple ||| read tuple	count=1
function	and ||| arg repr	count=1
function_arg	set a [arg_2] ||| [function_1] texture [arg_2]	count=2
class	glir commands are printed ||| glir queue	count=1
module	the output ||| visuals shaders	count=1
function	relative step ||| relative step	count=1
module	code used [module] ||| [module]	count=2
function	vertices ||| line	count=1
function	vispy config ||| config	count=1
function	describing the path ||| node path	count=1
function	convert [function_2] ||| [function_2] [function_1]	count=9
module	the input ||| visuals	count=1
module	leave out the ||| gl	count=1
function	callback to ||| enable	count=1
arg	[arg_1] [arg_2] ||| [arg_2] bins [arg_1]	count=2
function_arg	[function_1] exists ||| [arg_2] [function_1]	count=1
function	[function_1] current front ||| [function_2] [function_1]	count=2
module	text ||| scene widgets	count=1
arg	a given offset ||| offset	count=1
arg	path p return ||| p key	count=1
arg	fmt this classmethod ||| cls	count=1
function	set a sub-region ||| set subdata	count=2
arg	app backend ||| backend	count=1
class	each line strip ||| scrolling lines visual	count=1
function	line ||| line	count=5
function	link ||| link view	count=2
class	an item from an ||| item	count=1
function	configure ||| configure	count=1
class	that the camera should ||| camera	count=1
class	widget may need to ||| widget	count=1
arg	path p ||| p key	count=1
module	this ||| shaders	count=6
function	require an [function_2] ||| [function_1] [function_2]	count=2
module	the initial ||| visuals text	count=1
function	the font [function_2] ||| [function_1] [function_2]	count=3
arg	source into ||| source	count=1
arg	the given duration ||| duration_sec	count=1
arg	used to display ||| pos symbol size edge_width	count=1
class	by ||| reader	count=1
function	to ||| to	count=1
arg	the given node ||| node	count=1
function	2 ||| 2	count=1
function	size of the canvas/window ||| size	count=1
function	actual height ||| height	count=1
function	has changed ||| changed	count=2
module	friend method ||| scene cameras	count=1
function_arg	a point [arg_2] ||| [function_1] [arg_2]	count=1
arg	the progress ||| progress	count=1
function	maps ||| mapping	count=1
function_arg	[function_1] [arg_2] ||| [function_1] value [arg_2]	count=20
function	get a ||| arg	count=1
function	tuple of numbers on ||| write tuple	count=1
function	a valid [function_2] ||| [function_2] [function_1]	count=1
module	is ||| gloo	count=1
module	are incompatible [module] from ||| [module]	count=1
arg	[arg_1] size ||| [arg_2] [arg_1]	count=4
arg	fragment ||| vert frag	count=1
function	instance [function] self if ||| [function]	count=1
class	useful and ||| debug	count=1
function_arg	[function_1] instead ||| [function_1] value [arg_2]	count=5
function	below the [function_2] ||| [function_1] [function_2]	count=1
module	or that ||| gl	count=1
arg	writing mesh ||| vertices	count=1
function_arg	[function_1] a canvas ||| [arg_2] [function_1]	count=2
function_arg	[function_1] position parameters ||| [function_1] [arg_2]	count=2
module	coordinate frame [module_1] [module_2] coordinate frame ||| [module_1] [module_2] transform system	count=1
module	data as [module] rgb ||| [module]	count=1
function	attributes [function_2] ||| [function_1] [function_2]	count=5
function	create and ||| create vertex	count=1
function	uniforms ||| uniforms	count=1
function	attributes and [function_2] ||| [function_2] [function_1]	count=4
function	edges ||| edges	count=2
function	[function_1] angles ||| [function_1] [function_2]	count=3
module	leave ||| gl	count=1
arg	given offset ||| offset	count=1
class	a mesh previously ||| mesh	count=1
function	title of canvas/window ||| title	count=1
module	property indicates whether the ||| util	count=1
module	widget ||| scene widgets	count=7
function	write a ||| write	count=3
class	whether the camera ||| base camera	count=1
module	render-buffer size and ||| gloo	count=1
function	create and set positions ||| create	count=1
function_arg	path [arg_2] ||| [function_1] [arg_2]	count=2
class	angle of the camera ||| camera	count=2
arg	particular ||| extra_arg_string coverage	count=1
function	helper used by ||| as rescale	count=1
function_arg	sleep for [arg_2] ||| [arg_2] [function_1]	count=2
class	into ||| texture atlas	count=1
function	[function] maps from ||| [function]	count=1
function_arg	normals [arg_2] ||| [arg_2] [function_1]	count=1
class	elements ||| array	count=1
class	other glir ||| glir program	count=2
class	queue and associated queues ||| glir queue share	count=1
class	events draw is ||| canvas	count=1
class	transformsystem * ||| transform system	count=1
arg	a (*type*,*data*) tuple ||| seek lenient	count=1
function	texture [function_2] ||| [function_1] [function_2]	count=1
class	the [class_2] ||| [class_1] [class_2]	count=3
function_arg	edges intersect [arg_2] ||| [arg_2] [function_1]	count=1
module	frame to ||| visuals	count=2
arg	or attribute data ||| data	count=1
function	measure for the scale ||| scale	count=1
function_arg	[function_1] buffer this ||| [function_1] [arg_2]	count=7
module	for *dep* if the ||| visuals	count=1
function_arg	mapping [arg_2] ||| [arg_2] [function_1]	count=2
function	scanlines from an array ||| array scanlines	count=1
arg	c arguments ||| c	count=1
class	application ||| application	count=1
module	call on this ||| app	count=1
class	parameters ||| base	count=1
function	glsl type ||| glsl sampler type	count=1
function	helper used ||| rescale	count=1
arg	color s from any ||| color expand clip	count=1
function	[function] of this ||| [function]	count=1
function	the width ||| width	count=2
function	configuration ||| config	count=2
function	map ||| map	count=1
function	triangle mode ||| mode	count=1
function	parent change ||| parent change	count=2
function	the texture to ||| texture	count=1
arg	screen buffers this is ||| stencil	count=1
class	event in ||| event	count=2
function_arg	[function_1] vertices parameters ||| [function_1] [arg_2]	count=1
function	the fps of ||| fps	count=1
module	itself ||| scene	count=1
module_class	thick [class_2] ||| [module_1] agg [class_2]	count=1
class	chain [class_2] ||| [class_2] [class_1]	count=1
arg	particular [arg_2] ||| [arg_2] [arg_1]	count=2
function	trace if a callback ||| callback errors	count=1
arg	a filter ||| filt	count=1
function	mix ||| mix	count=1
function_arg	[function_1] position parameters ||| [arg_2] [function_1]	count=2
module	and constants from pyopengl ||| gloo	count=1
function_arg	intersect [arg_2] ||| [function_1] edge1 [arg_2]	count=1
class	such that ||| sttransform	count=2
function	labels ||| labels	count=1
module_class	[module_1] grid ||| [module_1] widgets [class_2]	count=1
function	restore the ||| restore	count=1
class	this ||| emitter	count=3
module	to use ||| visuals	count=1
function	camera in use by ||| camera	count=1
function	[function_1] nt ||| [function_1] ready [function_2]	count=1
function	to register itself ||| viewbox set	count=1
module	transform ||| transforms	count=1
module	*dep* if the ||| visuals	count=1
class	[class_1] commands ||| [class_2] [class_1]	count=1
function	is part ||| is dragging	count=2
function	program ||| program	count=1
function	zoom in or ||| zoom	count=1
arg	color array length ||| color	count=1
function	[function_1] the sampler ||| [function_2] [function_1]	count=4
class	of this event ||| mouse event	count=1
function	parent [function_2] ||| [function_1] [function_2]	count=1
module	constants ||| gloo gl	count=1
class	matrix ||| matrix	count=1
function_arg	[function_1] used ||| [arg_2] [function_1]	count=2
arg	true if *obj* ||| obj	count=1
arg	[arg_1] offset ||| [arg_2] [arg_1]	count=1
module	serialize ||| app backends	count=1
function	region of given size ||| region	count=1
class	and not too large ||| debug	count=1
arg	texture at ||| texture	count=1
module	the native application ||| app	count=1
function	[function_1] posix ||| [function_1] ready [function_2]	count=1
function	resize a ||| resize	count=1
arg	the render-buffer size and ||| shape	count=1
function	a point ||| point	count=1
function	an array ||| array	count=3
function_arg	[function_1] given duration ||| [arg_2] [function_1]	count=1
function	outer radii ||| radii	count=1
class	[class_1] commands ||| [class_1] [class_2]	count=1
function	size ||| size	count=3
function	line to match ||| line	count=1
module	widgets in [module_2] ||| [module_2] [module_1]	count=1
function_arg	[function_1] vertices ||| [function_1] [arg_2]	count=1
function	minimum [function_2] ||| [function_2] [function_1]	count=2
function	[function] the ||| [function]	count=3
function	value to use ||| value	count=1
class	helper used by ||| reader	count=1
module	maps from the ||| visuals transforms	count=1
arg	face ||| face	count=1
function	triangle that ||| triangle	count=1
arg	text and [arg_2] ||| [arg_1] [arg_2]	count=2
module_class	[module_1] such that ||| visuals [module_1] [class_2]	count=1
arg	point for writing mesh ||| vertices	count=1
function	and indices ||| create	count=1
arg	method of viewbox ||| viewbox	count=1
function	changed ||| subtr changed	count=1
function	es 2 ||| gl	count=1
arg	[arg_1] x < ||| smoothstep [arg_1] [arg_2]	count=1
module	not too large ||| gloo	count=1
module	used ||| ext _bundled	count=2
module_class	[module_1] ordered dictionary ||| [module_1] [class_2]	count=2
module_class	the native gui ||| app application	count=1
function	:meth ||| as rescale	count=2
module	the local ||| scene	count=1
module	will generate ||| geometry	count=1
arg	of an argument ||| arg	count=1
module	provide ||| gl	count=1
function	a valid ||| check	count=1
function	blocked for the given ||| blocked	count=1
function	order in which ||| order	count=1
module_class	in [module_1] [class_2] ||| [module_1] [class_2]	count=4
module	in our ||| gloo gl	count=1
module	out ||| gloo gl	count=1
class	register ||| base camera	count=2
function	fps of canvas/window ||| fps	count=1
function	[function_1] blend ||| [function_1] [function_2]	count=1
class	or for the ||| scene	count=1
function	hex strings ||| hex	count=1
class	used by :meth asrgb8 ||| reader	count=1
function	command [function_2] ||| [function_1] [function_2]	count=1
function	opengl viewport this is ||| viewport	count=1
arg	backend [arg] ||| app [arg]	count=1
module	that we ||| gl	count=1
module	helper to ||| util	count=2
function	normals ||| normals	count=2
function	major [function_2] ||| [function_2] [function_1]	count=1
function	below ||| below	count=1
class	to draw this visual ||| line visual	count=1
arg	data parameters ||| data	count=1
function	natural logarithm ||| log	count=1
arg	*name* is ||| name shaders	count=1
function	of current emitters ||| emitters	count=1
class	rate that events ||| canvas	count=1
module	to another ||| visuals	count=1
arg	color s from ||| color expand	count=1
module	required [module] a ||| [module]	count=2
arg	color s ||| color	count=1
module	[module] faces ||| [module]	count=2
function	[function_1] arrow ||| [function_1] [function_2]	count=1
module	out the ||| gloo	count=1
function	line and processes it ||| line	count=1
function	a quadratic ||| curve3	count=1
function_arg	sleep [arg_2] ||| [arg_2] [function_1]	count=1
function	a view on ||| view	count=1
function	angles ||| angles	count=1
function_arg	timer [arg_2] ||| [function_1] [arg_2]	count=1
module	to register itself ||| scene	count=1
arg	= rgba ||| ipixels apixels ipsize apsize	count=1
function_arg	[function_1] func ||| [function_1] [arg_2]	count=1
module	generate the ||| visuals	count=3
arg	of vertices ||| vertices	count=1
module	[module] event ||| [module]	count=3
module	an object ||| ext _bundled	count=1
function	valid [function_2] ||| [function_1] [function_2]	count=1
class	bordervisual ||| border	count=1
arg	and ||| shape	count=1
module	and ||| gloo gl	count=3
module	too large ||| gloo	count=1
function	writes a tuple of ||| write tuple	count=1
function	the clear ||| clear	count=2
class	simplified chain ||| simplified chain	count=2
function	method ||| set	count=1
function	convert ||| dist to	count=3
arg	class to provide the ||| toolkitname	count=1
function	a pnm ||| pnm	count=1
function	current [function] ||| win [function]	count=1
module	a useful ||| gloo gl	count=1
function	the colormap ||| cmap	count=2
module	set ||| gloo	count=1
function	check that ||| check	count=2
function	a valid variable ||| check variable	count=2
arg	screen buffers this ||| color depth stencil	count=1
function	vertices ||| vertices	count=4
class	of a mouse ||| mouse	count=1
class	the canvas ||| scene canvas	count=4
function	vispy config file ||| get config fname	count=2
function	[function_1] iris dataset ||| [function_2] [function_1]	count=1
module	to configure the viewbox ||| cameras	count=1
function	type [function_2] ||| [function_2] [function_1]	count=4
class	for ||| base gloo	count=1
arg	of viewbox to register ||| viewbox	count=1
function	vertex ||| vertex	count=1
function	and ||| as	count=1
function_arg	clear [arg_2] ||| [arg_2] [function_1]	count=2
module	or equal to ||| visuals	count=1
function	[function_1] all emitters ||| [function_2] [function_1]	count=1
module	[module] which it ||| [module]	count=1
module_class	update the [module_1] [class_2] ||| visuals [module_1] [class_2]	count=3
arg	[arg_1] [arg_2] ||| smoothstep [arg_1] [arg_2]	count=2
class	set ||| render buffer	count=2
module	incompatible [module] faces ||| [module]	count=1
arg	of vertices parameters ||| vertices	count=1
function	define the [function_1] [function_2] ||| [function_1] [function_2]	count=14
arg	function into ||| function update	count=1
function	create and ||| create	count=1
function	the minor radius ||| minor radius	count=1
module	we ||| gloo gl	count=1
function	event to inform listeners ||| update	count=1
class	axis to a viewbox ||| axis widget	count=1
function	a quadratic bezier ||| curve3 bezier	count=2
arg	array showing the differences [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function	webgl [function_2] ||| [function_1] [function_2]	count=1
arg	used to [arg_2] ||| [arg_1] [arg_2]	count=2
module_class	this [class_2] ||| [module_1] [class_2] clip	count=1
function	[function_1] size ||| [function_2] [function_1]	count=4
function	read mesh ||| read mesh	count=2
function	to vec4 ||| to vec4	count=1
module_class	[module_1] between ||| [class_2] [module_1]	count=1
module	[module_1] by the ||| [module_1] [module_2]	count=3
function	method to use current ||| method	count=1
module	[module] event has ||| [module]	count=3
class	draw this visual ||| line visual	count=1
function	nt ||| nt	count=1
function	[function] or range ||| [function]	count=3
function	set of [function_2] ||| [function_2] [function_1]	count=5
function	the vispy config file ||| config fname	count=1
module	vertices and stores the ||| geometry	count=1
function	[function_1] and uniforms ||| [function_1] [function_2]	count=3
arg	inform dependents that ||| code_changed value_changed	count=1
function	threshold value to ||| threshold	count=1
class	event ||| mouse event	count=2
class	tick marks ||| ticker	count=1
function	mesh ||| grid mesh	count=1
class	opengl ||| base gloo functions	count=1
function	get a useful ||| arg repr	count=1
class	vertices ||| polygon data	count=2
function	decide which method ||| method	count=1
arg	may use to modify ||| shader name	count=1
module	all function ||| shaders	count=1
arg	and size [arg_2] ||| [arg_2] texture offset [arg_1]	count=1
class	friend method ||| base camera	count=1
class	as thick [class_2] ||| [class_1] [class_2]	count=1
module_class	[module_1] [class_2] ||| [module_1] agg [class_2]	count=1
function_arg	[function_1] a chunk ||| [arg_2] [function_1]	count=1
function	converting argument [function] format suitable ||| arg [function]	count=1
function	create a 3d ||| create	count=1
function_arg	function definition [arg_2] ||| [function_1] signature [arg_2]	count=1
arg	< edge1 ||| edge1	count=1
class	mesh previously ||| mesh data	count=1
function	sampler ||| sampler	count=2
arg	bar ||| local_file	count=1
module	with the data in ||| _bundled	count=1
function	mouse coordinates for every ||| trail	count=1
class	camera view ||| camera	count=1
arg	*name* ||| name shaders	count=1
arg	[arg_1] display this ||| [arg_1] [arg_2]	count=1
function	physical size ||| physical size	count=2
arg	in *code* ||| code	count=1
function_arg	[function_1] a canvas ||| [function_1] [arg_2]	count=2
module_class	[module_1] frame buffer ||| [module_1] [class_2]	count=2
arg	instead ||| increment_value mesg	count=1
function_arg	[function_1] series ||| [function_1] data color [arg_2]	count=1
function	set a texture ||| set	count=1
module	the type ||| visuals	count=1
arg	name in ||| name	count=1
function	[function_1] iris dataset ||| [function_1] [function_2]	count=1
class	events draw is emitted ||| canvas	count=1
class	of the camera ||| camera	count=3
function_arg	[function_1] command ||| [function_1] subprocess [arg_2]	count=1
function	:meth ||| as	count=1
class	for ||| base	count=1
class	provides "mod" ||| backend	count=1
arg	key in ||| key	count=1
function	itervalues ||| itervalues	count=1
class	function ||| function maker	count=1
function	and indices ||| create grid	count=1
arg	a new function into ||| function	count=1
arg	writing mesh data ||| fname vertices	count=1
function	title of ||| title	count=1
function	transform ||| set transform	count=1
module	names that ||| gloo gl	count=1
class	glir implementations may omit ||| glir program	count=2
class	and ||| render	count=1
class	new transform ||| transform	count=2
function	pyopengl ||| pyopengl	count=1
function	the [function] of ||| [function]	count=1
function_arg	resize event ||| resize event	count=5
module	constraint ||| _bundled cassowary	count=1
arg	or hide ||| visible run	count=1
module	get a useful and ||| gloo	count=1
class	provides "mod" with many ||| canvas backend	count=1
function	file ||| file	count=2
function	set the [function_2] ||| [function_2] [function_1]	count=14
module	y z quaternion parameters ||| cameras	count=1
function	[function_1] opengl viewport ||| [function_2] [function_1]	count=1
module	are deprecated ||| gloo	count=1
module	this will generate ||| geometry	count=1
function	euler [function_2] ||| [function_2] [function_1]	count=1
arg	of func with ||| func	count=1
function_arg	close event ||| close event	count=1
module	the signature [module_2] ||| [module_1] [module_2]	count=2
class	render-buffer ||| render	count=1
function	step [function_2] ||| [function_1] [function_2]	count=4
module	visuals ||| visuals	count=2
function	the depth value to ||| depth value	count=1
arg	p return the baked ||| p key	count=1
arg	used [arg_2] ||| [arg_1] [arg_2]	count=2
class	connects and color-index ||| isocurve	count=1
function	errors returns ||| get error	count=2
function	step size ||| step size	count=2
function	keys known by ||| keys	count=1
module	bounding the ||| visuals	count=1
function	flush all current commands ||| flush	count=1
module	:meth ||| ext	count=1
function	chunk and its data ||| chunk	count=1
function	update the signature ||| update	count=1
function	get a useful and ||| arg repr	count=1
function	calling function from the ||| caller	count=1
class	and ||| render buffer	count=2
function	if [function] header has ||| validate [function]	count=1
module_class	of [module_1] [class_2] ||| [module_1] [class_2]	count=23
module	useful and ||| gloo gl	count=1
function	glsl [function_2] ||| [function_2] [function_1]	count=8
class	program object that is ||| program	count=1
class	[class_1] buffer ||| [class_2] [class_1]	count=1
arg	attribute data ||| name data	count=1
function	window id of ||| window id	count=2
module	equivalent to the ||| visuals transforms	count=1
function	a ||| arg	count=1
arg	points1 onto points2 ||| points1 points2	count=2
class	rounded corners ||| rectangle visual	count=1
arg	of key in dict ||| key	count=1
class	visual is ||| visual	count=1
class	a simplified [class_2] ||| [class_2] [class_1]	count=2
arg	color s ||| color expand clip	count=1
arg	canvas ||| canvas	count=3
function	gl functions from ||| gl	count=1
class	commands are printed ||| queue	count=1
function	list of hex strings ||| hex	count=1
module	by :meth asrgb8 ||| ext	count=1
class	the transformsystem ||| system	count=1
class	buffer ||| buffer	count=3
class	get ||| proxy	count=1
module	out the names that ||| gl	count=1
class	too ||| proxy	count=1
function	rectangular area ||| rect	count=1
class	glir [class_2] ||| [class_1] [class_2]	count=3
module	for [module] ||| [module]	count=3
arg	the given duration in ||| duration_sec	count=1
class	wrapper for gl ||| base gloo functions	count=1
class	regular [class_2] ||| [class_1] [class_2]	count=1
class	set the ||| render buffer	count=1
function	the vispy config ||| get config	count=1
module_class	[module_1] provides "mod" ||| [module_1] [class_2] process	count=5
function	useful and not ||| arg	count=1
module	and register callback ||| util	count=1
function	stop ||| stop	count=2
arg	that start with 'gl' ||| constants	count=1
module	this will generate vertices ||| geometry	count=1
class	canvas ||| scene canvas	count=1
function	unit ||| unit	count=1
function	[function_1] id of ||| [function_1] [function_2]	count=3
arg	match [arg] against the ||| cmd [arg]	count=1
module	and attach to ||| visuals	count=1
module	we provide in our ||| gloo gl	count=1
function	3 of vertices ||| vertices	count=1
function	isocurve from 2d ||| isocurve	count=1
module	0 and [module] when ||| [module]	count=1
arg	and im2 ||| im2	count=1
arg	[arg_1] b ||| [arg_1] [arg_2]	count=2
function	start profiling and register ||| profiling	count=1
arg	[arg_1] im2 ||| [arg_2] [arg_1]	count=3
arg	uint8 values ||| val	count=2
arg	2d ||| tex	count=1
function	set line ||| set line	count=1
module_class	for this function ||| shaders function	count=1
module	helper used by ||| ext _bundled	count=1
class	event ||| event	count=5
function_arg	add [arg_2] ||| [arg_2] [function_1]	count=2
function	scene ||| scene	count=1
function	default state to be ||| default state	count=1
function_arg	configuration [arg_2] ||| [function_1] [arg_2]	count=2
function	list of template variables ||| find template variables	count=1
arg	used for this ||| pos color width connect	count=1
function	reads a tuple ||| read tuple	count=1
function_arg	[function_1] of a ||| [arg_2] [function_1]	count=2
class	this surface plot ||| surface plot visual	count=2
function	list ||| list	count=2
arg	update ||| colors	count=1
function	surface mesh ||| mesh	count=1
function_arg	edges intersect [arg_2] ||| [function_1] edge1 [arg_2]	count=1
module	a ||| gloo	count=1
function	of ||| viewbox	count=1
class	large represetation of ||| proxy	count=1
function	[function_1] size ||| [function_1] [function_2]	count=4
function	[function_1] state parameters ||| [function_2] [function_1]	count=4
function	an exception and ||| log exception	count=1
function	configure the ||| configure	count=1
function	vispy calling function from ||| vispy caller	count=1
module	the given shape ||| visuals	count=1
module	used by ||| ext	count=1
class	the collection ||| collection	count=1
function	the clipper ||| update clipper	count=1
class	simplified chain [class_2] ||| [class_1] [class_2]	count=1
class	per ||| reader	count=1
arg	flat row flat ||| pixels	count=1
module	in ||| scene widgets	count=1
function	region of given ||| region	count=1
function	a tuple of ||| write tuple	count=1
arg	by some angle ||| angle	count=1
module_class	instances to [class_2] ||| [module_1] [class_2]	count=4
module_class	of this quaternion ||| util quaternion	count=1
class	the texture ||| base texture	count=2
function	visual [function_2] ||| [function_2] [function_1]	count=1
function	create ||| create	count=7
function	[function_1] mesh ||| [function_2] [function_1]	count=1
function	method to ||| method	count=1
arg	[arg_1] the dest ||| [arg_2] [arg_1]	count=3
class	polygon ||| polygon	count=3
arg	returns a (*type*,*data*) tuple ||| seek lenient	count=1
class	this [class] in ||| [class]	count=1
function	the program exits ||| enable	count=1
module_class	this function and ||| shaders function	count=1
function	a surface mesh ||| mesh	count=1
arg	existing ||| parent key vertices indices	count=1
module	set the ||| visuals	count=1
module	to ||| visuals text	count=2
function	zoom in or out ||| zoom	count=1
function_arg	restore the state ||| restore state	count=2
function	the depth [function_2] ||| [function_1] [function_2]	count=4
module	domain always matches the ||| scene widgets	count=1
class	this visual is about ||| visual	count=1
function	vispy [function_2] ||| [function_1] [function_2]	count=2
class	the camera should ||| camera	count=1
function	asrgb8 and ||| rescale	count=1
function	rotate a [function_2] ||| [function_2] [function_1]	count=1
module_class	vispy visuals textvisual ||| visuals color bar	count=1
function	type ||| rtype	count=1
function	font size in points ||| font size	count=3
function	too large represetation ||| arg repr	count=1
arg	size and format parameters ||| shape format	count=1
module	for context get_current_canvas ||| gloo	count=1
arg	list of 2d vertices ||| vertices color	count=1
arg	asrgb8 and ||| get	count=1
arg	the state ||| state	count=1
class	whether the emitter is ||| emitter	count=1
class	mouse drag operation ||| mouse	count=2
module	we ||| gloo	count=1
function	the increment ||| increment	count=1
module	required [module] a variable ||| [module]	count=2
arg	instead of the ||| increment_value mesg	count=1
function	rename ||| rename	count=1
class	thick line each line ||| agg line	count=1
function	set the [function_2] ||| [function_1] [function_2]	count=14
function	[function_1] point ||| [function_1] [function_2]	count=6
function	load the iris dataset ||| load iris	count=1
function	too ||| arg repr	count=1
module	the same type ||| scene cameras	count=1
function	applies to (i ||| sources	count=1
arg	*name* is ||| name	count=1
function	of 2 greater than ||| of 2	count=1
function	setting the shading code ||| shaders	count=1
function_arg	[function_1] lines between ||| [function_1] adjacency_mat [arg_2]	count=1
function	and not too large ||| repr	count=1
function	[function_1] [function_2] ||| [function_1] [function_2] outfile	count=2
function	border ||| border	count=2
function	the euler ||| from euler	count=1
function_arg	point i ||| point tri i	count=1
module_class	[module_1] visual parameters ||| [module_1] [class_2]	count=2
class	get a ||| proxy	count=1
module	the margin border and ||| scene	count=1
class	the camera should cover ||| perspective camera	count=1
function	[function] child of ||| [function]	count=3
module	constants from pyopengl ||| gloo	count=1
module	deprecated or that we ||| gloo gl	count=1
function	vector ||| vector	count=1
class	or range [class] ||| [class]	count=2
function	minimum height ||| height min	count=1
module	deprecated or that ||| gloo	count=1
module_class	[module_1] such that ||| [module_1] [class_2]	count=4
arg	sampler value ||| name value	count=1
arg	set the render-buffer size ||| shape	count=1
function	[function_1] posix ||| [function_2] [function_1]	count=1
module	in ||| gloo	count=1
function	clipper ||| clipper	count=1
arg	a ||| a b	count=1
function	not too large represetation ||| arg repr	count=1
function	part of ||| dragging	count=1
function	register callback to print ||| enable	count=1
function	get a free ||| get free	count=2
function	[function_1] mesh ||| [function_1] [function_2]	count=1
function	by :meth asrgb8 ||| rescale	count=1
class	that the camera ||| camera	count=1
function_arg	data used to ||| data pos	count=1
function	to register ||| viewbox set	count=1
module	but ||| gloo gl	count=1
arg	capacity ||| capacity	count=1
module	depth_value is the ||| scene	count=1
function	connect ||| connect	count=1
module	0 the ||| scene	count=1
class	camera parameters ||| base3drotation camera	count=1
class	event in the ||| event	count=2
arg	od __repr__() <==> ||| _repr_running	count=1
class	this widget may ||| widget	count=1
arg	existence of key ||| key	count=1
function_arg	[function_1] instead ||| [arg_2] [function_1]	count=5
arg	2d vertices ||| vertices color closed	count=1
module	an x * ||| ext	count=1
arg	a b [arg_2] ||| [arg_1] [arg_2]	count=2
arg	list of 2d vertices ||| vertices	count=1
class	transformsystem * ||| system	count=1
module	constants from ||| gloo	count=1
arg	vertices ||| vertices color closed	count=1
class	this grid ||| grid	count=1
function_arg	straight [arg_2] ||| [function_1] vertices adjacency_mat [arg_2]	count=1
function	next power [function_2] ||| [function_2] [function_1]	count=1
module	[module_1] for this ||| [module_1] [module_2]	count=4
class	to register ||| base	count=1
class	by ||| transform	count=1
class	matrix about ||| matrix transform	count=1
module	names ||| gloo gl	count=1
function	fps of ||| fps	count=1
class	canvas/window as the ||| canvas	count=1
function	clipper for ||| clipper	count=1
function	a trns ||| palette	count=1
function_arg	point [arg_2] ||| [arg_2] [function_1]	count=2
class	set ||| render	count=1
class	viewbox ||| base camera	count=1
function	size [function] and ||| update [function]	count=1
function	clipper for this ||| clipper	count=1
function	[function_1] free ||| [function_2] [function_1]	count=1
module_class	[module_1] [class_2] same area but with ||| [module_1] [class_2] normalized	count=1
arg	[arg_1] for ||| [arg_2] [arg_1]	count=8
class	glir ||| base glir	count=1
class	of the torus ||| torus	count=3
function	pyos_inputhook as a ||| inputhook as func	count=2
module	constraint ||| ext _bundled cassowary	count=1
module_class	an [class_2] ||| [module_1] [class_2]	count=4
class	reset the camera view ||| perspective camera	count=1
module	from ||| gloo	count=1
arg	[arg_1] b ||| [arg_2] [arg_1]	count=2
function	center ||| center	count=2
module	:meth asrgb8 ||| _bundled	count=1
function	convert a pnm ||| convert pnm	count=3
module	to use for ||| visuals	count=1
arg	the ||| shape	count=1
class	ordered [class_2] ||| [class_2] [class_1]	count=1
function	[function_1] opengl viewport ||| [function_1] [function_2]	count=1
class	order (last [class] ||| [class]	count=1
arg	permitting alpha values in ||| hexs	count=1
arg	[arg_1] scroll ||| [arg_2] [arg_1]	count=1
function	given the euler ||| from euler	count=1
arg	the update window connects ||| window	count=1
class	in this surface plot ||| surface plot visual	count=1
class	asrgb8 and ||| reader	count=1
arg	classmethod is the ||| cls	count=1
module	in [module] ||| [module]	count=10
arg	im1 and ||| im1	count=1
function_arg	variables [arg_2] ||| [arg_2] [function_1]	count=1
class	parse ||| glir parser	count=1
function	tuple ||| tuple	count=2
arg	[arg_1] onto points2 ||| [arg_1] [arg_2]	count=1
arg	given offset [arg_2] ||| [arg_1] [arg_2]	count=1
class	:meth asrgb8 ||| reader	count=1
function	vertices [function_2] ||| [function_1] [function_2]	count=3
class	that the camera ||| perspective camera	count=1
function	a line of ||| line	count=1
arg	[arg_1] [arg_2] ||| [arg_2] texture offset [arg_1]	count=2
module	an object providing a ||| ext _bundled	count=1
arg	the screen buffers this ||| depth stencil	count=1
module	of ||| cameras	count=1
function	image ||| image	count=1
arg	return 1 ||| edge1	count=1
class	[class_1] dictionary ||| [class_2] [class_1]	count=1
class	the camera ||| camera	count=7
function	tuple ||| write tuple	count=2
module	our ||| gloo	count=1
module	the same ||| visuals transforms	count=1
function_arg	restore [arg_2] ||| [function_1] [arg_2]	count=3
module	to register ||| scene	count=1
module	but leave ||| gl	count=1
function	and ||| create	count=1
function	avoud circular import ||| get current canvas	count=1
function	return (fbo origin canvas_size) ||| framebuffer	count=1
function	[function_1] radius ||| [function_1] [function_2]	count=2
class	input hooks by ||| input hook	count=2
module	that we ||| gloo gl	count=1
function	set the screen clear ||| set clear	count=1
arg	this classmethod is the ||| cls	count=1
function	function definition found ||| function	count=1
function	the physical size of ||| physical size	count=1
function	create a ||| create	count=3
arg	b onto ||| b	count=1
function	write ||| chunk write	count=1
function	shaders ||| shaders	count=1
function	is below the ||| edge below	count=1
module_class	[module_1] [class_2] ||| [module_1] widgets [class_2]	count=2
function	size used during ||| size	count=1
class	useful ||| proxy	count=1
function_arg	[function_1] of vertices ||| [function_1] [arg_2]	count=1
module	es api ||| gl	count=1
function	stats when ||| enable	count=1
class	camera ||| perspective camera	count=2
function_arg	[function_1] this ||| pngfilters convert l to [function_1] [arg_2]	count=1
function	the egl ||| egl	count=1
function	application ||| app	count=1
arg	vertex and fragment ||| vert frag	count=1
function_arg	return [function_1] [arg_2] ||| testing make diff [function_1] [arg_2]	count=1
function	[function] format suitable ||| arg [function]	count=1
class	node and its children ||| visual node	count=1
arg	if *edge* is ||| edge	count=1
function	the texture ||| texture	count=1
arg	p return the ||| p	count=1
function	friend method ||| viewbox set	count=1
function	write a [function_2] ||| [function_1] [function_2]	count=4
class	mesh previously ||| mesh	count=1
class	visible area expressed ||| pan zoom camera	count=1
class	method ||| base camera	count=2
function	[function_1] gl ||| visuals compound visual [function_1] [function_2]	count=1
module	configure this transform ||| transforms	count=1
function_arg	run [arg_2] ||| [function_1] subprocess [arg_2]	count=1
module	be the ||| scene cameras	count=1
function	the actual height of ||| height	count=1
arg	a ||| a	count=2
module_class	[module_1] [class_2] the same area but ||| [module_1] [class_2]	count=1
function	of template variables ||| find template variables	count=2
arg	pattern ||| pattern	count=1
function	color information ||| color	count=1
function	template variables ||| find template variables	count=2
class	a mesh ||| mesh data	count=1
module	*self* to [module] ||| [module]	count=3
module	draw is emitted ||| app	count=1
arg	an ||| vertices	count=1
arg	n ||| n	count=2
arg	writing mesh ||| vertices faces	count=1
class	and not too ||| debug proxy	count=1
function	this ||| data	count=1
function_arg	input file infile ||| file scanlines infile	count=1
arg	new callback ||| callback ref	count=1
function	bezier ||| bezier	count=2
function	convert user string ||| string to	count=1
module	and not too large ||| gloo	count=1
function	not ||| arg repr	count=1
class	chain by ||| chain transform	count=2
class	inverse ||| null transform	count=1
module_class	[module_1] glir commands ||| [module_1] [class_2]	count=2
function	[function_1] [function_2] ||| [function_1] sampler [function_2]	count=3
arg	im1 [arg_2] ||| [arg_1] [arg_2]	count=1
arg	of a b onto ||| a b	count=1
module	friend ||| scene cameras	count=2
function_arg	buffers [arg_2] ||| [arg_2] [function_1]	count=1
class	this event ||| scene mouse event	count=1
function_arg	variable name in ||| variable name	count=1
function	for converting argument [function_1] [function_2] format suitable for 4x4 ||| [function_1] [function_2]	count=1
class	too large ||| proxy	count=1
module_class	[module_1] [class_2] same area but with ||| [module_1] [class_2]	count=1
class	emitters in this ||| emitter	count=1
module	frame [module] ||| [module]	count=1
function	valid ||| check	count=1
function	useful and not too ||| repr	count=1
function	set pyos_inputhook to ||| clear inputhook	count=1
module_class	the function ||| visuals shaders function	count=1
function	[function_1] invisible ||| [function_1] [function_2]	count=1
function	vertices in ||| vertices	count=1
class	between ||| base	count=1
function	[function_1] point ||| [function_2] [function_1]	count=6
module	the [module] in ||| [module]	count=1
class	whether this node ||| visual node	count=1
class	__getitem__ ||| array list	count=1
module	our api ||| gloo	count=1
module_class	[module_1] this emitter ||| [module_1] [class_2]	count=4
function	get the ||| get	count=5
function	and register callback ||| enable	count=1
module_class	[module_1] quaternion ||| [module_1] [class_2]	count=10
function	the colormap of ||| cmap	count=1
function_arg	[function_1] to provide ||| [arg_2] [function_1]	count=1
arg	[arg_1] scroll parameters ||| [arg_2] [arg_1]	count=1
function	depth ||| depth	count=1
arg	definition found in *code* ||| code	count=1
function_arg	variable name ||| variable name	count=1
module	too ||| gloo	count=1
class	the glir ||| glir	count=1
function_arg	template variables [arg_2] ||| [arg_2] [function_1]	count=1
arg	new function ||| function update	count=1
module	but leave out ||| gloo	count=1
function	a useful and ||| repr	count=1
function	the height ||| height	count=1
function	that is opposite point ||| opposite point	count=1
arg	i ||| i	count=2
class	for each line strip ||| scrolling lines	count=1
class	events draw ||| canvas	count=1
module_class	visuals meshvisual ||| visuals box	count=1
module	frame [module] document coordinate ||| [module]	count=1
module	coordinate frame to ||| visuals	count=2
function	compute normals over a ||| normals	count=1
class	grid ||| grid	count=2
arg	using ||| val	count=2
module_class	[module_1] chain ||| [module_1] [class_2] insert index	count=2
arg	im2 ||| im2	count=1
arg	the update window ||| window callback	count=1
function	[function_1] all emitters ||| [function_1] [function_2]	count=1
function_arg	[function_1] name ||| [arg_2] [function_1]	count=5
class	data ||| data buffer	count=1
function	surface ||| surface	count=1
function_arg	compute normals [arg_2] ||| [function_1] [arg_2]	count=1
module	names that are deprecated ||| gloo gl	count=1
module	an x ||| ext _bundled	count=1
arg	progress [arg_2] ||| [arg_2] [arg_1]	count=2
function	free [function_2] ||| [function_2] [function_1]	count=4
module	the glsl code ||| visuals	count=1
module	to ||| visuals shaders	count=2
module	the array of colors ||| visuals	count=1
function	interpolation mode ||| interpolation	count=1
arg	may use to modify ||| shader	count=1
function	3d arrow ||| arrow	count=1
module	as the ||| app	count=1
module_class	to [module_1] [class_2] ||| [module_1] [class_2]	count=2
module	to ||| scene cameras	count=2
function_arg	close [arg_2] ||| [function_1] [arg_2]	count=1
arg	screen buffers this ||| depth stencil	count=1
module	[module_1] clipping ||| [module_1] [module_2]	count=2
class	render-buffer size and ||| buffer	count=1
function	the physical [function_2] ||| [function_1] [function_2]	count=4
function_arg	straight [arg_2] ||| [arg_2] [function_1]	count=2
function	that optionally ||| vispy	count=1
function	[function_1] free region ||| [function_1] [function_2]	count=1
function	compute ||| compute	count=4
function	will be delivered ||| blocked	count=1
class	hooks ||| hook	count=1
function_arg	the stencil buffer ||| stencil index	count=1
class	set of segments ||| segment	count=2
function	triangle mode used ||| mode	count=1
arg	viewbox to register ||| viewbox	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=542
function	lab ||| lab	count=1
arg	true [arg_2] ||| [arg_2] [arg_1]	count=4
function	in [function] ||| render [function]	count=2
function	[function_1] stencil ||| [function_1] [function_2]	count=2
function	[function_1] power ||| [function_2] [function_1]	count=2
arg	points1 [arg_2] ||| [arg_2] [arg_1]	count=1
module	in [module_2] ||| [module_2] [module_1]	count=3
class	the mouse ||| scene mouse	count=2
arg	signature of func ||| func	count=1
arg	key in dict return ||| key	count=1
function	gl functions from libgl ||| gl lib	count=1
function	the clipper for ||| update clipper	count=1
function	[function_1] uniforms to ||| [function_2] [function_1]	count=4
function	font ||| font	count=3
function	in an interactive session ||| reuse	count=1
module	used by :meth ||| ext	count=1
function	if there ||| current	count=1
class	by the emitter this ||| emitter	count=1
function	in ||| in	count=2
arg	decorator to mark ||| func	count=1
function_arg	a grayscale image to [function_1] [arg_2] method assumes ||| pngfilters convert l to [function_1] [arg_2]	count=1
module	canvas/window as ||| app	count=1
module_class	this [class_2] ||| [class_2] [module_1]	count=9
class	not too ||| debug proxy	count=1
arg	node ||| node	count=4
class	that is a ||| reader	count=1
function	command line ||| command line	count=2
function	method ||| method	count=2
arg	[arg_1] and gl ||| [arg_2] [arg_1]	count=2
function	and ||| create grid	count=1
function	[function_1] size of ||| [function_1] [function_2]	count=2
class	for gl ||| base gloo	count=1
function	the window [function_2] ||| [function_1] [function_2]	count=4
module	by :meth asrgb8 and ||| ext	count=1
class	filter ||| glir queue share	count=1
module	and ||| ext	count=2
function	:meth asrgb8 ||| as rescale	count=1
arg	source into the dest ||| source dest	count=1
module_class	this frame ||| gloo frame	count=1
function	colormap of ||| cmap	count=1
arg	[arg_1] bar ||| [arg_2] [arg_1]	count=8
arg	path p ||| p	count=1
module	full implementation of ||| color	count=1
function	rotate ||| rotate	count=2
class	torus knot or link ||| torus knot	count=3
arg	func ||| func	count=2
module	as the rate ||| app	count=1
function	useful and ||| arg	count=1
arg	a texture sampler value ||| name value	count=1
arg	cylinder plus cone parameters ||| rows cols radius length	count=1
function_arg	stencil [arg_2] ||| [arg_2] [function_1]	count=4
function	start profiling and ||| profiling	count=1
arg	if *edge* ||| edge	count=1
arg	+ a = rgba ||| ipixels apixels ipsize apsize	count=1
class	description other glir ||| glir program	count=1
class	set ||| buffer	count=1
function	visual ||| visual	count=2
module	large represetation ||| gloo	count=1
arg	[arg_1] callback ||| [arg_2] [arg_1]	count=2
function	current emitters in ||| emitters	count=1
function	and not too ||| arg	count=1
function_arg	return projection [arg_2] ||| [arg_2] [function_1]	count=8
function	gl ||| gl lib	count=1
class	inverse ||| matrix transform	count=1
module_class	[module_1] object ||| [module_1] [class_2]	count=4
arg	a particular [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	read mesh data ||| read mesh fname	count=1
function	get a transform ||| get	count=1
arg	classmethod ||| cls rx ry	count=1
function	planes ||| planes	count=1
module_class	[module_1] shaderobject ||| [module_1] [class_2]	count=4
class	the camera should ||| perspective camera	count=1
arg	alpha blending parameters ||| mode_rgb mode_alpha	count=1
function_arg	[function_1] exists ||| [function_1] backend [arg_2]	count=1
function	point ||| point	count=2
arg	from [arg] ||| cls obj body [arg]	count=1
function	a glsl ||| glsl	count=1
arg	c arguments are ||| c	count=1
module	itself ||| cameras	count=1
module	the current ||| visuals	count=1
class	torus [class_2] ||| [class_1] [class_2]	count=3
module	the local coordinate system ||| visuals	count=2
arg	name in any ||| name	count=1
arg	from an existing ||| parent key vertices indices	count=1
function	chain ends ||| parent chain	count=2
class	get ||| font manager	count=1
function	of gl ||| gl	count=1
arg	at a given offset ||| offset	count=1
function	get a transform from ||| get	count=1
class	the emitter ||| event emitter	count=1
function	[function_1] the webgl ||| [function_1] [function_2]	count=1
arg	size ||| size	count=1
class	axis to a viewbox ||| axis	count=1
function_arg	[function_1] b ||| [arg_2] [function_1]	count=1
function	stats when the program ||| enable	count=1
module	to be the ||| scene cameras	count=1
arg	app backend exists ||| backend has capable	count=2
function	all emitters in ||| all	count=1
function	framebuffer ||| transforms	count=1
module	of this transform ||| transforms	count=1
function	posix ||| posix	count=1
class	program ||| glir program	count=1
module	the initial high-res ||| visuals	count=1
class	indicating whether the emitter ||| emitter	count=1
arg	logger ||| level tb_skip	count=1
module	but leave out the ||| gl	count=1
function	primary [function] of ||| [function]	count=1
function	data in this ||| data	count=1
module	return the ||| visuals shaders	count=4
function	and major labels ||| tick frac labels	count=2
function	the position of this ||| pos	count=1
module	deprecated or that ||| gloo gl	count=1
function	[function_1] window ||| [function_1] [function_2]	count=1
function	state to be applied ||| state	count=1
arg	rows should be ||| rows	count=1
module	a useful and ||| gloo gl	count=1
function	axis-angle representation ||| axis angle	count=1
module	for existence of ||| gloo	count=1
module	by :meth ||| ext _bundled	count=1
class	get ||| debug	count=1
class	this event ||| event	count=3
arg	[arg_1] display ||| [arg_2] [arg_1]	count=1
class	array [class_2] ||| [class_2] [class_1]	count=2
function	exception and traceback to ||| log exception	count=1
function	glsl template ||| glsl	count=1
class	regular [class_2] ||| [class_2] [class_1]	count=1
function	mapping from [function] local ||| [function]	count=1
arg	helper used by :meth ||| get	count=1
class	inverse ||| chain transform	count=1
function_arg	[function_1] used to ||| [function_1] [arg_2]	count=2
module	represetation ||| gl	count=1
function	the actual height ||| height	count=1
module	for attributes and uniforms ||| gloo	count=1
class	glir implementations may omit ||| glir	count=2
function	clear value for ||| clear	count=2
function	function definition found in ||| parse function	count=1
arg	:meth ||| get	count=1
module	that ||| transforms	count=1
function	edge ||| edge	count=1
function	variables ||| variables	count=3
function	create and set ||| create vertex data	count=1
function_arg	__setitem__ i [arg_2] ||| [function_1] [arg_2]	count=2
module	the render-buffer ||| gloo	count=1
function	vispy ||| vispy	count=1
function	register a class ||| register	count=1
function_arg	[function_1] points1 ||| [function_1] [arg_2]	count=1
function_arg	projection [arg_2] ||| [function_1] [arg_2]	count=8
arg	p return the ||| p key	count=1
function	rotate a [function_2] ||| [function_1] [function_2]	count=1
function	to the egl ||| egl	count=1
function	stdin [function_2] ||| [function_2] [function_1]	count=2
function	[function] show ||| [function]	count=3
class	path ||| agg fast path	count=1
function	a free [function_2] ||| [function_1] [function_2]	count=4
class	other glir implementations ||| glir program	count=2
arg	offset [arg_2] ||| [arg_2] [arg_1]	count=2
class	this data set ||| mesh data	count=1
function	[function_1] part of ||| [function_1] [function_2]	count=1
class	colorbar parameters ||| color bar	count=1
arg	from this node ||| node	count=1
function	half-dimensions measured from the ||| halfdim	count=1
function	active [function_2] ||| [function_2] [function_1]	count=6
class	large represetation of ||| debug proxy	count=1
function_arg	maps points1 ||| mapping points1	count=1
arg	[arg_1] specifies the ||| [arg_2] [arg_1]	count=1
function	large ||| repr	count=1
module	names ||| gloo	count=1
function	helper ||| rescale	count=1
function	to inform listeners that ||| update	count=1
module	constants ||| gl	count=1
module	is the ||| scene	count=1
function_arg	valid variable [arg_2] ||| [function_1] [arg_2]	count=4
arg	render-buffer size and format ||| format	count=1
module_class	[module_1] regular ||| [module_1] [class_2]	count=2
module_class	[module_1] [class_2] ||| [module_1] shaders statement [class_2]	count=1
function	picking mode ||| picking	count=1
class	a useful and ||| proxy	count=1
class	whether this node and ||| visual node	count=1
function	useful and ||| repr	count=1
function	returns ||| get	count=1
function	friend ||| viewbox	count=1
arg	region width height ||| width height	count=2
module	generate the definition for ||| visuals	count=1
class	as thick ||| agg	count=1
class	set the render-buffer size ||| buffer	count=1
function	arrow using ||| arrow	count=1
module	the initial high-res ||| visuals text	count=1
function	restore ||| restore	count=1
arg	new ||| ref	count=1
function_arg	read mesh [arg_2] ||| [function_1] [arg_2]	count=3
arg	[arg_1] data ||| [arg_2] [arg_1]	count=9
function	of hex strings ||| hex	count=1
module	to detect [module] ||| gloo [module]	count=1
function	buffers ||| buffers	count=2
function_arg	[function_1] a filter ||| [arg_2] [function_1]	count=1
function	active attributes [function_2] ||| [function_2] [function_1]	count=5
arg	the signature of func ||| func	count=1
function_arg	triangulate a [arg_2] ||| [function_1] [arg_2]	count=2
arg	a chunk to file ||| chunk	count=1
class	[class_1] that is ||| [class_2] [class_1]	count=8
class	this event in ||| mouse event	count=1
function	require an image library ||| requires img lib	count=1
function	is opposite [function_2] ||| [function_1] [function_2]	count=1
arg	by edge and i ||| i	count=1
module	the render-buffer size and ||| gloo	count=1
function_arg	restore the [arg_2] ||| [function_1] [arg_2]	count=3
arg	path p ||| p key closed itemsize	count=1
function	stdin [function_2] ||| [function_1] ready [function_2]	count=2
class	-> new ordered dictionary ||| ordered dict	count=1
function	check this ||| check	count=1
module	[module] this function ||| [module]	count=2
module	register itself ||| scene	count=1
arg	of data using ||| data color	count=1
function	part ||| dragging	count=1
module	emitted ||| app	count=1
class	get a useful ||| proxy	count=1
class	this is a wrapper ||| functions	count=1
class	transform is ||| transform	count=1
module	update the ||| scene cameras	count=1
module	when the ||| util	count=1
function_arg	[function_1] function ||| [arg_2] [function_1]	count=1
class	of this [class] do ||| [class]	count=1
module	in our ||| gl	count=1
module	as [module] rgb ||| [module]	count=1
class	write ||| console visual	count=1
function_arg	rgba [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] lines between ||| [arg_2] [function_1]	count=3
function	a lighter ||| lighter	count=1
module	on this ||| app	count=1
class	get a ||| debug proxy	count=1
arg	*name* ||| name	count=1
function	check ||| check bitdepth	count=1
function	return next [function_2] ||| [function_1] [function_2]	count=2
function	set the current ||| set	count=1
class	of this [class] in the ||| [class]	count=1
class	other glir implementations may ||| glir program	count=2
module	at the ||| scene	count=1
module_class	of [module_1] [class_2] ||| [module_1] base [class_2]	count=1
arg	x < [arg_2] ||| [arg_2] [arg_1]	count=2
module_class	[module_1] provides ||| [module_1] [class_2] process	count=5
function	pending ||| pending	count=1
function	define the [function] ||| [function] gl	count=1
arg	color s from ||| color expand clip	count=1
function	of pixel values in ||| read	count=1
module	tests ||| testing	count=1
class	itself ||| base camera	count=2
module	constants from ||| gloo gl	count=1
class	current mouse ||| mouse	count=1
arg	described by ||| bold italic	count=1
function	glir parser ||| parser	count=1
module	all ||| app backends	count=1
function	start profiling ||| enable profiling	count=1
function	the interpolation mode ||| interpolation	count=1
function	[function_1] [function_2] of ||| [function_1] [function_2]	count=24
class	a useful and ||| debug	count=1
function	[function_1] is opposite ||| [function_2] [function_1]	count=1
module	get a useful ||| gl	count=1
class	such that its scale ||| sttransform	count=1
function	of template ||| find template	count=1
arg	onto a c arguments ||| c	count=1
module_class	the [class_2] ||| [module_1] base [class_2]	count=1
class	is ||| glir parser	count=1
class	the event loop for ||| input hook	count=1
function	camera in ||| camera	count=1
arg	path p return the ||| p key closed itemsize	count=1
arg	of 2d vertices ||| vertices color closed	count=1
function	function definition ||| function	count=1
module	a useful ||| gl	count=1
arg	a path p ||| p key closed	count=1
function	sides ||| sides	count=1
arg	onto a c ||| c	count=1
arg	get lowercase string representation ||| name valid	count=1
arg	image ||| image shape kind	count=1
class	the widget ||| widget	count=3
arg	inform dependents ||| code_changed value_changed	count=1
arg	the render-buffer size ||| shape	count=1
function	below the ||| edge below	count=1
module	create ||| util	count=2
function	uniforms to be ||| uniforms	count=1
class	represetation ||| proxy	count=1
function	gl state ||| gl state	count=2
arg	[arg_1] [arg_2] ||| [arg_1] fname [arg_2]	count=1
function	an exception ||| exception	count=1
function	[function] a ||| [function] from axis	count=1
function	[function_1] a pnm ||| [function_2] [function_1]	count=1
function	gl [function_2] ||| [function_2] [function_1]	count=4
module	to search for imageio ||| io	count=1
arg	x y z ||| dtype	count=1
function	the maximum ||| max	count=1
module	are incompatible [module] faces ||| [module]	count=1
function	active ||| active	count=1
module	the ||| visuals	count=74
function	and register ||| enable	count=1
function	is constructed from ||| level	count=1
arg	new ||| ref position before	count=1
arg	class to provide ||| toolkitname	count=1
class	by :meth asrgb8 and ||| reader	count=1
function	[function_1] attributes ||| [function_2] [function_1]	count=2
function	[function_1] color information ||| [function_1] [function_2]	count=1
function	retrieve active attributes and ||| get active attributes and	count=1
function	reset the ||| reset	count=1
function	check that ||| check bitdepth	count=1
module	and not too ||| gloo	count=1
arg	nodes ||| adjacency_mat directed	count=2
function	called whenever the clipper ||| update clipper	count=1
function	name ||| name	count=2
module	gl ||| backends	count=3
class	whether this node and ||| node	count=1
function_arg	[function_1] an item ||| [arg_2] [function_1]	count=1
module	passed ||| ext _bundled	count=1
module	parameters ||| gloo	count=1
class	visual ||| visual	count=9
module_class	modifiers glfw [class_2] ||| [module_1] [class_2] process	count=4
function	value of process ||| value	count=1
arg	and :meth asrgba8 ||| targetbitdepth	count=1
arg	the screen buffers this ||| color depth stencil	count=1
function	retrieve vertices ||| get verts	count=1
function	pyos_inputhook [function_2] ||| [function_1] [function_2]	count=2
function	in a surface mesh ||| iso mesh	count=1
class	useful and not too ||| debug proxy	count=1
arg	[arg] pixel format ||| outfile [arg]	count=2
arg	commands and replace ||| commands	count=1
class	texture ||| base texture	count=4
arg	match [arg] against ||| cmd [arg]	count=1
arg	a series [arg_2] ||| [arg_2] [arg_1]	count=4
module	update the transform parameters ||| scene	count=1
arg	:meth asrgba8 ||| get targetbitdepth	count=1
module	pyopengl but leave ||| gloo gl	count=1
module	canvas/window as the rate ||| app	count=1
function	template ||| find template	count=1
module_class	[module_1] list ||| [module_1] [class_2]	count=1
arg	[arg_1] a c ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] and fragment ||| [function_1] shaders [arg_2]	count=1
arg	transform ||| transform	count=1
arg	texture sampler value ||| name value	count=1
class	not too large ||| proxy	count=1
arg	app ||| app	count=1
function	size ||| resize	count=1
class	[class_1] that ||| [class_1] [class_2]	count=1
class	event in the local ||| event	count=1
function_arg	definition2 [arg_2] ||| [arg_2] [function_1]	count=1
module_class	transform [class_2] ||| [class_2] [module_1]	count=3
arg	decorator to ||| func	count=1
module	the transform ||| scene	count=1
arg	sampler value is ||| value	count=1
arg	instead of ||| increment_value mesg	count=1
function_arg	[function_1] name in ||| [arg_2] [function_1]	count=5
class	the torus [class_2] ||| [class_2] [class_1]	count=3
function	check ||| check	count=4
function	physical size of ||| physical size	count=2
function	function ||| parse function	count=1
function	[function_1] state ||| visuals compound visual [function_1] [function_2]	count=2
function	below the [function_2] ||| [function_2] [function_1]	count=1
module	for all function ||| shaders	count=1
function_arg	[function_1] in *code* ||| [arg_2] [function_1]	count=2
class	of ||| canvas	count=3
function	the transform that ||| transform	count=2
class	not ||| debug	count=1
module	used by :meth asrgb8 ||| ext _bundled	count=1
arg	the progress [arg_2] ||| [arg_2] [arg_1]	count=2
function	asrgb8 and ||| as rescale	count=1
function	used by :meth ||| rescale	count=1
function_arg	[function_1] of func ||| [arg_2] [function_1]	count=1
function	get error and show ||| get error	count=1
function	by :meth ||| as	count=1
function	canvas ||| canvas	count=3
arg	used to ||| pos	count=1
function	the minor ||| minor	count=1
function	for the vispy config ||| get config	count=1
module	useful ||| gl	count=1
function	generate a glsl ||| glsl	count=1
module	but leave out ||| gloo gl	count=1
class	object ||| object	count=1
class	the camera ||| base camera	count=1
module	the input vector ||| visuals transforms	count=1
function_arg	[function_1] sampler value ||| [function_1] texture [arg_2]	count=1
function	and ||| resize	count=1
arg	mode ||| mode	count=1
function	function that samples ||| sample	count=2
class	other glir implementations may ||| glir	count=2
function	used by ||| as rescale	count=1
arg	list of 2d vertices ||| vertices color closed	count=1
function	vispy config [function_2] ||| [function_2] [function_1]	count=1
module	list of transforms ||| transforms	count=1
class	the torus [class_2] ||| [class_1] [class_2]	count=3
function	the [function] of this ||| [function]	count=1
function	error and show the ||| error	count=1
class	mesh previously saved ||| mesh	count=1
arg	offset and [arg_2] ||| [arg_1] [arg_2]	count=1
function	[function_1] vec4 ||| [function_2] [function_1]	count=1
class	not too large ||| debug proxy	count=1
class	event ||| scene mouse event	count=1
function	query string from ||| egl query string	count=1
function	the texture to link ||| texture	count=1
arg	a list of commands ||| commands	count=1
class	quaternion ||| quaternion	count=5
class	variable ||| variable	count=2
arg	a [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=22
module	return array of coordinates ||| geometry	count=1
module	in a layout ||| widgets	count=1
function	of gl [function_2] ||| [function_1] [function_2]	count=4
function	ieee ||| ieee	count=1
arg	and size ||| size	count=1
function_arg	[function_1] *code* ||| [arg_2] [function_1]	count=2
arg	will cause other ||| row col row_span	count=1
module_class	[module_1] function ||| [module_1] [class_2]	count=16
function	get unique ft_library handle ||| get handle	count=1
function	and not ||| arg	count=1
function	field-of-view angle of the ||| fov	count=1
function	set pyos_inputhook ||| clear inputhook	count=1
function	[function_1] sampler ||| [function_2] [function_1]	count=4
function	vertex [function_2] ||| [function_2] [function_1]	count=2
function	q parameter of the ||| q	count=1
function	invisible ||| blank	count=1
module	list ||| util fonts	count=1
class	elements in the buffer ||| data buffer	count=1
function	the whole ||| clear	count=2
class	large represetation ||| debug proxy	count=1
function	draw the border ||| border	count=2
arg	2d vertices for ||| cls vertices color	count=1
class	gui application instance ||| application	count=1
function_arg	update the [arg_2] ||| [function_1] [arg_2]	count=2
function	too large ||| arg repr	count=1
module_class	viewbox [class_2] ||| [class_2] [module_1]	count=2
arg	chunk to file and ||| chunk	count=1
function	apply the variables that ||| variables	count=1
class	simplified [class_2] ||| [class_1] [class_2]	count=2
arg	function ||| function update	count=2
class	surface [class_2] ||| [class_2] [class_1]	count=1
module_class	[module_1] object in ||| [module_1] [class_2]	count=2
function	size used during raycasting ||| size	count=1
class	and not ||| proxy	count=1
class	glir implementations may ||| glir	count=2
arg	called by subclasses to ||| tr	count=1
arg	vertices for ||| cls vertices color	count=1
function	the equation ||| set blend equation	count=1
function	exits ||| enable	count=1
class	array of ||| color array	count=2
function_arg	[function_1] [arg_2] ||| [function_1] interlace [arg_2]	count=1
function	array ||| array	count=2
arg	buffer this is ||| index	count=1
class	set ||| base camera	count=1
arg	text [arg_2] ||| [arg_2] [arg_1]	count=2
module	the [module_2] ||| [module_1] [module_2]	count=10
function_arg	variable [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	[function_1] buffer ||| [arg_2] [function_1]	count=7
module_class	in the function ||| visuals shaders function	count=1
class	the rate ||| canvas	count=1
function	coordinates for every ||| trail	count=1
function	the opengl viewport this ||| viewport	count=1
function_arg	the increment [arg_2] ||| [arg_2] [function_1]	count=4
module	useful and not ||| gloo gl	count=1
arg	width [arg_2] ||| [arg_2] [arg_1]	count=1
class	a useful and ||| debug proxy	count=1
arg	and i ||| i	count=1
function	:meth asrgb8 and ||| as	count=1
class	useful and ||| debug proxy	count=1
module	to generate the definition ||| visuals	count=1
arg	p return ||| p	count=1
arg	convert obj ||| obj	count=1
module_class	[module_1] [class_2] ||| [module_1] shaders [class_2]	count=1
function	too large represetation ||| repr	count=1
module	the horizontal x ||| scene cameras	count=1
module	provide in our ||| gloo	count=1
module	used by :meth asrgb8 ||| _bundled	count=1
function	planes e g rgb ||| planes	count=1
class	plot ||| plot visual	count=2
class	surface plot ||| surface plot visual	count=2
class	frame buffer ||| frame buffer	count=2
module	in our api ||| gloo gl	count=1
arg	using marching squares algorithm ||| level connected extend_to_edge	count=1
class	parameters ||| base gloo functions	count=3
arg	using provided [arg_2] ||| [arg_2] [arg_1]	count=2
class	a function ||| function maker	count=1
function	has ||| has	count=1
module	out ||| gl	count=1
class	new set of segments ||| segment	count=2
class	axis to a ||| axis widget	count=1
function	is below ||| below	count=1
module_class	[module_1] visual ||| [module_1] base [class_2]	count=1
class	whether the emitter is ||| event emitter	count=1
module	that make up the ||| visuals	count=1
function	free region ||| free region	count=2
function	known color names ||| color names	count=1
module	to call on this ||| app	count=1
function	repr ||| repr	count=1
function_arg	convert hex to [function_1] [arg_2] ||| color hex to [function_1] [arg_2]	count=1
function	depth value ||| depth value	count=2
class	render-buffer size and ||| render	count=1
function	list of template ||| template	count=1
class	too large represetation of ||| debug proxy	count=1
class	retrieve ||| glir program	count=1
arg	display this ||| symbol size edge_width	count=1
function_arg	[function_1] the state ||| [arg_2] [function_1]	count=1
arg	from the source into ||| source	count=1
module	be the ||| scene	count=1
class	method ||| base	count=1
function	true if this ||| data	count=1
function	backend ||| has application	count=1
module_class	[module_1] frame ||| [module_1] [class_2]	count=2
function	vertex color information ||| vertex color	count=2
arg	mesh data to obj ||| fname vertices faces	count=1
class	this object ||| object	count=1
module	to [module_2] ||| [module_1] [module_2] transform system	count=1
function	clipper ||| update clipper	count=1
function	get ||| arg repr	count=1
module	the [module] of ||| [module]	count=1
module	set verbatim code replacement ||| shaders	count=1
function	writing ||| mask	count=1
module	this ||| gloo	count=1
function	linevisual [function] from ||| compute iso [function]	count=1
arg	display ||| symbol size edge_width	count=1
module	and return ||| ext	count=2
arg	window connects ||| window	count=1
module	a ||| gloo gl	count=2
class	per :meth ||| reader	count=1
function	update the ||| update	count=2
function	the title of ||| title	count=1
class	transformsystem * canvas_transform ||| transform system	count=1
function	normalized unit length version ||| normalize	count=1
function	used by :meth asrgb8 ||| as	count=1
class	program object ||| program	count=1
function_arg	increment [arg_2] ||| [arg_2] [function_1]	count=4
module	an object providing ||| ext	count=1
function	count ||| remove dep	count=1
class	whether the emitter ||| event emitter	count=1
module	the initial high-res to ||| visuals text	count=1
function_arg	[function_1] b ||| [function_1] simple a [arg_2]	count=1
module_class	the object ||| gloo globject	count=1
function_arg	[function_1] curve ||| [arg_2] [function_1]	count=6
module	asrgb8 and ||| ext _bundled	count=1
function	webgl [function_2] ||| [function_2] [function_1]	count=1
arg	path p return the ||| p	count=1
function	[function_1] and clip ||| [function_2] [function_1]	count=1
function	transform ||| node transform	count=1
function	get a ||| get	count=3
module_class	of the visual ||| visuals visual	count=1
function	[function_1] id ||| [function_1] [function_2]	count=3
function	bezier ||| curve4 bezier	count=1
class	in this group ||| emitter group	count=6
class	[class] in ||| [class]	count=3
function	value to ||| value	count=1
function	from [function] return a ||| get function from [function]	count=1
module_class	[module_1] provides ||| [module_1] [class_2]	count=5
function	widget that ||| widget	count=1
module	are deprecated ||| gloo gl	count=1
module_class	of this chain ||| transforms chain	count=2
arg	used to ||| pos color width connect	count=1
function	[function_1] arrow using ||| [function_1] [function_2]	count=1
function	whether [function] of ||| clip [function]	count=1
arg	canvas logical pixel ||| viewport fbo_size fbo_rect canvas	count=1
module_class	of this variable ||| shaders variable	count=1
function	and uniforms to be ||| and uniforms	count=1
arg	used ||| pos	count=1
arg	and alpha blending ||| mode_rgb mode_alpha	count=1
module	widgets in [module_2] ||| [module_1] [module_2]	count=1
class	glir commands ||| glir queue	count=2
function_arg	[function_1] chunk to ||| [function_1] [arg_2]	count=1
class	large ||| proxy	count=1
function	[function_1] 3d arrow ||| [function_1] [function_2]	count=1
function	setting ||| setitem	count=1
function	coverage ||| coverage	count=1
function	check this from ||| check	count=1
function	for the vispy config ||| config	count=1
function	[function_1] function definition ||| [function_2] [function_1]	count=2
class	not ||| proxy	count=1
function_arg	[function_1] state of ||| [function_1] [arg_2]	count=1
function_arg	first function [arg_2] ||| [arg_2] [function_1]	count=1
function	return a view on ||| view	count=1
function	drawn in picking mode ||| picking	count=1
module	is about to ||| visuals	count=1
arg	this classmethod ||| cls	count=1
class	glir [class_2] ||| [class_2] [class_1]	count=3
module	coordinate frame [module_1] [module_2] coordinate frame ||| [module_1] [module_2]	count=1
class	the render-buffer size and ||| buffer	count=1
function	sub filter ||| filter sub	count=1
module	large ||| gloo	count=1
class	of a mesh previously ||| mesh data	count=1
function_arg	[function_1] filter ||| [arg_2] [function_1]	count=1
function	the gl ||| gl	count=1
module_class	[module_1] textvisual ||| [module_1] [class_2]	count=6
class	input [class_2] ||| [class_1] [class_2]	count=3
function	a tuple of numbers ||| read tuple	count=1
function	return projection of ||| projection	count=1
module	[module] this ||| [module]	count=2
function	[function_1] clear value ||| [function_1] [function_2]	count=2
class	ordered ||| ordered	count=2
module	itself ||| scene cameras	count=2
arg	set of vertices ||| vertices	count=1
class	the mesh ||| mesh data	count=2
function	sub ||| sub	count=1
arg	glsl ||| obj_names	count=1
function	minimum height of ||| height min	count=1
arg	< [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=4
module	helper used by ||| ext	count=1
arg	attribute data ||| data	count=1
arg	existing collection ||| parent key vertices indices	count=1
arg	[arg_1] parameters ||| [arg_2] texture offset [arg_1]	count=2
arg	update ||| x y z colors	count=1
function	fps of canvas/window as ||| fps	count=1
class	mesh previously saved ||| mesh data	count=1
function	tuple of numbers on ||| tuple	count=1
arg	callback and return ||| callback	count=1
module	print ||| util	count=1
arg	[arg_1] the dest ||| [arg_1] [arg_2]	count=3
class	cube helix colormap ||| cube helix colormap	count=3
class	mesh ||| mesh	count=6
function	in [function] ||| [function]	count=3
arg	filter ||| filter	count=1
arg	insert [arg] ||| index [arg]	count=2
function	or ||| scene	count=1
class	[class_1] [class_2] ||| [class_1] [class_2]	count=126
class	of this [class] do not ||| [class]	count=1
arg	of order n ||| n	count=1
arg	value or raise error ||| valid_dict	count=1
module_class	the array data ||| gloo data buffer	count=1
arg	as isinstance [arg] array ||| [arg]	count=1
arg	asrgb8 and :meth asrgba8 ||| targetbitdepth	count=1
function	vertices ||| line vertices	count=1
class	draw is emitted ||| canvas	count=1
function	[function] chunk ||| make [function]	count=3
arg	:meth asrgb8 and ||| get	count=1
function	[function_1] state parameters ||| [function_1] [function_2]	count=4
class	3d transformation matrix ||| matrix transform	count=1
arg	[arg_1] to display ||| [arg_1] [arg_2]	count=1
arg	texture at a ||| texture	count=1
function	in the stencil parameters ||| set stencil	count=1
arg	data ||| name data	count=1
arg	x with a ||| x	count=1
function	mapping [function] index ||| [function]	count=1
arg	window connects the ||| window	count=1
function	pixel values ||| read	count=1
class	and ||| proxy	count=1
module	for attributes ||| gloo	count=1
function	viewbox ||| viewbox set	count=1
module	this ||| scene widgets	count=4
module	distance ||| cameras	count=1
function	gl functions ||| gl lib	count=1
module	leave out the ||| gloo gl	count=1
arg	commands ||| commands	count=3
function	q parameter of ||| q	count=1
function	triangulate ||| triangulate	count=1
function	asrgb8 and ||| as	count=1
function_arg	plot a [arg_2] ||| [function_1] data color [arg_2]	count=1
function	[function_1] invisible ||| [function_2] [function_1]	count=1
function	the [function_1] [function_2] ||| [function_1] [function_2]	count=16
function	current value of ||| value	count=1
function	length-n ||| value	count=1
class	helper ||| reader	count=1
function	the convex [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] to rgb [arg_2]	count=1
function	of frame buffer color ||| color	count=1
function_arg	change event ||| change event	count=1
function	norm ||| norm	count=1
function	register callback ||| enable	count=1
function	of callback ||| callback	count=1
class	that the camera should ||| perspective camera	count=1
function	[function_1] sub-region ||| [function_2] [function_1]	count=2
function	the render-buffer size and ||| resize	count=1
class	an event while blocked ||| event	count=1
function	enum ||| check enum	count=1
function	and ||| as rescale	count=2
function	transform mapping from pixel ||| transform	count=1
function	below the current front ||| edge below front	count=1
module	api ||| gloo	count=1
function	part of a ||| dragging	count=1
module	names that are ||| gloo	count=1
function	require an application ||| requires application	count=2
class	colormap a full implementation ||| colormap	count=1
module	the ||| visuals graphs layouts	count=1
function	tuple of ||| read tuple	count=1
function	[function_1] error ||| [function_2] [function_1]	count=1
function	current value ||| value	count=1
module	and constants ||| gloo gl	count=1
arg	usage options for vispy [arg_1] [arg_2] backend ||| use [arg_1] [arg_2]	count=1
function	the variables that ||| variables	count=1
function	[function] index to ||| [function]	count=1
function	useful and not ||| arg repr	count=1
function	node ||| set clipper	count=2
class	transform that is equivalent ||| base transform	count=1
function	return next ||| next	count=1
class	this [class_2] ||| [class_2] [class_1]	count=3
function	[function_1] as ||| [function_2] [function_1]	count=1
arg	between [arg] ||| [arg]	count=2
class	and ||| debug proxy	count=2
arg	[arg_1] a c ||| [arg_2] [arg_1]	count=3
module	the signature for ||| visuals	count=1
function	the transform that maps ||| node transform	count=1
module	the given ||| scene cameras	count=2
function	[function_1] shape ||| [function_2] [function_1]	count=1
arg	path p return ||| p	count=1
class	[class_1] chain by ||| [class_1] [class_2]	count=3
class	this visual ||| markers visual	count=1
class	this node and its ||| node	count=1
class	matrix about a given ||| matrix transform	count=1
function	mapping [function] ||| [function]	count=1
function	chunk ||| chunk	count=3
function	the webgl backend for ||| webgl backend	count=1
function	texture to ||| texture	count=2
function	[function_1] vec4 ||| visuals transforms arg [function_1] [function_2]	count=1
class	working [class] ||| glir [class]	count=3
class	z containing the log ||| log	count=1
function	the q parameter ||| q	count=1
class	set the texture ||| texture	count=1
function	program [function_2] ||| [function_2] [function_1]	count=1
function	the blend ||| blend	count=1
function	asrgb8 ||| rescale	count=1
function	state to be ||| state	count=1
module	domain always matches the ||| scene	count=1
arg	size [arg_2] ||| [arg_2] texture offset [arg_1]	count=1
class	segments ||| raw segment	count=1
module	that ||| app	count=1
function	[function_1] vispy ||| [function_2] [function_1]	count=1
function	[function_1] [function_2] ||| [function_2] [function_1]	count=38
function_arg	triangulate [arg_2] ||| [function_1] [arg_2]	count=1
module	is ||| app	count=1
function	append ||| append	count=7
function	a useful and not ||| repr	count=1
function_arg	plot a [arg_2] ||| [function_1] [arg_2]	count=2
module	friend method of ||| scene	count=1
arg	and alpha blending parameters ||| mode_rgb mode_alpha	count=1
arg	for writing mesh data ||| fname vertices faces	count=1
function	a tuple ||| write tuple	count=1
module	useful and not ||| gloo	count=1
function_arg	[function_1] i ||| [arg_2] [function_1]	count=5
class	new ordered ||| ordered	count=1
class	itself ||| camera	count=1
module	our ||| gloo gl	count=1
module	as ||| app	count=1
function	triangle that has ||| triangle	count=1
function	useful and not too ||| arg repr	count=1
module	of ||| scene cameras	count=2
arg	p return ||| p key closed itemsize	count=1
function	[function_1] pnm ||| [function_2] [function_1]	count=1
arg	test if region width ||| width	count=1
module_class	[module_1] function ||| [module_1] shaders [class_2]	count=1
function	pnm file containing raw ||| pnm	count=1
arg	suitable app backend exists ||| backend has capable	count=1
class	emitter ||| emitter	count=1
class	angle of the camera ||| turntable camera	count=1
class	provides ||| canvas backend	count=1
class	camera parameters ||| turntable camera	count=1
function	get error ||| get error	count=2
module_class	[module_1] ordered ||| [module_1] [class_2]	count=2
function	of sides ||| sides	count=1
arg	[arg_1] offset and ||| [arg_2] [arg_1]	count=1
module	[module] scene coordinate ||| [module]	count=2
module	large represetation ||| gl	count=1
function_arg	[function_1] a b ||| [arg_2] [function_1]	count=2
arg	of ||| color	count=1
class	torus ||| torus	count=3
function	lists describing the path ||| node path	count=1
module	the local coordinate ||| visuals	count=3
class	too large ||| debug proxy	count=1
function	of gl state parameters ||| gl state	count=1
module	are incompatible [module] ||| [module]	count=2
function	first function definition ||| parse function signature	count=2
function	user string ||| string	count=1
function	the clear [function_2] ||| [function_2] [function_1]	count=1
module	that are deprecated or ||| gl	count=1
function	first ||| signature	count=1
module	register itself ||| scene cameras	count=1
function	writes a tuple ||| tuple	count=1
class	the camera should cover ||| camera	count=1
module	vertices to the ||| visuals	count=5
module	or out at the ||| scene	count=1
arg	filter ||| filt	count=1
function	process ||| process	count=3
class	simplified [class_2] ||| [class_2] [class_1]	count=2
module	the currently active ||| gloo	count=1
module	return an array ||| geometry	count=1
module	leave out ||| gloo	count=1
function	the transform ||| node transform	count=1
module	the [module] of the ||| [module]	count=1
class	large represetation ||| proxy	count=1
class	[class_1] hooks ||| [class_1] [class_2]	count=1
function	the physical size ||| physical size	count=2
function_arg	draw a [arg_2] ||| [function_1] texture [arg_2]	count=1
class	[class_1] [class_2] ||| [class_2] [class_1]	count=54
function	3d arrow using ||| arrow	count=1
module	generate ||| geometry	count=4
function_arg	[function_1] provide the ||| [function_1] [arg_2]	count=1
function	and ||| enable	count=1
class	[class_1] mouse ||| [class_1] [class_2]	count=1
function	width in ||| width	count=1
function	pyos_inputhook as ||| inputhook as func	count=2
class	parameters ||| gloo functions	count=3
arg	to provide the ||| toolkitname	count=1
function	writes a tuple of ||| tuple	count=1
module	helper used by :meth ||| ext	count=1
function_arg	[function_1] the state ||| [function_1] [arg_2]	count=1
function_arg	the increment [arg_2] ||| [function_1] value [arg_2]	count=4
module	and constants ||| gl	count=1
arg	friend method of viewbox ||| viewbox	count=1
class	the writer object ||| writer	count=1
function	[function_1] application ||| [function_1] [function_2]	count=1
function	vertices in the ||| vertices	count=1
function	[function] to ||| [function]	count=2
module	names ||| gl	count=1
module	from ||| gloo gl	count=1
arg	sampler value is ||| name value	count=1
function_arg	resize [arg_2] ||| [function_1] [arg_2]	count=5
module	pyopengl but leave ||| gl	count=1
function	sleep ||| sleep	count=1
module	child of [module] current ||| [module]	count=1
module	view using the ||| scene	count=1
function	a free region of ||| free region	count=1
arg	new ||| ref position	count=1
function	[function_1] nt ||| [function_2] [function_1]	count=1
function	below the ||| below	count=1
function_arg	[function_1] the logger ||| [arg_2] [function_1]	count=1
function	plot a ||| plot	count=1
function	serialize ||| serialize	count=1
class	get a useful and ||| debug proxy	count=1
arg	__repr__() <==> ||| _repr_running	count=1
module	[module_1] view ||| [module_1] [module_2]	count=2
function	quadratic ||| curve3	count=1
arg	b [arg_2] ||| [arg_1] [arg_2]	count=2
module	the default ||| scene	count=1
module	if two tris ||| geometry	count=1
function	state ||| state	count=3
function	get a ||| repr	count=1
function	base that ||| base	count=1
function	state to ||| state	count=1
class	this [class] do not ||| [class]	count=1
class	the writer ||| writer	count=1
function	the position of the ||| pos	count=1
arg	for writing mesh ||| vertices faces	count=1
function	[function_1] file ||| [function_2] [function_1]	count=3
class	this object ||| shader object	count=1
arg	[arg_1] the source ||| [arg_2] [arg_1]	count=1
class	glir ||| glir	count=6
arg	data to file ||| fname	count=1
class	the camera ||| turntable camera	count=1
module_class	to [class_2] ||| [module_1] transforms [class_2]	count=1
arg	[arg_1] parameters ||| [arg_2] [arg_1]	count=8
function	clear value [function_2] ||| [function_2] [function_1]	count=1
function	for errors returns ||| get error	count=2
module	the inverse transformation ||| visuals transforms	count=1
function_arg	[function_1] instance using ||| [function_1] [arg_2]	count=3
module	state to be the ||| scene cameras	count=1
function	type of the ||| type	count=2
function	[function_1] line ||| [function_2] [function_1]	count=2
arg	the vertex and fragment ||| vert frag	count=1
arg	used ||| get	count=1
function_arg	[function_1] [arg_2] ||| [function_1] edge1 [arg_2]	count=2
class	a ||| proxy	count=1
function_arg	[function_1] pixels ||| [function_1] interlace [arg_2]	count=1
function	window id of a ||| window id	count=1
arg	convert obj ||| obj default	count=1
function	[function_1] opposite point ||| [function_1] [function_2]	count=1
module	the ||| gl	count=1
function	to be a valid ||| check	count=1
arg	vertices parameters ||| vertices	count=1
module	and constants from ||| gl	count=1
class	array data ||| data	count=1
arg	returns (width, height, ||| lenient	count=1
module	pyopengl ||| gloo	count=1
module	are deprecated or ||| gloo	count=1
function	in the ||| in	count=1
function	[function_1] a point ||| [function_2] [function_1]	count=1
module	code replacement it ||| shaders	count=1
arg	shape ||| shape	count=1
module	the definition for ||| visuals	count=1
function	convex hull in convex_hull ||| triangulate	count=1
function	type of ||| rtype	count=1
module_class	set the [class_2] ||| [module_1] [class_2]	count=2
module	are ||| gl	count=1
class	is a wrapper ||| gloo functions	count=1
function	a quadratic [function_2] ||| [function_2] [function_1]	count=1
module_class	[module_1] texture ||| [module_1] [class_2]	count=4
function	if a node is ||| is	count=1
arg	chunk to ||| chunk	count=1
module	if the ||| scene	count=1
module	and ||| gl	count=2
function	the known color names ||| color names	count=1
arg	this classmethod is ||| cls	count=1
function	too ||| repr	count=1
class	camera ||| fly camera	count=1
function	[function] if this ||| [function]	count=1
module	provide in ||| gl	count=1
function	[function_1] window id ||| [function_2] [function_1]	count=1
class	event loop for ||| input hook manager	count=1
arg	specify what [arg] backend ||| [arg]	count=1
function	power [function_2] ||| [function_2] [function_1]	count=1
class	this node ||| node	count=1
class	an attached ||| frame	count=1
module	generate new ||| geometry	count=1
class	this emitter group ||| emitter group	count=2
class	cube helix ||| cube helix	count=2
module	this transform [module_2] ||| [module_1] [module_2]	count=1
class	get ||| canvas backend egl	count=1
function_arg	[function_1] a ||| [function_1] [arg_2]	count=2
arg	update window connects the ||| window	count=1
function_arg	[function_1] callback ||| [arg_2] [function_1]	count=1
function	template ||| template	count=1
function	power [function_2] ||| [function_1] [function_2]	count=1
function	render a ||| render	count=1
module_class	[module_1] subscene ||| [module_1] [class_2]	count=1
arg	a ||| a b epsilon	count=1
module	if two tris share ||| geometry	count=1
arg	and update the progress ||| progress	count=1
class	of ||| color	count=6
arg	color [arg] an ||| [arg]	count=1
function	the depth ||| depth	count=1
arg	format ||| shape format	count=1
class	[class_1] colormap a ||| [class_1] [class_2]	count=2
module_class	[module_1] matrix ||| [module_1] [class_2]	count=2
class	whether the emitter ||| emitter	count=1
function	outer radii of the ||| radii	count=1
class	size and ||| render	count=1
function	tuple of numbers e ||| tuple	count=1
arg	new function into ||| function	count=1
function	[function_1] line ||| [function_1] [function_2]	count=2
class	represetation ||| debug proxy	count=2
function	set pyos_inputhook to ||| inputhook	count=1
module	the ||| scene cameras	count=18
function_arg	draw [arg_2] ||| [function_1] texture [arg_2]	count=1
function	straight ||| straight	count=1
class	the emitter is ||| event emitter	count=1
module_class	for this object ||| gloo globject	count=1
function	a surface mesh ||| iso mesh	count=1
module	[module_1] this ||| [module_1] [module_2]	count=6
arg	attribute data this ||| data	count=1
class	the camera view using ||| camera	count=1
module	pyopengl but leave ||| gloo	count=1
module_class	the grid ||| scene widgets grid	count=1
arg	color s from ||| color	count=1
module	the local coordinate system ||| scene	count=1
module	all function ||| visuals shaders	count=1
arg	screen buffers this is ||| depth stencil	count=1
function	array and clip ||| array clip	count=2
class	of this visual ||| region visual	count=1
function	inform listeners that properties ||| update	count=1
function	font [function_2] ||| [function_2] [function_1]	count=3
arg	[arg] an nx3 ||| [arg]	count=1
class	transformsystem * canvas_transform maps ||| transform system	count=1
function	applies to ||| sources	count=1
function	useful and ||| arg repr	count=1
function	function from [function] return a ||| get function from [function]	count=1
module	z quaternion parameters ||| scene cameras	count=1
module	too large represetation of ||| gloo gl	count=1
function_arg	[function_1] position ||| [function_1] [arg_2]	count=2
class	that is ||| reader	count=1
function	register callback to ||| enable	count=1
arg	an isocurve ||| vertices	count=1
arg	mesh data to ||| fname vertices faces	count=2
function	base ||| base	count=1
function_arg	[function_1] for sdl2 ||| [arg_2] [function_1]	count=1
arg	edge0 [arg_2] ||| [arg_2] [arg_1]	count=1
module	make up the ||| visuals	count=1
module	out the names that ||| gloo gl	count=1
class	event in the ||| mouse event	count=1
module	useful and not ||| gl	count=1
arg	1 ||| edge1	count=1
class	surface [class_2] ||| [class_1] [class_2]	count=1
function	link ||| link	count=1
module	the glsl ||| visuals	count=1
function	[function_1] a sub-region ||| [function_2] [function_1]	count=2
class	a simplified ||| simplified	count=1
class	glir ||| glir program	count=3
function	a ||| repr	count=1
class	frame ||| frame	count=1
module	the output is ||| visuals shaders	count=1
class	copied in the collection ||| collection	count=1
function_arg	bezier [arg_2] ||| [arg_2] [function_1]	count=2
function	triangle that has edge[0] ||| triangle	count=1
class	method that ||| reader	count=1
function	the font [function_2] ||| [function_2] [function_1]	count=3
function	to [function_2] ||| visuals transforms arg [function_1] [function_2]	count=1
function	pan ||| pan	count=1
arg	text ||| text	count=1
function	[function_1] clear ||| [function_2] [function_1]	count=2
function	and major ||| tick frac	count=1
class	the transformsystem ||| transform system	count=1
module	[module_1] [module_2] ||| [module_1] [module_2]	count=38
function	is ||| is	count=5
function	[function_1] color ||| [function_2] [function_1]	count=1
function	user requested interactive mode ||| is interactive	count=1
function	is part of ||| is dragging	count=2
arg	im1 and [arg_2] ||| [arg_1] [arg_2]	count=1
function	the scene of this ||| scene	count=1
class	current mouse drag operation ||| mouse	count=1
module	corresponding to ||| visuals	count=1
class	to rotate the camera ||| camera	count=1
function	start profiling and ||| enable profiling	count=1
function	minor [function_2] ||| [function_2] [function_1]	count=1
class	each line strip ||| scrolling lines	count=1
class	canvas/window as the rate ||| canvas	count=1
class	this grid this ||| grid	count=1
function	shape ||| shape	count=1
module	glfw ||| app backends	count=2
module_class	in the regular ||| visuals regular	count=1
class	widget ||| widget	count=9
module	that are ||| gloo gl	count=1
function_arg	write [arg_2] ||| [function_1] [arg_2]	count=5
class	rate ||| canvas	count=1
module_class	of all items in [module_1] [class_2] by 1 items whose ||| [module_1] [class_2] roll	count=1
class	visual ||| arrow visual	count=1
arg	[arg_1] scroll parameters ||| [arg_1] [arg_2]	count=1
arg	used to display this ||| pos symbol size edge_width	count=1
function	[function_1] sub-region ||| [function_1] [function_2]	count=2
module	large represetation of ||| gloo gl	count=1
function	return image pixels as ||| as	count=1
module_class	[module_1] chain ||| [class_2] [module_1]	count=7
function	register ||| enable	count=1
class	too large represetation of ||| proxy	count=1
function_arg	[function_1] [arg_2] pixel format as a ||| [function_1] outfile [arg_2]	count=2
function	add a widget ||| add	count=1
function_arg	[function_1] data from ||| [function_1] [arg_2]	count=2
module	get a useful ||| gloo	count=1
class	useful and not ||| debug	count=1
function	a quadratic [function_2] ||| [function_1] [function_2]	count=1
class	generate a simplified chain ||| simplified chain	count=1
module	the transform parameters ||| scene	count=1
arg	b [arg_2] ||| [arg_2] [arg_1]	count=2
module	signature for this ||| shaders	count=1
function	primary [function] of the ||| [function]	count=1
module	[module_1] [module_2] ||| [module_2] [module_1]	count=40
function	the depth value ||| depth value	count=2
function	the shading code ||| shaders	count=1
function_arg	update [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] fragment ||| [function_1] shaders [arg_2]	count=1
function	[function_1] webgl ||| [function_1] [function_2]	count=1
function	free ||| free	count=1
module	draw ||| app	count=1
function	euler ||| from euler	count=1
class	register itself ||| base	count=1
class	z containing the log ||| log transform	count=1
arg	b onto a ||| b	count=1
module	is emitted ||| app	count=1
module	events draw ||| app	count=1
arg	screen buffers ||| stencil	count=1
module_class	[module_1] widget ||| [module_1] [class_2]	count=8
class	this group ||| emitter group	count=7
module	return an array nf ||| geometry	count=1
function	of the sampler ||| sampler	count=2
function	close ||| close	count=2
function	[function_1] hull ||| [function_2] [function_1]	count=3
module_class	this transform [class_2] ||| [module_1] [class_2]	count=6
class	commands are ||| queue	count=1
module	and constants ||| gloo	count=1
class	used ||| reader	count=1
module	our api ||| gloo gl	count=1
module	the inverse transformation ||| visuals	count=1
class	other glir implementations ||| glir	count=2
function	read a png file ||| read png	count=1
function	buffers from the ||| buffers	count=1
function	lists describing the path ||| path	count=1
module	generate the glsl code ||| visuals	count=1
class	visual ||| linear region visual	count=1
function	[function_1] [function_2] axis-angle representation ||| [function_1] [function_2]	count=1
class	of the ||| scene	count=1
class	transformsystem ||| transform system	count=1
arg	canvas [arg_2] ||| [arg_2] [arg_1]	count=2
class	to the canvas or ||| scene canvas	count=1
class	program in ||| glir program	count=1
function	z-coord given ||| depth to z	count=1
class	passed ||| reader	count=1
arg	[arg_1] and size ||| [arg_2] [arg_1]	count=5
module	and register callback to ||| util	count=1
module	the names that ||| gl	count=1
function	[function_1] part ||| [function_1] [function_2]	count=1
function	osmesa [function] ||| fix osmesa [function]	count=3
arg	[arg_1] c arguments ||| [arg_1] [arg_2]	count=3
function	from [function] coordinate frame ||| [function]	count=2
function	create [function_2] ||| [function_1] [function_2]	count=2
module	iterator ||| ext _bundled	count=1
function	the position of ||| pos	count=2
module	we provide in ||| gl	count=1
function_arg	opposite point [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	return [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	a [function] ||| read [function]	count=3
function	used ||| as rescale	count=2
function_arg	the path [arg_2] ||| [arg_2] [function_1]	count=2
module	the array of ||| visuals	count=1
function	transform of ||| transform	count=1
module	of canvas/window as the ||| app	count=1
class	in ||| writer	count=1
class	is in ||| base	count=1
arg	window connects ||| window callback	count=1
class	mesh previously saved using ||| mesh data	count=1
class	set ||| gloo functions	count=4
function	of template [function_2] ||| [function_1] [function_2]	count=1
function_arg	sleep [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	draw a [arg_2] ||| [arg_2] [function_1]	count=1
class	the current mouse ||| mouse	count=1
function	the webgl ||| webgl	count=1
module	the major ticks minor ||| visuals	count=1
function	[function_1] uniforms ||| [function_1] [function_2]	count=4
module	we provide in ||| gloo	count=1
class	useful ||| debug	count=1
function_arg	an array [arg_2] ||| [function_1] scanlines interlace [arg_2]	count=1
class	render ||| volume	count=1
function	is below the ||| below	count=1
module	[module_1] framebuffer ||| [module_1] [module_2] transform system	count=1
arg	attribute data this method ||| data	count=1
function	ends ||| parent	count=1
function	the minimum [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] file ||| [function_1] [function_2]	count=3
module	draw is ||| app	count=1
function	parameters ||| resize	count=1
arg	[arg_1] and scroll ||| [arg_2] [arg_1]	count=1
function	[function_1] variables ||| [function_2] [function_1]	count=5
function	large represetation of ||| repr	count=1
function	not ||| arg	count=1
function	[function_1] backend for ||| [function_2] [function_1]	count=3
arg	update window ||| window	count=1
arg	backend [arg] backend ||| app [arg]	count=1
function	iterates over ||| iter	count=1
arg	start with 'gl' from ||| constants	count=1
module	exits ||| util	count=1
module	are ||| gloo	count=1
arg	[arg_1] specifies ||| [arg_1] [arg_2]	count=1
function	chunk to ||| chunk	count=1
function	callback to print ||| enable	count=1
function	exception and traceback ||| exception	count=1
function	pnm file ||| pnm	count=1
function	set the render-buffer ||| resize	count=1
arg	sampler value ||| value	count=1
module	pyopengl ||| gloo gl	count=1
function	set the render-buffer size ||| resize	count=1
function	inverse of ||| inverse	count=1
function_arg	convert hex to [function_1] [arg_2] hex ||| color hex to [function_1] [arg_2]	count=1
function	count ||| add dep	count=1
function	itself ||| set	count=1
function_arg	mesh [arg_2] ||| [function_1] [arg_2]	count=3
arg	b onto [arg_2] ||| [arg_1] [arg_2]	count=3
module	or that we ||| gloo	count=1
class	whether this event ||| event	count=1
function	order in ||| order	count=1
module	the ||| visuals graphs	count=3
function_arg	[function_1] command ||| [arg_2] [function_1]	count=1
function	parse the ||| parse	count=1
function_arg	data [arg_2] ||| [function_1] [arg_2]	count=8
class	rotate the camera ||| fly camera	count=1
class	of the [class_2] ||| [class_1] [class_2]	count=1
arg	func with ||| func	count=1
module_class	vispy visuals meshvisual ||| visuals box	count=1
arg	2d vertices ||| vertices	count=1
function	transform that maps from ||| transform	count=1
class	too large represetation ||| debug proxy	count=1
module	glyph corresponding to ||| visuals text	count=1
function	send an exception ||| exception	count=1
function	run unit ||| unit	count=1
