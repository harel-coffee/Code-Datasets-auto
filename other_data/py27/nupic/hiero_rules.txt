function	sums down the rows ||| lscsum0	count=1
function_arg	indices of [arg_2] ||| [arg_2] [function_1]	count=3
class	used ||| permute variable	count=1
module	a sequence ||| frameworks	count=2
module_class	[module_1] files ||| [module_1] [class_2]	count=1
function	current ||| current	count=2
class	the new metrics ||| metrics	count=1
function	[function_1] bool if ||| [function_2] [function_1]	count=1
function	sequence of job ||| jobs get	count=1
arg	name [arg] member ||| [arg]	count=1
module	0 ||| opf	count=1
function	fieldmetainfo ||| fields	count=1
module	of iterations must be ||| frameworks opf	count=1
class	this ||| model record	count=1
class	permanence value for ||| spatial	count=1
class	will ||| helper	count=1
function_arg	synapses on [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	process one [arg_2] ||| [arg_2] [function_1]	count=1
class	this ||| opftask	count=1
function	state to ||| state	count=1
arg	[arg_1] given format ||| [arg_2] [arg_1]	count=2
function	least [function_2] ||| [function_1] [function_2]	count=1
arg	the "running" state ||| paramshash particlehash	count=1
class	of ||| stream iface	count=1
function	number to matching ||| number	count=1
function	[function_1] for ||| [function_1] [function_2]	count=7
function	the node's getparameter() call ||| get num strong synapses per time slot	count=1
arg	between the input pattern ||| inputpattern	count=1
function	a list of numbers ||| strip list	count=1
function	active state ||| active state	count=2
function	[function_1] the active ||| [function_1] [function_2]	count=1
function	[function_1] the knn ||| [function_2] [function_1]	count=1
module	returns ||| swarming exp_generator	count=1
function	new and ||| new	count=1
function	cycles for all ||| cycles	count=2
module_class	this [class_2] ||| [module_1] [class_2]	count=10
class	labels ||| classifier region	count=1
function	outputs ||| outputs	count=1
module_class	of the k ||| algorithms knnclassifier	count=1
class	the [class] this ||| [class]	count=1
function	time steps ||| time per	count=1
function	types for [function_2] ||| [function_2] [function_1]	count=2
function	performing global inhibition ||| global	count=1
function	return the random number ||| get random	count=1
module	and ||| regions	count=1
module	'setup' ||| frameworks	count=1
class	a version ||| spregion	count=1
arg	client is not already ||| client	count=1
class	storage or false if ||| record stream iface	count=1
arg	i ||| i	count=5
function	output [function_2] ||| [function_1] [function_2]	count=3
function	the field contributions statistics ||| field contributions	count=1
function	return info ||| get	count=1
arg	index return ||| index	count=1
function	choose a new ||| new	count=2
arg	edits ||| cls properties	count=2
class	stream to calculate ||| stream	count=1
function	of the anomaly ||| get anomaly	count=1
function	inhibition local inhibition is ||| columns local	count=1
function	jobids for jobs in ||| active jobs for	count=2
class	model ||| opfdummy model runner	count=2
function	comes to high-order ||| cells shared	count=1
function	indices of the winner ||| winner	count=1
function	[function_1] ids ||| [function_2] [function_1]	count=4
function	[function_1] list this ||| [function_1] [function_2]	count=4
function_arg	[function_1] fields ||| [function_1] clientinfo [arg_2]	count=1
class	0 ||| iteration	count=1
function	percent of ||| pct	count=1
class	two-gram ||| two gram	count=1
function_arg	creates [function_1] [arg_2] ||| [function_1] [arg_2]	count=14
arg	the queue of ||| partitionids	count=1
function	but only if the ||| if	count=1
arg	over a range ||| start	count=1
function	cell index in column ||| segment on cell	count=1
module	a range of ||| generators	count=1
function	from ||| list from file field	count=1
function_arg	[function_1] message to ||| [arg_2] [function_1]	count=1
function_arg	initialize tables [arg_2] ||| [function_1] [arg_2]	count=1
function	list to ||| segment flat list	count=1
function	for ||| init	count=1
function	input ||| input	count=5
function	description in base py ||| bucket	count=5
arg	job ||| jobid	count=1
function	the connections in the ||| connections	count=1
function_arg	get the sensor [function_1] [arg_2] to ||| [function_1] [arg_2]	count=1
arg	@param segment object segment ||| segment	count=1
function	description ||| range description	count=1
function	machine ||| machine	count=1
function	[function_1] columns ||| [function_2] [function_1]	count=4
module_class	[module_1] [class_2] ||| [module_1] model [class_2]	count=1
function	[function_1] function name ||| [function_1] run [function_2]	count=1
class	updates ||| temporal memory	count=1
class	given model instance ||| model	count=1
class	anomaly score ||| anomaly	count=1
function	of an existing job ||| job no	count=1
function	printouts for ||| distribution	count=1
arg	for reaping a variable ||| optstr value parser	count=1
function	true if all ||| is completed	count=2
function	labels have to ||| label	count=1
function_arg	field i ||| field i value	count=1
function	compute the singular ||| compute	count=1
function	an svm ||| svm	count=2
arg	reaping a ||| optstr value parser	count=1
function	[function_1] [function_2] ||| [function_1] algorithm [function_2]	count=3
function	[function_1] column returns ||| [function_2] [function_1]	count=1
module	get what the ||| opf	count=1
class	initialized in ||| spatial	count=1
function	removeregion ||| remove region	count=1
function	[function_1] active synapses ||| [function_2] [function_1]	count=8
function_arg	max value [arg_2] ||| [arg_2] [function_1]	count=1
arg	list of records read ||| records	count=1
arg	[arg_1] [arg_2] winner ||| [arg_2] [arg_1]	count=2
function	[function_1] contributions statistics ||| [function_2] [function_1]	count=3
arg	- a list of ||| key chunkindex fields	count=1
function	[function_1] counts ||| [function_2] [function_1]	count=3
class	storage or ||| record stream iface	count=1
module	'setup' ||| opf	count=1
function	labels [function_2] ||| [function_2] add [function_1]	count=1
function	in [function_2] ||| [function_2] [function_1]	count=1
function	generated permanence ||| init	count=1
arg	[arg_1] temporaloutput ||| [arg_2] [arg_1]	count=3
function	database name for the ||| for	count=1
function	club if the club ||| club	count=1
function	inhibition local inhibition is ||| inhibit columns local	count=1
function	and unique representation returns ||| rep	count=1
function	list from ||| list from file field	count=1
function	p [function] ||| is [function] estimator	count=1
function	saturation for a continuous ||| saturation	count=1
function	'results'), filter out ||| filter	count=1
function	in [function] ||| [function]	count=1
class	compute the new metrics ||| metrics	count=1
function	with [function_2] ||| [function_1] [function_2]	count=2
module	with ||| swarming	count=1
function	the category list ||| category list	count=1
arg	label a ||| label	count=1
function	[function_1] inference ||| [function_1] experiment [function_2] dir	count=1
function_arg	a serialized state ||| setstate state	count=2
function	[function_1] activity ||| [function_2] [function_1]	count=2
arg	f ||| f	count=2
module	randomly generated permanence ||| algorithms	count=1
function	whether there are more ||| exist after	count=1
class	in this phase ||| iteration phase spec learn	count=1
class	the record [class_2] ||| [class_1] [class_2]	count=3
module_class	the experiment ||| frameworks opf experiment	count=1
function	sort [function_2] ||| [function_2] [function_1]	count=2
function	field in a ||| field	count=1
function	given cell ||| cell	count=1
function	the range ||| delete range	count=1
arg	reaping a variable ||| optstr value parser	count=1
function	interface to ||| prediction logger	count=2
function	given [function] ||| get [function]	count=1
function	cell in this column ||| cell	count=1
function	to be saved ||| init	count=1
function	logger object for the ||| logger	count=1
function	names ||| names	count=2
arg	niters number of ||| niters inferenceargs	count=4
function	[function_1] label ||| [function_2] [function_1]	count=3
function	specs in three groups ||| specs	count=2
function	[function_1] duty ||| [function_1] [function_2]	count=10
arg	sequences is ||| seqlength	count=1
function_arg	region to [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	creates ndesirednewsynapes [function_1] [arg_2] possible choosing ||| [function_1] [arg_2]	count=1
function	property and return ||| get	count=4
function_arg	[function_1] a job ||| [function_1] for checkpointed [arg_2]	count=1
function	1 field in a ||| field	count=1
class	the tm @param ||| backtracking tm	count=1
function	from the [function_2] ||| [function_2] [function_1]	count=4
function_arg	records from [arg_2] ||| [function_1] exist after [arg_2]	count=1
class	the model [class_2] ||| [class_1] [class_2]	count=1
arg	coordinate to ||| cls coordinate	count=1
function	index of the ||| cell index	count=1
function	the database name ||| db name	count=1
function	used as optparse callback ||| callback	count=1
function_arg	updates the [arg_2] ||| [arg_2] [function_1]	count=4
module	[module] metric-name ||| [module]	count=3
class	us back at the ||| record stream iface	count=1
module_class	the model ||| frameworks opf model	count=1
arg	retrying a pymysql ||| timeoutsec	count=1
function	maximum number [function_2] ||| [function_2] [function_1]	count=6
function	public api for ||| get	count=1
function	[function] hub ||| [function] hub	count=1
class	[class] element ||| [class]	count=3
function	sub-field bucket indices ||| bucket indices	count=1
function_arg	bucket map [arg_2] ||| [function_1] [arg_2]	count=1
function	for debugging ||| null distribution	count=1
function	[function_1] predicted ||| [function_1] [function_2]	count=1
function	map mapping ||| map	count=1
function	the database name for ||| name	count=1
function	element from nupic ||| convert nupic	count=2
class	method to compute a ||| memory	count=1
arg	an ||| dimensions	count=2
arg	values ||| values	count=1
function	for a given encoder ||| perm encoder str	count=1
module_class	directory path [module_1] [class_2] ||| [module_1] file [class_2]	count=2
module	encoders ||| encoders	count=3
arg	permanence ||| perm columnindex raiseperm	count=1
module_class	the [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	[function_1] given version ||| [function_2] [function_1]	count=1
function	return a segmentupdate ||| get	count=1
class	of the file again) ||| stream iface	count=1
function	return the current ||| get	count=1
arg	goes through ||| colidx cellidx seglist	count=1
function	verbosity ||| verbosity	count=1
module	field ||| data generators	count=2
function	state in the ||| write state	count=1
function	loads a saved ||| load hyper search	count=2
function	will update ||| update	count=1
function	file and ||| read config file	count=2
class	[class] index ||| [class]	count=1
function	returns the number of ||| get	count=2
function	new synapse [function_2] ||| [function_2] [function_1]	count=2
function_arg	score [arg_2] ||| [function_1] swarmid [arg_2]	count=1
arg	the given format ||| array format	count=1
function	[function_1] only ||| [function_1] [function_2]	count=1
function	hyperplanes used by the ||| hyperplanes	count=1
arg	dict describing the ||| filename path	count=1
class	[class_1] the file ||| [class_2] [class_1]	count=2
class	a randomly generated permanence ||| spatial pooler	count=1
function	number ||| number	count=3
function	warrant retries ||| sql	count=1
function_arg	number of [arg_2] ||| [function_1] [arg_2]	count=1
function	custom ||| custom	count=6
module	retrieves [module] ||| [module]	count=1
class	periodicactivityrequest ||| activity mgr	count=4
arg	s ||| i s	count=1
function	permanence value for a ||| init	count=1
class	this phase ||| iteration phase	count=1
function	returns mean ||| mean	count=1
arg	runtimeelement ||| runtimeelement	count=1
function	_hypersearchjob ||| hyper search job	count=2
class	not have ||| results db	count=1
function	value to json ||| metrics to json	count=2
function	[function_1] dictionary ||| [function_1] [function_2]	count=3
function	[function_1] ids ||| [function_1] [function_2]	count=3
function	of predictive [function_2] ||| [function_2] [function_1]	count=1
arg	input pattern with ||| inputpattern	count=1
arg	gets the specified fields ||| fields ignorekilled	count=1
arg	dict d ||| d	count=2
function	given encoder ||| encoder	count=1
class	our member variables ||| backtracking tmcpp	count=1
function	orphaned this is called ||| orphaned	count=1
class	randomly generated permanence value ||| spatial	count=1
arg	function description in ||| inpt	count=1
function	from a file ||| from file	count=6
function	return a [function_2] ||| [function_1] custom [function_2]	count=2
module	instantiate a ||| frameworks	count=1
module_class	[module_1] beginning ||| [module_1] [class_2]	count=8
class	active state from the ||| backtracking	count=1
function	model ||| comput model	count=1
arg	nth ||| n	count=1
arg	current position bookmark ||| bookmark	count=1
module_class	data [class_2] ||| [module_1] [class_2]	count=2
function	plot of the ||| plot	count=1
module	construct ||| recordsensorfilters	count=1
arg	the engine-level ||| modelid	count=1
function	the representation ||| init encoder	count=1
function	distances in the ||| distances	count=1
function	inference value from ||| infer	count=2
function	that correctly predicted this ||| predicted	count=1
function	the latest [function_2] ||| [function_2] [function_1]	count=4
function	of learning and inference ||| stats infer	count=1
class	of ||| periodic	count=2
class	stream as a ||| stream	count=1
function_arg	a numpy [arg_2] ||| [function_1] str [arg_2]	count=1
function	list of tuples ||| field list	count=1
module	'setup' ||| frameworks opf	count=2
class	in the given hypersearch ||| search	count=1
arg	to inputpattern ||| inputpattern	count=1
function	[function_1] message ||| [function_2] [function_1]	count=4
function	compute ||| compute	count=12
module	a sequence of periodicactivityrequest ||| frameworks opf	count=2
arg	reaping ||| optstr value parser	count=1
class	cells in ||| temporal memory	count=1
function	generates a lookup ||| lookup	count=1
function	max new ||| max new	count=4
function	with the best result ||| best	count=1
function_arg	[function_1] 'newstate' ||| [arg_2] [function_1]	count=1
function_arg	a file [arg_2] ||| [function_1] [arg_2]	count=2
class	to predictionwriteriface interface ||| adapter	count=2
class	construct this encoder ||| encoder	count=1
function	experiment description ||| experiment	count=1
arg	[arg_1] and j ||| [arg_1] [arg_2]	count=1
function	segments that ||| segments	count=1
function	performs local inhibition local ||| inhibit columns local	count=1
function_arg	internal filter [arg_2] ||| [arg_2] [function_1]	count=1
class	report csv ||| report	count=1
class	encoder ||| encoder	count=10
arg	monitor monitormixinbase monitor mixin ||| monitor title show	count=1
function	_getonematchingrownoretries(), ||| one matching	count=1
class	seeks ||| record stream	count=1
function_arg	[function_1] the bookmark ||| [arg_2] [function_1]	count=6
function	get the predicted segment ||| predicted segment	count=1
function	[function_1] path of ||| [function_2] [function_1]	count=2
class	data ||| record	count=1
function_arg	[function_1] [arg_2] is a moving ||| [function_1] [arg_2]	count=12
function	sum of the ||| sum	count=1
arg	the overlap ||| overlaps activecolumns	count=1
function	for a ||| get fields for	count=1
class	a ||| mgr	count=2
function	metric over an ||| get metric from	count=1
function	[function_1] the logger ||| [function_2] [function_1]	count=1
function	in column returns ||| get	count=1
function_arg	[function_1] [column cellidx] ||| [function_1] active indices state [arg_2]	count=1
class	put us back at ||| record stream iface	count=1
function	from the learning state ||| state	count=1
class	underlying sdrclassifier ||| sdrclassifier	count=1
arg	segment object segment object ||| segment	count=1
class	remain in this phase ||| phase spec learn and infer	count=1
function	potential segment update ||| segment updates	count=1
function	for each ||| for	count=1
function	[function_1] concurrency violation ||| [function_2] [function_1]	count=2
arg	by increment the 'fieldname' ||| fieldname increment	count=1
arg	on a segment ||| segment	count=1
function	[function] already exists ||| process [function]	count=3
function_arg	implemented in [arg_2] ||| [arg_2] [function_1]	count=1
function	[function] classifier ||| [function] add	count=2
class	sample ||| region	count=1
function	creates ||| create list	count=1
class	or runs it inline ||| search runner	count=1
arg	passed as a ||| dbconn	count=1
function	connected [function_2] ||| [function_1] [function_2]	count=1
arg	command [arg] ||| [arg]	count=1
function	returns an array of ||| get	count=1
function	dated potential segment update ||| to segment updates	count=1
function	was least recently ||| least recently	count=2
arg	prediction ||| prediction accumulatederror	count=1
class	including 'setup' ||| driver	count=1
function	given column return ||| get	count=1
function	attempt ||| or get unique job	count=1
function	args dictionary ||| args	count=1
function	all [function_2] ||| [function_1] [function_2]	count=2
function	set of possible report ||| append report	count=1
arg	based on params into ||| params	count=1
function	the number [function_2] ||| [function_2] [function_1]	count=4
function	sets ||| set	count=25
module	results and ||| swarming	count=1
function	[function_1] the labels ||| [function_2] [function_1]	count=1
function	[function_1] for all ||| [function_2] data [function_1]	count=1
function	minimum [function_2] ||| [function_1] [function_2]	count=3
class	to disk ||| stream reader	count=1
arg	minpermanence and deletes any ||| minpermanence minnumsyns	count=1
function	[function_1] retries ||| [function_2] [function_1]	count=5
arg	in dict d ||| d	count=2
class	see if the model ||| opfdummy model runner	count=1
function	update the inference active ||| infer	count=1
function	spatial [function_2] ||| [function_2] [function_1]	count=1
function	get the needed length ||| length	count=1
function	to create an anomaly ||| anomaly params	count=1
function	kill ||| kill	count=1
function	labels from each ||| labels	count=1
function	another exception that ||| exception	count=1
function	iterations must be ||| init	count=1
function	generate [function_2] ||| [function_1] [function_2]	count=6
class	disk ||| record stream iface	count=1
function	get [function_2] ||| [function_2] [function_1]	count=10
arg	based on params ||| params	count=1
class	is ||| spatial pooler	count=2
function	probability that ||| probability	count=1
function	potential [function_2] ||| [function_2] [function_1]	count=1
arg	a new job request ||| cmdline jobhash clientinfo	count=1
function	and persist it ||| property	count=2
module	the number of ||| regions	count=1
module_class	[module_1] pattern ||| [module_1] [class_2]	count=4
arg	the coordinate ||| cls coordinate n	count=1
function	[function_1] segment decrement ||| [function_1] [function_2]	count=3
module	[module_1] current ||| [module_1] [module_2]	count=1
class	inference is made ||| inference element	count=1
function	maximum [function_2] ||| [function_2] [function_1]	count=6
arg	request ||| cmdline jobhash clientinfo	count=1
function_arg	[function_1] proto object ||| [arg_2] [function_1]	count=1
arg	our _internalstats ||| bottomupnz predictedstate colconfidence	count=1
function_arg	files into [arg_2] ||| [function_1] key [arg_2]	count=1
function	same job by the ||| job	count=1
class	again) ||| stream iface	count=1
function	[function_1] velocity ||| [function_1] [function_2]	count=1
arg	goes through a ||| colidx cellidx seglist	count=1
arg	output dictionary ||| output	count=1
class	the encoder ||| encoder	count=1
class	places ||| two gram	count=1
module_class	[module_1] iteration returns ||| [module_1] [class_2]	count=2
module	of records that ||| frameworks opf	count=1
function	[function_1] applies ||| [function_1] [function_2]	count=2
arg	[arg_1] [arg_2] previous winner ||| [arg_2] [arg_1]	count=2
function	path to a json ||| with json	count=1
arg	[arg] note ||| [arg]	count=2
module	what the ||| frameworks opf	count=1
function_arg	seeks to [arg_2] ||| [arg_2] [function_1]	count=1
arg	requestedactivities a sequence of ||| requestedactivities	count=2
function	predicted state ||| predicted state	count=2
class	returns ||| classifier helper	count=1
function	of ||| models get fields	count=2
arg	recognition accuracy ||| c gamma progressstart progressend	count=1
class	computing a moving ||| moving	count=1
arg	json representation of obj ||| obj	count=1
arg	s ||| c i s	count=1
class	value for a synapses ||| pooler	count=1
function	node's getparameter() call ||| num strong synapses per time slot	count=1
arg	method goes through a ||| colidx cellidx seglist	count=1
function	sources it finds ||| sources	count=1
function	the needed length ||| length	count=1
function	of metrics ||| get	count=1
function	sequence of model records ||| models get fields	count=1
function	_getonematchingrownoretries(), but with ||| one matching row with	count=1
arg	the status ||| status	count=1
module	and ||| swarming exp_generator	count=1
class	model's [class_2] ||| [class_2] [class_1]	count=4
function	sequence of model ||| models get fields	count=1
class	iterations must ||| iteration phase	count=1
function	svd the svd ||| svd	count=1
function_arg	passes the "finish [function_1] [arg_2] note upon completion ||| frameworks opf model control [function_1] cb [arg_2]	count=1
function	accumulate ||| accumulate	count=1
function	sum of ||| aggr sum	count=1
function	count [function] data rows ||| [function] data row	count=1
module	create ||| regions	count=1
arg	numparticles particles in ||| swarmid minnumparticles	count=1
arg	labelname to each ||| labelname	count=2
function	value of 1 field ||| increment int field	count=1
function	anomaly ||| anomaly	count=9
function	local history buffer and ||| shifted ground truth	count=1
module	key name and ||| swarming	count=1
function	as a bool ||| bool	count=1
function	private ||| private	count=1
function	time steps ||| time per timestep	count=1
function	database name for ||| db name	count=1
function	label for the metric ||| metric label	count=1
function	model's [function_1] [function_2] ||| model [function_1] [function_2]	count=2
function_arg	clear all ||| clear cls	count=1
arg	streamdefdict stream definition as ||| streamdefdict	count=1
function	that is initialized in ||| init	count=1
function	[function_1] knn ||| [function_2] [function_1]	count=1
module_class	[module_1] used ||| [module_1] [class_2] get	count=2
function	all models in a ||| models	count=1
function	- exit ||| exit	count=1
class	variable that permutes ||| permute	count=1
class	advance ||| phase manager	count=1
function	of swarm [function_2] ||| get matured [function_1] [function_2]	count=1
function	current model as ||| as	count=1
function	sets the permanence increment ||| set	count=2
module	and return ||| swarming exp_generator	count=1
function	violation [function_2] ||| [function_2] [function_1]	count=5
module	sequence ||| frameworks	count=2
function_arg	[function_1] nth ||| [function_1] record [arg_2]	count=1
function	[function_1] generations ||| [function_2] [function_1]	count=5
function	experiment description [function_2] ||| [function_2] [function_1]	count=2
function	create an anomaly model ||| anomaly params	count=1
function	the learning state ||| set state	count=1
function	update the state ||| write state	count=1
function	minval and ||| and max	count=1
function	returns [function_2] ||| [function_1] custom [function_2]	count=3
function	boost factors for all ||| boost factors	count=1
arg	the next timestep ||| inferenceelement	count=2
function	should only have an ||| update job results	count=1
class	a sequence ||| mgr	count=2
function	[function_1] of simple ||| [function_2] [function_1]	count=1
function_arg	[function_1] the groundtruth ||| [arg_2] [function_1]	count=3
function	model as orphaned this ||| as orphaned	count=1
arg	in the status_completed state ||| jobid alreadyrunning	count=2
function	min threshold ||| min threshold	count=2
arg	n values for the ||| n	count=1
class	stream to calculate total ||| stream	count=1
function	+ exp b ||| log sum exp	count=2
class	phase ||| phase spec learn and	count=1
class	the record stream ||| record stream iface	count=2
function	the connected [function_2] ||| [function_2] [function_1]	count=1
arg	edits the xml ||| properties	count=2
class	a synapses ||| spatial	count=1
class	model instance ||| model	count=2
class	state ||| knnanomaly classifier	count=1
function	columns ||| columns	count=5
function	partition ids ||| partition ids	count=2
function	[function_1] potential percent ||| [function_1] [function_2]	count=1
function	state in ||| write state	count=1
function	value of w for ||| get w	count=1
function	params [function_2] ||| [function_2] [function_1]	count=3
class	[class] dict containing ||| record [class]	count=1
function	all models ||| models get fields	count=1
class	shared ||| shared	count=1
function	generate a coincidence [function_1] [function_2] random inputs to the ||| [function_2] [function_1]	count=3
function	results ||| results	count=2
class	'setup' callbacks ||| opftask driver	count=1
function	to seconds ||| seconds	count=1
function	[function_1] far and ||| [function_1] model id [function_2]	count=2
module_class	[module_1] state of ||| [module_1] [class_2]	count=4
arg	decorator for retrying a ||| timeoutsec logger	count=1
function	returns the index ||| get cell index	count=1
function	state as a ||| state	count=1
arg	[arg] possible ||| cls connections random [arg]	count=1
arg	spatialoutput and temporaloutput ||| spatialoutput temporaloutput	count=3
function	get ||| get raw	count=1
function	[function_1] label ||| [function_1] optimized metric [function_2]	count=1
function	list of labels ||| metric labels	count=2
class	given hypersearch job and ||| hyper search	count=1
function_arg	[function_1] in the ||| [arg_2] [function_1]	count=7
function	the encoder name ||| encoder name from	count=2
function	[function_1] name ||| [function_1] [function_2]	count=4
function	job to [function_2] ||| [function_2] [function_1]	count=1
module	is ||| algorithms	count=1
function	matrix this is used ||| matrix	count=2
function	[function_1] learn from ||| [function_2] [function_1]	count=2
function	the maximum [function_2] ||| [function_1] [function_2]	count=6
function	models that ||| models	count=3
function	internal filter variables for ||| filter	count=1
class	than ||| iteration	count=1
function	list ||| strip list	count=1
function	mangled private ||| private	count=1
module	whether ||| swarming exp_generator	count=1
function_arg	the indices [arg_2] ||| [function_1] cls [arg_2]	count=1
arg	the next n ||| n	count=1
function	bypass pickle for saving ||| data	count=1
function	_getonematchingrownoretries(), but with ||| get one matching row with	count=1
module	and write the header ||| frameworks opf	count=1
function	the models [function_2] ||| [function_2] [function_1]	count=3
function	description ||| description	count=6
function	init all ||| init state	count=1
arg	@param categoriesout ||| categoriesout	count=1
function_arg	returns a range of [function_1] [arg_2] if 'bookmark' ||| record stream iface get [function_1] [arg_2] range	count=4
function	task instances ||| model control	count=1
function	the smallest ||| min	count=1
class	jobs do not use ||| jobs	count=1
function	amount for active ||| syn perm active inc	count=2
arg	log(exp a ||| out	count=1
function	into coordinates using ||| coordinates from	count=1
class	disk ||| stream reader	count=1
class	this model ||| value model	count=1
arg	inputpattern to ||| inputpattern partitionid	count=1
class	context ||| experiment description api	count=1
function	the boost ||| boost	count=1
function	this region does ||| sensed	count=1
function_arg	segment [arg_2] ||| [function_1] [arg_2]	count=1
function	the overlap duty ||| overlap duty	count=2
arg	gets the specified ||| ignorekilled	count=1
function	[function_1] [function_2] of ||| [function_1] [function_2]	count=8
function	database name ||| name	count=1
module_class	encoders base [class_2] ||| [module_1] date [class_2]	count=1
arg	_getmatchingrowsnoretries(), ||| maxrows	count=1
function	assigned a category ||| category	count=1
function	dict of all temporary ||| dict	count=1
function	[function_1] new segment ||| [function_1] [function_2]	count=1
class	runs it inline for ||| runner	count=1
function	list from ||| list from	count=1
function	a dict containing ||| dict	count=3
function	[function_1] seconds in ||| [function_2] from [function_1]	count=1
function	the max value ||| multi arg max	count=1
function	a log ||| log	count=1
function	from the a list ||| list from file field list	count=1
class	file is always closed ||| file record stream	count=1
function	special row id is ||| special row id	count=1
function	the state in ||| write state	count=1
function	[function_1] statistics for ||| [function_2] [function_1]	count=1
function_arg	[function_1] job ||| [arg_2] [function_1]	count=1
arg	the coordinate ||| coordinate	count=1
function	we know [function] be ||| finish [function]	count=1
function	return a segmentupdate data ||| get	count=1
function	most common value seen ||| mode	count=1
function	initialize tables ||| init tables	count=1
function	returns sensor [function_2] ||| [function_1] [function_2]	count=1
function	one ||| custom compute	count=1
function	instances ||| model control	count=1
function_arg	in cell [arg_2] ||| [arg_2] [function_1]	count=2
arg	records - a list ||| chunkindex fields	count=1
arg	metrics ||| metrics label	count=1
function	anomaly model [function_2] ||| [function_2] [function_1]	count=2
function	attempt to insert ||| insert or get unique job no retries	count=1
class	is initialized in ||| spatial	count=1
function	state to 'newstate' ||| state	count=1
function	returns the ||| get data	count=1
function	trace made ||| trace	count=1
function	types [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] instance ||| [function_1] algorithm [function_2]	count=3
arg	job request but only ||| cmdline	count=1
function	the curve auc using ||| curve	count=1
function	unique representation returns ||| rep	count=1
arg	result and best position ||| particleid	count=1
function_arg	synapse [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	the distances [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] 'newstate' is ||| [arg_2] [function_1]	count=1
arg	associate ||| partitionid issparse	count=1
function_arg	state to [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	id for [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	for [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	serialized [arg_2] ||| [arg_2] [function_1]	count=2
function	with retries ||| with retries	count=2
function	[function_1] overlap duty ||| [function_1] [function_2]	count=1
module_class	encoders [class_2] ||| [module_1] [class_2]	count=3
function	encapsulates ||| map potential	count=1
function	class virtual method override ||| decoder output field types	count=1
function	boost factors ||| boost factors	count=2
function	the 'sequenceid' [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] models that ||| [function_1] completed [function_2]	count=1
arg	w coordinates [arg_2] ||| [arg_2] [arg_1]	count=2
function	returns the activity ||| get	count=1
function	local inhibition is used ||| local	count=1
function	overrides the python logging ||| enable logging	count=1
class	for computing a moving ||| moving	count=1
function	seed random number generator ||| random	count=1
function	concurrency ||| concurrency	count=2
function	create a [function_2] ||| [function_2] [function_1]	count=8
function	completion [function_2] ||| [function_1] [function_2]	count=4
function	returns the experiment description ||| get experiment description	count=1
function	[function_1] cumulative w ||| [function_2] [function_1]	count=1
function	compute a metric over ||| metric	count=1
class	for temporalmemory instances ||| temporal	count=1
function	hash a ||| hash	count=1
function	of ||| models get	count=1
function	violation ||| violation	count=1
function	all ||| all	count=8
class	the prediction ||| basic prediction	count=1
class	generated permanence value for ||| spatial pooler	count=1
class	method to compute a ||| temporal memory	count=1
function	the end ||| end	count=3
function	that is sent only ||| only	count=1
function	index of the field ||| index	count=1
class	configuration settings ||| configuration	count=1
function	set [function_2] ||| [function_1] anomaly [function_2]	count=3
arg	inputdata ||| inputdata	count=2
function_arg	instance [arg_2] ||| [function_1] [arg_2]	count=5
function	for returning the category ||| category	count=1
arg	the groundtruth from ||| groundtruth	count=1
function	segment number ||| segment	count=1
function	message that is ||| message	count=1
function	beginning of ||| rewind	count=1
function	learning" ||| finish learning	count=1
function	closest training ||| closest other training	count=1
function	into the numpy ||| into	count=1
function	chunk of records records ||| chunk	count=1
class	the model ||| two gram model	count=1
arg	@param [arg] int ||| [arg] w num	count=1
class	us ||| stream	count=1
function	returns sensor [function_2] ||| [function_1] classifier [function_2]	count=3
function	[function_1] index ||| [function_1] field [function_2]	count=1
arg	returns log(exp a ||| out	count=1
class	this ||| model record encoder	count=1
function	each predicted => active ||| predicted active	count=1
function	are determined ||| local	count=1
class	version ||| svmclassifier node	count=1
arg	change the ||| jobid completionreason completionmsg useconnectionid	count=1
arg	for a synapse ||| synapse	count=1
function	a metric over an ||| get metric	count=1
function	new ||| run new	count=1
function	return the dictionary ||| get	count=1
function	average ||| avg	count=2
function	the label for ||| label	count=1
function	the closest training pattern ||| closest other training pattern	count=1
function	reset ||| reset	count=3
function	the control element from ||| convert	count=1
class	prediction ||| prediction	count=6
function	of model records ||| get fields	count=1
arg	coordinates by ||| cls coordinates	count=2
function	job that ||| resume job no	count=1
arg	vector ||| vector	count=2
function	update boost [function_2] ||| [function_2] [function_1]	count=4
function	a neighborhood [function_2] ||| [function_2] input [function_1]	count=1
function	end of inference ||| end	count=1
arg	compute logic when implementing ||| patternnz inputtsrecordidx rawinput	count=1
function	to seconds [function_2] ||| [function_2] [function_1]	count=2
class	returns a randomly ||| spatial pooler	count=1
function_arg	[function_1] a mangled ||| [arg_2] [function_1]	count=1
function	field statistics ||| field stats	count=2
function	any to delay ||| delay	count=1
function	average number of columns [function_1] [function_2] ||| [function_1] [function_2]	count=1
function	a bool if ||| bool	count=1
function	[function_1] [function_2] classifier ||| [function_2] remove [function_1]	count=3
function	the database name for ||| db name	count=1
arg	recognition accuracy of ||| c gamma progressstart progressend	count=1
arg	c [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] active columns ||| [function_1] trace [function_2]	count=1
function	jobs table ||| jobs	count=1
module	function that saves ||| frameworks opf	count=1
function	probability of ||| tail probability	count=1
arg	of thinking about ||| w minval maxval n	count=1
module	and see if the ||| swarming	count=1
arg	namedtuples from the result ||| result	count=1
function	validates the --descriptionfromfile option ||| handle description from file option	count=1
function	a sequence of job ||| get fields	count=1
function	the output ||| delete output	count=1
function	row id is ||| row id	count=2
function	for number of sequences ||| get	count=1
function	returns the overlap duty ||| get overlap duty	count=1
function	job that is ||| job	count=1
function	in a connected state ||| init perm connected	count=1
function	should ||| should	count=1
function	# [function] ||| [function]	count=1
module	us back at ||| data	count=1
function	experiment [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] [function_2] ||| [function_2] data [function_1]	count=4
function	labels have ||| label	count=1
class	hypersearch job and emits ||| search	count=1
function	[function_1] distances between ||| [function_2] [function_1]	count=1
class	state ||| knnanomaly classifier region	count=1
function	int count [function] data rows ||| [function] data row	count=1
function	the model ||| model	count=3
function	total on ||| list of on	count=1
class	a sequence of ||| activity mgr	count=2
arg	for reaping ||| optstr value parser	count=1
function	+ exp ||| sum exp	count=1
module	custom [module] ||| [module]	count=2
class	a ||| metrics	count=1
function	get the encoder name ||| get encoder name from	count=1
function	the given ||| from	count=1
arg	the permanence values ||| columnindex permanence	count=1
class	of iterations ||| iteration phase	count=1
function	process the ||| process	count=2
function	see also htmpredictionmodelcontroldisabletplearningcb ||| enable tplearning	count=1
module_class	[module_1] contains description ||| [module_1] [class_2]	count=1
function	closest ||| closest	count=2
arg	a job that ||| jobid	count=1
function	index of [function_2] ||| [function_2] [function_1]	count=17
function	change [function] ||| set min [function]	count=1
function	emit model info ||| emit	count=1
function	model via opf's modelfactory ||| scalar metric with time of day	count=1
module	a value ||| data generators	count=1
module	to [module] plot's ||| [module]	count=1
function	json [function_2] ||| [function_1] [function_2] expjsonfilepath options outputlabel permworkdir	count=1
arg	less than minpermanence ||| minpermanence	count=1
function	has changed since ||| dirty	count=1
function_arg	constructor [arg_2] ||| [arg_2] [function_1]	count=1
module	creates and returns ||| swarming	count=1
function	statistics for a dataset ||| stats	count=1
function	generate the initial ||| generate model2	count=1
module_class	of [module_1] [class_2] for ||| [module_1] [class_2] get	count=1
function	returns the index of ||| get cell index	count=1
class	hypersearch job ||| search	count=1
function	a metric over an ||| get metric from	count=1
function	attempt to ||| or	count=1
function	generation in the ||| non full generation	count=1
function	string if property ||| string	count=2
function	index using the given ||| index from	count=1
module	again) ||| data	count=1
module	must ||| frameworks	count=1
function	[function_1] with the ||| [function_2] [function_1]	count=8
function	what [function_2] ||| [function_2] [function_1]	count=8
function	numbers that match ||| numbers for	count=2
function	a sequence of ||| models get	count=1
arg	all properties it describes ||| cls filename path	count=2
function	return a ||| get results	count=1
function	given swarm's state to ||| set swarm state	count=1
class	us back ||| stream	count=1
function	current active [function_2] ||| [function_2] [function_1]	count=1
function	current active ||| active	count=1
function_arg	[function_1] groundtruth from ||| [arg_2] [function_1]	count=4
class	the model ||| opfdummy model	count=1
arg	as inlist and ||| inlist	count=1
class	segment ||| segment	count=4
class	release ||| shared connection policy	count=1
class	tm @param pamlength number ||| tm	count=1
function	in-memory prediction cache ||| flush prediction cache	count=1
function	is a valid ||| valid	count=1
function	connected state ||| init perm connected	count=1
function	stored records ||| delete	count=1
function	additional ephemeral ||| ephemeral	count=2
function_arg	returns a range [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	paths to ||| config paths	count=1
class	inference ||| backtracking tm	count=2
module_class	of this segment ||| algorithms segment	count=1
function	exit ensures that the ||| exit	count=1
function	a category and ||| category	count=1
function_arg	[function_1] on-times encountered ||| [arg_2] [function_1]	count=2
function	an int to ||| int	count=1
function_arg	[function_1] numrecords ||| [function_1] from end [arg_2]	count=1
function_arg	returns a range [function_1] [arg_2] if 'bookmark' ||| data stream reader [function_1] [arg_2] range	count=3
arg	experiment experimentdir ||| cls experimentdir	count=1
function	for a synapses ||| init	count=1
class	the record ||| record	count=1
function	of upcoming ||| upcoming	count=1
arg	[arg_1] end ||| [arg_1] [arg_2]	count=2
module_class	of [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	model's sequence states normally ||| sequence states	count=1
function	return the [function_2] ||| [function_2] [function_1]	count=25
function	[function_1] model as ||| [function_1] [function_2]	count=1
function	option ||| option	count=1
function	[function_1] new ||| [function_1] [function_2]	count=7
class	back at ||| record stream	count=1
function	[function_1] [function_2] params as might be ||| [function_1] [function_2] params p	count=2
class	- [class] ||| [class]	count=2
function	[function_1] recently ||| [function_1] [function_2]	count=2
arg	job request but ||| cmdline jobhash clientinfo	count=1
function_arg	segment with [arg_2] ||| [arg_2] [function_1]	count=1
class	the file ||| stream iface	count=2
class	configuration file with ||| configuration file	count=2
function	area under [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] list to ||| [function_2] [function_1]	count=4
class	for connections ||| connections	count=1
function	to category ids ||| to	count=1
function	[function_1] [function_2] to ||| [function_2] check for concurrency [function_1]	count=1
function	all the ||| all	count=1
function	learn [function_2] ||| [function_1] [function_2] c i s	count=1
function	close the ||| close	count=5
function	of 1 field ||| increment int field	count=1
class	[class] dict ||| [class]	count=1
function	[function] the ||| load experiment description [function]	count=1
arg	start [arg_2] ||| [arg_2] [arg_1]	count=2
function	for a ||| perm	count=1
function	anomaly scores ||| estimate anomaly	count=1
function	of the 'sequenceid' ||| sequence id	count=1
function	a file and converts ||| file	count=1
function	print the connections ||| print connections	count=3
function	args dictionary from ||| args	count=1
function_arg	returns a range of [function_1] [arg_2] if 'bookmark' ||| data stream reader get [function_1] [arg_2] range	count=4
class	our member variables that ||| backtracking tmcpp	count=1
function	value for a synapses ||| init perm	count=1
class	segment is ||| segment	count=1
function	py ||| get bucket	count=6
function	callback that ||| ephemeral	count=1
function	bits for ||| for	count=1
function	generation in the given ||| non full generation	count=1
module_class	[module_1] hypersearch ||| [module_1] [class_2]	count=3
class	instances ||| temporal memory	count=2
function	permanence decrement ||| get permanence decrement	count=2
function	a new and ||| new	count=1
class	activity ||| activity	count=1
class	greater ||| iteration phase	count=2
function	[function_1] only have ||| [function_1] [function_2]	count=1
function	of job ||| jobs get	count=1
function	[function_1] new synapse ||| [function_1] [function_2]	count=6
function	generate description ||| generate range	count=1
function	duty cycle ||| overlap duty	count=1
arg	the given experiment experimentdir ||| cls experimentdir	count=1
function	the synapses ||| synapses	count=2
function	creates [function_2] ||| [function_1] experiment [function_2] dir	count=3
arg	from ||| cls	count=1
class	at ||| record stream	count=1
class	which ||| logger iface	count=1
class	given hypersearch ||| search	count=1
function	[function] is not ||| [function] adopt next	count=3
class	the given model ||| opfdummy model runner	count=1
class	value for ||| pooler	count=1
function	[function_1] table ||| [function_2] [function_1]	count=1
function	a new [function_2] ||| [function_1] [function_2]	count=5
arg	and learns on the ||| columnmatchingsegments prevactivecells	count=1
function_arg	distances [arg_2] ||| [function_1] [arg_2]	count=1
function	the probability of ||| tail probability	count=1
arg	store [arg] as a ||| [arg]	count=1
function	and returns the ||| get	count=1
module	value and see ||| swarming	count=1
function_arg	[function_1] request this ||| [function_1] [arg_2]	count=3
function	_getonematchingrownoretries(), ||| get one matching row	count=1
function	segment using data ||| segment	count=1
function	the permanence ||| permanence	count=3
function	of printouts for debugging ||| distribution	count=1
arg	windowsize ||| windowsize	count=1
module_class	to [module_1] [class_2] element ||| [module_1] [class_2] element	count=1
function	the current model as ||| as	count=1
function	category file returning ||| category file	count=1
function	@return [function_1] [function_2] ||| [function_1] [function_2]	count=1
function	set [function_2] ||| [function_2] [function_1]	count=4
function	set ||| set tpdynamic	count=1
function	new hypersearch job ||| new search	count=1
function_arg	updates [arg_2] ||| [function_1] synapse [arg_2]	count=3
function	[function_1] [function_2] ||| [function_2] permanence [function_1]	count=9
function	synapses ||| init	count=1
function	index [function] record that ||| [function] next record	count=1
function_arg	[function_1] largest number ||| [function_1] [arg_2]	count=4
class	ourself from a ||| svmclassifier node	count=1
function	into a list of ||| list	count=1
function	index using the given ||| index	count=1
module	configuration settings and delete ||| swarming	count=1
arg	"running" state ||| paramshash particlehash	count=1
function	on time ||| list of on	count=1
function_arg	training sample [arg_2] ||| [function_1] [arg_2]	count=2
function	jobids for [function_2] ||| [function_2] [function_1]	count=16
function	opf [function] ||| validate opf [function]	count=1
module_class	[module_1] used ||| [module_1] [class_2]	count=2
function	models table ||| jobs of	count=1
function_arg	the index [arg_2] ||| [arg_2] [function_1]	count=1
function	region's encoder that is ||| encoder	count=1
function	winner cells ||| winner cells	count=2
function	[virtual method override] returns ||| get	count=1
class	'setup' callbacks ||| opftask	count=1
function_arg	[function_1] b ||| [function_1] [arg_2] out	count=1
function	element from [function_2] ||| [function_1] [function_2]	count=1
function	of the winner ||| winner	count=1
function	check for concurrency violation ||| check for concurrency violation	count=1
class	flush ||| stream iface	count=1
function	an ||| params	count=1
function	active segments ||| active segments	count=2
function_arg	[function_1] [arg_2] this ||| [function_1] [arg_2]	count=18
function	spec ||| spec	count=1
function	also htmpredictionmodelcontroldisabletplearningcb ||| tplearning	count=1
function	field ||| set field	count=2
function	duty cycle given as ||| overlap duty	count=1
class	floating point values using ||| float	count=1
function	segment's synapse with ||| synapse	count=1
function	min ||| min	count=1
function	the experiment [function_1] [function_2] the given experiment ||| experiment [function_1] [function_2]	count=2
function	of sequence [function_2] ||| [function_1] [function_2]	count=1
function	the index of ||| index	count=1
function	loads [function_2] ||| frameworks opf [function_1] [function_2]	count=3
arg	the percent of active ||| activecolumns	count=1
arg	change the status on ||| jobid completionreason completionmsg useconnectionid	count=1
function	the category ||| set category	count=1
class	the writer ||| prediction writer	count=1
function	[function_1] and ||| [function_1] model id [function_2]	count=1
function	if the current ||| if	count=1
function	of ||| jobs get fields	count=2
class	discrete probability [class_2] ||| [class_2] [class_1]	count=4
module	settings and delete the ||| swarming	count=1
arg	not necessarily in ||| modelids	count=1
function	set a [function_2] ||| [function_2] [function_1]	count=4
function	random number state ||| random state	count=2
function	in the neighborhood ||| neighborhood	count=1
function_arg	[function_1] matches 'curvalue' ||| [function_1] [arg_2]	count=1
function	[function_1] metrics to ||| [function_1] [function_2]	count=2
function	[function_1] [function_2] ||| [function_1] trace [function_2]	count=11
function	for jobs ||| jobs for client	count=2
function	params from [function_2] ||| [function_2] model [function_1]	count=1
function	of possible encoder ||| encoder	count=1
function	construct a _htmclassificationrecord based ||| construct classification record	count=2
arg	from file ||| cls permworkdir	count=1
function	max [function_2] ||| [function_1] [function_2]	count=6
arg	next n values ||| n	count=1
function	a random sample ||| sample	count=1
function	private ||| mangle private	count=1
class	construct the tm ||| tm	count=1
function	store a [function_2] ||| [function_2] [function_1]	count=1
function	the 'timestamp' [function_2] ||| [function_2] [function_1]	count=1
class	does not have ||| results db	count=1
function	apply ||| apply	count=1
class	method to ||| memory	count=1
class	and ||| aggregator	count=1
function	jobids for jobs ||| active jobs for	count=2
function_arg	[function_1] defines ||| [arg_2] [function_1]	count=1
function	over [function_2] ||| [function_2] [function_1]	count=3
function	the updated frequency ||| frequency	count=1
function	[function_1] min threshold ||| [function_2] [function_1]	count=1
function	[function_1] the record ||| [function_2] [function_1]	count=4
arg	name [arg] ||| [arg]	count=1
function_arg	[function_1] from the ||| [function_1] [arg_2]	count=4
arg	the specified ||| ignorekilled	count=1
class	task ||| description iface	count=1
arg	- ||| key chunkindex	count=1
function	used in nupic ||| output	count=1
function	the total on time ||| list of on	count=1
arg	engine-level ||| modelid	count=1
function	sequences a ||| sequences	count=1
class	synapses that is initialized ||| pooler	count=1
function	create a [function_2] ||| [function_1] [function_2]	count=4
function	label [function_2] ||| [function_2] [function_1]	count=10
function	make a ||| make	count=1
function	creates the [function_2] ||| [function_1] experiment [function_2] dir	count=4
function	the metadata [function] the model's ||| get field [function]	count=1
function	dbutils steadydb steadydbconnection ||| common steady dbargs dict	count=1
function	under [function_2] ||| [function_2] [function_1]	count=3
function	for jobs ||| active jobs for	count=2
function	inference state trying ||| infer	count=1
class	loads ||| search runner	count=1
module	instantiate a ||| frameworks opf	count=1
function	index using ||| index	count=1
arg	if windowsize is ||| windowsize learningperiod	count=1
function	same job by ||| job insert	count=1
function	[function] a ||| [function]	count=1
function	have not been ||| below stimulus inc	count=2
function	as an int ||| int	count=1
function	phase 2 [function_2] ||| [function_2] [function_1]	count=4
function	[function_1] next value ||| [function_2] [function_1]	count=1
arg	the given [arg] ||| [arg]	count=3
function	[function_1] of labels ||| [function_2] [function_1] category	count=3
module	value of ||| regions	count=3
function	lookup ||| lookup	count=1
function	the max new ||| max new	count=4
function	list from the ||| list from file	count=1
function_arg	passes [function_1] [arg_2] upon completion ||| [function_1] [arg_2]	count=1
function	any stored [function_2] ||| [function_2] [function_1]	count=2
function	the duty [function_2] ||| [function_1] [function_2]	count=2
arg	the keys being the ||| inputrow	count=1
module_class	[module_1] [class_2] ||| [module_1] geospatial coordinate [class_2]	count=3
class	encoder this is ||| encoder	count=1
function	for a given inferencetype ||| metric specs	count=1
class	of the file again) ||| stream	count=1
arg	the permanence values for ||| columnindex permanence	count=1
function	a json ||| run with json	count=1
function_arg	[function_1] and cache ||| [function_1] [arg_2]	count=2
function_arg	[function_1] index ||| [function_1] [arg_2]	count=1
function	the inferencetype ||| inference type	count=1
function_arg	label [arg_2] ||| [arg_2] [function_1]	count=8
function	model's sequence states normally ||| reset sequence states	count=1
arg	method description in base ||| input output learn	count=1
class	again) ||| stream	count=1
function_arg	same [arg_2] ||| [arg_2] [function_1]	count=4
module	iterations must be greater ||| frameworks opf	count=1
function	[function_1] sequence ||| [function_2] [function_1]	count=5
function	sensor [function] element ||| [function]	count=2
function	duty [function_2] ||| [function_2] [function_1]	count=11
function	'newvalue', but only if ||| if equal	count=1
function	inactive ||| inactive dec	count=1
function	[function_1] specs ||| [function_1] [function_2]	count=6
function	set all ||| set tpdynamic	count=1
function	minimum duty [function_2] ||| [function_2] [function_1]	count=2
class	[class_1] average ||| [class_1] [class_2]	count=4
function	it as an int ||| int	count=1
function	get the logger for ||| get logger	count=1
arg	random cells from the ||| random	count=1
function_arg	returns a range [function_1] [arg_2] ||| data stream reader [function_1] [arg_2] range	count=2
function_arg	instance consisting of ||| instance groundtruth	count=1
arg	string that defines ||| encoderdict	count=1
function	returns a randomly ||| perm	count=1
function	chunk ||| chunk	count=1
function_arg	cancel field in ||| cancel jobid	count=1
function	[function_1] [function_2] ||| [function_1] completed [function_2]	count=1
class	[class_1] log ||| [class_2] [class_1]	count=5
class	in the current tm ||| tm	count=1
arg	retrying a ||| timeoutsec	count=1
function	return [function_2] ||| [function_1] field [function_2]	count=4
function	a sequence of model ||| models get fields	count=1
class	sequence of ||| periodic activity mgr	count=2
function	is closest to ||| closest	count=1
function	[function] it has ||| slow [function] segment	count=1
function	of segments for a ||| segments	count=1
function	choose a new position ||| new position	count=2
class	tm @param pamlength number ||| backtracking tm	count=1
class	that is ||| spatial pooler	count=1
function	minimum duty ||| min duty	count=2
function	the potential ||| potential	count=1
arg	'newstate' if 'newstate' is ||| swarmid newstatus	count=1
function	unique category ||| category	count=1
function	verbosity [function_2] ||| [function_2] [function_1]	count=2
function	labels from the ||| labels	count=2
arg	and cache to a ||| filename statsinfo maxsamples filters	count=1
class	[class_1] file ||| [class_1] [class_2]	count=6
class	for ||| spatial pooler	count=2
function	return the nodespec ||| get	count=1
function	the settings ||| settings	count=1
function	[function_1] name ||| [function_2] [function_1]	count=4
class	must be greater than ||| phase	count=1
function	that is ||| perm	count=1
arg	from start ||| start	count=1
function	local [function_2] ||| [function_2] [function_1]	count=2
arg	list of records ||| records	count=1
function_arg	[function_1] c ||| [arg_2] [function_1]	count=5
arg	of records ||| records key	count=1
function	for concurrency [function_2] ||| [function_2] [function_1]	count=1
arg	and hub ||| hubs	count=1
function	[function_1] position ||| [function_1] [function_2] globalbestposition	count=2
function	list of tuples ||| file field list	count=1
arg	log items to msg ||| msg	count=2
function	the 'sequenceid' field ||| sequence id field	count=2
arg	of record ||| record	count=1
function	initialize the [function_2] ||| [function_2] [function_1]	count=2
function	compute a metric over ||| metric from	count=1
function	validates the --descriptionfromfile option ||| from file option	count=1
function	the log ||| log	count=1
function	the sensor [function] element ||| [function]	count=2
class	the storage as a ||| stream iface	count=1
arg	passed ||| cls	count=1
function_arg	[function_1] averaged over ||| [arg_2] [function_1]	count=1
function	of the predictive ||| predictive	count=1
module	is the ||| opf	count=1
function	to the knn ||| to knn	count=3
class	jobs table for ||| client jobs dao	count=1
function	end and ||| end	count=1
function	will remove [function_2] ||| [function_2] [function_1]	count=2
function	a list to ||| flat list	count=1
function	paths ||| paths	count=1
arg	predicted column [arg] ||| column [arg] columnmatchingsegments	count=2
function_arg	for saving [arg_2] ||| [function_1] [arg_2]	count=1
function	that is initialized in ||| init perm	count=1
module	settings and delete ||| swarming	count=1
function	a string if ||| get string	count=2
class	the file to disk ||| stream	count=2
function	default [function_2] ||| [function_1] [function_2]	count=10
function	[function] the ||| get field [function]	count=2
class	xml file and ||| configuration	count=1
function	the column ||| column	count=2
function	first ||| first	count=1
class	inhibition this method ||| spatial pooler	count=1
function	[function_1] contributions statistics ||| [function_1] [function_2]	count=3
class	[class_1] memory class ||| [class_1] [class_2]	count=1
function	cycles the minimum duty ||| min duty	count=1
module	network ||| frameworks viz	count=1
function	of upcoming partition ||| upcoming partition	count=2
function	length for a ||| length	count=1
function	local inhibition ||| columns local	count=1
function	tail of every params ||| params	count=1
function	[function_1] of the ||| [function_2] reset field [function_1]	count=1
function	the cell activity ||| cell trace	count=1
function	mode the job ||| start job	count=1
function	the end of inference ||| end	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=86
class	of the file ||| record	count=1
function	[function_1] the outputs ||| [function_2] [function_1]	count=1
function	adding a new segment ||| new segment	count=1
module	key is the ||| opf	count=1
module_class	to the prediction ||| frameworks opf prediction	count=1
function	the stability ||| stability	count=1
function	[function_1] the labels ||| [function_1] [function_2]	count=1
class	of iterations ||| iteration	count=1
function	a histogram ||| plot histogram	count=1
function	set of hyperplanes used ||| hyperplanes	count=1
arg	retrieve ||| cls prop	count=6
class	returns ||| stream reader	count=2
arg	client ||| client	count=1
module_class	activates all of [module_1] [class_2] ||| [module_1] [class_2]	count=8
class	at the ||| stream iface	count=1
function_arg	and returns [arg_2] ||| [function_1] shifted ground truth [arg_2]	count=3
arg	time ||| vectors numsamples	count=1
function	mangled private ||| mangle private	count=1
function	a connected state ||| init perm connected	count=1
arg	for retrying a ||| timeoutsec	count=1
function	encoder ||| generate encoder	count=1
function	are of dict type ||| get dict meta	count=1
arg	field at [arg] flags are ||| [arg]	count=1
function	a dict ||| dict	count=2
module_class	[module_1] counterpart to ||| [module_1] [class_2]	count=2
function	makes ||| make	count=2
class	the given hypersearch job ||| search runner	count=1
function	category number [function_1] [function_2] ||| [function_2] [function_1]	count=2
function	instance initialized ||| init	count=1
module_class	[module_1] [class_2] ||| [module_1] monitor_mixin [class_2]	count=1
function	any segments that have ||| segments	count=1
function	optimization ||| get optimization metric	count=1
function	[function_1] that a ||| [function_2] [function_1]	count=3
arg	starting from the bookmark ||| bookmark	count=2
module	the ||| frameworks opf	count=35
module	the filesystem ||| frameworks opf	count=1
function	from the given ||| from	count=1
function	find [function] user's ||| [function] user documents	count=1
function	returns a bookmark to ||| get bookmark	count=1
function	cycles ||| cycles	count=4
class	synapses that is ||| spatial pooler	count=1
class	iterations must be greater ||| iteration phase	count=1
function	most ||| most	count=1
class	is initialized ||| spatial pooler	count=1
class	sequence of ||| periodic	count=2
class	flushes [class_2] ||| [class_2] [class_1]	count=2
function	[function_1] [function_2] ||| [function_1] [function_2]	count=3748
function	metric over ||| metric from	count=1
class	of experiments ||| hyper search	count=1
class	put us ||| record stream	count=1
function_arg	[function_1] the permanence ||| [arg_2] [function_1]	count=1
function	column ||| burst column	count=1
function	get the labels ||| get labels	count=2
function	encoder ||| encoder str	count=2
function	generates a "persistentjobguid" value ||| generate persistent job guid	count=1
function	remove entries with 0 ||| remove	count=1
class	since the knn classifier ||| knnanomaly classifier	count=1
function	returns sum of ||| aggr sum	count=1
function	dataset [function] metadata ||| get dataset [function]	count=1
class	column ||| backtracking tm	count=1
function	[function_1] the connections ||| [function_2] [function_1]	count=2
function	encoder ||| perm encoder str	count=2
function_arg	[function_1] queue of ||| [function_1] upcoming partition ids [arg_2]	count=1
class	configuration path (specified ||| configuration	count=1
class	ourself from a ||| knnanomaly classifier	count=1
function	- exp ||| exp	count=1
function	[function_1] description ||| [function_2] [function_1]	count=4
function	worker completion ||| worker completion	count=1
function	necessary upon entry to ||| enter	count=3
module	returns whether ||| exp_generator	count=1
function	maximum [function_2] ||| [function_1] [function_2]	count=6
function	new trace ||| trace	count=1
function	can [function] off ||| [function] useless	count=1
module	method override] ||| encoders	count=1
function	swarm's state to ||| swarm state	count=1
function	[function_1] cell ||| [function_1] [function_2]	count=10
function	to a json ||| json	count=1
arg	specified fields for ||| fields ignorekilled	count=2
function	phase 2 for ||| phase2	count=1
function	log 'msg % args' ||| log	count=1
arg	of array x occurs ||| x	count=1
function	training pattern that is ||| training pattern	count=1
function	the output [function_2] ||| [function_1] [function_2]	count=1
arg	of inference and/or learning ||| rfinput resetsignal	count=1
function	job by the same ||| job insert unique	count=1
function	performing global inhibition ||| inhibit columns global	count=1
module	periodicactivityrequest ||| opf	count=2
class	'setup' ||| opftask	count=1
function	a sequence of ||| init	count=2
function	that sets identity ||| set identity	count=1
function	[function_1] time time ||| [function_1] [function_2]	count=2
arg	method description in ||| input	count=3
function	our connection id ||| connection id	count=1
function	[function] information ||| [function]	count=3
function	sets ||| set logged	count=1
function	[function_1] value ||| [function_1] [function_2]	count=6
function	permanence value ||| init	count=1
function	returns the sequence of ||| get	count=1
class	and ||| and infer	count=1
function	id for pattern ||| id	count=1
function	records starting from the ||| records	count=2
arg	- a list ||| key chunkindex	count=1
class	returns ||| backtracking tmcpp	count=2
function_arg	option [arg_2] ||| [arg_2] [function_1]	count=3
function	attempt ||| or get unique job no retries	count=2
function_arg	returns log(exp [function_1] [arg_2] numpy arrays values in ||| [function_1] [arg_2]	count=2
class	hypersearch implementation ||| hypersearch	count=1
function	each predicted => ||| predicted	count=1
function	count [function] data ||| [function] data row	count=1
module_class	[module_1] an inference ||| [module_1] [class_2]	count=2
function	the inference ||| infer	count=4
function	from the given ||| state from	count=1
function	this synapse ||| synapse	count=1
function	the field [function_2] ||| [function_2] [function_1]	count=1
function	python logging ||| logging	count=1
module_class	configuration [class_2] ||| [module_1] [class_2]	count=1
function	that is ||| init	count=1
arg	here 'fields' ||| ignoreunchanged	count=1
arg	labelname ||| labelname	count=2
function	set the ||| set	count=9
function	labels and ||| label	count=1
arg	specified fields ||| fields ignorekilled	count=2
function	and spread [function_2] ||| [function_2] [function_1]	count=1
function	returns the number of ||| num	count=2
function	only have an ||| job results	count=2
class	create and ||| svmclassifier	count=1
arg	keys ||| keys	count=1
function	[function_1] anomaly model ||| [function_2] [function_1]	count=8
function	sets the path ||| set path	count=6
function	record a datetime object ||| record	count=1
function	segment update ||| segment updates	count=1
class	current ||| manager	count=1
function	sensor region ||| sensor region	count=1
function	sample ||| sample	count=3
function	[function_1] file ||| model [function_1] [function_2]	count=2
class	of periodicactivityrequest elements ||| mgr	count=2
function	trace [function] # ||| mm [function] trace num	count=1
module	than 0 ||| opf	count=1
function	duty cycle [function_2] ||| [function_2] [function_1]	count=1
function	are [function_2] ||| [function_2] [function_1]	count=5
function	known feature groups ||| groups	count=1
function_arg	[function_1] - a ||| [arg_2] [function_1]	count=2
module	at ||| data	count=1
function	update the inference ||| infer	count=1
function	should ||| update	count=1
function	the state in the ||| state	count=1
class	again) ||| record stream	count=1
function	offsets and spread offsets ||| and spread offsets	count=1
function_arg	[function_1] [arg_2] ||| [function_1] active swarms [arg_2]	count=3
function	returns the duty ||| get duty	count=2
function	printouts ||| null	count=1
function	of the given category ||| category	count=1
module	of periodicactivityrequest ||| opf	count=2
class	args ||| args	count=1
function	duty cycles ||| active duty cycles	count=2
class	model's predictionlogger object ||| opfmodel runner	count=2
class	[class] this timestep ||| [class]	count=1
arg	spatialoutput and ||| spatialoutput	count=1
function	decrement amount for ||| syn perm	count=1
function	latest search ||| pickup search	count=1
function	[function_1] percent ||| [function_2] [function_1]	count=3
function	cells to [function_2] ||| algorithms backtracking tm choose [function_1] [function_2]	count=2
class	synapses that ||| pooler	count=1
arg	a bucket index return ||| index	count=1
function	of upcoming [function_2] ||| [function_2] [function_1]	count=5
function	used to create an ||| params	count=1
function	a sequence of model ||| get	count=1
function_arg	[function_1] permanence values ||| [arg_2] [function_1]	count=1
arg	request ||| client cmdline clientinfo clientkey	count=1
function	local inhibition local inhibition ||| columns local	count=1
arg	random seed and ||| seed verbosity	count=1
function_arg	[function_1] aggregated dataset ||| [function_1] filename [arg_2]	count=1
function	[function_1] of ||| [function_2] dbname for [function_1]	count=3
function	sort ||| sort	count=1
function	checkpoint from the ||| checkpoint	count=1
function	only if ||| if	count=1
function	[function_1] cycle ||| [function_1] [function_2]	count=5
function_arg	passes the [function_1] [arg_2] upon completion ||| frameworks opf [function_1] cb [arg_2]	count=1
module	note ||| monitor_mixin	count=1
function_arg	[function_1] consisting of ||| [arg_2] [function_1]	count=3
function	[function_1] for ||| [function_2] centre and [function_1]	count=1
function	get the initial ||| get initial	count=2
class	for temporalmemory ||| memory	count=1
arg	graph ||| node_attrs	count=1
module	appears in note ||| monitor_mixin	count=1
function	cell ||| segment on cell	count=1
class	of the prediction output ||| prediction	count=1
function	the svd is ||| svd	count=1
function_arg	creates [function_1] [arg_2] possible choosing ||| [function_1] [arg_2]	count=1
function	record that will ||| record	count=1
class	create and ||| svmclassifier node	count=1
function	metric over an indices ||| get metric from	count=1
arg	should be added to ||| columnactivesegments	count=1
class	to disk ||| iface	count=1
function_arg	[function_1] i ||| [function_1] [arg_2]	count=6
function	that correctly predicted ||| predicted	count=1
function_arg	[function_1] of values ||| [arg_2] [function_1]	count=1
function	loads a ||| load	count=4
arg	the potential mapping ||| potential	count=1
class	of the file again) ||| iface	count=1
arg	records - a ||| key chunkindex	count=1
function_arg	[function_1] params ||| [function_1] inlist [arg_2]	count=1
arg	[arg] are numpy ||| [arg]	count=3
function	[function_1] json ||| [function_2] [function_1]	count=6
function	that artificial labels ||| variable label	count=2
class	the xml configuration ||| configuration	count=2
function	from [function_2] ||| [function_2] [function_1]	count=9
function	p [function] ||| is [function]	count=1
function	as percent of ||| pct overlap	count=1
arg	niters number of ||| niters	count=1
function_arg	region to [arg_2] ||| [arg_2] [function_1]	count=3
class	cells that are ||| temporal memory	count=1
function	duty cycle given ||| overlap duty	count=1
function_arg	random sample [arg_2] ||| [arg_2] [function_1]	count=2
function	with ||| matching	count=1
module	@return countstrace a ||| monitor_mixin	count=1
function_arg	[function_1] request ||| [arg_2] [function_1]	count=4
function	[function_1] curve auc ||| [function_2] [function_1]	count=3
arg	over a range ||| column start	count=1
function	[function_1] [function_2] ||| [function_2] reset field [function_1]	count=2
module_class	class to [module_1] [class_2] ||| [module_1] [class_2]	count=2
arg	in a job that ||| jobid	count=1
function	string of space-separated ||| string	count=1
function	we don't need to ||| members	count=2
class	iterations must ||| phase	count=1
function	[function_1] the 'sequenceid' ||| [function_2] field [function_1]	count=1
function	to the field ||| to field	count=3
function	new synapse ||| new synapse	count=4
function	clear ||| clear	count=1
function_arg	[function_1] the overlap ||| [function_1] [arg_2]	count=2
function_arg	same [arg_2] ||| [function_1] [arg_2]	count=4
function	amount for inactive ||| syn perm inactive dec	count=1
arg	modelids warning the ||| modelids	count=1
function	[function_1] saved ||| [function_1] [function_2]	count=1
function	[function_1] as ||| [function_2] [function_1]	count=1
function	learning state ||| state	count=1
function_arg	swarms [arg_2] ||| [arg_2] [function_1]	count=4
class	the best model ||| model chooser	count=1
function	random sample ||| sample	count=1
function	predictive [function_2] ||| [function_2] [function_1]	count=2
function	of ||| null distribution	count=1
function	[function_1] given version ||| [function_1] [function_2]	count=1
arg	available ||| usecache	count=1
arg	[arg_1] executes the ||| [arg_1] [arg_2]	count=1
class	of iterations must be ||| phase	count=1
class	represents a connection to ||| connection	count=1
module	the given ||| frameworks opf	count=3
module	place the ||| frameworks opf	count=1
function	of a given field ||| get	count=1
function	the labels on classified ||| labels	count=1
function	encodings for all ||| all encodings	count=3
function	a cell in this ||| cell	count=1
function	name ||| name	count=3
function	are [function] due ||| is segment [function]	count=1
module_class	[module_1] [class_2] ||| [module_1] date [class_2]	count=3
arg	i [arg_2] ||| [arg_2] [arg_1]	count=1
arg	dataset and cache to ||| filename statsinfo maxsamples filters	count=1
function	of active synapses ||| get best	count=1
arg	the points ||| centerindex radius dimensions	count=1
function	exp b ||| diff exp	count=1
class	[class_1] average ||| [class_2] [class_1]	count=4
module_class	[module_1] [class_2] ||| [module_1] coordinate [class_2]	count=9
module_class	to [module_1] [class_2] ||| frameworks [module_1] [class_2]	count=2
class	an inference is ||| inference element	count=1
function	permanence value for a ||| perm	count=1
class	iteration ||| iteration	count=1
function	record's timestamp index ||| idx	count=1
class	file is always ||| file	count=1
function_arg	returns a [function_1] [arg_2] 'bookmark' ||| [function_1] [arg_2]	count=4
function	the best ||| best	count=4
function	:param ||| null distribution	count=1
arg	velocities and optionally ||| particlestate newbest	count=1
function	[function_1] predictive ||| [function_2] [function_1]	count=1
function	[function] it ||| [function] segment	count=1
function	will update a ||| update stats	count=1
function	[function_1] path ||| [function_2] [function_1]	count=2
function_arg	chunk of [arg_2] ||| [function_1] records [arg_2]	count=2
class	a ||| activity mgr	count=4
arg	the results string and ||| jobid results	count=1
function	the job ||| start job	count=1
function	that can be learned ||| init	count=1
arg	graph is written ||| node_attrs	count=1
module_class	of [class_2] ||| [module_1] [class_2]	count=28
function_arg	[function_1] chunk ||| [function_1] files [arg_2]	count=1
module	the metrics that are ||| frameworks opf	count=1
function	compute a metric over ||| get metric from trace	count=1
function	path to a json ||| json	count=1
class	to end noninclusive ||| knnanomaly classifier region	count=1
function	escape commas tabs newlines ||| escape	count=1
arg	coordinate to a ||| cls coordinate n	count=1
function_arg	indices [arg_2] ||| [function_1] cls [arg_2]	count=1
class	[class] instance ||| [class]	count=3
function	the probability ||| probability	count=2
function	phase ||| phase	count=2
function	the pattern ||| get pattern	count=2
class	put us back ||| stream	count=1
module	must be greater than ||| frameworks	count=1
function	threshold ||| threshold	count=4
function	the database name for ||| for	count=1
function	the models for ||| models get fields for	count=1
function	attempt to insert a ||| insert or get unique job	count=1
function	training [function_2] ||| [function_2] [function_1]	count=5
function	return the index of ||| get	count=1
function_arg	optparse callback [arg_2] ||| [arg_2] [function_1]	count=4
function	under the [function_2] ||| [function_2] [function_1]	count=4
function	return the list ||| get config	count=1
function	see if we should ||| hs	count=1
function	creates [function_2] ||| [function_2] [function_1]	count=3
function	a synapses that ||| init	count=1
function	the experiment [function] the given ||| load experiment [function]	count=1
class	configuration file ||| custom configuration file wrapper	count=2
module	[module] collect ||| [module]	count=3
function_arg	[function_1] results ||| [arg_2] [function_1]	count=1
function	[function_1] [function_2] ||| frameworks opf [function_1] [function_2]	count=3
module	a ||| algorithms	count=3
function	the name ||| name	count=1
function	stability ||| stability	count=1
class	hypersearch job and ||| search	count=1
function	of synapses per ||| synapses per	count=2
function	table including relevant job ||| jobs of	count=1
class	for a synapses ||| spatial	count=1
function	list of ||| file field list	count=1
function	if the same job ||| job	count=1
function	the max [function_2] ||| [function_1] [function_2]	count=6
function	update a ||| update stats	count=1
class	experiments that ||| hyper search	count=1
function_arg	returns the [arg_2] ||| [arg_2] [function_1]	count=14
function	swarm's state ||| set swarm state	count=1
function	indices ||| cell indices	count=1
function	the beginning of ||| rewind	count=1
class	[class] dict ||| record [class]	count=1
arg	is synapsed to ||| presynapticcell permanence ordinal	count=1
function	seconds ||| seconds	count=1
module_class	encoders base encoder ||| encoders date encoder	count=1
function	exp ||| exp	count=2
class	distribution must ||| distribution	count=1
arg	c column [arg_2] ||| [arg_2] [arg_1]	count=1
arg	classifier [arg] this ||| [arg]	count=3
class	must be greater ||| iteration phase	count=1
arg	a range ||| start	count=1
function	maximum number of ||| get max	count=2
arg	list and learns on ||| columnmatchingsegments prevactivecells	count=1
function	same ||| insert unique	count=1
arg	maxcols number from a ||| maxcols	count=1
class	permanence value ||| spatial	count=1
function	a list of ||| field list	count=1
function	delete [function_2] ||| [function_1] [function_2]	count=4
class	hypersearch ||| search runner	count=2
function	[function_1] a dict ||| [function_1] custom [function_2]	count=1
function	the cell [function_2] ||| [function_2] [function_1]	count=5
arg	[arg_1] executes ||| [arg_2] [arg_1]	count=1
function	string for each value ||| str	count=1
arg	in the given ||| sprintidx	count=2
class	prediction log ||| prediction log	count=4
arg	of active ||| activecolumns	count=1
class	prediction output stream ||| basic prediction	count=1
function_arg	get the sensor [function_1] [arg_2] ||| element [function_1] element [arg_2]	count=1
module_class	of ourself ||| regions test	count=1
class	for a synapses that ||| spatial	count=1
function	the bucket [function_2] ||| [function_1] [function_2]	count=1
class	[class_1] shared ||| [class_1] [class_2]	count=1
function	[function_1] region's encoder ||| [function_2] [function_1]	count=1
class	sequence of ||| periodic activity	count=2
module_class	[module_1] [class_2] element ||| [module_1] [class_2] element	count=1
function	of [function_2] ||| [function_2] [function_1]	count=21
arg	maps the coordinate ||| cls coordinate n	count=1
arg	gets a ||| centerinput	count=1
function	the jobs table and ||| jobs	count=1
function	[function_1] the distances ||| [function_1] [function_2]	count=1
function	factors for all ||| factors	count=1
class	ourself from ||| spregion	count=1
arg	in state ||| state	count=1
function	[function_1] concurrency violation ||| [function_1] [function_2]	count=2
class	of this model ||| value model	count=1
function	override] returns the ||| get	count=1
function	state ||| write state	count=1
arg	niter number of ||| niters inferenceargs	count=1
function	'category' [function_2] ||| [function_1] [function_2]	count=1
function	generate a new ||| new	count=1
function	[function_1] log ||| [function_1] [function_2]	count=1
arg	results string and ||| results	count=1
function	json string ||| json	count=1
class	permanence value for a ||| pooler	count=1
class	an inference is ||| inference	count=1
arg	and type dtype that ||| dtype	count=1
function	[function_1] only have ||| [function_2] [function_1]	count=1
function	[function_1] returns index ||| [function_2] [function_1]	count=1
function	factors when [function_2] ||| [function_2] [function_1]	count=3
function_arg	[function_1] [arg_2] is one whose name ||| [function_1] member name [arg_2]	count=2
function_arg	[function_1] potential mapping ||| [arg_2] [function_1]	count=1
function_arg	a numpy [arg_2] ||| [function_1] str array format [arg_2]	count=2
function	tools to simulate ||| simulate	count=1
function	json file ||| run with json file	count=1
function	values [function] ||| [function]	count=3
function	[function_1] active segments ||| [function_2] [function_1]	count=1
function	the connected permanence ||| connected permanence	count=2
class	at ||| stream iface	count=1
function	the category inference ||| infer	count=1
function	the models table including ||| jobs	count=1
function	duty ||| duty	count=7
function_arg	callback for [arg_2] ||| [arg_2] [function_1]	count=5
function	parameter ||| parameter	count=5
function	metric over an ||| get metric	count=1
function	seed ||| get seed	count=1
class	value ||| sdrclassifier region	count=2
function	base py ||| bucket	count=5
function	labels ||| metric labels	count=2
class	inferences ||| basic prediction writer	count=1
arg	input pattern and ||| inputpattern	count=1
function	initializes internal filter ||| init filter	count=1
function	a record ||| record	count=1
function_arg	[function_1] labelname ||| [function_1] [arg_2]	count=2
function	the metric [function_2] ||| [function_2] [function_1]	count=6
function	delete's the output ||| output	count=1
function_arg	filter variables [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	applies [arg_2] ||| [arg_2] [function_1]	count=10
class	when an inference ||| inference	count=1
function_arg	[function_1] bookmark ||| data stream reader get [function_1] [arg_2] range	count=1
function_arg	indices [arg_2] ||| [arg_2] [function_1]	count=6
class	to ||| stream reader	count=1
function	adds ||| add encoder	count=2
arg	@param categoriesout -- ||| categoriesout	count=1
function	get the labels ||| get label results	count=3
module	creates and ||| swarming	count=1
arg	being decorated ||| initialretrydelaysec maxretrydelaysec retryexceptions	count=1
function	return a map ||| map	count=1
function	record [function_2] ||| [function_2] timestamp [function_1]	count=1
class	be ||| iteration	count=1
function	[function_1] anomaly ||| [function_2] [function_1]	count=26
function	the "finish [function] command ||| model control [function]	count=1
function	the default ||| default	count=1
class	generated permanence value ||| pooler	count=1
function_arg	[function_1] further processing ||| [function_1] [arg_2]	count=2
class	in our history ||| bit history	count=1
function	cumulative w for all ||| totalw	count=1
class	jobs do not ||| client jobs dao	count=1
function	[function_1] experiment description ||| [function_2] [function_1]	count=1
module_class	their latest results to [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	that ||| init perm	count=1
function	sent only to the ||| only	count=1
function	cell in ||| cell	count=3
function	returns list of ||| get	count=3
function	[function_1] labels from ||| [function_1] [function_2]	count=3
arg	a dataset and cache ||| filename statsinfo maxsamples filters	count=1
function	[function] based on ||| [function]	count=6
function	predicted segment [function_2] ||| [function_2] [function_1]	count=1
class	[class_1] worker ||| [class_1] [class_2]	count=1
class	a synapses that ||| spatial pooler	count=1
function	synapse [function_2] ||| [function_1] [function_2]	count=2
function	given swarm ||| swarm	count=1
function	[function_1] reactivate ||| [function_2] running [function_1]	count=2
arg	[arg_1] and temporaloutput ||| [arg_2] [arg_1]	count=4
function	activationthreshold connected [function] ||| slow is segment [function]	count=1
function	for each ||| connected span for	count=1
arg	records records - ||| chunkindex fields	count=1
function	pattern [function_2] ||| [function_1] [function_2]	count=1
function	dimensions of the ||| get dimensions	count=1
function	periodic check to see ||| periodic	count=1
arg	is less than minpermanence ||| minpermanence	count=1
class	an array containing ||| encoder	count=1
function	[function_1] hypersearch job ||| [function_1] [function_2]	count=3
function	string if property does ||| get string	count=2
arg	if 'newstate' is ||| swarmid newstatus	count=1
function	upcoming [function_2] ||| [function_2] [function_1]	count=5
arg	than minpermanence and deletes ||| minpermanence minnumsyns	count=1
function	return the absolute path ||| get	count=1
module_class	[module_1] scalar ||| [module_1] adaptive [class_2]	count=3
function	with ||| with	count=2
class	jobs do not use ||| client jobs	count=1
module	loads ||| frameworks opf	count=1
module	the results of one ||| swarming	count=1
arg	points in ||| centerindex radius dimensions	count=1
function	model as [function_2] ||| [function_1] [function_2]	count=4
module	and return the ||| swarming	count=1
function	cell ||| cell trace	count=1
function	calling method ||| extract calling method	count=2
arg	permanence values for a ||| columnindex permanence	count=1
function	--descriptionfromfile option ||| option	count=1
arg	b ||| a b	count=2
function	that the neighborhood ||| neighborhood	count=1
function	category [function_2] ||| [function_1] [function_2]	count=9
function	of ||| get stats	count=2
function	that have been checkpointed ||| fields for checkpointed	count=1
function	@return trace [function_1] [function_2] ||| [function_1] [function_2]	count=1
class	the predicted state and ||| backtracking	count=1
function	'sequenceid' [function_2] ||| [function_2] [function_1]	count=1
function	from ||| state from	count=1
function	that have been checkpointed ||| get fields for checkpointed	count=1
arg	[arg_1] of maxbuckets ||| [arg_2] [arg_1]	count=2
class	activity ||| periodic activity	count=1
function	performing global inhibition ||| columns global	count=1
function	base py ||| bucket values	count=1
class	the file to ||| stream iface	count=1
module	for temporalmemory ||| algorithms	count=1
function	value to json ||| to json	count=1
class	a worker or runs ||| search runner	count=1
function	the number ||| num	count=4
module_class	[module_1] [class_2] ||| [module_1] previous value [class_2]	count=3
arg	string that defines the ||| options encoderdict	count=1
function	percent [function_2] ||| [function_2] [function_1]	count=1
function	in a connected state ||| connected	count=1
function	[function_1] duty ||| [function_1] [function_2] cycles	count=1
function	via opf's modelfactory ||| scalar metric with time of day	count=1
function	fetch jobids for ||| for client	count=2
class	moving ||| moving	count=1
class	us back at ||| stream iface	count=1
function	list of possible encoder ||| encoder	count=1
function	centre [function_2] ||| [function_1] [function_2]	count=3
module_class	the given [class_2] ||| [module_1] [class_2]	count=3
module	@doc place_holder ||| engine	count=11
function	string if property ||| get string	count=2
function_arg	dataset [arg_2] ||| [arg_2] [function_1]	count=1
function	of the anomaly ||| anomaly	count=2
arg	change ||| jobid completionreason completionmsg useconnectionid	count=1
class	to the current phase ||| phase manager	count=1
arg	a sorted output file ||| chunkcount outputfile fields	count=1
module	of the [module] ||| [module]	count=3
function	a parameter ||| parameter	count=2
function	distances between the ||| distances	count=1
function	runtime statistics specific ||| runtime stats	count=2
class	to disk ||| stream	count=2
function	both the standard ||| all	count=2
function	[function_1] [function_2] cycle estimate ||| [function_1] [function_2] cycles	count=1
function	[function_1] decrement ||| [function_1] [function_2]	count=7
function	get the permanence decrement ||| get permanence decrement	count=1
function	a job to ||| job set	count=1
module	that are arranged in ||| frameworks opf	count=1
function_arg	creates [function_1] [arg_2] choosing ||| [function_1] [arg_2]	count=2
function	params from [function_2] ||| [function_2] [function_1]	count=1
function	the synapses [function_2] ||| [function_1] [function_2]	count=2
function	final activities ||| finalize	count=1
function	schema to ||| schema option	count=1
function	and exit program with ||| and exit	count=1
function	[function_1] file ||| [function_2] [function_1]	count=31
function	return the position of ||| get position	count=1
function	for jobs ||| get active jobs for client	count=2
function	enough [function] ||| get last [function]	count=3
function	to category ids ||| to id	count=1
function	deserialization ||| de	count=1
function	accumulate a list of ||| accumulate	count=1
arg	the model ||| model	count=1
function	closest to inputpattern the ||| closest	count=1
function	[function_1] record ||| [function_2] [function_1]	count=4
function	sources it finds that ||| sources	count=1
arg	encoder ||| encoder	count=1
function	pattern [function_2] ||| [function_2] [function_1]	count=1
class	put us back ||| record	count=1
function	range from ||| range from knn	count=2
function	the latest search ||| pickup search	count=2
function	and [function_2] ||| [function_1] [function_2]	count=5
function	duty cycle given ||| duty	count=1
function	overlap duty ||| overlap duty	count=2
function	seed value ||| seed	count=1
module_class	entire [class_2] ||| [module_1] [class_2]	count=2
function	[function_1] [function_2] ||| [function_2] running [function_1]	count=5
function	initialize the bucket ||| initialize bucket	count=2
module	get the value of ||| regions	count=2
function_arg	[function_1] input pattern ||| [function_1] [arg_2]	count=3
function	duty ||| active duty	count=1
module	can ||| swarming hypersearch	count=1
function	the minimum [function_2] ||| [function_2] [function_1]	count=3
class	the stream ||| stream	count=2
module	instances list the difference ||| algorithms	count=2
class	be greater than ||| iteration phase	count=1
function	map mapping columns ||| map	count=1
function	sequence [function_2] ||| [function_2] [function_1]	count=1
function	encodings for ||| encodings	count=1
function	to learn [function_2] ||| [function_2] [function_1]	count=1
function	a cell ||| cell	count=1
class	of periodicactivityrequest elements ||| periodic	count=2
function_arg	[function_1] csv file ||| [function_1] [arg_2]	count=1
function	for dbutils steadydb steadydbconnection ||| common steady dbargs dict	count=1
function	into the ||| encode into	count=1
function	for the experiment ||| experiment	count=1
function	which is an interface ||| prediction logger	count=2
class	of periodicactivityrequest ||| mgr	count=2
function	state as ||| state	count=1
function	the settings are reasonable ||| reasonable settings	count=1
function_arg	[function_1] start to ||| [arg_2] [function_1]	count=15
class	initialized ||| spatial pooler	count=2
module	and see ||| swarming	count=1
function	information for verbose messaging ||| debug	count=1
function	[function_1] members ||| [function_1] [function_2]	count=8
arg	if many timesteps ||| celltrace cellcount activitytype title	count=1
function	labels and returns ||| label	count=1
class	flush ||| stream reader	count=1
function	in 'results'), filter out ||| filter	count=1
function	for ||| for client	count=2
class	given the predicted state ||| backtracking tm	count=1
function	read state ||| read	count=2
function	is active if ||| is	count=2
function	the segment with the ||| best matching segment	count=1
arg	given experiment experimentdir ||| cls experimentdir	count=1
module	write the ||| frameworks opf	count=1
arg	a list of records ||| records key	count=1
function	connections ||| connections	count=1
module_class	[module_1] iteration ||| [module_1] [class_2]	count=2
module	the header ||| frameworks opf	count=1
class	given hypersearch ||| search runner	count=1
function	anomaly model ||| anomaly	count=1
function	from this file ||| from file	count=3
class	emits ||| metrics logger	count=1
function	[function_1] to ||| [function_2] [function_1]	count=4
function	inference stats ||| stats	count=1
function	a + exp ||| sum exp	count=1
function	json ||| json	count=5
function	in a job to ||| job set	count=1
arg	variable number of option ||| option	count=1
class	jobs ||| jobs dao	count=1
arg	w [arg_2] ||| [arg_2] [arg_1]	count=4
function	list [function_2] ||| [function_2] [function_1]	count=5
module	than ||| frameworks	count=1
class	if the model should ||| model terminator	count=1
class	variable that ||| permute	count=1
function	the experiment ||| experiment	count=3
function_arg	[function_1] the network ||| [arg_2] [function_1]	count=1
function	[function_1] row id ||| [function_2] [function_1]	count=1
function	implemented in ||| from file	count=1
function_arg	returns a range [function_1] [arg_2] ||| data record stream iface [function_1] [arg_2] range	count=2
class	top ||| coordinate encoder	count=1
arg	on-times encountered in ||| freqcounts title xlabel	count=1
arg	that defines the permutations ||| options encoderdict	count=1
function	get the permanence increment ||| get permanence increment	count=1
function_arg	records [arg_2] ||| record stream iface get [function_1] [arg_2] range	count=3
function	[function_1] label ||| [function_1] [function_2] start end	count=2
function	partition ids this ||| partition ids	count=2
function	[function_1] random number ||| [function_2] [function_1]	count=1
function	field in ||| set field	count=1
function	amount for active synapses ||| syn perm active inc	count=2
function	the same job ||| job insert	count=1
arg	a decorator for retrying ||| timeoutsec logger	count=1
function	synapses per segment ||| synapses per segment	count=6
function	a map from number ||| number map	count=1
function	segments that belong to ||| segments for	count=1
function	if any to delay ||| delay	count=1
function	records starting from ||| records range	count=2
function	generated permanence value for ||| perm	count=1
module	instances list the ||| algorithms	count=2
arg	positions velocities and optionally ||| particlestate newbest	count=1
function	sequence of ||| models get	count=1
class	set ||| scalar encoder	count=1
function	delete the persistent ||| config	count=1
class	ourself from a ||| test	count=1
function_arg	id for [arg_2] ||| [arg_2] [function_1]	count=1
module	of printouts for ||| algorithms	count=1
arg	filepath path ||| filepath	count=1
function	the inference state ||| infer	count=1
function	output cache associated ||| output cache	count=1
function	[function_1] the active ||| [function_2] [function_1]	count=3
function_arg	[function_1] reaping a ||| [function_1] option [arg_2]	count=3
class	to backtracking_tm py ||| tmshim mixin	count=1
function_arg	creates ndesirednewsynapes [function_1] [arg_2] choosing ||| grow [function_1] [arg_2]	count=1
class	sdr classifier [class_2] ||| [class_2] [class_1]	count=1
function	number of active ||| num active	count=3
function	remove labels [function_2] ||| [function_2] [function_1]	count=2
arg	sequences is used ||| seqlength	count=1
function	[function_1] index ||| [function_1] next record [function_2]	count=1
function_arg	[function_1] this segment ||| [function_1] [arg_2]	count=1
function	dimensions ||| column dimensions	count=2
class	model ||| opfdummy model	count=2
function	initializes internal filter ||| filter	count=1
function	[function_1] function ||| [function_1] run [function_2]	count=1
function_arg	[function_1] inputpattern to ||| [arg_2] [function_1]	count=3
arg	a and b are ||| a b	count=1
function	'model1' ||| model1	count=1
function	simulate [function_2] ||| regions svmclassifier node [function_1] [function_2]	count=1
arg	'overlapdutycycles' ||| overlapdutycycles	count=1
function	[function_1] descriptions ||| [function_1] [function_2]	count=1
function	list of swarm generations ||| swarm generations	count=1
module	in base and ||| swarming	count=1
function	[function_1] period ||| [function_2] [function_1]	count=7
class	best model this ||| opfmodel runner	count=2
function	[function_1] spread offsets ||| [function_1] [function_2]	count=4
function_arg	set the [arg_2] ||| [function_1] upcoming partition ids [arg_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] indices [arg_2]	count=9
function	existing job that ||| job	count=1
class	state of ||| backtracking	count=1
arg	this is an ||| modelid	count=1
function	a job to 'newvalue', ||| job set	count=1
arg	index return the list ||| index	count=1
function	caller ||| caller	count=1
arg	method ||| input output learn	count=1
module	than ||| opf	count=1
function	loads a [function_2] ||| [function_1] [function_2]	count=20
class	[class_1] worker parameters ||| [class_2] [class_1]	count=1
function	the distances between the ||| distances	count=1
function_arg	[function_1] sorted chunk ||| [function_1] files [arg_2]	count=1
function_arg	[function_1] records - ||| [arg_2] [function_1]	count=3
function	a swarm ||| swarm	count=1
function	attempt to insert ||| insert or get unique job	count=1
class	in this phase ||| iteration phase spec learn and	count=1
function	density ||| density	count=1
function	and spread [function_2] ||| [function_1] [function_2]	count=1
module	to disk ||| data	count=2
function	the range from ||| range from	count=2
function	pooler instance ||| fdr	count=1
module	and delete ||| swarming	count=1
function	delay the run ||| delay	count=1
class	periodicactivityrequest ||| periodic activity mgr	count=4
arg	for retrying ||| timeoutsec	count=1
function	as percent ||| pct	count=1
module	the given mangled ||| frameworks opf	count=1
function	local inhibition local inhibition ||| inhibit columns local	count=1
function	getspecfromtype ||| spec from type	count=1
class	return ||| results db	count=3
function	json file ||| with json file	count=1
function	see also htmpredictionmodelcontroldisabletplearningcb ||| tplearning	count=1
function	the cell with ||| cell	count=1
class	backtracking_tm py ||| monitored tmshim	count=1
function	area [function_2] ||| [function_1] [function_2]	count=6
function	dated potential segment update ||| segment updates	count=1
function	per input ||| per input	count=1
function_arg	parameter [arg_2] ||| [arg_2] [function_1]	count=1
function	the segments ||| segments	count=1
function	training pattern that ||| other training pattern	count=2
function	of periodicactivityrequest elements ||| init	count=2
function	a string ||| get string	count=2
function	where the max value ||| arg max	count=1
arg	set of sequences is ||| seqlength	count=1
function	[function_1] initial permanence ||| [function_1] [function_2]	count=1
function	the total on time ||| of on	count=1
class	the model ||| previous value model	count=1
function	sort in memory chunk ||| sort chunk	count=1
module_class	encoders base [class_2] ||| [module_1] [class_2]	count=9
function	htmpredictionmodelcontroldisabletplearningcb ||| tplearning	count=1
function_arg	[function_1] w ||| [function_1] wcoordinates cls coordinates [arg_2]	count=2
module	utility function that ||| frameworks opf	count=1
function	returns ||| get field	count=1
module_class	[module_1] category that ||| [module_1] [class_2]	count=2
class	model should ||| model terminator	count=1
module	elements ||| opf	count=2
arg	experiment experimentdir ||| experimentdir	count=1
function	return [function] ||| get [function]	count=1
function	iterates through ||| row count	count=1
function	jobs in the ||| jobs	count=2
function	[function] of ||| aggr [function]	count=1
class	remain in this phase ||| phase spec	count=1
function	worker ||| worker	count=1
function	to category ids external ||| to id	count=1
function	[function_1] number ||| [function_1] learn [function_2]	count=2
function_arg	[function_1] results string ||| [function_1] [arg_2]	count=1
function	[function_1] per segment ||| [function_1] [function_2]	count=8
class	ensures that the file ||| file record	count=1
arg	and b ||| b	count=2
function_arg	[function_1] [arg_2] ||| [function_1] insert [arg_2]	count=4
function	synapses that is ||| perm	count=1
function	a numpy ||| numpy	count=1
class	knn classifier ||| classifier	count=1
class	received ||| opfmodel runner	count=1
function	[function_1] connections in ||| [function_1] [function_2]	count=2
class	permanence ||| pooler	count=1
function	with a column's ||| permanences for column	count=1
function_arg	training sample and ||| sample inputvector	count=1
class	sequence of periodicactivityrequest elements ||| periodic	count=2
function	[function_1] potential percent ||| [function_2] [function_1]	count=1
function	file and ||| file	count=4
arg	not necessarily in the ||| modelids	count=1
function	[function_1] update period ||| [function_1] [function_2]	count=1
function	beginning part of ||| prefix	count=1
function	that match ||| for	count=1
function	accumulate a ||| accumulate	count=1
function_arg	passes the "finish [function_1] [arg_2] upon completion ||| [function_1] [arg_2]	count=1
function	into the numpy output ||| encode into	count=1
function	abbreviate the ||| abbreviate	count=1
function	plot of [function] ||| mm get [function]	count=1
module_class	[module_1] columns ||| [module_1] [class_2]	count=2
function	with ||| for	count=1
arg	modelconfig a dictionary object ||| modelconfig	count=1
class	since the knn classifier ||| classifier region	count=1
class	file ||| iface	count=2
function	base ||| base	count=2
function	new and [function_2] ||| [function_2] [function_1]	count=2
function	like _getonematchingrownoretries(), but with ||| get one matching row with	count=1
function	[function] as ||| [function]	count=3
arg	records read from the ||| records key	count=1
arg	'newstate' if 'newstate' ||| swarmid newstatus	count=1
function	remove any stored ||| delete	count=1
function	reset the learning ||| reset	count=1
function_arg	sample [arg_2] ||| [arg_2] [function_1]	count=4
class	in ||| pooler	count=1
class	[class_1] stream ||| [class_1] [class_2]	count=3
class	file is ||| file record	count=1
function	any segments [function_2] ||| [function_2] [function_1]	count=2
function	for a synapses that ||| perm	count=1
class	us back at the ||| record	count=1
function	jobs in the table ||| active jobs	count=2
arg	new job request ||| cmdline	count=1
function	global inhibition performing global ||| global	count=1
function	enable the diagnostic feature ||| enable	count=1
class	single prediction ||| prediction	count=1
function	field contributions statistics ||| field contributions	count=2
arg	n is the ||| n	count=1
function	the stored checkpoint ||| checkpoint	count=1
function_arg	[function_1] the groundtruth ||| [function_1] shifted ground truth [arg_2]	count=1
function	bucket ||| map bucket index	count=1
function	returns sensor region's ||| get	count=1
function	vector ||| fill in on times	count=1
arg	maxcols number from ||| maxcols	count=1
arg	command [arg] note ||| [arg]	count=1
arg	modelconfig a dictionary object ||| modelconfig control	count=1
module_class	[module_1] [class_2] for ||| [module_1] [class_2]	count=1
class	sample ||| knnanomaly classifier region	count=1
function	an int to a ||| int to8byte	count=1
function	winner [function_2] ||| [function_2] [function_1]	count=1
function_arg	a [function_1] [arg_2] ||| swarming [function_1] [arg_2]	count=2
function	the index ||| idx	count=1
function	the logger ||| logger	count=2
function_arg	[function_1] classifier within ||| [function_1] [arg_2]	count=6
function	field names associated with ||| field names	count=1
function	0 ||| init	count=1
function	to [function_2] ||| [function_1] [function_2]	count=7
function_arg	the field [arg_2] ||| [arg_2] [function_1]	count=1
function	list of tuples basically ||| field list	count=1
arg	must store [arg] as ||| [arg]	count=1
class	model using ||| model	count=1
arg	a sorted output file ||| chunkcount outputfile	count=1
function	is active ||| is	count=2
function	a histogram of ||| plot histogram	count=1
arg	[arg] to ||| [arg]	count=2
function	pretty print the ||| pretty print	count=2
module_class	for the metrics ||| opf metrics manager	count=1
function	of anomaly scores ||| estimate anomaly	count=1
function	current model ||| model	count=1
function	of hyperplanes ||| hyperplanes	count=1
class	new model instance given ||| model	count=1
arg	if windowsize ||| windowsize	count=1
function	the segments [function_2] ||| [function_1] [function_2]	count=3
function	interpret ||| get locked handle	count=1
function	descriptions ||| field descriptions	count=1
function	of the 'sequenceid' field ||| sequence id field	count=1
function	string ||| str	count=1
arg	permanence values ||| permanence	count=1
class	parse the given xml ||| configuration	count=1
function	[function_1] [function_2] ||| [function_2] from [function_1]	count=8
function_arg	- exp [arg_2] ||| [function_1] [arg_2] out	count=3
function	the [function] ||| reset sequence [function]	count=1
function	a valid estimator ||| valid estimator	count=1
function	checkpoint from [function_2] ||| [function_2] [function_1]	count=4
function	returns the ||| get cell	count=2
function	[function_1] [function_2] ||| model classifier helper category [function_1] [function_2]	count=1
function	generated permanence value ||| init	count=1
function	database name for ||| for	count=1
function_arg	a job [arg_2] ||| [function_1] field jobid [arg_2]	count=1
arg	a decorator for retrying ||| timeoutsec	count=1
function	add one [function_2] ||| [function_1] [function_2]	count=1
function_arg	memory chunk [arg_2] ||| [arg_2] [function_1]	count=1
arg	n ||| n	count=4
arg	on params into the ||| jobid params	count=1
arg	number ||| number	count=1
module	iterations must be ||| opf	count=1
arg	it describes ||| filename path	count=2
function	to get ||| get	count=1
function	[function_1] cell ||| [function_2] [function_1]	count=14
function	the best result so ||| best	count=1
function_arg	[function_1] defines ||| [function_1] encoder str [arg_2]	count=1
function	seconds in [function_2] ||| [function_2] [function_1]	count=2
function	experiment description ||| experiment description	count=2
function	the predicted [function_2] ||| [function_1] [function_2]	count=3
function	permanence value for a ||| init perm	count=1
function	bytes of ||| get	count=1
arg	model ||| model	count=1
class	periodicactivityrequest elements ||| activity	count=2
function	removes any stored ||| knn	count=1
function	into the numpy output ||| into	count=1
function	return it [function_2] ||| [function_1] [function_2]	count=8
class	of the encoder ||| encoder	count=1
function	[function_1] for the ||| [function_1] [function_2]	count=3
function	that is initialized ||| init perm	count=1
class	the ||| record stream	count=3
function	the experiment description ||| experiment description	count=2
class	[class_1] memory ||| [class_1] [class_2]	count=1
function	list of tuples basically ||| list	count=1
class	encoder this is separate ||| encoder	count=1
function	by the same ||| insert unique	count=1
function	of paths to ||| paths	count=1
class	if [class] had enough ||| [class]	count=1
class	storage ||| stream iface	count=2
class	writer ||| prediction writer	count=2
function	that have less than ||| trim	count=1
function	as any additional ephemeral ||| ephemeral	count=2
function	the category list this ||| get category list	count=1
function	the 'category' [function_2] ||| [function_1] [function_2]	count=1
function	per ||| per	count=5
function	label for [function_2] ||| [function_2] [function_1]	count=8
function	of iterations ||| init	count=1
class	a moving average ||| moving average	count=2
function_arg	[function_1] modelid this ||| [function_1] [arg_2]	count=1
class	record [class_2] ||| [class_1] [class_2]	count=3
arg	simple sequence contains ||| npatterns patternlen patternactivity	count=1
function	permanence value for ||| perm	count=1
function	[function_1] permanence ||| [function_2] [function_1]	count=11
function	[function_1] for a ||| [function_2] [function_1]	count=5
function	and deletes all ||| in	count=1
function	return a dict containing ||| dict	count=1
function	will update a number ||| update stats	count=1
function	returns the sdr ||| get	count=1
function	update a set of ||| update	count=1
class	sdrclassifier ||| sdrclassifier	count=1
function	[function] it has ||| [function] segment	count=1
function	learning is ||| learning	count=1
arg	obj ||| obj	count=1
arg	to a new location ||| reader writer start stop	count=1
function	[function_1] [function_2] ||| [function_2] check [function_1]	count=2
function	[function_1] from a ||| [function_2] [function_1]	count=8
function	[function_1] that ||| [function_2] [function_1]	count=3
function_arg	with the [arg_2] ||| [function_1] segment [arg_2]	count=1
function	called to indicate the [function_1] [function_2] ||| [function_2] [function_1]	count=1
module	to [module] as ||| [module]	count=1
function	[function_1] requested statistics ||| [function_2] [function_1]	count=1
function	checkpoint for the ||| model checkpoint	count=1
class	predicted state and ||| backtracking	count=1
function	and count ||| count	count=1
arg	method description ||| input	count=3
function	policy [function_2] ||| [function_1] [function_2]	count=1
arg	the segment passed ||| segment	count=1
function	the curve auc ||| curve	count=1
arg	matches the specified jobtype ||| jobtype fields	count=1
function	logger object for ||| init logger	count=1
function	instance ||| instance	count=4
class	[class_1] file with ||| [class_2] [class_1]	count=6
function	a specific [function] by ||| get report [function]	count=1
class	put ||| iface	count=1
function	sequence of ||| jobs get fields	count=1
function_arg	saved jobid [arg_2] ||| [arg_2] [function_1]	count=2
function	segment [function_2] ||| [function_1] [function_2]	count=3
function	the [function_1] [function_2] ||| [function_2] [function_1]	count=4
function_arg	if the [arg_2] ||| [arg_2] [function_1]	count=1
function	get the labels on ||| get labels	count=1
class	is initialized in a ||| spatial pooler	count=1
function	[function_1] smallest ||| [function_2] permanence [function_1]	count=2
function	value for ||| init	count=1
function	have been checkpointed this ||| get fields for checkpointed	count=1
function	a new segment ||| new segment	count=2
function	attempt ||| or get unique	count=1
module	instantiate ||| opf	count=1
function	results and caches it ||| results	count=1
arg	[arg_1] number ||| [arg_1] [arg_2]	count=2
class	return ||| record stream iface	count=3
function	[function_1] the winner ||| [function_1] [function_2]	count=1
function	training [function_2] ||| [function_1] [function_2]	count=4
function	returns sensor ||| get	count=1
function	experiment [function] ||| load experiment [function]	count=1
class	iterations ||| iteration phase	count=2
class	returns ||| opfmodel runner	count=1
function	in a job ||| job set	count=1
function	learning mode not ||| learning	count=1
function	returns the activity duty ||| get active duty	count=1
class	a worker or runs ||| runner	count=1
function	have been checkpointed this ||| fields for checkpointed	count=1
function	model and ||| model	count=1
function	of model records ||| models get fields	count=1
arg	model model ||| model	count=2
function	the probability ||| tail probability	count=1
arg	to inputpattern ||| inputpattern topkcategories	count=1
function	that were not killed ||| non killed	count=1
arg	assuming the given ||| offset	count=1
function	[function_1] [function_2] ||| [function_2] name [function_1]	count=1
function_arg	the active [arg_2] ||| [arg_2] [function_1]	count=1
function	pretty print string ||| str	count=1
function	category number ||| category number	count=2
class	from the discrete probability ||| discrete	count=1
function	loads a json ||| load json	count=6
function	in base py ||| get bucket	count=5
function	spread [function_2] ||| [function_2] [function_1]	count=1
class	distribution must ||| multinomial distribution	count=1
function_arg	[function_1] all ||| [function_1] [arg_2]	count=10
class	to ||| stream iface	count=1
function	[function_1] the anomaly ||| [function_2] add [function_1]	count=1
class	the file is ||| file record stream	count=1
class	runs ||| hyper search runner	count=1
class	distribution must be ||| distribution	count=1
arg	eigenvectors singularvalues to keep ||| singularvalues fractionofmax	count=1
function	potentially change [function] ||| set min [function]	count=1
function	pooler see also htmpredictionmodelcontroldisabletplearningcb ||| tplearning cb	count=1
function	and count the ||| job count	count=1
arg	than minpermanence and ||| minpermanence	count=1
function	for each ||| avg connected span for	count=1
function	see also htmpredictionmodelcontroldisablesplearningcb ||| splearning	count=1
arg	[arg_1] passed in ||| [arg_2] [arg_1]	count=6
function	parse a [function_2] ||| [function_2] [function_1]	count=5
function	training sample ||| training sample	count=1
function	of anomaly scores ||| anomaly	count=2
function	periodic check ||| periodic	count=1
function	from ||| load	count=1
arg	random seed and ||| seed	count=1
function	boost [function_2] ||| [function_2] [function_1]	count=9
function_arg	[function_1] fields given ||| [arg_2] [function_1]	count=2
function	[function_1] current ||| [function_1] [function_2]	count=1
function	counts of this ||| counts	count=1
function	encoder that is ||| encoder	count=1
function	returns the model ||| get model	count=2
function	of sequences [function_2] ||| [function_1] metric sequences [function_2]	count=5
function	jobids for jobs in ||| jobs for client	count=2
function	factors when local inhibition ||| factors local	count=1
function_arg	returns a range of [function_1] [arg_2] 'bookmark' ||| record stream iface get [function_1] [arg_2] range	count=3
class	than 0 ||| phase	count=1
function_arg	[function_1] start ||| [function_1] knn [arg_2]	count=5
function	- exp b a ||| diff exp	count=1
class	experiment ||| experiment	count=1
function	segment ||| add to segment	count=1
function	[function_1] the overlap ||| [function_1] [function_2]	count=1
function	set ||| set	count=19
function	also htmpredictionmodelcontroldisabletplearningcb ||| enable tplearning	count=1
function_arg	from source [arg_2] ||| [function_1] permanences [arg_2]	count=1
function_arg	field [arg_2] ||| [arg_2] [function_1]	count=1
function	from all 'othervars', where ||| from	count=1
function	get a parameter of ||| parameter	count=1
function	the closest ||| closest other	count=1
function	local inhibition is performed ||| inhibit columns local	count=1
function	cell index ||| on cell	count=1
function	randomly generated ||| init perm	count=1
class	back ||| stream iface	count=1
function	value to ||| to	count=1
class	hypersearch worker parameters ||| hypersearch worker	count=2
function	the stored checkpoint for ||| checkpoint	count=1
class	record stream ||| record stream	count=1
module_class	[module_1] [class_2] ||| [module_1] two gram [class_2]	count=3
class	temporal [class_2] ||| [class_2] [class_1]	count=2
function	instances ||| eq	count=1
function	returns the next ||| get	count=1
function	anomaly [function_2] ||| [function_2] [function_1]	count=2
module	sequence ||| frameworks opf	count=4
module	all of the ||| regions	count=1
function	delete's the output ||| delete output	count=1
function	generate a ||| generate	count=6
arg	segment object that ||| segment	count=1
function	whether this synapse ||| synapse	count=1
function	[function_1] [function_2] ||| [function_1] model id [function_2]	count=8
function	a value of w ||| get w	count=1
arg	a metricsiface-based module ||| metricspec	count=1
class	to disk ||| record stream iface	count=1
class	must be ||| iteration phase	count=1
function	compute area ||| area	count=1
function	persistent ||| config	count=1
function	randomly generated permanence ||| init	count=1
class	put us back ||| stream iface	count=1
function	must ||| init	count=1
function	of columns ||| columns	count=1
arg	chooses the ||| forceupdate	count=1
function	sets the number of ||| set num	count=1
function	existing job that is ||| resume job no retries	count=1
function_arg	[function_1] the bookmark ||| data record stream iface [function_1] [arg_2] range	count=2
function	imported description ||| get experiment description interface from	count=1
module	the simulated output from ||| algorithms	count=1
arg	matrix using [arg_2] ||| [arg_2] [arg_1]	count=2
class	resolves the referenced value ||| value	count=1
function	[function_1] and ||| [function_1] [function_2]	count=2
function	the job is expected ||| start job	count=1
module	the maximum number of ||| regions	count=1
function	[function_1] in cell ||| [function_2] [function_1]	count=1
arg	inference and learning ||| learn	count=1
function	any stored [function_2] ||| [function_1] [function_2]	count=2
arg	segment ||| segment presynapticcell	count=1
function_arg	learning" [arg_2] ||| frameworks opf model control [function_1] cb [arg_2]	count=3
class	file to disk ||| iface	count=1
function	local inhibition is performed ||| local	count=1
function	row id is 0xff ||| row id	count=1
function	[function_1] label for ||| [function_1] optimized metric [function_2]	count=1
function	local inhibition local ||| local	count=1
arg	the value ||| value	count=2
function_arg	returns a [function_1] [arg_2] 'bookmark' ||| data record stream iface [function_1] [arg_2] range	count=2
function	given cell and ||| in cell	count=2
function	returns the next ||| get data	count=1
function	message that is suitable ||| message	count=1
function	concurrency violation [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] synapses ||| [function_1] [function_2]	count=5
function	orphaned this is ||| orphaned	count=1
function	index ||| index from	count=1
class	model ||| nupic model info	count=1
function	swarm's state to ||| set swarm state	count=1
function	specifying the ||| info	count=1
arg	a ||| data	count=1
function	internal filter ||| init filter	count=1
function_arg	active [arg_2] ||| [function_1] indices [arg_2]	count=1
function	and count the ||| count	count=1
function	returns a [function_2] ||| [function_1] ephemeral members [function_2]	count=2
function	reference to the network's [function_1] [function_2] ||| [function_1] [function_2]	count=2
class	configuration file ||| custom configuration file	count=2
arg	range of ||| column start	count=1
function_arg	distances from inputpattern ||| distances inputpattern partitionid	count=1
function	of active ||| get trace active	count=1
function_arg	new job [arg_2] ||| [function_1] [arg_2]	count=4
function	exit ensures ||| exit	count=1
function	from the a ||| from	count=1
function	[function_1] level ||| [function_2] [function_1]	count=4
function	update the ||| updates	count=1
arg	for retrying a pymysql ||| timeoutsec logger	count=1
arg	change the status ||| jobid completionreason completionmsg useconnectionid	count=1
function_arg	[function_1] assuming the ||| [arg_2] [function_1]	count=4
function	all models [function_2] ||| [function_2] clear [function_1]	count=1
function	is as far away ||| push away	count=1
function_arg	[function_1] b are ||| [arg_2] [function_1]	count=3
class	a sequence of periodicactivityrequest ||| periodic	count=2
function_arg	[function_1] [arg_2] of the ||| [function_1] [arg_2]	count=6
function	handle one compute ||| compute	count=1
function	models ids ||| ids	count=1
module	must be ||| frameworks	count=1
function	randomly generated permanence value ||| init	count=1
function_arg	type [arg_2] ||| [arg_2] [function_1]	count=1
function	know [function] be ||| finish [function]	count=1
function	[function_1] file and ||| [function_1] [function_2]	count=8
function	lookup [function_2] ||| [function_1] [function_2]	count=1
function	that can be ||| init	count=1
function	the cell [function_2] ||| monitor mixin mm get [function_1] [function_2] plot title showreset resetshading	count=1
arg	in the status_completed state ||| alreadyrunning	count=2
function	[function_1] smallest ||| [function_2] [function_1]	count=2
arg	the coordinate to ||| coordinate n	count=1
function	return a clipped ||| clipped	count=1
function	existing job that is ||| job no retries	count=1
arg	learning ||| learn	count=1
function	updates the ||| update synapse permanence	count=1
class	pattern ||| pattern machine	count=3
function	value of w ||| get w	count=2
function	[function_1] exp ||| [function_2] [function_1]	count=2
function	for jobs in ||| jobs for	count=2
function	generation in the given ||| full generation	count=1
arg	on a segment ||| segment presynapticcell permanence	count=1
function	from all ||| from	count=1
function_arg	[function_1] matrix using ||| [function_1] str array format [arg_2]	count=4
function	applies ||| apply	count=2
function_arg	anomaly [arg_2] ||| [arg_2] [function_1]	count=5
module	mangles the given mangled ||| frameworks opf	count=1
function	returns the width ||| get	count=1
class	this phase ||| iteration phase spec learn and infer	count=1
function	py ||| bucket	count=6
function	the pattern machine ||| get pattern machine	count=3
function_arg	one instance [arg_2] ||| [function_1] [arg_2]	count=5
function	list of tuples basically ||| file field list	count=1
function	and count ||| job count	count=1
function	value ||| init	count=1
function	add [function_2] ||| [function_2] [function_1]	count=5
function	[function_1] field statistics ||| [function_2] [function_1]	count=1
function	[function_1] the distances ||| [function_2] [function_1]	count=1
module	that the ||| algorithms	count=1
arg	next n ||| n	count=1
function	task and updates any [function_1] [function_2] ||| opf description iface normalize [function_1] [function_2]	count=3
function	count ||| job count	count=1
function	deletes any segments ||| segments	count=1
function	internal filter variables ||| filter	count=1
function	list available checkpoints ||| print available checkpoints	count=1
function	returns a ||| init perm	count=1
function	and return [function_2] ||| [function_2] [function_1]	count=4
function	[function_1] index ||| [function_1] timestamp record [function_2] recordts	count=1
arg	list of values 'values' ||| values	count=1
function	logger ||| logger	count=3
arg	the caller wants as ||| allresults reportkeys optimizekey	count=1
arg	array x occurs ||| x	count=1
function	insert a new unique ||| insert and	count=1
function	continue ||| termination callbacks	count=1
function	persist it [function_2] ||| [function_2] [function_1]	count=4
class	remain in this phase ||| phase spec learn	count=1
function	check for ||| check for	count=2
function	that a ||| for	count=1
function_arg	print [arg_2] ||| [function_1] [arg_2]	count=3
arg	pos ||| pos	count=3
arg	the network will remove ||| network	count=1
function	radius ||| radius	count=1
function	value ||| exp value	count=1
module	greater ||| frameworks opf	count=2
function	the list of paths ||| paths	count=1
function	the total number of ||| get num	count=3
function	print a numpy ||| numpy	count=1
function	config ||| config	count=2
function	returns sensor [function_2] ||| [function_2] [function_1]	count=7
arg	filesystem path module name ||| path modulename funcname	count=1
module	all numbers that ||| data generators	count=1
arg	[arg] if 'bookmark' ||| [arg]	count=6
arg	cells passed in ||| cls cells	count=2
function	the initial [function_2] ||| [function_2] [function_1]	count=1
function	- exit ensures ||| exit	count=1
function	returns the update period ||| get update period	count=1
function	filter out ||| filter	count=1
function	completed parameters ||| set completed	count=1
function	labels for the ||| metric labels	count=1
arg	each column the overlap ||| overlaps activecolumns	count=1
function	is initialized in a ||| init	count=1
arg	points in the ||| centerindex radius dimensions	count=1
function	[function_1] [function_2] ||| knnanomaly classifier region [function_1] [function_2]	count=4
module	that ||| frameworks opf	count=13
function	[function_1] the overlap ||| [function_2] [function_1]	count=1
class	metric if the params ||| metric	count=1
class	of the ||| record stream iface	count=1
function	[function_1] max ||| [function_1] [function_2]	count=2
function	correctly predicted this ||| activate predicted	count=1
module	must be greater than ||| frameworks opf	count=1
function	'timestamp' field ||| timestamp field	count=2
function	a histogram ||| histogram	count=1
arg	source to dest sp's ||| sourcesp destsp	count=1
function	swarm's state to 'newstate' ||| set swarm state	count=1
class	than 0 ||| iteration	count=1
function	to ||| to id	count=1
class	factors for all columns ||| spatial pooler	count=1
function	index of ||| idx	count=4
module	if the ||| frameworks opf	count=1
function	lookup dictionary ||| lookup dict	count=1
class	synapses ||| pooler	count=1
class	set ||| data generator	count=2
function	[function_1] offsets and ||| [function_2] [function_1]	count=2
function	of ||| init	count=3
arg	returns log(exp ||| out	count=1
class	instantiate a ||| metrics	count=1
function	a randomly ||| perm	count=1
module	greater than ||| opf	count=1
function	in-memory prediction cache to ||| prediction cache	count=1
function	[function_1] concurrency ||| [function_1] [function_2]	count=2
function	timedelta to [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] policy ||| [function_2] [function_1]	count=2
function	distances in ||| distances	count=1
arg	at least minthreshold ||| minthreshold	count=1
function	[function_1] the inference ||| [function_1] [function_2]	count=1
arg	distribution ||| distribution	count=1
function	[function_1] sample ||| [function_1] [function_2]	count=1
function	of active [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] the groundtruth ||| [function_1] [arg_2]	count=2
function	[function_1] number of ||| [function_2] [function_1]	count=4
function	sort in [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] segments ||| [function_2] [function_1]	count=7
arg	the next n values ||| n	count=1
module	width of ||| regions	count=1
function	list to ||| list	count=1
module	and exit program ||| swarming	count=1
class	the prediction output ||| prediction	count=1
function_arg	with [arg_2] ||| [function_1] segment [arg_2]	count=1
function	job ||| start job	count=1
function	[function_1] [function_2] ||| [function_1] next record [function_2]	count=3
function	models that are ||| models	count=1
arg	the results string ||| results	count=1
class	including 'setup' ||| opftask driver	count=1
function	flags [function_2] ||| [function_2] [function_1]	count=4
module	a sequence of ||| opf	count=2
function	compute area [function_2] ||| [function_1] [function_2]	count=6
function	[function] already ||| process [function]	count=3
function	returns ||| perm	count=1
function	iterates through ||| data row count	count=1
function	any stored ||| delete	count=1
function	match any of ||| match	count=1
function	completion message that is ||| completion message	count=1
function	index [function_2] ||| [function_2] field [function_1]	count=3
function	into coordinates using the ||| coordinates	count=1
function	for temporalmemory ||| eq	count=1
function	checkpoint [function_2] ||| model [function_1] [function_2]	count=1
arg	all properties ||| cls	count=2
function	creates the ||| create	count=2
class	classifier ||| knnanomaly classifier	count=2
function_arg	creates ndesirednewsynapes [function_1] [arg_2] possible choosing ||| grow [function_1] cls connections random [arg_2]	count=1
function	the --descriptionfromfile option ||| option	count=1
function	value [function_2] ||| [function_2] [function_1]	count=17
function	performs initial setup activities ||| setup	count=1
class	the given model instance ||| opfdummy model	count=1
function	override] returns the sequence ||| get	count=1
function	a list of labels ||| label list	count=1
function_arg	job [arg_2] ||| [arg_2] [function_1]	count=4
function	jobid ||| id	count=2
class	synapses that is ||| pooler	count=1
function	[function] divided by ||| compute [function] record	count=2
function_arg	[function_1] 'numactivecolumnsperinharea' ||| [function_1] [arg_2]	count=4
function	and topdowncompute() methods ||| top down mapping	count=2
function	creates the model's ||| create	count=1
class	doesn't already exist ||| file utils	count=1
function_arg	[function_1] it's ||| [function_1] score [arg_2]	count=7
class	of the state ||| state	count=1
function	resetprofiling ||| reset profiling	count=1
function	initialize ephemeral ||| construct ephemeral	count=1
arg	experimentdir ||| cls experimentdir	count=1
class	a sequence of periodicactivityrequest ||| activity mgr	count=2
class	serializes model using capnproto ||| model	count=1
function	classifier ||| classifier	count=1
class	get ||| classifier region	count=1
function	for ||| init perm	count=1
function	instance ||| init	count=4
arg	niter number ||| niters inferenceargs	count=1
module	sequence of periodicactivityrequest elements ||| frameworks opf	count=2
function	of results generated by ||| results	count=1
function	cell index ||| cell	count=1
function	is as far away ||| away	count=1
arg	request ||| cmdline	count=1
function_arg	seeks to [arg_2] ||| [function_1] from end [arg_2]	count=1
function	[function] are ||| normalize stream [function]	count=1
function	same job ||| job	count=1
function	as possible [function] ||| push away [function]	count=3
function_arg	checkpoint for [arg_2] ||| [arg_2] [function_1]	count=2
function	the local [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] id ||| [function_2] [function_1]	count=2
function	that are [function] due ||| is segment [function]	count=1
arg	string that defines the ||| encoderdict	count=1
function_arg	in [function_1] [arg_2] ||| [function_1] field [arg_2]	count=1
arg	to inputpattern and the ||| inputpattern	count=1
function	of the 'timestamp' ||| timestamp	count=1
function	_getonematchingrownoretries(), but ||| get one matching	count=1
function	update boost [function_2] ||| [function_1] [function_2]	count=4
function	of upcoming [function_2] ||| [function_1] [function_2]	count=5
function	that is closest ||| closest	count=1
function	a synapses ||| perm	count=1
module	database "semi-private" ||| database	count=1
function	[function_1] cache associated ||| [function_1] [function_2]	count=3
class	elements ||| periodic	count=2
class	must be ||| iteration	count=1
module_class	[module_1] hypersearch implementation ||| [module_1] [class_2]	count=1
arg	finds ||| computescores overcategories partitionid	count=1
function	a description [function_2] ||| [function_1] [function_2]	count=4
module_class	[module_1] cells ||| [module_1] [class_2]	count=2
function	valid estimator ||| valid estimator	count=1
function	parameter of the anomaly ||| get anomaly parameter	count=1
function	least [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] sample ||| [function_1] [function_2] inputwidth category partitionid	count=1
arg	chooses ||| forceupdate	count=1
function_arg	[function_1] [arg_2] ||| [function_1] str [arg_2]	count=4
function	[function_1] dict containing ||| [function_2] [function_1]	count=2
function	a synapses that is ||| init	count=1
function	synapses that ||| init perm	count=1
function	curve auc ||| curve	count=1
function	for returning the category ||| get category	count=1
function	taking into account ||| avg	count=1
function	list of labels ||| label list	count=1
arg	input pattern ||| inputpattern	count=3
function	[function_1] sample ||| [function_2] [function_1]	count=2
function	inhibition radius ||| inhibition radius	count=2
function	representation ||| encoder	count=1
function_arg	[function_1] labelname ||| [function_1] start end [arg_2]	count=4
function	specs in ||| specs	count=2
class	[class_1] should ||| [class_2] [class_1]	count=3
class	file to ||| stream	count=2
function	same ||| unique	count=1
function_arg	[function_1] segment passed ||| [function_1] cls connections random [arg_2]	count=2
function	qualifies a ||| connected	count=1
function	[function_1] predictive cells ||| [function_1] trace [function_2]	count=1
function	the job is ||| job	count=1
function	python script ||| script	count=1
class	sequence of periodicactivityrequest elements ||| activity mgr	count=2
arg	inputpattern and the indices ||| inputpattern topkcategories	count=1
function	given swarm's state ||| set swarm state	count=1
arg	size [arg] ||| pos size counts [arg]	count=2
module_class	[module_1] metrics ||| [class_2] [module_1]	count=2
class	the tm @param pamlength ||| backtracking tm	count=1
module	particle ||| swarming hypersearch	count=1
class	put us ||| stream iface	count=1
class	including ||| opftask driver	count=1
function	[function_1] amount for ||| [function_1] [function_2]	count=3
function	[function_1] 'sequenceid' field ||| [function_2] [function_1]	count=2
module	converts all of the ||| regions	count=1
module	computes the ||| algorithms	count=2
function	sort in memory ||| sort	count=1
function	compute the record's timestamp ||| compute	count=1
function	the initial [function_2] ||| [function_1] [function_2]	count=1
function	'months' [function] 'seconds' ||| get aggregation months [function]	count=1
function	[function_1] to generate ||| [function_2] coinc [function_1] ncoinc length activity	count=1
function	the scalar values ||| scalar	count=1
function	the network's [function] ||| get [function]	count=1
function	the index of ||| idx	count=1
function	[function_1] and deletes ||| [function_2] [function_1]	count=8
class	xml configuration file ||| custom configuration file	count=2
function	[function_1] percent ||| [function_1] [function_2]	count=3
function	compute a [function_2] ||| [function_2] [function_1]	count=4
function	sequence ||| init	count=2
function	spatial pooler instance ||| spatial fdr	count=2
function	the beginning of the ||| rewind	count=1
function	add labels from ||| add label	count=2
class	a sequence of ||| mgr	count=2
function	the active cells ||| active	count=1
function	[function_1] estimator ||| [function_1] [function_2] params p	count=3
function	[function_1] retries ||| [function_1] [function_2]	count=5
function	conforming ||| init	count=2
function	py ||| get bucket info	count=8
class	model in case some ||| model	count=1
module	must be ||| opf	count=1
function	[function_1] as orphaned ||| [function_2] [function_1]	count=1
function	the random number ||| random	count=1
function	non-zero bits if ||| index to non zero bits	count=1
module	configuration ||| swarming hypersearch	count=5
module	be greater than ||| frameworks opf	count=1
arg	consisting of ground truth ||| groundtruth	count=1
function	the minimum duty ||| min duty	count=2
module	@return countstrace ||| algorithms monitor_mixin	count=1
class	file is ||| file	count=1
function	print the ||| print	count=3
function	remove entries ||| remove	count=1
function	returns the stability ||| stability	count=1
class	version ||| knnanomaly classifier	count=1
function	called during [function] ||| [function] serialize extra	count=2
function	object compute ||| compute	count=1
function	the record's timestamp index ||| idx	count=1
class	of ||| phase	count=1
function	returns a concatenated list ||| get	count=2
class	our ||| backtracking tmcpp	count=2
class	[class_1] factory ||| [class_1] [class_2]	count=2
function	a json file ||| with json file	count=1
function	returns encodings for all ||| get all encodings	count=1
function	the given swarm's state ||| state	count=1
module	a ||| opf	count=3
function	labels so that artificial ||| variable	count=1
arg	and ||| inputvector	count=1
function	number to matching on ||| number	count=1
function	attempt ||| or get unique job no	count=1
function	input [function_2] ||| [function_2] columns per [function_1]	count=2
function	labels [function_2] ||| [function_2] remove [function_1]	count=1
module_class	[module_1] encoder ||| [module_1] geospatial coordinate [class_2]	count=3
function	the list of labels ||| labels	count=2
function_arg	[function_1] in ||| [function_1] [arg_2]	count=6
function	singularvalues ||| adaptive svddims	count=1
function_arg	[function_1] values ||| [arg_2] [function_1]	count=1
function	[function_1] pattern machine ||| [function_2] [function_1]	count=1
function	velocity to ||| velocity	count=1
class	will eventually be defined ||| deferred dict lookup	count=1
function	generated permanence value ||| init perm	count=1
class	put us back at ||| stream iface	count=1
module	that are being calculated ||| frameworks	count=1
arg	numparticles ||| swarmid minnumparticles	count=1
function	of an existing job ||| job no retries	count=1
function	write ||| write	count=3
class	the ||| record	count=3
class	given xml file and ||| configuration	count=1
function	load ||| load	count=1
module_class	@doc place_holder region ||| engine region	count=2
module	variable ||| swarming hypersearch	count=1
function_arg	retries [arg_2] ||| [function_1] [arg_2]	count=1
function	encoder [function_2] ||| [function_1] [function_2]	count=1
function	only if ||| if equal	count=1
function	task and updates any [function_1] [function_2] ||| [function_1] [function_2]	count=3
class	knn classifier ||| knnanomaly classifier region	count=1
module_class	[module_1] encoder ||| [module_1] [class_2]	count=12
function	the update [function_2] ||| [function_2] [function_1]	count=1
function	cell with [function_2] ||| [function_2] [function_1]	count=6
function	sum of the ||| aggr sum	count=1
class	of the file ||| iface	count=1
function	from ||| from knn	count=1
function	the verbosity ||| verbosity	count=1
module	including 'setup' ||| frameworks	count=1
function	[function_1] specs in ||| [function_2] [function_1]	count=6
function	updated frequency [function_2] ||| [function_2] [function_1]	count=1
function	generate requested ||| generate	count=1
function_arg	accumulate [arg_2] ||| [arg_2] [function_1]	count=1
function	exp b a ||| exp	count=2
arg	client is not ||| client	count=1
class	of periodicactivityrequest elements ||| activity	count=2
arg	function ||| inpt output	count=1
module	us back at the ||| data	count=1
function	a log scale representation ||| log	count=1
arg	string metrics a ||| metrics	count=1
arg	of the cell ||| cell	count=1
function	[function] of ||| get [function]	count=2
function	file and store ||| file	count=2
function	pycapnp proto type that ||| proto type	count=3
function	saving ||| data	count=1
arg	given a bucket index ||| index	count=1
function	routine will update a ||| update stats	count=1
function_arg	read state [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] [function_2] ||| [function_1] job [function_2]	count=3
function	[function_1] [function_2] ||| [function_2] columns per [function_1]	count=2
function	given category [function_2] ||| [function_2] [function_1]	count=3
arg	the groundtruth ||| groundtruth	count=1
function	[function_1] boost ||| [function_1] [function_2]	count=1
arg	for the next timestep ||| inferenceelement	count=2
function	new and [function_2] ||| [function_1] [function_2]	count=2
arg	niters ||| niters	count=2
function	synapses that is initialized ||| init perm	count=1
function	[function_1] [function_2] database ||| [function_1] [function_2]	count=2
class	a ||| periodic	count=2
class	given model ||| opfdummy model runner	count=1
module	for a synapses ||| algorithms	count=1
class	class ||| reader	count=1
function_arg	map assuming the ||| map maxbuckets offset	count=1
function	schema note ||| schema	count=1
function	default metrics ||| default metrics	count=2
class	to backtracking_tm py ||| monitored tmshim	count=1
class	including ||| opftask	count=1
class	beginning ||| stream iface	count=1
function	default metrics to ||| default metrics	count=2
function	is the timestamp ||| timestamp	count=1
function	job that ||| job no	count=1
function	returns sum of the ||| aggr sum	count=1
function	for jobs in the ||| get active jobs for	count=2
arg	gets ||| centerinput	count=1
function	of segments ||| segments	count=2
function	generate requested statistics for ||| generate stats	count=1
class	constructor ||| basic prediction logger	count=1
class	a synapses that is ||| spatial pooler	count=1
function	range [function_2] ||| [function_2] [function_1]	count=2
function	permanence ||| perm	count=2
function	for the inference ||| infer	count=1
function	run a named function ||| run	count=1
function	[function_1] increment ||| [function_1] [function_2]	count=3
function	a new job ||| job insert	count=2
arg	ways of thinking about ||| w minval maxval n	count=1
function	construct a _htmclassificationrecord ||| construct classification	count=2
function	inhibition [function_2] ||| [function_1] [function_2]	count=1
function	returns sum ||| sum	count=1
function	up the latest search ||| pickup search	count=1
function	scalar values ||| scalar	count=1
class	the classifier ||| classifier region	count=1
function	compute the ||| compute	count=2
function	column returns index and ||| get	count=1
arg	sequences is used to ||| seqlength	count=1
class	add ||| metrics iface	count=1
class	this model ||| two gram model	count=1
function	[function_1] duty cycle ||| [function_1] [function_2]	count=1
arg	the optimize metric ||| genidx	count=1
class	phase ||| iteration phase spec learn and infer	count=2
function	read next from ||| next	count=1
arg	synapses on segment ||| connections segment prevactivecells	count=1
class	the policy ||| policy iface	count=1
function	cycles for ||| cycles	count=3
function	[function_1] and add ||| [function_2] check for concurrency [function_1]	count=1
function	cell index ||| get segment on cell	count=1
function_arg	[function_1] job that ||| [function_1] for checkpointed [arg_2]	count=1
function	returns ||| temporal	count=4
arg	metrics a list ||| metrics	count=1
class	bits this method ||| spatial pooler	count=1
function	debugging ||| null	count=1
function	the models [function_2] ||| [function_1] [function_2]	count=3
function_arg	from start to ||| from knn start	count=2
class	new ||| permute variable	count=1
function	a given encoder ||| perm encoder str	count=1
function	a dataset ||| dataset	count=1
arg	[arg_1] executes ||| [arg_1] [arg_2]	count=1
function	default [function_2] ||| [function_2] [function_1]	count=10
function	a neighborhood ||| neighborhood	count=1
class	this metric if the ||| aggregate metric	count=1
function_arg	set [arg_2] ||| [arg_2] [function_1]	count=2
function	the updated frequency counts ||| frequency counts	count=1
module_class	the entire configuration ||| support configuration	count=1
function	the maximum [function_2] ||| [function_2] [function_1]	count=6
function	of an existing job ||| resume job no retries	count=1
module	this ||| frameworks	count=1
arg	- ||| chunkindex	count=1
function	permanence increment ||| permanence increment	count=2
class	to the jobs table ||| client jobs dao	count=1
arg	than minlikelihoodthreshold ||| minlikelihoodthreshold	count=1
function	task and updates any [function_1] [function_2] are not absolute paths ||| opf description iface normalize [function_1] [function_2]	count=1
arg	instantiate a metricsiface-based module ||| metricspec	count=1
function	[function_1] label for ||| [function_2] [function_1]	count=1
function	value for a ||| init perm	count=1
function	[function] the model's ||| get field [function]	count=1
function	[function_1] field ||| [function_1] [function_2]	count=13
function	the additional [function_2] ||| [function_2] [function_1]	count=8
function_arg	map [arg_2] ||| [arg_2] [function_1]	count=5
function	get the connected permanence ||| get connected permanence	count=1
class	classifier ||| classifier region	count=4
function	inhibition [function_2] ||| [function_2] [function_1]	count=1
arg	if many timesteps of ||| celltrace cellcount activitytype title	count=1
class	permanence value for ||| spatial pooler	count=1
function	a histogram of ||| histogram	count=1
function	recently ||| recently	count=1
module	and exit ||| swarming	count=1
function	a figure ||| plot	count=1
arg	a tuple categorycount listofcategories ||| f format categorycolumn categorycolumns	count=1
arg	all ||| cls	count=5
function_arg	the same [arg_2] ||| [arg_2] [function_1]	count=4
class	the file ||| iface	count=2
module	disk ||| data	count=2
function	[function_1] statistics ||| [function_2] [function_1]	count=5
module	optimization key name and ||| swarming	count=1
function	returns the [function_2] ||| [function_1] [function_2] months	count=1
function	generate the initial ||| generate	count=3
class	our member variables ||| backtracking	count=1
function	logger object for ||| logger	count=1
arg	the string that defines ||| encoderdict	count=1
class	indices ||| indices	count=1
module	place the ||| opf	count=1
arg	metric a metric ||| metric	count=1
function	return a dict that ||| get	count=2
arg	name [arg] member name ||| [arg]	count=1
function	potential segment [function_2] ||| [function_2] [function_1]	count=2
function	the file ||| config file	count=1
function	start a ||| start	count=1
function_arg	cycles for [arg_2] ||| duty [function_1] [arg_2]	count=3
arg	w ||| w	count=1
module	than 0 ||| frameworks	count=1
function	inference ||| inference	count=5
function	[function_1] seconds in ||| [function_2] [function_1]	count=1
function	override] returns ||| get	count=1
module	the head and the ||| swarming	count=1
function	exit ||| exit	count=3
function	records within the range ||| delete range	count=1
class	a variable ||| permute	count=1
function	stats this will usually ||| stats	count=1
class	return ||| scalar encoder	count=1
arg	label a distinguishing ||| label	count=1
function	periodicactivityrequest ||| init	count=2
function	instantiate a ||| init	count=2
class	jobs ||| client jobs	count=1
function	[function_1] an ||| [function_1] [function_2]	count=1
function	[function_1] cycles for ||| [function_1] [function_2]	count=9
function	that ||| for	count=1
function	updated frequency ||| frequency	count=1
function	[function_1] test ||| [function_2] [function_1]	count=2
function	lines ||| total line	count=1
module	the metrics that ||| frameworks opf	count=1
function	on ||| on	count=2
function	returns the [function_2] ||| [function_1] next record [function_2]	count=3
function_arg	[function_1] groundtruth ||| [function_1] shifted ground truth [arg_2]	count=2
arg	of values 'values' into ||| values freqcounts	count=1
class	given hypersearch job ||| search	count=1
function_arg	get the [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	returns a [function_1] [arg_2] 'bookmark' ||| data stream reader [function_1] [arg_2] range	count=2
arg	for retrying ||| timeoutsec logger	count=1
function	should [function_2] ||| [function_1] [function_2]	count=3
function	but with retries ||| with retries	count=1
module	metrics that ||| frameworks opf	count=1
function	update a number of ||| update stats	count=1
function	best model ||| best model	count=3
module	this ||| opf	count=1
class	that is initialized in ||| spatial pooler	count=1
function	[function_1] the cell ||| [function_1] least allocated [function_2]	count=3
function	learning and inference stats ||| stats	count=1
function	[function_1] [function_2] classifier ||| [function_2] add [function_1]	count=3
function_arg	optparse callback [arg_2] ||| [function_1] option [arg_2]	count=3
function	internal ||| dbto	count=1
arg	compute() on ||| activecolumns	count=1
class	for all columns ||| spatial pooler	count=5
function	the duty cycle period ||| duty cycle period	count=1
function	data [function_2] ||| [function_2] [function_1]	count=2
function	underlying ||| append	count=1
function	for jobs in ||| get active jobs for client	count=2
module	a synapses that is ||| algorithms	count=1
class	been read ||| stream reader	count=1
function	returns a ||| get state	count=2
function	duty cycle ||| duty	count=1
function	[function_1] of ||| [function_2] dict [function_1]	count=1
function	jobids for jobs ||| jobs for	count=2
function	[function_1] of a ||| [function_2] [function_1]	count=2
function	[function_1] column ||| [function_2] [function_1]	count=1
function	new hypersearch job ||| run new search	count=2
function	[function] position ||| get [function]	count=1
function	[function_1] the 'category' ||| [function_2] [function_1]	count=1
function	generates the non-default ||| generate	count=1
arg	params into ||| jobid params	count=1
function	remove labels ||| remove labels	count=3
function	getbucketindices] ||| get bucket indices	count=2
function	[function_1] value from ||| [function_2] [function_1]	count=6
function	stats ||| stats	count=4
function	[function_1] [function_2] it has >= activationthreshold ||| [function_2] [function_1]	count=8
function	our connection id this ||| connection id	count=1
class	set ||| backtracking tm	count=1
function	deletes any segments that ||| segments	count=1
function	needed length for ||| length	count=1
function	potential segment update ||| to segment updates	count=1
function	of [function] ||| mm get [function] activity	count=1
function	all the models ||| models	count=1
function	[function_1] [function_2] ||| [function_1] classifier only [function_2]	count=6
function	[function_1] types ||| [function_1] [function_2]	count=2
function	tm ||| tm	count=2
arg	of records records - ||| key chunkindex	count=1
class	in this phase ||| phase spec learn and infer	count=1
function	main loop of ||| main loop	count=1
function	from one ||| custom compute	count=1
function	except that the neighborhood ||| neighborhood	count=1
function	centre ||| centre	count=1
module_class	the tm ||| algorithms backtracking tm	count=1
function	of the first ||| first	count=1
function	the indices ||| cell indices	count=1
function	[function] are not ||| normalize stream [function]	count=1
function	concurrency in ||| concurrency	count=1
arg	pattern index ||| index partitionid	count=1
function	anomaly ||| get anomaly	count=1
arg	inputpattern ||| inputpattern topkcategories	count=1
class	the given particle ||| particle	count=1
class	the sensor to ||| sensor	count=1
function	generates a file by ||| generate	count=1
function	[function_1] connections in ||| [function_2] [function_1]	count=2
function	for ||| get	count=13
function	time ||| end time	count=1
function	list of segments ||| segments	count=1
function	returns the inhibition ||| get inhibition	count=2
class	a moving [class_2] ||| [class_2] [class_1]	count=1
module_class	the hypersearch worker ||| swarming hypersearch worker	count=1
function	[function_1] the anomaly ||| [function_2] remove [function_1]	count=1
function	during network [function] with an ||| [function] serialize extra	count=1
class	temporal memory class ||| temporal memory test	count=2
class	file with the ||| file wrapper	count=2
class	its shared ||| single shared	count=2
function	cell ||| get segment on cell	count=1
function	random [function_1] [function_2] ||| [function_1] [function_2]	count=6
function_arg	a figure [arg_2] ||| [arg_2] [function_1]	count=2
function	offsets and [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] requested statistics ||| [function_1] [function_2]	count=1
arg	number ||| inferenceargs	count=2
module	generate between [module] tail ||| [module]	count=1
class	the file to disk ||| reader	count=1
function_arg	from source [arg_2] ||| [arg_2] [function_1]	count=1
arg	potential mapping for a ||| potential	count=1
function_arg	clear all configuration ||| clear cls	count=1
function	correctly predicted ||| predicted	count=1
module	set the state of ||| regions	count=4
module	the [module] ||| [module]	count=3
function	sequence of job ||| get	count=1
module	construct the ||| regions recordsensorfilters	count=2
function	a _hypersearchjob ||| hyper search job	count=1
function	beginning ||| rewind	count=2
arg	records - a ||| chunkindex	count=1
function	the dimensions ||| column dimensions	count=1
function	permanence ||| init	count=1
function	- exp b ||| log diff exp	count=1
class	the knn classifier ||| knnanomaly classifier region	count=1
function	id of ||| id	count=1
function	the [function] ||| [function]	count=15
function	a neighborhood of ||| get input neighborhood	count=1
function	input ||| get input	count=2
function	the label [function_2] ||| [function_2] [function_1]	count=8
function	[function_1] labels have ||| [function_1] [function_2]	count=4
arg	an existing one if ||| modelparams modelparamshash metricresult	count=1
function	print a floating point ||| print	count=1
function	job that is presently ||| resume job no	count=1
function	returns a dictionary of ||| get	count=4
function	[function_1] range from ||| [function_2] [function_1]	count=1
function	+ exp b ||| sum exp	count=1
function	test that we ||| test	count=1
function	as a string ||| get string	count=2
class	encoder [class_2] ||| [class_2] [class_1]	count=4
class	[class_1] [class_2] dict containing 'months' ||| [class_1] [class_2]	count=4
function	[function_1] a cell ||| [function_2] [function_1]	count=1
function	[function_1] [function_2] ||| htmprediction model classifier helper [function_1] [function_2] category	count=2
function	end and returns ||| end	count=1
function	synapses that are active ||| active	count=1
function	set of results ||| results	count=1
class	hold a value ||| connections	count=1
function	returns a list ||| get	count=3
function	fewest number of ||| least allocated	count=1
class	cells ||| memory	count=1
function	any stored records within ||| delete	count=1
function	list of labels for ||| labels	count=2
function	in base py ||| bucket values	count=1
function	a histogram of the ||| plot histogram	count=1
function	[function_1] the logger ||| [function_1] [function_2]	count=1
function	from a file and ||| from file	count=1
function_arg	[function_1] values ||| [function_1] frequency counts [arg_2]	count=1
module	iterations must ||| opf	count=1
class	connection policy ||| connection	count=1
function	swarm generations ||| swarm generations	count=1
class	state and ||| backtracking	count=1
function	returns the [function_2] ||| [function_1] sp [function_2]	count=1
class	configuration ||| custom configuration	count=2
arg	second order transition ||| numcategories	count=3
function	find the segment with ||| best matching segment	count=1
function	[function_1] all ||| [function_2] [function_1]	count=10
function	to a json file ||| run with json file	count=1
function	stored checkpoint ||| model checkpoint	count=1
function	string ||| string	count=3
function	of labels for the ||| labels	count=1
function_arg	a numpy [arg_2] ||| [arg_2] [function_1]	count=3
function	parses ||| parse	count=1
function	main ||| main	count=2
function	name for the given ||| for	count=1
function	total number ||| num	count=9
function	total on time ||| list of on	count=1
function	value of a ||| get input value	count=1
function	return true if ||| is	count=2
function	sum ||| sum	count=1
function	description in base py ||| get bucket	count=5
function	models ids [function_2] ||| [function_2] [function_1]	count=2
arg	the on-times encountered in ||| freqcounts title xlabel	count=1
class	variable ||| permute	count=1
class	the classifier ||| model classifier helper	count=1
function_arg	[function_1] [arg_2] ||| [function_1] runtimeelement [arg_2]	count=4
function	name for the current ||| db name	count=1
function	the minimum duty cycles ||| min duty cycles	count=1
arg	random seed and a ||| seed	count=1
arg	inference and/or learning ||| rfinput resetsignal	count=1
function	the additional ||| additional	count=2
arg	b a and b ||| a b	count=2
function	metric for number of ||| get	count=1
function	of dataset [function] metadata ||| get dataset [function]	count=1
function_arg	probability that [arg_2] ||| [arg_2] [function_1]	count=1
function	disableprofiling ||| disable profiling	count=1
class	classifier ||| knnanomaly classifier region	count=4
function	returns a ||| get	count=15
arg	retrying a pymysql ||| timeoutsec logger	count=1
function	helper function for querying ||| get fields for active	count=1
function	to this file ||| to file	count=3
class	xml configuration file ||| custom configuration file wrapper	count=2
function	file and ||| config file	count=2
arg	result of a ||| result	count=1
module_class	[module_1] state ||| [module_1] [class_2]	count=4
module_class	[module_1] metrics ||| [module_1] [class_2]	count=2
class	latest ||| hyper search runner	count=1
arg	fieldmetainfo ||| fields	count=1
function	returns ||| init	count=1
function	the latest search from ||| pickup search	count=1
function	the boosted overlap score ||| boosted overlaps	count=1
function	for all the models ||| models	count=1
function	special [function_2] ||| [function_1] [function_2]	count=5
function	[function_1] saved jobid ||| [function_2] [function_1]	count=1
function	model's checkpoint file ||| model checkpoint file	count=1
function	[function_1] synapses per ||| [function_1] [function_2]	count=3
function	iteration [function_2] ||| [function_1] [function_2]	count=1
arg	change ||| completionreason completionmsg useconnectionid	count=1
function_arg	passes the [function_1] [arg_2] note upon completion ||| [function_1] [arg_2]	count=1
function	factors are used ||| factors	count=1
module_class	the columns ||| algorithms spatial pooler	count=1
function	updates the minimum ||| update	count=1
module	the ground truth ||| frameworks opf	count=1
function	the active ||| active	count=3
module	object that the ||| algorithms	count=1
function	the input record ||| input	count=1
class	of ||| backtracking tm	count=6
function	output over [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] 'timestamp' ||| [function_2] field [function_1]	count=1
function_arg	a serialized [arg_2] ||| [function_1] [arg_2]	count=2
function	of inference ||| infer	count=1
function	cell in [function_2] ||| [function_2] best matching [function_1]	count=3
class	and ||| and	count=1
function	implemented in ||| file	count=1
function	iteration [function_2] ||| [function_1] learn [function_2]	count=2
function	models table ||| jobs	count=1
class	hypersearch job and ||| search runner	count=1
function_arg	recursively applies [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] the next ||| [function_1] [function_2]	count=1
class	for ||| memory	count=1
arg	values 'values' into ||| values freqcounts	count=1
function	[function_1] models that ||| [function_2] [function_1]	count=5
function	generation in ||| generation	count=1
function	is used to generate ||| generate	count=2
function	from ||| list from	count=1
arg	assuming the ||| offset	count=1
function	spec parameter ||| parameter	count=1
function	what test we ||| test header	count=2
function	perform final activities ||| finalize	count=1
function	[function_1] all fields ||| [function_2] [function_1]	count=5
function	generate a set of ||| generate	count=4
function	had enough [function] ||| get last [function]	count=3
arg	filter ||| noise seed	count=1
function	experiment description [function_2] ||| [function_1] [function_2]	count=2
arg	requestedactivities a sequence ||| requestedactivities	count=2
function	updates ||| adapt	count=1
function	the index [function_2] ||| [function_2] [function_1]	count=4
function	from this [function_2] ||| [function_1] [function_2]	count=1
arg	name out [arg] ||| itemname [arg]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] permanences [arg_2]	count=2
class	in ||| spatial	count=1
function	for ||| null	count=1
function	[function_1] index of ||| [function_2] [function_1]	count=2
function	for a ||| init	count=1
function	ephemeral [function_2] ||| [function_2] [function_1]	count=2
function	id is ||| id	count=1
function	start a new ||| run new	count=1
function	randomly generated permanence ||| perm	count=1
function	return true if our ||| is	count=1
function	synapses [function_2] ||| [function_2] [function_1]	count=6
arg	categoriesout -- ||| categoriesout	count=1
function	trace made up ||| trace	count=1
function	[function_1] [function_2] cycle estimate ||| [function_1] [function_2]	count=1
function	a dated potential segment ||| add to segment	count=1
function	[function_1] [function_2] period ||| [function_1] [function_2] months	count=2
function	figure ||| plot	count=1
class	a new model instance ||| model	count=1
module	must ||| frameworks opf	count=2
function	jobids for jobs in ||| jobs for	count=2
function	returns a randomly ||| init	count=1
arg	the given filename ||| cls filename	count=2
function	so far and ||| and err	count=1
function	[function] the given ||| load experiment description [function]	count=1
function	average [function_2] ||| [function_2] [function_1]	count=6
arg	velocities and optionally the ||| particlestate newbest	count=1
function	predicted => active ||| predicted active	count=2
class	knn classifier ||| classifier region	count=1
function	update ||| job update results	count=2
arg	records records - ||| chunkindex	count=1
function	matching row with ||| matching row	count=1
module	the prediction and the ||| frameworks opf	count=1
function	checkpoint for ||| model checkpoint	count=1
function	ffff 9 bytes of ||| get	count=1
module	in note ||| monitor_mixin	count=1
function	job to 'newvalue', ||| job set	count=1
function	returns true if all ||| is completed	count=2
function	[function] constructed ||| [function]	count=3
class	hash ||| coordinate encoder	count=1
module	the [module_2] ||| [module_2] [module_1]	count=1
arg	object of the specified ||| cell idx	count=1
class	the storage or false ||| record stream iface	count=1
class	that will eventually be ||| deferred dict lookup	count=1
module_class	nupic data fieldmeta ||| data stream reader	count=1
function	[function_1] checkpoint ||| [function_2] [function_1]	count=1
arg	on params into the ||| params	count=1
class	that is ||| spatial	count=1
class	configuration settings from ||| configuration	count=1
function	[function_1] [function_2] ||| [function_2] predicted active [function_1]	count=4
class	back at the ||| stream	count=1
function	models from the models ||| models	count=1
class	ourself from a ||| spregion	count=1
function_arg	[function_1] expression and ||| [function_1] runtimeelement [arg_2]	count=1
function	[function_1] the aggregation ||| [function_2] [function_1]	count=1
function	the current ||| current	count=1
function	timestamp index ||| idx	count=1
function	[function] best ||| [function] particle	count=1
arg	should be added ||| columnactivesegments	count=1
function	return a numpy array ||| get	count=2
module_class	configuration [class_2] ||| [module_1] configuration [class_2]	count=1
class	in this phase ||| phase	count=1
function	[function_1] [function_2] the ||| [function_1] [function_2]	count=6
function	--descriptionfromfile option ||| from file option	count=1
function	[function_1] [function_2] ||| [function_1] [function_2] c i s	count=3
function	[function] best score ||| [function] particle	count=1
function	cell [function_2] ||| [function_2] [function_1]	count=15
function	failures that warrant retries ||| sql	count=1
function	[function_1] dictionary ||| [function_2] [function_1]	count=3
function	[function_1] of ||| [function_2] [function_1]	count=18
function	predicted => active cell ||| predicted active	count=1
function	sensor region's encoder ||| encoder	count=1
function	a segment is active ||| is segment	count=2
class	[class_1] prediction ||| [class_2] [class_1]	count=3
function	category list this is ||| category list	count=1
function	given two tm ||| tm	count=2
class	loads ||| opfdummy model runner	count=1
function	[function_1] labels from ||| knnanomaly classifier region [function_1] [function_2]	count=1
function	a map ||| map	count=1
function	the fewest number ||| least allocated	count=1
function_arg	[function_1] cell ||| [arg_2] [function_1]	count=2
function	return list [function_2] ||| [function_1] [function_2]	count=1
function	also htmpredictionmodelcontroldisabletplearningcb ||| enable tplearning cb	count=1
class	a variable that ||| permute	count=1
function	the svd ||| svd	count=1
function_arg	[function_1] assuming the ||| [function_1] maxbuckets [arg_2]	count=4
arg	pattern with ||| inputpattern	count=1
function	cells in ||| cells	count=1
class	put us back ||| record stream	count=1
arg	should be written ||| metricnames	count=1
class	put us ||| stream	count=1
class	model runner ||| opfmodel runner	count=1
function_arg	returns a [function_1] [arg_2] if 'bookmark' ||| [function_1] [arg_2]	count=6
function	bit ||| bit for coordinate	count=2
class	the classifier ||| classifier	count=2
arg	"date" iteration index is ||| c i segupdate	count=1
function	[function_1] timestamp index ||| [function_1] [function_2] recordts	count=2
function_arg	returns a [function_1] [arg_2] if 'bookmark' ||| data stream reader [function_1] [arg_2] range	count=3
class	of this model ||| model	count=2
function	build the additional specs ||| get additional specs	count=2
arg	results [arg_2] ||| [arg_2] [arg_1]	count=1
arg	fields for ||| fields	count=1
function	[function_1] memory chunk ||| [function_2] [function_1]	count=1
function	the 'timestamp' ||| timestamp	count=1
arg	less than minpermanence and ||| minpermanence	count=1
function	pointer and param ||| func ptr and	count=1
function	pattern that is *not* ||| pattern	count=1
function	the value [function_2] ||| [function_2] input [function_1]	count=4
function	a list to ||| segment flat list	count=1
function	get the [function_2] ||| [function_1] [function_2]	count=23
module	prediction and the ||| frameworks opf	count=1
function	[function_1] from ||| experiment [function_1] [function_2]	count=1
function	an svm ||| validate svm	count=1
function_arg	[function_1] bookmark ||| [arg_2] [function_1]	count=6
function	every params [function_2] ||| [function_2] [function_1]	count=1
class	add ||| classifier helper	count=1
function	the state ||| write state	count=1
arg	[arg_1] end ||| [arg_2] [arg_1]	count=2
function	compute a metric over ||| get metric from	count=1
function	[function_1] loop of ||| [function_1] [function_2]	count=1
function_arg	file and [arg_2] ||| [function_1] [arg_2]	count=4
function	[function_1] jobs in ||| [function_2] [function_1]	count=12
function	for a new ||| insert	count=1
class	version ||| tmregion	count=1
class	put us back at ||| stream	count=1
arg	start [arg_2] ||| [arg_1] [arg_2]	count=2
function	the overlap [function_2] ||| [function_2] [function_1]	count=4
arg	result ||| result	count=1
function	learning iteration number ||| iteration learn num	count=4
function	the database name ||| name	count=1
function	far and ||| and err	count=1
class	that is initialized ||| spatial pooler	count=1
function	learning mode ||| learning	count=1
class	a variable that permutes ||| permute	count=1
module_class	the segment ||| algorithms segment	count=1
function	[function_1] inactive ||| [function_2] [function_1]	count=4
class	back at ||| record	count=1
function	be a checkpoint ||| checkpoint	count=1
class	worker or runs ||| search runner	count=1
class	sequence of periodicactivityrequest elements ||| periodic activity	count=2
arg	"date" iteration index ||| c i segupdate	count=1
function	curve auc using ||| curve	count=1
class	prediction output ||| prediction	count=2
function	this segment's synapse with ||| synapse	count=1
function	insert a new ||| insert and start	count=1
function	metrics value to ||| to	count=1
module_class	of ourself ||| regions knnanomaly classifier	count=1
class	returns ||| svmclassifier node	count=1
module	sequence ||| opf	count=2
function	[function_1] next value ||| [function_1] [function_2]	count=1
function	cumulative n for ||| totaln	count=1
function	propagate field ||| set field	count=1
function	settings ||| settings	count=1
class	initialized in ||| pooler	count=1
arg	params into ||| params	count=1
arg	of active [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	memory chunk [arg_2] ||| [function_1] records [arg_2]	count=1
function	update a ||| update	count=2
arg	f to ||| f	count=2
arg	1's ||| arr	count=1
class	to the model ||| value model	count=1
function	[function_1] number of ||| [function_1] [function_2]	count=1
function_arg	[function_1] chunk ||| [arg_2] [function_1]	count=1
function	under [function_2] ||| [function_1] [function_2]	count=3
class	the configuration ||| configuration	count=2
function	returns list of ||| mm get	count=2
arg	a prediction ||| prediction record result	count=1
function	'sequenceid' field ||| sequence id field	count=2
class	inference from ||| inference	count=1
class	release ||| connection policy	count=1
module	method that ||| frameworks opf	count=2
module	end noninclusive [module] end ||| [module]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] dir [arg_2]	count=1
class	particle ||| particle	count=2
function_arg	anomaly [arg_2] ||| [function_1] add label [arg_2]	count=1
class	must ||| iteration phase	count=2
class	sequence ||| mgr	count=2
arg	fields given a ||| fields	count=2
arg	defines the ||| encoderdict	count=1
function	and returns ||| get	count=1
arg	data ||| data	count=1
class	xml ||| configuration	count=2
function	segment ||| segment active	count=1
function	sets [function_2] ||| [function_2] [function_1]	count=10
function	the next ||| next	count=1
function	a new [function_2] ||| [function_1] [function_2] globalbestposition	count=1
arg	which is a 1-d ||| output	count=1
function_arg	in cell c ||| in cell c	count=1
function	[function_1] [function_2] ||| [function_1] field [function_2]	count=14
class	value ||| value	count=1
function	return the closest ||| closest other	count=1
class	all columns ||| spatial pooler	count=5
function	the given version ||| version	count=1
class	get ||| temporal memory	count=3
class	this method ||| spatial pooler	count=3
function_arg	[function_1] largest number ||| [function_1] segment [arg_2]	count=1
function	[function_1] cycle period ||| [function_1] [function_2]	count=3
function_arg	print the [arg_2] ||| [function_1] active indices state [arg_2]	count=1
function	'sequenceid' [function_2] ||| [function_1] [function_2]	count=1
function	job ||| job increment	count=1
function	pooler see also htmpredictionmodelcontroldisablesplearningcb ||| splearning cb	count=1
function	histogram of ||| plot histogram	count=1
class	sequence of periodicactivityrequest elements ||| periodic activity mgr	count=2
function_arg	index [arg_2] ||| [arg_2] [function_1]	count=1
function	spec of ||| get spec	count=1
function_arg	clear [arg_2] ||| [function_1] [arg_2]	count=4
function	- exp ||| diff exp	count=1
arg	[arg_1] passed as ||| [arg_2] [arg_1]	count=2
function	same job by the ||| job insert	count=1
class	file ||| record	count=2
function	[function_1] being optimized ||| [function_2] [function_1]	count=10
arg	@param ||| segidx	count=1
function	construct ||| construct classification	count=2
function	the position ||| position	count=2
module	generated permanence value for ||| algorithms	count=1
class	given xml ||| configuration	count=1
class	value for a synapses ||| spatial	count=1
class	the file again) ||| stream	count=1
function	encoder that [function_2] ||| [function_2] [function_1]	count=6
class	the file to ||| stream reader	count=1
module	complete ||| swarming	count=1
function	plot of [function] ||| mm get [function] activity	count=1
function	of swarm ||| swarm	count=1
function	connected [function] ||| slow is segment [function]	count=1
module	and ||| swarming	count=12
module	see nupic encoders base ||| encoders	count=3
arg	coordinate ||| coordinate n	count=1
function	from the ||| from file	count=1
function_arg	a dataset [arg_2] ||| [function_1] [arg_2]	count=1
function	containing 'months' [function] 'seconds' ||| get aggregation months [function]	count=1
function	generate requested [function_2] ||| [function_2] [function_1]	count=4
function	[function_1] error ||| [function_2] [function_1]	count=1
arg	the positive activations ||| active readonly	count=1
function	guard - exit ||| exit	count=1
module	the value of ||| regions	count=4
module	@return countstrace ||| monitor_mixin	count=1
function	[function_1] members ||| [function_2] [function_1]	count=8
module	in [module] ||| [module]	count=1
class	in the given hypersearch ||| search runner	count=1
function	probability of ||| probability	count=1
arg	categoriesout -- the ||| categoriesout	count=1
class	the given model instance ||| model	count=1
class	the given model instance ||| opfdummy model runner	count=1
class	[scalarencoder class ||| delta encoder	count=1
function	[function] for ||| population [function]	count=2
module_class	[module_1] prediction ||| [class_2] [module_1]	count=1
function	with ||| matching rows with	count=1
function	a given cell and ||| in cell	count=1
function	[function_1] table including ||| [function_1] [function_2]	count=1
function	fetch jobids for ||| for	count=2
function_arg	[function_1] fields given ||| [function_1] clientkey [arg_2]	count=1
function	report csv ||| report	count=1
function	return the position ||| position	count=1
function	a metric over ||| get metric from trace	count=1
function	to the custom ||| custom	count=2
function	[function_1] of ||| [function_2] dbname [function_1]	count=1
function	are of ||| get dict meta	count=1
function	factors ||| factors	count=1
module_class	the [class_2] ||| [class_2] [module_1]	count=3
function	as a string if ||| string	count=2
module	to [module] as part ||| [module]	count=1
function	state to 'newstate' if ||| set swarm state	count=1
function	high-order [function_2] ||| [function_2] predicted active [function_1]	count=1
function_arg	parameter [arg_2] ||| [function_1] [arg_2]	count=1
function	less than ||| trim	count=2
class	the record stream ||| record stream	count=1
module_class	for the [class_2] ||| [class_2] [module_1]	count=1
function	[function_1] factors for ||| [function_1] [function_2]	count=3
function	maximum number of segments ||| get max segments	count=1
function	max value ||| arg max	count=1
class	this gets called ||| backtracking tm	count=1
class	base class ||| reader	count=1
function	prediction ||| prediction	count=1
class	returns ||| pooler	count=1
class	moving average ||| moving average	count=2
function	duty cycles for all ||| duty cycles	count=2
function	job by ||| job	count=1
function	opf ||| opf	count=1
function	a checkpoint from ||| checkpoint	count=1
module	<value> ||| frameworks opf	count=1
function	a randomly generated ||| init	count=1
class	predictionlogger object which ||| runner	count=1
function	sum of the elements ||| sum	count=1
function	amount for inactive synapses ||| syn perm inactive dec	count=1
class	prediction [class_2] ||| [class_2] [class_1]	count=2
module_class	the state of ||| algorithms backtracking	count=1
module	us back ||| data	count=1
function	factors for ||| factors	count=1
function	range of [function] ||| get [function]	count=6
function	end of [function_2] ||| [function_2] [function_1]	count=4
function	add [function_2] ||| [function_1] [function_2]	count=4
function_arg	checkpoint [arg_2] ||| [function_1] [arg_2]	count=1
function	value of [function_2] ||| [function_2] [function_1]	count=3
function	but with ||| matching row with	count=1
function	region ||| anomaly classifier region	count=1
function	of job ||| get	count=1
function	random seeds ||| random	count=1
function	of sequences ||| get	count=1
function	for concurrency violation ||| for concurrency violation	count=3
function	[function_1] completed ||| [function_2] [function_1]	count=2
arg	[arg] that ||| [arg]	count=2
function_arg	[function_1] input ||| encoders adaptive scalar encoder [function_1] [arg_2] learn	count=4
module	a sequence ||| frameworks opf	count=2
function	[function_1] connected permanence ||| [function_2] [function_1]	count=1
class	places ||| previous value	count=1
class	randomly generated permanence value ||| pooler	count=1
arg	and 1's ||| arr	count=1
function	store a new ||| store	count=1
function	of both ||| all	count=2
function	active cell appears ||| active	count=1
arg	of records records - ||| key chunkindex fields	count=1
function	[function_1] experiment description ||| [function_1] [function_2]	count=1
function	input [function_2] ||| [function_2] [function_1]	count=2
function	to ||| to checkpoint	count=1
function	[function_1] saved jobid ||| [function_1] [function_2]	count=1
module	of periodicactivityrequest elements ||| frameworks opf	count=2
function	to category ||| to	count=1
function	the maximum number ||| get max	count=2
function	creates ||| create	count=4
function_arg	merge sorted [arg_2] ||| [arg_2] [function_1]	count=1
arg	change the status on ||| completionreason completionmsg useconnectionid	count=1
function	return ||| get model	count=1
class	tm @param pamlength ||| tm	count=1
arg	modelid this function ||| modelid	count=1
class	storage as ||| stream iface	count=1
module_class	the [class_2] ||| [module_1] [class_2]	count=110
function	[function_1] outputs ||| [function_2] [function_1]	count=1
function	[function_1] exp b ||| [function_1] [function_2]	count=2
class	value if ||| value	count=1
function	generate the ||| generate perm	count=1
function	activity duty cycles ||| active duty cycles	count=2
function	a metric over ||| get metric	count=1
function	and writes data ||| write	count=1
arg	cells in state ||| state	count=1
function	[function_1] new ||| [function_2] [function_1]	count=7
module_class	the [class_2] ||| [module_1] two gram [class_2]	count=3
arg	permanence values ||| perm	count=1
function	the activity duty ||| duty	count=1
class	that does not have ||| results db	count=1
function	the predicted [function_2] ||| [function_2] [function_1]	count=3
function	attempt to insert ||| insert or get	count=1
function	[function_1] the connections ||| [function_1] [function_2]	count=2
function	[function_1] predictive ||| [function_1] trace [function_2]	count=1
arg	for pattern index ||| index partitionid	count=1
function	flags for ||| flags	count=1
module_class	[module_1] custom configuration ||| [module_1] [class_2]	count=5
function	existing job ||| resume job no	count=1
function	training sample ||| sample	count=1
function	initial [function_2] ||| [function_2] [function_1]	count=1
class	if the model ||| model runner	count=1
function	'debug' ||| debug	count=1
class	for visualization ||| visualizer	count=1
arg	column [arg] ||| column [arg] columnmatchingsegments	count=2
function	[function_1] record that ||| [function_2] [function_1]	count=4
class	the file is always ||| file record stream	count=1
function	a given field ||| field	count=1
function	job that ||| job no retries	count=1
class	in cpp ||| backtracking tmcpp	count=1
function	object compute [function_2] ||| [function_2] [function_1]	count=1
arg	a good candidate ||| colidx	count=1
function	into coordinates using the ||| coordinates from	count=1
function	offsets and ||| and	count=1
arg	n values ||| n	count=1
function	calculate ||| calculate	count=1
function	metric over an ||| metric	count=1
class	prediction output stream ||| prediction	count=2
module	get the ||| algorithms	count=1
function	stored records [function_2] ||| [function_1] [function_2]	count=2
function	the total on ||| list of on	count=1
class	spregion ||| spregion	count=1
function	[function] attendance ||| [function] club	count=1
function	initialize member ||| init	count=1
function_arg	the label [arg_2] ||| [arg_2] [function_1]	count=8
module	noninclusive [module] end ||| [module]	count=1
function	a logger object for ||| init logger	count=1
function	traces to be overridden ||| traces	count=1
function	that artificial [function_2] ||| [function_1] [function_2]	count=4
class	initialized ||| pooler	count=1
function	[function_1] [function_2] ||| frameworks opf htmprediction model [function_1] [function_2]	count=1
function	of labels for ||| metric labels	count=2
function	[function_1] [function_2] ||| [function_1] anomaly [function_2]	count=6
function	parameter [function_2] ||| [function_2] [function_1]	count=4
arg	active [arg_2] ||| [arg_1] [arg_2]	count=1
class	be greater than 0 ||| iteration phase	count=1
class	greater than ||| iteration phase	count=1
module	and returns the result ||| swarming	count=1
function	index [function_2] ||| [function_2] [function_1]	count=15
function	generate description from a ||| generate	count=1
module	that are being ||| frameworks	count=1
class	model using capnproto and ||| model	count=1
class	connection ||| connection	count=1
function	active cells ||| active	count=1
class	in this phase ||| iteration phase spec	count=1
function	fetch jobids for jobs ||| active jobs for client	count=2
arg	for the given filename ||| cls filename	count=1
class	from ||| search runner	count=1
function	the records ||| records	count=1
function	synapses ||| perm	count=1
arg	if this is an ||| modelid	count=1
function	spec [function_2] ||| [function_2] [function_1]	count=2
function	check for concurrency ||| check for concurrency	count=3
function	description python script from ||| description script from	count=1
function	state as a dict ||| state	count=1
function	the category ||| category	count=2
arg	prediction ||| prediction	count=2
function_arg	dataset of [arg_2] ||| [function_1] [arg_2]	count=1
function	start a new ||| new	count=1
function	worker completion message that ||| get worker completion message	count=1
module_class	of ourself from ||| regions test	count=1
function	count ||| count	count=3
function	returns a randomly generated ||| init perm	count=1
module_class	[module_1] fieldmeta ||| [module_1] [class_2]	count=8
function	list from the a ||| list from file	count=1
module_class	[module_1] category ||| [module_1] [class_2]	count=2
function	[function_1] and add ||| [function_2] [function_1]	count=5
function	offsets and [function_2] ||| [function_1] [function_2]	count=2
function	inhibition local inhibition ||| local	count=1
function	jobs in ||| get active jobs	count=2
function	return [function_1] [function_2] ||| get matured [function_1] [function_2]	count=1
class	a synapses ||| spatial pooler	count=1
class	the referenced value ||| value	count=1
function	pattern machine ||| pattern machine	count=2
function	given records from the ||| delete records from	count=2
module_class	[module_1] encoder getscalars ||| [module_1] [class_2]	count=6
arg	specified [arg_2] ||| [arg_2] [arg_1]	count=8
arg	retrying a ||| timeoutsec logger	count=1
module	temporalmemory ||| algorithms	count=1
function	swarm [function_2] ||| get matured [function_1] [function_2]	count=1
function	particle the ||| particle	count=1
function	pattern ||| get pattern	count=1
function	[function_1] insert a ||| [function_2] [function_1]	count=2
function	the sub-field bucket indices ||| bucket indices	count=1
module	that are ||| frameworks	count=1
module	instance ||| database	count=1
function	maximum number of segments ||| max segments	count=1
class	in this phase ||| phase spec learn and	count=1
module_class	[module_1] figure ||| [module_1] monitor_mixin [class_2]	count=1
arg	and a name ||| name	count=1
function	simulate ||| simulate	count=1
class	experiment description ||| description iface	count=1
function	printouts ||| null distribution	count=1
function	from [function] ||| map current [function]	count=3
class	an array containing the ||| encoder	count=1
function	[function_1] float if ||| [function_1] [function_2]	count=2
module	use in generating a ||| data generators	count=1
arg	string metrics a list ||| metrics	count=1
function	of printouts ||| null distribution	count=1
function	[function_1] resets ||| [function_2] [function_1]	count=1
function	and [function_2] ||| [function_2] [function_1]	count=7
function	called during [function] with an ||| [function] serialize extra	count=2
function	returns the next ||| get next	count=3
function	for concurrency [function_2] ||| [function_1] [function_2]	count=1
function	field ||| field	count=20
class	[class_1] predictionlogger ||| [class_2] [class_1]	count=1
module_class	[module_1] cells in ||| [module_1] [class_2]	count=2
function	in floating point ||| float	count=1
function	column return the ||| get	count=1
class	the predicted state and ||| backtracking tm	count=1
function	coincidence [function] ||| generate coinc [function]	count=3
function	[function_1] a pattern ||| [function_2] [function_1]	count=2
function	metrics to be overridden ||| metrics	count=1
function	update ||| update stats	count=1
function	for a new job ||| job insert	count=1
function	the runtime statistics specific ||| runtime stats	count=2
function	only ||| job	count=1
module	must be greater ||| frameworks opf	count=1
function	[function_1] float if ||| [function_2] [function_1]	count=2
arg	size as inlist and ||| inlist	count=1
function	a unique category number ||| category number	count=1
function	bits ||| bits	count=1
class	number ||| temporal memory	count=1
function	[function_1] compute the ||| [function_2] timestamp [function_1]	count=1
function	recursively ||| r	count=3
function_arg	swarms [arg_2] ||| [function_1] [arg_2]	count=4
function	the index of the ||| cell index	count=1
arg	minlikelihoodthreshold ||| minlikelihoodthreshold maxpredictionsperstep	count=1
arg	dictionary ||| modelconfig loglevel	count=1
function	offsets ||| offsets	count=1
function	htmpredictionmodelcontroldisabletplearningcb ||| tplearning cb	count=2
function	sub-field bucket indices for ||| bucket indices	count=1
function	a given cell ||| cell	count=1
class	generated permanence ||| spatial	count=1
function	[function_1] [function_2] database ||| [function_1] [function_2] dbresults	count=2
function_arg	[function_1] groundtruth ||| [arg_2] [function_1]	count=4
class	delete ||| opfmodel runner	count=1
arg	the [arg] ||| [arg]	count=3
function_arg	a histogram [arg_2] ||| [arg_2] [function_1]	count=1
module	that saves ||| frameworks opf	count=1
arg	gets ||| obj fieldname	count=1
function	[function_1] have an ||| [function_2] [function_1]	count=2
class	initialize ||| temporal memory shim	count=1
function	[function_1] the 'timestamp' ||| [function_2] [function_1]	count=1
function	to create an ||| params	count=1
function	get [function_2] ||| [function_1] [function_2]	count=10
arg	the results string ||| jobid results	count=1
class	in this phase ||| phase spec	count=1
function	[function_1] as ||| [function_1] [function_2]	count=1
class	reset the sensor to ||| sensor	count=1
function	a new hypersearch job ||| new search	count=1
function	a bit ||| bit for coordinate	count=1
class	a moving [class_2] ||| [class_1] [class_2]	count=1
function	a valid [function_2] ||| [function_1] [function_2] params p	count=1
arg	sub-field of the inputdata ||| inputdata	count=1
function	the range from ||| delete range from	count=2
class	sets ||| pluggable encoder sensor	count=1
function	worker completion message ||| worker completion message	count=1
function	a given [function] position ||| get [function]	count=1
function_arg	[function_1] specified modelid ||| [arg_2] [function_1]	count=2
arg	@param [arg] int number ||| [arg] w num	count=1
function	total number of ||| get num	count=3
function	generate a new and ||| new	count=1
class	writer non-temporal prediction ||| non temporal prediction	count=2
class	create ||| opfmodel runner	count=1
function	is ||| init	count=1
function	an existing job that ||| resume job	count=1
arg	- a ||| key chunkindex	count=1
function	display a histogram of ||| plot histogram	count=1
function	bookmark ||| bookmark	count=1
function	attempt to insert a ||| insert or get unique job no retries	count=1
function	list of ||| list	count=3
class	if the model ||| model	count=2
function_arg	constructor [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] labels on ||| [function_2] [function_1]	count=1
function	recursively applies ||| r apply	count=4
module_class	state of ourself ||| regions spregion	count=1
function	index ||| from index	count=1
function	output over [function_2] ||| [function_1] [function_2]	count=3
function_arg	applies f to ||| apply d f	count=2
class	generated permanence value ||| spatial pooler	count=1
function_arg	[function_1] and executes ||| [function_1] [arg_2]	count=4
class	our member ||| backtracking	count=1
function	a synapses ||| init perm	count=1
function	swarm's state to ||| state	count=1
function	range from ||| range from	count=2
module_class	[module_1] [class_2] ||| [module_1] [class_2]	count=362
function	total number of segments ||| get num segments	count=1
function	return the closest ||| closest	count=1
arg	given filename ||| filename	count=2
function	returns [function_2] ||| [function_1] cell [function_2]	count=3
arg	path if ||| path	count=1
function	delete all ||| clear all	count=2
function	logging ||| enable logging	count=1
module	base and ||| swarming hypersearch	count=1
function	[function_1] unique category ||| [function_1] list to [function_2]	count=1
function	the index of the ||| idx	count=1
arg	change the status ||| completionreason completionmsg useconnectionid	count=1
class	state from the ||| backtracking tm	count=1
function	params from a ||| params	count=1
arg	overlap ||| overlaps	count=1
function	the beginning part of ||| dbname prefix	count=1
arg	b are numpy ||| b	count=1
function	[function_1] specs in ||| [function_1] [function_2]	count=6
function	activity duty cycles ||| duty cycles	count=1
function_arg	exp b [arg_2] ||| [function_1] [arg_2] out	count=3
arg	to estimateanomalylikelihoods if windowsize ||| windowsize	count=1
function	bookmark to the ||| bookmark	count=1
function	[function_1] plot of ||| [function_2] [function_1]	count=1
function	loads a description file ||| load description file	count=1
function	the potential [function_2] ||| [function_2] [function_1]	count=1
function	for jobs in ||| active jobs for	count=2
function	existing job ||| job	count=1
function	of hyperplanes used ||| hyperplanes	count=1
function	return the list of ||| get	count=6
function_arg	tables [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] predicted segment ||| [function_1] [function_2]	count=1
module	of the non-numeric ||| regions	count=1
function	of ||| get best	count=1
function	the inhibition [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] request this ||| [function_1] insert [arg_2]	count=1
function	object compute [function_2] ||| [function_1] timestamp record [function_2] recordts	count=1
function	statistics for a ||| stats	count=1
class	given particle ||| particle	count=1
class	update ||| spatial pooler	count=1
class	including 'setup' callbacks this ||| opftask	count=1
function	that is initialized in ||| perm	count=1
class	0 ||| iteration phase	count=2
function	[function_1] [function_2] ||| [function_1] [function_2] start end	count=3
arg	a segment ||| segment	count=1
class	the policy ||| policy	count=3
function	for ||| span for	count=1
class	read ||| stream reader	count=1
function_arg	exp b [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] a bool ||| [function_2] [function_1]	count=2
arg	a new location ||| reader writer start stop	count=1
class	model's ||| opfmodel	count=1
module	is initialized in a ||| algorithms	count=1
function	index of a cell ||| cell	count=1
function	return the field ||| get field	count=2
arg	reaping a [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] timestamp index ||| [function_2] [function_1]	count=4
arg	- a ||| chunkindex fields	count=1
module	for ||| algorithms	count=3
module	the simulated ||| algorithms	count=1
function	default traces to be ||| default traces	count=1
function	and reactivate ||| job reactivate	count=1
module	between [module] tail ||| [module]	count=1
arg	the results ||| modelid results	count=1
function	build the additional ||| get additional	count=2
function	[function_1] bits for ||| [function_2] [function_1]	count=4
arg	type dtype that is ||| dtype	count=1
function	sequences each predicted => ||| predicted	count=1
function_arg	callback [arg_2] ||| [function_1] [arg_2]	count=1
function	at the beginning ||| rewind	count=1
function	jobids for jobs in ||| get active jobs for client	count=2
function	filter ||| filter	count=3
function	[function_1] update ||| [function_2] [function_1]	count=6
function	specify [function_2] ||| [function_2] [function_1]	count=2
function	to json string ||| to json	count=1
function	record that ||| record	count=1
function	[function_1] initial permanence ||| [function_2] [function_1]	count=1
function	a randomly generated permanence ||| init perm	count=1
function	existing job that ||| resume job	count=1
function	compute the probability that ||| probability	count=1
function_arg	potentially change [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	pattern ||| pattern	count=4
function	chunk of records ||| chunk	count=1
function	[function_1] input ||| columns [function_1] [function_2]	count=1
class	to hold a value ||| connections	count=1
class	including 'setup' callbacks this ||| opftask driver	count=1
arg	the classifier to associate ||| partitionid issparse	count=1
class	at ||| iface	count=1
function	sets [function_2] ||| [function_1] [function_2]	count=10
function	[function_1] is active ||| [function_2] [function_1]	count=8
module	all numbers that match ||| data generators	count=1
function	state ||| state	count=9
module	sequence of ||| opf	count=2
function_arg	in [function_1] [arg_2] is ||| [function_1] [arg_2]	count=1
function	log 'msg % ||| log	count=1
function	per [function_2] ||| [function_2] [function_1]	count=4
function	representation ||| init encoder	count=1
function	the phase must ||| phase	count=1
arg	[arg_1] a synapse ||| [arg_2] [arg_1]	count=4
function	returns ||| mm get	count=1
arg	and second order transition ||| numcategories	count=3
arg	this method takes ||| labellist	count=1
function	id of the ||| id	count=1
function	upcoming partition ||| upcoming partition	count=2
function	of the cell activity ||| cell trace	count=1
function	returns a randomly ||| init perm	count=1
class	the file to ||| record	count=1
function	metric over an ||| metric from trace	count=1
function_arg	for [arg_2] ||| [function_1] filename [arg_2]	count=3
function_arg	get [function_1] [arg_2] to ||| [function_1] [arg_2]	count=1
arg	maps the coordinate to ||| coordinate n	count=1
module	put us back ||| data	count=1
arg	minpermanence and ||| minpermanence minnumsyns	count=1
function	into ||| into	count=1
function_arg	[function_1] permanence ||| [function_1] [arg_2]	count=1
function	jobs table [function_2] ||| [function_2] [function_1]	count=1
module	the ||| regions	count=4
class	to ||| reader	count=1
module_class	[module_1] model in ||| [module_1] previous value [class_2]	count=1
function	py) ||| top down compute	count=2
function	histogram ||| histogram	count=2
module	value of the ||| regions	count=2
function	base [function] class to ||| read std [function]	count=2
class	jobs table ||| client jobs dao	count=2
function	an interface to ||| prediction logger	count=2
function	[function] py ||| run model given [function] and	count=3
module	including 'setup' callbacks this ||| frameworks	count=1
function	cycles [function_2] ||| [function_2] [function_1]	count=1
function	metric for number of ||| mm get	count=1
function	[function_1] traces ||| [function_2] [function_1]	count=2
class	the file ||| stream reader	count=1
function_arg	passes [function_1] [arg_2] note upon completion ||| frameworks opf [function_1] cb [arg_2]	count=1
class	if [class] had ||| [class]	count=1
function	message that ||| message	count=1
module	:param ||| frameworks viz	count=2
function	delete all [function_2] ||| [function_2] [function_1]	count=2
function	predicted this ||| activate predicted	count=1
function	python logging ||| enable logging	count=1
class	model instance ||| opfdummy model runner	count=1
function	category list this ||| category list	count=1
function	the label for the ||| label	count=1
function	function for querying the ||| get fields for active	count=1
function	the a list of ||| list	count=1
function	@return trace [function_1] [function_2] ||| temporal memory monitor mixin [function_1] [function_2]	count=1
function	of a given ||| get	count=1
function	returns args dictionary from ||| args	count=1
function	jobids for ||| for	count=2
arg	a range ||| column start	count=1
arg	permanence values for ||| columnindex permanence	count=1
arg	the result of a ||| result	count=1
function	the same ||| unique	count=1
function	given version ||| version	count=1
module_class	[module_1] [class_2] ||| [module_1] configuration [class_2]	count=1
class	callbacks this ||| opftask	count=1
function	sets the path of ||| set path	count=2
function	[function_1] of active ||| [function_1] [function_2]	count=3
arg	range ||| column start	count=1
function	stream ||| get stream	count=1
class	file again) ||| record stream iface	count=1
arg	permanence for [arg_2] ||| [arg_2] [arg_1]	count=2
function	parse a ||| parse	count=1
function	[function_1] duty ||| [function_2] [function_1]	count=11
function	of simple ||| simple	count=1
function	compute a metric over ||| get metric	count=1
function	[function_1] cells ||| [function_2] [function_1]	count=21
function	for a list ||| list	count=1
class	serializes model ||| model	count=1
function	[function_1] applies ||| [function_2] [function_1]	count=2
function	local ||| columns local	count=2
function	distribution of anomaly scores ||| anomaly	count=1
arg	function being decorated ||| initialretrydelaysec maxretrydelaysec retryexceptions	count=1
arg	pattern index ||| index	count=1
function	set of possible report ||| report	count=1
function	[function_1] velocity ||| [function_2] [function_1]	count=1
function	latest search from ||| pickup search	count=1
arg	job request ||| cmdline jobhash clientinfo	count=1
function	the additional specs ||| additional specs	count=2
arg	given col cellidx segidx ||| col cellidx seg	count=1
function	[function_1] under ||| [function_1] [function_2]	count=2
function_arg	[function_1] value ||| [function_1] parameter name index [arg_2]	count=1
class	of the file again) ||| record stream	count=1
arg	network ||| network	count=2
function	[function_1] of synapses ||| [function_2] [function_1]	count=3
class	:returns int ||| record stream	count=1
class	this phase ||| iteration phase spec learn	count=1
function	cancel field ||| cancel	count=1
function	print ||| print	count=9
function	pick a value according ||| pick	count=1
class	must be ||| phase	count=1
arg	thinking about the ||| w minval maxval n	count=1
function_arg	update the [arg_2] ||| [arg_2] [function_1]	count=7
module	randomly generated permanence value ||| algorithms	count=1
class	this testregion ||| test region	count=1
function	of ||| null	count=1
function	1 field in a ||| set field	count=1
function	set the current ||| set	count=1
function	the indices ||| indices	count=1
function	enable ||| enable	count=1
function	qualifies a synapse ||| connected	count=1
class	put ||| stream	count=1
class	method ||| memory	count=1
class	model ||| client jobs dao	count=1
arg	that shows each ||| vectors buvectors title	count=1
function	[function_1] estimator ||| [function_2] [function_1]	count=3
function	number of segments per ||| segments per	count=1
function	initializes internal filter variables ||| init filter	count=1
function	mode the job is ||| job	count=1
arg	a range of ||| column start	count=1
function	a list of tuples ||| file field list	count=1
function	json [function_2] ||| [function_2] [function_1]	count=12
arg	job request ||| cmdline	count=1
function_arg	instance consisting ||| instance groundtruth	count=1
function	period ||| period	count=3
function	network for the ||| get network	count=1
arg	is synapsed ||| presynapticcell permanence ordinal	count=1
class	the classifier ||| knnanomaly classifier region	count=1
function_arg	write [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] generations ||| get matured [function_1] [function_2]	count=4
function	of the given category ||| process category	count=1
function	from ||| list from file	count=1
function	[function_1] string ||| [function_1] [function_2]	count=1
function	on every compute it ||| update segment	count=1
class	a version ||| svmclassifier node	count=1
function	activationthreshold connected [function] due ||| slow is segment [function]	count=1
function	create an anomaly ||| anomaly params	count=2
class	return ||| identity policy base	count=1
module_class	that the [class_2] ||| [module_1] [class_2]	count=2
arg	active columns not predicted ||| activecolumns predictedcolumns inputvalue timestamp	count=1
module	parameters for the ||| frameworks opf	count=1
function	region to ||| region	count=1
function	connections in the ||| connections	count=1
function	in a connected state ||| perm connected	count=1
function	[function_1] generations ||| [function_1] [function_2]	count=1
function_arg	[function_1] the cell ||| [function_1] [arg_2]	count=3
function	p [function_1] [function_2] params as might be ||| [function_1] [function_2]	count=1
function_arg	from start ||| from knn start	count=2
function	jobids for jobs ||| jobs for client	count=2
arg	assuming the [arg_2] ||| [arg_2] [arg_1]	count=2
function	particle ||| particle	count=1
function	over time time ||| outputs over time	count=2
function_arg	[function_1] [arg_2] ||| [function_1] add label [arg_2]	count=3
function	permanence value for ||| init	count=1
function	sequence of job records ||| get	count=1
arg	maxcols ||| maxcols	count=1
function	but with ||| with	count=1
function_arg	[function_1] inputpattern ||| [arg_2] [function_1]	count=3
function_arg	[function_1] i and ||| [arg_2] [function_1]	count=1
function	encodings for [function_2] ||| [function_2] [function_1]	count=6
module	be ||| frameworks	count=1
function	category inference ||| infer	count=1
module_class	the [class_2] ||| [module_1] recordsensorfilters [class_2]	count=1
function	during [function] ||| [function] serialize extra	count=2
function_arg	spec parameter [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] number of ||| [arg_1] [arg_2]	count=2
function	and persist it to ||| property	count=2
function	generation in ||| full generation	count=1
class	the file to ||| record stream iface	count=1
class	the encoder this is ||| encoder	count=1
function	[function_1] seconds ||| [function_2] [function_1]	count=1
function	all models in a ||| models get fields	count=1
arg	optionally the ||| particlestate newbest	count=1
class	sdr classifier ||| sdrclassifier	count=1
arg	[arg_1] passed ||| [arg_2] [arg_1]	count=6
function	segments that have ||| segments	count=1
function	for a given encoder ||| encoder str	count=1
class	discrete probability distribution and ||| discrete	count=1
arg	and type dtype ||| dtype	count=1
function	routine will update ||| update stats	count=1
function	the synapses [function_2] ||| [function_2] [function_1]	count=2
function	as [function_2] ||| [function_1] [function_2]	count=4
class	synapses that is ||| spatial	count=1
arg	at [arg] flags are ||| [arg]	count=1
function	compute the column ||| column	count=1
module	see method ||| encoders	count=1
function_arg	[function_1] [arg_2] member name is one ||| [function_1] [arg_2]	count=4
class	writer non-temporal ||| non temporal	count=1
arg	from proto object ||| cls proto	count=1
arg	of active [arg_2] ||| [arg_2] [arg_1]	count=1
function	returns the segments ||| segments	count=1
function	category number [function] ||| category to label [function]	count=3
function	dict of ||| dict	count=1
module	database ||| database	count=5
class	predicted field ||| field	count=1
function	segment [function_2] ||| [function_2] [function_1]	count=17
class	a synapses that is ||| pooler	count=1
function	smallest permanence ||| min permanence	count=2
function	all the models for ||| models get fields for	count=1
function	permutations report csv ||| generate report	count=1
arg	spatialoutput [arg_2] ||| [arg_2] [arg_1]	count=1
class	method to compute ||| memory	count=1
function	[function_1] message ||| [function_1] [function_2]	count=4
function	a dict with the ||| dict	count=1
function	spread [function_2] ||| [function_1] [function_2]	count=1
function	for adding a new ||| for new	count=1
module	iterations ||| frameworks	count=1
function	sets the boost ||| set boost	count=3
function	have been checkpointed ||| for checkpointed	count=1
function	propagate field statistics ||| field statistics	count=1
function	on ||| list of on	count=1
function	to a bit ||| bit for coordinate	count=1
class	of the encoder this ||| encoder	count=1
module_class	[module_1] prediction ||| [module_1] temporal [class_2]	count=1
arg	tuple categorycount listofcategories ||| f format categorycolumn categorycolumns	count=1
function	unique representation returns a ||| rep	count=1
function	are reasonable ||| reasonable	count=1
arg	c column ||| c	count=2
class	period [class_1] [class_2] ||| [class_1] [class_2]	count=4
class	active state ||| backtracking tm	count=1
module	on a permutevar and ||| swarming	count=1
function	index using ||| index from	count=1
function	init ||| init	count=1
function	make ||| make	count=1
arg	non-equality operator for temporalmemory ||| other	count=1
function	for ||| eq	count=1
function	on [function_2] ||| [function_1] [function_2]	count=1
arg	segment object segment ||| segment	count=1
function	the learning ||| learn	count=1
class	writer ||| basic prediction writer	count=2
function	propagate field [function_2] ||| [function_1] [function_2]	count=1
class	file again) ||| record stream	count=1
module	for the ||| frameworks opf	count=1
function	return a datetime object ||| get end	count=1
function	given category file returning ||| process category file	count=1
arg	less than minlikelihoodthreshold ||| minlikelihoodthreshold	count=1
function	segment ||| segment	count=13
function	row ||| row	count=2
function	of a given field ||| field	count=1
function	[function_1] the range ||| [function_1] [function_2]	count=2
arg	input pattern returns ||| inputpattern	count=1
function	given records from the ||| records from	count=2
class	the file to ||| reader	count=1
function	bool ||| bool	count=1
class	current tm state ||| backtracking tm	count=2
arg	fieldmetainfo list ||| cls fields	count=1
function	number of ||| get adaptive	count=1
function_arg	index of [arg_2] ||| [function_1] [arg_2]	count=1
class	return ||| sdrcategory encoder	count=1
function	that ||| ephemeral	count=1
function	given category ||| category	count=1
module	a range of values ||| generators	count=1
function	segment's synapse ||| synapse	count=1
function	the predictive cells ||| predictive cells	count=2
module_class	the synapse ||| algorithms synapse	count=1
function	[function_1] a dataset ||| [function_1] [function_2]	count=1
arg	cells [arg_2] ||| [arg_2] [arg_1]	count=4
function	[function] no aggregation ||| [function] null	count=2
function_arg	[function_1] classifier within ||| [function_1] parameter [arg_2]	count=6
function	of active [function_2] ||| [function_1] [function_2]	count=2
class	computing a moving average ||| moving average	count=1
function	[function_1] statistics for ||| [function_1] [function_2]	count=1
arg	maxcols number ||| maxcols	count=1
function	the --descriptionfromfile option ||| description from file option	count=1
module	in a ||| algorithms	count=1
function	the metric being optimized ||| optimized metric	count=1
function	- exp ||| log diff exp	count=1
class	storage ||| record stream iface	count=4
class	classifier ||| classifier	count=4
arg	spatialoutput and [arg_2] ||| [arg_2] [arg_1]	count=1
class	[class_1] prediction log ||| [class_2] [class_1]	count=3
arg	label a distinguishing string ||| label	count=1
arg	the input pattern returns ||| inputpattern	count=1
function	jobs in the ||| active jobs	count=2
class	state from the last ||| backtracking tm	count=1
function	from a [function_2] ||| [function_1] [function_2]	count=5
function	[function_1] under the ||| [function_1] [function_2]	count=2
function	add one [function_2] ||| [function_2] [function_1]	count=1
arg	request but ||| cmdline jobhash clientinfo	count=1
function_arg	sequences [arg_2] ||| [arg_2] [function_1]	count=1
function	id and it's errscore ||| in	count=1
function	returns a dictionary where ||| get metrics	count=1
function_arg	json string [arg_2] ||| [arg_2] [function_1]	count=4
module_class	[module_1] should ||| [module_1] [class_2]	count=1
class	worker or runs ||| runner	count=1
function	also htmpredictionmodelcontroldisablesplearningcb ||| enable splearning cb	count=1
arg	a 1-d ||| output	count=1
function	completion [function_2] ||| [function_2] [function_1]	count=4
class	is initialized ||| pooler	count=1
function_arg	records starting [arg_2] ||| record stream iface get [function_1] [arg_2] range	count=3
function	the segments [function_2] ||| [function_2] [function_1]	count=3
function	over all [function] ||| average on [function]	count=1
function	predicted ||| activate predicted	count=1
function	the permanence decrement ||| permanence decrement	count=1
class	anomaly score as the ||| anomaly	count=1
function	existing job that is ||| job	count=1
function	htmpredictionmodelcontroldisablesplearningcb ||| enable splearning cb	count=2
module	that are being ||| frameworks opf	count=1
arg	requestedactivities ||| requestedactivities	count=2
function	simple ||| simple	count=1
arg	verbosity integer controlling extent ||| verbosity	count=1
function	"dryrun" action ||| start search	count=1
function	status_running mode the job ||| start job	count=1
function	the min threshold ||| min threshold	count=2
class	temporalmemory ||| temporal memory	count=2
function	job that is presently ||| job	count=1
module	printouts for ||| algorithms	count=1
function	learning ||| learning	count=7
class	hypersearch job and ||| hyper search	count=1
function	_getonematchingrownoretries(), ||| one matching row	count=1
arg	aggregated dataset the filename ||| aggregationinfo inputfile	count=1
class	initialized in a ||| spatial	count=1
function_arg	distances between [arg_2] ||| [function_1] [arg_2]	count=2
function	a dated potential segment ||| to segment	count=1
function	dict with the keys ||| dict	count=1
function	[function_1] [function_2] ||| [function_2] dbname for [function_1]	count=6
function	of the first ||| first non full	count=1
class	configuration path (specified via ||| configuration	count=1
function	[function_1] [function_2] to ||| [function_2] check [function_1]	count=1
function	the boost [function_2] ||| [function_1] [function_2]	count=3
function	return a ||| get	count=10
function	return a clipped version ||| clipped	count=1
function	recursively updates the ||| r	count=1
arg	results string ||| jobid results	count=1
module_class	class to read [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	list of both the ||| all	count=2
function	description schema this implementation ||| description schema	count=1
class	state from ||| backtracking	count=1
class	reset ||| backtracking tm	count=1
function	beginning of the file ||| rewind	count=1
function_arg	[function_1] [arg_2] cycle is a moving ||| [function_1] [arg_2]	count=12
function_arg	on cell [arg_2] ||| [function_1] [arg_2]	count=2
class	the record stream as ||| record stream iface	count=1
function	list this is a ||| list	count=1
function	returns the min ||| get min	count=2
function	[function_1] of segments ||| [function_1] [function_2]	count=3
function_arg	passes the [function_1] [arg_2] completion ||| [function_1] [arg_2]	count=1
module	returns the ||| algorithms	count=4
class	model ||| model	count=25
arg	potential mapping ||| potential	count=1
function	matrix this [function_2] ||| [function_2] [function_1]	count=4
function	loads a json value ||| load json value	count=2
function	the svd is a ||| svd	count=1
arg	groundtruth from ||| groundtruth	count=1
function	of active ||| active	count=1
function	index of the first ||| first	count=1
function	the inference ||| inference	count=3
function	[function_1] print ||| [function_2] [function_1]	count=1
class	returns ||| aggregate metric	count=1
function	find this segment's synapse ||| synapse	count=1
class	the file ||| record	count=2
module	a sequence of ||| frameworks	count=2
function	[function_1] json value ||| [function_1] [function_2]	count=2
arg	with at least minthreshold ||| minthreshold	count=1
function	of segments [function_2] ||| [function_1] in [function_2]	count=1
function	[function_1] search from ||| [function_1] [function_2]	count=3
function	neighborhood ||| neighborhood	count=3
module	dictionary from the ||| algorithms	count=1
function	[function_1] the smallest ||| [function_2] [function_1]	count=3
function	list of both ||| all	count=2
function	[function_1] swarm ||| [function_2] model [function_1]	count=1
class	synapses that ||| spatial	count=1
function	under ||| under	count=1
function_arg	score [arg_2] ||| [arg_2] [function_1]	count=1
module	back at the ||| data	count=1
class	convenience [class_2] ||| [class_2] [class_1]	count=8
function_arg	[function_1] [arg_2] is ||| [function_1] [arg_2]	count=1
function	[function] to ||| [function]	count=4
function	violation [function_2] ||| [function_2] check for concurrency [function_1]	count=3
function	the distances from ||| distances	count=1
class	model ||| value model	count=1
function	a serialized ||| setstate	count=2
function	print a pattern ||| print pattern	count=3
function	of swarm [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] amount for ||| [function_2] [function_1]	count=3
class	of periodicactivityrequest ||| periodic	count=2
arg	to the network will ||| network	count=1
function	amount for [function_2] ||| [function_2] [function_1]	count=6
function	indices of the active ||| active	count=1
arg	measure the recognition accuracy ||| c gamma progressstart progressend	count=1
function	a json value ||| json value	count=4
function	id is 0xff ffff ||| id	count=1
class	stored ||| htmprediction model classifier helper	count=1
function	a string if property ||| string	count=2
function	over ||| outputs over	count=1
function	the metric ||| metric	count=1
class	the stream ||| stream iface	count=2
class	the given hypersearch ||| search runner	count=1
function	[function] field ||| [function] decoder output field	count=1
function	centre offsets and ||| centre and	count=3
class	remain in this phase ||| iteration phase spec learn and	count=1
arg	to inputpattern and ||| inputpattern topkcategories	count=1
arg	a and b are ||| b	count=1
function	random seeds helpful to ||| random	count=1
function	'category' ||| category	count=1
function	category list this is ||| get category list	count=1
function	of printouts for ||| null	count=1
function	[function_1] metrics ||| [function_1] [function_2]	count=2
function_arg	[function_1] and ||| [arg_2] [function_1]	count=8
function	creates the model's predictionlogger ||| create	count=1
module	see method description in ||| encoders	count=1
function	raw [function_2] ||| [function_1] [function_2]	count=1
class	a sequence ||| periodic activity mgr	count=2
function	performs local inhibition local ||| local	count=1
arg	retrieve the engine-level ||| modelid	count=1
function	[function_1] current active ||| [function_2] [function_1]	count=1
function	description in base py ||| bucket info	count=4
arg	passed as a callback ||| dbconn	count=1
function	check ||| check	count=1
function	directory ||| dir	count=1
function	sets the ||| set	count=20
class	inference is ||| inference	count=1
arg	a message to the ||| message	count=1
function	[function_1] radius ||| [function_2] [function_1]	count=3
function	cumulative n ||| totaln	count=1
function	[function_1] dataset of ||| [function_1] [function_2]	count=1
function	during [function] with ||| [function] serialize extra	count=2
function	printouts for debugging ||| null	count=1
class	in a ||| pooler	count=1
function	the value of ||| get input value	count=1
function_arg	returns the [arg_2] ||| [function_1] shifted ground truth [arg_2]	count=3
class	runs it ||| hyper search runner	count=1
function	updates the model's ||| update	count=1
function	the segment with ||| matching segment	count=1
function	option ||| handle description from file option	count=1
function	true if [function] elements of ||| [function]	count=1
function_arg	[function_1] - a ||| [function_1] records [arg_2]	count=2
module	including ||| frameworks	count=1
function	compute a log scale ||| compute log	count=1
class	tell the writer ||| basic prediction writer	count=1
class	[class_1] distribution ||| [class_2] [class_1]	count=2
arg	if usecache is ||| usecache	count=1
function	given as percent of ||| pct overlap	count=1
class	since the knn classifier ||| knnanomaly classifier region	count=1
module	of the ||| regions	count=16
module_class	[module_1] inference type ||| [module_1] [class_2]	count=4
function_arg	histogram of [arg_2] ||| [arg_2] [function_1]	count=2
arg	function description ||| inpt output	count=1
function	predicted segment decrement ||| predicted segment decrement	count=1
class	[scalarencoder class ||| delta	count=1
function_arg	[function_1] network will ||| [function_1] [arg_2]	count=1
function_arg	numpy [arg_2] ||| [arg_2] [function_1]	count=3
module	makes ||| swarming hypersearch	count=1
arg	optionally the best ||| particlestate newbest	count=1
function	matrix this is ||| matrix	count=2
class	return ||| opftask driver	count=1
function	prediction ||| flush prediction	count=1
arg	i [arg_2] ||| [arg_1] [arg_2]	count=1
function	[function_1] types corresponding ||| [function_1] [function_2]	count=1
function_arg	cell [arg_2] ||| [arg_2] [function_1]	count=5
function	custom ||| custom config	count=4
function	category file returning a ||| process category file	count=1
arg	metrics a list ||| metrics label	count=1
function_arg	histogram of [arg_2] ||| [function_1] [arg_2]	count=2
function	to the ||| get	count=1
function	value from a file ||| value from file	count=2
class	of ||| stream	count=1
function	[function_1] [function_2] period ||| [function_1] [function_2]	count=2
function	returns a segment ||| get	count=1
module	[module_1] the ||| [module_2] [module_1]	count=1
function	default ||| default	count=4
function_arg	[function_1] [arg_2] ||| [function_1] clientkey [arg_2]	count=3
function	schema this implementation ||| schema	count=1
class	to disk ||| record stream	count=1
arg	an encoded output ||| encoded parentfieldname	count=1
module	iterations ||| opf	count=1
arg	cells ||| cells	count=1
function	have been checkpointed this ||| for checkpointed	count=1
function	[function_1] list ||| [function_1] [function_2]	count=5
arg	edits the xml ||| cls properties	count=2
function	returns ||| get spregion	count=1
arg	coordinates ||| coordinates	count=1
function	neighborhood [function_2] ||| [function_2] input [function_1]	count=1
class	'setup' callbacks this ||| opftask driver	count=1
module_class	[module_1] ourself ||| [module_1] [class_2]	count=32
function	sequence of model records ||| get	count=1
function	of sequences each ||| mm get	count=1
function	a parameter of the ||| parameter	count=2
function	category file returning ||| process category file	count=2
module	be greater ||| frameworks opf	count=1
function	all known feature groups ||| all groups	count=1
function_arg	[function_1] permanence ||| [function_1] synapse [arg_2]	count=1
function	current predicted ||| predicted	count=1
function_arg	returns log(exp [function_1] [arg_2] arrays values in a ||| [function_1] [arg_2]	count=2
function	statistics for ||| stats	count=1
class	construct this encoder this ||| encoder	count=1
function	stored records [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] a file ||| [function_1] [function_2]	count=10
function_arg	[function_1] [arg_2] ||| [function_1] c activestate [arg_2]	count=2
module	[module] distinct category ||| [module]	count=3
module	the [module_2] ||| [module_1] [module_2]	count=1
function	attempt to insert a ||| insert or get	count=1
arg	the specified fields ||| fields ignorekilled	count=2
function	[function_1] [function_2] containing configuration ||| [function_1] [function_2] expjsonfilepath options outputlabel permworkdir	count=4
module	in ||| data	count=1
function	set ||| set encoder	count=1
function	[function_1] a new ||| [function_2] [function_1]	count=1
function	generate stream ||| get stream	count=1
function	field in ||| field	count=1
function	the timestamp ||| timestamp	count=1
function	indices of the ||| cell indices	count=1
function	end ||| end	count=4
function	field statistics ||| set field statistics	count=1
function	of non-zero bits if ||| index to non zero bits	count=1
function	initial [function_2] ||| [function_1] [function_2]	count=1
function	of w for ||| get w	count=2
function	during [function] with an ||| [function] serialize extra	count=2
function	[function_1] chunk of ||| [function_2] [function_1]	count=1
function	of the active cells ||| active	count=1
module	use the ||| regions	count=1
class	number ||| pattern machine	count=1
function	connection ||| connection	count=1
class	configuration [class_2] ||| [class_1] [class_2]	count=8
arg	translate an ||| dimensions	count=1
function	max new synapse ||| max new synapse	count=6
function	names associated with ||| names	count=1
function	fields to ||| fields	count=1
function	connected [function] due ||| slow is segment [function]	count=1
function	the path of the ||| path	count=2
arg	from the ||| rgen	count=1
function	generate ||| generate model2	count=1
function	the inference state the ||| infer	count=1
function_arg	[function_1] groundtruth from ||| [function_1] shifted ground truth [arg_2]	count=2
function_arg	interpret [arg_2] ||| [arg_2] [function_1]	count=4
class	put ||| stream iface	count=1
function	[function_1] synapse count ||| [function_2] [function_1]	count=8
arg	maps the coordinate ||| coordinate n	count=1
arg	- ||| chunkindex fields	count=1
module_class	[module_1] model's predictionlogger ||| [module_1] [class_2]	count=2
function	pooler see also htmpredictionmodelcontroldisablesplearningcb ||| enable splearning cb	count=1
arg	given format ||| array format	count=1
function_arg	the top [arg_2] ||| [function_1] wcoordinates cls [arg_2]	count=1
arg	params into the ||| jobid params	count=1
function	[function_1] inhibition ||| [function_1] [function_2]	count=2
module	synapses that is initialized ||| algorithms	count=1
module	value ||| algorithms	count=1
function	inference state the ||| infer	count=1
function	htmpredictionmodelcontroldisablesplearningcb ||| splearning cb	count=2
function	synapse with the ||| synapse	count=1
function	a new ||| states	count=1
function	cache associated ||| cache	count=1
function	types corresponding to ||| types	count=1
function	do one ||| do	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2] read std	count=4
module_class	base and [class_2] ||| [module_1] [class_2]	count=2
class	generated ||| spatial	count=1
function	a synapses that ||| perm	count=1
function	base py ||| get bucket	count=5
function	record a [function_2] ||| [function_2] timestamp [function_1]	count=2
arg	c i ||| c i	count=4
function_arg	[function_1] [arg_2] to ||| [function_1] [arg_2]	count=2
function	clear all ||| reset	count=1
function_arg	saving [arg_2] ||| [function_1] [arg_2]	count=1
function	--descriptionfromfile option ||| handle description from file option	count=1
class	_hypersearchjob ||| hyper	count=1
class	tm @param pamlength ||| backtracking tm	count=1
class	instantiate a ||| metrics iface	count=1
function_arg	[function_1] and b ||| [arg_2] [function_1]	count=5
function	- exp b a ||| log diff exp	count=1
function_arg	optional [arg_2] ||| [function_1] clientinfo [arg_2]	count=3
class	discrete probability [class_2] ||| [class_1] [class_2]	count=4
function	[function_1] a dataset ||| [function_2] [function_1]	count=1
function	first generation in the ||| first non full generation	count=1
function	job ||| job no retries	count=2
arg	best position ||| particleid	count=1
function	compute the learning ||| learn	count=1
module	is ||| swarming exp_generator	count=1
function	[function_1] of a ||| [function_2] input [function_1]	count=2
class	model [class_2] ||| [class_1] [class_2]	count=1
function	[function_1] the fewest ||| [function_2] [function_1]	count=4
class	us ||| record	count=1
function	on [function_2] ||| [function_2] [function_1]	count=1
function	name for the current ||| name	count=1
class	instance ||| learn and infer	count=1
arg	labelname to ||| labelname	count=2
function	[function_1] and add ||| [function_2] check [function_1]	count=1
module	run one iteration of ||| regions	count=4
arg	the queue ||| partitionids	count=1
class	set ||| stream iface	count=1
function_arg	the top [arg_2] ||| [function_1] wcoordinates [arg_2]	count=1
function	of labels ||| labels	count=2
class	a synapses ||| pooler	count=1
function	value from one ||| custom compute	count=1
function	value from [function_2] ||| [function_1] [function_2]	count=4
function	any additional ephemeral members ||| ephemeral members	count=2
function	[function_1] python script ||| experiment [function_1] [function_2]	count=1
function	determines if it's time ||| duty cycles	count=1
class	create ||| svmclassifier	count=1
function	like _getonematchingrownoretries(), ||| one	count=1
function	maximum number ||| get max	count=2
module	creates and returns a ||| swarming	count=1
function	function ||| function	count=1
function	delete all models from ||| clear all	count=1
function	index [function] ||| [function] next record	count=1
class	[class_1] type ||| [class_1] [class_2]	count=2
function	the models table ||| jobs	count=1
class	of the ||| record	count=1
function	[function_1] active cell ||| [function_1] [function_2]	count=7
function	[function] as possible ||| [function]	count=3
function	[function_1] unique category ||| [function_2] [function_1]	count=1
class	:returns ||| file record stream	count=4
class	of the prediction ||| basic prediction	count=1
class	writer non-temporal prediction log ||| temporal prediction log	count=1
function	update the cancel field ||| cancel	count=1
function	"backtracks" our [function] ||| [function]	count=3
function	py ||| get bucket values	count=1
function	given records from ||| records from	count=2
function_arg	[function_1] and b ||| [function_1] [arg_2] out	count=2
function	[function_1] max ||| [function_2] [function_1]	count=2
function	on time ||| of on	count=1
arg	in the output ||| output	count=1
class	back at ||| iface	count=1
arg	estimateanomalylikelihoods if windowsize ||| windowsize learningperiod	count=1
function	form ||| log probability	count=1
function	existing job ||| resume job	count=1
class	or runs it inline ||| hyper search runner	count=1
function	label ||| label	count=4
function	1 field ||| field	count=2
function	segment's synapse [function_2] ||| [function_2] [function_1]	count=3
function	of this model ||| comput model	count=1
class	retrieving ||| job	count=1
function	[function_1] function ||| [function_1] [function_2]	count=1
function	of upcoming partition ids ||| upcoming partition ids	count=1
arg	to associate ||| partitionid	count=1
class	worker or runs it ||| search runner	count=1
function	and spread offsets ||| and spread offsets	count=3
function	sets the max ||| set max	count=2
function	jobs ||| get active jobs	count=2
function	beginning part of the ||| prefix	count=1
function	value [function_2] ||| [function_2] input [function_1]	count=4
function	returns a segment object ||| get	count=1
function	given encoder ||| perm encoder str	count=1
function	a segment ||| segment	count=2
function	sets the current ||| set	count=1
arg	all patterns to inputpattern ||| inputpattern	count=1
class	:returns ||| record stream	count=1
class	'setup' callbacks ||| driver	count=1
function_arg	[function_1] w coordinates ||| [function_1] wcoordinates cls [arg_2]	count=2
function_arg	[function_1] encoder ||| [function_1] [arg_2]	count=1
module_class	[module_1] prediction log ||| frameworks [module_1] [class_2]	count=1
function	[function_1] boost ||| [function_2] [function_1]	count=1
module	sequence of nupic data ||| data	count=1
function_arg	statistics for [arg_2] ||| [arg_2] [function_1]	count=1
function	velocity to be ||| velocity	count=1
arg	the permanence ||| columnindex permanence	count=1
function	network [function] with an ||| [function] serialize extra	count=1
function	ids this can be ||| ids	count=1
arg	b are numpy arrays ||| b	count=1
function	changes if ||| to db	count=1
function	saturation for a ||| saturation	count=1
function	return a datetime object ||| get	count=1
function	for jobs ||| get active jobs for	count=2
function	[function_1] the end ||| [function_1] [function_2]	count=1
function	the fewest number of ||| least allocated	count=1
class	state ||| state	count=2
function_arg	[function_1] metrics ||| [function_1] [arg_2]	count=5
function_arg	[function_1] [arg_2] ||| [function_1] files [arg_2]	count=2
class	records ||| file record stream	count=1
module	given ||| swarming	count=2
arg	store [arg] ||| [arg]	count=1
function	will be called only [function_1] [function_2] 2 ||| [function_2] [function_1] count name	count=2
function	from the input ||| input	count=1
function	[function_1] the anomaly ||| [function_2] get [function_1]	count=1
arg	records read from ||| records	count=1
function	convert a list of ||| list	count=1
class	iterations must be ||| phase	count=1
class	jobs table for ||| jobs dao	count=1
function_arg	[function_1] w coordinates ||| [arg_2] [function_1]	count=2
function	[function_1] all ||| [function_2] data [function_1]	count=1
class	given the predicted state ||| backtracking	count=1
arg	[arg] array ||| inputdata [arg]	count=3
function	local inhibition ||| local	count=2
function	given category [function_2] ||| [function_1] [function_2]	count=3
function_arg	[function_1] the 'numactivecolumnsperinharea' ||| [arg_2] [function_1]	count=4
function	overrides the python logging ||| logging	count=1
function	the given category file ||| process category file	count=1
function	main loop of ||| run task main loop	count=1
function	p [function_1] [function_2] params as might be ||| [function_1] [function_2] params p	count=1
arg	mangled ||| privatemembername skipcheck	count=1
module_class	of ourself ||| regions svmclassifier node	count=1
function	[function_1] value ||| [function_2] [function_1]	count=6
module	greater than ||| frameworks opf	count=1
module_class	the iteration returns ||| frameworks opf iteration	count=1
function_arg	[function_1] start ||| [arg_2] [function_1]	count=15
function_arg	set the [arg_2] ||| [function_1] parameter name index [arg_2]	count=1
class	jobs ||| jobs	count=1
function_arg	exp [arg_2] ||| [arg_2] [function_1]	count=4
class	prediction log ||| prediction	count=1
arg	inputpattern to all stored ||| inputpattern	count=1
class	distribution must be ||| multinomial distribution	count=1
class	job ||| client jobs dao	count=4
module	put us ||| data	count=1
class	disk ||| reader	count=1
function	[function] with ||| [function] serialize extra	count=2
function_arg	the anomaly [arg_2] ||| [function_1] remove labels [arg_2]	count=1
function	cells [function_2] ||| [function_2] [function_1]	count=3
function	[function] single ||| [function] one matching row	count=1
function	total number of cells ||| get num cells	count=1
function	cell index in ||| segment on cell	count=1
function	json ||| with json	count=1
function	constructor - ||| init	count=1
class	version ||| spregion	count=1
class	temporal memory ||| temporal memory test	count=2
function	of the record that ||| record	count=1
function	recursively [function_2] ||| [function_2] [function_1]	count=2
module	that the class uses ||| frameworks opf	count=1
function	flags for all fields ||| all flags	count=1
function	a datetime object compute ||| compute	count=1
module_class	[module_1] data ||| [module_1] [class_2]	count=2
function	generates centre ||| centre	count=1
module	the result ||| frameworks opf	count=1
function	single [function] ||| get one [function] no	count=2
arg	n values for ||| n	count=1
function	list ||| flat list	count=1
class	returns a ||| spatial pooler	count=1
function	generates a ||| generate	count=1
module	including 'setup' ||| frameworks opf	count=1
function	histogram of ||| histogram	count=1
function	memory chunk of records ||| chunk	count=1
module	initialized ||| algorithms	count=1
function	like _getonematchingrownoretries(), ||| get one matching	count=1
arg	specified ||| ignorekilled	count=1
arg	to 'newstate' if 'newstate' ||| swarmid newstatus	count=1
function	a function is ||| is	count=1
function	of synapses of columns ||| columns	count=1
function_arg	[function_1] within ||| [function_1] [arg_2]	count=6
arg	a segment ||| segment presynapticcell permanence	count=1
function_arg	[function_1] [arg_2] ||| [function_1] parameter name index [arg_2]	count=2
arg	on params into ||| params	count=1
function	[function_1] [function_2] ||| swarming [function_1] [function_2]	count=1
arg	the results ||| results	count=2
function_arg	distances from [arg_2] ||| [function_1] [arg_2]	count=4
function	a duty ||| duty	count=1
function	dataset of ||| dataset	count=1
function	the connected [function_2] ||| [function_1] [function_2]	count=1
function	internal filter variables ||| init filter	count=1
module	all of the non-numeric ||| regions	count=1
arg	[arg_1] results ||| [arg_2] [arg_1]	count=1
module	0 ||| frameworks	count=1
function	a json value from ||| json value from	count=2
function	file parameters ||| job	count=1
function	inference value ||| infer	count=2
arg	specified ||| cell idx	count=1
function	sets the [function_2] ||| [function_1] [function_2]	count=36
class	the xml configuration ||| custom configuration	count=2
function	learning is enabled ||| learning	count=1
arg	f to the values ||| f	count=2
function	converts an int to ||| int to8byte	count=1
function	[function_1] next ||| [function_1] [function_2]	count=1
function	figure ||| plot outputs	count=1
function	if the club ||| club	count=1
arg	attaches an 'anomalyclassifier' ||| params spenable tmenable	count=1
function	neighborhood of a point ||| neighborhood	count=1
class	[class_1] state ||| [class_2] [class_1]	count=4
arg	the coordinate to ||| cls coordinate	count=1
function	list ||| segment flat list	count=1
function	paths to search ||| paths	count=1
function	generate a figure ||| plot	count=1
function	job record here ||| job	count=1
function	periodicactivityrequest elements ||| init	count=2
class	pretty ||| pattern machine	count=1
function	bookmark to ||| bookmark	count=1
function	a + [function_2] ||| [function_1] [function_2]	count=4
function	a bool if property ||| bool	count=1
function_arg	implemented [arg_2] ||| [function_1] [arg_2]	count=1
class	predictionwriteriface ||| adapter	count=2
function_arg	[function_1] a segment ||| [function_1] [arg_2]	count=2
arg	patterns to inputpattern and ||| inputpattern	count=1
class	a ||| activity	count=2
function	so far and ||| and	count=1
function	types for all ||| all data types	count=2
function	values of ||| get fields	count=1
class	of ||| periodic activity	count=2
function	smallest [function_2] ||| [function_1] [function_2]	count=1
function	from the a ||| from file	count=1
class	synapse ||| synapse	count=1
function	sequence labels ||| sequence labels	count=2
function_arg	merge sorted chunk ||| merge files key	count=2
arg	the given format ||| format	count=1
function	stored checkpoint for ||| model checkpoint	count=1
class	model using capnproto ||| model	count=1
function	allow it to ||| to	count=1
module	elements ||| frameworks opf	count=4
function	[function_1] map ||| [function_1] [function_2]	count=3
function	the permanence ||| get permanence	count=1
arg	string metrics ||| metrics	count=1
arg	increment the ||| increment useconnectionid	count=1
function	output elements ||| output element count	count=1
class	the given model ||| model runner	count=1
function	[function_1] a parameter ||| [function_2] [function_1]	count=1
function	worker completion message ||| get worker completion message	count=1
function	[function_1] statistics ||| [function_1] [function_2]	count=5
function	the beginning part ||| dbname prefix	count=1
function	for the field ||| field	count=2
arg	the potential mapping for ||| columnindex potential	count=1
function	attempt to ||| or get	count=1
class	console ||| console printer mixin	count=1
function	active columns ||| active columns	count=4
function	inactive ||| inactive	count=2
class	the passed ||| permute	count=1
function	saturation for ||| saturation	count=1
module	of [module] ||| [module]	count=1
function	initialized in a ||| init perm	count=1
function	training [function_2] ||| [function_1] [function_2] inputwidth category partitionid	count=1
arg	results are not necessarily ||| modelids	count=1
arg	potential mapping for ||| columnindex potential	count=1
function	[function_1] are determined ||| [function_1] [function_2]	count=7
function	index [function] record ||| [function] next record	count=1
function	calculates ||| inhibit columns	count=1
class	getscalars ||| date	count=1
function	elements ||| init	count=2
function	the first ||| first	count=1
function	[function_1] offsets and ||| [function_1] [function_2]	count=2
function_arg	sequences a [arg_2] ||| [arg_2] [function_1]	count=1
function	returns the permanence increment ||| get	count=2
class	flushes the file ||| file record stream	count=1
class	encoder for more information ||| coordinate encoder	count=1
function	[function_1] loop ||| [function_2] [function_1]	count=1
function	least recently ||| least recently	count=2
function	job that is presently ||| resume job no retries	count=1
class	instantiate ||| metrics iface	count=2
function	the best model ||| best model	count=6
class	stream ||| record stream iface	count=4
function	insert a new unique ||| insert and start	count=1
function	an existing job that ||| job no	count=1
function	from the a ||| from file field	count=1
class	us back ||| iface	count=1
function	performing global inhibition entails ||| inhibit columns global	count=1
arg	deviation in distributionparams ||| distributionparams	count=1
function	aggregation ||| aggregation	count=1
arg	dataset and cache ||| filename statsinfo maxsamples filters	count=1
function	[function] the presentation ||| [function] training	count=3
class	runner's _hypersearchjob ||| hyper search	count=1
function	construct a _htmclassificationrecord based ||| construct classification	count=2
class	when an inference ||| inference element	count=1
arg	[arg_1] name ||| [arg_2] [arg_1]	count=2
module_class	[module_1] hypersearch worker ||| [module_1] [class_2]	count=2
function	but only if ||| if equal	count=1
module	the given network ||| frameworks opf	count=1
function	[function_1] message that ||| [function_2] [function_1]	count=4
function	[function_1] plot ||| [function_1] cell [function_2]	count=1
arg	message to ||| level message	count=1
class	xml file and return ||| configuration	count=1
arg	on the segment passed ||| segment	count=1
class	temporalmemory ||| temporal	count=1
function_arg	[function_1] [arg_2] numpy arrays values in ||| [function_1] [arg_2]	count=8
function	[function_1] permanence increment ||| [function_2] [function_1]	count=1
function_arg	returns a range of [function_1] [arg_2] ||| data stream reader get [function_1] [arg_2] range	count=3
function	returns a [function_2] ||| [function_2] [function_1]	count=10
function	pickle [function_2] ||| model [function_1] [function_2]	count=1
class	a sequence of periodicactivityrequest ||| mgr	count=2
function_arg	[function_1] a message ||| [function_1] [arg_2]	count=1
function	indices for each ||| indices	count=1
module_class	for the [class_2] ||| [module_1] [class_2]	count=1
function	creates a new synapse ||| create synapse	count=1
function	minimum duty [function_2] ||| [function_1] [function_2]	count=2
function	a saved ||| hyper search	count=1
function	set a parameter ||| set anomaly parameter	count=2
class	that represents a connection ||| connection	count=1
function	return the ||| get metric	count=2
class	our member ||| backtracking tmcpp	count=1
arg	requestedactivities a ||| requestedactivities	count=2
function	encoder ||| perm encoder	count=1
class	iteration returns true if ||| iteration	count=1
function	for ||| connected span for	count=1
function	path [function_2] ||| [function_2] [function_1]	count=2
function	a ||| init perm	count=3
function	[function_1] 'sequenceid' ||| [function_2] [function_1]	count=1
function	job to 'newvalue', but ||| job set	count=1
class	non-temporal ||| non temporal	count=1
function	the index of ||| cell index	count=1
class	creates and ||| and	count=1
class	alter the custom configuration ||| configuration	count=1
module	permanence value for a ||| algorithms	count=1
arg	end ||| end	count=2
class	xml configuration file ||| configuration file	count=2
function	compute profiling it ||| compute	count=2
function	a list of tuples ||| field list	count=1
class	policy instance ||| per transaction connection policy	count=1
function	job ||| job set	count=2
function	from a [function_2] ||| [function_2] [function_1]	count=5
function	the encoder [function_2] ||| [function_2] [function_1]	count=1
function	a column's ||| permanences for column	count=1
function	[function_1] for ||| [function_2] centre and spread [function_1]	count=1
function	[function_1] id is ||| [function_1] [function_2]	count=2
function	range ||| range	count=2
function	for [function_2] ||| [function_2] [function_1]	count=22
function	stats this will ||| stats	count=1
class	hypersearch job ||| search runner	count=1
class	called ||| backtracking tm	count=4
class	over floating point values ||| float	count=1
function	the models ||| models	count=3
class	floating point values ||| float	count=1
function	exp b a and ||| exp	count=2
module	iterations must ||| frameworks opf	count=1
function	[function_1] labels ||| [function_2] [function_1]	count=15
class	clientjobsdao ||| client jobs dao	count=1
class	interpreter ||| interpreter	count=1
class	configuration file with ||| configuration file wrapper	count=2
function	that artificial [function_2] ||| [function_2] [function_1]	count=4
function_arg	creates ndesirednewsynapes [function_1] [arg_2] choosing ||| [function_1] [arg_2]	count=1
function	reset the ||| reset	count=2
class	distribution and returns its ||| distribution	count=1
function	optional ||| client info	count=1
arg	[arg] duty cycle ||| [arg]	count=3
arg	and a prediction ||| prediction record	count=1
function	[function_1] a float ||| [function_2] [function_1]	count=4
function_arg	dict containing [arg_2] ||| [function_1] [arg_2]	count=3
function	of segments [function_2] ||| [function_1] [function_2]	count=6
function	any additional ephemeral ||| ephemeral	count=2
function	of printouts for ||| null distribution	count=1
module	of iterations must be ||| opf	count=1
module	nupic encoders base ||| encoders	count=4
function_arg	get the sensor [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
class	back at ||| stream	count=1
function	from one ||| compute	count=1
function	in base py ||| get bucket info	count=4
function	returns sum of the ||| sum	count=1
arg	function description in base ||| inpt	count=1
function_arg	[function_1] consisting ||| [function_1] [arg_2]	count=3
class	file is always ||| file record	count=1
function	:param ||| null	count=1
class	for ||| spatial	count=1
arg	a dict describing the ||| cls filename path	count=1
class	elements ||| activity mgr	count=4
function	'results'), filter ||| filter	count=1
function	don't need to ||| members	count=2
function	like _getonematchingrownoretries(), but ||| one matching row	count=1
function	returns [function_2] ||| [function_2] [function_1]	count=27
function	field [function] ||| decoder output field [function]	count=3
function	synapses on ||| synapses	count=1
function	get the maximum ||| max	count=2
function_arg	[function_1] matrix using ||| [arg_2] [function_1]	count=4
function	[function_1] inference output ||| [function_2] [function_1]	count=1
function_arg	merge [arg_2] ||| [arg_2] [function_1]	count=1
function	additional specs in three ||| additional specs	count=2
function	fields ||| fields	count=1
function	[function_1] end and ||| [function_2] [function_1]	count=1
function_arg	file returning [arg_2] ||| [arg_2] [function_1]	count=1
function	additional ephemeral [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] network ||| [function_1] [arg_2]	count=1
function	labels and [function_2] ||| [function_1] list to [function_2]	count=2
arg	a dict describing the ||| filename path	count=1
module	and write the ||| frameworks opf	count=1
function	creates ndesirednewsynapes [function] ||| grow [function]	count=2
function	emit model info to ||| emit	count=1
function_arg	the anomaly [arg_2] ||| [function_1] get labels [arg_2]	count=1
class	of ||| record stream	count=1
function	pickle for saving ||| data	count=1
function	indices of the predictive ||| predictive	count=1
function	with ||| get matching rows with	count=1
function	initialize member variables ||| init	count=1
function	total # [function] ||| [function]	count=1
function	delay the [function_2] ||| [function_2] [function_1]	count=2
function	be greater than ||| init	count=1
function	construct ||| construct	count=2
function	segment with ||| best matching segment	count=2
module_class	the category ||| algorithms knnclassifier	count=1
class	custom configuration settings ||| configuration	count=1
class	this ||| model	count=1
function	disable ||| disable	count=1
function	of synapses ||| synapses	count=1
function	the distances ||| distances	count=1
class	xml configuration file with ||| configuration file wrapper	count=2
arg	based on params into ||| jobid params	count=1
function	[function_1] update the ||| [function_2] [function_1]	count=4
function	[function] is ||| [function] adopt next	count=3
function	list of swarm ||| swarm	count=1
class	the opf model runner ||| opfmodel runner	count=1
class	of the ||| stream iface	count=1
module	be greater than 0 ||| opf	count=1
function	and inference this ||| stats infer	count=1
function	of active ||| get best	count=1
function	aggregation function returns ||| get	count=1
function	and exit ||| and exit	count=2
function	list of labels ||| label list category	count=2
module	of iterations must be ||| frameworks	count=1
function	training pattern ||| training pattern	count=1
function	job is expected ||| start job	count=1
arg	choosing [arg] ||| cls connections [arg]	count=3
function	sensor ||| sensor	count=1
function	potential percent ||| potential pct	count=2
function	pattern that ||| pattern	count=1
arg	chooses the best ||| forceupdate	count=1
function	the synapses for ||| synapses for	count=2
arg	results string and last-update-time ||| results	count=1
arg	[arg_1] it describes ||| [arg_1] [arg_2]	count=6
module	of iterations must ||| frameworks opf	count=1
function	[function_1] distances ||| [function_1] [function_2]	count=1
function	return the ||| get	count=27
function	worker [function_2] ||| [function_1] [function_2]	count=5
arg	out [arg] ||| itemname [arg]	count=1
class	that ||| pooler	count=1
class	the current tm state ||| backtracking tm	count=1
function	statistics ||| statistics	count=1
function	[function_1] object compute ||| [function_2] [function_1]	count=2
function	learning mode not normally ||| learning	count=1
class	for temporalmemory ||| temporal	count=1
arg	to csv file ||| modelinfo	count=1
class	called at the ||| backtracking tm	count=2
function	generate the initial first ||| generate	count=3
class	region ||| region identity policy base	count=1
function	list of labels ||| labels	count=2
class	see if we ||| hs	count=1
module	the given ||| swarming hypersearch	count=1
function	[function_1] this pynode ||| [function_2] [function_1]	count=1
arg	fieldmetainfo list ||| fields	count=1
class	[class_1] method ||| [class_2] [class_1]	count=2
function	set the random seed ||| set	count=1
function	permanence amount that ||| syn perm	count=1
function	writes data [function_2] ||| [function_1] [function_2]	count=1
function	high-order ||| cells shared	count=1
arg	from start to ||| start	count=1
function	should [function_2] ||| [function_1] sys [function_2]	count=1
arg	expression ||| expression	count=1
module_class	[module_1] scalar ||| [module_1] [class_2]	count=3
arg	w coordinates by ||| cls coordinates w	count=3
module	'setup' callbacks ||| opf	count=1
class	the file ||| file	count=3
function	a list of ||| strip list	count=1
function	estimator ||| estimator	count=1
function	inference this routine ||| infer	count=1
function_arg	[function_1] permanence ||| [arg_2] [function_1]	count=2
arg	than minpermanence ||| minpermanence minnumsyns	count=1
function	category file ||| category file	count=1
function	description of the ||| range description	count=1
function	permanence [function_2] ||| [function_1] [function_2]	count=2
function	set the default ||| default	count=1
function_arg	print a [arg_2] ||| [function_1] [arg_2]	count=3
function	insert a new ||| insert and	count=1
arg	function description ||| inpt	count=1
class	a synapses that ||| pooler	count=1
function	[function_1] models table ||| [function_2] [function_1]	count=2
function	jobids for jobs in ||| active jobs for client	count=2
function	being optimized this ||| optimized	count=1
function_arg	[function_1] f ||| [arg_2] [function_1]	count=4
function	the end [function_2] ||| [function_2] [function_1]	count=2
function	the min ||| min	count=1
arg	modelconfig a ||| modelconfig control	count=1
arg	fields from spatialoutput and ||| spatialoutput	count=1
function	the phase ||| phase	count=2
function	existing job that ||| resume job no retries	count=1
arg	all configuration ||| cls	count=1
function	[function_1] [function_2] to ||| [function_2] check for [function_1]	count=1
function	potentially change [function] maxval using ||| set min [function]	count=1
function_arg	[function_1] all properties ||| [arg_2] [function_1]	count=2
function	[function_1] in cell ||| [function_1] [function_2]	count=1
arg	the specified [arg_2] ||| [arg_2] [arg_1]	count=8
function	cells in this ||| cells	count=1
function	type ||| of type	count=1
module	we ||| swarming hypersearch	count=1
function	job ||| job insert	count=1
function	and deletes ||| in	count=1
function	_hypersearchjob [function_2] ||| [function_2] [function_1]	count=2
function	job ||| job no	count=1
function	[function_1] pattern ||| [function_2] [function_1]	count=7
function	[function_1] 'category' ||| [function_2] [function_1]	count=1
arg	metrics ||| metrics	count=1
function	a - exp b ||| diff exp	count=1
function	in cell ||| in cell	count=2
function	[function_1] dict type ||| [function_2] [function_1]	count=1
function	list from the a ||| list from file field	count=1
function	a list ||| segment flat list	count=1
function	list of ||| field list	count=1
function	generation ||| non full generation	count=1
function	used to generate random ||| generate	count=1
function_arg	cancel field [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] anomaly ||| [function_2] remove [function_1]	count=1
function	a worker [function_2] ||| [function_2] [function_1]	count=5
function	object compute the record's ||| compute	count=1
module	us ||| data	count=1
function	[function_1] models ||| [function_2] [function_1]	count=3
arg	path ||| path	count=2
class	again) ||| iface	count=1
function	jobs in the table ||| jobs	count=2
function	reactivate ||| reactivate	count=1
arg	filepath ||| filepath	count=1
function_arg	[function_1] labelname to ||| [function_1] [arg_2]	count=2
function	description of the ||| description	count=1
function	valid [function_2] ||| [function_2] [function_1]	count=1
class	our member ||| backtracking tm	count=1
class	given hypersearch job and ||| search	count=1
module	and return ||| swarming	count=1
class	the file ||| file record	count=2
class	set ||| stream reader	count=1
arg	current value plus ||| value anomalyscore timestamp	count=1
function	potential segment update ||| add to segment updates	count=1
module_class	[module_1] network ||| [module_1] [class_2]	count=18
function	expected to be status_notstarted ||| with retries	count=1
module_class	the anomaly score ||| algorithms anomaly	count=1
function	seeks ||| seek	count=1
function	json value from ||| json value from	count=6
function	generates a random sample ||| sample	count=1
function	like _getonematchingrownoretries(), ||| get one matching row	count=1
function	of segments per ||| segments per	count=2
class	a sequence ||| activity mgr	count=2
arg	over a range of ||| column start	count=1
function	parse [function_2] ||| [function_1] [function_2]	count=3
function_arg	initialize tables [arg_2] ||| [arg_2] [function_1]	count=1
class	hypersearch job and ||| hyper search runner	count=1
function	[function_1] object compute ||| [function_2] timestamp [function_1]	count=2
function	to a public ||| public	count=1
function	table ||| jobs	count=1
class	given hypersearch ||| hyper search	count=1
function	iterations must ||| init	count=1
class	phase ||| iteration phase spec learn	count=1
function	to segment ||| segment active synapses	count=1
function_arg	[function_1] next n ||| [function_1] [arg_2]	count=1
function	a new ||| insert	count=1
function	[function_1] permanence ||| [function_1] [function_2]	count=11
function	main loop of ||| task main loop	count=1
function	from ||| from file field	count=1
function	following encoder ||| encoder	count=2
function_arg	id [arg_2] ||| [function_1] [arg_2]	count=1
arg	the cells passed ||| cls cells	count=2
function	from the a ||| list from file	count=1
function	create an [function_2] ||| [function_2] [function_1]	count=6
arg	method takes ||| labellist	count=1
function	cell [function_2] ||| monitor mixin mm get [function_1] [function_2] plot title showreset resetshading	count=1
module	and delete the ||| swarming	count=1
function	and ||| and params	count=2
function_arg	[function_1] the segment ||| grow [function_1] cls connections random [arg_2]	count=1
class	for ||| temporal memory	count=2
function	within the range from ||| delete range from	count=1
function	number of ||| mm get	count=1
function_arg	stored checkpoint [arg_2] ||| [arg_2] [function_1]	count=1
function	the persistent ||| config	count=1
function	and writes data to ||| write to checkpoint	count=1
function	current predicted [function_2] ||| [function_2] [function_1]	count=1
function	value ||| init perm	count=1
function	[function_1] ids this ||| [function_1] [function_2]	count=3
function	the winner [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] cycles for ||| [function_2] [function_1]	count=9
function_arg	[function_1] value ||| [arg_2] [function_1]	count=2
class	phase ||| iteration phase spec	count=1
function	potential segment ||| add to segment	count=1
function	[function] to ||| track instance [function] check for concurrency	count=1
function	local [function_2] ||| [function_1] [function_2]	count=2
class	runs it inline ||| hyper search runner	count=1
arg	learns on the ||| columnmatchingsegments prevactivecells	count=1
function	paths to search ||| config paths	count=1
class	and ||| svmclassifier	count=1
function_arg	[function_1] [arg_2] ||| [function_1] cls [arg_2]	count=8
arg	one encoder ||| encoder	count=1
function	current predicted state ||| predicted state	count=2
function	update ||| update	count=10
function	value for ||| perm	count=1
class	log ||| log	count=2
function	upcoming partition [function_2] ||| [function_2] [function_1]	count=4
class	[class_1] prediction ||| [class_1] [class_2]	count=3
class	file to ||| iface	count=1
arg	number of maxbuckets ||| maxbuckets	count=1
function	bucket ||| bucket	count=3
function	job is ||| start job	count=1
class	be greater than 0 ||| phase	count=1
class	noise ||| noise	count=1
function	a new trace ||| trace	count=1
function	boost factors are used ||| boost factors	count=1
function	[function_1] end and ||| [function_1] [function_2]	count=1
class	of iterations must be ||| iteration	count=1
function_arg	[function_1] [arg_2] ||| [function_1] score [arg_2]	count=7
function	the same job ||| job	count=1
class	put ||| record stream	count=1
function	construct a _htmclassificationrecord ||| construct	count=2
function	the presentation of [function_1] [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] that defines ||| [function_1] encoder str [arg_2]	count=1
function	removes any stored records ||| knn	count=1
function	implemented ||| from file	count=1
function	[function_1] for all ||| [function_2] [function_1]	count=7
function_arg	filter [arg_2] ||| [function_1] [arg_2]	count=1
function	topdowncompute] ||| top down compute	count=1
function	[function_1] and inference ||| [function_2] [function_1]	count=4
function	schema ||| schema option	count=1
function	is ||| perm	count=1
function_arg	potentially [function_1] [arg_2] ||| encoders adaptive scalar encoder [function_1] [arg_2] learn	count=1
arg	inlist ||| inlist	count=1
function	best result [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] bookmark to ||| [function_2] [function_1]	count=1
function	types ||| types	count=2
function	generate ||| generate perm	count=1
function_arg	[function_1] client ||| [function_1] [arg_2]	count=4
function	from ||| from	count=15
module	instantiate ||| frameworks	count=1
function	the predictive ||| predictive	count=1
function	specifying the format of ||| info	count=1
function	segments for [function_2] ||| [function_1] [function_2]	count=4
function	function returns ||| get	count=1
function	[function_1] nupic ||| [function_2] [function_1]	count=4
module_class	the inference ||| swarming inference	count=1
function	returns plot of [function_1] [function_2] ||| monitor mixin mm get [function_1] [function_2] plot title showreset resetshading	count=1
function	[function_1] w for ||| [function_2] [function_1]	count=4
function	members ||| members	count=3
module	permanence ||| algorithms	count=1
arg	a segment ||| segment presynapticcell	count=1
module	callbacks ||| frameworks opf	count=2
function_arg	[function_1] the results ||| [arg_2] [function_1]	count=1
function	[function_1] only if ||| [function_2] [function_1]	count=1
function	[function_1] the next ||| [function_2] [function_1]	count=1
function_arg	[function_1] modelid ||| [function_1] [arg_2]	count=1
arg	radius ||| radius	count=1
function	seed value ||| get seed	count=1
function	returns [function_2] ||| [function_1] algorithm [function_2]	count=3
arg	trapezoidal rule parameters ||| x y	count=1
class	fieldmeta ||| stream reader	count=1
function	[function_1] [function_2] containing configuration ||| [function_1] [function_2]	count=4
function	py ||| get bucket indices	count=2
function_arg	swarm's state [arg_2] ||| [function_1] [arg_2]	count=1
function	synapse [function_2] ||| [function_2] [function_1]	count=5
function	_getonematchingrownoretries(), but ||| get one matching row	count=1
function	special row [function_2] ||| [function_2] [function_1]	count=4
function	records to return true/false ||| records	count=1
function	generated ||| init perm	count=1
function	of the cell ||| cell	count=1
function	output cache associated ||| delete output cache	count=2
function	[function_1] checkpoint from ||| [function_2] [function_1]	count=1
function	a randomly ||| init	count=1
function	in base py ||| bucket	count=5
function	overlap ||| overlap	count=2
function	specs in three ||| specs	count=2
function	a - exp ||| log diff exp	count=1
class	is initialized in a ||| spatial	count=1
function	given version [function_2] ||| [function_2] dbname for [function_1]	count=2
function	true if [function_2] ||| [function_1] [function_2]	count=1
module	sequence of ||| frameworks	count=2
function_arg	json [arg_2] ||| [function_1] [arg_2]	count=3
class	factory ||| factory	count=1
function	return it [function_2] ||| [function_2] [function_1]	count=8
class	the tm @param pamlength ||| tm	count=1
function	duty cycles the minimum ||| min	count=1
function	countstrace a new trace ||| trace	count=1
arg	in distributionparams ||| distributionparams	count=1
function	field ||| field meta	count=2
function_arg	[function_1] averaged over ||| [function_1] stability [arg_2]	count=1
function	change [function] maxval ||| set min [function]	count=1
function	latest search from a ||| pickup search	count=1
function	predicted [function_2] ||| [function_1] [function_2]	count=4
function	returns a description of ||| get description	count=1
class	back at ||| record stream iface	count=1
arg	a new job request ||| cmdline	count=1
arg	inputpattern to ||| inputpattern	count=1
arg	[arg_1] by ||| [arg_2] [arg_1]	count=4
function	special row ||| special row	count=2
class	a sequence of ||| periodic activity	count=2
function	returns ||| get metrics	count=1
function	to a json ||| with json	count=1
function	pooler see also htmpredictionmodelcontroldisablesplearningcb ||| splearning	count=1
class	or runs ||| search runner	count=1
module	metrics that are ||| frameworks opf	count=1
function	[function_1] compute the ||| [function_2] [function_1]	count=1
function	[function_1] completion message ||| [function_2] [function_1]	count=3
function	[function_1] in ||| [function_1] [function_2]	count=1
function	[function] stack ||| init [function]	count=3
function	given inferencetype ||| metric specs	count=1
class	see if the model ||| model runner	count=1
function	[function_1] logger ||| [function_2] [function_1]	count=1
function	traces to ||| traces	count=1
function	performing global inhibition entails ||| global	count=1
class	the best model ||| opfmodel	count=1
function	and inference this ||| infer	count=1
function	svd is a factorization ||| svd	count=1
class	permanence value for ||| pooler	count=1
function	create a ||| create	count=2
function	global ||| global	count=1
function	best model [function_2] ||| [function_1] [function_2]	count=4
function_arg	get [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	the --descriptionfromfile option ||| handle description from file option	count=1
function	remove ||| remove	count=3
class	passed ||| permute	count=1
class	to the [class] ||| [class]	count=3
function	of model ||| models get fields	count=1
arg	in a job ||| jobid	count=1
function	special row [function_2] ||| [function_1] [function_2]	count=4
class	distribution must be an ||| multinomial distribution	count=1
class	put us back at ||| record	count=1
function	necessary upon entry ||| enter	count=3
function	an existing job ||| job	count=1
function	constructor ||| init	count=6
function	return list of ||| get	count=1
function	[function_1] [function_2] ||| [function_2] check for concurrency [function_1]	count=2
class	cells that ||| temporal memory	count=1
function_arg	[function_1] [arg_2] ||| [function_1] swarms [arg_2]	count=7
function	when the node is ||| element	count=1
function	inference this routine ||| stats infer	count=1
function	that returns a ||| get ephemeral	count=2
class	returns ||| file record stream	count=1
function	[function] it ||| slow [function] segment	count=1
class	[class_1] predictionlogger object ||| [class_1] [class_2]	count=1
function	[function_1] threshold ||| [function_2] [function_1]	count=3
class	loads ||| model runner	count=1
function	[function_1] description ||| [function_1] [function_2]	count=4
function	hypersearch job and monitor ||| search	count=1
function	models that [function_2] ||| [function_2] [function_1]	count=4
class	configuration file ||| configuration file wrapper	count=2
function	metrics ||| logged metrics	count=2
function	completed with errors ||| err	count=1
function	local inhibition is performed ||| columns local	count=1
function	optimization ||| optimization metric	count=1
function	exit program with ||| exit	count=1
function	[function_1] [function_2] to ||| [function_2] [function_1]	count=5
function_arg	[function_1] the segment ||| [arg_2] [function_1]	count=3
arg	truth and a prediction ||| prediction record	count=1
module	greater ||| opf	count=1
function	update the ||| update	count=4
class	disk ||| stream iface	count=1
arg	minlikelihoodthreshold ||| minlikelihoodthreshold	count=1
arg	inlist and ||| inlist	count=1
function	that correctly predicted ||| activate predicted	count=1
class	'setup' callbacks this ||| driver	count=1
module	function that ||| frameworks opf	count=1
function	iteration cycle phase ||| phase	count=1
function	learning and inference ||| infer	count=1
arg	of values ||| values freqcounts	count=1
function_arg	updates the [arg_2] ||| [function_1] synapse [arg_2]	count=3
function	will update a ||| update	count=1
function	time ||| time per	count=1
function	get the predicted ||| predicted	count=1
function	metric being optimized ||| optimized metric	count=2
function_arg	[function_1] [arg_2] ||| [function_1] clientinfo [arg_2]	count=3
function	like _getonematchingrownoretries(), ||| get one	count=1
function	[function_1] counts ||| [function_1] [function_2]	count=3
function	[function_1] from ||| algorithms backtracking tm choose [function_1] [function_2] c i s	count=1
class	given model instance ||| model runner	count=1
function	delete ||| delete	count=1
function	[function_1] [function_2] ||| [function_1] experiment [function_2] dir	count=7
module	maximum number of ||| regions	count=1
function	of job records ||| get	count=1
function	[function_1] active synapses ||| [function_1] [function_2]	count=8
module	the indices of the ||| algorithms	count=1
function	a cell in ||| cell	count=1
class	the file to disk ||| stream reader	count=1
module	sequence of periodicactivityrequest ||| frameworks	count=2
function	for adding [function_2] ||| [function_2] [function_1]	count=2
class	us ||| record stream iface	count=1
module	the current results and ||| swarming	count=1
function	a base ||| base	count=1
function	job is ||| job	count=1
class	based on the passed ||| permute	count=1
function	list ||| field list	count=2
function	for a list ||| segment flat list	count=1
function	returns a randomly generated ||| init	count=1
function	the value [function_2] ||| [function_2] [function_1]	count=8
function	a string of ||| string	count=1
module	settings and ||| swarming	count=1
class	two-gram [class_2] ||| [class_1] [class_2]	count=1
function	loads ||| load	count=8
function_arg	[function_1] [arg_2] ||| [function_1] d [arg_2]	count=16
function	unique category number ||| category number	count=2
function	fewest number of segments ||| least allocated	count=1
function_arg	[function_1] permanence for ||| [function_1] synapse [arg_2]	count=1
class	[class_1] prediction log ||| [class_1] [class_2]	count=3
function	get the maximum number ||| get max	count=2
arg	member name [arg] member name ||| [arg]	count=1
function	paths to ||| paths	count=1
function	the column [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] [function_2] ||| [function_1] cell [function_2]	count=3
arg	and converts it to ||| inputfilepath	count=1
arg	[arg_1] and j ||| [arg_2] [arg_1]	count=1
class	retrieves the runner's _hypersearchjob ||| hyper search runner	count=1
function	and writes data to ||| write to	count=1
function_arg	callback for [arg_2] ||| [function_1] option [arg_2]	count=4
class	0 ||| phase	count=1
function	field within ||| field	count=1
function	[function_1] swarm ||| [function_2] [function_1]	count=1
module	the results of ||| swarming	count=1
function	loop of the opf ||| loop	count=1
function	given records from ||| delete records from	count=2
function	segments that [function_2] ||| [function_2] [function_1]	count=2
function	are ||| meta	count=1
function_arg	[function_1] [arg_2] duty cycle is a ||| [function_1] [arg_2]	count=12
function	read state from ||| read from	count=2
function	writes data to ||| write to checkpoint	count=2
function	a new hypersearch job ||| run new search	count=1
function	array ||| array	count=2
module	in base and ||| swarming hypersearch	count=1
arg	out [arg] dict ||| itemname [arg]	count=1
class	this ||| opftask driver	count=1
arg	[arg] and does ||| [arg]	count=3
module	callbacks this ||| frameworks opf	count=1
arg	experiment's [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] numrecords ||| [arg_2] [function_1]	count=1
module	python ||| data	count=1
class	the discrete probability distribution ||| discrete proposal	count=1
function	the pattern [function_2] ||| [function_2] [function_1]	count=1
module	including 'setup' callbacks this ||| frameworks opf	count=1
module	in note [module_2] ||| [module_1] [module_2]	count=1
function	[function_1] violation ||| [function_2] [function_1]	count=3
function	total number of synapses ||| get num synapses	count=1
arg	them in the output ||| output	count=1
function_arg	[function_1] metrics a ||| [function_1] [arg_2]	count=5
function_arg	[function_1] w ||| [arg_2] [function_1]	count=2
function	as orphaned ||| as orphaned	count=2
class	distribution and returns ||| distribution	count=1
function_arg	returns a range of [function_1] [arg_2] if 'bookmark' ||| [function_1] [arg_2]	count=8
function	returns a dictionary ||| get	count=2
function	filter variables for ||| init filter	count=1
function	[function_1] period ||| [function_1] [function_2]	count=7
class	randomly generated permanence ||| spatial pooler	count=1
function	[function_1] per ||| [function_1] [function_2]	count=14
function	log(exp [function] ||| [function]	count=2
function	but with ||| row with	count=1
function	element from ||| convert	count=1
function	the average [function_2] ||| [function_2] segment [function_1]	count=1
function	is an interface ||| prediction logger	count=2
function	needed length [function_2] ||| [function_2] [function_1]	count=4
function	must be ||| init	count=1
function	test we are running ||| test	count=1
function	segments [function_2] ||| [function_2] [function_1]	count=14
function	timestamp ||| timestamp	count=1
module_class	[module_1] custom configuration ||| [module_1] [class_2] read std	count=5
function	high-order [function_2] ||| [function_2] [function_1]	count=1
function	p [function] params ||| is [function]	count=1
class	discrete probability distribution and ||| discrete proposal	count=1
function	get a parameter ||| parameter	count=1
function	compute the number of ||| get adaptive svddims	count=1
function	generate ||| generate range	count=1
function	if [function] elements of ||| [function]	count=1
function	converts a [function_2] ||| [function_2] [function_1]	count=1
function	the job is ||| start job	count=1
class	metric if the ||| aggregate metric	count=1
arg	records - a list ||| key chunkindex fields	count=1
arg	is less than minpermanence ||| minpermanence minnumsyns	count=1
function	data types ||| data types	count=2
function	the duty [function_2] ||| [function_2] [function_1]	count=2
function	the task instances ||| model control	count=1
class	storage as a ||| stream iface	count=1
class	storage ||| record stream	count=2
function	run a named ||| run	count=1
arg	of aggregated values parameters ||| aggregationinfo inputfilename outputfilename	count=1
function	list of numbers to ||| strip list	count=1
function	array ||| to8byte array	count=1
arg	representation of obj ||| obj	count=1
function	[function_1] spread ||| [function_2] [function_1]	count=4
class	that ||| spatial pooler	count=2
function	runtime statistics specific to ||| runtime stats	count=2
function	local inhibition is ||| inhibit columns local	count=1
arg	object segment ||| segment	count=1
arg	the string that defines ||| options encoderdict	count=1
arg	ground truth ||| accumulatederror historybuffer	count=1
function	[function] random inputs ||| [function] coinc	count=3
function	return index ||| get field index	count=1
module_class	base and [class_2] ||| [module_1] [class_2] read std	count=2
arg	thinking about ||| w minval maxval n	count=1
class	the xml configuration file ||| custom configuration file	count=2
function	cumulative n for all ||| totaln	count=1
function	column that a ||| column for	count=1
function	copy ||| copy	count=1
function	a worker completion ||| worker completion	count=1
function	records from ||| records	count=1
function_arg	[function_1] [arg_2] member name is one ||| [function_1] member name [arg_2]	count=2
arg	[arg_1] j ||| [arg_2] [arg_1]	count=1
function	additional [function_2] ||| [function_1] [function_2]	count=8
function	debugging ||| null distribution	count=1
function	beginning part ||| prefix	count=1
function	duty cycles for ||| active duty cycles	count=2
function	a worker completion message ||| get worker completion message	count=1
function	a synapses that ||| init perm	count=1
function	[function_1] index ||| [function_1] [function_2] recordts	count=1
function	the column that a ||| column for	count=1
function	generated permanence value ||| perm	count=1
function_arg	[function_1] input ||| [arg_2] [function_1]	count=4
function	add the [function_2] ||| [function_2] [function_1]	count=2
class	is ||| backtracking tm	count=1
function	_getonematchingrownoretries(), but ||| one matching	count=1
function	main [function_2] ||| [function_2] [function_1]	count=4
function	new ||| insert	count=1
class	version ||| knnanomaly	count=1
function	timedelta [function_2] ||| [function_2] from [function_1]	count=3
class	the runner's _hypersearchjob ||| hyper search runner	count=1
function	but with retries ||| row with retries	count=1
function	[function_1] distances between ||| [function_1] [function_2]	count=1
arg	[arg_1] temporaloutput ||| [arg_1] [arg_2]	count=3
function	removes any ||| knn	count=1
class	of iterations ||| phase	count=1
function	[function] tuple ||| [function] last	count=1
function	[function_1] cell with ||| [function_1] least allocated [function_2]	count=3
function	list to ||| flat list	count=1
class	returns ||| spatial pooler	count=15
function	inhibition local ||| columns local	count=1
function	bookmark to the current ||| bookmark	count=1
arg	an existing one ||| modelparams modelparamshash metricresult	count=1
class	of the ||| iface	count=1
arg	current value matches 'curvalue' ||| jobid fieldname newvalue curvalue	count=1
function	if the current value ||| if equal	count=1
arg	given col cellidx segidx ||| col cellidx	count=1
function	[function_1] [function_2] ||| [function_2] centre and [function_1]	count=1
function	[function_1] inhibition radius ||| [function_1] [function_2]	count=1
arg	for the given filename ||| filename	count=1
function	from source ||| convert	count=1
function	[function_1] duty cycles ||| [function_2] [function_1]	count=8
module	the file ||| data	count=3
function_arg	[function_1] b ||| [function_1] [arg_2]	count=3
class	gets called ||| backtracking tm	count=1
function	duty cycle [function_2] ||| [function_1] [function_2]	count=1
function	duty [function] ||| update duty [function]	count=3
function	schema to ||| schema	count=1
class	record stream as ||| record stream iface	count=2
class	tm ||| tm	count=1
function	if the same job ||| job insert	count=1
module_class	[module_1] hypersearch ||| [module_1] [class_2] worker process updated	count=1
arg	b are numpy arrays ||| a b	count=1
function	return the ||| get config	count=1
function	all models ||| models	count=1
function	[function_1] distances from ||| [function_2] [function_1]	count=1
function	returns true if ||| is completed	count=2
function	all [function_2] ||| [function_2] [function_1]	count=3
function	of labels that correspond ||| metric labels	count=1
class	writes ||| opfmodel runner	count=1
function_arg	duty [function_1] [arg_2] duty cycle is a ||| duty [function_1] [arg_2]	count=3
function	the ||| get	count=4
function	sets the predicted segment ||| set predicted segment	count=1
function	add one instance ||| add instance	count=2
function	of a cell ||| cell	count=1
function	enableprofiling ||| enable profiling	count=1
function	connected [function_2] ||| [function_2] [function_1]	count=1
module	and returns ||| swarming	count=2
function	to segment ||| segment active	count=1
function_arg	range from [arg_2] ||| [function_1] [arg_2]	count=3
class	discrete probability ||| discrete	count=2
module	file ||| support	count=1
module	a value over a ||| generators	count=1
function	job to [function_2] ||| [function_1] field [function_2]	count=1
function	the beginning ||| rewind	count=1
function	returns the aggregation ||| get aggregation	count=1
function	from the current model ||| model	count=1
function	for the inference state ||| infer	count=1
function	[function_1] overlap ||| [function_2] [function_1]	count=1
arg	string and/or num_records fields ||| metricvalue numrecords	count=1
class	us back at ||| record stream iface	count=1
class	the file again) ||| record stream iface	count=1
function	the current model ||| model	count=1
function	beginning of the ||| rewind	count=1
function_arg	[function_1] the value ||| knnanomaly classifier region [function_1] parameter name index [arg_2]	count=1
function	new synapse [function_2] ||| [function_1] [function_2]	count=2
function	region to ||| add anomaly classifier region	count=1
class	a version ||| knnanomaly classifier	count=1
function	if ||| if	count=1
arg	a fieldmetainfo ||| cls fields	count=1
function	the permanence [function_2] ||| [function_1] [function_2]	count=2
module	and return the following ||| swarming	count=1
arg	from file ||| cls	count=1
function	the cumulative w for ||| totalw	count=1
function	non-zero bits if ||| to non zero bits	count=1
arg	list of proposed changes ||| activestate	count=1
class	the prediction output stream ||| basic prediction	count=1
function	compute a [function_2] ||| [function_1] [function_2]	count=4
class	state of all cells ||| backtracking tm	count=1
function	for adding a ||| for	count=1
class	the ||| stream reader	count=1
module	~ nupic encoders base ||| encoders	count=1
class	to the model ||| two gram model	count=1
function	a json [function_2] ||| [function_1] [function_2]	count=11
function	return the absolute ||| get model	count=1
function	index of ||| index	count=2
module	the metrics for a ||| swarming	count=1
function_arg	returns [function_1] [arg_2] are numpy arrays values ||| [function_1] [arg_2]	count=2
function	a new ||| new	count=5
function	the initial permanence ||| initial permanence	count=2
function_arg	+ exp [arg_2] ||| [function_1] [arg_2]	count=1
class	given xml file ||| configuration	count=1
module_class	[module_1] [class_2] element ||| [module_1] [class_2]	count=1
function	into the model ||| model	count=1
class	model ||| model info	count=1
function	of the 'category' field ||| category field	count=1
arg	number of iterations must ||| inferenceargs	count=2
function_arg	records starting [arg_2] ||| data stream reader get [function_1] [arg_2] range	count=3
class	this is the ||| model record	count=1
function	segments in ||| segments in	count=2
function	returns the [function_2] ||| [function_1] [function_2]	count=58
function	return the absolute path ||| get model	count=1
function_arg	[function_1] n ||| [function_1] [arg_2]	count=1
function	output over time time ||| outputs over time	count=1
function	state to 'newstate' if ||| swarm state	count=1
function	connected permanence ||| connected permanence	count=2
class	model ||| nupic model	count=1
function	[function_1] and ||| [function_2] check for [function_1]	count=1
arg	the keys being ||| inputrow	count=1
function_arg	[function_1] assuming ||| [function_1] maxbuckets [arg_2]	count=4
class	according to the current ||| manager	count=1
function	pretty print a ||| pretty print	count=1
arg	on params ||| params	count=1
module	a value over a ||| data generators	count=1
arg	value ||| value	count=4
function	semi-private method for ||| get	count=2
class	model ||| htmprediction model	count=2
function	get the ||| get	count=13
module	a ||| data generators	count=1
arg	maps the coordinate to ||| coordinate	count=1
class	prediction output ||| prediction logger	count=1
function	a dict of ||| dict	count=1
function	[function_1] synapse on ||| [function_1] [function_2]	count=1
function	htmpredictionmodelcontroldisabletplearningcb ||| enable tplearning cb	count=2
function	area under [function_2] ||| [function_1] [function_2]	count=3
arg	minpermanence and deletes any ||| minpermanence	count=1
function	[function_1] is ||| [function_2] [function_1]	count=4
function	and inference ||| stats infer	count=1
function	remove entries with ||| remove	count=1
function	returns true if ||| is temporal	count=3
function	synapses ||| synapses	count=8
function	returns the max ||| get max	count=2
module	metrics that are being ||| frameworks opf	count=1
function	number of sequences ||| get	count=1
function	generation in ||| non full generation	count=1
module_class	encoders base [class_2] ||| [module_1] geospatial coordinate [class_2]	count=1
function	search from a saved ||| search	count=1
class	state of all cells ||| backtracking	count=1
module	model ||| frameworks opf	count=9
function	[function] the given ||| load experiment [function]	count=1
class	performs inhibition this method ||| pooler	count=1
function	the winner ||| winner	count=1
function	[function] divided ||| compute [function] record	count=2
function	recursively updates the values ||| r	count=1
function	only if the ||| if equal	count=1
function_arg	a job [arg_2] ||| [arg_2] [function_1]	count=2
class	claclassifier ||| claclassifier	count=1
arg	method ||| input	count=3
function	so that artificial labels ||| variable label	count=1
function	in a ||| init perm	count=1
function	converts an int to ||| int	count=1
function	permanence value ||| perm	count=1
function	score on the ||| score	count=1
function	area [function_2] ||| [function_2] [function_1]	count=6
module_class	[module_1] description ||| [module_1] [class_2]	count=2
function	sequence of periodicactivityrequest ||| init	count=2
class	to backtracking_tm ||| tmshim mixin	count=1
arg	string that defines ||| options encoderdict	count=1
function	[function] classifier ||| [function] remove	count=2
function	name ||| db name	count=1
class	method ||| spatial pooler	count=3
arg	to estimateanomalylikelihoods if windowsize ||| windowsize learningperiod	count=1
class	[class_1] factory ||| [class_2] [class_1]	count=2
function	indices for [function_2] ||| [function_2] [function_1]	count=2
class	connection to ||| connection	count=1
function_arg	update [arg_2] ||| [arg_2] [function_1]	count=5
function	the inference active ||| infer	count=1
function	parse [function_2] ||| [function_2] [function_1]	count=3
class	[class] this ||| [class]	count=4
arg	numrecords ||| numrecords	count=1
function	for all models that ||| models	count=1
function	inhibition performing global inhibition ||| columns global	count=1
function	and inference this routine ||| stats infer	count=1
function	that artificial ||| variable	count=1
function	histogram ||| plot histogram	count=1
function	initialized in ||| init	count=1
function	the active [function_2] ||| [function_2] [function_1]	count=2
function_arg	returns the nth ||| get record n	count=1
function	id is 0xff ||| id	count=1
function	[function] p ||| [function] valid estimator	count=2
function_arg	[function_1] the value ||| [arg_2] [function_1]	count=2
function_arg	of [arg_2] ||| [function_1] [arg_2]	count=1
class	for temporalmemory instances ||| memory	count=1
function	a sequence of ||| models get fields	count=1
class	file ||| record stream	count=2
arg	the coordinate to a ||| coordinate	count=1
module	sequence of periodicactivityrequest elements ||| opf	count=2
function	inference ||| do inference	count=1
function	[function_1] string of ||| [function_1] [function_2]	count=1
class	initialize ||| memory shim	count=1
function	model and store ||| model	count=1
function	the indices of the ||| cell indices	count=1
function	for ||| distribution	count=1
module	must be ||| frameworks opf	count=1
function	svd is ||| svd	count=1
module	the simulated output ||| algorithms	count=1
function	another exception that is ||| exception	count=1
arg	the permanence [arg_2] ||| [arg_2] [arg_1]	count=2
module	of iterations ||| opf	count=1
function	metrics ||| set logged metrics	count=1
function	utility function to get ||| get caller	count=1
function	[function_1] models ||| [function_2] clear [function_1]	count=1
class	that is initialized in ||| spatial	count=1
function	the segment with the ||| matching segment	count=1
function	[function_1] [function_2] the ||| [function_2] [function_1]	count=8
function	the maximum number ||| max	count=2
class	this metric ||| aggregate metric	count=1
function	of segments for ||| segments	count=1
arg	and optionally ||| particlestate newbest	count=1
function	model names that are ||| model names	count=1
class	the ||| stream iface	count=3
arg	first set of sequences ||| seqlength	count=1
function	job by the ||| job	count=1
arg	message to the ||| message	count=1
arg	the status_completed state ||| conn jobid alreadyrunning	count=1
function	true if our local ||| is	count=1
function_arg	[function_1] the cells ||| [function_1] cls [arg_2]	count=3
arg	sorted output file ||| chunkcount outputfile	count=1
class	called by the node ||| backtracking tm	count=1
module	state of ||| regions	count=4
function	[function_1] print the ||| [function_1] [function_2]	count=1
function	paths ||| config paths	count=2
arg	sorted output file ||| chunkcount outputfile fields	count=1
function	generate ||| generate	count=18
function	global inhibition performing global ||| inhibit columns global	count=1
class	[class_1] file with ||| [class_1] [class_2]	count=6
class	the file ||| record stream iface	count=2
function	plot of ||| trace plot	count=1
function	for ||| get fields for	count=1
function	schema ||| schema	count=2
function	[function_1] a string ||| [function_2] [function_1]	count=1
function	an opf [function] ||| validate opf [function]	count=1
function	[function_1] models that ||| [function_1] [function_2]	count=3
function	update a number ||| update stats	count=1
function_arg	[function_1] in state ||| [function_1] indices [arg_2]	count=3
function	orphaned ||| orphaned	count=1
arg	overlap ||| overlaps activecolumns	count=1
arg	[arg] dict ||| itemname [arg]	count=2
function	percent of [function_2] ||| [function_1] [function_2]	count=1
arg	request ||| cmdline jobhash	count=1
function	be greater ||| init	count=1
class	model instance given a ||| model	count=1
function	region ||| region	count=2
function	length for [function_2] ||| [function_2] [function_1]	count=4
function	function returns the ||| get	count=1
function	a histogram of the ||| histogram	count=1
function_arg	[function_1] [arg_2] possible choosing ||| [function_1] cls connections random [arg_2]	count=1
function_arg	[function_1] state ||| [function_1] [arg_2]	count=7
function	compute the [function_2] ||| [function_2] [function_1]	count=1
function	and preserves the current ||| current	count=1
function_arg	to segment [arg_2] ||| [function_1] [arg_2]	count=1
function	returns ||| get active	count=1
class	method to ||| temporal memory	count=1
arg	a cell ||| cell	count=1
module	[module_1] this ||| [module_1] [module_2]	count=4
function	to the phase ||| phase	count=2
function	return the best ||| best	count=3
function_arg	passes [function_1] [arg_2] completion ||| frameworks opf [function_1] cb [arg_2]	count=1
module	[module] parameter ||| [module]	count=1
function_arg	to [arg_2] ||| [arg_2] [function_1]	count=1
function	in memory chunk ||| chunk	count=1
arg	and a prediction ||| prediction record result	count=1
class	in a ||| spatial	count=1
function	w ||| w	count=1
function	params [function_2] ||| [function_1] [function_2]	count=1
function	segment update ||| add to segment updates	count=1
function	returns the synapses ||| synapses	count=2
function	the segment [function_2] ||| [function_2] [function_1]	count=4
function	the end and returns ||| end	count=1
function	[function] record ||| [function] next record	count=1
function_arg	private [arg_2] ||| [arg_2] [function_1]	count=3
arg	w coordinates ||| coordinates w	count=2
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=116
function	needed length for a ||| length	count=1
function	a function is a ||| is	count=1
function	number of synapses ||| get num synapses	count=2
class	runner's _hypersearchjob ||| hyper	count=1
class	file is ||| file record stream	count=1
function_arg	indices of [arg_2] ||| [function_1] [arg_2]	count=2
function	the cell ||| cell	count=3
arg	request but ||| cmdline	count=1
arg	records - a ||| key chunkindex fields	count=1
function	a parameter of ||| parameter	count=2
function	of the column ||| column	count=1
function	performing global ||| global	count=1
function_arg	[function_1] cells ||| [function_1] cls [arg_2]	count=2
function	end of ||| end	count=2
class	worker ||| worker	count=1
function	sequence of model records ||| models get	count=1
function	modules in the experiment ||| experiment	count=1
function	function description in base ||| top down compute	count=5
function	[function_1] saved ||| [function_2] [function_1]	count=1
function	additional specs in three ||| get additional specs	count=2
function	generates ||| generate	count=3
class	given model instance ||| opfdummy model runner	count=1
function	jobids for jobs in ||| get active jobs for	count=2
class	the ||| reader	count=1
function	of models that ||| models	count=1
arg	ground truth ||| accumulatederror historybuffer steps	count=1
function	raw ||| compute raw	count=1
class	a sequence of ||| activity	count=2
arg	matches 'curvalue' ||| jobid fieldname newvalue curvalue	count=1
function	return the interal ||| get	count=2
function_arg	passes the "finish [function_1] [arg_2] completion ||| frameworks opf model control [function_1] cb [arg_2]	count=1
module	the permanences of ||| algorithms	count=1
function	the given swarm's state ||| set swarm state	count=1
class	value for a ||| spatial	count=1
function	for a given encoder ||| encoder	count=1
module_class	the inference type ||| swarming inference type	count=1
class	us back at the ||| stream	count=1
arg	@param categoriesout -- the ||| categoriesout	count=1
module	instantiate ||| frameworks opf	count=2
class	given hypersearch job ||| hyper search runner	count=1
function	property and return it ||| get	count=4
function	local history buffer ||| shifted ground truth	count=1
function	internal [function_2] ||| [function_2] [function_1]	count=1
module	phase ||| frameworks opf	count=1
arg	a message to ||| level message	count=1
class	must be greater ||| phase	count=1
function	the labels ||| labels	count=1
function	a synapses that is ||| init perm	count=1
function	inhibition performing global ||| global	count=1
class	sets ||| spatial pooler	count=12
class	this model ||| gram model	count=1
function	[function_1] parameter of ||| [function_2] [function_1]	count=1
function	predicted segment decrement ||| get predicted segment decrement	count=1
module	to read [module] ||| [module]	count=1
function	a map from ||| map	count=1
function	the record ||| record	count=1
class	this phase ||| phase spec learn and	count=1
function	the [function] output ||| get [function] output field	count=1
arg	in the ||| sprintidx	count=2
function	one ||| compute	count=1
function	phase 2 for the ||| phase2	count=1
function	new ||| new	count=7
function	[function] it ||| slow [function]	count=1
function	test that we can ||| test	count=1
class	file ||| reader	count=1
function	see also htmpredictionmodelcontroldisabletplearningcb ||| enable tplearning cb	count=1
arg	status ||| status	count=1
function	[function_1] [function_2] based on results obtained ||| [function_1] [function_2] globalbestposition	count=2
function	range [function_2] ||| [function_1] [function_2]	count=2
arg	type dtype ||| dtype	count=1
arg	of records records - ||| chunkindex fields	count=1
function	with retries ||| rows with retries	count=1
function	[function_1] [function_2] ||| get matured [function_1] [function_2]	count=3
function	numpy ||| numpy	count=1
arg	the status ||| jobid status	count=1
function	method is called during ||| serialize extra	count=1
function	[function_1] the models ||| [function_2] [function_1]	count=3
class	the file again) ||| iface	count=1
class	returns a randomly ||| spatial	count=1
class	sequence of periodicactivityrequest ||| periodic activity mgr	count=2
arg	inputpattern ||| inputpattern	count=2
function	within the range from ||| range from	count=2
function	return info on all ||| get	count=1
function	[function_1] [function_2] instance ||| [function_1] [function_2] instance	count=1
module	a value over ||| data generators	count=1
function	labels ||| label	count=5
module_class	[module_1] prediction ||| frameworks [module_1] [class_2]	count=1
function	return a dict of ||| get results	count=1
function	[function_1] [function_2] ||| [function_1] least allocated [function_2]	count=18
function_arg	input [arg_2] ||| [arg_2] [function_1]	count=2
function	file and store ||| config file	count=2
arg	of rows ||| reader writer column	count=1
function	of paths to search ||| paths	count=1
function	start ||| start	count=1
class	of ||| activity	count=2
function	centre offsets and spread ||| centre and spread	count=1
class	stream as ||| stream iface	count=1
function	[function_1] cumulative n ||| [function_2] [function_1]	count=1
function	a given encoder ||| encoder str	count=1
function	[function_1] [function_2] ||| knnanomaly classifier region [function_1] [function_2] category	count=1
function_arg	with the [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] minimum ||| [function_2] [function_1]	count=1
function	value of ||| get	count=1
function	with the fewest ||| least allocated	count=1
function	best result [function_2] ||| [function_1] model id [function_2]	count=1
function	[function_1] from ||| [function_1] [function_2] c i s	count=3
function	args ||| var args	count=1
function	be status_notstarted ||| with retries	count=1
arg	to end ||| end	count=2
function	should only have ||| update job results	count=3
function	sets the local ||| set local	count=2
function	fetch jobids for jobs ||| jobs for	count=2
function	completion message that ||| completion message	count=2
arg	on transient mysql ||| tableinfo fieldstomatch selectfieldnames	count=1
function	results generated by ||| results	count=1
arg	filepath path of ||| filepath	count=1
arg	patterns to inputpattern and ||| inputpattern topkcategories	count=1
arg	list of values 'values' ||| values freqcounts	count=1
function	of ||| get adaptive	count=1
function	from the end ||| from end	count=3
function	for [function] ||| get complex [function] label lookup	count=1
module	in note [module_2] ||| [module_2] [module_1]	count=1
arg	less than minpermanence and ||| minpermanence minnumsyns	count=1
function_arg	[function_1] segment ||| grow [function_1] cls connections random [arg_2]	count=1
function	the list of labels ||| metric labels	count=2
function	of a ||| get	count=1
class	returns a randomly ||| pooler	count=1
function	active synapses ||| active	count=2
function	a list [function_2] ||| [function_2] [function_1]	count=1
function	adds an image ||| add2darray	count=1
function	numbers [function_2] ||| [function_2] [function_1]	count=2
function	artificial [function_2] ||| [function_2] [function_1]	count=4
class	value ||| claclassifier region	count=2
arg	and j ||| j	count=1
arg	minpermanence and ||| minpermanence	count=2
function	of model ||| get fields	count=1
function	job that is ||| resume job no	count=1
function	[function_1] a dict ||| [function_2] [function_1]	count=1
function	_getonematchingrownoretries(), ||| one	count=1
arg	request this is ||| client cmdline clientinfo clientkey	count=1
class	encoder for [class_2] ||| [class_2] [class_1]	count=2
class	a moving ||| moving	count=1
function	[function_1] determines if ||| [function_1] [function_2]	count=1
function	delete the ||| delete model	count=1
function	a + ||| sum	count=1
function	[function_1] min ||| [function_2] [function_1]	count=1
function	[function_1] [function_2] ||| [function_1] sp [function_2]	count=1
function	with ||| rows with	count=1
function	update the inference ||| update inference	count=3
function	changes if any ||| to db	count=1
function	map from number to ||| number map	count=1
function	potential segment update the ||| to segment updates	count=1
function	label for ||| label	count=1
function	worker ||| get worker	count=1
class	a version ||| tmregion	count=1
module	and return the following ||| swarming exp_generator	count=2
function	get the predicted ||| get predicted	count=1
function	insert a ||| insert and start	count=1
function	hyperplanes used ||| hyperplanes	count=1
class	us back at ||| record	count=1
function	the probability of ||| probability	count=1
function_arg	[function_1] the bookmark ||| data stream reader get [function_1] [arg_2] range	count=1
function	[function_1] description file ||| [function_2] [function_1]	count=1
class	this metric if ||| metric	count=1
function	will be called only [function_1] [function_2] 2 ||| [function_2] [function_1]	count=2
class	its [class_2] ||| [class_2] [class_1]	count=1
arg	range of rows ||| reader writer column start	count=1
function	spatial pooler implementation ||| spimp	count=1
module	returns whether ||| swarming exp_generator	count=1
class	creates ||| meta info	count=1
function_arg	[function_1] start to ||| [function_1] knn [arg_2]	count=5
arg	takes an encoded output ||| encoded	count=1
function	updates the minimum duty ||| update	count=1
function	from the input record ||| input	count=1
function_arg	[function_1] cells passed ||| [function_1] [arg_2]	count=2
class	periodicactivityrequest ||| periodic activity	count=2
function	percent ||| pct overlap	count=1
class	the jobs table for ||| jobs dao	count=1
arg	- a list ||| chunkindex	count=1
function	delay the run of ||| delay	count=1
function	seconds [function_2] ||| [function_2] [function_1]	count=2
function	a sequence of periodicactivityrequest ||| init	count=2
function	sets the current model ||| set	count=1
function	that match a ||| for	count=1
function	best result ||| best	count=1
class	generated permanence value for ||| pooler	count=1
function_arg	[function_1] queue ||| [function_1] upcoming partition ids [arg_2]	count=1
function	called during [function] with ||| [function] serialize extra	count=2
arg	active swarms [arg] ||| [arg]	count=3
arg	proposed changes to ||| activestate	count=1
function	[function_1] anomaly ||| [function_1] [function_2]	count=1
function	a job ||| job set	count=2
arg	of maxbuckets ||| maxbuckets	count=1
function	the cell activity ||| cell	count=1
function	[function_1] per ||| [function_2] [function_1]	count=14
function	insert a new unique ||| insert	count=1
function	[function_1] inference stats ||| [function_1] [function_2]	count=1
function	to delay ||| delay	count=1
function	pretty [function_2] ||| [function_1] [function_2]	count=5
arg	groundtruth ||| groundtruth	count=1
class	phase ||| phase spec	count=1
function	of a cell in ||| cell	count=1
function	random number ||| random	count=1
arg	a metric ||| metric	count=1
function	a specific [function] by name ||| get report [function]	count=1
function	an interface ||| prediction logger	count=2
function_arg	[function_1] [arg_2] numpy arrays values in ||| [function_1] [arg_2] out	count=8
function	bucket ||| bucket index	count=1
function	increment amount for ||| syn perm	count=2
arg	and associated ||| inputvector truecatindex partition	count=2
function	value of 1 field ||| field	count=2
function	calculate distances in the ||| calculate distances	count=1
function	ephemeral [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] bucket ||| [function_1] [function_2]	count=1
module	database "semi-private" class ||| database	count=1
arg	request but only ||| cmdline	count=1
arg	given [arg] ||| [arg]	count=3
arg	classifier to associate ||| partitionid issparse	count=1
arg	log(exp ||| out	count=1
function	check for [function_2] ||| [function_1] [function_2]	count=2
arg	input sample the actual ||| patternnz classification	count=2
arg	[arg_1] it describes ||| [arg_2] [arg_1]	count=6
function	in base py ||| get bucket values	count=1
function	updated frequency counts ||| frequency counts	count=2
class	tm @param ||| backtracking tm	count=1
function	list from ||| from	count=1
module	and returns the ||| swarming	count=1
function_arg	number of [arg_2] ||| [arg_2] [function_1]	count=1
class	state ||| hs state	count=1
class	configuration [class_2] ||| [class_2] [class_1]	count=8
function	add labels from the ||| add label	count=1
function	[function_1] jobid ||| [function_2] [function_1]	count=3
arg	singularvalues ||| singularvalues	count=1
function_arg	[function_1] [arg_2] ||| [function_1] str array format [arg_2]	count=8
function	given category ||| process category	count=1
module	the permanences ||| algorithms	count=1
function	category ||| process category	count=1
arg	status_completed state ||| jobid alreadyrunning	count=2
class	hypersearch [class_2] ||| [class_1] [class_2]	count=2
function_arg	[function_1] segment passed ||| [arg_2] [function_1]	count=3
arg	it's ||| swarmid	count=1
function	print a [function_2] ||| [function_1] [function_2]	count=1
function	field ||| field meta data	count=2
function	the 'category' [function_2] ||| [function_2] [function_1]	count=1
class	predictionlogger object which is ||| runner	count=1
module	0 ||| frameworks opf	count=2
class	a version ||| knnanomaly	count=1
function	the connections in ||| connections	count=1
function	printouts for debugging ||| null distribution	count=1
arg	in ||| rng	count=1
function	for concurrency ||| for concurrency	count=2
function	inhibition local ||| local	count=1
function	returns log(exp [function] ||| [function]	count=2
class	discrete probability distribution ||| discrete proposal	count=1
class	given model ||| model	count=1
function_arg	[function_1] [arg_2] ||| [function_1] segment [arg_2]	count=4
class	calculate ||| svmclassifier node	count=1
function	[function_1] region's encoder ||| [function_1] classifier only [function_2]	count=1
arg	fields given ||| fields	count=2
module_class	the model in ||| frameworks opf model	count=1
function	[function] be ||| finish [function]	count=1
arg	the permanence values ||| permanence	count=1
function	the indices of ||| cell indices	count=1
function_arg	a job [arg_2] ||| [function_1] field [arg_2]	count=1
function	values ||| values	count=1
class	hypersearch ||| hypersearch	count=2
function	generated ||| init	count=1
arg	[arg_1] i ||| [arg_1] [arg_2]	count=2
function	init all of ||| init	count=1
function	the label ||| label	count=3
function	min [function_2] ||| [function_1] [function_2]	count=1
class	permanence ||| spatial pooler	count=2
function_arg	[function_1] next n ||| [arg_2] [function_1]	count=1
function_arg	returns [function_1] [arg_2] are numpy arrays values ||| [function_1] [arg_2] out	count=2
function	[function_1] metrics ||| [function_2] [function_1]	count=2
function	and ||| and err	count=1
function_arg	returns a range [function_1] [arg_2] if 'bookmark' ||| [function_1] [arg_2]	count=6
function	job is [function_2] ||| [function_1] [function_2]	count=1
class	temporalmemory ||| memory	count=1
class	this ||| driver	count=1
function	of swarm generations ||| swarm generations	count=1
function_arg	a file [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] segment ||| [function_1] cls connections random [arg_2]	count=2
function	to display a histogram ||| plot histogram	count=1
function	[function_1] partition ids ||| [function_1] [function_2]	count=2
module_class	[module_1] encoder for ||| [module_1] coordinate [class_2]	count=3
function	logger object for the ||| init logger	count=1
function_arg	active cells [arg_2] ||| [arg_2] [function_1]	count=1
function	cell index in ||| cell	count=1
arg	'newstate' is ||| swarmid newstatus	count=1
class	writer non-temporal prediction log ||| non temporal prediction log	count=1
function	synapses on the ||| synapses	count=1
module	file to ||| data	count=2
arg	a vector ||| vector	count=2
module	file ||| data	count=3
class	model's predictionlogger ||| opfmodel runner	count=2
function	main loop of the ||| run task main loop	count=1
class	the model ||| model	count=4
function	numbers [function_2] ||| [function_1] [function_2]	count=2
function	set a single custom ||| set	count=2
function	[function_1] message that ||| [function_1] [function_2]	count=4
class	csv file is ||| file	count=1
function	+ exp b a ||| log sum exp	count=1
function	[function_1] memory chunk ||| [function_1] [function_2]	count=1
class	custom configuration ||| configuration	count=2
function	method for ||| get	count=2
class	inference type ||| inference type	count=4
class	return ||| configuration base	count=1
arg	[arg_1] associated ||| [arg_1] [arg_2]	count=1
function	an svm model ||| svm	count=1
function	+ ||| log sum	count=1
function	same job by ||| job	count=1
class	the best model this ||| opfmodel runner	count=1
function	the current active ||| active	count=1
function	a bookmark ||| bookmark	count=1
function_arg	implemented in [arg_2] ||| [function_1] [arg_2]	count=1
function	for querying ||| get fields for active	count=1
function	the anomaly ||| anomaly	count=5
function	a bit ||| bit	count=1
function	per [function_2] ||| [function_1] [function_2]	count=3
function	for ||| for	count=13
class	file to ||| stream reader	count=1
class	predicted state and the ||| backtracking	count=1
arg	range of ||| start	count=1
function	the first ||| first non full	count=1
function	a job ||| job increment int	count=1
function	an interface to write ||| prediction logger	count=2
function	[function] be performed ||| finish [function]	count=1
function	worker completion [function_2] ||| [function_2] [function_1]	count=4
class	active state from ||| backtracking	count=1
function	return the name ||| get name	count=2
function	performs local inhibition local ||| columns local	count=1
arg	set of sequences ||| seqlength	count=1
function	attempt to ||| or get unique job no	count=1
function	[function_1] function name ||| [function_2] [function_1]	count=1
module	records that ||| frameworks opf	count=1
function	a randomly generated ||| init perm	count=1
function_arg	[function_1] [arg_2] ||| [function_1] from end [arg_2]	count=1
function	of sequences ||| mm get	count=1
function	[function_1] count ||| [function_1] [function_2]	count=10
class	a sequence of periodicactivityrequest ||| activity	count=2
class	construct the tm @param ||| backtracking tm	count=1
class	phase ||| iteration phase	count=1
function	local ||| local	count=2
function	as a float ||| float	count=2
class	runs it ||| runner	count=1
function	the --descriptionfromfile option ||| file option	count=1
function	model's pickle file ||| model pickle file	count=1
class	runs it inline for ||| hyper search runner	count=1
function	compute a ||| compute	count=1
function	inference this routine will ||| infer	count=1
module_class	[module_1] model ||| [module_1] two gram [class_2]	count=1
module	callbacks ||| opf	count=1
function	insert ||| insert	count=2
class	[class] this is ||| [class]	count=2
function	percent of ||| pct overlap	count=1
class	best ||| hs state	count=3
function	update a number of ||| update	count=1
class	to the model ||| previous value model	count=1
class	to predictionwriteriface ||| adapter	count=2
class	configuration file with ||| custom configuration file	count=2
function	base py ||| get bucket values	count=1
arg	rows ||| reader writer column	count=1
class	distribution ||| distribution	count=2
function	index ||| index	count=3
arg	by ||| cls	count=1
function	dimensions of ||| get dimensions	count=1
function_arg	generate the [arg_2] ||| [function_1] encoder str [arg_2]	count=2
function	returns the [function_2] ||| [function_2] [function_1]	count=67
class	discrete probability ||| discrete proposal	count=1
function	attempt to insert a ||| insert or get unique	count=1
function	closest to ||| closest	count=1
arg	the points in ||| centerindex radius dimensions	count=1
function	sequence of model records ||| get fields	count=1
module_class	[module_1] experiment description ||| [module_1] [class_2]	count=2
function	[function_1] ids that ||| [function_1] err model [function_2]	count=1
function	inference state ||| infer	count=2
class	periodicactivityrequest elements ||| periodic activity mgr	count=2
function_arg	[function_1] proto object ||| [function_1] [arg_2]	count=1
function	of sequences each ||| get	count=1
function	the permanence amount that ||| syn perm	count=1
function	overlap duty [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] verbosity level ||| [function_2] [function_1]	count=1
function	main loop ||| task main loop	count=1
class	non-temporal prediction [class_2] ||| [class_1] [class_2]	count=1
function	[function_1] the 'timestamp' ||| [function_2] field [function_1]	count=1
function	the python logging ||| enable logging	count=1
class	hypersearch job and emits ||| hyper search runner	count=1
module_class	of ourself from ||| regions svmclassifier node	count=1
function	learning iteration [function_2] ||| [function_2] [function_1]	count=2
arg	when implementing ||| patternnz inputtsrecordidx rawinput	count=1
function	returns instance ||| get algorithm instance	count=3
module_class	[module_1] inference ||| [module_1] [class_2]	count=6
arg	classifier within ||| param	count=2
function	a string ||| string	count=3
class	[class_1] file ||| [class_2] [class_1]	count=6
arg	results ||| modelid results	count=1
function	instantiates a _hypersearchjob ||| hyper search job	count=1
function_arg	[function_1] [arg_2] ||| [function_1] option [arg_2]	count=24
class	update ||| results db	count=1
function	[function_1] [function_2] ||| [function_1] classifier [function_2]	count=6
class	permanence value ||| spatial pooler	count=1
class	temporalmemory instances ||| temporal memory	count=1
function	shared cjdao clientjobsdao instance ||| client jobs db	count=1
arg	- a list of ||| key chunkindex	count=1
arg	in the "running" state ||| paramshash particlehash	count=1
class	new model instance ||| model	count=1
function	[function_1] exit ||| [function_1] [function_2]	count=1
function	the stored checkpoint for ||| model checkpoint	count=1
module	[module] is ||| [module]	count=1
function	set the random ||| set	count=1
function	spatial [function_2] ||| [function_1] [function_2]	count=1
function_arg	figure [arg_2] ||| [arg_2] [function_1]	count=2
function	about ||| caller info	count=1
arg	niters [arg_2] ||| [arg_2] [arg_1]	count=8
class	greater than 0 ||| phase	count=1
arg	[arg] as a ||| [arg]	count=1
arg	the 'with' block ||| yupe value traceback	count=1
function	see also htmpredictionmodelcontroldisablesplearningcb ||| enable splearning	count=1
class	stored ||| classifier helper	count=1
function_arg	returns a [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	dict type ||| dict	count=1
module_class	the given [class_2] ||| [module_1] [class_2] element	count=1
arg	maxbuckets ||| maxbuckets	count=1
function	path ||| path	count=5
module	elements ||| frameworks	count=2
function_arg	records starting [arg_2] ||| [arg_2] [function_1]	count=6
function_arg	job type [arg_2] ||| [function_1] [arg_2]	count=1
function	as orphaned this ||| as orphaned	count=2
function	the permanence increment ||| permanence increment	count=2
function	calling ||| extract calling	count=1
function	a synapses ||| init	count=1
function	from the ||| list from file	count=1
arg	sample the actual ||| patternnz classification	count=3
class	an inference is made ||| inference	count=1
function	given category file ||| category file	count=1
class	sequence ||| periodic	count=2
function	[function_1] search ||| [function_2] [function_1]	count=3
function	jobs in ||| jobs	count=2
function	initialized ||| init perm	count=1
function	learning active state given ||| learn	count=1
arg	start to end ||| start end	count=6
module	including ||| opf	count=1
function	remove any stored records ||| delete	count=1
function	construct a _htmclassificationrecord ||| construct classification record	count=2
function	with retries ||| matching row with retries	count=1
function	opf task against ||| run	count=1
function	and add ||| and	count=1
function	numbers that match a ||| numbers for	count=1
class	end noninclusive ||| knnanomaly classifier region	count=1
class	category that best ||| knnclassifier	count=1
class	_hypersearchjob ||| hyper search	count=1
module	correct parameters for the ||| opf	count=1
function	returns ||| get potential	count=2
function	schema this implementation loads ||| schema	count=1
class	instances's ||| v2	count=1
function	initialized in a ||| init	count=1
function_arg	the top [arg_2] ||| [function_1] wcoordinates cls coordinates [arg_2]	count=1
function	[function_1] and reactivate ||| [function_2] [function_1]	count=3
arg	minpermanence ||| minpermanence minnumsyns	count=1
class	a single prediction ||| prediction	count=1
arg	and cache ||| filename statsinfo maxsamples filters	count=1
function	[function] cycle ||| [function] cycles	count=1
function	[function_1] [function_2] ||| [function_2] segment [function_1]	count=3
class	model instance given ||| model	count=1
function	the settings [function_2] ||| [function_2] [function_1]	count=2
function	a worker ||| worker	count=1
function	don't need ||| members	count=2
class	our member variables ||| backtracking tm	count=1
function	stream [function_2] ||| opf description iface normalize [function_1] [function_2]	count=4
function	jobs in the table ||| get active jobs	count=2
function	sums down the ||| lscsum0	count=1
function	given as percent of ||| pct	count=1
class	the stream ||| stream reader	count=1
function	neighborhood of ||| neighborhood	count=1
function	keys ||| keys	count=1
function	active [function_2] ||| [function_1] [function_2]	count=7
class	classifier ||| htmprediction model classifier	count=2
function_arg	histogram [arg_2] ||| [function_1] [arg_2]	count=1
function	new segment ||| new segment	count=2
function	[function_1] a pattern ||| [function_1] [function_2]	count=2
function	segments for a ||| segments	count=1
class	[class_1] stream ||| [class_2] [class_1]	count=3
class	a randomly generated ||| spatial	count=1
function	[function_1] for a ||| [function_1] [function_2]	count=3
arg	edits the ||| cls properties	count=2
function_arg	returns a range [function_1] [arg_2] 'bookmark' ||| data record stream iface [function_1] [arg_2] range	count=2
function	of printouts for ||| distribution	count=1
function	construct a ||| construct classification record	count=2
function	checkpoint from ||| checkpoint	count=1
function	a metric over ||| metric from trace	count=1
function	see also htmpredictionmodelcontroldisabletplearningcb ||| tplearning cb	count=1
arg	[arg] flat ||| astate [arg]	count=1
function	is initialized in a ||| perm	count=1
class	than 0 ||| iteration phase	count=1
function	dated potential segment update ||| add to segment updates	count=1
function	1 field in ||| field	count=1
function	utility function to get ||| get	count=1
function	matrix this [function_2] ||| [function_2] simple coinc [function_1]	count=1
arg	input sample ||| recordnum patternnz classification learn	count=1
arg	if 'newstate' ||| swarmid newstatus	count=1
arg	column the overlap ||| overlaps activecolumns	count=1
class	configuration settings from their ||| configuration	count=1
function	jobs ||| jobs	count=3
class	iteration returns ||| iteration	count=1
function	state in the ||| state	count=1
function	[function] column ||| [function]	count=3
function	[function] field ||| [function] scalar	count=1
class	a listing of experiments ||| hyper search	count=1
class	description ||| description	count=1
class	is initialized in ||| pooler	count=1
function	the same job by ||| job insert	count=1
function	a record a ||| record	count=1
function_arg	mangled private [arg_2] ||| [function_1] member name [arg_2]	count=3
class	connection policy typically there ||| connection	count=1
class	classifier ||| model classifier helper	count=2
arg	of simple and hub ||| hubs	count=1
class	experiment description ||| description	count=1
function	list of ||| get ephemeral	count=4
function	compute a log ||| compute log	count=2
function	with [function_2] ||| [function_2] [function_1]	count=2
arg	the coordinate to a ||| cls coordinate	count=1
function	column return [function_2] ||| [function_2] [function_1]	count=7
class	method ||| pooler	count=3
function	[function_1] partition ||| [function_2] [function_1]	count=2
function	writes data to ||| write to	count=1
arg	large binary states ||| filepath	count=1
class	iterations ||| iteration	count=1
function	returning a python list ||| list	count=1
function_arg	[function_1] the segment ||| [function_1] cls connections random [arg_2]	count=2
function	returns the input in ||| get	count=1
class	hypersearch job and emits ||| hyper search	count=1
function	return the current active ||| get active	count=1
module_class	[module_1] filter ||| [module_1] recordsensorfilters [class_2]	count=1
function	[function] 2 ||| [function] element	count=3
function	experiment [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] loop of ||| [function_2] [function_1]	count=1
function	as optparse callback ||| callback	count=1
function	api for ||| get	count=1
function_arg	clear [arg_2] ||| [arg_2] [function_1]	count=4
function	was least [function_2] ||| [function_1] [function_2]	count=1
module_class	place the model ||| frameworks opf model	count=1
arg	given a description dictionary ||| modelconfig loglevel	count=1
arg	random seed [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	segment [arg_2] ||| [arg_2] [function_1]	count=1
function	in nupic ||| get output	count=1
function_arg	[function_1] in state ||| [function_1] [arg_2]	count=1
module_class	and [class_2] ||| [module_1] [class_2] read std	count=2
class	model this ||| opfmodel runner	count=2
class	encoder this ||| encoder	count=2
function	given swarm's state to ||| state	count=1
function	labels for ||| labels	count=2
arg	non-equality operator for ||| other	count=1
function	set of hyperplanes ||| hyperplanes	count=1
function	[function_1] reasonable ||| [function_2] [function_1]	count=4
function	updates ||| update synapse permanence	count=1
function	internal filter ||| filter	count=1
function	that we don't need ||| members	count=2
function	to the ||| to	count=2
function_arg	[function_1] [arg_2] ||| [function_1] frequency counts [arg_2]	count=10
function	learning active state ||| learn	count=1
function	amount for active synapses ||| syn perm active	count=2
function	matrix this [function_2] ||| [function_2] coinc [function_1] ncoinc length activity	count=1
function	return it as a ||| get	count=3
arg	in a ||| jobid	count=1
arg	in ||| sprintidx	count=2
function	row [function_2] ||| [function_1] [function_2]	count=4
function	print [function_2] ||| [function_1] [function_2]	count=5
function	search from ||| search	count=1
function	[function_1] and reactivate ||| [function_2] running [function_1]	count=3
function	[function_1] factors ||| [function_1] [function_2]	count=3
function	the encoder name ||| encoder name	count=1
class	sequence ||| periodic activity mgr	count=4
function	pretty print ||| pretty print	count=3
function	from the end and ||| from end	count=1
arg	the keys ||| keys	count=1
function_arg	dataset of [arg_2] ||| [arg_2] [function_1]	count=1
function	set of results generated ||| results	count=1
function	local inhibition local ||| inhibit columns local	count=1
function	maximum number [function_2] ||| [function_1] [function_2]	count=6
function	list available ||| available	count=1
class	[class] in our ||| [class]	count=1
function	boost [function_2] ||| [function_1] [function_2]	count=9
class	the file to disk ||| record stream iface	count=1
function	an int if property ||| int	count=1
function	[function_1] sequence ||| previous value model reset [function_2] [function_1]	count=4
module_class	that [class_2] ||| [module_1] file [class_2]	count=2
function_arg	the distances [arg_2] ||| [function_1] [arg_2]	count=1
function	all models that ||| models	count=1
class	non-temporal prediction [class_2] ||| [class_2] [class_1]	count=1
function	boost ||| boost	count=3
function	metric over an indices ||| metric	count=1
function	control element from nupic ||| convert nupic	count=1
function	seed ||| seed	count=1
function	job is expected ||| job	count=1
function_arg	[function_1] specified modelid ||| [function_1] [arg_2]	count=2
function	[function] record that ||| [function] next record	count=1
function	stored checkpoint for ||| checkpoint	count=1
function	returns sum ||| aggr sum	count=1
arg	of the inputdata ||| inputdata	count=1
function	time steps ||| time	count=1
function	overlap duty cycles ||| overlap duty cycles	count=3
function	ids this ||| ids	count=1
function	percent ||| percent	count=1
function_arg	score on [arg_2] ||| [arg_2] [function_1]	count=1
arg	c ||| c	count=2
arg	the nth ||| n	count=1
arg	- a list ||| chunkindex fields	count=1
function_arg	[function_1] pattern index ||| [function_1] [arg_2]	count=1
class	figure ||| plot	count=2
function	for all fields ||| all	count=2
arg	the cells [arg_2] ||| [arg_2] [arg_1]	count=4
function	job by ||| job insert	count=1
arg	of proposed changes to ||| activestate	count=1
function	internal filter variables for ||| init filter	count=1
function	[function_1] far and ||| [function_2] [function_1]	count=2
class	the file is ||| file record	count=1
function_arg	[function_1] c i ||| [arg_2] [function_1]	count=5
class	configuration ||| configuration	count=6
class	file again) ||| stream	count=1
class	the knn classifier ||| knnanomaly classifier	count=1
function_arg	indices of [arg_2] ||| [function_1] cls [arg_2]	count=1
class	remain in this phase ||| iteration phase spec learn	count=1
class	in this phase ||| iteration phase	count=1
function	of dict ||| get dict	count=2
function	guard - exit ensures ||| exit	count=1
class	if [class] ||| [class]	count=1
function	potential segment ||| segment	count=1
module	return ||| opf common_models	count=1
function	return the ||| get model	count=1
function	[function_1] verbosity ||| [function_1] sp [function_2]	count=1
function	clipped version ||| clipped	count=1
function	any to delay the ||| delay	count=1
function	returns a sequence ||| get	count=2
module_class	the [class_2] ||| frameworks [module_1] [class_2]	count=2
function	this model ||| model	count=1
function	[function_1] for ||| [function_2] [function_1]	count=17
class	us back ||| record stream iface	count=1
function_arg	--descriptionfromfile option [arg_2] ||| [arg_2] [function_1]	count=3
function	[function] classifier ||| [function] get	count=2
function	predicted => ||| predicted	count=1
function_arg	print a message ||| print level message	count=2
function_arg	chunk of [arg_2] ||| [arg_2] [function_1]	count=2
class	history ||| bit history	count=1
class	to ||| record	count=1
class	see if the model ||| model	count=2
function	callback that [function_2] ||| [function_2] [function_1]	count=8
arg	b are numpy ||| a b	count=1
arg	member name [arg] member ||| [arg]	count=1
class	this is ||| model	count=1
function	return the absolute ||| get	count=1
function	initialize ||| init	count=11
function	[function_1] [function_2] ||| [function_2] dict [function_1]	count=1
function	the job type ||| type	count=1
arg	in the output dictionary ||| output	count=1
function_arg	returns a range [function_1] [arg_2] 'bookmark' ||| data stream reader [function_1] [arg_2] range	count=2
function	be saved ||| init	count=1
function	than 0 ||| init	count=1
function	performing global ||| columns global	count=1
function	get the predicted segment ||| get predicted segment	count=1
class	xml configuration ||| custom configuration	count=2
function_arg	[function_1] [arg_2] name is one whose ||| [function_1] member name [arg_2]	count=2
function	float ||| float	count=2
module	that is initialized ||| algorithms	count=1
function	region's encoder that ||| encoder	count=1
function	[function_1] default metrics ||| [function_2] [function_1]	count=1
function	add the [function_2] ||| [function_1] [function_2] start end	count=2
arg	@param c column ||| c	count=1
function	bucketinfo() and topdowncompute() methods ||| top down mapping	count=2
function	the custom ||| custom	count=2
function	inference this routine will ||| stats infer	count=1
class	inference is ||| inference element	count=1
function	inputs ||| classification record	count=1
function	new hypersearch job and ||| run new search	count=1
function	synapses of columns ||| columns	count=1
class	a new model ||| model	count=1
module	in generating a ||| data generators	count=1
function	[function_1] the classifier ||| [function_2] [function_1]	count=10
function	value for ||| init perm	count=1
module	the given ||| swarming	count=2
function	model and store it ||| model	count=1
function	htmpredictionmodelcontroldisablesplearningcb ||| splearning	count=1
function	[function_1] max new ||| [function_2] [function_1]	count=2
class	file to ||| reader	count=1
function	[function_1] default traces ||| [function_2] [function_1]	count=1
function	update the state in ||| write state	count=1
function	returns the cumulative n ||| get totaln	count=1
class	called by the ||| backtracking tm	count=1
arg	modelconfig a dictionary ||| modelconfig control	count=1
function_arg	accumulate [arg_2] ||| [function_1] frequency counts [arg_2]	count=1
arg	groundtruth from self ||| groundtruth	count=1
class	in the temporal ||| temporal	count=1
function	training pattern that ||| training pattern	count=1
function	given [function] position ||| get [function]	count=1
arg	new job request ||| cmdline jobhash	count=1
function_arg	[function_1] labelname to ||| [function_1] start end [arg_2]	count=4
function	initialize the bucket map ||| initialize bucket map	count=1
class	greater ||| phase	count=1
arg	position ||| particleid	count=1
function	experiment ||| experiment	count=4
class	predictionlogger ||| runner	count=1
function	loads custom ||| load custom	count=2
function	of ||| jobs get	count=1
function	output over time time ||| over time	count=1
class	most ||| error metric	count=1
function	the 'sequenceid' ||| sequence id	count=1
arg	choosing [arg] previous ||| cls connections [arg]	count=1
function	bucket [function_2] ||| [function_1] [function_2]	count=1
arg	csv file ||| modelinfo	count=1
function	max new [function_2] ||| [function_1] [function_2]	count=4
class	file ||| record stream iface	count=2
class	file to disk ||| stream iface	count=1
class	job ||| jobs dao	count=4
function	indices of the ||| indices	count=1
function	the stored checkpoint ||| model checkpoint	count=1
function	delete all models ||| clear all	count=2
function	the current active state ||| active state	count=1
module	parameters for the ||| opf	count=1
function	[function_1] json string ||| [function_1] [function_2]	count=4
arg	to proto object ||| proto	count=2
function	[function_1] the predictive ||| [function_2] [function_1]	count=1
function	into ||| encode into	count=1
class	segment is on ||| segment	count=1
function	to be a checkpoint ||| checkpoint	count=1
function	a worker [function_2] ||| [function_1] [function_2]	count=5
arg	the results string and ||| results	count=1
function	9 bytes of ||| get	count=1
function	in [function] ||| [function] get update	count=1
function_arg	[function_1] [arg_2] ||| [function_1] wcoordinates [arg_2]	count=2
class	exports a network as ||| network	count=1
function_arg	synapses [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] update period ||| [function_2] [function_1]	count=1
class	given hypersearch job ||| hyper search	count=1
arg	the on-times encountered ||| freqcounts title xlabel	count=1
function	the neighborhood of a ||| neighborhood	count=1
function	under the curve ||| under curve	count=3
function	callback that returns ||| get ephemeral	count=2
class	configuration file with the ||| configuration file	count=2
function	[function] the ||| [function] training	count=3
function_arg	returns a range [function_1] [arg_2] 'bookmark' ||| [function_1] [arg_2]	count=4
function	inference stats this ||| stats	count=1
function_arg	[function_1] [arg_2] are numpy arrays values ||| [function_1] [arg_2] out	count=9
arg	element [arg] to ||| [arg]	count=1
function	for a ||| for	count=2
function	both the standard base ||| all	count=2
function	checkpoint for the specified ||| model checkpoint	count=1
class	again) ||| record	count=1
arg	'boostfactors' size must match ||| boostfactors	count=1
arg	inputs ||| inputs	count=1
function	output values ||| output values	count=2
function	reset the learning and ||| reset	count=1
function	the model [function_2] ||| [function_2] [function_1]	count=1
class	for a synapses ||| pooler	count=1
function	timedelta to ||| timedelta	count=1
arg	request but ||| cmdline jobhash	count=1
function	a json ||| json	count=3
function	a metric over an ||| metric from trace	count=1
function	a list of tuples ||| list	count=1
function	create an ||| params	count=1
class	remain in this phase ||| phase	count=1
function	max [function_2] ||| [function_2] [function_1]	count=6
arg	of the cells passed ||| cls cells	count=1
function	context guard - exit ||| exit	count=1
function	a description ||| description	count=2
function	segment with the ||| matching segment	count=1
function	the maximum ||| max	count=2
function	have been checkpointed ||| fields for checkpointed	count=1
function_arg	[function_1] reaping a ||| [arg_2] [function_1]	count=3
class	a randomly generated permanence ||| pooler	count=1
class	back ||| stream	count=1
function	[function_1] and spread ||| [function_2] [function_1]	count=2
function	have been checkpointed ||| get fields for checkpointed	count=1
class	bits in pattern ||| pattern machine	count=1
function	a sequence of ||| jobs get fields	count=1
function_arg	[function_1] segment ||| [arg_2] [function_1]	count=5
function	[function_1] python script ||| [function_2] [function_1]	count=1
class	creates and ||| and infer	count=1
function	value to ||| metrics to	count=1
class	state and the ||| backtracking tm	count=1
function	returns the ||| get potential	count=1
arg	results string and last-update-time ||| jobid results	count=1
function_arg	[function_1] a mangled ||| [function_1] name [arg_2]	count=1
class	the xml configuration file ||| configuration file	count=2
function	[function] constructed by ||| [function]	count=3
arg	items to msg ||| msg	count=2
function	checkpoint ||| model checkpoint	count=1
module	the value of the ||| regions	count=2
class	[class_1] stream as ||| [class_2] [class_1]	count=3
arg	that defines ||| encoderdict	count=1
function	of the cell activity ||| cell	count=1
function	float if ||| float	count=2
function	of this model ||| model	count=1
function	@return [function_1] [function_2] ||| temporal memory monitor mixin [function_1] [function_2]	count=1
class	stream to ||| stream	count=1
function	[function_1] anomaly ||| [function_2] get [function_1]	count=1
function	list of ||| strip list	count=1
function	encode ||| encode	count=1
function	a new [function_2] ||| [function_1] [function_2] whichvars	count=1
function	return total number of ||| get num	count=1
function	converts an int ||| int to8byte	count=1
function	is closest to inputpattern ||| closest	count=1
function	id ||| id	count=3
function	[function_1] pooler instance ||| [function_2] [function_1]	count=1
class	instantiate ||| metrics	count=1
class	the knn classifier ||| classifier	count=1
function	network for ||| get network	count=1
function	segments per cell ||| segments per cell	count=3
function_arg	updates [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	population [arg_2] ||| [function_1] stability [arg_2]	count=3
function	network ||| network	count=1
function	search on a sorted ||| search	count=1
module	database "semi-private" class method ||| database	count=1
function	is closest ||| closest	count=1
function	the average [function_2] ||| [function_2] [function_1]	count=6
function	generates centre offsets ||| centre	count=1
function	returns the active ||| get active	count=2
function_arg	adds one [arg_2] ||| [function_1] [arg_2]	count=1
class	that the file ||| file record	count=1
function	record ||| record	count=6
function	new trace made up ||| trace	count=1
module	the metrics ||| swarming	count=1
arg	[arg_1] to end ||| [arg_1] [arg_2]	count=2
class	classifier ||| classifier helper	count=2
function_arg	[function_1] from ||| [arg_2] [function_1]	count=8
module	whether ||| exp_generator	count=1
function	[function_1] encoder that ||| [function_1] classifier only [function_2]	count=1
function	length for a list ||| segment flat list length	count=1
function	values of ||| get	count=1
function	[function_1] the inference ||| [function_2] [function_1]	count=4
function_arg	numpy [arg_2] ||| [function_1] str array format [arg_2]	count=2
module	printouts ||| algorithms	count=1
function	the additional specs in ||| additional specs	count=2
function	a float if property ||| float	count=2
function_arg	[function_1] n values ||| [function_1] [arg_2]	count=1
class	file ||| file wrapper	count=7
arg	from spatialoutput and ||| spatialoutput	count=1
function	initial ||| initial	count=1
function	returns the function ||| get	count=1
function	construct ||| construct classification record	count=2
function	that belong ||| for	count=1
arg	gets ||| loglevel	count=1
function	the min [function_2] ||| [function_2] [function_1]	count=1
module	iterations ||| frameworks opf	count=2
class	have ||| results	count=1
arg	prediction ||| prediction record	count=1
class	[class_1] worker parameters ||| [class_1] [class_2]	count=1
function	only if the current ||| if equal	count=1
module	[module_1] the ||| [module_1] [module_2]	count=1
function	state to ||| swarm state	count=1
function	the given records from ||| delete records from	count=2
arg	and ||| filename	count=1
function	updates the ||| update	count=4
class	the state ||| state	count=1
class	our history ||| bit history	count=1
function	[function_1] dataset ||| [function_2] [function_1]	count=1
function	of the 'timestamp' field ||| timestamp field	count=1
class	model ||| previous value model	count=1
arg	executes ||| outdir usagestr hsversion	count=1
function	number to [function_2] ||| [function_2] [function_1]	count=1
function	if the current ||| if equal	count=1
function_arg	[function_1] s ||| [function_1] [arg_2]	count=2
class	randomly generated ||| spatial pooler	count=1
class	xml configuration file with ||| configuration file	count=2
function	segment ||| to segment	count=1
function	determines if ||| duty cycles	count=1
function	and ||| and max	count=1
arg	inputpattern and the indices ||| inputpattern	count=1
function	predicted ||| get predicted	count=1
function_arg	[function_1] [arg_2] is one whose name ||| [function_1] [arg_2]	count=4
class	[class_1] distribution and ||| [class_1] [class_2]	count=2
arg	state to proto object ||| proto	count=1
arg	random seed ||| seed verbosity	count=1
module_class	[module_1] counterpart ||| [module_1] [class_2]	count=2
arg	modelid this function is ||| modelid	count=1
class	writer non-temporal ||| temporal	count=1
function_arg	distances [arg_2] ||| [arg_2] [function_1]	count=1
function	instantiate ||| init	count=2
function	an anomaly [function_2] ||| [function_2] [function_1]	count=2
function	all models in ||| models	count=1
function	propagate field statistics ||| set field statistics	count=1
class	record stream as a ||| record stream iface	count=1
class	the discrete probability distribution ||| discrete distribution	count=1
class	region ||| region identity	count=1
arg	permanence values ||| columnindex permanence	count=1
function	of columns [function] ||| avg columns [function]	count=1
function	sequence of job records ||| jobs get fields	count=1
function	centre offsets ||| centre	count=1
function	- exp b ||| diff exp	count=1
function	used in nupic ||| get output	count=1
function	bool if property ||| bool	count=1
function_arg	[function_1] segment passed ||| grow [function_1] cls connections random [arg_2]	count=1
function	[function_1] for the ||| [function_2] [function_1]	count=3
function	sent only ||| only	count=1
function	create a checkpoint ||| create model checkpoint	count=1
function	index of the record ||| record idx	count=1
function	the index ||| index	count=1
class	storage ||| stream	count=1
class	an ||| encoder	count=1
function	record [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] arrays values in a ||| [function_1] [arg_2]	count=8
module	[module] model's ||| [module]	count=2
function	the knn ||| knn	count=1
function	it to ||| to	count=1
function	interface ||| prediction logger	count=2
module	utility function that saves ||| frameworks opf	count=1
class	a sequence ||| periodic	count=2
class	in the storage ||| record stream iface	count=2
arg	permanence ||| permanence	count=2
function	to display a histogram ||| histogram	count=1
class	state of all ||| backtracking tm	count=1
function	'sequenceid' ||| sequence id	count=1
module	a dict and returns ||| swarming	count=1
class	prediction [class_2] ||| [class_1] [class_2]	count=2
function	encodings [function_2] ||| [function_2] [function_1]	count=6
arg	store all properties ||| cls	count=2
class	to ||| stream	count=2
function	return the distances between ||| get distances	count=1
module_class	[module_1] claclassifier ||| [module_1] [class_2]	count=2
function	the active [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] the error ||| [function_1] [function_2]	count=1
arg	[arg] if ||| [arg]	count=6
function	permanence ||| permanence	count=8
class	synapses ||| spatial	count=1
arg	minpermanence and deletes ||| minpermanence minnumsyns	count=1
function	the minimum [function_2] ||| [function_1] [function_2]	count=3
class	returns ||| htmprediction model classifier helper	count=1
function	a given encoder ||| encoder	count=1
arg	string of space-separated numbers ||| listobj	count=1
function_arg	recursively applies [arg_2] ||| [function_1] d [arg_2]	count=8
function	a json file ||| run with json file	count=1
function	for jobs in the ||| jobs for client	count=2
function	svd ||| svd	count=1
arg	calls runtimeelement ||| runtimeelement	count=1
function	[function_1] exit program ||| [function_2] [function_1]	count=1
function	of 1 field in ||| field	count=1
class	put us back at ||| iface	count=1
function	column return [function_2] ||| [function_1] [function_2]	count=4
function	level ||| sp	count=1
class	randomly generated ||| pooler	count=1
arg	further processing ||| input filterinfo	count=1
module_class	and updates ||| swarming opfmodel runner	count=1
class	encodes ||| record encoder	count=1
function	cell index in ||| get segment on cell	count=1
function	maximum number of synapses ||| get max synapses	count=1
function	[function_1] connected permanence ||| [function_1] [function_2]	count=1
arg	the input pattern ||| inputpattern	count=2
function	--descriptionfromfile option ||| file option	count=1
function	inhibition local ||| inhibit columns local	count=1
function_arg	[function_1] matches 'curvalue' ||| [arg_2] [function_1]	count=1
function	of the active cells ||| active cells	count=1
module_class	[module_1] [class_2] ||| [module_1] adaptive [class_2]	count=3
function	[function_1] models table ||| [function_1] [function_2]	count=2
function	have not been ||| below stimulus	count=2
function	failures that warrant retries ||| retry sql	count=1
function_arg	potentially change [function_1] [arg_2] ||| encoders adaptive scalar encoder [function_1] [arg_2] learn	count=1
function	calculate distances in ||| calculate distances	count=1
module	each key is the ||| frameworks opf	count=1
function	[function_1] the field ||| [function_1] [function_2]	count=1
class	state from the ||| backtracking	count=1
function	for a list to ||| segment flat list	count=1
function	[function_1] number ||| [function_2] synapses per segment [function_1]	count=3
class	cells ||| temporal memory	count=3
function	[function_1] anomaly ||| [function_2] add [function_1]	count=1
function	delay the ||| delay	count=1
function	of ||| get adaptive svddims	count=1
function	whether a function is ||| is	count=1
function	job ||| resume job no retries	count=2
function	variables ||| variables	count=1
class	the writer ||| basic prediction writer	count=1
function	the curve ||| curve	count=1
class	to the given inference ||| inference	count=1
class	stream ||| record stream	count=1
function	[function_1] local inhibition ||| [function_1] [function_2]	count=3
function	[function_1] to ||| [function_1] [function_2]	count=3
module	of printouts ||| algorithms	count=1
class	phase ||| phase spec learn	count=1
function_arg	in [function_1] [arg_2] is ||| [function_1] field jobid [arg_2]	count=1
function	current active state ||| active state	count=2
function	fetch jobids for jobs ||| get active jobs for client	count=2
function	saved ||| hyper search	count=1
class	for inferences ||| basic prediction writer	count=1
function	[function_1] [function_2] ||| [function_1] learn [function_2]	count=2
class	instances ||| temporal	count=1
function	[function_1] connections ||| [function_1] [function_2]	count=2
function	[function_1] ids that ||| [function_2] [function_1]	count=1
function	duty cycles are determined ||| duty cycles local	count=1
class	read ||| record sensor	count=1
function	predictive ||| predictive	count=2
class	referenced value ||| value	count=1
module	sequence of periodicactivityrequest ||| frameworks opf	count=2
function	of 1 field ||| int field	count=1
function	indices for ||| indices	count=1
function	job that ||| resume job no retries	count=1
function	for a synapses ||| perm	count=1
class	seeks ||| file record stream	count=1
function	true if our ||| is	count=1
arg	the specified ||| cell idx	count=1
function	stored ||| delete	count=1
function	true if [function_2] ||| [function_2] [function_1]	count=1
class	flushes ||| record stream	count=1
module	a synapses ||| algorithms	count=1
function	insert ||| insert and	count=1
function	an int to ||| int to8byte	count=1
function	from a serialized ||| setstate	count=2
function	pretty [function_2] ||| [function_2] [function_1]	count=5
function	unique category [function_2] ||| [function_2] [function_1]	count=1
function	function pointer and param ||| func ptr and	count=1
function	initialize ||| initialize	count=2
function	category [function_2] ||| [function_2] [function_1]	count=9
function	the update ||| update	count=2
arg	given the prediction ||| prediction accumulatederror historybuffer	count=1
function_arg	file [arg_2] ||| [arg_2] [function_1]	count=6
function	get the encoder name ||| get encoder name	count=1
function	generates centre offsets and ||| centre and	count=1
class	metrics ||| metrics	count=2
class	tag predicted field ||| field	count=1
function	closest to inputpattern ||| closest	count=1
function_arg	[function_1] and cache ||| [arg_2] [function_1]	count=2
function	the job is expected ||| job	count=1
function_arg	metrics [arg_2] ||| [function_1] [arg_2]	count=2
function	we know [function] be performed ||| finish [function]	count=1
arg	records - ||| key chunkindex fields	count=1
function	jobs table [function_2] ||| [function_2] running [function_1]	count=1
class	the sensor ||| sensor	count=1
function	labels [function_2] ||| [function_2] get [function_1]	count=1
function	[function_1] inference output ||| [function_1] experiment [function_2] dir	count=1
function	learning iteration ||| iteration learn	count=4
function	metrics ||| metrics	count=6
function	hyperplanes used by ||| hyperplanes	count=1
function	[function] modified ||| process updated [function]	count=2
arg	maps the coordinate ||| cls coordinate	count=1
function	with the smallest permanence ||| min permanence	count=1
arg	experiment's [arg_2] ||| [arg_2] [arg_1]	count=1
function	segments per ||| segments per	count=2
function	return a dict ||| get	count=3
function	return [function_2] ||| [function_1] [function_2]	count=13
function_arg	with retries [arg_2] ||| [arg_2] [function_1]	count=1
function	file returning a ||| file	count=1
module	see ||| encoders	count=18
function	insert ||| insert and start	count=2
function	timedelta to seconds ||| seconds from timedelta	count=2
function	segments that belong ||| segments for	count=2
function	over ||| over	count=1
function_arg	applies [arg_2] ||| [function_1] d [arg_2]	count=8
function	inhibition local inhibition is ||| local	count=1
function	dated potential segment ||| add to segment	count=1
arg	permanence values ||| perm columnindex raiseperm	count=1
class	models ||| jobs dao	count=1
function	update a number ||| update	count=1
class	the tm ||| backtracking tm	count=1
function_arg	[function_1] [arg_2] ||| swarming [function_1] [arg_2]	count=2
function	[function_1] completion message ||| [function_1] [function_2]	count=3
function	[function_1] the custom ||| [function_2] [function_1]	count=8
arg	time ||| vectors	count=1
function	also htmpredictionmodelcontroldisablesplearningcb ||| splearning cb	count=1
class	if we ||| hs	count=1
arg	input pattern returns the ||| inputpattern	count=1
function	where the max value ||| multi arg max	count=1
function	new hypersearch job and ||| new search	count=1
class	the predicted state ||| backtracking	count=1
arg	retrieve the ||| cls prop	count=6
arg	non-equality operator ||| other	count=1
arg	possible choosing [arg] previous ||| cls connections [arg]	count=1
arg	and b are numpy ||| a b	count=1
function	segment using data from ||| segment	count=1
class	put us back ||| iface	count=1
function	[function_1] 'category' ||| [function_2] field [function_1]	count=1
function	generates a worker ||| get worker	count=1
function	metric over an indices ||| metric from	count=1
arg	if windowsize ||| windowsize learningperiod	count=1
class	writer ||| writer	count=1
function	version [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] predicted segment ||| [function_2] [function_1]	count=1
class	the classifier ||| model classifier	count=1
module	permutevar and ||| swarming	count=1
arg	all properties [arg_2] ||| [arg_2] [arg_1]	count=2
function	demand - minimum ||| demand	count=1
function	numeric key for sorting ||| segment position sort key	count=1
function	indices of ||| indices	count=1
class	anomaly score as ||| anomaly	count=1
function	next ||| next	count=1
function_arg	synapse [arg_2] ||| [function_1] [arg_2]	count=1
arg	list of records read ||| records key	count=1
arg	[arg] are ||| [arg]	count=3
function	of a new sequence ||| sequence states	count=1
class	that have completed ||| results db	count=1
module	than ||| frameworks opf	count=2
function	cell activity ||| cell trace	count=1
arg	[arg_1] and temporaloutput ||| [arg_1] [arg_2]	count=4
function	+ exp b a ||| sum exp	count=1
function	"persistentjobguid" value ||| persistent job guid	count=1
class	node [class] object the ||| [class]	count=1
function	instance initialized with ||| init	count=1
function	set a [function_2] ||| [function_1] [function_2]	count=1
function	encoder that ||| encoder	count=1
module	and see if ||| swarming	count=1
function	return index of ||| get field index	count=1
class	its ||| single	count=1
function	returns sensor [function_2] ||| [function_1] classifier only [function_2]	count=3
function	initialized ||| init	count=1
function	nodespec for this pynode ||| node spec	count=1
function	maximum ||| max	count=3
function_arg	print the [arg_2] ||| [arg_2] [function_1]	count=1
function	of [function_2] ||| [function_1] [function_2]	count=5
function	network [function] with ||| [function] serialize extra	count=1
function	smallest [function_2] ||| [function_2] [function_1]	count=1
arg	modelconfig a ||| modelconfig	count=1
function	[function_1] [function_2] ||| [function_1] custom [function_2]	count=13
function_arg	[function_1] reaping ||| [arg_2] [function_1]	count=3
function	from the a ||| list from file field	count=1
function	field matching the field ||| field	count=1
class	elements ||| periodic activity	count=2
function	[function_1] [function_2] classifier ||| [function_2] [function_1]	count=27
function	returns a concatenated ||| get	count=2
class	value for ||| spatial	count=1
function	the cumulative n for ||| totaln	count=1
function	inference output ||| inference	count=1
function	a synapses that is ||| perm	count=1
function	a given inferencetype ||| metric specs	count=1
arg	index return the ||| index	count=1
class	in the storage or ||| record stream iface	count=1
function	the experiment [function_2] ||| [function_2] [function_1]	count=3
function	test that ||| test	count=1
function	a job to 'newvalue', ||| job	count=1
function	to the phase must ||| phase	count=1
class	see if we ||| hs state	count=1
arg	job ||| client clientinfo	count=1
function	exp b a and ||| log diff exp	count=1
module	report ||| frameworks opf	count=1
arg	[arg_1] coordinates ||| [arg_2] [arg_1]	count=2
function	loop ||| loop	count=1
function	value [function_2] ||| [function_1] [function_2]	count=9
arg	that corresponds ||| inferenceelement	count=1
function	pretty print [function_2] ||| [function_2] [function_1]	count=4
function	in the model ||| model	count=1
function	state ||| swarm state	count=1
function	overlap duty [function_2] ||| [function_1] [function_2]	count=3
function	update a set ||| update	count=1
function	filter variables for ||| filter	count=1
module	the metrics for ||| swarming	count=1
function_arg	get the [function_1] [arg_2] to ||| element [function_1] element [arg_2]	count=1
function	and add self ||| and	count=1
class	a ||| periodic activity mgr	count=4
arg	as inlist ||| inlist	count=1
arg	the passed [arg] globalbestposition ||| globalbestposition [arg]	count=1
class	prediction ||| basic prediction	count=1
function	will update ||| update stats	count=1
function	a string if ||| string	count=2
function	index of [function_2] ||| [function_2] field [function_1]	count=3
arg	object ||| cls	count=2
arg	a non-empty ||| experimentdir label inferencetype	count=1
class	stream as ||| stream	count=1
function	boost factors when ||| boost factors	count=2
arg	[arg_1] fields ||| [arg_2] [arg_1]	count=6
function	segments for [function_2] ||| [function_1] in [function_2]	count=1
module_class	that the synapse ||| algorithms synapse	count=1
function	[function_1] row id ||| [function_1] [function_2]	count=1
function	new [function_2] ||| previous value model reset [function_2] [function_1]	count=1
function	merge ||| merge	count=1
function	[function_1] [function_2] ||| [function_1] [function_2] othervars rng	count=12
function	indices ||| indices	count=3
function	[function_1] bool ||| [function_2] [function_1]	count=1
function	learning and inference this ||| stats infer	count=1
class	configuration file with the ||| custom configuration file	count=2
function	metric over ||| get metric	count=1
function	segments per [function_2] ||| [function_2] [function_1]	count=1
function	to high-order [function_2] ||| [function_2] [function_1]	count=1
function	number ||| num	count=9
function	a sequence of ||| jobs get	count=1
arg	coordinate to a ||| coordinate n	count=1
class	file with the parameters ||| file wrapper	count=2
class	file again) ||| iface	count=1
function	[function_1] synapse ||| [function_2] [function_1]	count=9
function_arg	dict containing all ||| dict cls	count=2
function	metadata [function] the ||| get field [function]	count=1
function	the max value of ||| max	count=1
function	name for ||| db name	count=1
class	given model ||| opfdummy model	count=1
arg	modelids warning the order ||| modelids	count=1
function	updates a [function_2] ||| [function_1] [function_2] cycles	count=1
arg	retrying ||| timeoutsec logger	count=1
class	of the file ||| record stream iface	count=1
function	json value ||| json value	count=4
function	output tap files ||| tap	count=1
class	memory class ||| memory	count=1
function	return [function_2] ||| [function_2] [function_1]	count=19
arg	and b ||| a b	count=2
function	update the boost ||| update	count=1
function	printouts for ||| null distribution	count=1
class	sequence of ||| mgr	count=2
module_class	[module_1] segment is ||| [module_1] [class_2]	count=2
arg	that ||| presynapticcell	count=1
function	[function_1] file returning ||| [function_2] [function_1]	count=4
arg	possible choosing [arg] ||| cls connections [arg]	count=3
class	[class] stores categories ||| [class]	count=3
function	saved [function_2] ||| [function_1] job [function_2]	count=1
arg	estimateanomalylikelihoods if windowsize is ||| windowsize learningperiod	count=1
function	delete ||| clear	count=1
arg	experimentdir ||| experimentdir	count=1
function	also htmpredictionmodelcontroldisabletplearningcb ||| tplearning cb	count=1
class	of this model ||| two gram model	count=1
function	to be ||| init	count=2
function	run a ||| run	count=1
class	type ||| type	count=2
function	the activity duty cycles ||| duty cycles	count=1
arg	the input pattern and ||| inputpattern	count=1
class	return ||| stream iface	count=3
arg	matrix using ||| includeindices includezeros	count=1
function	[function_1] of the ||| [function_2] dbname for [function_1]	count=3
class	the given xml ||| configuration	count=1
function	to this ||| to	count=1
function	pick a ||| pick	count=1
function	python logging [function_2] ||| [function_2] [function_1]	count=1
function	distances ||| distances	count=2
class	all ephemeral ||| tmregion	count=1
function	jobs table and count ||| count	count=1
function	the average ||| avg	count=1
function	with the best ||| best	count=1
function	propagate field ||| field	count=1
function	cell index ||| segment on cell	count=1
function	to insert a row ||| insert	count=1
arg	the network ||| network	count=1
function	1 field ||| increment int field	count=1
function	[function_1] default metrics ||| [function_1] [function_2]	count=1
function_arg	option [arg_2] ||| [function_1] [arg_2]	count=3
arg	message ||| level message	count=1
class	filter ||| modify fields	count=2
function_arg	[function_1] message ||| [function_1] [arg_2]	count=1
arg	metric type name ||| metric	count=1
function	dict containing ||| dict	count=3
function_arg	[function_1] job ||| [function_1] for checkpointed [arg_2]	count=1
function_arg	the indices [arg_2] ||| [function_1] [arg_2]	count=2
class	the file to disk ||| record stream	count=1
arg	matrix using the ||| includeindices includezeros	count=1
function	[function_1] bookmark ||| [function_1] [function_2]	count=1
arg	status ||| jobid status	count=1
class	base class ||| stream reader	count=1
module_class	[module_1] encoder ||| [module_1] date [class_2]	count=3
module_class	[module_1] [class_2] ||| [module_1] htmprediction [class_2]	count=2
class	if possible ||| temporal prediction log	count=1
module	read [module] ||| [module]	count=1
arg	classifier within ||| param value	count=1
module	of the non-numeric fields ||| regions	count=1
function	from the learning state ||| set state	count=1
arg	and executes ||| filename outdir usagestr hsversion	count=1
function	the record that will ||| record	count=1
module	generates ||| swarming exp_generator	count=2
function	is initialized in ||| perm	count=1
function	away ||| push away	count=1
function_arg	[function_1] bookmark ||| data record stream iface [function_1] [arg_2] range	count=2
function	min [function_2] ||| [function_2] [function_1]	count=1
class	inference ||| backtracking tmcpp	count=1
arg	master ||| columnsshape outputcloningwidth outputcloningheight	count=1
function	[function_1] be status_notstarted ||| [function_1] [function_2]	count=1
function	returning the category ||| get category	count=1
function_arg	sample [arg_2] ||| [function_1] [arg_2]	count=4
arg	i and [arg_2] ||| [arg_2] [arg_1]	count=1
arg	with the keys being ||| inputrow	count=1
function	label for the ||| label	count=1
class	to disk ||| record	count=1
class	back ||| record stream	count=1
function	list of models ids ||| ids	count=1
function	in base py ||| bucket info	count=4
class	of the file again) ||| record stream iface	count=1
function	a list [function_2] ||| [function_2] [function_1] category	count=1
class	non-temporal [class_2] ||| [class_2] [class_1]	count=2
arg	the recognition accuracy ||| c gamma progressstart progressend	count=1
function	category file returning a ||| category file	count=1
function	the given category ||| process category	count=1
function	the max ||| max	count=2
function	exp ||| diff exp	count=2
function	description file ||| description file	count=2
class	sequence of periodicactivityrequest ||| mgr	count=2
function	generation in the ||| full generation	count=1
function	this routine will update ||| update	count=1
class	that the file is ||| file	count=1
function	minimum [function_2] ||| [function_2] [function_1]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] knn [arg_2]	count=15
class	back at the ||| record stream	count=1
function	for debugging ||| distribution	count=1
function	can be learned ||| init	count=1
arg	a job ||| jobid	count=1
function	generated permanence ||| perm	count=1
arg	here 'fields' is a ||| ignoreunchanged	count=1
class	than ||| phase	count=1
function_arg	[function_1] permanence values ||| [function_1] [arg_2]	count=1
function	time ||| time	count=2
class	non-temporal ||| temporal	count=1
function	pooler see also htmpredictionmodelcontroldisablesplearningcb ||| enable splearning	count=1
function	exit program ||| exit	count=1
module	from the ||| algorithms	count=1
function	additional ephemeral [function_2] ||| [function_2] [function_1]	count=2
function	python list ||| list	count=1
function	[function_1] from ||| [function_1] [function_2] othervars rng	count=3
function	index using the ||| index from	count=1
function_arg	[function_1] and associated ||| [function_1] [arg_2]	count=4
function	[function_1] aggregation ||| [function_2] [function_1]	count=1
function	pick up the latest ||| pickup	count=1
function	a list of numbers ||| list	count=1
arg	and optionally the ||| particlestate newbest	count=1
function	a randomly generated permanence ||| init	count=1
function	over time time goes ||| outputs over time	count=1
arg	and converts it ||| inputfilepath	count=1
function	[function_1] factors for ||| [function_2] [function_1]	count=3
module_class	at the [class_2] ||| [module_1] [class_2]	count=2
function	the 'timestamp' [function_2] ||| [function_1] [function_2]	count=1
module	used instead of the ||| regions	count=1
function	to the [function_2] ||| [function_1] [function_2]	count=2
function	synapses for ||| synapses for	count=2
function_arg	duty [function_1] [arg_2] duty cycle is a ||| [function_1] [arg_2]	count=3
module	its database ||| database	count=1
function	delete the ||| delete	count=1
function	the --descriptionfromfile option ||| from file option	count=1
function_arg	[function_1] i ||| [arg_2] [function_1]	count=6
class	updates ||| opfmodel runner	count=1
function	as far away ||| push away	count=1
function	and [function_2] ||| [function_1] run [function_2]	count=2
function	persist it ||| property	count=2
function	display a histogram of ||| histogram	count=1
function	[function_1] [function_2] ||| [function_2] clear [function_1]	count=4
function	table including relevant ||| jobs of	count=1
arg	defines the permutations to ||| encoderdict	count=1
function	name for ||| name	count=1
function_arg	get [function_1] [arg_2] to ||| element [function_1] element [arg_2]	count=1
class	referenced value if ||| value	count=1
function	[function_1] offsets ||| [function_1] [function_2]	count=5
function	assigned a category and ||| category	count=1
function	labels for the metrics ||| labels	count=1
function_arg	random sample [arg_2] ||| [function_1] [arg_2]	count=2
function	matching the field ||| field	count=1
arg	compute() ||| activecolumns	count=1
function	list from the ||| from file	count=1
class	initialize ||| distributed scalar encoder	count=1
function	creates a ||| create list	count=1
class	value for a ||| pooler	count=1
function	a job record here ||| job	count=1
class	xml configuration ||| configuration	count=2
arg	a simple sequence contains ||| npatterns patternlen patternactivity	count=1
function	winner [function_2] ||| [function_1] [function_2]	count=1
module_class	class to read [module_1] [class_2] ||| [module_1] [class_2] read std	count=2
function_arg	[function_1] [arg_2] ||| [function_1] encoder str [arg_2]	count=9
function	[function] it ||| [function]	count=1
arg	for retrying a ||| timeoutsec logger	count=1
class	jobs do ||| client jobs dao	count=1
module_class	[module_1] model ||| [module_1] [class_2]	count=8
function_arg	records from [arg_2] ||| [arg_2] [function_1]	count=1
module_class	encoders scalar ||| encoders adaptive scalar	count=3
function	resets ||| resets	count=1
arg	windowsize is ||| windowsize	count=1
arg	the permanence values for ||| permanence	count=1
function	returns ||| get state	count=2
class	loads ||| hyper search runner	count=1
function	local inhibition is ||| local	count=2
function	sent only to ||| only	count=1
function	of every params ||| params	count=1
function	generate a set ||| generate	count=4
function	table including ||| jobs	count=1
module	metric value and see ||| swarming	count=1
arg	and b are ||| b	count=1
class	state ||| backtracking	count=4
arg	request but only if ||| cmdline jobhash	count=1
function_arg	synapses on [arg_2] ||| grow [function_1] cls connections random [arg_2]	count=3
class	class ||| stream reader	count=1
function	return number of ||| get num	count=1
arg	n is ||| n	count=1
class	will eventually be ||| deferred dict lookup	count=1
arg	actual ||| patternnz classification	count=3
function	[function] field names ||| [function] scalar	count=1
function_arg	synapse on [arg_2] ||| [function_1] [arg_2]	count=1
function	current model as orphaned ||| as orphaned	count=1
class	implemented csv file is ||| file	count=1
function	returns the activity ||| get active	count=1
function	map from [function_2] ||| [function_2] [function_1]	count=6
class	creates ||| field meta info	count=1
arg	'with' block ||| yupe value traceback	count=1
function	task against the given ||| run	count=1
class	flush ||| record stream iface	count=1
function	[function_1] [function_2] based on results obtained ||| [function_1] [function_2] whichvars	count=3
class	sql server per nupic ||| factory	count=1
class	this instances's hypersearch ||| hypersearch v2	count=1
function	also htmpredictionmodelcontroldisablesplearningcb ||| splearning	count=1
function	delete the stored ||| delete	count=1
class	marks the stream ||| stream iface	count=1
function	that are active ||| active	count=1
class	set ||| record sensor	count=1
function	key for ||| key	count=1
class	of ||| mgr	count=2
arg	engine network ||| network	count=1
function	when this region does ||| sensed	count=1
function	generates a worker ||| worker	count=1
function	specify ||| tmclass	count=1
function	an existing job ||| resume job	count=1
module	correct parameters for the ||| frameworks opf	count=1
function	add the ||| add	count=3
arg	encoded output ||| encoded parentfieldname	count=1
function_arg	[function_1] a job ||| [arg_2] [function_1]	count=1
class	of periodicactivityrequest ||| periodic activity	count=2
function	[function_1] [function_2] ||| [function_2] centre and spread [function_1]	count=1
function	job ||| resume job no	count=1
function	base py ||| bucket info	count=4
function	a category ||| category	count=1
class	instance ||| and infer	count=1
function	index of ||| cell index	count=1
function	compute the number of ||| get adaptive	count=1
class	hypersearch worker ||| hypersearch worker	count=2
function	the next value of ||| next	count=1
module_class	state of ourself ||| regions svmclassifier node	count=1
function	max new synapse count ||| max new synapse count	count=2
function_arg	optparse callback [arg_2] ||| [function_1] [arg_2]	count=1
class	the file to disk ||| iface	count=1
class	for a ||| spatial pooler	count=1
module_class	model [class_2] ||| [module_1] model [class_2]	count=1
function	[function_1] value from ||| [function_1] [function_2]	count=6
function	value from one ||| compute	count=1
function	best ||| best	count=4
class	generate ||| data generator	count=1
function	[function_1] [function_2] ||| [function_1] sequences predicted active [function_2]	count=1
class	pretty ||| sequence machine	count=1
function_arg	exp [arg_2] ||| [function_1] [arg_2] out	count=3
arg	[arg] is ||| jobid [arg]	count=1
class	is ||| spatial	count=1
function	[function_1] range ||| [function_2] [function_1]	count=1
class	and ||| svmclassifier node	count=2
function	inactive [function_2] ||| [function_2] [function_1]	count=2
function	model's in-memory prediction cache ||| flush prediction cache	count=1
function	partition ||| partition	count=1
function	synapses that is initialized ||| perm	count=1
function_arg	[function_1] checkpointdir ||| [arg_2] [function_1]	count=4
arg	the status_completed state ||| jobid alreadyrunning	count=2
function_arg	returns the [arg_2] ||| [function_1] [arg_2]	count=10
class	of distribution must be ||| distribution	count=1
class	between when an inference ||| inference element	count=1
function	flush ||| flush	count=2
module	a ||| frameworks	count=3
function	for each dimension ||| for	count=1
function	greater ||| init	count=1
arg	the permanence for a ||| permanence	count=1
function	permutations report csv ||| report	count=1
function	[function_1] cell ||| [function_1] least allocated [function_2]	count=3
arg	b a and b ||| b	count=2
function	only [function_2] ||| [function_1] [function_2]	count=2
function_arg	the field [arg_2] ||| [function_1] [arg_2]	count=1
class	the file ||| file record stream	count=1
function_arg	@param [arg_2] ||| [function_1] [arg_2]	count=2
function	returns the max new ||| get max new	count=1
function	segments [function_2] ||| [function_1] in [function_2]	count=1
class	copy of the state ||| state	count=1
function	field from the input ||| input	count=1
arg	random ||| random	count=1
function	value for a synapses ||| init	count=1
function	for each dimension ||| span for	count=1
function	for the given ||| from	count=1
function_arg	state [arg_2] ||| [arg_2] [function_1]	count=1
arg	the coordinate to ||| coordinate	count=1
function	the representation ||| encoder	count=1
function	--descriptionfromfile option ||| description from file option	count=1
function	of sequences [function_2] ||| [function_2] [function_1]	count=5
function_arg	[function_1] optimize metric ||| [arg_2] [function_1]	count=1
arg	encoder ||| name encoder	count=1
arg	capnp ||| proto	count=1
class	to backtracking_tm ||| monitored tmshim	count=1
function_arg	returns [function_1] [arg_2] numpy arrays values in ||| [function_1] [arg_2] out	count=2
function	value from a ||| value from	count=4
function	the smallest [function_2] ||| [function_1] [function_2]	count=1
arg	by increment the 'fieldname' ||| fieldname increment useconnectionid	count=1
class	jobs do not ||| client jobs	count=1
class	xml configuration file ||| configuration file wrapper	count=2
arg	of [arg] ||| [arg]	count=1
arg	retrieve the requested property ||| cls prop	count=6
function	[function_1] synapse on ||| [function_2] [function_1]	count=1
class	back ||| record stream iface	count=1
class	jobs do not ||| jobs dao	count=1
function_arg	[function_1] it's ||| [arg_2] [function_1]	count=7
function	bool if ||| bool	count=1
function	for ||| get inference	count=2
function	of sequence ||| get trace sequence	count=1
arg	the groundtruth from self ||| groundtruth	count=1
function	default ||| get default	count=1
function	json file ||| json file	count=1
class	state of all ||| backtracking	count=1
function	models ids that ||| ids	count=1
arg	to dest sp's ||| sourcesp destsp	count=1
function	output ||| output	count=3
function	policy instance the instance ||| policy instance	count=1
class	state object ||| state	count=1
function	[function_1] per segment ||| [function_2] [function_1]	count=8
function	parse a [function_2] ||| [function_1] [function_2]	count=5
class	get ||| jobs dao	count=1
function	randomly ||| init	count=1
function	the end and ||| end	count=1
function_arg	returns log(exp [function_1] [arg_2] are numpy arrays values ||| [function_1] [arg_2]	count=2
arg	at [arg] flags ||| [arg]	count=1
function	indices of ||| cell indices	count=1
arg	and cache to ||| filename statsinfo maxsamples filters	count=1
function_arg	[function_1] potential mapping ||| [function_1] [arg_2]	count=1
function	existing job that ||| resume job no	count=1
function	region ||| classifier region	count=1
function	records starting from the ||| records range	count=2
class	we have ||| results db	count=1
function	attempt to insert a ||| insert or get unique job no	count=1
function	[function_1] curve ||| [function_1] [function_2]	count=3
function	update [function_2] ||| [function_2] [function_1]	count=2
arg	random cells from ||| random	count=1
function_arg	[function_1] input sample ||| [function_1] [arg_2]	count=1
function	a - exp b ||| exp	count=1
function_arg	merge [arg_2] ||| [function_1] files [arg_2]	count=1
function_arg	callback for [arg_2] ||| [function_1] [arg_2]	count=1
arg	modelids warning ||| modelids	count=1
function	spec of the ||| get spec	count=1
class	network as a ||| network	count=1
function	a sequence of job ||| jobs get	count=1
function_arg	[function_1] labelname ||| [arg_2] [function_1]	count=6
function	[function_1] concurrency ||| [function_2] [function_1]	count=2
arg	of rows ||| reader writer	count=1
function_arg	filter variables [arg_2] ||| [function_1] [arg_2]	count=1
class	encoder getscalars ||| date encoder	count=2
function	labels that correspond to ||| metric labels	count=1
function	the neighborhood ||| neighborhood	count=2
function	a training sample ||| sample	count=1
function	field names ||| field names	count=2
function	[function_1] current model ||| [function_2] [function_1]	count=4
function	score ||| err score	count=1
function	[function_1] [function_2] ||| [function_2] centre [function_1]	count=2
function_arg	indices [arg_2] ||| [function_1] [arg_2]	count=5
function	[function_1] hypersearch job ||| [function_2] [function_1]	count=3
function	can [function] off some ||| [function] useless	count=1
function_arg	returns a [function_1] [arg_2] ||| data stream reader [function_1] [arg_2] range	count=2
function	and ||| in	count=1
class	permanence value for a ||| spatial	count=1
module_class	non-temporal [class_2] ||| [module_1] temporal [class_2]	count=2
class	remain in this phase ||| iteration phase spec learn and infer	count=1
function	[function_1] search from ||| [function_2] [function_1]	count=3
arg	matches the input pattern ||| inputpattern	count=1
function	[function_1] model ||| [function_2] [function_1]	count=9
function	average [function_2] ||| [function_2] synapses per segment [function_1]	count=2
function	local inhibition ||| inhibit columns local	count=1
function	row [function_2] ||| [function_2] [function_1]	count=4
function	method will remove the ||| knn	count=1
arg	streamdefdict stream definition ||| streamdefdict	count=1
module	that elapse ||| frameworks opf	count=1
arg	and b are numpy ||| b	count=1
arg	from ||| cls permworkdir outputlabel	count=1
arg	the segment passed in ||| segment	count=1
function	cycle [function_2] ||| [function_1] [function_2]	count=1
function	value of 1 field ||| set field	count=1
class	temporal ||| temporal	count=2
class	discrete probability distribution ||| discrete distribution	count=2
function	generate random ||| generate	count=1
function	[function_1] 'sequenceid' ||| [function_2] field [function_1]	count=1
function	list of paths to ||| config paths	count=1
function	plot of the ||| trace plot	count=1
function	return the [function_2] ||| [function_1] [function_2]	count=22
function	inference value from one ||| compute	count=1
function	if ||| if equal	count=2
function	[function_1] exp b ||| [function_2] [function_1]	count=2
class	the writer ||| writer	count=1
module	instead of the ||| regions	count=1
function	the category list ||| get category list	count=2
class	to ||| record stream iface	count=1
class	non-temporal prediction log ||| temporal prediction log	count=1
function	json ||| run with json	count=1
function_arg	process one [arg_2] ||| [function_1] [arg_2]	count=1
class	construct the tm ||| backtracking tm	count=1
function	like _getonematchingrownoretries(), but ||| get one	count=1
class	that is initialized in ||| pooler	count=1
function	is less than ||| trim	count=1
function	to learn [function_2] ||| [function_1] [function_2] c i s	count=1
function_arg	[function_1] index ||| [arg_2] [function_1]	count=1
function_arg	[function_1] the permanence ||| [function_1] synapse [arg_2]	count=1
function	return a [function_2] ||| [function_2] [function_1]	count=2
function	the boost [function_2] ||| [function_2] [function_1]	count=3
arg	model based on params ||| jobid params	count=1
function	[function_1] learn ||| [function_2] [function_1]	count=2
function	all fields ||| all	count=2
class	generated permanence value for ||| spatial	count=1
arg	model based on params ||| params	count=1
function	a ||| init	count=6
function	in column returns index ||| get	count=1
class	this metric if ||| aggregate metric	count=1
arg	on the segment ||| segment	count=1
function	if the current value ||| if	count=1
function	least ||| least	count=1
class	category that ||| knnclassifier	count=1
function	in a job to ||| job	count=1
function	list of numbers ||| list	count=1
function	but only if ||| if	count=1
class	iterations must ||| iteration	count=1
class	predicted state ||| backtracking	count=1
function	type ||| type	count=1
function	exit ensures that ||| exit	count=1
function	predicted => [function_2] ||| [function_1] [function_2]	count=4
module_class	the hypersearch ||| swarming hypersearch	count=1
function	option ||| description from file option	count=1
function	generate a figure ||| plot outputs	count=1
function	return segment ||| get segment	count=1
function	[function_1] [function_2] ||| [function_2] field [function_1]	count=9
function	a sequence of job ||| get	count=1
function	the activity duty cycles ||| active duty cycles	count=1
function	[function] hub sequences ||| [function] hub	count=1
function	dictionary for the nupic ||| nupic	count=1
class	ourself ||| svmclassifier node	count=1
function	[function_1] number ||| [function_1] [function_2]	count=8
class	that ||| spatial	count=1
class	constructor ||| prediction logger	count=1
arg	given the prediction ||| prediction accumulatederror	count=1
function_arg	sample from the ||| sample rgen	count=1
function	exp b ||| log diff exp	count=1
function_arg	dataset [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	accumulate a [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] message to ||| [function_1] [arg_2]	count=1
function	new ||| states	count=1
arg	a and b ||| b	count=2
function	[function_1] segment ||| [function_1] [function_2]	count=20
function	index of the column ||| column	count=1
module_class	[module_1] model in ||| [module_1] [class_2]	count=6
function	dated potential segment ||| segment	count=1
module_class	[module_1] encoder for ||| [module_1] [class_2]	count=3
function	models table including relevant ||| jobs of	count=1
function	partition [function_2] ||| [function_2] [function_1]	count=4
function	do ||| do	count=1
arg	synapses on segment ||| cls connections segment prevactivecells	count=1
module	is initialized in ||| algorithms	count=1
function	[function_1] the metric ||| [function_2] [function_1]	count=4
function	matrix this [function_2] ||| [function_2] [function_1] ncoinc length activity	count=2
function	sort [function_2] ||| [function_1] [function_2]	count=2
function	trace trace [function] # ||| mm [function] trace num	count=1
class	to disk ||| stream iface	count=1
arg	likelihood less than minlikelihoodthreshold ||| minlikelihoodthreshold	count=1
module	given the ||| frameworks opf	count=1
class	retrieves the runner's _hypersearchjob ||| hyper search	count=1
function	filter variables ||| filter	count=1
arg	the absolute ||| savemodeldir	count=1
function	recursively [function_2] ||| [function_1] [function_2]	count=2
class	model ||| two gram model	count=1
function	of ||| get fields	count=6
class	the encoder this ||| encoder	count=1
function	update ||| job update	count=1
module	periodicactivityrequest ||| frameworks	count=2
function	club ||| club	count=1
module	if the result is ||| frameworks opf	count=1
function_arg	max value [arg_2] ||| [function_1] [arg_2]	count=1
function	random ||| random	count=1
function	the end of ||| end	count=2
function	far and ||| and	count=1
class	jobs do ||| client jobs	count=1
class	hypersearch job and emits ||| search runner	count=1
function	field within the encoded ||| field	count=1
function	value from [function_2] ||| [function_2] [function_1]	count=4
function	get ||| get raw ground truth	count=1
function_arg	[function_1] client is ||| [function_1] [arg_2]	count=4
function	function is a ||| is	count=1
function	[function_1] update ||| [function_1] [function_2]	count=6
function	information [function] function ||| get [function]	count=1
function	index of the ||| index	count=2
arg	its machinery needs it ||| fieldstats	count=1
arg	inputpattern to all ||| inputpattern partitionid	count=1
class	of the prediction ||| prediction	count=1
class	report csv file ||| report	count=1
function	the experiment [function] ||| load experiment [function]	count=1
function	number of sequences each ||| get	count=1
function_arg	[function_1] input pattern ||| [arg_2] [function_1]	count=3
arg	are not necessarily in ||| modelids	count=1
function	return a datetime ||| get	count=1
function	closest training [function_2] ||| [function_1] [function_2]	count=4
function	must be greater ||| init	count=1
class	value ||| spatial pooler	count=2
module	of periodicactivityrequest ||| frameworks opf	count=2
arg	request this is called ||| cmdline clientinfo clientkey	count=1
class	a randomly ||| spatial	count=1
class	in the current tm ||| backtracking tm	count=1
function	a bookmark to ||| bookmark	count=1
function	printouts for debugging ||| distribution	count=1
function	from ||| from checkpoint	count=2
function	[function_1] description file ||| [function_1] [function_2]	count=1
function	[function_1] json ||| [function_1] [function_2]	count=6
function	sequence of model ||| models get	count=1
module	function that saves the ||| frameworks opf	count=1
function	same job ||| job insert	count=1
module	instances ||| algorithms	count=4
class	the custom ||| custom	count=4
function_arg	passes the [function_1] [arg_2] upon completion ||| [function_1] [arg_2]	count=1
class	latest ||| search runner	count=1
class	not provide storage ||| record stream	count=1
class	the file again) ||| stream iface	count=1
function	return true ||| is	count=1
function	labels [function] ||| [function]	count=2
class	given inference ||| inference	count=1
function_arg	the anomaly [arg_2] ||| [function_1] parameter [arg_2]	count=2
class	the given model instance ||| model runner	count=1
function	is initialized ||| init perm	count=1
function	list of paths to ||| paths	count=1
function	in ||| init	count=1
module	this particle this is ||| swarming hypersearch	count=2
module_class	of data ||| regions record	count=1
class	:returns ||| record stream iface	count=1
function	the model [function_2] ||| [function_1] [function_2]	count=1
function	dictionary ||| dict	count=1
function	over time time ||| over time	count=1
class	to construct this encoder ||| encoder	count=1
function	non-zero bits if the ||| index to non zero bits	count=1
function	seconds in ||| seconds	count=1
function	property as a string ||| string	count=2
class	in the given hypersearch ||| hyper search runner	count=1
arg	labelname to each record ||| labelname	count=2
function	[function_1] current ||| [function_2] [function_1]	count=1
module	permanence value for ||| algorithms	count=1
function	option ||| file option	count=1
module	to [module] ||| [module]	count=1
function_arg	bucket map [arg_2] ||| [arg_2] [function_1]	count=5
function	distances in the original ||| distances	count=1
class	given model instance ||| opfdummy model	count=1
function	sequence of ||| jobs get	count=1
function	permanence ||| get permanence	count=1
class	column ||| temporal memory	count=1
function	generate the string ||| generate perm	count=1
arg	the actual ||| patternnz classification	count=3
function	from ||| from file	count=1
function_arg	a [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	print the list of ||| print	count=1
function	[function_1] min threshold ||| [function_1] [function_2]	count=1
arg	coordinate ||| coordinate	count=1
module	that are arranged ||| frameworks opf	count=1
function	job record ||| job	count=1
function	read ||| read	count=3
function	[function_1] have ||| [function_2] [function_1]	count=2
function	return the nodespec for ||| get	count=1
function	[function_1] overlap duty ||| [function_2] [function_1]	count=1
class	columns in the region ||| spatial pooler	count=1
function	[function_1] to insert ||| [function_2] [function_1]	count=2
function	into the ||| into	count=1
function_arg	[function_1] in ||| [function_1] swarms [arg_2]	count=1
function	in the neighborhood of ||| neighborhood	count=1
class	iteration returns true ||| iteration	count=1
function	[function_1] dataset of ||| [function_2] [function_1]	count=1
function	string for each ||| str	count=1
function_arg	with [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] smallest permanence ||| [function_2] [function_1]	count=4
module	stored in ||| data	count=1
function	curve auc using the ||| curve	count=1
function	generate a [function_2] ||| [function_2] [function_1]	count=3
class	disk ||| record	count=1
function	base [function] class ||| read std [function]	count=2
class	our ||| backtracking tm	count=1
function_arg	[function_1] this segment ||| [arg_2] [function_1]	count=1
class	the prediction ||| prediction	count=1
function	time time ||| time	count=1
function_arg	[function_1] inputpattern to ||| [function_1] [arg_2]	count=3
class	initialize [class] ||| [class]	count=3
arg	key 'errormetric', then ||| metricspec	count=1
function	the field [function_2] ||| [function_1] [function_2]	count=1
class	[class] active ||| [class]	count=1
function_arg	synapses [arg_2] ||| grow [function_1] cls connections random [arg_2]	count=2
function	object compute the ||| compute	count=1
function	get labels ||| get labels	count=2
class	us back ||| record stream	count=1
class	the node [class] object ||| [class]	count=1
arg	b ||| b	count=2
class	discrete probability distribution ||| discrete	count=1
module_class	this segment ||| algorithms segment	count=1
function	attempt ||| or	count=1
function	a clipped version ||| clipped	count=1
function	[function_1] determines if ||| [function_2] [function_1]	count=1
arg	coordinate to ||| cls coordinate n	count=1
function	checkpoint ||| checkpoint	count=4
function	log scale representation of ||| log	count=1
function	[function_1] inference this ||| [function_2] [function_1]	count=2
function	1 field ||| int field	count=1
function_arg	[function_1] of values ||| [function_1] frequency counts [arg_2]	count=1
module	periodicactivityrequest ||| frameworks opf	count=4
arg	'temporal', i e requires ||| inferencetype	count=2
function	offsets [function_2] ||| [function_2] [function_1]	count=1
arg	swarms [arg] ||| [arg]	count=3
arg	increment ||| increment useconnectionid	count=1
module	descriptors [module] ||| [module]	count=3
function	the given records from ||| records from	count=2
function	of models that are ||| models	count=1
module	0xff ||| support	count=1
function	method ||| method	count=1
function	be read [function] ||| get [function] record	count=3
function	minval and ||| and	count=1
function	active ||| active	count=13
function	+ [function_2] ||| [function_2] [function_1]	count=4
function_arg	the label [arg_2] ||| [function_1] start end [arg_2]	count=8
arg	for reaping a ||| optstr value parser	count=1
function	potential segment ||| to segment	count=1
module_class	class [module_1] [class_2] ||| [module_1] [class_2] read std	count=2
arg	bookmark ||| bookmark	count=2
arg	[arg] as ||| [arg]	count=1
module	signal [module] ||| [module]	count=3
function	set all ||| set	count=1
function	number of models that ||| num models	count=1
function	so that artificial ||| variable	count=1
function	fetch the values of ||| get fields	count=1
function	a - exp ||| diff exp	count=1
module	value for ||| algorithms	count=1
module_class	the category that ||| algorithms knnclassifier	count=1
class	from ||| hyper search runner	count=1
function_arg	[function_1] 'newstate' ||| [function_1] [arg_2]	count=1
function_arg	[function_1] all configuration ||| [arg_2] [function_1]	count=1
class	at the ||| record stream iface	count=1
function	qualifies ||| connected	count=1
function	a set of simple ||| simple	count=1
function	[function_1] outputs ||| [function_1] [function_2]	count=1
function_arg	internal filter [arg_2] ||| [function_1] [arg_2]	count=1
function	unique category [function_2] ||| [function_1] [function_2]	count=1
class	state ||| claclassifier region	count=2
function	create ||| init	count=1
function	of possible report ||| report	count=1
arg	the result of ||| result	count=1
function	all models from ||| all	count=1
function	[function_1] returns the ||| [function_2] [function_1]	count=2
function	[function_1] float ||| [function_1] [function_2]	count=2
function	are active ||| active	count=1
function	[function_1] field ||| [function_2] [function_1]	count=13
module	return ||| exp_generator	count=1
function	return the [function_2] ||| [function_1] least allocated [function_2]	count=3
function	hypersearch job and ||| search	count=1
function	memory chunk of ||| chunk	count=1
function	[function_1] labels ||| knnanomaly classifier region [function_1] [function_2]	count=1
function_arg	[function_1] from file ||| [function_1] [arg_2]	count=4
function_arg	[function_1] [column cellidx] ||| [arg_2] [function_1]	count=1
function	have an ||| results	count=1
class	writer non-temporal prediction ||| temporal prediction	count=2
function_arg	files into [arg_2] ||| [arg_2] [function_1]	count=1
class	us ||| stream iface	count=1
function	region's encoder ||| encoder	count=1
module	and the ||| frameworks opf	count=1
function	record a datetime ||| record	count=1
class	of the prediction output ||| basic prediction	count=1
arg	values 'values' ||| values freqcounts	count=1
function	metric over ||| get metric from	count=1
class	if we ||| hs state	count=1
class	get ||| opfmodel runner	count=1
class	called at ||| backtracking tm	count=2
function	stream sources ||| stream sources	count=1
function	given cell [function_2] ||| [function_2] [function_1]	count=8
class	of distribution ||| multinomial distribution	count=1
arg	records read from ||| records key	count=1
function	column returns ||| get	count=1
arg	the coordinate to ||| cls coordinate n	count=1
function	range from ||| delete range from	count=2
arg	hub ||| hubs	count=1
function	display a histogram ||| histogram	count=1
function	is ||| init perm	count=1
function	match ||| match	count=1
arg	coordinates [arg_2] ||| [arg_2] [arg_1]	count=2
function	given ||| from	count=1
function_arg	saved jobid [arg_2] ||| [function_1] [arg_2]	count=2
class	exports a network ||| network	count=1
arg	a fieldmetainfo list ||| cls fields	count=1
class	contains ||| utils	count=1
function	[function_1] [function_2] params as might be ||| [function_1] [function_2]	count=2
function	category inference of ||| infer	count=1
module	mangles the given ||| frameworks opf	count=1
function	be ||| init	count=4
class	value for a synapses ||| spatial pooler	count=1
class	hypersearch ||| search	count=1
function	[function_1] model ||| [function_1] [function_2]	count=7
arg	learns on ||| columnmatchingsegments prevactivecells	count=1
function	an existing job ||| job no	count=1
function	path to a json ||| run with json	count=1
class	state ||| knnanomaly	count=1
function	aggregation function returns the ||| get	count=1
class	labels ||| knnanomaly classifier region	count=1
class	tell the writer ||| writer	count=1
function	true if ||| is completed	count=2
function	current model and store ||| model	count=1
class	phase ||| phase spec learn and infer	count=2
arg	if usecache ||| usecache	count=1
class	[class_1] predictionlogger ||| [class_1] [class_2]	count=1
function	a + exp b ||| sum exp	count=1
function	return a map from ||| map	count=1
class	backtracking_tm ||| monitored tmshim	count=2
function_arg	returns a range of [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
function	inhibition ||| inhibition	count=3
function	optional ||| client key	count=1
function	overlap duty cycles for ||| overlap duty cycles	count=1
module_class	of ourself from ||| regions spregion	count=1
function	must be greater than ||| init	count=1
function	function for querying ||| get fields for active	count=1
function	existing job ||| resume job no retries	count=1
function	field within the ||| field	count=1
module	initialized in a ||| algorithms	count=1
class	previously computed record ||| knnanomaly classifier region	count=1
function_arg	[function_1] string metrics ||| [arg_2] [function_1]	count=5
arg	number of option ||| option	count=1
class	retrieves the runner's _hypersearchjob ||| hyper	count=1
function	records to ||| records	count=1
module	iteration of ||| regions	count=4
module	nupic data ||| data	count=1
rep	of ourself [function_arg_2] ||| [module_class_1] [function_arg_2]	count=4
class	including 'finish' callbacks ||| opftask driver	count=1
function	value to json string ||| metrics to json	count=1
function	return the list ||| get	count=4
arg	queue ||| partitionids	count=1
function	[function_1] bool ||| [function_1] [function_2]	count=1
function	the a list ||| file field list	count=1
class	file is always ||| file record stream	count=1
function	[function_1] of the ||| [function_2] dbname [function_1]	count=1
function	metric over ||| get metric from trace	count=1
function	optparse callback for ||| callback	count=1
function	temporalmemory instances ||| eq	count=1
function	data ||| data	count=2
function	directory with a base ||| base	count=1
function	the min [function_2] ||| [function_1] [function_2]	count=1
function	metrics value to json ||| metrics to json	count=1
module	the specified ||| frameworks opf	count=1
function	a record [function_2] ||| [function_2] [function_1]	count=1
arg	result of ||| result	count=1
function	[function_1] encoder name ||| [function_2] [function_1]	count=1
function	dated potential segment ||| to segment	count=1
arg	a synapse ||| synapse	count=1
module	of ||| regions	count=23
function	get labels from the ||| get labels	count=1
function	given category file returning ||| category file	count=1
function	of predicted ||| get trace predicted	count=4
function	ids [function_2] ||| [function_2] [function_1]	count=2
module	and returns a ||| swarming	count=1
function	[function_1] traces ||| [function_1] [function_2]	count=2
function	time time goes left ||| time	count=1
arg	is an ||| modelid	count=1
function	sorted ||| sorted	count=1
function_arg	[function_1] f to ||| [function_1] d [arg_2]	count=4
module	a sequence of ||| frameworks opf	count=2
arg	of records ||| records	count=1
function	bucket map ||| bucket map	count=2
function_arg	returns a [function_1] [arg_2] if 'bookmark' ||| data record stream iface [function_1] [arg_2] range	count=3
arg	params ||| jobid params	count=1
function	randomly generated ||| perm	count=1
module	of iterations must ||| frameworks	count=1
arg	on ||| prevactivecells	count=1
function	[function_1] increment ||| [function_2] [function_1]	count=3
function	generate requested [function_2] ||| [function_1] [function_2]	count=4
function	filter out and ||| filter	count=1
function	returns the sdr for ||| get	count=1
arg	encoded output ||| encoded	count=1
function_arg	file [arg_2] ||| [function_1] [arg_2]	count=6
function	orphaned this ||| orphaned	count=1
module	[module] metric-name and ||| [module]	count=3
function	factors when ||| factors	count=1
function_arg	learning" [arg_2] ||| [arg_2] [function_1]	count=3
function	htmpredictionmodelcontroldisabletplearningcb ||| enable tplearning	count=1
class	or runs it ||| search runner	count=1
function	inactive [function_2] ||| [function_1] [function_2]	count=2
function	in a job ||| job	count=1
function	category file ||| process category file	count=2
class	emits ||| prediction metrics logger	count=1
function	between learning ||| learning	count=1
function	_getonematchingrownoretries(), but with retries ||| get one matching row with retries	count=1
function	[function_1] per cell ||| [function_2] [function_1]	count=6
class	:returns int ||| stream	count=1
function	overlap [function_2] ||| [function_2] [function_1]	count=4
function	state from ||| from	count=1
function	[function_1] exp ||| [function_1] [function_2]	count=2
function	iteration ||| iteration	count=3
function	the smallest permanence ||| min permanence	count=2
function	[function_1] path of ||| [function_1] [function_2]	count=2
function	enable the ||| enable	count=1
function	of an svm ||| svm	count=1
function	returns the periodic ||| get	count=1
function	parse a string of ||| parse string	count=1
module	process ||| extra gym raw	count=2
arg	the output dictionary ||| output	count=1
function	the potential percent ||| potential pct	count=2
arg	random cells ||| random	count=1
function	complete set of results ||| results	count=1
function	adds ||| add	count=3
function	possible encoder ||| encoder	count=1
function_arg	[function_1] in the ||| [function_1] [arg_2]	count=6
function	- exp b a ||| exp	count=1
function	random seeds helpful ||| random	count=1
class	two-gram model ||| two gram model	count=2
arg	values 'values' ||| values	count=1
arg	windowsize ||| windowsize learningperiod	count=1
class	pool ||| pooled	count=1
arg	to the network ||| network	count=1
function	results and ||| results	count=1
function	[function_1] less than ||| [function_2] [function_1]	count=4
class	beginning ||| record stream iface	count=1
function	labels [function_2] ||| [function_2] [function_1]	count=9
function	[function] no ||| [function] null	count=2
function_arg	[function_1] all ||| [arg_2] [function_1]	count=10
arg	takes an encoded output ||| encoded parentfieldname	count=1
function	that is initialized ||| init	count=1
module	see method description ||| encoders	count=1
function	initialized in ||| init perm	count=1
function	returns a dictionary ||| get metrics	count=1
function	swarm ||| get swarm	count=1
function	iteration number ||| iteration learn num	count=2
class	file is always closed ||| file	count=1
module	greater than 0 ||| frameworks	count=1
function	of every params file ||| params file	count=1
module	the ||| algorithms	count=42
function	best result so ||| best	count=1
function	[function_1] count ||| [function_2] [function_1]	count=10
function	jobids for ||| for client	count=2
function	inference stats this will ||| stats	count=1
arg	- a list of ||| chunkindex	count=1
class	distribution and ||| distribution	count=1
class	period [class] ||| [class] stream	count=1
function_arg	the same client ||| insert unique client	count=1
function	a new sequence ||| sequence states	count=1
arg	[arg_1] coordinates by ||| [arg_2] [arg_1]	count=2
function	bit ||| bit for	count=1
class	file with the parameters ||| file	count=2
class	randomly ||| spatial	count=1
function	the minval and ||| and max	count=1
arg	protected ||| extradatadir	count=2
function	cumulative w ||| totalw	count=1
function	[function_1] [function_2] ||| [function_1] [function_2] experimentdir	count=3
function_arg	[function_1] [arg_2] ||| [function_1] parameter [arg_2]	count=6
function_arg	in cell [arg_2] ||| [function_1] [arg_2]	count=2
function	for a synapses that ||| init perm	count=1
arg	return the positive activations ||| active readonly	count=1
function	writes data [function_2] ||| [function_2] [function_1]	count=1
function	the average [function_2] ||| [function_2] per segment [function_1]	count=1
arg	single ||| name fieldparams encoderparams	count=1
function	the job ||| job	count=1
class	[class] in ||| [class]	count=3
class	policy ||| policy iface	count=1
arg	method goes through ||| colidx cellidx seglist	count=1
arg	optimize metric ||| genidx	count=1
arg	a single ||| name fieldparams encoderparams	count=1
function	args ||| reap var args	count=1
function	of labels ||| label	count=1
function	sequence ||| reset sequence	count=2
function_arg	private [arg_2] ||| [function_1] member name [arg_2]	count=3
function	[function_1] list ||| [function_2] [function_1]	count=11
function	decoded ||| decoder	count=1
class	put ||| record stream iface	count=1
class	sets ||| encoder sensor	count=1
function	completed ||| completed	count=2
class	the given hypersearch job ||| hyper search	count=1
function_arg	[function_1] 'newstate' is ||| [function_1] [arg_2]	count=1
function	state to 'newstate' if ||| state	count=1
function	_getonematchingrownoretries(), but with retries ||| one matching row with retries	count=1
class	noninclusive ||| knnanomaly classifier region	count=1
function	[function_1] bookmark to ||| [function_1] [function_2]	count=1
function_arg	state to [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	serialized [arg_2] ||| [function_1] [arg_2]	count=2
function	a sequence of ||| get fields	count=2
module	each key is the ||| opf	count=1
class	temporal memory ||| temporal memory	count=1
function	return [function] ||| get matured [function]	count=1
function	from the anomaly ||| anomaly	count=3
function	ids ||| ids	count=2
arg	an ||| modelid	count=1
class	must ||| phase	count=1
function	for jobs in the ||| active jobs for	count=2
function	do one iteration ||| do	count=1
module_class	of the [class_2] ||| [module_1] [class_2]	count=10
function	vector ||| on times	count=1
function	metric being optimized this ||| optimized metric	count=1
class	between when an inference ||| inference	count=1
class	a randomly generated permanence ||| spatial	count=1
module	the file again) ||| data	count=1
function	a log scale ||| log	count=1
function	into coordinates using ||| coordinates	count=1
arg	network nupic engine network ||| network	count=1
function	to a json file ||| json file	count=1
arg	records - ||| chunkindex	count=1
module	including ||| frameworks opf	count=2
class	inference ||| probability table2d	count=1
function	[function_1] [function_2] we generate between ||| [function_1] [function_2]	count=4
function	in a ||| perm	count=1
arg	i ||| i j	count=1
function_arg	instance [arg_2] ||| [arg_2] [function_1]	count=5
arg	dict describing the ||| cls filename path	count=1
function	plot ||| trace plot	count=1
class	randomly ||| pooler	count=1
function	with the ||| matching	count=1
function	[function_1] list this ||| [function_2] [function_1]	count=4
module	the file to ||| data	count=2
class	ourself ||| test	count=1
class	add ||| model classifier helper	count=1
function	sequence of job records ||| get fields	count=1
function	[function_1] segments per ||| [function_2] [function_1]	count=2
function	generated permanence value for ||| init perm	count=1
function	[function_1] a file ||| [function_2] [function_1]	count=10
class	the file to ||| iface	count=1
function	is to be ||| init	count=1
class	emits ||| prediction metrics logger iface	count=1
function	remove [function_2] ||| [function_1] [function_2]	count=3
function	it as a bool ||| bool	count=1
function	[function_1] simple ||| [function_2] [function_1]	count=1
function	[function_1] from all ||| [function_1] [function_2] othervars rng	count=3
arg	a message to ||| message	count=1
class	initialize ||| backtracking tm	count=1
function	a bool ||| bool	count=1
arg	[arg] in ||| [arg]	count=3
function	two tm ||| tm	count=2
class	of periodicactivityrequest ||| periodic activity mgr	count=2
arg	inputpattern to all ||| inputpattern	count=1
function	read state from ||| read	count=1
class	memory ||| memory	count=1
class	periodicactivityrequest elements ||| periodic	count=2
function	amount for active ||| syn perm active	count=2
function	[function_1] active state ||| [function_1] [function_2]	count=1
class	[class_1] shared ||| [class_2] [class_1]	count=1
function	models ||| num models	count=1
arg	change the status on ||| status useconnectionid	count=1
function	retrives a dictionary of ||| get	count=1
arg	index ||| index	count=3
function	concurrency [function_2] ||| [function_2] [function_1]	count=1
function	connected state ||| connected	count=1
function	[function_1] bits for ||| [function_1] map [function_2]	count=1
function	first ||| first non	count=1
function	list of [function] ||| get [function]	count=2
function	[function_1] id ||| [function_1] [function_2]	count=2
function_arg	type [arg_2] ||| [function_1] [arg_2]	count=1
function	is ||| is	count=4
function	velocity ||| velocity	count=1
function	randomly generated permanence value ||| init perm	count=1
function	segment decrement ||| segment decrement	count=2
function	generates a worker completion ||| worker completion	count=1
function	percent ||| pct	count=2
function	a + [function_2] ||| [function_2] [function_1]	count=4
module_class	[module_1] region ||| [module_1] [class_2]	count=6
class	file to ||| stream iface	count=1
function	also htmpredictionmodelcontroldisablesplearningcb ||| enable splearning	count=1
function	taking into account the ||| avg	count=1
class	the record [class_2] ||| [class_2] [class_1]	count=3
function	types for [function_2] ||| [function_2] data [function_1]	count=2
function	segment's synapse with the ||| synapse	count=1
module	must ||| opf	count=1
function_arg	cell [arg_2] ||| [function_1] [arg_2]	count=5
arg	the overlap ||| overlaps	count=1
function	amount for [function_2] ||| [function_1] [function_2]	count=6
function_arg	[function_1] fields given ||| [function_1] clientinfo [arg_2]	count=1
function	number of ||| get	count=2
function	[function_1] sequence labels ||| [function_2] [function_1]	count=1
arg	request this is ||| cmdline clientinfo clientkey	count=1
function	update ||| updates	count=1
function	add labels ||| add label	count=2
module_class	non-temporal [class_2] ||| [module_1] [class_2]	count=2
class	synapses that is initialized ||| spatial	count=1
function	the overlap duty cycles ||| overlap duty cycles	count=1
function	data types for ||| data types	count=2
function	segments in cell ||| segments in cell	count=3
class	be greater ||| iteration	count=1
function	[function_1] next ||| [function_2] [function_1]	count=1
function	deserialization (after __setstate__) ||| de	count=2
module	a ||| frameworks opf	count=6
function	synapse ||| synapse	count=5
class	file ||| stream reader	count=1
arg	path if it ||| path	count=1
class	the ||| iface	count=3
module	@return ||| monitor_mixin	count=1
function	imported description ||| experiment description interface from	count=1
function	for the given ||| for	count=2
function	a job ||| job increment	count=1
function	network [function_2] ||| [function_2] [function_1]	count=2
class	the model ||| value model	count=1
function	[function_1] from ||| [function_1] [function_2]	count=26
function	serialized ||| setstate	count=2
class	return ||| backtracking tm	count=3
class	a sdr classifier factory ||| sdrclassifier factory	count=1
class	given hypersearch job and ||| search runner	count=1
function	given swarm's state to ||| swarm state	count=1
class	ourself ||| knnanomaly classifier	count=1
function_arg	[function_1] [arg_2] name is one whose ||| [function_1] name [arg_2]	count=2
function	new [function_2] ||| [function_1] [function_2]	count=8
class	file ||| file record stream	count=1
arg	job request but ||| cmdline	count=1
function	metric over ||| metric	count=1
arg	an encoded output ||| encoded	count=1
arg	[column cellidx] ||| andvalues	count=1
arg	c [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	returns a range [function_1] [arg_2] if 'bookmark' ||| data record stream iface [function_1] [arg_2] range	count=3
function_arg	[function_1] the 'numactivecolumnsperinharea' ||| [function_1] [arg_2]	count=4
function	instance from info saved ||| load saved	count=1
function	callback ||| callback	count=1
function	returns ||| init perm	count=1
function	value of [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] [function_2] ||| [function_2] synapses per segment [function_1]	count=6
arg	function description in base ||| inpt output	count=1
module	a value ||| generators	count=1
module	including 'setup' callbacks ||| opf	count=1
class	moving [class_2] ||| [class_1] [class_2]	count=1
function	current state ||| state	count=1
function_arg	all models [arg_2] ||| [arg_2] [function_1]	count=2
function	true if [function] elements ||| [function]	count=1
arg	if windowsize is ||| windowsize	count=1
function_arg	[function_1] expression ||| [arg_2] [function_1]	count=1
class	copy of the state ||| hs state	count=1
function	a logger ||| logger	count=1
function	generate a coincidence [function_1] [function_2] to the ||| [function_2] [function_1] ncoinc length activity	count=3
class	[class_1] model ||| [class_2] [class_1]	count=1
function	'category' field ||| category field	count=2
arg	from ||| rgen	count=1
arg	method description in base ||| input	count=3
function	all swarms ||| all swarms	count=2
function	[function_1] the path ||| [function_2] [function_1]	count=2
function	printouts for ||| null	count=1
class	us back at ||| record stream	count=1
module_class	[module_1] [class_2] ||| [module_1] recordsensorfilters [class_2]	count=1
function	segments ||| segments	count=8
class	for temporalmemory instances ||| temporal memory	count=1
function	inhibition performing global inhibition ||| global	count=1
function	[function_1] cycle ||| [function_2] [function_1]	count=5
arg	windowsize is ||| windowsize learningperiod	count=1
class	sequence of periodicactivityrequest elements ||| mgr	count=2
arg	new location ||| reader writer start stop	count=1
function	per segment ||| per segment	count=4
function	returns the permanence decrement ||| get	count=1
function	when ||| element	count=1
function	another exception ||| exception	count=1
function	the boost factors for ||| boost factors	count=1
class	the file ||| stream	count=3
module_class	encoders base [class_2] ||| [module_1] coordinate [class_2]	count=3
function	creation parameters based on ||| description	count=1
function	column's ||| permanences for column	count=1
function	add labels [function_2] ||| [function_2] [function_1]	count=2
function	generate [function_2] ||| [function_2] [function_1]	count=6
function	demand - minimum and ||| demand	count=1
class	writer non-temporal [class_2] ||| [class_2] [class_1]	count=4
class	including 'setup' callbacks ||| opftask driver	count=1
function_arg	one instance consisting ||| instance groundtruth	count=1
class	ourself from ||| svmclassifier node	count=1
function	implemented ||| load from file	count=1
function_arg	[function_1] and associated ||| [arg_2] [function_1]	count=4
function_arg	creates ndesirednewsynapes [function_1] [arg_2] ||| grow [function_1] cls connections random [arg_2]	count=8
class	a randomly ||| pooler	count=1
function_arg	in [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	a json [function_2] ||| [function_2] [function_1]	count=12
function_arg	[function_1] on-times encountered ||| [function_1] [arg_2]	count=2
function	of ||| mm get	count=1
class	must be greater than ||| iteration phase	count=1
module	cell appears in note ||| monitor_mixin	count=1
function	field [function_2] ||| [function_1] [function_2]	count=5
function	computes the number ||| num	count=1
arg	minpermanence ||| minpermanence	count=2
class	inference [class_2] ||| [class_2] [class_1]	count=2
arg	retrying ||| timeoutsec	count=1
module	a ||| generators	count=4
class	phase ||| iteration phase spec learn and	count=1
function	verbosity level ||| sp verbosity	count=2
function	synapses that is ||| init perm	count=1
function	enable the diagnostic ||| enable	count=1
function	[function_1] permanence increment ||| [function_1] [function_2]	count=1
class	that the file is ||| file record stream	count=1
function	cell in column ||| cell	count=2
arg	and learning ||| learn	count=1
function	returns flags for all ||| get all flags	count=1
function_arg	segment with [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] index ||| [function_2] [function_1]	count=4
arg	@param ||| ordinal	count=1
function	dataset [function] metadata descriptors ||| get dataset [function]	count=1
arg	potential mapping for a ||| columnindex potential	count=1
function	[function_1] learn ||| [function_1] [function_2]	count=3
arg	i and [arg_2] ||| [arg_1] [arg_2]	count=1
function	returns the next value ||| get next	count=1
arg	results string ||| results	count=1
arg	records records - ||| key chunkindex fields	count=1
arg	n is the total ||| n	count=1
class	at ||| record stream iface	count=1
function	[function_1] [function_2] based on results obtained ||| [function_1] [function_2]	count=5
function	[function_1] all swarms ||| [function_1] [function_2]	count=1
function	range ||| delete range	count=1
function	maximum number of synapses ||| max synapses	count=1
function	[function_1] [function_2] ||| [function_1] optimized metric [function_2]	count=3
function	inhibition local inhibition ||| columns local	count=1
function_arg	[function_1] start to ||| [function_1] [arg_2]	count=10
function	[function_1] the models ||| [function_2] clear [function_1]	count=1
function	[function_1] only ||| [function_2] [function_1]	count=1
function	[function_1] of dict ||| [function_2] [function_1]	count=2
arg	less than minpermanence ||| minpermanence minnumsyns	count=1
function	return the updated frequency ||| frequency	count=1
function	to simulate ||| simulate	count=1
function	[function_1] learn from ||| algorithms backtracking tm choose [function_1] [function_2]	count=1
class	record stream as a ||| record stream	count=1
function	anomaly scores ||| anomaly	count=2
function_arg	[function_1] 'numactivecolumnsperinharea' ||| [arg_2] [function_1]	count=4
class	state from ||| backtracking tm	count=1
function	chunk of ||| chunk	count=1
class	phase ||| phase	count=2
function	of [function_2] ||| [function_1] trace [function_2]	count=11
function	a [function] ||| set [function]	count=1
function	file ||| read config file	count=4
function	neighborhood of a ||| neighborhood	count=1
function	for ||| perm	count=1
class	us back at the ||| stream iface	count=1
function	the 'timestamp' field ||| timestamp field	count=2
function	[function_1] swarms ||| [function_1] [function_2]	count=2
function	synapse ||| synapse permanence	count=1
arg	over a range of ||| start	count=1
function	checkpoint for the specified ||| checkpoint	count=1
function	[function_1] spread offsets ||| [function_2] [function_1]	count=4
function_arg	cell that ||| cell presynapticcell	count=1
function	description in base py ||| get bucket info	count=4
function	set a ||| set	count=3
function	iterations must be greater ||| init	count=1
function	generate a coincidence [function_1] [function_2] to the ||| [function_2] [function_1]	count=3
function	[function_1] [function_2] we generate between ||| [function_1] [function_2] tail	count=4
function	lookup [function_2] ||| [function_2] [function_1]	count=1
function	a json [function_2] ||| [function_1] [function_2] expjsonfilepath options outputlabel permworkdir	count=1
arg	modelconfig a dictionary ||| modelconfig	count=1
function	an existing job that ||| job	count=1
function_arg	checkpoint for [arg_2] ||| [function_1] [arg_2]	count=2
function	learning and inference this ||| infer	count=1
function	[function_1] time time ||| [function_2] [function_1]	count=2
function	for the [function_2] ||| [function_1] [function_2]	count=2
function	to allow it to ||| to	count=1
module	a randomly generated permanence ||| algorithms	count=1
function_arg	[function_1] request this ||| [arg_2] [function_1]	count=4
function	the current predicted state ||| predicted state	count=1
function	[function_1] experiment ||| [function_2] [function_1]	count=1
arg	retrying a pymysql dao ||| timeoutsec	count=1
function	a + exp b ||| log sum exp	count=1
function	[function_1] [function_2] ||| [function_2] check for [function_1]	count=2
function	data types [function_2] ||| [function_2] [function_1]	count=4
function	[function_1] this file ||| [function_1] [function_2]	count=2
class	metric if the ||| metric	count=1
function	information [function] function callers ||| get [function]	count=1
module_class	the inference ||| frameworks opf inference	count=1
function	get the permanence ||| get permanence	count=3
function	id for ||| id	count=1
function	new job ||| job insert	count=2
function_arg	the anomaly [arg_2] ||| [arg_2] [function_1]	count=5
function	sets the permanence ||| set permanence	count=2
function	an existing job ||| job no retries	count=1
function	clipped ||| clipped	count=1
function	return ||| get results	count=1
function_arg	if the [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] largest number ||| [arg_2] [function_1]	count=5
function	convert a list of ||| strip list	count=1
class	is initialized in ||| spatial pooler	count=1
function_arg	returns the [arg_2] ||| [function_1] record [arg_2]	count=1
arg	up [arg] ||| astate [arg]	count=3
function	[function_1] sequence ||| [function_1] trace [function_2]	count=1
function_arg	[function_1] aggregated dataset ||| [arg_2] [function_1]	count=1
function_arg	training sample [arg_2] ||| [arg_2] [function_1]	count=2
function	of 1 field ||| field	count=2
function	the winner [function_2] ||| [function_2] [function_1]	count=1
function	loads [function_2] ||| [function_2] [function_1]	count=18
function	in ||| in	count=1
module_class	[module_1] synapse ||| [module_1] [class_2]	count=6
function	for the given version ||| for version	count=1
function	remove [function_2] ||| knnanomaly classifier region [function_1] [function_2]	count=4
function_arg	the index [arg_2] ||| [function_1] [arg_2]	count=1
class	of the file ||| stream	count=1
arg	consisting ||| groundtruth	count=1
function	and return it ||| get	count=4
function	dict ||| dict	count=4
function	function ||| info	count=1
function	the given category file ||| category file	count=1
function	training ||| training	count=2
function	file and returns it ||| file	count=1
function	[function_1] partition ids ||| [function_2] [function_1]	count=2
function	the file ||| read config file	count=1
module	of ||| opf	count=3
function	of paths to ||| config paths	count=1
function	generates a "persistentjobguid" value ||| persistent job guid	count=1
function	a valid [function_2] ||| [function_2] [function_1]	count=1
arg	goes through a list ||| colidx cellidx seglist	count=1
function	list of possible encoder ||| generate encoder	count=1
function	an existing job that ||| resume job no	count=1
function	of model ||| get	count=1
arg	rows rows and ||| rows	count=1
function	inhibition local inhibition ||| inhibit columns local	count=1
class	best model ||| model chooser	count=1
function	base py ||| get bucket info	count=4
arg	inputpattern ||| inputpattern partitionid	count=1
arg	records - a ||| chunkindex fields	count=1
function	inhibition performing global ||| inhibit columns global	count=1
class	configuration file ||| configuration file	count=2
function	get labels from ||| get labels	count=2
function	[function_1] pooler instance ||| [function_1] [function_2]	count=1
module	inference ||| frameworks opf	count=1
function	potential segment update the ||| add to segment updates	count=1
module	is initialized ||| algorithms	count=1
class	the given hypersearch ||| hyper search runner	count=1
function	to high-order [function_2] ||| [function_2] predicted active [function_1]	count=1
function	will remove the ||| knn	count=1
arg	a fieldmetainfo list ||| fields	count=1
function	default traces to ||| default traces	count=2
function	flags for [function_2] ||| [function_2] [function_1]	count=4
arg	of proposed changes ||| activestate	count=1
module	distribution as stored in ||| data	count=1
function	inhibition performing global ||| columns global	count=1
function	that completed with errors ||| err model	count=1
function	of active synapses ||| get	count=1
function	average number of columns [function_1] [function_2] ||| columns [function_1] [function_2]	count=1
function	a list ||| strip list	count=1
function	get the [function_2] ||| [function_2] [function_1]	count=27
function	permanence ||| init perm	count=1
function	of predictive ||| get trace predictive	count=1
function	back at the beginning ||| rewind	count=1
function	compute a metric over ||| metric from trace	count=1
arg	coordinate ||| cls coordinate n	count=1
arg	the points in the ||| centerindex radius dimensions	count=1
function	the input ||| input	count=2
function	of models ||| num models	count=1
function	sequence [function_2] ||| [function_1] [function_2]	count=1
module_class	the state ||| algorithms backtracking tm	count=1
module_class	activates all of [module_1] [class_2] active ||| [module_1] [class_2]	count=2
function	cell ||| cell	count=12
module	value for a synapses ||| algorithms	count=1
function	[function_1] a string ||| [function_1] [function_2]	count=1
arg	current value matches 'curvalue' ||| fieldname newvalue curvalue	count=1
function	encoder name ||| encoder name	count=1
function	the pattern [function_2] ||| [function_1] [function_2]	count=1
function	decrement ||| decrement	count=2
arg	element [arg] ||| [arg]	count=1
function	bucket ||| map bucket	count=1
function	cells to learn from ||| cells to learn from	count=1
function	of [function] ||| get [function]	count=8
function	duty cycles ||| duty cycles	count=5
function	fetch the values of ||| get	count=1
arg	logic when implementing ||| patternnz inputtsrecordidx rawinput	count=1
module	name and ||| swarming	count=1
function	the current state ||| state	count=1
class	runs it ||| search runner	count=1
module	the permanences of a ||| algorithms	count=1
class	us ||| record stream	count=1
class	that is initialized ||| spatial	count=1
function	specific [function] by name ||| get report [function]	count=1
function	of labels ||| metric labels	count=2
function_arg	[function_1] from the ||| [arg_2] [function_1]	count=4
function	current active [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] given cell ||| [function_1] in [function_2]	count=2
module	be greater than 0 ||| frameworks	count=1
function	underlying spatialpooler algorithm object ||| algorithm	count=1
function	clipped version of ||| clipped	count=1
function	next value ||| next	count=1
function	encodings for all the ||| all encodings	count=1
arg	graph is written (defaults ||| node_attrs	count=1
function	a model ||| model	count=1
function	average ||| average	count=2
arg	s ||| s	count=1
class	active state from ||| backtracking tm	count=1
class	periodicactivityrequest elements ||| periodic activity	count=2
function	[function_1] instance ||| [function_2] [function_1]	count=4
class	'setup' callbacks this ||| opftask	count=1
module	data ||| data	count=7
function	the overlap [function_2] ||| [function_1] [function_2]	count=4
function	check [function_2] ||| [function_1] [function_2]	count=3
function	update period ||| update period	count=2
function	end of learning and ||| end	count=1
function	rows ||| rows	count=1
function	returns the sequence ||| get	count=1
function	table and count ||| job count	count=1
arg	[arg] member name ||| [arg]	count=1
function	find [function] user's "documents" ||| [function] user documents	count=1
function	the predicted ||| predicted	count=2
class	of iterations must ||| phase	count=1
class	this phase ||| phase spec	count=1
class	for inferences ||| basic prediction	count=1
function	cell index in column ||| on cell	count=1
class	:returns int ||| file record stream	count=1
class	for ||| metric spec	count=1
function	opf task against the ||| run	count=1
function	of job records ||| jobs get	count=1
module	callbacks this ||| opf	count=1
function	the inference value from ||| infer	count=2
function	a saved [function_2] ||| [function_2] [function_1]	count=1
function	the most ||| most	count=1
function	table and count the ||| count	count=1
function	[function_1] 'timestamp' ||| [function_2] [function_1]	count=1
function	predicted segment ||| get predicted segment	count=2
arg	given number of maxbuckets ||| maxbuckets	count=1
arg	to associate ||| partitionid issparse	count=1
function	loads custom ||| load custom config	count=4
module_class	the k ||| algorithms knnclassifier	count=1
function	settings are [function_2] ||| [function_2] [function_1]	count=2
function	returns the [function_2] ||| [function_1] next [function_2]	count=4
function_arg	creates ndesirednewsynapes [function_1] [arg_2] ||| [function_1] [arg_2]	count=12
class	that is initialized ||| pooler	count=1
function	list ||| list	count=9
function	[function_1] a swarm ||| [function_2] model [function_1]	count=1
class	predictionlogger object ||| runner	count=1
function	the total number ||| num	count=8
class	[class_1] getscalars ||| [class_2] [class_1]	count=2
function	read state [function_2] ||| [function_1] [function_2]	count=1
class	in ||| spatial pooler	count=2
function	implemented in ||| load from file	count=1
function	ephemeral ||| ephemeral	count=3
arg	averaged over multiple ||| vectors numsamples	count=1
function	value to [function_2] ||| [function_1] [function_2]	count=2
function	the velocity to be ||| velocity	count=1
function	mode the job is ||| start job	count=1
arg	status_completed state ||| conn jobid alreadyrunning	count=1
class	the file to disk ||| record	count=1
function	a file ||| file	count=2
module	a permutevar and ||| swarming	count=1
function	models for a ||| models get fields for	count=1
function	labels from ||| labels	count=3
function	[function_1] verbosity ||| [function_2] [function_1]	count=1
function	[function_1] from a ||| [function_1] [function_2]	count=8
module_class	the model's ||| swarming opfmodel	count=1
function	cells [function_2] ||| algorithms backtracking tm choose [function_1] [function_2]	count=3
class	of ||| iface	count=1
function	[function_1] factors when ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] choosing ||| [function_1] [arg_2]	count=2
function	task against the ||| run	count=1
class	back ||| record	count=1
arg	proto object ||| cls proto	count=2
arg	for a vector ||| vector	count=1
class	jobs do not use ||| client jobs dao	count=1
class	periodicactivityrequest ||| mgr	count=2
class	the stream ||| record stream iface	count=3
function	[function_1] the cell ||| [function_2] [function_1]	count=3
function	record ||| from knn	count=2
function	add an ||| add extra	count=2
function	matrix with a column's ||| permanences for column	count=1
function_arg	[function_1] [arg_2] ||| knnanomaly classifier region [function_1] parameter name index [arg_2]	count=2
arg	the absolute ||| checkpointdir	count=1
function	converts a [function_2] ||| model classifier helper category [function_1] [function_2]	count=1
class	:returns int the ||| record stream	count=1
function	list of numbers to ||| list	count=1
class	sequence of ||| activity mgr	count=2
function	we know [function] ||| finish [function]	count=1
function_arg	[function_1] c ||| [function_1] [arg_2]	count=5
function	[function_1] parameter of ||| [function_1] anomaly [function_2]	count=1
arg	is a good candidate ||| colidx	count=1
function	map mapping columns to ||| map	count=1
arg	of the results ||| results	count=1
function	cell [function_2] ||| [function_2] best matching [function_1]	count=2
function	function returns the function ||| get	count=1
class	file to ||| record stream	count=1
arg	bucket index ||| index	count=1
function	fetch jobids for jobs ||| get active jobs for	count=2
arg	results [arg_2] ||| [arg_1] [arg_2]	count=1
function	[function_1] column returns ||| [function_2] best matching [function_1]	count=1
function	records within the range ||| range	count=2
arg	must store [arg] ||| [arg]	count=1
class	ourself from ||| knnanomaly classifier	count=1
function	of sequence [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] decrement ||| [function_2] [function_1]	count=7
function	[function] params as ||| is [function]	count=3
class	columns ||| spatial pooler	count=8
function	[function_1] row ||| [function_1] [function_2]	count=1
module_class	the iteration ||| frameworks opf iteration	count=1
class	distribution must be an ||| distribution	count=1
function	total on time ||| on	count=1
function	default metrics to be ||| default metrics	count=1
function	delay ||| delay	count=1
class	an inference ||| inference element	count=1
function_arg	for saving [arg_2] ||| [arg_2] [function_1]	count=1
function	the synapses for the ||| synapses for	count=1
function	a job record ||| job	count=1
arg	points ||| centerindex radius dimensions	count=1
class	sequence ||| activity mgr	count=4
function	the learning state ||| state	count=1
function	[function_1] that match ||| [function_2] [function_1]	count=1
class	periodicactivityrequest ||| periodic	count=2
function	cell activity ||| cell	count=1
function	index of the ||| idx	count=4
function	total on time ||| of on	count=1
function	of printouts for debugging ||| null distribution	count=1
function	_getonematchingrownoretries(), but ||| one matching row	count=1
function_arg	map [arg_2] ||| [function_1] [arg_2]	count=1
function	weighted mean uses ||| aggr weighted mean	count=1
function	compute the record's ||| compute	count=1
class	this phase ||| phase spec learn	count=1
class	stream to calculate ||| stream reader	count=1
arg	segment object ||| segment	count=1
class	model instance ||| opfdummy model	count=1
function	inference value from one ||| custom compute	count=1
function	activity duty cycles for ||| active duty cycles	count=1
function	construct a ||| construct classification	count=2
class	the given hypersearch job ||| hyper search runner	count=1
function	cell find the segment ||| segment	count=1
arg	values 'values' into ||| values	count=1
function	[function_1] exit program ||| [function_1] [function_2]	count=1
function	function ||| into array	count=1
arg	records records - a ||| key chunkindex	count=1
class	the knn classifier ||| classifier region	count=1
function	the velocity ||| velocity	count=1
arg	dtype that is ||| dtype	count=3
function	factors when [function_2] ||| [function_1] [function_2]	count=3
function	output ||| delete output	count=1
function	set the value ||| set	count=1
arg	translate parameters and ||| columndimensions cellspercolumn activationthreshold initialpermanence	count=1
function	filter ||| init filter	count=1
function	a dictionary of ||| get	count=1
function	[function_1] that a ||| [function_1] [function_2]	count=3
class	best model ||| opfmodel	count=1
function	output over ||| outputs over	count=1
arg	assuming the given number ||| offset	count=1
module_class	[module_1] prediction ||| [module_1] [class_2]	count=1
function	[function] returned ||| get [function]	count=3
class	us back ||| record	count=1
function	the duty cycle ||| duty cycle	count=2
function	of iterations must be ||| init	count=1
arg	good candidate ||| colidx	count=1
module	the file to disk ||| data	count=2
function	is an interface to ||| prediction logger	count=2
class	writer non-temporal [class_2] ||| [class_1] [class_2]	count=4
function	know [function] be performed ||| finish [function]	count=1
function	compute the number of ||| get	count=1
function	[function_1] orphaned ||| [function_1] [function_2]	count=5
function	probability that the ||| probability	count=1
function_arg	label [arg_2] ||| [function_1] start end [arg_2]	count=8
function	random [function_1] [function_2] ||| algorithms backtracking tm choose [function_1] [function_2]	count=5
function	pynode ||| node spec	count=1
module	number of ||| regions	count=2
class	returns ||| classifier region	count=1
function	[function_1] sequences ||| [function_2] predicted active [function_1]	count=4
function	[function] tuple successcode ||| [function] last	count=1
function	cycles the minimum ||| min	count=1
function	with the fewest number ||| least allocated	count=1
arg	range ||| start	count=1
class	constructor ||| dataset reader	count=1
class	initialized in ||| spatial pooler	count=1
function	the state in the ||| write state	count=1
class	counterpart to getstate ||| permute variable	count=1
function	main loop ||| run task main loop	count=1
function	the experiment [function_1] [function_2] ||| [function_1] [function_2]	count=3
function	population ||| population	count=1
function	[function_1] names ||| [function_2] [function_1]	count=1
arg	segidx ||| segidx	count=1
module	returns a ||| algorithms	count=1
function	map from number ||| number map	count=2
arg	columnindex ||| columnindex	count=1
module	of the ||| data	count=1
class	metric ||| metric	count=1
class	current tm [class_2] ||| [class_2] [class_1]	count=2
module	@return countstrace a ||| algorithms monitor_mixin	count=1
function_arg	swarms in ||| swarms sprintidx	count=1
function	a record [function_2] ||| [function_2] timestamp [function_1]	count=1
function	the bucket ||| map bucket index	count=1
function	metric over an indices ||| metric from trace	count=1
function	count the ||| count	count=1
arg	from ||| state	count=2
class	our member variables that ||| backtracking	count=1
function	job that is presently ||| resume job	count=1
function	the category inference of ||| infer	count=1
function	labels ||| label results	count=1
function	a public ||| public	count=1
function	column that ||| column for	count=1
module	and dashes in a ||| swarming	count=1
function	labels and [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] velocity to ||| [function_1] [function_2]	count=1
function	region does ||| sensed	count=1
class	of ||| iteration	count=1
class	an inference ||| inference	count=1
module_class	of ourself from ||| regions knnanomaly classifier	count=1
function	additional [function_2] ||| [function_2] [function_1]	count=8
function	returns a unique category ||| category	count=1
function	a sequence of model ||| get fields	count=1
function	training pattern ||| other training pattern	count=2
function	is a ||| is	count=1
function	[function_1] log scale ||| [function_1] [function_2]	count=1
function	string if ||| string	count=2
arg	network will remove ||| network	count=1
module	the given database ||| database	count=1
class	of distribution must ||| distribution	count=1
arg	that defines the ||| options encoderdict	count=1
function	[function_1] of labels ||| [function_2] [function_1]	count=3
function	remove [function_2] ||| [function_2] [function_1]	count=7
function	requested statistics for a ||| stats	count=1
function	sum of the elements ||| aggr sum	count=1
class	network as ||| network	count=1
class	return ||| record sensor	count=2
module	of periodicactivityrequest ||| frameworks	count=2
function	away ||| away	count=1
function	print a [function_2] ||| [function_2] [function_1]	count=1
module	dict and ||| swarming	count=1
function	the encoder [function_2] ||| [function_1] [function_2]	count=1
module	of nupic data ||| data	count=1
function_arg	anomaly [arg_2] ||| [function_1] parameter [arg_2]	count=2
function	a description [function_2] ||| [function_2] [function_1]	count=4
function	all [function] ||| average on [function]	count=1
class	sensor ||| sensor	count=1
function	delete the stored checkpoint ||| delete model checkpoint	count=1
function	a worker completion message ||| worker completion message	count=1
arg	space-separated numbers ||| listobj	count=1
function	sequence of job records ||| jobs get	count=1
function	of segments per cell ||| segments per cell	count=1
class	initialize ||| random distributed scalar encoder	count=1
function	qualifies a synapse as ||| connected	count=1
arg	of the cells ||| cells	count=1
function	[function_1] inactive synapses ||| [function_1] [function_2]	count=4
function	insert a row ||| insert	count=1
arg	here 'fields' is ||| ignoreunchanged	count=1
function_arg	input [arg_2] ||| element [function_1] element [arg_2]	count=2
function_arg	synapse on [arg_2] ||| [arg_2] [function_1]	count=1
arg	estimateanomalylikelihoods if windowsize is ||| windowsize	count=1
function	list of [function_2] ||| [function_2] [function_1]	count=1
arg	positive activations ||| active readonly	count=1
function_arg	same client is ||| insert unique client	count=1
function	if the ||| if	count=1
function	callback that returns a ||| get ephemeral	count=1
function	change the category ||| category	count=1
class	temporalmemory instances ||| memory	count=1
function	synapses for the ||| synapses for	count=2
function	a new trace made ||| trace	count=1
arg	dict describing ||| cls filename path	count=1
function	init all ||| init	count=1
module	[module_1] [module_2] ||| [module_2] [module_1]	count=12
module	iterations must be ||| frameworks opf	count=1
function	valid [function_2] ||| [function_1] [function_2] params p	count=1
function	synapses that ||| init	count=1
class	or runs it ||| runner	count=1
function	[function_1] the error ||| [function_2] [function_1]	count=1
function	the output cache associated ||| delete output cache	count=1
function	add one ||| add	count=1
arg	the trapezoidal rule parameters ||| x y	count=1
class	in a network ||| network	count=1
function_arg	read [arg_2] ||| [arg_2] [function_1]	count=1
class	worker parameters ||| worker	count=1
arg	fields from spatialoutput ||| spatialoutput	count=1
function	random number [function_2] ||| [function_2] [function_1]	count=1
arg	[arg] end ||| [arg] end	count=3
arg	sample ||| patternnz classification	count=1
function	sets the update ||| set update	count=2
module	if the result ||| frameworks opf	count=1
function_arg	[function_1] f ||| [function_1] d [arg_2]	count=4
function	ephemeral members ||| ephemeral members	count=4
arg	i ||| i value	count=1
function	this file ||| file	count=2
function_arg	sample and ||| sample inputvector	count=1
function	that correctly predicted this ||| activate predicted	count=1
function	of a record ||| record	count=1
function	sets the [function_2] ||| [function_2] [function_1]	count=36
function	next from :meth ||| next	count=1
function	[function_1] bits for ||| [function_1] [function_2]	count=3
arg	the specified modelid this ||| modelid	count=1
arg	[arg] note upon ||| [arg]	count=2
function	generate stream ||| stream	count=1
module	'setup' callbacks this ||| frameworks opf	count=1
function	cell activity ||| cell activity	count=1
arg	function description in ||| inpt output	count=1
function	into a list ||| list	count=2
function	of the class ||| get	count=1
class	the discrete probability distribution ||| discrete	count=1
function	upcoming partition [function_2] ||| [function_1] [function_2]	count=4
function	display a histogram ||| plot histogram	count=1
arg	dest sp's ||| sourcesp destsp	count=1
function	routine will update a ||| update	count=1
function	model names that ||| model names	count=1
function	be learned ||| init	count=1
function	specify the ||| get tmclass	count=2
function	that is closest to ||| closest	count=1
class	already in the storage ||| record stream iface	count=1
function	be assigned a category ||| category	count=1
arg	same size as inlist ||| inlist	count=1
function	multi-step prediction ||| multi step	count=1
class	the file again) ||| record stream	count=1
arg	client is ||| client	count=1
function	[function_1] dict ||| [function_1] custom [function_2]	count=1
function	- exit ensures that ||| exit	count=1
class	back at the ||| record stream iface	count=1
arg	from the bookmark ||| bookmark	count=2
arg	- a ||| key chunkindex fields	count=1
module	be greater than ||| frameworks	count=1
function	name for the ||| for	count=1
class	the tm ||| tm	count=1
function	list [function_2] ||| [function_2] [function_1] category	count=1
function	[function_1] synapses ||| temporal memory monitor mixin [function_1] [function_2]	count=2
function	one compute ||| compute	count=1
function_arg	random sample from ||| sample rgen	count=1
function	attempt ||| or get	count=1
function	build the additional ||| additional	count=2
function	loads a description ||| load description	count=2
arg	within ||| start end labelfilter	count=1
function	and return it as ||| get	count=4
function	name ||| name from	count=1
function	segment is ||| is segment	count=3
function	records starting ||| records	count=2
function	updates ||| update	count=6
function	of paths to search ||| config paths	count=1
function_arg	[function_1] [arg_2] this ||| [function_1] labels [arg_2]	count=4
function	the pycapnp proto type ||| proto type	count=2
function_arg	on cell c ||| on cell c	count=1
function	set of simple ||| simple	count=1
function_arg	[function_1] request ||| [function_1] [arg_2]	count=3
function_arg	probability that [arg_2] ||| [function_1] [arg_2]	count=1
function	store a new item ||| store	count=1
function	get the labels ||| get label	count=1
function	about ||| info	count=1
function	percent of ||| percent	count=1
function	a list to ||| list	count=1
function	main ||| task main	count=1
function	saved [function_2] ||| [function_2] [function_1]	count=1
function	region does a compute ||| sensed	count=1
function	region to the ||| region	count=1
function	[function_1] types for ||| [function_2] [function_1]	count=1
function_arg	[function_1] the bookmark ||| record stream iface get [function_1] [arg_2] range	count=1
arg	aggregated values parameters ||| aggregationinfo inputfilename outputfilename	count=1
function_arg	[function_1] [arg_2] is ||| [function_1] field jobid [arg_2]	count=1
class	returns ||| nupic model info	count=1
function_arg	[function_1] expression and ||| [arg_2] [function_1]	count=1
module	model ||| swarming hypersearch	count=1
function	schema note this ||| schema	count=1
function	the jobs table ||| jobs	count=1
function	of job records ||| jobs get fields	count=1
arg	aggregated dataset the ||| aggregationinfo	count=1
module	construct [module_2] ||| [module_2] [module_1]	count=1
function	proto ||| proto	count=4
function_arg	[function_1] the overlap ||| [arg_2] [function_1]	count=3
class	model in case ||| model	count=1
arg	from spatialoutput ||| spatialoutput	count=1
module_class	[module_1] contains ||| [module_1] [class_2]	count=1
function	an anomaly model ||| anomaly params	count=2
class	callbacks ||| opftask	count=1
function_arg	[function_1] [arg_2] ||| [function_1] key [arg_2]	count=2
function	of paths ||| paths	count=1
function	[function] member name ||| [function] member	count=1
function	[function_1] parameter ||| [function_1] anomaly [function_2]	count=1
function	capnproto and writes data ||| write	count=1
function	the max value of ||| multi arg max	count=1
function	updates a ||| update	count=1
function	predictive [function_2] ||| [function_1] [function_2]	count=2
function	a json ||| with json	count=1
function	reasonable ||| reasonable	count=1
function_arg	set [arg_2] ||| knnanomaly classifier region [function_1] parameter name index [arg_2]	count=1
arg	name out [arg] dict ||| itemname [arg]	count=1
function	database name ||| db name	count=1
function	compute area [function_2] ||| [function_2] [function_1]	count=6
function	for a list to ||| list	count=1
function	the experiment [function_1] [function_2] the given experiment ||| [function_1] [function_2]	count=2
function	get current ||| get current	count=2
function	set a [function_2] ||| [function_1] anomaly [function_2]	count=3
function	[function_1] the predictive ||| [function_1] [function_2]	count=1
function_arg	[function_1] network ||| [arg_2] [function_1]	count=1
function	connections in ||| connections	count=1
function	in ||| perm	count=1
function	for a single ||| get fields for	count=1
function	to [function_2] ||| [function_2] [function_1]	count=7
function	[function] in the ||| aggr [function]	count=1
function	state in the job ||| write state	count=1
function	a list ||| field list	count=1
module_class	state of ourself ||| regions test	count=1
function	a sequence of job ||| jobs get fields	count=1
class	of the file again) ||| record	count=1
function	[function_1] [function_2] returned by estimateanomalylikelihoods() or ||| [function_1] [function_2]	count=4
function_arg	[function_1] values 'values' ||| [function_1] frequency counts [arg_2]	count=1
function	[function_1] pattern that ||| [function_2] [function_1]	count=4
function	the inhibition ||| inhibition	count=2
function	as a float if ||| float	count=2
function	segments that correctly predicted ||| activate predicted	count=1
class	it doesn't already exist ||| file utils	count=1
class	[class_1] log ||| [class_1] [class_2]	count=5
function	[function_1] insert ||| [function_2] [function_1]	count=2
function	that have been checkpointed ||| for checkpointed	count=1
function_arg	[function_1] if 'newstate' ||| [function_1] [arg_2]	count=2
arg	job request but only ||| cmdline jobhash	count=1
function	ids that [function_2] ||| [function_2] [function_1]	count=2
module_class	nupic data [class_2] ||| [module_1] [class_2]	count=2
function	field ||| get field	count=1
arg	choose [arg] random ||| c i s [arg]	count=1
module	greater than 0 ||| opf	count=1
module	that the class ||| frameworks opf	count=1
module	for [module] ||| [module]	count=1
function	to this [function_2] ||| [function_2] [function_1]	count=1
module	for a ||| algorithms	count=1
arg	through the inputs ||| inputs	count=1
function	pooler see also htmpredictionmodelcontroldisabletplearningcb ||| enable tplearning cb	count=1
arg	the largest number ||| c i activestate	count=1
arg	a metric type name ||| metric	count=1
function	a map [function_2] ||| [function_2] [function_1]	count=6
function	[function_1] inhibition radius ||| [function_2] [function_1]	count=1
function	function description ||| top down compute	count=5
function	metric over an indices ||| get metric from trace	count=1
function	generation ||| generation	count=1
function	job is expected to ||| job	count=1
function	returns the update ||| get update	count=2
function	an int ||| int to8byte	count=1
function	[function_1] the phase ||| [function_2] [function_1]	count=2
module_class	their latest results to [module_1] [class_2] ||| [module_1] [class_2] worker process updated	count=2
function_arg	[function_1] results ||| [function_1] [arg_2]	count=1
class	iterations must be ||| iteration phase	count=1
class	prediction output stream ||| prediction logger iface	count=1
function	[function_1] [function_2] instance ||| [function_1] [function_2]	count=1
class	listing of experiments that ||| hyper search	count=1
class	for a synapses that ||| pooler	count=1
function	results generated ||| results	count=1
arg	on a segment ||| segment presynapticcell	count=1
function	[function_1] experiment ||| [function_1] [function_2]	count=1
function	any segments that ||| segments	count=1
function	value of ||| get input value	count=1
function	to the [function_2] ||| [function_2] [function_1]	count=2
function	getspecfromtype ||| get spec from type	count=1
function	minimum ||| min	count=3
class	jobs do ||| jobs	count=1
class	in pattern ||| pattern machine	count=1
module	a value over ||| generators	count=1
function	records to return ||| records	count=1
function	from the ||| state from	count=1
class	return ||| backtracking tmcpp	count=2
module	metadata descriptors [module] ||| [module]	count=3
arg	segment passed in ||| segment	count=1
function	given field within the ||| field	count=1
function	the anomaly ||| get anomaly	count=1
function	learn ||| learn	count=1
arg	params must be ||| params	count=1
arg	distribution to ||| distribution	count=1
arg	experiment's ||| prefix	count=1
function	end of learning ||| end	count=1
module	[module] is called ||| [module]	count=1
function	generate the string that ||| generate	count=1
function_arg	[function_1] [arg_2] ||| [function_1] start end [arg_2]	count=16
function	segment update the ||| segment updates	count=1
class	model ||| opfmodel	count=2
class	bits this method ||| pooler	count=1
function	returns ||| get permanence	count=2
function	file ||| config file	count=4
function	duty cycle given as ||| duty	count=1
function_arg	region [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	returns log(exp [function_1] [arg_2] arrays values in a ||| [function_1] [arg_2] out	count=2
arg	results ||| results	count=3
function	mode evaluation end time ||| end time	count=1
function	spread offsets ||| spread offsets	count=2
function	'category' [function_2] ||| [function_2] [function_1]	count=1
function	job by the ||| job insert	count=1
function	[function_1] version ||| [function_2] [function_1]	count=1
function	pretty print [function_2] ||| [function_1] [function_2]	count=4
function	config ||| config files	count=4
function	of both the ||| all	count=2
function	of the first generation ||| first non full generation	count=1
arg	coordinate to ||| coordinate n	count=1
function	category list this ||| get category list	count=2
function_arg	[function_1] sorted chunk ||| [arg_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] record [arg_2]	count=1
function	[function_1] directory ||| [function_1] [function_2] experimentdir	count=3
function	updates the ||| update synapse	count=1
function	number of synapses ||| synapses	count=1
function	activity duty [function_2] ||| [function_1] [function_2]	count=3
class	xml configuration file with ||| custom configuration file	count=2
class	the file is always ||| file record	count=1
function	validates the --descriptionfromfile option ||| file option	count=1
function	[function_1] offsets ||| [function_2] [function_1]	count=5
function	the maximum number of ||| max	count=2
arg	numparticles particles ||| swarmid minnumparticles	count=1
function	[function_1] [function_2] ||| [function_1] model [function_2]	count=4
function	[function_1] as orphaned ||| [function_1] [function_2]	count=1
function	of w for use ||| get w	count=1
function	[function_1] spread ||| [function_1] [function_2]	count=4
function	[function_1] encoder that ||| [function_2] [function_1]	count=1
function	number [function_2] ||| [function_2] [function_1]	count=4
function	stats this ||| stats	count=1
function	closest training pattern that ||| closest other training pattern	count=1
arg	[arg_1] number of ||| [arg_2] [arg_1]	count=2
function	elements ||| element count	count=1
function	closest training pattern ||| closest other training pattern	count=1
arg	- a list ||| key chunkindex fields	count=1
function	to delay the ||| delay	count=1
arg	in backtrackingtmcpp backtrackingtmcpp loadfromfile ||| filepath	count=1
function	dimensions ||| dimensions	count=1
class	the given xml file ||| configuration	count=1
function	updates any [function] ||| normalize [function]	count=3
function	file returning ||| file	count=1
function	active cell appears in ||| active	count=1
arg	get the points in ||| centerindex radius dimensions	count=1
function	checkpoint from the current ||| checkpoint	count=1
arg	method description in ||| input output learn	count=1
function	labels from [function_2] ||| [function_2] add [function_1]	count=1
class	metric if the params ||| aggregate metric	count=1
function	the closest ||| closest	count=1
class	xml configuration file with ||| custom configuration file wrapper	count=2
function	permanence decrement amount for ||| syn perm	count=1
arg	range from start to ||| start	count=1
function	generate a dataset of ||| generate dataset	count=1
function	parameters ||| job	count=1
function	list from ||| from file field	count=1
function	store a ||| store	count=2
function_arg	file and [arg_2] ||| [arg_2] [function_1]	count=4
function	parameter of ||| parameter	count=2
function	list ||| file field list	count=2
function	segments per [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] [arg_2] possible choosing ||| [function_1] [arg_2]	count=1
class	on bits in pattern ||| pattern machine	count=1
class	disk ||| iface	count=1
function	metrics value to json ||| to json	count=1
function	segments that correctly predicted ||| predicted	count=1
module	given database ||| database	count=1
function_arg	applies [arg_2] ||| [function_1] [arg_2]	count=2
function	settings [function_2] ||| [function_2] [function_1]	count=2
function	the first generation in ||| first non full generation	count=1
function	maximum number of ||| max	count=2
function	as a string ||| string	count=2
function	[function_1] local inhibition ||| [function_2] [function_1]	count=3
class	prediction ||| prediction logger	count=1
class	a sequence ||| activity	count=2
function	increment ||| increment	count=1
function	parse a string ||| parse string	count=3
class	winner [class] ||| [class]	count=2
function	dict with ||| dict	count=1
arg	input pattern and all ||| inputpattern	count=1
function	the segment ||| segment	count=1
function	within the range ||| delete range	count=1
module	indices of the ||| algorithms	count=1
module	the ||| data	count=4
function	to the classifier ||| classifier	count=1
function	[function] database ||| update [function]	count=3
function	[function_1] method ||| [function_1] [function_2]	count=1
function	swarm's state ||| swarm state	count=1
function	for the "dryrun" action ||| start search	count=1
function_arg	[function_1] further processing ||| [arg_2] [function_1]	count=2
function	as optparse callback for ||| callback	count=1
function	[function_1] have an ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] is one whose name ||| [function_1] name [arg_2]	count=2
function_arg	[function_1] queue of ||| [arg_2] [function_1]	count=1
function	get ||| job get	count=1
function	[function_1] index of ||| [function_1] field [function_2]	count=1
function	the given category ||| category	count=1
arg	from spatialoutput [arg_2] ||| [arg_1] [arg_2]	count=1
class	worker or runs ||| hyper search runner	count=1
function_arg	[function_1] that corresponds ||| [arg_2] [function_1]	count=2
function	compute the singular value ||| compute	count=1
function_arg	passes [function_1] [arg_2] completion ||| [function_1] [arg_2]	count=1
class	:returns int the ||| stream	count=1
function	[function] period ||| get [function] months and	count=1
function	[function_1] [function_2] ||| [function_1] metric sequences [function_2]	count=45
function	[function_1] a json ||| [function_1] [function_2]	count=2
class	new model ||| model	count=1
function	file and converts it ||| file	count=1
class	distribution ||| multinomial distribution	count=1
function	[function_1] the label ||| [function_1] [function_2] start end	count=1
function	[function_1] labels ||| [function_2] [function_1] category	count=3
function	[function_1] activity ||| monitor mixin mm get [function_1] [function_2] plot title showreset resetshading	count=2
function	optparse callback ||| callback	count=1
module	a sequence of periodicactivityrequest ||| opf	count=2
function	method override] returns the ||| get	count=1
function	metrics value to ||| metrics to	count=1
function	active synapses ||| active inc	count=2
function	[function_1] string ||| [function_2] [function_1]	count=1
function	should only ||| update job	count=2
function	set the ||| set encoder	count=1
arg	inference and/or learning and ||| rfinput resetsignal	count=1
function	correctly predicted this ||| predicted	count=1
function	name for ||| for	count=1
function	[function_1] to generate ||| [function_2] simple coinc [function_1]	count=1
function	over [function_2] ||| [function_1] [function_2]	count=3
function	histogram of the ||| histogram	count=1
module	callbacks ||| frameworks	count=1
arg	the permanence ||| permanence	count=2
function	[function_1] bookmark ||| [function_2] [function_1]	count=1
function	[function_1] the inference ||| [function_1] experiment [function_2] dir	count=1
arg	executes the ||| outdir usagestr hsversion	count=1
function	and ||| import and	count=1
function	pretty print the connections ||| pretty print connections	count=1
function_arg	[function_1] within ||| [function_1] labels [arg_2]	count=4
function	global inhibition performing global ||| columns global	count=1
arg	cell ||| cell	count=2
class	gets ||| opftask driver	count=1
function	is sent only to ||| only	count=1
function	[function_1] [function_2] ||| [function_2] simple coinc [function_1]	count=5
module_class	[module_1] hypersearch implementation ||| [module_1] [class_2] worker process updated	count=1
function	generates the ||| generate	count=1
function_arg	index [arg_2] ||| [function_1] [arg_2]	count=1
class	generated permanence ||| pooler	count=1
class	of the ||| record stream	count=1
function	a dataset of ||| dataset	count=1
class	the ||| record stream iface	count=3
function_arg	chunk [arg_2] ||| [function_1] records [arg_2]	count=1
function	search ||| search	count=2
class	be ||| phase	count=1
function	[function_1] active columns ||| [function_2] [function_1]	count=1
module_class	the model's predictionlogger ||| swarming opfmodel runner	count=1
function	active [function_2] ||| [function_2] [function_1]	count=7
function	attempt to insert a ||| insert or	count=1
function	job that is presently ||| job no	count=1
function	category ||| set category	count=1
function_arg	[function_1] [arg_2] ||| [function_1] over time [arg_2]	count=6
function	duty cycle period ||| duty cycle period	count=3
class	previous winner [class] ||| [class]	count=2
function	is initialized ||| init	count=1
function	converts an int ||| int	count=1
class	constructor ||| metric multi	count=1
function	adds one ||| add	count=1
class	of ||| record stream iface	count=1
function	search on ||| search	count=1
function	input names in spec ||| input names	count=1
function	[function_1] inactive synapses ||| [function_2] [function_1]	count=4
function	returns the dimensions of ||| get column dimensions	count=1
module	must be greater ||| opf	count=1
function	that ||| init	count=2
class	temporalmemory instances ||| temporal	count=1
function	remove labels from each ||| remove labels	count=1
function_arg	a dataset [arg_2] ||| [arg_2] [function_1]	count=1
arg	and a prediction ||| prediction	count=1
function	segment update the ||| to segment updates	count=1
function	fetch jobids for jobs ||| jobs for client	count=2
function	that ||| perm	count=1
function	schema note this is ||| schema	count=1
function	duty cycles [function_2] ||| [function_1] [function_2]	count=1
class	active state ||| backtracking	count=1
function	and deletes any segments ||| segments	count=1
function_arg	[function_1] for reaping ||| [arg_2] [function_1]	count=4
arg	store [arg] as ||| [arg]	count=1
class	encoder for ||| encoder	count=2
function	database name for ||| name	count=1
arg	metricsiface-based module ||| metricspec	count=1
function	[function_1] file ||| [function_1] [function_2]	count=20
function	true if all records ||| is completed	count=2
class	metric if ||| aggregate metric	count=1
function	index [function_2] ||| [function_2] reset field [function_1]	count=2
function_arg	[function_1] within ||| [function_1] label [arg_2]	count=2
class	to the current ||| manager	count=1
function	returns the potential ||| get potential	count=2
function	@param ||| init	count=2
function	area under the curve ||| area under curve	count=1
function	non-zero bits if the ||| to non zero bits	count=1
function	[function_1] an int ||| [function_2] [function_1]	count=2
function	print the [function_2] ||| [function_2] [function_1]	count=4
arg	aggregated dataset ||| aggregationinfo inputfile	count=1
function_arg	[function_1] bookmark ||| record stream iface get [function_1] [arg_2] range	count=1
function	attempt to ||| or get unique job no retries	count=1
arg	of the 'with' block ||| yupe value traceback	count=1
function	list from the a ||| from	count=1
function	returns args dictionary ||| args	count=1
arg	f to the ||| f	count=2
function	a lookup dictionary ||| lookup dict	count=1
arg	i and j ||| i j	count=3
function	artificial [function_2] ||| [function_1] [function_2]	count=4
arg	reaping a variable number ||| optstr value parser	count=1
arg	and type [arg] ||| pos size [arg]	count=6
function	[function_1] fewest number ||| [function_2] [function_1]	count=4
class	create ||| node	count=1
function	score on ||| score	count=1
function	that returns a list ||| get ephemeral	count=1
class	sample ||| classifier region	count=1
function	a dict with ||| dict	count=1
module	mark the ||| algorithms	count=1
function	existing job that is ||| job no	count=1
function	job is expected to ||| start job	count=1
function	job that is ||| resume job no retries	count=1
class	runner's _hypersearchjob ||| hyper search runner	count=1
class	for ||| pooler	count=1
arg	given filename ||| cls filename	count=2
function	[function_1] models that ||| [function_1] err [function_2]	count=1
arg	that defines the ||| encoderdict	count=1
function_arg	optional [arg_2] ||| [function_1] clientkey [arg_2]	count=3
class	returns ||| knnanomaly classifier region	count=1
function	the range [function_2] ||| [function_2] [function_1]	count=2
function	filters ||| filters	count=1
function	print a floating ||| print	count=1
function_arg	[function_1] csv file ||| [arg_2] [function_1]	count=1
module	the results ||| swarming	count=1
class	best model [class_2] ||| [class_2] [class_1]	count=1
function	partition ids this can ||| partition ids	count=1
class	given hypersearch ||| hyper search runner	count=1
arg	update an existing one ||| modelparams modelparamshash metricresult	count=1
function	print the list ||| print	count=1
function	overlap ||| overlaps	count=1
function_arg	[function_1] permanence for ||| [arg_2] [function_1]	count=1
function	neighborhood [function_2] ||| [function_2] [function_1]	count=1
function	for the metric ||| metric	count=1
function	copies ||| copy	count=1
arg	all configuration properties from ||| cls	count=1
function_arg	the field i ||| field i value	count=1
function	fetch jobids for jobs ||| active jobs for	count=2
class	this is ||| model record	count=1
function	as an int if ||| int	count=1
module	a dict and ||| swarming	count=1
module	that ||| algorithms	count=1
function	traces to be ||| traces	count=1
module	synapses that is ||| algorithms	count=1
function	this routine will update ||| update stats	count=1
function_arg	and [arg_2] ||| [arg_2] [function_1]	count=1
function	completed ||| set completed	count=2
function	returns the indices ||| get	count=3
function	to [function] ||| job [function]	count=1
function	table and count the ||| job count	count=1
arg	maps the coordinate to ||| cls coordinate	count=1
arg	file ||| path	count=1
function	has changed since the ||| dirty	count=1
function	a file and ||| file	count=1
arg	the potential mapping for ||| potential	count=1
function	given as percent ||| pct	count=1
class	the current tm ||| tm	count=2
function	the [function_2] ||| [function_1] [function_2]	count=2
class	policy instance ||| connection policy	count=1
arg	bucket index return ||| index	count=1
function	[function_1] true if ||| [function_2] [function_1]	count=4
arg	return a dict describing ||| cls filename path	count=1
arg	of the specified ||| idx	count=1
function	the category [function_2] ||| [function_2] [function_1]	count=4
arg	options ||| options	count=1
function	[function_1] range from ||| [function_1] [function_2]	count=1
function	called between learning ||| learning	count=1
function	cells to [function_2] ||| [function_2] [function_1]	count=2
function	floating point ||| float	count=1
class	elements ||| activity	count=2
function_arg	from [arg_2] ||| [function_1] knn [arg_2]	count=3
function	cell and deletes ||| in cell	count=2
function	dictionary of ||| get	count=1
function	to be status_notstarted ||| with retries	count=1
function_arg	[function_1] the network ||| [function_1] [arg_2]	count=1
function	bucket [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] labels from ||| [function_2] [function_1]	count=4
function	returns the index ||| get	count=1
arg	command ||| identitypolicyobj	count=1
function	table and count ||| count	count=1
function	[function_1] qualifies a ||| [function_1] [function_2]	count=3
function	the best result ||| best	count=1
function	the fewest ||| least allocated	count=1
function	to a bit ||| bit for	count=1
class	provide storage ||| record stream	count=1
function	insert a row with ||| insert	count=1
function	generate a coincidence [function_1] [function_2] random inputs to the ||| [function_2] coinc [function_1] ncoinc length activity	count=3
function	specific [function] by ||| get report [function]	count=1
function	process ||| process	count=2
function_arg	[function_1] that defines ||| [arg_2] [function_1]	count=1
class	search the configuration ||| configuration	count=2
function_arg	returns log(exp [function_1] [arg_2] numpy arrays values in ||| [function_1] [arg_2] out	count=2
module	head and the ||| swarming	count=1
function_arg	[function_1] that ||| [arg_2] [function_1]	count=1
function_arg	segment update [arg_2] ||| [arg_2] [function_1]	count=1
arg	of values 'values' into ||| values	count=1
function	[function_1] a json ||| [function_2] [function_1]	count=2
function	to get ||| get caller	count=1
arg	coordinate ||| cls coordinate	count=1
function	of results generated ||| results	count=1
module	number of records that ||| frameworks opf	count=1
function	the predictive [function_2] ||| [function_1] [function_2]	count=1
function_arg	updates the [arg_2] ||| [function_1] [arg_2]	count=1
class	callbacks this ||| opftask driver	count=1
function	returns the permanence ||| get	count=3
class	initialized in a ||| spatial pooler	count=1
function_arg	region [arg_2] ||| [arg_2] [function_1]	count=2
function	per input [function_2] ||| [function_2] [function_1]	count=2
module	back at ||| data	count=1
function	[function_1] job ||| [function_2] [function_1]	count=6
class	a ||| iface	count=1
function_arg	to json [arg_2] ||| [function_1] [arg_2]	count=3
function	it comes to high-order ||| cells shared	count=1
function	sets the boost factors ||| set boost factors	count=1
module_class	to [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	segment update ||| to segment updates	count=1
module	construct [module_2] ||| [module_1] [module_2]	count=1
class	the storage or ||| record stream iface	count=1
module	sequence of ||| frameworks opf	count=2
function	return a numpy ||| get	count=2
function	[function_1] synapse count ||| [function_1] [function_2]	count=8
arg	containing [arg] of ||| [arg]	count=1
module	file and write the ||| frameworks opf	count=1
module	[module] a ||| [module]	count=9
function	interpret ||| locked handle	count=1
function	returns a [function_2] ||| [function_1] custom [function_2]	count=4
function	types corresponding ||| types	count=1
arg	one encoder ||| name encoder	count=1
function	on cell ||| on cell	count=2
function	predicted => [function_2] ||| [function_2] [function_1]	count=4
function	score on the ||| err score	count=1
arg	compute() on every ||| activecolumns	count=1
module	is the ||| frameworks opf	count=1
function_arg	the anomaly [arg_2] ||| [function_1] add label [arg_2]	count=1
class	jobs table for a ||| client jobs dao	count=1
function	is used in nupic ||| get output	count=1
class	at the ||| record stream	count=1
function	given metrics value to ||| metrics to	count=1
function	status_running mode the job ||| job	count=1
function	is initialized in ||| init perm	count=1
class	greater than 0 ||| iteration phase	count=1
function	to the category inference ||| infer	count=1
class	region ||| region	count=4
function	description python script ||| description script	count=1
function	pick a value ||| pick	count=1
class	on the passed ||| permute	count=1
function	generate the string ||| generate	count=1
function	[function_1] number of ||| [function_2] synapses per segment [function_1]	count=3
function	from the ||| from	count=3
function	attempt to insert ||| insert or get unique job no	count=1
function	new trace made ||| trace	count=1
arg	and temporaloutput ||| temporaloutput	count=1
class	us back at ||| stream	count=1
arg	records - ||| key chunkindex	count=1
function	checkpoint for ||| checkpoint	count=1
function	can be ||| init	count=1
function	a worker ||| get worker	count=1
arg	retrieve the requested ||| cls prop	count=6
arg	a list of values ||| values	count=1
function_arg	[function_1] [arg_2] ||| [function_1] synapse [arg_2]	count=6
function	htmpredictionmodelcontroldisablesplearningcb ||| enable splearning	count=1
function	both ||| all	count=2
module_class	results and [class_2] ||| [module_1] [class_2]	count=2
arg	values 'values' into the ||| values	count=1
function	latest ||| pickup	count=1
function	the output cache associated ||| output cache	count=1
function	list of labels for ||| metric labels	count=2
function_arg	from [arg_2] ||| [arg_2] [function_1]	count=7
function	existing job ||| job no	count=1
function	'timestamp' ||| timestamp	count=1
function	convert a list ||| strip list	count=1
arg	edits ||| properties	count=2
function	inferencetype ||| inference type	count=1
arg	the cells passed in ||| cls cells	count=1
function	returns a dict ||| get custom dict	count=2
class	reset ||| permute variable	count=1
function	description of ||| description	count=1
function	learning ||| learn	count=3
function	[function_1] number to ||| [function_2] [function_1]	count=6
function_arg	[function_1] params must ||| [arg_2] [function_1]	count=1
class	inhibition this method ||| pooler	count=1
function	of the active ||| active	count=2
module	return ||| frameworks opf common_models	count=1
arg	dtype that ||| dtype	count=3
function	the index ||| cell index	count=1
function_arg	[function_1] and b ||| [function_1] [arg_2]	count=3
function	[function_1] predicted => ||| [function_1] metric sequences [function_2]	count=2
class	return ||| claclassifier region	count=1
function	reset the velocity to ||| reset velocity	count=1
function	called only [function] ||| get output [function]	count=3
arg	on params into ||| jobid params	count=1
arg	records records - a ||| chunkindex fields	count=1
function	of model ||| models get	count=1
module	see ||| hypersearch	count=1
class	the file again) ||| record	count=1
arg	request but only ||| cmdline jobhash clientinfo	count=1
function	percent [function_2] ||| [function_1] [function_2]	count=1
class	policy ||| policy	count=3
module	periodicactivityrequest elements ||| frameworks opf	count=2
class	connection policy typically ||| connection	count=1
arg	index @param i ||| i segidx	count=1
function	p [function] params as ||| is [function]	count=1
function	hypersearch job ||| search	count=1
function	to insert a ||| insert	count=1
class	remove ||| htmprediction model	count=1
function	stored checkpoint for the ||| checkpoint	count=1
function_arg	and returns [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] assuming ||| [arg_2] [function_1]	count=4
function	[function_1] region ||| [function_2] [function_1]	count=1
module_class	[module_1] files ||| [module_1] configuration [class_2]	count=1
function	logging ||| logging	count=1
function	the bucket map ||| bucket map	count=2
class	stream ||| stream reader	count=4
function	adds one ||| add encoder	count=1
function	updates a duty ||| update duty	count=1
function_arg	passes [function_1] [arg_2] note upon completion ||| [function_1] [arg_2]	count=1
class	given model ||| model runner	count=1
function	permanence value for ||| init perm	count=1
function	files into a ||| files	count=1
function	models ||| models	count=5
function	[function_1] initial ||| [function_2] [function_1]	count=1
function	region to ||| classifier region	count=1
function	a local history buffer ||| shifted ground truth	count=1
function	the classifier ||| classifier	count=1
function	a saved [function_2] ||| [function_1] job [function_2]	count=1
function	segments in [function_2] ||| [function_2] [function_1]	count=1
class	xml file ||| configuration	count=1
class	remain in this phase ||| phase spec learn and	count=1
function	a given field within ||| field	count=1
arg	the network will ||| network	count=1
function	the minimum ||| min	count=2
function	link ||| link	count=1
function_arg	[function_1] all properties ||| [function_1] [arg_2]	count=2
function	list of numbers ||| strip list	count=1
function	[function_1] [function_2] ||| [function_2] [function_1] category	count=4
function	[function_1] curve ||| [function_2] [function_1]	count=3
arg	network will ||| network	count=1
function	jobs in ||| active jobs	count=2
function	get the connected ||| get connected	count=2
class	this ||| runner	count=1
class	returns ||| temporal memory	count=8
class	opf model runner ||| opfmodel runner	count=1
function	that is initialized ||| perm	count=1
class	models ||| client jobs dao	count=1
function	area ||| area	count=1
function	description [function_2] ||| [function_1] [function_2]	count=6
function	interface to write ||| prediction logger	count=2
class	xml configuration [class_2] ||| [class_1] [class_2]	count=8
function	on ||| of on	count=1
function	periodic ||| periodic	count=1
arg	defines ||| options encoderdict	count=1
function	special ||| special	count=1
arg	job request but ||| cmdline jobhash	count=1
arg	keys being the field ||| inputrow	count=1
function_arg	passes the "finish [function_1] [arg_2] completion ||| [function_1] [arg_2]	count=1
function	[function] duty ||| [function] duty	count=1
arg	- ||| key chunkindex fields	count=1
module_class	[module_1] [class_2] for ||| [module_1] [class_2] get	count=1
function_arg	[function_1] classifier within ||| [arg_2] [function_1]	count=12
function	match any ||| match	count=1
function	[function_1] of both ||| [function_2] [function_1]	count=2
arg	records read ||| records key	count=1
function_arg	[function_1] expression ||| [function_1] runtimeelement [arg_2]	count=1
function	facility's handler handleerror function ||| error debugging	count=1
arg	values ||| values freqcounts	count=1
function	change [function] maxval using ||| set min [function]	count=1
function	insert a new ||| insert	count=1
function	concurrency violation [function_2] ||| [function_2] check for [function_1]	count=3
function	traces ||| traces	count=1
function	centre offsets [function_2] ||| [function_1] [function_2]	count=3
function	mean ||| mean	count=2
arg	permanence for a ||| permanence	count=1
function	attempt to ||| or get unique	count=1
arg	the prediction ||| prediction accumulatederror historybuffer	count=1
function_arg	[function_1] and executes ||| [arg_2] [function_1]	count=4
function	for ||| get description	count=2
function	[function_1] only if ||| [function_1] field [function_2]	count=1
function	[function_1] violation ||| [function_1] [function_2]	count=3
module	note [module_2] ||| [module_1] [module_2]	count=1
function	raw anomaly ||| compute raw anomaly	count=2
function	it as a float ||| float	count=2
function	return the distances ||| get distances	count=3
class	inference [class_2] ||| [class_1] [class_2]	count=2
function_arg	cycles for [arg_2] ||| [arg_2] [function_1]	count=3
class	construct a variable that ||| permute	count=1
function	an int if ||| int	count=1
arg	than minpermanence and deletes ||| minpermanence	count=1
function	delete ||| delete model	count=1
function	of an existing job ||| resume job	count=1
function	check [function_2] ||| [function_2] [function_1]	count=3
class	synapses ||| spatial pooler	count=2
class	sdr classifier factory ||| sdrclassifier factory	count=2
function	jobs in the ||| get active jobs	count=2
function	per cell ||| per cell	count=2
module_class	[module_1] contains description ||| [module_1] file [class_2]	count=1
function_arg	[function_1] segment ||| [function_1] [arg_2]	count=2
module	randomly generated ||| algorithms	count=1
function	[function_1] of the ||| [function_2] [function_1]	count=5
class	a sequence of periodicactivityrequest ||| periodic activity	count=2
function_arg	print [arg_2] ||| [arg_2] [function_1]	count=3
function	the total on ||| on	count=1
module	the ||| opf	count=13
function	of segments [function_2] ||| [function_2] [function_1]	count=7
function	[function_1] the boost ||| [function_1] [function_2]	count=1
function	a dictionary of metrics ||| get	count=1
function	cycles for each column ||| cycles	count=1
function	[function_1] [function_2] ||| [function_2] best matching [function_1]	count=8
module	to ||| data	count=2
arg	message ||| message	count=1
function	returns a list of ||| get	count=4
function	the first ||| first non	count=1
arg	matches 'curvalue' ||| fieldname newvalue curvalue	count=1
arg	object segment object ||| segment	count=1
function	of paths ||| config paths	count=1
function	on bits for ||| for	count=1
function	output [function_2] ||| [function_2] [function_1]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] exist after [arg_2]	count=1
module_class	the columns in ||| algorithms spatial pooler	count=1
function	[function_1] log scale ||| [function_2] [function_1]	count=1
function	results and caches ||| results	count=1
function	returns the duty cycle ||| get duty cycle	count=1
class	an inference is made ||| inference element	count=1
function	encodings ||| encodings	count=1
function	the inference value ||| infer	count=2
class	the model [class_2] ||| [class_2] [class_1]	count=1
module	value for a ||| algorithms	count=1
class	value ||| pooler	count=1
function	with ||| row with	count=1
function_arg	[function_1] modelid this ||| [arg_2] [function_1]	count=1
arg	monitor monitormixinbase monitor mixin ||| monitor title	count=1
function	pickle ||| pickle	count=1
arg	request ||| cmdline clientinfo clientkey	count=1
arg	params must ||| params	count=1
function	segment ||| segment active synapses	count=2
class	policy instance ||| transaction connection policy	count=1
module_class	and [class_2] ||| [module_1] [class_2]	count=4
class	returns ||| record stream iface	count=3
function	centre [function_2] ||| [function_2] [function_1]	count=3
function	the best [function_2] ||| [function_2] [function_1]	count=8
arg	size as inlist ||| inlist	count=1
function	for jobs in ||| get active jobs for	count=2
function	[function_1] [function_2] ||| [function_1] list to [function_2]	count=6
function	the predicted segment ||| get predicted segment	count=2
arg	prediction ||| prediction record result	count=1
function	pretty ||| pretty	count=2
class	inferences ||| basic prediction	count=1
class	of the record stream ||| record stream	count=1
class	[class_1] predictionlogger object ||| [class_2] [class_1]	count=1
function	job that ||| job	count=1
function	labels from each record ||| labels	count=1
class	generated ||| spatial pooler	count=2
function_arg	[function_1] input sample ||| [arg_2] [function_1]	count=1
arg	of values ||| values	count=1
function	cell ||| on cell	count=1
function	an int to a ||| int	count=1
arg	data ||| data std	count=1
arg	"pay attention mode" after ||| numberofcols cellspercolumn initialperm connectedperm	count=1
function	far away ||| away	count=1
function	(passed in 'results'), filter ||| filter	count=1
function	parameter of [function_2] ||| [function_2] [function_1]	count=4
arg	get the points ||| centerindex radius dimensions	count=1
function	trace made up of ||| trace	count=1
function	local inhibition is ||| columns local	count=1
function	[function_1] plot of ||| [function_1] cell [function_2]	count=1
function	existing job that is ||| resume job no	count=1
function	validates the --descriptionfromfile option ||| description from file option	count=1
class	and tag predicted field ||| field	count=1
module_class	[module_1] inference ||| [module_1] [class_2] element	count=2
class	sequence of periodicactivityrequest elements ||| activity	count=2
function	metric [function_2] ||| [function_2] [function_1]	count=6
function	for [function_2] ||| [function_1] [function_2]	count=6
class	category ||| knnclassifier	count=1
function	[function_1] current active ||| [function_1] [function_2]	count=1
arg	sequences ||| seqlength	count=1
class	at the ||| record	count=1
function	setting and persist it ||| property	count=2
function	create and ||| init	count=1
class	callbacks this ||| driver	count=1
arg	of records read ||| records key	count=1
function	like _getonematchingrownoretries(), but ||| one	count=1
class	this phase ||| phase spec learn and infer	count=1
function	learn [function_2] ||| [function_2] [function_1]	count=1
arg	standard deviation in distributionparams ||| distributionparams	count=1
function	best result so far ||| best	count=1
class	best model ||| model	count=1
function	+ ||| sum	count=1
function	of job ||| jobs get fields	count=1
function	table including relevant ||| jobs	count=1
function	state to 'newstate' ||| set swarm state	count=1
function	list from the ||| from file field	count=1
function	generate the initial first ||| generate model2	count=1
function	this method will remove ||| knn	count=1
class	put us ||| record	count=1
function	correctly predicted ||| activate predicted	count=1
function	indicate the [function] ||| reset sequence [function]	count=1
function	a parameter [function_2] ||| [function_2] [function_1]	count=4
function	anomaly score ||| anomaly	count=1
function	generate the string that ||| generate perm	count=1
function	the inference output directory ||| inference	count=1
function	[function_1] distances from ||| [function_1] [function_2]	count=1
class	should ||| terminator	count=1
module	of ||| data	count=1
function	to a ||| to	count=1
function	jobids for jobs ||| get active jobs for client	count=2
function_arg	callback [arg_2] ||| [function_1] option [arg_2]	count=3
module	callbacks this ||| frameworks	count=1
function	a coincidence [function] ||| generate coinc [function]	count=3
arg	compute() on every iteration ||| activecolumns	count=1
function	dictionary of metrics ||| get	count=1
class	the file is ||| file	count=1
arg	records - ||| chunkindex fields	count=1
function	[function_1] ids this ||| [function_2] [function_1]	count=3
function	training pattern that is ||| other training pattern	count=1
function	where the job type ||| type	count=1
arg	and optionally the best ||| particlestate newbest	count=1
arg	graph is ||| node_attrs	count=1
function	models table including ||| jobs of	count=1
function	the 'category' ||| category	count=1
function	by the same ||| unique	count=1
arg	[arg] possible choosing ||| cls connections random [arg]	count=1
arg	chunk ||| key	count=1
function	per [function_2] ||| columns [function_1] [function_2]	count=1
function	[function_1] inference state ||| [function_2] [function_1]	count=2
arg	index ||| index partitionid	count=1
function	concurrency violation ||| concurrency violation	count=2
function	delete the stored ||| delete model	count=1
function	[function_1] exit ||| [function_1] sys [function_2]	count=1
arg	associate ||| partitionid	count=1
function	cycles [function_2] ||| [function_1] [function_2]	count=1
function	[function] custom ||| [function] custom	count=1
function	generation in the given ||| generation	count=1
arg	permanence for ||| permanence	count=1
function	the learning ||| learning	count=1
function	metric over an indices ||| get metric	count=1
class	a sequence ||| periodic activity	count=2
class	inference from ||| inference element	count=1
function	for this pynode ||| node spec	count=1
arg	a new job request ||| cmdline jobhash	count=1
function	anomaly ||| state anomaly	count=2
function	requested property and return ||| get	count=4
function	return the best model ||| best model	count=3
function	returns index and ||| get	count=1
function	inference of ||| infer	count=1
function	category labels [function] ||| [function]	count=2
function	the cell with the ||| cell	count=1
function	sequence of model ||| get	count=1
function_arg	field [arg_2] ||| [function_1] [arg_2]	count=1
class	does not provide storage ||| record stream	count=1
function	the a list ||| list	count=1
function	store a [function_2] ||| [function_1] [function_2]	count=1
function	every params [function_2] ||| [function_1] [function_2] tail	count=1
function	[function_1] records from ||| [function_2] [function_1]	count=2
function	[function] in ||| aggr [function]	count=1
function	from the a list ||| from file field list	count=1
function	the 'sequenceid' [function_2] ||| [function_2] [function_1]	count=1
class	jobs table ||| jobs dao	count=1
class	initialize ||| jobs dao	count=1
arg	string metrics a list ||| metrics label	count=1
function	whether global inhibition ||| global inhibition	count=1
function	matrix this ||| matrix	count=2
function	[function_1] encoder ||| [function_1] [function_2]	count=1
function	of ||| get	count=39
arg	state from proto object ||| cls proto	count=1
function	paths to search for ||| config paths	count=1
arg	fields a non-empty sequence ||| fields experimentdir label inferencetype	count=1
function	a metric over an ||| metric from	count=1
arg	minpermanence and deletes ||| minpermanence	count=2
module	current metric value and ||| swarming	count=1
function	as a string if ||| get string	count=2
function	position ||| position	count=4
function	get ||| get caller	count=1
function	[function_1] cell with ||| [function_2] [function_1]	count=3
function	gets a value of ||| get	count=1
function	optimization [function_2] ||| [function_2] [function_1]	count=1
function	to high-order ||| cells shared	count=1
function_arg	update the [arg_2] ||| [function_1] [arg_2]	count=7
function	[function_1] synapses per ||| [function_2] [function_1]	count=3
function_arg	population [arg_2] ||| [arg_2] [function_1]	count=3
function	metric values [function] ||| [function]	count=3
function	update the ||| job update results	count=1
function	from all 'othervars', ||| from	count=1
class	iterations must be greater ||| phase	count=1
function	potential [function_2] ||| [function_1] [function_2]	count=1
arg	maps the coordinate ||| coordinate	count=1
function	completion message ||| completion message	count=2
function	return ||| get end	count=1
function	returns a ||| get metrics	count=1
module	of ||| frameworks	count=3
function_arg	write [arg_2] ||| [arg_2] [function_1]	count=1
function	labels and returns a ||| label	count=1
class	constructor ||| basic dataset reader	count=1
function	local area density invalidates ||| local area density	count=1
arg	than minlikelihoodthreshold ||| minlikelihoodthreshold maxpredictionsperstep	count=1
arg	metric type ||| metric	count=1
class	file with the ||| file	count=2
function	generation in the ||| generation	count=1
class	that the file is ||| file record	count=1
function	the given column return ||| get	count=1
function	[function_1] sent only ||| [function_2] [function_1]	count=4
function	under the curve auc ||| under curve	count=1
function	duty cycles for all ||| active duty cycles	count=1
function	[function_1] a bool ||| [function_1] [function_2]	count=2
function	value ||| value	count=5
class	randomly generated permanence value ||| spatial pooler	count=1
function	[function_1] [function_2] classifier ||| [function_2] get [function_1]	count=3
class	the referenced value if ||| value	count=1
arg	type [arg] ||| pos size [arg]	count=6
function	of labels for the ||| metric labels	count=1
function	[function] the ||| load experiment [function]	count=1
class	of ||| iteration phase	count=2
arg	and/or learning ||| rfinput resetsignal	count=1
arg	dtype ||| dtype	count=3
module	'setup' callbacks ||| frameworks opf	count=1
function	number of ||| get num	count=1
function	permanence increment amount for ||| syn perm	count=2
function_arg	new job [arg_2] ||| [arg_2] [function_1]	count=4
function	predicted [function_2] ||| [function_2] [function_1]	count=4
arg	fields for all ||| fields	count=1
function	read [function] ||| get [function] record	count=3
function	concurrency [function_2] ||| [function_1] [function_2]	count=1
class	sets ||| temporal memory	count=7
function	a float if ||| float	count=2
function	[function_1] the aggregation ||| [function_1] [function_2] months	count=1
class	instance ||| iteration phase infer common	count=1
function	[function_1] active state ||| [function_2] [function_1]	count=1
class	greater than 0 ||| iteration	count=1
function	completed parameters ||| completed	count=1
function_arg	[function_1] b are ||| [function_1] [arg_2]	count=3
class	if the model ||| opfdummy model runner	count=1
function	a segment [function_2] ||| [function_2] [function_1]	count=10
arg	spatialoutput [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	all models [arg_2] ||| [function_1] for checkpointed [arg_2]	count=2
class	in this phase ||| iteration phase spec learn and infer	count=1
function	segment using ||| segment	count=1
arg	option ||| option	count=1
function	max value ||| multi arg max	count=1
function	and inference this routine ||| infer	count=1
function	is necessary upon entry ||| enter	count=3
module	'setup' callbacks ||| frameworks	count=1
function	lookup dictionary of ||| lookup dict	count=1
function	description file and returns ||| description file	count=1
function	[function_1] number ||| [function_2] [function_1]	count=13
function	have less than ||| trim	count=1
arg	job request ||| cmdline jobhash	count=1
arg	the results [arg_2] ||| [arg_1] [arg_2]	count=1
module	current ||| frameworks	count=1
module	encoders base ||| encoders	count=4
function	timedelta [function_2] ||| [function_2] [function_1]	count=3
function	at the end ||| end	count=2
module	that elapse between ||| frameworks opf	count=1
function	[function_1] curve auc ||| [function_1] [function_2]	count=3
class	emits ||| logger iface	count=1
function	[function] with an ||| [function] serialize extra	count=2
arg	description dictionary ||| modelconfig loglevel	count=1
class	inference is made and ||| inference	count=1
module_class	[module_1] experiment ||| [module_1] [class_2]	count=2
class	category that best matches ||| knnclassifier	count=1
class	stream to ||| stream reader	count=1
function	sensor region's encoder that ||| encoder	count=1
function	log scale representation ||| log	count=1
class	of distribution must be ||| multinomial distribution	count=1
module_class	[module_1] should ||| [module_1] model [class_2]	count=1
class	returns ||| data generator	count=8
function	if we should ||| hs	count=1
function	py ||| bucket values	count=1
function	spread offsets [function_2] ||| [function_2] [function_1]	count=1
function_arg	one instance [arg_2] ||| [arg_2] [function_1]	count=5
class	returns ||| description iface	count=1
function	an image ||| add2darray	count=1
function	completion ||| completion	count=1
arg	proto object ||| proto	count=2
function	process one ||| compute	count=1
class	description ||| description iface	count=1
class	randomly generated permanence ||| spatial	count=1
function	performing global ||| inhibit columns global	count=1
arg	coordinate to a ||| cls coordinate	count=1
arg	inputpattern and the ||| inputpattern	count=1
function	[function_1] [function_2] ||| previous value model reset [function_2] [function_1]	count=3
arg	potential mapping for ||| potential	count=1
arg	keys being the ||| inputrow	count=1
arg	record ||| record	count=2
class	the classifier ||| htmprediction model classifier helper	count=1
function	any segments ||| segments	count=1
function	[function_1] [function_2] - ||| [function_1] [function_2]	count=19
arg	singularvalues to ||| singularvalues	count=1
arg	segment ||| segment	count=4
function	function name ||| function	count=1
function	stream sources it ||| stream sources	count=1
function	the python logging ||| logging	count=1
arg	a message ||| level message	count=1
class	node [class] object ||| [class]	count=1
module_class	class [module_1] [class_2] ||| [module_1] [class_2]	count=2
class	[class_1] memory ||| [class_2] [class_1]	count=1
function	for temporalmemory instances ||| eq	count=1
function	duty cycle ||| duty cycle	count=3
function	generate a dataset ||| generate dataset	count=3
function	job ||| job	count=9
module	create and ||| regions	count=1
class	- if [class] ||| [class]	count=1
function	swarm's state to 'newstate' ||| swarm state	count=1
function	[function_1] from all ||| [function_2] [function_1]	count=3
function	[function_1] are determined ||| [function_2] [function_1]	count=7
function	labels that correspond ||| metric labels	count=1
class	initialized ||| spatial	count=1
module	:param ||| algorithms	count=1
class	file with ||| file	count=2
function	[function_1] 'category' field ||| [function_2] [function_1]	count=2
class	the ||| stream	count=4
class	'setup' ||| driver	count=1
function_arg	returns a range of [function_1] [arg_2] ||| record stream iface get [function_1] [arg_2] range	count=3
class	compute ||| anomaly likelihood	count=1
class	this phase ||| phase	count=1
arg	on params ||| jobid params	count=1
function	[function_1] position ||| [function_1] [function_2] whichvars	count=3
function	all models [function_2] ||| [function_2] [function_1]	count=1
class	to the model ||| model	count=2
function	value to [function_2] ||| [function_2] [function_1]	count=2
function	of a record a ||| record	count=1
function	[function_1] cell and ||| [function_2] [function_1]	count=1
function	[function_1] radius ||| [function_1] [function_2]	count=3
function	of learning and inference ||| infer	count=1
function	one instance ||| instance	count=1
function	init all of our ||| init state	count=1
class	input bits this method ||| pooler	count=1
function	[function_1] [function_2] ||| [function_1] err model [function_2]	count=6
function	the predicted segment ||| predicted segment	count=3
arg	must store [arg] as a ||| [arg]	count=1
function	return a datetime ||| get end	count=1
arg	permanence ||| perm columnindex	count=1
class	memory class ||| memory test	count=1
module	the result is ||| frameworks opf	count=1
class	_hypersearchjob ||| hyper search runner	count=1
function	py ||| bucket info	count=8
function	[function_1] completion ||| [function_2] [function_1]	count=3
arg	the cell ||| cell	count=1
function	category ||| get category	count=1
class	the discrete probability ||| discrete proposal	count=1
function	flush the file ||| flush	count=2
function	pooler see also htmpredictionmodelcontroldisabletplearningcb ||| enable tplearning	count=1
function	a unique category ||| category	count=1
function	the a list ||| field list	count=1
function_arg	sequences [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] stability [arg_2]	count=3
function	is used in nupic ||| output	count=1
function_arg	a [function_1] [arg_2] dict ||| [function_1] [arg_2]	count=2
module_class	results and updates ||| swarming opfmodel runner	count=1
function	return our connection id ||| get connection id	count=1
function	value for a ||| perm	count=1
class	we ||| hs	count=1
class	a randomly generated ||| pooler	count=1
function	jobids for jobs ||| get active jobs for	count=2
function	[function_1] and add ||| [function_2] check for [function_1]	count=1
function	for debugging ||| null	count=1
function	when the ||| element	count=1
function	duty cycle of ||| duty cycle	count=1
function	default traces ||| default traces	count=2
function_arg	chunk [arg_2] ||| [arg_2] [function_1]	count=1
arg	patterns to inputpattern ||| inputpattern	count=1
arg	a prediction ||| prediction record	count=1
function	the state in ||| state	count=1
function	[function] params ||| is [function]	count=3
arg	- a ||| chunkindex	count=1
function	the connections ||| connections	count=1
function	returns [function_2] ||| [function_1] [function_2] months	count=1
class	to the model ||| gram model	count=1
class	configuration file with ||| custom configuration file wrapper	count=2
class	more information ||| coordinate	count=1
function	[function_1] the anomaly ||| [function_2] [function_1]	count=19
arg	output array ||| output	count=1
arg	to the model ||| model	count=1
function	the a list of ||| field list	count=1
function	of the scalar values ||| scalar	count=1
arg	a mangled ||| privatemembername skipcheck	count=1
function	given column return the ||| get	count=1
arg	list of records ||| records key	count=1
module	initialize ||| frameworks opf	count=1
function_arg	distances between [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	jobid [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] directory ||| [function_2] [function_1]	count=2
class	a sdr classifier ||| sdrclassifier	count=1
function_arg	cell c ||| cell c	count=2
function	record ||| handle input record	count=1
function	returns the indices ||| get cell indices	count=1
function	convert a list ||| list	count=1
function_arg	returns a range of [function_1] [arg_2] 'bookmark' ||| [function_1] [arg_2]	count=6
class	jobs do not use ||| jobs dao	count=1
function	[function_1] labels ||| [function_1] [function_2]	count=11
module	greater than ||| frameworks	count=1
function_arg	[function_1] fields ||| [function_1] clientkey [arg_2]	count=1
function	[function_1] bool if ||| [function_1] [function_2]	count=1
module_class	this is [class_2] ||| [module_1] [class_2]	count=6
function	[function_1] active ||| [function_2] [function_1]	count=21
function	returns the verbosity level ||| get sp verbosity	count=1
function	column ||| column	count=4
function_arg	[function_1] [arg_2] ||| [function_1] wcoordinates cls coordinates [arg_2]	count=2
function	main [function_2] ||| [function_1] [function_2]	count=4
function_arg	on cell [arg_2] ||| [arg_2] [function_1]	count=2
function	database name for the ||| name	count=1
arg	aggregated dataset the ||| aggregationinfo inputfile	count=1
class	the model ||| model runner	count=1
arg	- a list of ||| chunkindex fields	count=1
function	of predictive [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] search ||| [function_1] [function_2]	count=3
arg	records ||| records key	count=1
arg	all ||| jobid	count=1
function_arg	[function_1] results string ||| [arg_2] [function_1]	count=1
function_arg	to checkpointdir ||| to checkpoint checkpointdir	count=1
class	returns ||| coordinate	count=1
class	[class] stores ||| [class]	count=3
function	next iteration cycle phase ||| phase	count=1
function	to the log ||| log	count=1
class	including 'setup' callbacks ||| driver	count=1
class	inference is made ||| inference	count=1
module_class	retrieves [module_1] [class_2] ||| [module_1] [class_2]	count=2
arg	on-times encountered in a ||| freqcounts title xlabel	count=1
class	stream ||| stream iface	count=4
function	[function_1] default traces ||| [function_1] [function_2]	count=1
module	must be greater than ||| opf	count=1
class	state ||| backtracking tm	count=3
function	a dated potential segment ||| segment	count=1
function	modules ||| modules	count=1
arg	and [arg_2] ||| [arg_2] [arg_1]	count=3
function	[function_1] all the ||| [function_2] [function_1]	count=2
function	list this ||| list	count=1
arg	less than minlikelihoodthreshold ||| minlikelihoodthreshold maxpredictionsperstep	count=1
class	weather ||| weather	count=1
function_arg	optional [arg_2] ||| [arg_2] [function_1]	count=6
function	numeric key for sorting ||| position sort key	count=1
function	[function_1] table ||| [function_1] [function_2]	count=1
class	the jobs table for ||| client jobs dao	count=1
function	input record ||| input	count=1
function	propagate field [function_2] ||| [function_2] [function_1]	count=1
module_class	to [module_1] [class_2] element ||| [module_1] [class_2]	count=1
function	don't need to be ||| members	count=2
function	to ||| to	count=9
function	return the interal _topdownmappingm ||| get	count=2
class	ensures that the file ||| file record stream	count=1
class	returns ||| record stream	count=1
function	a record a datetime ||| record	count=1
function	init ||| init state	count=1
function	insert a ||| insert and	count=1
function	returns the number ||| number	count=1
function	_getonematchingrownoretries(), but ||| get one	count=1
function	of periodicactivityrequest ||| init	count=2
function	[function_1] values ||| [function_1] [function_2]	count=1
function	return the distances from ||| get distances	count=1
function	was least [function_2] ||| [function_2] [function_1]	count=1
function	hyperplanes ||| hyperplanes	count=1
class	the best model ||| model	count=1
class	discrete probability distribution and ||| discrete distribution	count=1
function	field statistics ||| field statistics	count=1
class	us back at the ||| iface	count=1
function	[function_1] duty cycle ||| [function_2] [function_1]	count=1
arg	given the prediction ||| prediction	count=1
arg	and store all properties ||| cls	count=2
function	sets the predicted ||| set predicted	count=2
function	string if property does ||| string	count=2
function	returns the index of ||| get	count=1
function	generate a coincidence [function_1] [function_2] inputs to the ||| [function_2] [function_1] ncoinc length activity	count=3
function	get the logger ||| get logger	count=3
function	our base [function] class to ||| read std [function]	count=2
function	predicted this ||| predicted	count=1
function	[function_1] from number ||| [function_2] [function_1]	count=6
function	end and returns a ||| end	count=1
function	mapping from [function] ||| map current [function]	count=3
function	params [function_2] ||| [function_1] [function_2] tail	count=1
class	to hold a ||| connections	count=1
function	[function_1] learn from ||| [function_1] [function_2]	count=3
function	the current model and ||| model	count=1
function	length ||| length	count=3
function	record a [function_2] ||| [function_2] [function_1]	count=2
function	given category file ||| process category file	count=2
function	[function_1] encoder ||| [function_1] classifier only [function_2]	count=1
function	and return [function_2] ||| [function_1] [function_2]	count=4
class	an array ||| encoder	count=1
class	back ||| iface	count=1
function	[function_1] the field ||| [function_2] [function_1]	count=1
function	model as [function_2] ||| [function_2] [function_1]	count=4
function	public ||| public	count=1
class	of ||| record	count=1
function	an int ||| int	count=2
arg	start to [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] active segments ||| [function_1] [function_2]	count=1
function	predicted segment ||| predicted segment	count=3
function	initialize the [function_2] ||| [function_1] [function_2]	count=2
function	determines ||| duty cycles	count=1
function	in the experiment ||| experiment	count=1
function	phase 2 ||| phase2	count=1
module	base and ||| swarming	count=1
function	possible report ||| report	count=1
function	that warrant retries ||| retry sql	count=1
function	worker completion [function_2] ||| [function_1] [function_2]	count=4
function	a clipped ||| clipped	count=1
function	from the given swarm ||| swarm	count=1
class	be ||| iteration phase	count=2
function	[function_1] are reasonable ||| [function_2] [function_1]	count=4
function	[function_1] labels on ||| [function_1] [function_2]	count=1
class	active state from the ||| backtracking tm	count=1
function	as percent ||| pct overlap	count=1
function	but with [function_2] ||| [function_1] [function_2]	count=1
function	called to indicate the [function_1] [function_2] ||| previous value model reset [function_2] [function_1]	count=1
class	this model ||| previous value model	count=1
function	[function_1] [function_2] ||| [function_2] model [function_1]	count=3
function_arg	passes the [function_1] [arg_2] note upon completion ||| frameworks opf [function_1] cb [arg_2]	count=1
arg	a message to the ||| level message	count=1
arg	to inputpattern and ||| inputpattern	count=1
function	a metric over ||| get metric from	count=1
function	metadata [function] ||| get field [function]	count=3
function	print [function_2] ||| [function_2] [function_1]	count=5
class	updates ||| spatial pooler	count=4
function	[function_1] threshold ||| [function_1] [function_2]	count=3
class	stored ||| model classifier helper	count=1
class	iterations ||| phase	count=1
function	the 'category' field ||| category field	count=2
module	and return the ||| swarming exp_generator	count=2
class	k ||| knnclassifier	count=1
function	histogram of the ||| plot histogram	count=1
arg	a and b ||| a b	count=2
function	svd the svd is ||| svd	count=1
function	"persistentjobguid" value ||| generate persistent job guid	count=1
module_class	[module_1] filter ||| [module_1] [class_2]	count=1
function	the update [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] in ||| [arg_2] [function_1]	count=7
arg	keys being ||| inputrow	count=1
function	find the segment with ||| matching segment	count=1
class	experiments ||| hyper search	count=1
function_arg	[function_1] the bookmark ||| data stream reader [function_1] [arg_2] range	count=2
function	[function_1] determines ||| [function_1] [function_2]	count=1
function	a valid ||| valid	count=1
function	job ||| resume job	count=1
function_arg	serialized state ||| setstate state	count=2
function_arg	same client ||| insert unique client	count=1
function	returns a bookmark ||| get bookmark	count=2
class	a sequence of ||| periodic	count=2
function	settings are reasonable ||| reasonable settings	count=3
function	function to get ||| get caller	count=1
function	a new position ||| new position	count=2
function	[function_1] qualifies a ||| [function_2] [function_1]	count=3
function	a json file ||| json file	count=1
function	a string if property ||| get string	count=2
module	iterations must be greater ||| opf	count=1
function	svd is a ||| svd	count=1
module	as stored in ||| data	count=1
function	a - exp b ||| log diff exp	count=1
function	create ||| create	count=3
function	[function_1] predicted ||| [function_2] [function_1]	count=5
class	returns ||| model classifier helper	count=1
function	a connected state ||| connected	count=1
function	a metric over ||| metric from	count=1
class	the given inference ||| inference	count=1
arg	edits the ||| properties	count=2
arg	'model2' ||| alpha	count=1
function	the potential [function_2] ||| [function_1] [function_2]	count=1
function	print the connections in ||| print connections	count=1
function	compute profiling ||| compute	count=2
class	underlying claclassifier ||| claclassifier	count=1
module	that are being calculated ||| frameworks opf	count=1
module	:param network ||| frameworks viz	count=1
function	only [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] the smallest ||| [function_2] permanence [function_1]	count=3
class	- if [class] had ||| [class]	count=1
function	[function_1] the boost ||| [function_2] [function_1]	count=1
class	[class_1] type ||| [class_2] [class_1]	count=2
function	python script [function_2] ||| [function_1] [function_2]	count=1
function	learning and inference ||| stats infer	count=1
function	stream [function_2] ||| [function_2] [function_1]	count=4
module_class	[module_1] xml ||| [module_1] [class_2]	count=4
class	infactivestate ||| backtracking tmcpp	count=1
function	generate the ||| generate	count=4
function	get labels [function_2] ||| [function_2] [function_1]	count=2
module_class	[module_1] contains ||| [module_1] file [class_2]	count=1
function	of the 'category' ||| category	count=1
arg	the key 'errormetric', then ||| metricspec	count=1
function	list this is ||| list	count=1
arg	the specified ||| idx	count=1
function	through the jobs table ||| jobs	count=1
class	the classifier ||| knnanomaly classifier	count=1
function_arg	read state [arg_2] ||| [arg_2] [function_1]	count=1
class	marks the stream ||| stream	count=1
arg	rows rows ||| rows	count=1
function	compute the [function_2] ||| [function_1] timestamp record [function_2] recordts	count=1
function	[function_1] simple ||| [function_1] [function_2]	count=1
function	data [function_2] ||| [function_1] [function_2]	count=2
class	new metrics ||| metrics	count=1
function	local ||| inhibit columns local	count=2
arg	[arg_1] j ||| [arg_1] [arg_2]	count=1
function	cycle period ||| cycle period	count=2
class	this encoder this ||| encoder	count=1
module	value and ||| swarming	count=1
function	[function_1] with ||| [function_2] [function_1]	count=8
module	iterations must ||| frameworks	count=1
function	return the list ||| get metric	count=2
function	routine will update ||| update	count=1
function	implemented ||| file	count=1
arg	new job request ||| cmdline jobhash clientinfo	count=1
function	jobids for jobs ||| active jobs for client	count=2
function	columns [function] ||| avg columns [function]	count=1
function	[function_1] 'timestamp' field ||| [function_2] [function_1]	count=2
function	generated permanence ||| init perm	count=1
function	run of this model ||| comput model	count=1
arg	the coordinate to a ||| cls coordinate n	count=1
module	the experiment ||| frameworks opf	count=1
function	getbucketindices] ||| bucket indices	count=2
module	back ||| data	count=1
module	periodicactivityrequest elements ||| opf	count=2
class	again) ||| record stream iface	count=1
function	ids that ||| ids	count=1
function	[function_1] position ||| [function_2] [function_1]	count=5
function	region ||| add anomaly classifier region	count=1
arg	status_completed state ||| alreadyrunning	count=2
function	return [function] of ||| get [function]	count=1
function	column return ||| get	count=1
function	of possible encoder ||| generate encoder	count=1
function	where the max value ||| max	count=1
function	[function_1] of simple ||| [function_1] [function_2]	count=1
function	params parameters ||| params	count=1
class	custom ||| custom	count=4
function	to seconds in ||| seconds	count=1
arg	that if many timesteps ||| celltrace cellcount activitytype title	count=1
arg	spatialoutput and [arg_2] ||| [arg_1] [arg_2]	count=1
class	permanence value for a ||| spatial pooler	count=1
function	the max [function_2] ||| [function_2] [function_1]	count=6
function	a checkpoint ||| checkpoint	count=2
arg	records records - a ||| key chunkindex fields	count=1
function_arg	saving [arg_2] ||| [arg_2] [function_1]	count=1
function	pickle file ||| pickle file	count=1
function	generates centre [function_2] ||| [function_2] [function_1]	count=3
arg	for pattern index ||| index	count=1
function	value of 1 field ||| int field	count=1
arg	of the keys ||| keys	count=1
class	columns in the ||| spatial pooler	count=1
function	seed random number generator ||| init random	count=1
arg	permanence ||| perm	count=1
function	saturation ||| saturation	count=1
arg	decorator for retrying a ||| timeoutsec	count=1
arg	based on params ||| jobid params	count=1
function	area density invalidates ||| area density	count=1
function	search on a ||| search	count=1
arg	filter parameters ||| noise seed	count=1
function	return it as ||| get	count=4
function	cell in column with ||| cell	count=1
class	storage or false ||| record stream iface	count=1
function	only if the ||| if	count=1
class	average ||| average	count=1
function_arg	far and [arg_2] ||| [function_1] score [arg_2]	count=1
class	sequence of ||| activity	count=2
function	[function_1] nupic ||| [function_1] [function_2]	count=4
arg	within ||| start end	count=2
function	[function_1] file ||| swarming [function_1] [function_2]	count=1
function	[function_1] in ||| [function_2] [function_1]	count=1
class	see if the model ||| opfdummy model	count=1
arg	number of ||| inferenceargs	count=2
arg	from file ||| cls permworkdir outputlabel	count=1
module	at the ||| data	count=1
function	experiment [function] the given ||| load experiment [function]	count=1
function	the active cells in ||| active	count=1
function	[function_1] the label ||| [function_2] [function_1]	count=1
function	as far away ||| away	count=1
arg	the prediction ||| prediction	count=1
function	warrant retries ||| retry sql	count=1
arg	modelconfig ||| modelconfig control	count=1
module	of printouts for debugging ||| algorithms	count=1
function	[function_1] machine ||| [function_1] [function_2]	count=2
class	at the ||| stream	count=1
function	given swarm's state ||| state	count=1
function	[function_1] active ||| [function_1] trace [function_2]	count=1
function	test we ||| test	count=1
function	check whether this synapse ||| synapse	count=1
function_arg	returns a range of [function_1] [arg_2] 'bookmark' ||| data stream reader get [function_1] [arg_2] range	count=3
function_arg	get the [function_1] [arg_2] to ||| [function_1] [arg_2]	count=1
class	put us back ||| record stream iface	count=1
function	return the inferencetype of ||| get inference type	count=1
function_arg	[function_1] reaping ||| [function_1] option [arg_2]	count=3
function	for saving ||| data	count=1
class	including ||| driver	count=1
arg	the cells ||| cells	count=1
function	the column [function_2] ||| [function_2] [function_1]	count=2
arg	active synapses ||| activestate	count=1
function	[function_1] this file ||| [function_2] [function_1]	count=2
function	save ||| save	count=2
function	[function_1] [function_2] ||| [function_1] ephemeral members [function_2]	count=12
function	return the closest training ||| closest other training	count=1
module	be ||| frameworks opf	count=2
class	item in our history ||| bit history	count=1
function	[function_1] cycles ||| [function_1] [function_2]	count=15
module	dictionary of ||| regions	count=1
function_arg	callback [arg_2] ||| [arg_2] [function_1]	count=4
arg	of records read ||| records	count=1
class	[class] instance via ||| [class]	count=3
class	return ||| policy base	count=1
function	sent only [function_2] ||| [function_2] [function_1]	count=2
function	the max value of ||| arg max	count=1
module	that is ||| algorithms	count=1
class	backtracking_tm ||| tmshim mixin	count=2
function	true if ||| is	count=5
class	records have been read ||| stream reader	count=1
module	the dictionary of ||| regions	count=1
function	the job type ||| of type	count=1
function	datetime object compute the ||| compute	count=1
class	non-temporal prediction ||| temporal prediction	count=1
function	job is [function_2] ||| [function_2] [function_1]	count=1
function	[function] modified their ||| process updated [function]	count=2
function	predictive cells ||| predictive cells	count=4
function	[function_1] sources it ||| [function_2] [function_1]	count=1
function	accumulate a list ||| accumulate	count=1
class	columns in ||| spatial pooler	count=1
function	add [function_2] ||| [function_1] [function_2] start end	count=1
function	map [function_2] ||| [function_2] [function_1]	count=6
function	[function] for ||| [function]	count=1
class	state ||| region	count=2
function	for a list ||| flat list	count=1
function	function description in ||| top down compute	count=5
module	@return countstrace a new ||| monitor_mixin	count=1
function	[function_1] bucket map ||| [function_2] [function_1]	count=1
function_arg	statistics for [arg_2] ||| [function_1] [arg_2]	count=1
function	returns ||| get	count=94
function	[function_1] to seconds ||| [function_2] [function_1]	count=1
function	presentation of [function] ||| simulate [function]	count=1
class	if possible ||| temporal	count=1
function	label for a ||| get label	count=2
function	the next value ||| next	count=1
function	of model records ||| models get	count=1
function	module is to be ||| init	count=1
class	instance ||| phase infer common	count=1
function	returns a ||| init	count=1
function_arg	[function_1] metrics ||| [arg_2] [function_1]	count=5
arg	specified modelid this ||| modelid	count=1
class	a randomly ||| spatial pooler	count=1
function	error ||| error	count=2
function	a metric over an ||| get metric from trace	count=1
function	a list ||| list to	count=2
function	clear out ||| clear	count=1
function	see also htmpredictionmodelcontroldisablesplearningcb ||| splearning cb	count=1
function	[function_1] encoder ||| [function_2] [function_1]	count=2
function	state ||| set state	count=1
function	function to get ||| get	count=1
function	a [function_2] ||| [function_2] [function_1]	count=2
function	and reactivate ||| reactivate	count=1
module	all numbers ||| data generators	count=1
class	a connection ||| connection	count=1
function	all models ||| all	count=1
arg	from the result ||| result	count=1
function	[function] active ||| [function] active	count=1
function	int count [function] data ||| [function] data row	count=1
function	the inference output ||| inference	count=1
function	is a model that ||| model	count=1
function	of job records ||| get fields	count=1
arg	string metrics ||| metrics label	count=1
function	matching rows with ||| matching rows	count=1
class	configuration file with the ||| custom configuration file wrapper	count=2
function	instance the instance ||| instance	count=1
function	update [function_2] ||| [function_1] [function_2]	count=2
function	of the input ||| input	count=1
function	length for ||| length	count=1
function	number of [function_2] ||| [function_1] metric sequences [function_2]	count=5
function	result so far and ||| and err	count=1
function	the top ||| top	count=1
class	returns a randomly generated ||| spatial	count=1
function	[function_1] exit ||| [function_2] [function_1]	count=2
function	new [function_2] ||| [function_1] [function_2] whichvars	count=1
function_arg	returns [function_1] [arg_2] arrays values in a ||| [function_1] [arg_2]	count=2
function	artificial ||| variable	count=1
class	the given model ||| model	count=1
function	[function_1] cell ||| [function_1] in [function_2]	count=1
function	[function_1] local ||| [function_2] [function_1]	count=1
function	types corresponding to the ||| types	count=1
arg	to maxcols number ||| maxcols	count=1
function	swarms ||| swarms	count=1
function	initialized in a ||| perm	count=1
function	of hyperplanes used by ||| hyperplanes	count=1
class	of distribution ||| distribution	count=1
function	additional ||| get additional	count=2
function	is initialized ||| perm	count=1
function	[function_1] logger ||| [function_1] [function_2]	count=1
function	the predicted segment decrement ||| predicted segment decrement	count=1
function	statistics ||| stats	count=2
function	cycles for each ||| cycles	count=1
class	the policy instance ||| per transaction connection policy	count=1
function_arg	a serialized [arg_2] ||| [arg_2] [function_1]	count=2
function	we don't need ||| members	count=2
module_class	[module_1] underlying sdrclassifier ||| [module_1] [class_2]	count=2
class	our member variables that ||| backtracking tm	count=1
function	string ||| get string	count=2
function	labels ||| labels	count=7
arg	consisting of ||| groundtruth	count=1
function	results generated by an ||| results	count=1
function	description file and ||| description file	count=2
function	string of ||| string	count=1
class	the storage as ||| stream iface	count=1
function	of synapses per segment ||| synapses per segment	count=1
function	record in the model ||| model	count=1
function	field in a job ||| job set field	count=1
class	state and the ||| backtracking	count=1
function	set [function_2] ||| [function_1] [function_2]	count=1
arg	in the ||| jobid	count=1
arg	records read ||| records	count=1
function	synapses [function_2] ||| [function_1] [function_2]	count=6
function	activity ||| activity	count=1
function	string for ||| str	count=1
class	not implemented csv file ||| file	count=2
class	or runs ||| runner	count=1
function	segments [function_2] ||| [function_1] [function_2]	count=11
function_arg	returns [function_1] [arg_2] arrays values in a ||| [function_1] [arg_2] out	count=2
arg	b are ||| a b	count=1
function	plot of the cell ||| cell trace plot	count=1
function	returns the overlap ||| get overlap	count=3
function_arg	exp [arg_2] ||| [function_1] [arg_2]	count=1
arg	request but only if ||| cmdline	count=1
function	synapses that is initialized ||| init	count=1
class	the dataset generator with ||| data generator	count=1
function	additional specs ||| additional specs	count=2
rep	[module_class_1] [function_arg_2] ||| [module_class_1] [function_arg_2]	count=56
class	add ||| htmprediction model classifier helper	count=1
arg	proposed changes ||| activestate	count=1
function	a new [function_2] ||| [function_2] [function_1]	count=10
class	marks the stream ||| stream reader	count=1
function	from number ||| number	count=1
class	put us back at ||| record stream	count=1
arg	defines the ||| options encoderdict	count=1
function_arg	distances from [arg_2] ||| [arg_2] [function_1]	count=4
function	the predictive [function_2] ||| [function_2] [function_1]	count=1
function	the initial ||| initial	count=1
class	a worker or runs ||| hyper search runner	count=1
module	metric value and ||| swarming	count=1
function	what ||| header	count=1
function	randomly generated ||| init	count=1
function	the range ||| range	count=2
function	[function_1] model as ||| [function_2] [function_1]	count=1
function	[function_1] sources ||| [function_2] [function_1]	count=1
function	[function_1] field statistics ||| [function_1] [function_2]	count=1
function	updates ||| adapt segment	count=2
module	records that elapse between ||| frameworks opf	count=1
function	label for ||| get label	count=1
function_arg	and [arg_2] ||| [function_1] score [arg_2]	count=1
function	returns whether global inhibition ||| get global inhibition	count=1
arg	request but only if ||| cmdline jobhash clientinfo	count=1
function	[function_1] floating point ||| [function_2] [function_1]	count=6
function	records ||| records	count=7
function	[function_1] elements ||| [function_2] [function_1]	count=1
function	existing job that ||| job no	count=1
function	greater than ||| init	count=1
class	start [class] ||| [class]	count=1
function	element from [function_2] ||| [function_2] [function_1]	count=1
function	that is ||| init perm	count=1
function	randomly generated permanence ||| init perm	count=1
function	being optimized ||| optimized	count=1
function	compute profiling it if ||| compute	count=2
function	randomly ||| perm	count=1
function	the additional specs in ||| get additional specs	count=2
function	model [function_2] ||| [function_2] [function_1]	count=5
arg	temporaloutput ||| temporaloutput	count=1
function	[function_1] from ||| [function_2] [function_1]	count=30
class	back at ||| stream iface	count=1
arg	a description dictionary ||| modelconfig loglevel	count=1
function	models table including relevant ||| jobs	count=1
module	dict and returns ||| swarming	count=1
function	ids this can ||| ids	count=1
function	parse ||| parse	count=1
function	start of a new ||| states	count=1
function	if we should remove ||| hs	count=1
module_class	[module_1] model ||| [module_1] htmprediction [class_2]	count=2
function	pick ||| pick	count=1
function	matching rows with the ||| matching rows	count=1
function_arg	get the sensor [function_1] [arg_2] to ||| element [function_1] element [arg_2]	count=1
arg	csv file ||| path	count=1
function_arg	[function_1] a segment ||| [arg_2] [function_1]	count=2
function	segments for ||| segments	count=1
function	labels on ||| labels	count=1
function	returns the synapses for ||| synapses for	count=1
function	for number of ||| mm get	count=1
class	inference ||| conditional probability table2d	count=1
function	[function_1] sources it ||| opf description iface normalize [function_1] [function_2]	count=1
arg	in through the inputs ||| inputs	count=1
arg	to msg ||| msg	count=2
function	returns index ||| get	count=1
function	score on ||| err score	count=1
function_arg	[function_1] dest sp's ||| [function_1] permanences [arg_2]	count=1
function	[function_1] the outputs ||| [function_1] [function_2]	count=1
arg	[arg_1] a name ||| [arg_2] [arg_1]	count=2
function	potential ||| potential	count=2
class	of periodicactivityrequest ||| activity mgr	count=2
function_arg	anomaly [arg_2] ||| [function_1] get labels [arg_2]	count=1
function	for each ||| span for	count=1
function	result so far and ||| and	count=1
function	creates a ||| create	count=1
function	returning the category ||| category	count=1
function	experiment [function] the ||| load experiment [function]	count=1
function	current predicted [function_2] ||| [function_1] [function_2]	count=1
class	sequence of periodicactivityrequest ||| periodic	count=2
function	option ||| from file option	count=1
function	record a ||| record	count=1
module	the ground ||| frameworks opf	count=1
module	and its database ||| database	count=1
function	set all the ||| set tpdynamic	count=1
function	sets the minimum ||| set min	count=2
function_arg	[function_1] - ||| [arg_2] [function_1]	count=2
function_arg	filter [arg_2] ||| [arg_2] [function_1]	count=1
class	value ||| sdrclassifier	count=1
function	[function_1] [function_2] ||| [function_2] per segment [function_1]	count=3
class	record stream ||| record stream iface	count=2
arg	command [arg] note upon ||| [arg]	count=1
function	set the default ||| get default	count=1
function	[function_1] column ||| [function_2] name [function_1]	count=1
module	put ||| data	count=1
function	return ||| get metric	count=3
class	[class_1] this ||| [class_1] [class_2]	count=4
module_class	the [class_2] ||| [module_1] previous value [class_2]	count=3
function	list ||| ephemeral	count=2
function	for a given cell ||| cell	count=1
function	count the ||| job count	count=1
arg	records ||| records	count=1
function	the minval and ||| and	count=1
function	to generate ||| generate	count=2
arg	current value plus anomaly ||| value anomalyscore timestamp	count=1
function	as a dict with ||| dict	count=1
class	best ||| results db	count=1
arg	metric ||| metric	count=1
function	an [function_2] ||| [function_2] [function_1]	count=6
function	the segment with ||| best matching segment	count=2
function	initialize the ||| initialize	count=1
class	when an inference is ||| inference element	count=1
function	ephemeral ||| construct ephemeral	count=1
function	[function_1] policy ||| [function_1] [function_2] instance	count=1
function	whether global inhibition is ||| global inhibition	count=1
module_class	[module_1] k ||| [module_1] [class_2]	count=8
function	area density invalidates the ||| area density	count=1
function	[function_1] state ||| [function_1] [function_2]	count=11
class	of periodicactivityrequest elements ||| periodic activity	count=2
module	that the input ||| frameworks opf	count=1
function_arg	[function_1] value ||| knnanomaly classifier region [function_1] parameter name index [arg_2]	count=1
arg	defines the permutations ||| options encoderdict	count=1
function	database name for the ||| db name	count=1
function	like _getonematchingrownoretries(), but ||| one matching	count=1
function	get the maximum number ||| max	count=2
function	path with default permissions ||| absolute path	count=1
function_arg	[function_1] for reaping ||| [function_1] option [arg_2]	count=4
function	the number of ||| num	count=4
function	plot of ||| plot	count=1
function	[function_1] [function_2] ||| [function_1] sys [function_2]	count=1
function	get the permanence ||| permanence	count=1
class	file ||| stream	count=3
module	for debugging ||| algorithms	count=1
function	state to 'newstate' ||| swarm state	count=1
module	[module] best minimal ||| [module]	count=1
function	[function_1] path ||| [function_1] [function_2]	count=2
arg	[arg] member ||| [arg]	count=1
class	model [class_2] ||| [class_2] [class_1]	count=1
function_arg	recursively applies [arg_2] ||| [arg_2] [function_1]	count=10
function_arg	[function_1] a message ||| [arg_2] [function_1]	count=1
arg	'activedutycycles' ||| activedutycycles	count=1
class	field ||| field	count=2
function_arg	returns [arg_2] ||| [function_1] [arg_2]	count=2
arg	job that ||| jobid	count=1
class	most ||| custom error metric	count=1
class	model's [class_2] ||| [class_1] [class_2]	count=4
arg	in the status_completed state ||| conn jobid alreadyrunning	count=1
class	backtracking_tm py ||| tmshim mixin	count=1
function	order ||| wcoordinates	count=1
function	[function_1] dict of ||| [function_2] [function_1]	count=1
function	for a given encoder ||| perm encoder	count=1
function	adding a new ||| new	count=1
function	value from ||| value from	count=4
function	activity duty cycles for ||| duty cycles	count=1
function	representing the current predicted ||| predicted	count=1
function	a job ||| job	count=4
arg	given experiment experimentdir ||| experimentdir	count=1
module	generated ||| algorithms	count=1
function	description of ||| range description	count=1
function	every params ||| params	count=1
function	[function_1] json value ||| [function_2] [function_1]	count=2
function	an existing job that ||| job no retries	count=1
function	to see if we ||| hs	count=1
class	of the record stream ||| record stream iface	count=1
function	[function_1] [function_2] the given experiment ||| [function_1] [function_2]	count=6
function	the additional ||| get additional	count=2
arg	of records read from ||| records key	count=1
function	the "dryrun" action ||| start search	count=1
arg	to threshold ||| threshold	count=1
function	the cell ||| cell trace	count=1
function	from the models ||| models	count=1
function	all models in ||| models get fields	count=1
function_arg	[function_1] - ||| [function_1] records [arg_2]	count=2
function	compute area under the ||| area under	count=1
function	internal [function_2] ||| [function_2] name [function_1]	count=1
function	as orphaned this is ||| as orphaned	count=1
class	predictionwriteriface interface ||| adapter	count=2
function	under the [function_2] ||| [function_1] [function_2]	count=4
function	[function_1] boost factors ||| [function_1] [function_2]	count=1
function	inactive cells ||| inactive cells	count=2
class	the configuration path ||| configuration	count=1
class	for a synapses ||| spatial pooler	count=1
function	of possible report ||| append report	count=1
function	cells ||| cells	count=9
function	metadata [function] the model's ||| get field [function]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=1511
function	this pynode ||| node spec	count=1
function	the field ||| field	count=5
class	unittest testcase ||| test case base	count=2
function	max ||| max	count=2
class	[class] can ||| [class]	count=2
module	entire ||| support	count=1
function	[function_1] ids ||| [function_1] err model [function_2]	count=1
function	[function_1] chunk ||| [function_2] [function_1]	count=1
function	printouts ||| distribution	count=1
arg	number segidx ||| segidx	count=1
function	number of synapses per ||| get num synapses per	count=1
class	synapses that ||| spatial pooler	count=1
arg	the specified fields for ||| fields ignorekilled	count=1
module_class	place the [class_2] ||| [module_1] [class_2]	count=6
module	generate between [module] ||| [module]	count=1
arg	the inputs ||| inputs	count=1
arg	permanence for a synapse ||| synapse permanence	count=1
function	file and converts ||| file	count=1
arg	from ||| cls permworkdir	count=1
function_arg	[function_1] fields ||| [arg_2] [function_1]	count=2
class	tell the writer ||| prediction writer	count=1
function	is initialized in ||| init	count=1
arg	string metrics a ||| metrics label	count=1
class	callbacks ||| driver	count=1
function	params ||| params	count=5
arg	of sequences is ||| seqlength	count=1
class	prediction output stream ||| prediction logger	count=1
module	for temporalmemory instances ||| algorithms	count=1
function_arg	[function_1] [arg_2] are numpy arrays values ||| [function_1] [arg_2]	count=9
function	the error ||| error	count=1
arg	not necessarily ||| modelids	count=1
function	[function_1] a swarm ||| [function_2] [function_1]	count=1
function	[function_1] qualifies ||| [function_2] [function_1]	count=3
function_arg	[function_1] consisting ||| [arg_2] [function_1]	count=3
function	the beginning part ||| prefix	count=1
function	returns a [function_2] ||| [function_1] [function_2]	count=4
function	potential segment update the ||| segment updates	count=1
function	attempt [function_2] ||| [function_2] [function_1]	count=6
function	of the first ||| first non	count=1
function	do one iteration of ||| do	count=1
function	value [function] ||| [function]	count=3
function	a swarm ||| get swarm	count=1
function	should only [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] client is ||| [arg_2] [function_1]	count=4
module_class	[module_1] updates ||| [module_1] [class_2]	count=10
function	the outputs ||| outputs	count=1
module	a sequence of periodicactivityrequest ||| frameworks	count=2
function	returning the category list ||| get category list	count=1
arg	specified ||| idx	count=1
function	will update a number ||| update	count=1
function	in-memory prediction cache to ||| flush prediction cache	count=1
function	in-memory prediction cache ||| prediction cache	count=1
class	be greater than ||| iteration	count=1
function	python script from ||| script from	count=1
function	generations ||| generations	count=1
function	[function_1] inference ||| [function_1] [function_2]	count=1
arg	[arg_1] i ||| [arg_2] [arg_1]	count=2
function	the range from ||| range from knn	count=2
arg	simple and hub ||| hubs	count=1
class	ourself from ||| test	count=1
class	non-temporal prediction ||| non temporal prediction	count=2
function_arg	[function_1] cell ||| [function_1] [arg_2]	count=2
function	[function_1] active cell ||| [function_2] [function_1]	count=7
function_arg	[function_1] [arg_2] ||| [function_1] field [arg_2]	count=1
function	for each dimension ||| avg connected span for	count=1
arg	than minpermanence and ||| minpermanence minnumsyns	count=1
function	number [function_2] ||| [function_1] [function_2]	count=4
function	_getonematchingrownoretries(), ||| get one	count=1
function	permanence amount that qualifies ||| syn perm connected	count=1
function	list from the a ||| from file	count=1
function	match any of the ||| match	count=1
function	decrement amount for inactive ||| syn perm inactive dec	count=1
module	process ||| datafiles extra gym raw	count=2
function	score ||| score	count=1
class	record stream as ||| record stream	count=1
function	the activity duty ||| active duty	count=1
function_arg	[function_1] [arg_2] arrays values in a ||| [function_1] [arg_2] out	count=8
function	spatial ||| spatial	count=1
class	worker or runs it ||| hyper search runner	count=1
function	[function_1] fewest ||| [function_2] [function_1]	count=4
function	but with [function_2] ||| [function_2] [function_1]	count=1
arg	each column the overlap ||| overlaps	count=1
arg	segment ||| segment presynapticcell permanence	count=1
function	serialize ||| serialize	count=1
function	filter out and return ||| filter	count=1
arg	a name ||| name	count=1
function	return a sequence of ||| get	count=1
function_arg	a [function_1] [arg_2] dict ||| swarming [function_1] [arg_2]	count=2
class	hold a ||| connections	count=1
class	have been read ||| stream reader	count=1
function	phase must ||| phase	count=1
function	[function_1] overlap ||| [function_1] [function_2]	count=1
function	[function] it has ||| slow [function]	count=1
arg	value matches 'curvalue' ||| fieldname newvalue curvalue	count=1
function	cells to ||| cells to	count=1
class	of ||| periodic activity mgr	count=4
class	its [class_2] ||| [class_1] [class_2]	count=1
arg	specified modelid this function ||| modelid	count=1
function	metric over an ||| metric from	count=1
function	[function_1] timestamp index ||| [function_1] timestamp record [function_2] recordts	count=2
function	if the ||| if equal	count=1
function	jobs table and count ||| job count	count=1
function	of the outputs ||| outputs	count=1
class	marks the stream ||| record stream iface	count=1
class	generated permanence ||| spatial pooler	count=1
class	construct ||| classifier region	count=1
function	total on ||| on	count=1
module	that saves the passed ||| frameworks opf	count=1
function	the permanence decrement ||| get permanence decrement	count=2
function	segments in [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] method ||| [function_2] [function_1]	count=1
function	a lookup [function_2] ||| [function_1] [function_2]	count=1
class	[class_1] this ||| [class_2] [class_1]	count=4
function	as a bool if ||| bool	count=1
function	memory chunk ||| chunk	count=1
function	checkpoint for the ||| checkpoint	count=1
function	generate description from a ||| generate range	count=1
class	[class_1] more information ||| [class_2] [class_1]	count=2
function	return [function_2] ||| [function_1] custom [function_2]	count=2
function	function is ||| is	count=1
arg	niters number ||| niters	count=1
function	[function_1] [function_2] ||| regions svmclassifier node [function_1] [function_2]	count=4
class	method ||| date	count=3
module	all ||| data generators	count=2
function	predicted segment [function_2] ||| [function_1] [function_2]	count=1
function	to simulate [function_2] ||| regions svmclassifier node [function_1] [function_2]	count=1
module	a randomly generated ||| algorithms	count=1
function	model's [function_1] [function_2] ||| [function_1] [function_2]	count=2
module	:param network nupic engine ||| frameworks viz	count=1
function	from the ||| from file field	count=1
arg	potential mapping ||| columnindex potential	count=1
function	labels from [function_2] ||| [function_2] [function_1]	count=9
function	records ||| records range	count=2
module	of the underlying ||| regions	count=2
class	record [class_2] ||| [class_2] [class_1]	count=3
function	[function_1] names ||| [function_1] [function_2]	count=1
function_arg	stored checkpoint [arg_2] ||| [function_1] [arg_2]	count=1
function	pattern that is ||| pattern	count=1
class	back at the ||| iface	count=1
function	percent of [function_2] ||| [function_2] [function_1]	count=1
function	first generation ||| first non full generation	count=1
module	be greater than 0 ||| frameworks opf	count=1
module	of iterations must ||| opf	count=1
arg	is a 1-d ||| output	count=1
function	the output [function_2] ||| [function_2] [function_1]	count=1
function	[function] random ||| [function] coinc	count=3
function	the underlying ||| append	count=1
class	permanence value ||| pooler	count=1
class	get ||| client jobs dao	count=1
function_arg	[function_1] optimize metric ||| [function_1] swarmid [arg_2]	count=1
function	[function_1] to generate ||| [function_2] [function_1]	count=2
module	'setup' callbacks this ||| frameworks	count=1
function	spread offsets [function_2] ||| [function_2] centre and [function_1]	count=1
arg	distributionparams ||| distributionparams	count=1
function	the number of ||| get adaptive	count=1
function	for querying [function_2] ||| [function_2] [function_1]	count=2
function	completion message ||| completion msg	count=1
function	upcoming partition ids this ||| upcoming partition ids	count=1
module_class	[module_1] segment ||| [module_1] [class_2]	count=6
arg	metrics a list of ||| metrics label	count=1
function	additional ||| additional	count=2
function	function ||| top down compute	count=10
function	any stored records ||| delete	count=1
function	if we ||| hs	count=1
function	[function_1] [function_2] ||| [function_1] next [function_2]	count=4
function	the max value ||| arg max	count=1
arg	the specified modelid ||| modelid	count=1
arg	increment ||| increment	count=1
class	and ||| node	count=1
arg	params into the ||| params	count=1
function	[function_1] [function_2] ||| [function_1] map [function_2]	count=5
function	what test ||| test header	count=2
function	update the [function_2] ||| [function_1] [function_2]	count=1
arg	object segment object that ||| segment	count=1
function	and ||| and	count=9
function	[function_1] the 'sequenceid' ||| [function_2] [function_1]	count=1
class	remain in this phase ||| iteration phase	count=1
class	stream as a ||| stream iface	count=1
module	returns a randomly ||| algorithms	count=1
class	put us ||| iface	count=1
module_class	this segment is ||| algorithms segment	count=1
function	the value ||| value	count=1
function	'results'), filter out and ||| filter	count=1
class	returns a ||| spatial	count=1
function	deserialization ||| read	count=1
class	file again) ||| stream iface	count=1
arg	capnp ||| cls proto	count=1
function	[function_1] predicted ||| [function_1] trace [function_2]	count=4
function	the same ||| insert unique	count=1
function	get the encoder ||| get encoder	count=2
function_arg	[function_1] labelname to ||| [arg_2] [function_1]	count=6
function	jth value at column ||| sdrfor value	count=1
class	file to disk ||| stream reader	count=1
function	version ||| version	count=2
function	a value of ||| get	count=1
function	of the ||| get	count=4
function_arg	[function_1] groundtruth ||| [function_1] [arg_2]	count=2
function	[function_1] be status_notstarted ||| [function_2] [function_1]	count=1
function	recursively updates ||| r	count=1
function_arg	records [arg_2] ||| [arg_2] [function_1]	count=6
function	the needed length for ||| length	count=1
function	synapses per ||| synapses per	count=4
class	the tm @param ||| tm	count=1
function	to json ||| metrics to json	count=2
function	[function] we generate ||| [function]	count=3
function	store a training ||| store	count=1
function	returns index and segment ||| get	count=1
module_class	[module_1] columns in ||| [module_1] [class_2]	count=2
arg	and executes the ||| filename outdir usagestr hsversion	count=1
arg	niters [arg_2] ||| [arg_1] [arg_2]	count=8
module	for the ||| opf	count=2
function	'timestamp' [function_2] ||| [function_1] [function_2]	count=1
function	the club ||| club	count=1
function	requested statistics ||| stats	count=1
class	hold a value for ||| connections	count=1
class	jobs do ||| jobs dao	count=1
class	report ||| report	count=1
function	region to the ||| classifier region	count=1
function	[function_1] returns index ||| [function_2] best matching [function_1]	count=1
function	additional specs in ||| additional specs	count=2
function	for a ||| get	count=1
function	store ||| store	count=2
function	initialized in ||| perm	count=1
arg	params ||| params	count=2
class	predicted state and the ||| backtracking tm	count=1
module_class	[module_1] sdrclassifier ||| [module_1] [class_2]	count=2
function	any [function] ||| normalize [function]	count=3
function	return the inference ||| inference	count=1
function	module imported description ||| experiment description interface from	count=1
function	and ||| init	count=1
class	the model ||| gram model	count=1
function_arg	generate the filename [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
class	cells that are ||| memory	count=1
module	a synapses that ||| algorithms	count=1
class	the field ||| field	count=1
function	[function_1] inference ||| [function_2] [function_1]	count=4
function	returns sum of ||| sum	count=1
function	exp b ||| exp	count=2
module	and dashes in ||| swarming	count=1
function	from number to matching ||| number	count=1
arg	choosing [arg] previous winner ||| cls connections [arg]	count=1
function_arg	id [arg_2] ||| [arg_2] [function_1]	count=1
function	value ||| perm	count=1
module	from ||| support unittesthelpers	count=1
class	generated permanence value ||| spatial	count=1
function	and return ||| get	count=4
function	be called between learning ||| learning	count=1
class	the runner's _hypersearchjob ||| hyper search	count=1
function_arg	swarms in the ||| swarms sprintidx	count=1
function	labels from ||| label	count=1
function	print the [function_2] ||| [function_1] [function_2]	count=4
function	every params file ||| params file	count=1
function	node's getparameter() call ||| get num strong synapses per time slot	count=1
function	as [function_2] ||| [function_2] [function_1]	count=4
function_arg	active cells [arg_2] ||| [function_1] indices [arg_2]	count=1
function	swarm [function_2] ||| [function_2] [function_1]	count=1
class	file to disk ||| stream	count=2
function	[function_1] print the ||| [function_2] [function_1]	count=1
function	category ||| category	count=6
class	this is the ||| model	count=1
class	xml configuration [class_2] ||| [class_2] [class_1]	count=8
function	return the inference value ||| infer	count=2
class	tm @param ||| tm	count=1
function	returns args ||| args	count=1
function	max value of ||| max	count=1
class	region ||| region identity policy	count=1
function	inference this ||| infer	count=1
function	the cancel field ||| cancel	count=1
arg	object of the specified ||| idx	count=1
function	calculate distances ||| calculate distances	count=1
function	[function_1] machine ||| [function_2] [function_1]	count=2
function	[function_1] end ||| [function_1] [function_2]	count=1
arg	prediction ||| prediction accumulatederror historybuffer	count=1
function	[function_1] and ||| [function_2] [function_1]	count=16
function	returns the min threshold ||| get min threshold	count=1
function	raw [function_2] ||| [function_2] [function_1]	count=1
function	for all the records ||| all	count=1
function	iterates through ||| get data row count	count=1
arg	a range of ||| start	count=1
function	cell and ||| in cell	count=2
function	data types for all ||| all data types	count=1
function	region to the ||| add anomaly classifier region	count=1
function_arg	accumulate a [arg_2] ||| [function_1] frequency counts [arg_2]	count=2
arg	for further processing ||| input filterinfo	count=1
function_arg	a histogram [arg_2] ||| [function_1] [arg_2]	count=1
class	of the ||| stream	count=1
function	for jobs in the ||| get active jobs for client	count=2
function	considered completed ||| completed	count=1
function	of the database name ||| db name	count=1
function	creates the [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] nth ||| [arg_2] [function_1]	count=1
function	of labels for ||| labels	count=2
class	model's predictionlogger object which ||| opfmodel runner	count=1
function	steps ||| steps	count=1
function	[function_1] an int ||| [function_1] [function_2]	count=2
function_arg	[function_1] request ||| [function_1] insert [arg_2]	count=1
function	get the ||| get dbname	count=1
function_arg	checkpoint [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] min ||| [function_1] [function_2]	count=1
arg	a dict describing ||| filename path	count=1
arg	list of values ||| values	count=1
function	the parameter settings for ||| parameters	count=1
function	[function] active swarms ||| [function] active	count=1
function	[function_1] map ||| [function_2] [function_1]	count=3
module	note this ||| algorithms monitor_mixin	count=2
function	inference output directory ||| inference	count=1
function	at the end of ||| end	count=2
function	for all the ||| all	count=1
function	[function_1] [function_2] ||| [function_1] in [function_2]	count=10
function	the update period ||| update period	count=2
module	that ||| frameworks	count=1
module_class	[module_1] encoder ||| [module_1] coordinate [class_2]	count=6
function	timedelta ||| timedelta	count=1
function	list of paths ||| paths	count=1
function	[function_1] the curve ||| [function_1] [function_2]	count=3
function	for number of ||| get	count=1
module	of the file again) ||| data	count=1
function	the cell activity ||| cell activity	count=1
function	initialize the ||| init	count=1
arg	permanence values for ||| permanence	count=1
class	runs ||| search runner	count=1
function_arg	[function_1] client ||| [arg_2] [function_1]	count=4
function	labels have to be ||| label	count=1
function	+ [function_2] ||| [function_1] [function_2]	count=4
module	returns ||| algorithms	count=2
function	[function_1] all models ||| [function_1] [function_2]	count=1
function_arg	figure [arg_2] ||| [function_1] over time [arg_2]	count=2
function	[function_1] types corresponding ||| [function_2] [function_1]	count=1
function	update the state in ||| state	count=1
function	add the label ||| add label	count=2
function	from this [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] an ||| [function_2] [function_1]	count=1
module_class	the metrics ||| opf metrics manager	count=1
function	from this ||| from	count=1
class	variable that permutes over ||| permute	count=1
function	[function_1] types for ||| [function_1] [function_2]	count=1
class	the configuration path (specified ||| configuration	count=1
function	iteration [function_2] ||| [function_2] [function_1]	count=3
class	this is ||| model record encoder	count=1
function	sets the duty ||| set duty	count=2
function	list from the a ||| from file field	count=1
class	configuration path ||| configuration	count=1
function_arg	[function_1] modelid ||| [arg_2] [function_1]	count=1
function	from the ||| list from file field	count=1
function_arg	generate the filename [function_1] [arg_2] ||| [function_1] filename [arg_2]	count=3
function	length for a list ||| flat list length	count=1
module_class	[module_1] ourself from ||| [module_1] [class_2]	count=32
function	sums down ||| lscsum0	count=1
arg	niters number of iterations ||| niters	count=1
function	and exit program ||| and exit	count=2
function	returns a sequence of ||| get	count=2
function	from ||| convert	count=2
function	centre offsets [function_2] ||| [function_2] [function_1]	count=3
function	generates a file ||| generate	count=1
function	[function] maxval using ||| set min [function]	count=2
arg	estimateanomalylikelihoods if windowsize ||| windowsize	count=1
function	already in [function] ||| [function] get update	count=1
function	find the segment ||| segment	count=1
function	are [function_2] ||| [function_2] dict [function_1]	count=1
function	jobs ||| active jobs	count=2
class	synapses that is initialized ||| spatial pooler	count=1
module	put us back at ||| data	count=1
function	return [function_1] [function_2] ||| [function_1] [function_2]	count=1
module_class	[module_1] prediction log ||| [module_1] [class_2]	count=1
function	a randomly ||| init perm	count=1
module	replaces the ||| frameworks opf	count=1
function_arg	[function_1] defines the ||| [function_1] encoder str [arg_2]	count=1
arg	constructor [arg] ||| experimentdir [arg]	count=3
function	state in the job ||| state	count=1
function	a model that ||| model	count=1
function	returns the number ||| get	count=2
function	for jobs ||| jobs for	count=2
function	field ||| increment int field	count=1
function	function pointer and param ||| func ptr and params	count=1
class	a network as ||| network	count=1
function	to delay the run ||| delay	count=1
arg	to numrecords ||| numrecords	count=1
function	python script [function_2] ||| [function_2] [function_1]	count=1
function	cell index in column ||| cell	count=1
function	and inference stats this ||| stats	count=1
arg	absolute ||| checkpointdir	count=1
function	permanence value ||| init perm	count=1
function	for querying [function_2] ||| [function_1] [function_2]	count=2
function	to category ids external ||| to	count=1
function	job that ||| resume job	count=1
function	the predicted ||| get predicted	count=1
arg	permanence ||| columnindex permanence	count=1
function	a - exp ||| exp	count=1
function	valid ||| valid	count=1
function	persist it to the ||| property	count=2
class	through the jobs table ||| client jobs dao	count=1
function	a given [function] ||| get [function]	count=1
function_arg	returns a [function_1] [arg_2] ||| data record stream iface [function_1] [arg_2] range	count=2
module	returns a randomly generated ||| algorithms	count=1
class	predicted state and ||| backtracking tm	count=1
arg	request but only ||| cmdline jobhash	count=1
arg	and b are ||| a b	count=1
function	list from the ||| from	count=1
arg	fields for all the ||| fields	count=1
function	connected state ||| perm connected	count=1
arg	the output array ||| output	count=1
function	performing global inhibition entails ||| columns global	count=1
function	of the winner cells ||| winner cells	count=1
arg	the current value plus ||| value anomalyscore timestamp	count=1
class	called by ||| backtracking tm	count=1
function	of an svm ||| validate svm	count=1
class	inference ||| inference element	count=2
class	[class_1] should ||| [class_1] [class_2]	count=3
class	the predicted state ||| backtracking tm	count=1
function	the maximum number of ||| get max	count=2
class	records ||| record stream	count=1
function_arg	[function_1] [arg_2] ||| [function_1] cls connections random [arg_2]	count=6
function	the latest [function_2] ||| [function_1] [function_2]	count=4
function	all [function_2] ||| [function_2] clear [function_1]	count=1
function	[function_1] and ||| [function_2] check [function_1]	count=1
function	nupic ||| nupic	count=1
function	segment is active if ||| is segment	count=2
function	number to [function_2] ||| [function_1] map [function_2]	count=1
class	the policy instance ||| transaction connection policy	count=1
function	the output ||| output	count=1
function_arg	returns [arg_2] ||| [arg_2] [function_1]	count=2
arg	[arg_1] active synapses ||| [arg_2] [arg_1]	count=4
function	of models ids ||| ids	count=1
function	local inhibition local ||| columns local	count=1
function	increment amount for active ||| syn perm active inc	count=2
class	the storage ||| record stream iface	count=2
function	for ||| update results for	count=1
function	[function_1] custom ||| [function_2] [function_1]	count=6
function	sets the permanence ||| set	count=2
class	model ||| model runner	count=2
class	implemented csv file ||| file	count=2
function	[function_1] [function_2] ||| [function_2] input [function_1]	count=10
function	update boost ||| update boost	count=1
function	[function_1] json string ||| [function_2] [function_1]	count=4
function	max value of ||| multi arg max	count=1
class	current tm ||| backtracking tm	count=1
module	the ||| swarming	count=9
function	description in base py ||| bucket values	count=1
class	[class_1] stream as ||| [class_1] [class_2]	count=3
function	cumulative w for ||| totalw	count=1
class	of the file ||| stream iface	count=1
function	[function_1] print ||| [function_1] [function_2]	count=1
function	[function] returned by ||| get [function]	count=3
arg	filepath path of file ||| filepath	count=1
class	the file to ||| record stream	count=1
class	periodicactivityrequest elements ||| mgr	count=2
arg	next timestep ||| inferenceelement	count=2
function	writes data ||| write	count=1
function	[function] py description ||| run model given [function] and	count=3
function	list from the ||| list from	count=1
function	_getonematchingrownoretries(), but ||| one	count=1
class	get ||| knnanomaly classifier region	count=1
function_arg	[function_1] [arg_2] ||| [function_1] inlist [arg_2]	count=4
function	[function_1] elements ||| [function_1] [function_2]	count=1
function	have ||| results	count=1
function	a list of segments ||| segments	count=1
arg	non-empty ||| experimentdir label inferencetype	count=1
arg	expression and wraps ||| expression	count=1
function	closest training [function_2] ||| [function_2] [function_1]	count=4
class	be greater than 0 ||| iteration	count=1
function	with default permissions ||| absolute	count=1
function_arg	duty [function_1] [arg_2] cycle is a moving ||| [function_1] [arg_2]	count=3
class	always ||| record stream	count=1
class	for a synapses that ||| spatial pooler	count=1
function	of 1 field in ||| set field	count=1
function	'critical' ||| critical	count=1
class	get ||| hs state	count=2
function	inference this ||| stats infer	count=1
class	record ||| record	count=1
arg	within ||| start end labelname	count=1
function	loads [function_2] ||| [function_1] [function_2]	count=15
function	row id ||| row id	count=2
arg	random seed ||| seed	count=1
class	the current phase ||| phase manager	count=1
class	sequence ||| periodic activity	count=2
class	sensor to ||| sensor	count=1
module	from the ||| swarming	count=1
function	returns ||| get field info	count=1
arg	truth and a prediction ||| prediction record result	count=1
function	close ||| close	count=5
function	category number [function_1] [function_2] ||| [function_2] [function_1] category	count=2
function	[function_1] float ||| [function_2] [function_1]	count=2
class	:returns int the ||| file record stream	count=1
function	:param ||| distribution	count=1
function	cycle ||| cycle	count=3
module	@return countstrace a new ||| algorithms monitor_mixin	count=1
class	a ||| spatial	count=3
arg	passed as ||| dbconn	count=1
arg	state ||| state	count=7
function	with the ||| for	count=1
class	disk ||| stream	count=2
function	[function_1] bucket map ||| [function_1] [function_2]	count=1
function	current model and ||| model	count=1
function	get ||| get dbname	count=1
function	data members ||| members	count=1
arg	a metric type ||| metric	count=1
function	end [function_2] ||| [function_2] [function_1]	count=2
class	return ||| hs state	count=2
function	sequence ||| sequence	count=5
function	inference state the computes ||| infer	count=1
function	[function_1] cycles ||| [function_2] [function_1]	count=15
function	this segment's synapse ||| synapse	count=1
function	[function_1] [function_2] ||| [function_1] run [function_2]	count=2
function	generate requested statistics ||| generate stats	count=3
function	change the category ||| set category	count=1
function	with retries ||| get matching rows with retries	count=1
function	initial permanence ||| initial permanence	count=2
module	[virtual ||| frameworks opf	count=1
module_class	[module_1] underlying claclassifier ||| [module_1] [class_2]	count=2
function_arg	[function_1] that corresponds ||| element [function_1] element [arg_2]	count=2
class	than ||| iteration phase	count=2
function	returns the ||| get active	count=1
class	iterations must be greater ||| iteration	count=1
class	instance ||| iteration phase learn and infer	count=1
module_class	state of [class_2] ||| [module_1] [class_2]	count=24
class	files ||| base	count=1
function	update ||| update results	count=4
function	that sets identity policy ||| set identity policy	count=1
function	the category [function_2] ||| [function_1] [function_2]	count=4
function	active cell ||| active	count=1
function	when the node ||| element	count=1
class	a ||| pooler	count=3
function	pointer and param ||| func ptr and params	count=1
function	value to json string ||| to json	count=1
function	[function_1] dict containing ||| [function_1] custom [function_2]	count=2
function_arg	[function_1] job that ||| [arg_2] [function_1]	count=1
function	[function_1] w ||| [function_2] [function_1]	count=4
function	category and ||| category	count=1
function	the predicted segment decrement ||| get predicted segment decrement	count=1
function	construct a ||| construct	count=2
arg	[arg] previous winner ||| cls connections [arg]	count=1
function	[function_1] traces to ||| [function_1] [function_2]	count=2
function	existing job ||| job no retries	count=1
function	the metadata [function] the ||| get field [function]	count=1
class	remain in this phase ||| iteration phase spec	count=1
arg	passed [arg] globalbestposition ||| globalbestposition [arg]	count=1
class	the policy instance ||| connection policy	count=1
function	inactive synapses ||| inactive dec	count=1
arg	[arg] that is ||| [arg]	count=2
class	new ||| sdrcategory encoder	count=1
function	update the ||| update results	count=2
class	sequence of periodicactivityrequest ||| periodic activity	count=2
arg	random seed and a ||| seed verbosity	count=1
class	[class] dict containing ||| [class]	count=1
function	of printouts ||| distribution	count=1
class	us back at ||| iface	count=1
function	are [function] due to ||| is segment [function]	count=1
arg	checkpointdir using capnproto ||| checkpointdir	count=1
function	tables ||| tables	count=1
function	table including relevant job ||| jobs	count=1
function	the cumulative w ||| totalw	count=1
function	store [function_2] ||| [function_2] [function_1]	count=1
class	counterpart to ||| permute variable	count=1
function	computes the number of ||| num	count=1
function	[function_1] minimum ||| [function_1] [function_2]	count=1
function	probability ||| tail probability	count=1
module	a range ||| generators	count=1
function	exp b a ||| log diff exp	count=1
class	contains description ||| utils	count=1
function	in a ||| init	count=1
arg	decorator for retrying ||| timeoutsec logger	count=1
function	return list ||| get	count=1
function	[function_1] directory ||| [function_1] [function_2]	count=1
function	table including ||| jobs of	count=1
class	instantiate ||| iface	count=1
arg	on the optimize metric ||| genidx	count=1
function	preserves the current ||| current	count=1
function	exp ||| log diff exp	count=2
function	sequences ||| sequences	count=2
arg	permanence [arg_2] ||| [arg_2] [arg_1]	count=2
class	given hypersearch job ||| search runner	count=1
function	updated frequency [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] encoder name ||| [function_1] [function_2]	count=1
function	[function_1] for ||| [function_2] centre [function_1]	count=2
function	to json ||| to json	count=1
function	to segment ||| segment	count=1
function	cell with the ||| cell	count=1
function	of the record ||| record	count=1
function	retries ||| retries	count=2
function	the active segments ||| active segments	count=2
function	that belong to ||| for	count=1
class	value for a ||| spatial pooler	count=1
module	@return ||| algorithms monitor_mixin	count=1
function_arg	tables [arg_2] ||| [arg_2] [function_1]	count=1
function	learning active ||| learn	count=1
function_arg	retries [arg_2] ||| [arg_2] [function_1]	count=1
arg	a range of rows ||| reader writer column start	count=1
function	[function] in ||| job [function]	count=3
function	[function_1] the ||| [function_2] [function_1]	count=2
function	[function] containing ||| [function]	count=3
function	validates the --descriptionfromfile option ||| option	count=1
function_arg	map [arg_2] ||| [function_1] maxbuckets [arg_2]	count=4
function	returns plot of [function_1] [function_2] ||| [function_1] [function_2]	count=1
function	existing job that ||| job no retries	count=1
arg	from spatialoutput [arg_2] ||| [arg_2] [arg_1]	count=1
class	creates ||| model runner	count=1
function	synapses that ||| perm	count=1
function_arg	exp b [arg_2] ||| [arg_2] [function_1]	count=5
function	to this [function_2] ||| [function_1] [function_2]	count=1
function	set a single ||| set	count=2
class	the current tm ||| backtracking tm	count=1
function	[function_1] [function_2] to the ||| [function_1] [function_2]	count=4
function	sum ||| aggr sum	count=2
arg	that shows each output ||| vectors buvectors title	count=1
function	[function_1] dict type ||| [function_1] [function_2]	count=1
function	record ||| record from knn	count=2
function	as ||| as	count=1
class	of iterations must ||| iteration phase	count=1
function	that belong to a ||| for	count=1
arg	categoriesout -- the maximum ||| categoriesout	count=1
arg	records records - ||| key chunkindex	count=1
arg	percent of active ||| activecolumns	count=1
class	is initialized in a ||| pooler	count=1
class	classifier ||| htmprediction model classifier helper	count=2
function	far away ||| push away	count=1
class	in a ||| spatial pooler	count=1
function	the neighborhood of ||| neighborhood	count=1
function	return a ||| get end	count=1
function	print a ||| print	count=4
function	[function_1] cache associated ||| [function_2] [function_1]	count=3
function	returns the ||| get	count=43
function	for a ||| init perm	count=1
function	all the records ||| all	count=1
function	stored checkpoint ||| checkpoint	count=1
function	the max value ||| max	count=1
function	a logger object for ||| logger	count=1
class	[class_1] model ||| [class_1] [class_2]	count=1
function	callback for ||| callback	count=1
function	[function_1] factors when ||| [function_2] [function_1]	count=2
module_class	class to [module_1] [class_2] ||| [module_1] [class_2] read std	count=2
function	possible [function] ||| push away [function]	count=3
arg	function ||| inpt	count=1
function	index using the ||| index	count=1
function	used to generate ||| generate	count=2
class	of the custom ||| custom	count=2
arg	the given filename ||| filename	count=2
arg	start ||| start	count=3
class	stream to calculate total ||| stream reader	count=1
function	a sequence of ||| get	count=2
function	[function_1] sequences ||| [function_2] [function_1]	count=4
function	the node's getparameter() call ||| num strong synapses per time slot	count=1
arg	dict containing [arg] of ||| [arg]	count=1
function	a list of ||| list	count=3
function	[function_1] reactivate ||| [function_2] [function_1]	count=2
class	emits a single prediction ||| prediction	count=1
function	delete [function_2] ||| [function_2] [function_1]	count=4
function	@returns the total number ||| num	count=3
function	returns the top ||| top	count=1
arg	consisting of ground ||| groundtruth	count=1
function	a randomly generated permanence ||| perm	count=1
function	swarm ||| swarm	count=3
class	this phase ||| iteration phase spec learn and	count=1
function_arg	all swarms in ||| all swarms sprintidx	count=1
function	job that is ||| resume job	count=1
function	job type ||| type	count=1
module	current results and ||| swarming	count=1
function	generate description from ||| generate	count=1
class	the jobs table ||| client jobs dao	count=2
class	the model should ||| model terminator	count=2
module	and the ||| swarming	count=2
function	sum of ||| sum	count=1
function	segment with the ||| best matching segment	count=2
function	the range [function_2] ||| [function_1] [function_2]	count=2
function	log scale ||| log	count=1
function	periodic check to ||| periodic	count=1
class	generate ||| scalar encoder	count=1
class	initialized in a ||| pooler	count=1
module_class	model [class_2] ||| [module_1] [class_2]	count=1
function_arg	returns [function_1] [arg_2] numpy arrays values in ||| [function_1] [arg_2]	count=2
class	of distribution must ||| multinomial distribution	count=1
class	for a ||| pooler	count=1
class	including 'setup' callbacks this ||| driver	count=1
module	iterations must be greater ||| frameworks	count=1
function	worker [function_2] ||| [function_2] [function_1]	count=5
function	model [function_2] ||| [function_1] [function_2]	count=5
function	return list [function_2] ||| [function_2] [function_1]	count=3
function_arg	range from [arg_2] ||| [arg_2] [function_1]	count=6
function	return list of models ||| get	count=1
module	appears in note this ||| algorithms monitor_mixin	count=1
function	learning will not ||| learning	count=1
arg	fieldmetainfo ||| cls fields	count=1
class	adds ||| multi encoder	count=1
arg	for retrying a pymysql ||| timeoutsec	count=1
module	of iterations ||| frameworks opf	count=1
function	a metric over an ||| metric	count=1
arg	cursor passed as a ||| dbconn cursor	count=1
class	value ||| spatial	count=1
class	inference ||| inference	count=6
arg	modelconfig ||| modelconfig	count=1
function_arg	far and [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	duty [function_1] [arg_2] is a moving ||| duty [function_1] [arg_2]	count=3
function	return a dict ||| get results	count=1
function	of ||| distribution	count=1
function	a python list ||| list	count=1
function	return it ||| get	count=4
function	special row id ||| special row id	count=3
arg	from current position bookmark ||| bookmark	count=1
function	returns a randomly generated ||| perm	count=1
arg	a dict describing ||| cls filename path	count=1
function	a worker completion ||| get worker completion	count=2
function	policy ||| policy	count=2
function	[function_1] cells ||| [function_1] [function_2]	count=21
function	returns ||| get data	count=1
function	[function_1] segments ||| [function_1] [function_2]	count=7
class	this method ||| pooler	count=3
function	merge sorted ||| merge	count=1
function	next value of ||| next	count=1
arg	the prediction ||| prediction accumulatederror	count=1
class	this encoder ||| encoder	count=1
function	at the beginning of ||| rewind	count=1
function	return the inference ||| infer	count=2
class	the node [class] object the ||| [class]	count=1
class	current phase ||| phase manager	count=1
function	under the ||| under	count=1
module	available data ||| data	count=1
function	up the latest ||| pickup	count=1
arg	of option ||| option	count=1
function	with the smallest ||| min	count=1
function	json value [function_2] ||| [function_2] [function_1]	count=9
function	[function_1] segment decrement ||| [function_2] [function_1]	count=3
function	for [function_1] [function_2] ||| [function_1] [function_2]	count=8
class	tm ||| backtracking tm	count=3
class	a sequence of ||| periodic activity mgr	count=2
function	the cumulative n ||| totaln	count=1
function	the latest ||| pickup	count=1
function	class virtual method override ||| get decoder output field types	count=1
function_arg	to json [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] of ||| [function_2] input [function_1]	count=4
class	performs inhibition this method ||| spatial pooler	count=1
function	[function_1] [function_2] ||| [function_2] timestamp [function_1]	count=19
function	function ||| encode into array	count=1
function	+ exp ||| log sum exp	count=2
function_arg	[function_1] n ||| [arg_2] [function_1]	count=1
function	of active ||| get	count=1
function_arg	with retries [arg_2] ||| [function_1] [arg_2]	count=1
arg	the coordinate ||| coordinate n	count=1
class	initialize ||| scalar encoder	count=1
arg	dict describing ||| filename path	count=1
function	in [function_2] ||| [function_1] [function_2]	count=1
function	generate the ||| generate model2	count=1
function	smallest ||| min	count=1
function	the presentation of [function_1] [function_2] ||| [function_1] [function_2] inputwidth category partitionid	count=1
function	json [function_2] ||| [function_1] [function_2]	count=11
module_class	data fieldmeta ||| data stream reader	count=1
class	set ||| record stream iface	count=1
function	returns a ||| perm	count=1
class	knn classifier ||| knnanomaly classifier	count=1
function_arg	[function_1] queue ||| [arg_2] [function_1]	count=1
function	[function_1] bucket ||| [function_2] [function_1]	count=1
arg	of thinking about the ||| w minval maxval n	count=1
function	dimensions [function_2] ||| [function_2] [function_1]	count=2
function	an existing job ||| resume job no	count=1
function	generates a worker completion ||| get worker completion	count=1
function	the number of active ||| num active	count=1
function	[function_1] loop ||| [function_1] [function_2]	count=1
module	be ||| opf	count=1
function	sequence of job ||| get fields	count=1
function	[function_1] to seconds ||| [function_2] from [function_1]	count=1
function	[function_1] orphaned ||| [function_2] [function_1]	count=5
arg	is a vector ||| vector	count=1
function	from the ||| list from	count=1
function	connected ||| connected	count=1
arg	given input ||| input	count=1
module	that are ||| frameworks opf	count=2
function	[function] category ||| category [function] label	count=2
arg	gets the ||| obj fieldname	count=1
function	for ||| results for	count=1
function	returns ||| get cell	count=2
function	max new [function_2] ||| [function_2] [function_1]	count=4
function	set ||| set encoder params	count=1
function	a connected state ||| perm connected	count=1
function	the base ||| base	count=1
function	metrics to be ||| metrics	count=1
function	encoder ||| encoder	count=9
class	(from backtracking_tm ||| monitored tmshim	count=1
function_arg	[function_1] [arg_2] ||| [function_1] c [arg_2]	count=2
class	of experiments that ||| hyper search	count=1
function	upcoming [function_2] ||| [function_1] [function_2]	count=5
function	for all ||| all	count=3
function	over time time goes ||| over time	count=1
function_arg	active [arg_2] ||| [arg_2] [function_1]	count=1
class	sequence of periodicactivityrequest ||| activity	count=2
arg	of [column cellidx] ||| andvalues	count=1
function	[function_1] policy ||| [function_1] [function_2]	count=1
arg	patterns to inputpattern ||| inputpattern topkcategories	count=1
function_arg	the top [arg_2] ||| [arg_2] [function_1]	count=3
function	changes ||| to db	count=1
function	of results ||| results	count=1
function_arg	[function_1] the cell ||| [arg_2] [function_1]	count=3
class	the state ||| hs state	count=1
function	segment's synapse [function_2] ||| [function_2] permanence [function_1]	count=1
function	existing job that is ||| resume job	count=1
function	counts of ||| counts	count=1
class	the prediction output stream ||| prediction	count=1
function	encodeintoarray] ||| encode into array	count=2
arg	increment the ||| increment	count=1
function	[function_1] predictive cells ||| [function_2] [function_1]	count=1
arg	this method goes through ||| colidx cellidx seglist	count=1
arg	of the specified ||| cell idx	count=1
class	return ||| svmclassifier node	count=3
module_class	[module_1] anomaly score ||| [module_1] [class_2]	count=2
function	[function_1] orphaned this ||| [function_2] [function_1]	count=5
function	of [function] ||| mm get [function]	count=1
function_arg	[function_1] inputpattern ||| [function_1] [arg_2]	count=3
function	will remove any stored ||| delete	count=1
function_arg	update [arg_2] ||| [function_1] [arg_2]	count=5
function	synapse on ||| synapse	count=1
function_arg	[function_1] i and ||| [function_1] [arg_2]	count=1
arg	inputpattern and ||| inputpattern	count=1
function_arg	cell c i ||| cell c i	count=2
function	but only if the ||| if equal	count=1
function	[function_1] custom ||| [function_1] [function_2]	count=2
arg	that defines the permutations ||| encoderdict	count=1
function_arg	spec parameter [arg_2] ||| [arg_2] [function_1]	count=1
function	report csv ||| generate report	count=1
function	max value ||| max	count=1
arg	range from start ||| start	count=1
class	cells in an ||| temporal memory	count=1
function	logging [function_2] ||| [function_1] [function_2]	count=1
function_arg	cancel field [arg_2] ||| [arg_2] [function_1]	count=2
class	emits ||| basic prediction metrics logger	count=1
function	index ||| idx	count=6
function	w for ||| w	count=1
function	curve ||| curve	count=1
function_arg	range from [arg_2] ||| [function_1] knn [arg_2]	count=3
function	parameter ||| get parameter	count=2
class	context ||| description api	count=1
class	print ||| backtracking tm	count=3
function	a checkpoint from the ||| checkpoint	count=1
function_arg	[function_1] [arg_2] ||| [function_1] wcoordinates cls [arg_2]	count=2
class	model ||| model chooser	count=2
class	returns ||| model info	count=1
class	from start [class] ||| [class]	count=1
function	[function_1] the phase ||| [function_1] [function_2]	count=2
function	description [function_2] ||| experiment [function_1] [function_2]	count=4
arg	cursor passed as ||| dbconn cursor	count=2
function	[function_1] training sample ||| [function_2] [function_1]	count=1
function	minimum duty cycles ||| min duty cycles	count=3
function	the record that ||| record	count=1
arg	coordinate to ||| coordinate	count=1
function	specifying ||| info	count=1
function	[function_1] segments per ||| [function_1] [function_2]	count=2
function	specifying the format ||| info	count=1
arg	the potential mapping ||| columnindex potential	count=1
function	partition [function_2] ||| [function_1] [function_2]	count=4
class	[class_1] distribution ||| [class_1] [class_2]	count=2
function	[function_1] default ||| [function_2] [function_1]	count=2
function	abbreviate ||| abbreviate	count=1
class	of this model ||| previous value model	count=1
function	return info on ||| get	count=1
class	exit ||| record stream	count=1
function	additional specs in ||| get additional specs	count=4
function_arg	[function_1] records - ||| [function_1] records [arg_2]	count=3
function	average [function_2] ||| [function_2] per segment [function_1]	count=1
arg	change the ||| completionreason completionmsg useconnectionid	count=1
arg	the inputdata ||| inputdata	count=2
function	metric ||| metric	count=2
function	labels from the ||| label	count=1
arg	fields from ||| fields	count=1
function	[function_1] and returns ||| [function_2] [function_1]	count=4
class	be greater ||| phase	count=1
function	cell index in column ||| get segment on cell	count=1
function	for adding ||| for	count=1
module	than 0 ||| frameworks opf	count=1
module	printouts for debugging ||| algorithms	count=1
class	have ||| results db	count=1
function	a randomly generated ||| perm	count=1
function	with retries ||| row with retries	count=1
arg	checkpointdir using capnproto ||| cls checkpointdir	count=1
arg	are not necessarily ||| modelids	count=1
function	state ||| set swarm state	count=1
arg	defines ||| encoderdict	count=1
function	hash ||| hash	count=2
function	allow tools to simulate ||| simulate	count=1
class	compute ||| record encoder	count=1
class	file to disk ||| record	count=1
function	[function_1] a cell ||| [function_1] [function_2]	count=1
arg	of values 'values' ||| values freqcounts	count=1
module	in note this ||| algorithms monitor_mixin	count=2
module	a sequence ||| opf	count=2
function	stream sources it finds ||| stream sources	count=1
function	in ||| init perm	count=1
arg	synapse ||| synapse	count=1
function	this dict ||| dict	count=1
function	a segment is ||| is segment	count=3
class	this metric if the ||| metric	count=1
function	string of space-separated numbers ||| string	count=1
class	classifier ||| model classifier	count=2
module	of ||| frameworks opf	count=6
function	of models ||| models	count=1
arg	modelids ||| modelids	count=1
class	including 'setup' ||| opftask	count=1
function	a "persistentjobguid" value ||| generate persistent job guid	count=1
arg	all properties [arg_2] ||| [arg_1] [arg_2]	count=2
module	between [module] ||| [module]	count=1
function	python logging [function_2] ||| [function_1] [function_2]	count=1
function	complete set of hyperplanes ||| hyperplanes	count=1
function_arg	index of [arg_2] ||| [arg_2] [function_1]	count=1
class	sets ||| opfmodel runner	count=1
class	a ||| metrics iface	count=2
class	us back ||| stream iface	count=1
function_arg	[function_1] state ||| [arg_2] [function_1]	count=9
arg	[arg] in the ||| [arg]	count=3
arg	inputpattern and the ||| inputpattern topkcategories	count=1
class	runs it inline ||| runner	count=1
function	field [function_2] ||| [function_2] [function_1]	count=5
function	[function_1] factors ||| [function_2] [function_1]	count=3
arg	inputpattern to all stored ||| inputpattern partitionid	count=1
class	encoder ||| log encoder	count=2
function	flush the ||| flush	count=2
function	main ||| run task main	count=1
arg	dtype that is everywhere ||| dtype	count=3
function	compute the probability ||| probability	count=1
function	a list ||| list	count=5
arg	input ||| input	count=1
class	ensures that the file ||| file	count=1
function	with the ||| best matching	count=1
class	the given hypersearch ||| search	count=1
function_arg	to [arg_2] ||| [function_1] [arg_2]	count=1
function	segment is active ||| is segment	count=4
function	[function_1] connections ||| [function_2] [function_1]	count=2
function	optimization function ||| optimization metric info	count=1
function	[function_1] all models ||| [function_2] [function_1]	count=1
arg	modelid this ||| modelid	count=1
function_arg	[function_1] dest sp's ||| [arg_2] [function_1]	count=1
arg	defines the permutations ||| encoderdict	count=1
function	stored records within ||| delete	count=1
function	[function_1] recently ||| [function_2] [function_1]	count=2
function	[function_1] distances ||| [function_2] [function_1]	count=1
function	[function] based ||| [function]	count=6
class	cells that ||| memory	count=1
function	return the list of ||| get config	count=1
module	that the input record ||| frameworks opf	count=1
function	[function_1] of synapses ||| [function_1] [function_2]	count=3
function_arg	json string [arg_2] ||| [function_1] [arg_2]	count=4
function	next from ||| next	count=3
function	[function_1] inference stats ||| [function_2] [function_1]	count=1
function	[function] custom ||| reset custom [function]	count=2
function	the number ||| number	count=1
function	for querying the models ||| get fields for active	count=1
module_class	state of ourself ||| regions knnanomaly classifier	count=1
function	possible encoder ||| generate encoder	count=1
function	job that is ||| job no retries	count=1
function_arg	[function_1] bookmark ||| data stream reader [function_1] [arg_2] range	count=2
module	[module] collect which ||| [module]	count=3
module	[module] best ||| [module]	count=1
class	returns ||| stream iface	count=3
module	configuration settings and ||| swarming	count=1
class	scalar ||| scalar	count=3
function_arg	[function_1] params ||| [arg_2] [function_1]	count=1
class	randomly generated permanence ||| pooler	count=1
class	is ||| pooler	count=1
function	[function_1] pattern ||| [function_1] [function_2]	count=7
function	a figure ||| plot outputs	count=1
function	update boost factors when ||| update boost factors	count=1
function	of synapses [function_2] ||| [function_1] [function_2]	count=2
rep	[module_class_1] serialized state ||| [module_class_1] [function_arg_2]	count=16
function	within the range from ||| range from knn	count=1
function	parameter of the ||| parameter	count=2
class	returning ||| svmclassifier node	count=1
function	[function_1] file returning ||| [function_1] [function_2]	count=4
arg	than minpermanence ||| minpermanence	count=1
function	the demand - minimum ||| demand	count=1
function	[function_1] new synapse ||| [function_2] [function_1]	count=6
function	synapse [function_2] ||| [function_2] permanence [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] swarmid [arg_2]	count=3
module	for the metrics that ||| frameworks opf	count=1
class	the file to ||| stream	count=2
class	file to ||| record stream iface	count=1
arg	assuming ||| offset	count=1
class	to ||| record stream	count=1
arg	writer ||| writer	count=2
class	hold ||| connections	count=1
module	the header row ||| frameworks opf	count=1
function	(i e data members ||| members	count=1
function	dataset ||| dataset	count=1
arg	bucket index return the ||| index	count=1
function	average number of columns [function_1] [function_2] ||| [function_2] columns [function_1]	count=2
class	the prediction output ||| basic prediction	count=1
class	period [class_1] [class_2] dict containing 'months' ||| [class_1] [class_2]	count=2
function	given encoder ||| perm encoder	count=1
function	models for ||| models get fields for	count=1
function	model as orphaned ||| as orphaned	count=2
module	of the ||| frameworks opf	count=2
function	index ||| cell index	count=1
class	in this phase ||| phase spec learn	count=1
function	[function_1] all fields ||| [function_2] data [function_1]	count=1
function	params [function_2] ||| [function_2] model [function_1]	count=1
function	job that is ||| job no	count=1
function	of an existing job ||| resume job no	count=1
arg	c column [arg_2] ||| [arg_1] [arg_2]	count=1
function	loads a [function_2] ||| [function_2] [function_1]	count=20
module	be greater than ||| opf	count=1
function	construct a _htmclassificationrecord based ||| construct	count=2
function	sources it ||| sources	count=1
arg	gets fields from ||| fields	count=1
function	record that will be ||| record	count=1
function	additional specs ||| get additional specs	count=4
function	return the index ||| get	count=1
function	1 field ||| set field	count=1
module	note [module_2] ||| [module_2] [module_1]	count=1
function	region to the ||| anomaly classifier region	count=1
arg	most parameters are handled ||| parametername index parametervalue	count=1
arg	message to the ||| level message	count=1
function	policy [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| encoders adaptive scalar encoder [function_1] [arg_2] learn	count=2
function	[function_1] knn ||| [function_1] [function_2]	count=1
arg	absolute ||| savemodeldir	count=1
class	to the jobs table ||| jobs dao	count=1
function	[function_1] descriptions ||| [function_2] [function_1]	count=1
function	sequence of model ||| get fields	count=1
function	the collection of regions ||| regions	count=1
function	[function_1] plot ||| [function_2] [function_1]	count=1
arg	caller wants as ||| allresults reportkeys optimizekey	count=1
module_class	[module_1] tm ||| [module_1] [class_2]	count=2
function	flags for all ||| all flags	count=3
function	given as percent ||| pct overlap	count=1
function	[function_1] that ||| [function_1] [function_2]	count=3
function	'timestamp' [function_2] ||| [function_2] [function_1]	count=1
function	given field within ||| field	count=1
function	in memory chunk of ||| chunk	count=1
function	to simulate [function_2] ||| [function_2] [function_1]	count=1
function	like _getonematchingrownoretries(), ||| one matching row	count=1
function	metrics to ||| metrics	count=1
function	path of the ||| path	count=2
function	a dict of all ||| dict	count=1
module_class	[module_1] figure ||| [module_1] [class_2]	count=1
class	represents a connection ||| connection	count=1
function	returns the experiment ||| get experiment	count=2
function	returns list of default ||| get default	count=2
function	job to ||| job set	count=1
class	is initialized ||| spatial	count=1
function_arg	from [arg_2] ||| [function_1] [arg_2]	count=4
function	the given swarm ||| swarm	count=1
function	types [function_2] ||| [function_2] data [function_1]	count=2
function	make a two-dimensional ||| make	count=1
function	main loop of the ||| task main loop	count=1
function	metric is ||| metric	count=1
function_arg	indices i ||| indices i	count=1
function_arg	[function_1] network will ||| [arg_2] [function_1]	count=1
class	of iterations must ||| iteration	count=1
function	to learn ||| to learn	count=2
function	[function_1] swarms ||| [function_2] [function_1]	count=2
arg	columns not predicted ||| predictedcolumns inputvalue timestamp	count=1
function	[function_1] [function_2] ||| [function_1] err [function_2]	count=1
function	returns list of default ||| mm get default	count=2
function	average number of columns [function_1] [function_2] ||| [function_2] [function_1]	count=2
class	prediction ||| prediction logger iface	count=1
function	the models table ||| jobs of	count=1
function	stable ||| stable	count=1
function_arg	[function_1] if 'newstate' ||| [arg_2] [function_1]	count=2
function	@returns the average ||| avg	count=1
function	[function_1] aggregation ||| [function_1] [function_2] months	count=1
module	non-temporal ||| frameworks opf	count=1
class	a sequence of periodicactivityrequest ||| periodic activity mgr	count=2
module_class	the state of ||| algorithms backtracking tm	count=1
function	[function_1] of segments ||| [function_2] [function_1]	count=3
arg	niter number of iterations ||| niters inferenceargs	count=1
function	of an existing job ||| job	count=1
function_arg	[function_1] and ||| [function_1] [arg_2]	count=8
module_class	directory path [module_1] [class_2] ||| [module_1] [class_2]	count=2
arg	metric a metric type ||| metric	count=1
function	reactivate ||| job reactivate	count=1
function	cell in this ||| cell	count=1
class	generated ||| pooler	count=1
function	[function] maxval ||| set min [function]	count=2
function	property as a string ||| get string	count=2
module_class	that elapse [class_2] ||| [module_1] [class_2]	count=2
function	inference state trying to ||| infer	count=1
function	additional ephemeral members ||| ephemeral members	count=4
module	what the ||| opf	count=1
function	[function_1] and spread ||| [function_1] [function_2]	count=2
arg	and [arg_2] ||| [arg_1] [arg_2]	count=3
module_class	of [module_1] [class_2] for ||| [module_1] [class_2]	count=1
function	dict with the ||| dict	count=1
function_arg	[function_1] all configuration ||| [function_1] [arg_2]	count=1
function	from source to ||| convert	count=1
class	hypersearch ||| hyper search	count=1
function_arg	[function_1] state ||| [function_1] indices [arg_2]	count=2
class	jobs do not ||| jobs	count=1
function	cell with ||| cell	count=1
function	should [function_2] ||| [function_2] [function_1]	count=4
function	matching on bits for ||| for	count=1
function	inference active ||| infer	count=1
function	as a dict ||| dict	count=1
function	for ||| null distribution	count=1
function	first ||| first non full	count=1
class	from the discrete probability ||| discrete proposal	count=1
function	e data members ||| members	count=1
arg	[arg_1] number ||| [arg_2] [arg_1]	count=2
function	column return [function_2] ||| [function_1] least allocated [function_2]	count=3
function	returns the number ||| num	count=2
function	to learn from ||| to learn from	count=1
function	for jobs ||| active jobs for client	count=2
arg	optionally ||| particlestate newbest	count=1
arg	[arg_1] results ||| [arg_1] [arg_2]	count=1
function	- exp b ||| exp	count=1
function	new sequence ||| sequence states	count=1
class	us back at the ||| record stream	count=1
module	sequence of periodicactivityrequest elements ||| frameworks	count=2
arg	a fieldmetainfo ||| fields	count=1
function	for each dimension ||| connected span for	count=1
function	synapses per [function_2] ||| [function_1] [function_2]	count=2
class	file ||| stream iface	count=2
function	job type ||| of type	count=1
class	randomly ||| spatial pooler	count=2
function	factors are used to ||| factors	count=1
module	get ||| regions	count=1
arg	specified modelid ||| modelid	count=1
function_arg	[function_1] cells passed ||| [arg_2] [function_1]	count=2
function	to a bit ||| bit	count=1
arg	request this ||| cmdline clientinfo clientkey	count=1
function_arg	generate the [arg_2] ||| [arg_2] [function_1]	count=2
arg	segment passed in if ||| segment	count=1
class	xml ||| configuration base	count=2
function	a bookmark to the ||| bookmark	count=1
module_class	this [class_2] ||| [module_1] htmprediction [class_2]	count=2
function	greater than 0 ||| init	count=1
function	optimization [function_2] ||| [function_1] [function_2]	count=1
class	runs ||| runner	count=1
function	both the ||| all	count=2
function	the labels ||| label	count=1
function	[function_1] all swarms ||| [function_2] [function_1]	count=1
function	that returns the identity ||| get identity	count=1
class	that the file ||| file record stream	count=1
function	artificial labels have ||| variable label	count=2
function	velocity to be some ||| velocity	count=1
function	job to 'newvalue', but ||| job	count=1
module_class	[module_1] model ||| [module_1] previous value [class_2]	count=1
module	from the input ||| swarming	count=1
module	of periodicactivityrequest elements ||| frameworks	count=2
arg	message to ||| message	count=1
function	reset the [function_2] ||| [function_1] [function_2]	count=5
module	records that elapse ||| frameworks opf	count=1
function	file ||| file	count=16
function	the maximum ||| get max	count=2
arg	int ||| flatidx lastusediteration	count=1
function	pretty print a numpy ||| numpy	count=1
function	value for a ||| init	count=1
function	parameter settings for ||| parameters	count=1
function	[function_1] function ||| [function_2] [function_1]	count=2
arg	active [arg_2] ||| [arg_2] [arg_1]	count=1
arg	passed in ||| cls	count=1
arg	start to [arg_2] ||| [arg_1] [arg_2]	count=2
class	a synapses that is ||| spatial	count=1
function	the max new synapse ||| max new synapse	count=2
function	[function_1] active ||| [function_1] [function_2]	count=20
function	[function_1] potential ||| [function_1] [function_2]	count=1
function	constructor - initialize ||| init	count=1
function	active ||| active inc	count=3
class	construct the tm @param ||| tm	count=1
function	[function_1] sources ||| opf description iface normalize [function_1] [function_2]	count=1
function	special [function_2] ||| [function_2] [function_1]	count=5
module	greater than 0 ||| frameworks opf	count=1
class	file again) ||| record	count=1
function	activity duty ||| duty	count=1
function	[function_1] verbosity level ||| [function_1] [function_2]	count=1
arg	member name [arg] ||| [arg]	count=1
arg	in range from start ||| start	count=1
arg	a csv file ||| path	count=1
function	the number of ||| get	count=1
function	from nupic ||| convert nupic	count=2
function	labels on classified points ||| labels	count=1
function	learning state ||| set state	count=1
function	default spatial pooler implementation ||| default spimp	count=1
function	description in base py ||| get bucket values	count=1
function	this model ||| comput model	count=1
arg	[arg_1] executes the ||| [arg_2] [arg_1]	count=1
function	stored records within the ||| delete	count=1
arg	cursor ||| cursor	count=1
function	of model records ||| get	count=1
function	contributions statistics ||| contributions	count=1
function	returns the active segments ||| get active segments	count=1
function	the permutations report csv ||| generate report	count=1
function	the bucket ||| bucket	count=2
class	file with ||| file wrapper	count=2
arg	monitor monitormixinbase monitor mixin ||| monitor title data	count=1
function	where the job type ||| of type	count=1
arg	segment passed ||| segment	count=1
function_arg	sample from ||| sample rgen	count=1
function	[function_1] resets ||| [function_1] trace [function_2]	count=1
function	datetime object compute ||| compute	count=1
function	for the [function_2] ||| [function_2] [function_1]	count=2
arg	the 'numactivecolumnsperinharea' ||| localareadensity	count=1
function	report ||| report	count=2
function	column returns index ||| get	count=1
arg	job request but only ||| cmdline jobhash clientinfo	count=1
class	the [class] this timestep ||| [class]	count=1
function	map from ||| map	count=1
function	return ||| get config	count=1
function	a bit ||| bit for	count=1
class	memory ||| memory test	count=1
module	synapses that ||| algorithms	count=1
function	are of dict ||| get dict meta	count=2
function	given metrics value to ||| to	count=1
class	the classifier ||| classifier helper	count=1
function	the file ||| file	count=1
function	a new ||| run new	count=1
arg	to maxcols ||| maxcols	count=1
function	jobid to ||| id	count=1
function	build the additional specs ||| additional specs	count=2
function_arg	jobid [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] [function_2] - ||| [function_1] [function_2] recordts	count=10
function	name for the ||| name	count=1
class	of periodicactivityrequest elements ||| periodic activity mgr	count=2
function	[function_1] boost factors ||| [function_2] [function_1]	count=1
module_class	[module_1] [class_2] ||| [module_1] temporal [class_2]	count=2
function	[function_1] of both ||| [function_1] ephemeral members [function_2]	count=2
class	tmregion ||| tmregion	count=2
function	the inhibition [function_2] ||| [function_2] [function_1]	count=1
function	insert a ||| insert	count=2
function	number of sequences each ||| mm get	count=1
arg	values 'values' into the ||| values freqcounts	count=1
function_arg	[function_1] from file ||| [arg_2] [function_1]	count=4
module	passed ||| swarming hypersearch	count=1
function	the local ||| local	count=1
function	key ||| key	count=1
arg	records - a list ||| key chunkindex	count=1
class	returns a randomly generated ||| pooler	count=1
class	moving [class_2] ||| [class_2] [class_1]	count=1
function	return the learning ||| learning	count=1
function	the bucket [function_2] ||| [function_2] [function_1]	count=1
function	cell and deletes all ||| in cell	count=1
function	[function_1] max new ||| [function_1] [function_2]	count=2
module_class	[module_1] model's ||| [module_1] [class_2]	count=2
function	for querying the ||| get fields for active	count=1
function	returns the inhibition radius ||| get inhibition radius	count=1
function	return list [function_2] ||| [function_1] err model [function_2]	count=2
function	segment with ||| matching segment	count=1
class	a synapses that ||| spatial	count=1
function_arg	get [function_1] [arg_2] ||| element [function_1] element [arg_2]	count=1
function	a clipped version of ||| clipped	count=1
function	[function_1] all ||| [function_1] [function_2]	count=3
function	[function_1] string of ||| [function_2] [function_1]	count=1
module_class	the [class_2] ||| [module_1] [class_2] worker process updated	count=2
function	training ||| other training	count=1
function	getcallbacks ||| get callbacks	count=1
module_class	[module_1] prediction log ||| [module_1] temporal [class_2]	count=1
module	that the ||| frameworks opf	count=2
module	that elapse between when ||| frameworks opf	count=1
arg	fields ||| fields	count=3
class	jobs ||| client jobs dao	count=1
class	hypersearch job ||| hyper search	count=1
function	calling [function_2] ||| [function_2] [function_1]	count=1
class	the temporal ||| temporal	count=1
function	index of the first ||| first non	count=1
function	concatenated list of both ||| all	count=2
function	category list ||| get category list	count=2
function	returns the periodic checks ||| get	count=1
function	optimization function ||| get optimization metric info	count=1
function	from a swarm ||| swarm	count=1
function_arg	[function_1] [arg_2] name is one whose ||| [function_1] [arg_2]	count=4
function	[function_1] a parameter ||| [function_1] anomaly [function_2]	count=1
function	number of synapses per ||| synapses per	count=1
function	of printouts ||| null	count=1
function	jobs table and ||| jobs	count=1
function	create a [function_2] ||| [function_1] model [function_2]	count=4
function	the indices of the ||| indices	count=1
function	state in ||| state	count=1
class	sequence ||| activity	count=2
function_arg	[function_1] [arg_2] dict ||| swarming [function_1] [arg_2]	count=2
function	vector ||| in on times	count=1
function	number to ||| number	count=1
function_arg	[function_1] [arg_2] dict ||| [function_1] [arg_2]	count=2
function	iterations ||| init	count=1
arg	j ||| j	count=1
module	a randomly ||| algorithms	count=1
module	[module_1] this ||| [module_2] [module_1]	count=4
arg	pattern with a ||| inputpattern	count=1
class	prediction output ||| basic prediction	count=1
module	and ||| swarming hypersearch	count=1
function	the boost factors ||| boost factors	count=2
arg	cursor [arg_2] ||| [arg_2] [arg_1]	count=6
class	model ||| gram model	count=1
function	next value of the ||| next	count=1
function	pos ||| multi indicator	count=1
function	exp b a ||| diff exp	count=1
function	checkpoint [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] the path ||| [function_1] [function_2]	count=2
function	cell index in ||| on cell	count=1
module_class	encoders [class_2] ||| [module_1] adaptive [class_2]	count=3
arg	that defines ||| options encoderdict	count=1
arg	next n values for ||| n	count=1
arg	'numactivecolumnsperinharea' ||| localareadensity	count=1
function	[function_1] partition ||| [function_1] [function_2]	count=2
module	process ||| gym raw	count=2
arg	network will remove current ||| network	count=1
arg	the results [arg_2] ||| [arg_2] [arg_1]	count=1
arg	of records records - ||| chunkindex	count=1
function	for a synapses that ||| init	count=1
function	cell in [function_2] ||| [function_2] [function_1]	count=3
function	the overlap ||| overlap	count=1
function	[function_1] instance ||| [function_1] [function_2]	count=1
function	[function_1] initial ||| [function_1] [function_2]	count=1
class	non-temporal prediction log ||| non temporal prediction log	count=1
class	of the state ||| hs state	count=1
arg	a message ||| message	count=1
function	[function_1] that belong ||| [function_2] [function_1]	count=3
function	[function_1] of active ||| [function_2] [function_1]	count=3
function	[function_1] cumulative w ||| [function_1] [function_2]	count=1
class	create ||| svmclassifier node	count=2
class	the given hypersearch ||| hyper search	count=1
function	field ||| int field	count=1
function	job record here 'fields' ||| job	count=1
function_arg	[function_1] encoder ||| [arg_2] [function_1]	count=1
function	[function_1] [function_2] ||| [function_2] dbname [function_1]	count=2
function	method override] returns ||| get	count=1
class	the [class] ||| [class]	count=4
function_arg	[function_1] in the ||| [function_1] swarms [arg_2]	count=1
function	deerializes ||| read	count=1
function	of synapses [function_2] ||| [function_2] [function_1]	count=2
function	the [function] output field ||| get [function] output field	count=1
arg	aggregated dataset ||| aggregationinfo	count=1
function	the a list of ||| file field list	count=1
class	[class_1] [class_2] ||| [class_1] [class_2]	count=152
function	logging [function_2] ||| [function_2] [function_1]	count=1
module	debugging ||| algorithms	count=1
function	the verbosity [function_2] ||| [function_2] [function_1]	count=2
function	stream ||| stream	count=2
function	permanence [function_2] ||| [function_2] [function_1]	count=2
function	experiment [function] ||| load experiment [function] from	count=1
arg	of obj ||| obj	count=1
function_arg	[function_1] groundtruth from ||| [function_1] [arg_2]	count=2
function	than ||| init	count=1
function	main loop of the ||| main loop	count=1
class	be greater ||| iteration phase	count=1
function	mode the job ||| job	count=1
function	activity duty ||| active duty	count=1
function	[function_1] determines ||| [function_2] [function_1]	count=1
function	[function_1] [function_2] - ||| [function_1] timestamp record [function_2] recordts	count=9
function_arg	passes the [function_1] [arg_2] completion ||| frameworks opf [function_1] cb [arg_2]	count=1
function	the category ||| get category	count=1
function	pretty print a pattern ||| pretty print pattern	count=1
arg	coordinate to a ||| coordinate	count=1
function	boost factors for ||| boost factors	count=2
function	module imported description ||| get experiment description interface from	count=1
function	into the numpy ||| encode into	count=1
class	disk ||| record stream	count=1
function	the settings are ||| settings	count=1
module	is a [module] ||| [module]	count=1
arg	in our _internalstats ||| bottomupnz predictedstate colconfidence	count=1
function	the average [function_2] ||| [function_2] synapses per segment [function_1]	count=2
function	the inhibition radius ||| inhibition radius	count=2
function	duty [function_2] ||| [function_1] [function_2]	count=11
function	inference ||| infer	count=9
function	[function] due ||| slow is segment [function]	count=3
function_arg	set the [arg_2] ||| knnanomaly classifier region [function_1] parameter name index [arg_2]	count=1
function	state to ||| set swarm state	count=1
function	metric over an ||| get metric from trace	count=1
function_arg	interpret [arg_2] ||| [function_1] runtimeelement [arg_2]	count=4
function_arg	[function_1] start ||| [function_1] [arg_2]	count=10
function	[function_1] parameter ||| [function_2] [function_1]	count=1
arg	averaged over multiple time ||| vectors numsamples	count=1
module	the state of ||| regions	count=4
function	inference ||| stats infer	count=1
arg	defines the permutations to ||| options encoderdict	count=1
class	if possible ||| temporal prediction log adapter	count=1
function	store [function_2] ||| [function_1] [function_2]	count=1
function	region to ||| anomaly classifier region	count=1
function	remove labels from the ||| remove labels	count=1
function	[function] - ||| compute timestamp record [function]	count=3
class	listing of experiments ||| hyper search	count=1
class	file to ||| record	count=1
class	returns ||| htmprediction model	count=3
function_arg	job type [arg_2] ||| [arg_2] [function_1]	count=1
class	emits ||| metrics logger iface	count=1
function	max value of ||| arg max	count=1
function	and deletes all synapses ||| in	count=1
class	the record stream as ||| record stream	count=1
class	pattern ||| pattern	count=1
function	update the boost factors ||| update	count=1
function	updates ||| update synapse	count=1
function	[function_1] a list ||| [function_2] [function_1]	count=6
function	inferencetype ||| metric specs	count=2
function	if [function] elements ||| [function]	count=1
function	needed length ||| length	count=1
class	must be greater ||| iteration	count=1
module	of the ||| algorithms	count=1
function	[function_1] the 'category' ||| [function_2] field [function_1]	count=1
function	update the [function_2] ||| [function_2] [function_1]	count=1
function	counts ||| counts	count=2
arg	type dtype that ||| dtype	count=1
function	run of this model ||| model	count=1
function	converts a ||| to	count=3
function	an existing job ||| resume job no retries	count=1
function	randomly generated permanence value ||| perm	count=1
class	returns ||| sdrclassifier region	count=1
class	hypersearch [class_2] ||| [class_2] [class_1]	count=2
function	the bucket ||| map bucket	count=1
function_arg	[function_1] within ||| [arg_2] [function_1]	count=12
arg	0's and 1's ||| arr	count=1
function_arg	the same [arg_2] ||| [function_1] [arg_2]	count=4
module	temporalmemory instances ||| algorithms	count=1
function	remove labels from ||| remove labels	count=3
arg	and/or learning and return ||| rfinput resetsignal	count=1
arg	backtrackingtmcpp backtrackingtmcpp loadfromfile ||| filepath	count=1
function	[function_1] this pynode ||| [function_1] [function_2]	count=1
function	[function_1] predicted => ||| [function_2] [function_1]	count=2
arg	of the on-times encountered ||| freqcounts title xlabel	count=1
function	ndesirednewsynapes [function] ||| grow [function]	count=2
function_arg	histogram [arg_2] ||| [arg_2] [function_1]	count=1
arg	matches the specified jobtype ||| jobtype	count=1
function	[function_1] duty cycles ||| [function_1] [function_2]	count=8
function	bring ||| bring	count=1
function	the additional [function_2] ||| [function_1] [function_2]	count=8
function	all models in a ||| models get	count=1
function	the number of ||| get adaptive svddims	count=1
function	[function_1] segment ||| [function_2] [function_1]	count=20
function	region's encoder [function_2] ||| [function_2] [function_1]	count=4
function	to set the default ||| default	count=1
function	model ||| model	count=11
function_arg	job [arg_2] ||| [function_1] insert [arg_2]	count=4
function	[function_1] training sample ||| [function_1] [function_2]	count=1
arg	input pattern with a ||| inputpattern	count=1
arg	all configuration properties ||| cls	count=1
function	generates the non-default metrics ||| generate	count=1
function	generation ||| full generation	count=1
class	or runs it ||| hyper search runner	count=1
function	percent of the ||| percent	count=1
function	the labels on ||| labels	count=1
function	number of segments ||| segments	count=1
function	our base [function] class ||| read std [function]	count=2
class	the stream ||| record stream	count=1
function	and inference stats ||| stats	count=1
function	requested statistics for ||| stats	count=1
function	in nupic ||| output	count=1
function	[function_1] cumulative n ||| [function_1] [function_2]	count=1
function	completed with errors ||| err model	count=1
function	the models table including ||| jobs of	count=1
module	one iteration of ||| regions	count=4
class	the storage ||| stream iface	count=2
function	'warning' ||| warning	count=1
function	overlap [function_2] ||| [function_1] [function_2]	count=4
function	an anomaly ||| anomaly params	count=2
arg	to maxcols number from ||| maxcols	count=1
function	labels from [function_2] ||| [function_2] get [function_1]	count=1
arg	1-d ||| output	count=1
class	[class_1] worker ||| [class_2] [class_1]	count=1
function	[function_1] to ||| algorithms backtracking tm choose [function_1] [function_2]	count=1
arg	and best position ||| particleid	count=1
function	of [function] ||| simulate [function]	count=1
function	is a valid estimator ||| valid estimator	count=1
arg	gets a ||| loglevel	count=1
function	activity duty [function_2] ||| [function_2] [function_1]	count=3
function_arg	implemented [arg_2] ||| [arg_2] [function_1]	count=1
class	us ||| iface	count=1
function	for the ||| for	count=3
function	initialized ||| perm	count=1
function	list of tuples ||| list	count=1
function	item ||| item	count=1
function	sources ||| sources	count=1
function	synapse on a ||| synapse	count=1
function	[function_1] update the ||| [function_1] [function_2]	count=4
class	model ||| jobs dao	count=1
arg	params must be the ||| params	count=1
function	[function_1] checkpoint ||| [function_1] model [function_2]	count=1
function	length [function_2] ||| [function_2] [function_1]	count=4
function	the learning active ||| learn	count=1
function	returns the indices of ||| get cell indices	count=1
arg	permanence values ||| perm columnindex	count=1
class	our ||| backtracking	count=1
function	a lookup ||| lookup	count=1
class	that is ||| pooler	count=1
function	[function_1] file ||| [function_1] [function_2] expjsonfilepath options outputlabel permworkdir	count=4
function	get the permanence decrement ||| permanence decrement	count=1
function	the segments that belong ||| segments for	count=1
class	network ||| network	count=11
function	the smallest [function_2] ||| [function_2] [function_1]	count=1
class	state of the encoder ||| encoder	count=1
function	returning the category list ||| category list	count=1
function	randomly ||| init perm	count=1
class	search the configuration path ||| configuration	count=1
function	[function_1] index of ||| [function_1] next record [function_2]	count=1
class	runs it inline ||| search runner	count=1
function	percent of the outputs ||| percent outputs	count=1
function_arg	[function_1] in state ||| [arg_2] [function_1]	count=4
function	a float ||| float	count=2
function	list from the ||| list from file field	count=1
function_arg	numpy [arg_2] ||| [function_1] str [arg_2]	count=1
function	the current predicted ||| predicted	count=1
module	tricky one ||| engine	count=1
module	instantiate a ||| opf	count=1
function_arg	[function_1] [arg_2] this ||| [function_1] label [arg_2]	count=2
module	permanence value ||| algorithms	count=1
function	sensor [function_2] ||| [function_2] [function_1]	count=1
class	file to disk ||| reader	count=1
function	sequence of ||| init	count=2
function	sets the number ||| set num	count=2
function	maximum ||| get max	count=2
class	this method will ||| helper	count=1
function	records ||| delete records	count=2
function	what test we are ||| test header	count=1
function	artificial labels ||| variable label	count=2
function	a list ||| file field list	count=1
function	filter variables ||| init filter	count=1
arg	optionally the best result ||| particlestate newbest	count=1
function	each of the active ||| active	count=1
function	matrix ||| matrix	count=2
function_arg	[function_1] cells ||| [arg_2] [function_1]	count=2
function	instance params ||| init	count=1
function	task and updates any [function_1] [function_2] are not absolute paths ||| [function_1] [function_2]	count=1
class	the given hypersearch job ||| search	count=1
function_arg	sequences a [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] the curve ||| [function_2] [function_1]	count=3
function	category list ||| category list	count=3
class	put us ||| record stream iface	count=1
class	[class_1] memory class ||| [class_2] [class_1]	count=1
function	topdowncompute() methods ||| top down mapping	count=2
function	number of [function_2] ||| [function_1] [function_2]	count=7
function	encoder [function_2] ||| [function_2] [function_1]	count=5
module	instantiate the ||| swarming	count=1
function	the verbosity level ||| sp verbosity	count=2
function	learning [function_2] ||| [function_2] [function_1]	count=4
class	[class_1] method to ||| [class_2] [class_1]	count=2
function	inference output directory for ||| inference	count=1
function	cells to learn ||| cells to learn	count=1
function_arg	[function_1] pattern index ||| [arg_2] [function_1]	count=1
function	[function_1] pattern machine ||| [function_1] [function_2]	count=1
function	[function_1] types ||| [function_2] [function_1]	count=2
class	periodicactivityrequest elements ||| activity mgr	count=2
module_class	[module_1] labels ||| [module_1] [class_2]	count=2
function	[function_1] [function_2] ||| [function_2] [function_1]	count=1039
function	random [function_1] [function_2] ||| algorithms backtracking tm choose [function_1] [function_2] c i s	count=1
function_arg	[function_1] [arg_2] ||| [function_1] records [arg_2]	count=29
function_arg	[function_1] c i ||| [function_1] [arg_2]	count=5
class	[class] had ||| [class]	count=1
function	should only [function_2] ||| [function_1] [function_2]	count=2
function	worker completion message that ||| worker completion message	count=1
function	is initialized in a ||| init perm	count=1
class	temporal memory class ||| temporal memory	count=1
arg	[arg] end noninclusive ||| [arg] end	count=3
class	file ||| file	count=10
class	to ||| iface	count=1
function	the column that ||| column for	count=2
class	[class_1] distribution and ||| [class_2] [class_1]	count=2
function	[function_1] columns ||| [function_1] [function_2]	count=4
function	metric is flawed ||| metric	count=1
function	model's in-memory prediction cache ||| prediction cache	count=1
class	be greater than ||| phase	count=1
class	hypersearch job ||| hyper search runner	count=1
function	area under the ||| area under	count=2
function	attempt to insert ||| insert or get unique	count=1
function	generate description from ||| generate range	count=1
arg	records - a list ||| chunkindex	count=1
function	synapses ||| init perm	count=1
module	dict and returns the ||| swarming	count=1
arg	the permanence for ||| permanence	count=1
module	[module] tail ||| [module]	count=3
function_arg	[function_1] params must ||| [function_1] inlist [arg_2]	count=1
arg	of 0's and 1's ||| arr	count=1
function	of resets ||| get trace resets	count=1
function	the values of ||| get fields	count=1
function	get ||| get raw ground	count=1
function	[function_1] [function_2] ||| [function_1] optimized [function_2]	count=1
class	counterpart ||| permute variable	count=1
class	to disk ||| reader	count=1
function	given field ||| field	count=1
function	to beginning ||| rewind	count=1
module	a [module] ||| [module]	count=1
module	including 'setup' callbacks ||| frameworks	count=1
function	persist it to ||| property	count=2
arg	the recognition accuracy of ||| c gamma progressstart progressend	count=1
function	generates centre [function_2] ||| [function_1] [function_2]	count=3
arg	msg ||| msg	count=2
function	attempt to insert ||| insert or	count=1
function	get the beginning part ||| get dbname prefix	count=1
function	records starting from ||| records	count=2
function_arg	mangled private [arg_2] ||| [arg_2] [function_1]	count=3
function	offsets and spread ||| and spread	count=2
function	potentially change [function] maxval ||| set min [function]	count=1
function	message ||| message	count=1
class	construct a variable ||| permute	count=1
function	generated ||| perm	count=1
function	artificial labels have to ||| variable label	count=1
function	test we are ||| test	count=1
class	file is always closed ||| file record	count=1
function	the models for a ||| models get fields for	count=1
function_arg	dict containing [arg_2] ||| [arg_2] [function_1]	count=3
class	initialize ||| backtracking tmcpp	count=1
function	pycapnp proto type ||| proto type	count=2
module	'setup' callbacks this ||| opf	count=1
class	model in ||| model	count=4
class	visualization ||| visualizer	count=1
function	average [function_2] ||| [function_2] segment [function_1]	count=1
function	given opf task against ||| run	count=1
function	of 1 field ||| set field	count=1
function	calling [function_2] ||| [function_1] [function_2]	count=1
function	set the ||| set encoder params	count=1
function	permanence decrement ||| permanence decrement	count=1
function	the duty ||| duty	count=2
class	a connection to ||| connection	count=1
function	sequence of ||| models get fields	count=1
module	instances list ||| algorithms	count=2
function	set all the ||| set	count=1
function	conforming to ||| init	count=2
function	for number of sequences ||| mm get	count=1
class	a clientjobsdao ||| client jobs dao	count=1
arg	[arg_1] fields for ||| [arg_2] [arg_1]	count=6
class	at the ||| iface	count=1
function	the end of learning ||| end	count=1
arg	of space-separated numbers ||| listobj	count=1
function_arg	file returning [arg_2] ||| [function_1] [arg_2]	count=1
function	flush the file to ||| flush	count=2
function	but with retries ||| matching row with retries	count=1
class	instances ||| memory	count=1
function	temporalmemory ||| eq	count=1
function	end of inference to ||| end	count=1
class	for more information ||| coordinate	count=1
arg	likelihood less than minlikelihoodthreshold ||| minlikelihoodthreshold maxpredictionsperstep	count=1
class	instantiate a ||| iface	count=1
function	[function_1] models ids ||| [function_1] err model [function_2]	count=1
module	that saves the ||| frameworks opf	count=1
function_arg	applies f ||| apply d f	count=2
function	synapses per [function_2] ||| [function_2] [function_1]	count=2
function	only [function] ||| get output [function]	count=3
function	random number [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] row ||| [function_2] [function_1]	count=1
arg	niters number of iterations ||| niters inferenceargs	count=2
function	get the initial permanence ||| get initial permanence	count=1
function	reset the velocity ||| reset velocity	count=2
function	[function_1] log ||| [function_2] [function_1]	count=1
function	new [function_2] ||| [function_2] [function_1]	count=12
module	periodicactivityrequest elements ||| frameworks	count=2
class	reset the sensor ||| sensor	count=1
function	of dict type ||| get dict	count=2
class	returns ||| geospatial coordinate	count=1
function_arg	returns log(exp [function_1] [arg_2] are numpy arrays values ||| [function_1] [arg_2] out	count=2
function	number of ||| get adaptive svddims	count=1
function	[function_1] the winner ||| [function_2] [function_1]	count=1
module	:param network nupic ||| frameworks viz	count=1
arg	a list of records ||| records	count=1
arg	range start ||| start	count=1
class	greater than ||| phase	count=1
arg	[arg] and ||| [arg]	count=3
class	given hypersearch job and ||| hyper search runner	count=1
class	value for ||| spatial pooler	count=1
arg	list of [column cellidx] ||| andvalues	count=1
function	duty cycles for ||| duty cycles	count=3
function	output over ||| over	count=1
arg	metrics a ||| metrics label	count=1
arg	pattern ||| inputpattern	count=1
function_arg	all swarms [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	creates [function_1] [arg_2] ||| [function_1] cls connections random [arg_2]	count=6
module_class	@doc place_holder network ||| engine network	count=9
class	cells in an unpredicted ||| temporal memory	count=1
function	[function_1] table including ||| [function_2] [function_1]	count=1
class	dataset generator with ||| data generator	count=1
function	amount for ||| syn perm	count=3
module	initialized in ||| algorithms	count=1
function	"finish [function] command ||| model control [function]	count=1
class	the current ||| manager	count=1
module	including 'setup' callbacks ||| frameworks opf	count=1
function	simulate [function_2] ||| [function_2] [function_1]	count=1
function	updates a [function_2] ||| [function_2] [function_1]	count=1
function	spatial pooler implementation for ||| spimp	count=1
class	@internal ||| backtracking tm	count=3
function	[function_1] completion ||| [function_1] [function_2]	count=3
function	creates a new ||| create	count=1
function	name for the ||| db name	count=1
function	for a synapses ||| init perm	count=1
function	generate a coincidence [function_1] [function_2] inputs to the ||| [function_2] [function_1]	count=3
class	of iterations must be ||| iteration phase	count=1
function	an ||| extra	count=1
function	generate description ||| generate	count=1
arg	[arg_1] to end ||| [arg_2] [arg_1]	count=2
class	a network ||| network	count=2
function	being optimized this function ||| optimized	count=1
function	given encoder ||| encoder str	count=1
class	at ||| stream	count=1
function	of a new ||| states	count=1
function	sets the inhibition ||| set inhibition	count=2
function	the permanence [function_2] ||| [function_2] [function_1]	count=2
function	the velocity to ||| velocity	count=1
function	top ||| top	count=1
arg	value matches 'curvalue' ||| jobid fieldname newvalue curvalue	count=1
class	returns ||| spatial	count=1
function	be greater than 0 ||| init	count=1
function	a list of swarm ||| swarm	count=1
function	init all of our ||| init	count=1
function	description [function_2] ||| [function_2] [function_1]	count=10
class	permanence ||| spatial	count=1
class	[class_1] [class_2] ||| [class_2] [class_1]	count=20
function	from the a ||| list from	count=1
function	the probability that the ||| probability	count=1
function_arg	updates [arg_2] ||| [arg_2] [function_1]	count=4
function	the indices of ||| indices	count=1
arg	of records read from ||| records	count=1
function	cell with the fewest ||| least allocated cell	count=1
function	reset the [function_2] ||| [function_2] [function_1]	count=5
module	probabilities ||| datafiles extra secondorder	count=4
function	fewest ||| least allocated	count=1
function_arg	print a [arg_2] ||| [arg_2] [function_1]	count=3
module	parse the given ||| swarming hypersearch	count=1
function	[function_1] specs ||| [function_2] [function_1]	count=6
function_arg	adds one [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] have ||| [function_1] [function_2]	count=2
function	returns the input ||| get	count=1
function_arg	[function_1] string metrics ||| [function_1] [arg_2]	count=5
class	sequence of periodicactivityrequest ||| activity mgr	count=2
class	a ||| periodic activity	count=2
function_arg	[function_1] from ||| [function_1] [arg_2]	count=8
function	[function_1] synapse ||| [function_1] [function_2]	count=9
arg	to inputpattern and the ||| inputpattern topkcategories	count=1
function	active columns per inhibition ||| active columns per	count=1
function	task against ||| run	count=1
function	metric over ||| metric from trace	count=1
class	instance ||| infer common	count=1
function	settings are ||| settings	count=1
function	attempt to [function_2] ||| [function_2] [function_1]	count=8
function	return ||| get	count=54
function_arg	[function_1] n values ||| [arg_2] [function_1]	count=1
function	the experiment [function_2] ||| [function_1] [function_2]	count=3
arg	new job request but ||| cmdline jobhash	count=1
class	two-gram [class_2] ||| [class_2] [class_1]	count=1
function	seeks to ||| seek	count=1
function	returns the cumulative w ||| get totalw	count=1
function	initializes internal filter variables ||| filter	count=1
function	py ||| bucket indices	count=2
function	the state ||| state	count=1
function	of a model ||| model	count=1
function	to set the default ||| get default	count=1
class	of periodicactivityrequest ||| activity	count=2
function	the index of the ||| index	count=1
class	csv file ||| file	count=2
module	and ||| database	count=1
function	[function_1] the knn ||| [function_1] [function_2]	count=1
function	a + exp ||| log sum exp	count=2
class	elements ||| mgr	count=2
function	args ||| args	count=2
module	[module_1] current ||| [module_2] [module_1]	count=1
function	learn from ||| learn from	count=1
class	metrics ||| metrics manager	count=1
class	a ||| spatial pooler	count=6
class	inference is made and ||| inference element	count=1
function_arg	[function_1] s ||| [arg_2] [function_1]	count=2
function	files ||| files	count=1
module_class	encoders base encoder ||| encoders coordinate encoder	count=2
function	[function_1] synapses ||| [function_2] [function_1]	count=7
class	create and ||| node	count=1
module	of the file ||| data	count=1
function	[function_1] that match ||| [function_1] [function_2]	count=1
arg	rows ||| reader writer	count=2
function	[function_1] a new ||| [function_1] [function_2]	count=1
arg	for the specified modelid ||| modelid	count=1
function_arg	[function_1] checkpointdir ||| [function_1] [arg_2]	count=4
function	[function_1] per cell ||| [function_1] [function_2]	count=6
function	the path ||| path	count=2
function	with ||| best matching	count=1
function	returns the indices of ||| get	count=3
function_arg	[function_1] [arg_2] ||| [function_1] shifted ground truth [arg_2]	count=9
function	[function_1] state ||| [function_2] [function_1]	count=11
arg	'newstate' ||| swarmid newstatus	count=1
class	file ||| file record	count=2
function	initialize ephemeral ||| ephemeral	count=1
class	back at the ||| stream iface	count=1
arg	numparticles particles in it ||| swarmid minnumparticles	count=1
function	the distances between ||| distances	count=1
function	exp b a and ||| diff exp	count=1
function	maximum number ||| max	count=2
class	ourself ||| spregion	count=1
function	[function_1] error ||| [function_1] [function_2]	count=1
function	[function_1] [function_2] ||| monitor mixin mm get [function_1] [function_2] plot title showreset resetshading	count=1
function	[function_1] chunk of ||| [function_1] [function_2]	count=1
function	[function_1] orphaned this ||| [function_1] [function_2]	count=5
function	matching row with the ||| matching row	count=1
class	the xml configuration file ||| configuration file wrapper	count=2
function	offsets [function_2] ||| [function_2] centre and spread [function_1]	count=1
function	the category list this ||| category list	count=1
function	worker completion ||| get worker completion	count=2
function	a ||| to	count=1
function	probability ||| probability	count=2
function	the best [function_2] ||| [function_1] model id [function_2]	count=1
function	see if we ||| hs	count=1
function	[function_1] velocity to ||| [function_2] [function_1]	count=1
function	[function_1] for concurrency ||| [function_1] [function_2]	count=1
class	state and ||| backtracking tm	count=1
function_arg	[function_1] the cells ||| [arg_2] [function_1]	count=3
function	our [function] ||| [function]	count=3
arg	given format ||| format	count=1
function_arg	map assuming ||| map maxbuckets offset	count=1
function	local inhibition local inhibition ||| local	count=1
function	[function_1] dict ||| [function_2] [function_1]	count=2
class	stream ||| stream	count=4
function	active cells in ||| active	count=1
function	per input [function_2] ||| [function_2] columns [function_1]	count=2
function	new position ||| new position	count=2
class	method to compute ||| temporal memory	count=1
module	of iterations ||| frameworks	count=1
arg	non-numeric fields from spatialoutput ||| spatialoutput	count=1
class	temporal [class_2] ||| [class_1] [class_2]	count=2
function	report ||| append report	count=1
function	[function_1] file and ||| [function_2] [function_1]	count=8
module_class	of ourself ||| regions spregion	count=1
function	return segment number ||| get segment	count=1
function	sequence of ||| get	count=2
function	[function_1] range ||| [function_1] [function_2]	count=1
arg	[arg_1] associated ||| [arg_2] [arg_1]	count=1
function	method will remove ||| knn	count=1
function	[function] it has ||| [function]	count=1
function	beginning part of the ||| dbname prefix	count=1
arg	specified experiment ||| experimentdir	count=1
function	returns the potential percent ||| get potential pct	count=1
function	pattern that is closest ||| closest	count=1
function	job to ||| job	count=1
function	of printouts for debugging ||| null	count=1
module	[module] distinct ||| [module]	count=3
function	a pattern ||| pattern	count=1
function	[function_1] default ||| [function_1] [function_2]	count=2
function	list from ||| from file	count=1
arg	experiment ||| experimentdir	count=1
function	of dataset [function] metadata descriptors ||| get dataset [function]	count=1
function	[function_1] classifier ||| [function_2] [function_1]	count=6
class	the custom configuration ||| configuration	count=1
arg	new job request but ||| cmdline	count=1
class	returns a ||| pooler	count=1
function	returns a dictionary where ||| get	count=1
class	is the best model ||| opfmodel	count=1
class	this model ||| model	count=2
function	to a json file ||| with json file	count=1
class	worker or runs it ||| runner	count=1
class	input bits this method ||| spatial pooler	count=1
function	[function_1] dict of ||| [function_1] custom [function_2]	count=1
function	of job ||| get fields	count=1
function	for jobs in the ||| jobs for	count=2
function	given version [function_2] ||| [function_2] [function_1]	count=2
function	returns [function_2] ||| frameworks opf htmprediction model [function_1] [function_2]	count=1
function	the first generation ||| first non full generation	count=1
function	sets the max new ||| set max new	count=1
function	and spread ||| and spread	count=2
class	the xml configuration file ||| custom configuration file wrapper	count=2
function	params file ||| params file	count=3
function	[function_1] metric ||| [function_2] [function_1]	count=4
function	control element from ||| convert	count=1
class	associated with this testregion ||| test region	count=1
arg	and/or learning and ||| rfinput resetsignal	count=1
function	returns the ||| get permanence	count=1
class	the runner's _hypersearchjob ||| hyper	count=1
function	a neighborhood [function_2] ||| [function_2] [function_1]	count=1
class	that the file ||| file	count=1
function_arg	segment update [arg_2] ||| [function_1] [arg_2]	count=1
module	generated permanence ||| algorithms	count=1
function	[function_1] inactive ||| [function_1] [function_2]	count=4
function	[function_1] the range ||| [function_2] [function_1]	count=2
module	greater ||| frameworks	count=1
module	from the input source ||| swarming	count=1
function	release ||| release	count=1
arg	the result ||| result	count=1
function	see also htmpredictionmodelcontroldisablesplearningcb ||| enable splearning cb	count=1
function	[function_1] cell and ||| [function_1] [function_2]	count=1
function	area under ||| area under	count=2
function	main loop ||| main loop	count=1
class	file to disk ||| record stream	count=1
arg	the status_completed state ||| alreadyrunning	count=2
function	swarm's state ||| state	count=1
arg	return a dict describing ||| filename path	count=1
class	callbacks ||| opftask driver	count=1
class	sdr classifier [class_2] ||| [class_1] [class_2]	count=1
function	from the [function_2] ||| [function_1] [function_2]	count=4
function	stored checkpoint for the ||| model checkpoint	count=1
class	sensor region's ||| htmprediction model	count=1
function	[function_1] test we ||| [function_2] [function_1]	count=2
function	cycles are determined ||| cycles local	count=2
class	value ||| claclassifier	count=1
arg	the "date" iteration index ||| c i segupdate	count=1
function	all models in ||| models get	count=1
class	with this testregion ||| test region	count=1
function_arg	swarm's state [arg_2] ||| [arg_2] [function_1]	count=1
arg	from the result of ||| result	count=1
arg	output ||| output prefix	count=1
function	get the ||| job get	count=1
module	value and see if ||| swarming	count=1
function	the given swarm's state ||| swarm state	count=1
function_arg	bucket map [arg_2] ||| [function_1] maxbuckets [arg_2]	count=4
function	synapse count ||| synapse count	count=4
function_arg	score on [arg_2] ||| [function_1] swarmid [arg_2]	count=1
arg	the coordinate ||| cls coordinate	count=1
function	return the following encoder ||| encoder	count=1
function	cycle [function_2] ||| [function_2] [function_1]	count=1
function	a metric over ||| metric	count=1
function	check for [function_2] ||| [function_2] [function_1]	count=2
arg	on-times encountered ||| freqcounts title xlabel	count=1
function	best model [function_2] ||| [function_2] [function_1]	count=4
function	synapse with ||| synapse	count=1
function	given cell and deletes ||| in cell	count=1
function	'newvalue', but only if ||| if	count=1
function	[function] cycle estimate ||| update [function] cycles	count=1
function_arg	metrics [arg_2] ||| [arg_2] [function_1]	count=2
function	internal column ||| column name dbto	count=1
function_arg	json [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] the overlap ||| duty [function_1] [arg_2]	count=1
function_arg	[function_1] defines the ||| [arg_2] [function_1]	count=1
class	or runs ||| hyper search runner	count=1
function	attempt to ||| or get unique job	count=1
arg	of sequences ||| seqlength	count=1
arg	averaged over ||| vectors numsamples	count=2
arg	decorator for retrying ||| timeoutsec	count=1
class	greater than ||| iteration	count=1
function	for the error ||| get error	count=3
function_arg	state [arg_2] ||| [function_1] [arg_2]	count=1
function	:returns true if ||| is	count=1
function	update the ||| job update	count=1
function	of the database name ||| name	count=1
function	flags ||| flags	count=1
function	labels for the ||| labels	count=1
class	if possible ||| temporal prediction	count=1
function	only have ||| job results	count=2
function	a checkpoint [function_2] ||| [function_2] [function_1]	count=2
arg	niters number ||| niters inferenceargs	count=4
arg	i and ||| i	count=1
function	store a training sample ||| store sample	count=1
function	debugging ||| distribution	count=1
arg	field at [arg] flags ||| [arg]	count=1
function	a description file and ||| description file	count=1
module	that is initialized in ||| algorithms	count=1
function_arg	creates ndesirednewsynapes [function_1] [arg_2] ||| grow [function_1] [arg_2]	count=4
function	will remove ||| knn	count=1
function	record ||| input record	count=1
arg	metric type name that ||| metric	count=1
function_arg	[function_1] that ||| [function_1] [arg_2]	count=1
function	updates the model's record ||| update	count=1
arg	in the given sprint ||| sprintidx	count=2
function	the values of ||| get	count=1
function	labels from [function_2] ||| [function_2] remove [function_1]	count=1
module	the current ||| frameworks opf	count=2
function	synapse with [function_2] ||| [function_2] [function_1]	count=3
function	a ||| perm	count=3
function	number of sequences ||| mm get	count=1
function	list of segments for ||| segments	count=1
arg	inputpattern and ||| inputpattern topkcategories	count=1
function_arg	[function_1] [arg_2] member name is one ||| [function_1] name [arg_2]	count=2
function	specs ||| specs	count=2
function_arg	passes [function_1] [arg_2] upon completion ||| frameworks opf [function_1] cb [arg_2]	count=1
class	the file to disk ||| stream iface	count=1
function	json schema ||| json	count=1
class	for a ||| spatial	count=1
function	metric is flawed when ||| metric	count=1
function	a new [function_2] ||| previous value model reset [function_2] [function_1]	count=1
arg	if needed parameters ||| cursor deleteoldversions recreate	count=1
module_class	[module_1] model in ||| [module_1] two gram [class_2]	count=1
function	duty cycles [function_2] ||| [function_2] [function_1]	count=1
class	hypersearch ||| hyper search runner	count=2
function	[function_1] given cell ||| [function_2] [function_1]	count=2
class	for ||| temporal	count=1
function	[function] we ||| [function]	count=3
function_arg	indices i and ||| indices i	count=1
function	like _getonematchingrownoretries(), but ||| get one matching	count=1
function_arg	passes the "finish [function_1] [arg_2] upon completion ||| frameworks opf model control [function_1] cb [arg_2]	count=1
function	predicted ||| predicted	count=8
module_class	[module_1] configuration ||| [module_1] [class_2]	count=2
function	was least ||| least	count=1
function	synapses that is ||| init	count=1
function	checkpoint file ||| checkpoint file	count=1
function	the local [function_2] ||| [function_2] [function_1]	count=2
arg	sorted chunk ||| key	count=1
function	length for a list ||| list length	count=1
function	a _hypersearchjob [function_2] ||| [function_2] [function_1]	count=2
function	inactive columns ||| inactive columns	count=2
function	decomposition svd the svd ||| svd	count=1
function	from a swarm ||| get swarm	count=1
function_arg	[function_1] the results ||| [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] get labels [arg_2]	count=3
function	files into ||| files	count=1
function	models that completed ||| completed models	count=2
arg	classifier to associate ||| partitionid	count=1
arg	change the status on ||| jobid status useconnectionid	count=1
class	to hold ||| connections	count=1
arg	aggregated dataset the filename ||| aggregationinfo	count=1
module	be greater ||| frameworks	count=1
function	init all of ||| init state	count=1
function	the bucket ||| bucket index	count=1
function	1 field in ||| set field	count=1
function	of non-zero bits if ||| to non zero bits	count=1
function	the metadata [function] ||| get field [function]	count=3
function	[function_1] id is ||| [function_2] [function_1]	count=2
function	like _getonematchingrownoretries(), but with ||| one matching row with	count=1
class	when an inference is ||| inference	count=1
function	the number [function_2] ||| [function_1] [function_2]	count=4
class	metric if ||| metric	count=1
function	distances from ||| distances	count=1
function	[function] category number ||| category [function] label	count=2
function	labels for the metrics ||| metric labels	count=1
arg	range start to ||| start	count=1
function	from a ||| from	count=2
function	a lookup [function_2] ||| [function_2] [function_1]	count=1
function	new synapse count ||| new synapse count	count=6
class	convenience ||| monitor mixin	count=1
function	iteration cycle ||| iteration cycle	count=2
module	of periodicactivityrequest elements ||| opf	count=2
arg	records records - a ||| chunkindex	count=1
function	a list of ||| file field list	count=1
function	sensor [function_2] ||| [function_1] [function_2]	count=1
function_arg	duty [function_1] [arg_2] is a moving ||| [function_1] [arg_2]	count=3
class	in the given hypersearch ||| hyper search	count=1
arg	of values 'values' ||| values	count=1
function_arg	- exp [arg_2] ||| [arg_2] [function_1]	count=3
function	params from ||| params	count=1
arg	length size [arg] ||| pos size counts [arg]	count=2
function	[function_1] version ||| [function_1] [function_2]	count=1
arg	output ||| output	count=2
class	prediction output ||| prediction logger iface	count=1
function_arg	creates [function_1] [arg_2] possible choosing ||| [function_1] cls connections random [arg_2]	count=1
function	next from :meth ~ ||| next	count=1
module	file to disk ||| data	count=2
function	should exit ||| should sys exit	count=1
function	numbers ||| numbers	count=1
function	job that is presently ||| job no retries	count=1
function	[function_1] model and ||| [function_2] [function_1]	count=2
arg	in ||| jobid	count=2
module_class	that [class_2] ||| [module_1] [class_2]	count=2
module	this is ||| algorithms	count=1
module_class	[module_1] called by ||| [module_1] [class_2]	count=2
function	string if ||| get string	count=2
function	all models from the ||| all	count=1
function_arg	json string metrics ||| json metrics label	count=2
function	from [function_2] ||| [function_1] [function_2]	count=9
function	given swarm's state ||| swarm state	count=1
function	labels on classified ||| labels	count=1
module_class	the state ||| algorithms backtracking	count=1
function	pickle [function_2] ||| [function_2] [function_1]	count=1
function	during network [function] with ||| [function] serialize extra	count=1
function	[function_1] jobs ||| [function_2] [function_1]	count=12
function	[function_1] w ||| [function_1] [function_2]	count=4
arg	sub-field of [arg] ||| [arg]	count=1
arg	metrics a ||| metrics	count=1
function	inference value from one ||| infer	count=2
function	of models ids that ||| ids	count=1
function	bit ||| bit	count=1
function	indices for each of ||| indices	count=1
class	return ||| client jobs dao	count=1
class	model in a ||| model	count=3
function_arg	get the [function_1] [arg_2] ||| element [function_1] element [arg_2]	count=1
function_arg	records [arg_2] ||| data stream reader get [function_1] [arg_2] range	count=3
function	models table including ||| jobs	count=1
function	to insert ||| insert	count=1
function_arg	anomaly [arg_2] ||| [function_1] remove labels [arg_2]	count=1
function	total on ||| of on	count=1
function	number of [function_2] ||| [function_2] [function_1]	count=12
function	swarm's state to 'newstate' ||| state	count=1
function	possible report ||| append report	count=1
class	the discrete probability ||| discrete	count=2
function	of w ||| get w	count=2
class	a network as a ||| network	count=1
function	time time goes ||| time	count=1
function	number [function] ||| category to label [function]	count=3
function	w for use ||| w	count=1
arg	retrying a pymysql dao ||| timeoutsec logger	count=1
module	be greater ||| opf	count=1
function	file and returns ||| file	count=1
function	inhibition performing global inhibition ||| inhibit columns global	count=1
function	sequence of ||| get fields	count=2
class	the file is always ||| file	count=1
function	like _getonematchingrownoretries(), ||| one matching	count=1
class	'setup' ||| opftask driver	count=1
function	closest ||| closest other	count=1
function	return a dict of ||| get	count=1
function	list of paths ||| config paths	count=1
function	generated permanence value for ||| init	count=1
function	get ||| get	count=21
arg	list of values ||| values freqcounts	count=1
module	key is the ||| frameworks opf	count=1
function	get the [function_2] ||| [function_1] optimized [function_2]	count=1
function	beginning part ||| dbname prefix	count=1
function	distances between ||| distances	count=1
function_arg	[function_1] metrics a ||| [arg_2] [function_1]	count=5
function	the random number state ||| random state	count=1
function	json value from a ||| json value from	count=2
module	synapses ||| algorithms	count=1
function	[function_1] input ||| [function_2] [function_1]	count=1
function	[function_1] under the ||| [function_2] [function_1]	count=2
function	that ||| metric	count=1
class	for temporalmemory ||| temporal memory	count=1
module	sequence of periodicactivityrequest ||| opf	count=2
function_arg	merge sorted [arg_2] ||| [function_1] files [arg_2]	count=1
function	that warrant retries ||| sql	count=1
arg	possible choosing [arg] previous winner ||| cls connections [arg]	count=1
module	including 'setup' callbacks this ||| opf	count=1
module	generated permanence value ||| algorithms	count=1
function	determines if it's ||| duty cycles	count=1
function	[function_1] traces to ||| [function_2] [function_1]	count=2
arg	request this ||| client cmdline clientinfo clientkey	count=1
function	[function] cycle ||| update [function] cycles	count=1
function	a sequence of model ||| models get	count=1
class	this is the ||| model record encoder	count=1
arg	this segment ||| segment	count=1
arg	active ||| activecolumns	count=1
function	log 'msg ||| log	count=1
arg	sparse distributed representation ||| tobeadded	count=1
function	loop of ||| loop	count=1
function	the encoder ||| encoder	count=1
function	[function_1] pattern that ||| [function_1] [function_2]	count=4
function	[function_1] random number ||| [function_1] [function_2]	count=1
class	this metric ||| metric	count=1
arg	number of iterations ||| inferenceargs	count=2
function	returns the verbosity ||| get sp verbosity	count=1
function	generate a [function_2] ||| [function_1] [function_2]	count=3
function	'model0' ||| model0	count=1
function	read state [function_2] ||| [function_2] [function_1]	count=1
function	the closest training ||| closest other training	count=1
function	pooler see also htmpredictionmodelcontroldisabletplearningcb ||| tplearning	count=1
function	back up ||| backup	count=1
function	for adding [function_2] ||| [function_1] [function_2]	count=2
arg	queue of ||| partitionids	count=1
function	the beginning part of ||| prefix	count=1
class	state from the last ||| backtracking	count=1
arg	nupic engine network ||| network	count=1
function	the total on time ||| on	count=1
arg	maps the coordinate to ||| cls coordinate n	count=1
function	seconds in floating point ||| float seconds	count=1
arg	[arg_1] of option ||| [arg_2] [arg_1]	count=2
function	job ||| job increment int	count=1
class	at ||| record	count=1
function	sequence of periodicactivityrequest elements ||| init	count=2
function	for ||| avg connected span for	count=1
function	the total on ||| of on	count=1
function_arg	[function_1] message ||| [arg_2] [function_1]	count=1
arg	[arg] array of ||| inputdata [arg]	count=3
function	of the predictive cells ||| predictive cells	count=1
function	a + ||| log sum	count=1
class	model instance ||| model runner	count=1
function	[function_1] cycle period ||| [function_2] [function_1]	count=3
function	records starting ||| records range	count=2
arg	title ||| title	count=1
function	get the maximum ||| get max	count=2
function	[function_1] learn ||| algorithms backtracking tm choose [function_1] [function_2]	count=1
function_arg	the indices [arg_2] ||| [arg_2] [function_1]	count=3
arg	experiment's results ||| prefix results	count=2
function	map ||| map	count=3
arg	metrics a list of ||| metrics	count=1
function	index of the first ||| first non full	count=1
arg	and learns on ||| columnmatchingsegments prevactivecells	count=1
function	[function_1] returns ||| [function_2] [function_1]	count=4
function	to ||| metrics to	count=1
function	for jobs in ||| active jobs for client	count=2
function	of both the standard ||| all	count=2
arg	results string and ||| jobid results	count=1
function	a list ||| flat list	count=1
class	initialize ||| client jobs dao	count=1
function	list from the a ||| list from	count=1
class	- if [class] had enough ||| [class]	count=1
function	be read next from ||| next	count=1
function	with retries ||| matching rows with retries	count=1
function	[function_1] inhibition ||| [function_2] [function_1]	count=2
function	the best [function_2] ||| [function_1] [function_2]	count=7
class	if the model ||| opfdummy model	count=1
function	upcoming partition ids ||| upcoming partition ids	count=3
function	is sent only ||| only	count=1
function	segments for a given ||| segments	count=1
module	get what the ||| frameworks opf	count=1
function	that are [function] due to ||| is segment [function]	count=1
class	non-temporal [class_2] ||| [class_1] [class_2]	count=2
function	this region does a ||| sensed	count=1
function	list from ||| list from file	count=1
module_class	[module_1] prediction log ||| [class_2] [module_1]	count=1
function	the connected ||| connected	count=1
function	upcoming ||| upcoming	count=1
module_class	the experiment [class_2] ||| [module_1] [class_2]	count=2
function	for a list to ||| flat list	count=1
class	of ||| activity mgr	count=4
function_arg	potentially [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
module	must be greater ||| frameworks	count=1
function	beginning part of ||| dbname prefix	count=1
function	learning iteration [function_2] ||| [function_1] [function_2]	count=2
function	value for a synapses ||| perm	count=1
function	a job to ||| job	count=1
class	properties ||| base	count=1
function	for the ||| get	count=1
function	the path of ||| path	count=2
module	for a synapses that ||| algorithms	count=1
function_arg	[function_1] [arg_2] ||| [function_1] active indices state [arg_2]	count=3
function_arg	--descriptionfromfile option [arg_2] ||| [function_1] [arg_2]	count=3
function	[function_1] qualifies ||| [function_1] [function_2]	count=3
arg	[arg] previous ||| cls connections [arg]	count=1
function_arg	[function_1] b ||| [arg_2] [function_1]	count=4
function	synapse with [function_2] ||| [function_2] permanence [function_1]	count=1
function	encoder name ||| encoder name from	count=2
function	paths to search for ||| paths	count=1
class	instance ||| phase learn and infer	count=1
function	[function_1] metrics to ||| [function_2] [function_1]	count=2
function	region does a ||| sensed	count=1
module	write the header row ||| frameworks opf	count=1
function	parameter of the anomaly ||| anomaly parameter	count=2
function	first generation in ||| first non full generation	count=1
function	models for a single ||| models get fields for	count=1
function	[function_1] connected ||| [function_1] [function_2]	count=1
function	timedelta to [function_2] ||| [function_2] from [function_1]	count=3
function	[function_1] seconds ||| [function_2] from [function_1]	count=1
function	[function_1] end ||| [function_2] [function_1]	count=1
function	time ||| time per timestep	count=2
function_arg	[function_1] [arg_2] ||| [function_1] remove labels [arg_2]	count=3
function	model that ||| model	count=1
function	[function_1] labels have ||| [function_2] [function_1]	count=4
arg	categoriesout ||| categoriesout	count=1
function	of iterations must ||| init	count=1
function	winner ||| winner	count=1
function	the active cells ||| active cells	count=2
arg	the given experiment experimentdir ||| experimentdir	count=1
function	job to 'newvalue', ||| job	count=1
arg	spatialoutput ||| spatialoutput	count=1
function	potential segment [function_2] ||| [function_1] [function_2]	count=2
class	the classifier ||| htmprediction model classifier	count=1
function	the default ||| get default	count=1
class	greater ||| iteration	count=1
function	increment amount for active ||| syn perm active	count=2
class	must be greater than ||| iteration	count=1
function	[function_1] iteration ||| [function_2] [function_1]	count=4
function_arg	all swarms [arg_2] ||| [function_1] [arg_2]	count=4
class	predicted state ||| backtracking tm	count=1
function	[function_1] values ||| [function_2] [function_1]	count=1
function	sort in [function_2] ||| [function_2] [function_1]	count=3
function	path of ||| path	count=4
function	the list of paths ||| config paths	count=1
function	[function_1] this model ||| [function_2] [function_1]	count=2
module	iterations must be ||| frameworks	count=1
function	[function_1] new segment ||| [function_2] [function_1]	count=1
arg	performs common initialization parameters ||| streamdef bookmark saveoutput isblocking	count=1
class	or runs it inline ||| runner	count=1
class	elements ||| periodic activity mgr	count=4
function	active cells ||| active cells	count=4
arg	records read from the ||| records	count=1
function	a "persistentjobguid" value ||| persistent job guid	count=1
function	jobid to file ||| id	count=1
arg	column the overlap ||| overlaps	count=1
function	generates a lookup dictionary ||| lookup dict	count=1
function	on time ||| on	count=1
class	back at the ||| record	count=1
function	compute area under ||| area under	count=2
arg	learns on the segments ||| columnmatchingsegments prevactivecells	count=1
function_arg	[function_1] values 'values' ||| [arg_2] [function_1]	count=1
function	[function_1] checkpoint from ||| [function_1] model [function_2]	count=1
function_arg	read [arg_2] ||| [function_1] [arg_2]	count=1
arg	method description ||| input output learn	count=1
class	best model [class_2] ||| [class_1] [class_2]	count=1
function	run ||| run	count=2
class	of the file ||| record stream	count=1
class	current tm ||| tm	count=2
function	get the [function_2] ||| [function_1] optimized metric [function_2]	count=3
function	the permutations report csv ||| report	count=1
arg	expression and ||| expression	count=1
class	method ||| temporal memory	count=1
function_arg	+ exp [arg_2] ||| [arg_2] [function_1]	count=1
arg	specified fields for all ||| fields ignorekilled	count=1
class	creates ||| opfdummy model runner	count=1
arg	request this is called ||| client cmdline clientinfo clientkey	count=1
function	[function_1] to learn ||| algorithms backtracking tm choose [function_1] [function_2]	count=1
function	a sequence ||| init	count=2
function_arg	passes the "finish [function_1] [arg_2] note upon completion ||| [function_1] [arg_2]	count=1
function	[function_1] under ||| [function_2] [function_1]	count=2
arg	b are ||| b	count=1
function	search from a ||| search	count=1
function	know [function] ||| finish [function]	count=1
function	[function_1] that belong ||| [function_1] [function_2]	count=3
class	we ||| hs state	count=1
arg	the segment ||| segment	count=1
class	this phase ||| iteration phase spec	count=1
function	handle ||| handle	count=2
class	the jobs table ||| jobs dao	count=1
arg	a bucket index ||| index	count=1
arg	expression and wraps the ||| expression	count=1
function_arg	[function_1] the value ||| [function_1] parameter name index [arg_2]	count=1
class	set ||| svmclassifier node	count=2
function	[function_1] the end ||| [function_2] [function_1]	count=1
function	that artificial labels have ||| variable label	count=1
function	permanent "finished learning" mode ||| finish learning	count=3
arg	a list of values ||| values freqcounts	count=1
function	network's [function] ||| get [function]	count=1
class	method will ||| helper	count=1
function	returns descriptions ||| get field descriptions	count=2
module	of records that elapse ||| frameworks opf	count=1
class	state of ||| backtracking tm	count=1
function	log ||| log	count=3
function	field in a ||| set field	count=1
function	[function_1] to learn ||| [function_2] [function_1]	count=1
function	test ||| test	count=3
function	[function_1] chunk ||| [function_1] [function_2]	count=1
function	the aggregation ||| aggregation	count=1
function	[function_1] dataset ||| [function_1] [function_2]	count=1
function	to generate random ||| generate	count=1
function_arg	duty [function_1] [arg_2] cycle is a moving ||| duty [function_1] [arg_2]	count=3
function_arg	a figure [arg_2] ||| [function_1] over time [arg_2]	count=2
class	of periodicactivityrequest elements ||| activity mgr	count=2
function	dict of all ||| dict	count=1
function	sequence of job ||| jobs get fields	count=1
function	list of [function_2] ||| [function_2] [function_1] category	count=1
function	[function] the ||| add multiple [function]	count=1
function	only if the current ||| if	count=1
arg	the classifier to associate ||| partitionid	count=1
function	to json string ||| metrics to json	count=2
function	the learning active state ||| learn	count=1
module	write the header ||| frameworks opf	count=1
function	the [function_2] ||| [function_2] [function_1]	count=2
module	this ||| algorithms	count=3
class	[class] had enough ||| [class]	count=1
class	return ||| jobs dao	count=1
function	all models ||| models get	count=1
function	for jobs in ||| jobs for client	count=2
module_class	@doc place_holder [class_2] ||| [module_1] [class_2]	count=22
class	encodes ||| model record encoder	count=1
class	randomly generated ||| spatial	count=1
arg	threshold ||| threshold	count=1
function	with a base ||| base	count=1
arg	a prediction ||| prediction	count=1
function_arg	set [arg_2] ||| [function_1] parameter name index [arg_2]	count=1
function	[function_1] region ||| [function_1] [function_2]	count=1
arg	start to ||| start	count=3
function	compute the learning active ||| learn	count=1
function	a string of space-separated ||| string	count=1
function	labels for ||| metric labels	count=2
function_arg	[function_1] [arg_2] ||| [function_1] upcoming partition ids [arg_2]	count=2
function	of the cell ||| cell trace	count=1
class	the file ||| reader	count=1
arg	all patterns to inputpattern ||| inputpattern topkcategories	count=1
function	that returns ||| get ephemeral	count=2
arg	variables for further processing ||| input filterinfo	count=1
function	[function_1] local ||| [function_1] [function_2]	count=1
function	update the state ||| state	count=1
function_arg	the active [arg_2] ||| [function_1] indices [arg_2]	count=1
function	[function_1] jobid ||| [function_1] job [function_2]	count=3
arg	new job request but ||| cmdline jobhash clientinfo	count=1
function	that [function_2] ||| [function_2] [function_1]	count=8
class	of the record ||| record	count=1
function	neighborhood of ||| get input neighborhood	count=1
arg	permanence values for a ||| permanence	count=1
function	final ||| final	count=2
function	an existing job that ||| resume job no retries	count=1
function	float if property ||| float	count=2
arg	largest number ||| c i activestate	count=1
function	from number to ||| number	count=1
module	including 'setup' ||| opf	count=1
function	plot ||| plot	count=1
arg	modelid ||| modelid	count=1
function	file and store ||| read config file	count=2
function	[function_1] dict ||| [function_1] [function_2]	count=1
function	like _getonematchingrownoretries(), but ||| get one matching row	count=1
function	the additional specs ||| get additional specs	count=4
function	a description file ||| description file	count=2
function_arg	of [arg_2] ||| [arg_2] [function_1]	count=1
class	the given model ||| opfdummy model	count=1
class	indices ||| indices trace	count=1
function	[function_1] connected ||| [function_2] [function_1]	count=1
function	[function] the ||| [function]	count=4
class	(from backtracking_tm ||| tmshim mixin	count=1
function	[function_1] and ||| [function_2] check for concurrency [function_1]	count=1
class	must ||| iteration	count=1
function	of the column that ||| column for	count=1
arg	values in dict d ||| d	count=2
arg	from spatialoutput and temporaloutput ||| spatialoutput temporaloutput	count=1
function	within the range ||| range	count=2
function	the experiment [function] the ||| load experiment [function]	count=1
function	an aggregation function returns ||| get	count=1
function	[function_1] for concurrency ||| [function_2] [function_1]	count=1
module	the width of ||| regions	count=1
function_arg	@param [arg_2] ||| [arg_2] [function_1]	count=2
class	the file ||| record stream	count=2
function	loop of the ||| loop	count=1
function	boosted overlap score ||| boosted overlaps	count=1
function	[function_1] returns a ||| [function_2] [function_1]	count=4
arg	protected method ||| extradatadir	count=2
arg	name ||| name	count=1
function	[function_1] a float ||| [function_1] [function_2]	count=4
function	[function] exception's ||| map [function]	count=3
function	knn ||| knn	count=1
function	spread ||| spread	count=1
arg	checkpointdir ||| checkpointdir	count=1
function	segment update the ||| add to segment updates	count=1
function	the same job by ||| job	count=1
function	sort in ||| sort	count=1
arg	each label ||| label	count=1
function	and inference ||| infer	count=1
function	the experiment [function_1] [function_2] ||| experiment [function_1] [function_2]	count=3
arg	[arg] duty ||| [arg]	count=3
class	serializes model using ||| model	count=1
class	put ||| record	count=1
function	the probability that ||| probability	count=1
function	returns [function_2] ||| [function_1] [function_2]	count=10
function	[function_1] file ||| [function_1] [function_2] tail	count=4
class	iterations must be ||| iteration	count=1
module	in ||| algorithms	count=1
module	of ||| algorithms	count=1
arg	the bookmark ||| bookmark	count=2
function	[function_1] of ||| [function_2] reset field [function_1]	count=1
function	the winner cells ||| winner cells	count=2
module	file again) ||| data	count=1
class	of this model ||| gram model	count=1
arg	associated ||| truecatindex partition	count=1
function	model as ||| as	count=1
function	encode a ||| encode	count=1
arg	the output ||| output	count=1
class	the model ||| opfdummy model runner	count=1
function	number of ||| num	count=4
class	returns a randomly generated ||| spatial pooler	count=1
function	fewest number ||| least allocated	count=1
arg	label ||| label	count=1
function_arg	[function_1] f to ||| [arg_2] [function_1]	count=4
function	id and it's errscore ||| in completed	count=2
module	this ||| frameworks opf	count=6
arg	of sequences is used ||| seqlength	count=1
function	the labels ||| label results	count=1
function	a given encoder ||| perm encoder	count=1
function_arg	set the [arg_2] ||| [arg_2] [function_1]	count=4
class	jobs table for a ||| jobs dao	count=1
function_arg	[function_1] [arg_2] ||| [function_1] for checkpointed [arg_2]	count=6
function	add ||| add	count=8
arg	cells passed ||| cls cells	count=2
function	[function_1] models ids ||| [function_2] [function_1]	count=1
function	json value [function_2] ||| [function_1] [function_2]	count=9
class	configuration file with the ||| configuration file wrapper	count=2
function	timestamp of a record ||| record	count=1
module	randomly ||| algorithms	count=1
function	in 'results'), filter ||| filter	count=1
function	permanence is less than ||| trim	count=1
function	columns per inhibition ||| columns per	count=1
function_arg	to segment [arg_2] ||| [arg_2] [function_1]	count=1
class	periodicactivityrequest ||| activity	count=2
function	to category ||| to id	count=1
function	the following encoder ||| encoder	count=1
function	to a json ||| run with json	count=1
function	[function_1] potential ||| [function_2] [function_1]	count=1
function	[function_1] sequence labels ||| [function_1] trace [function_2]	count=1
function	trace ||| trace	count=1
function	return the list of ||| get metric	count=2
function_arg	[function_1] [arg_2] ||| [function_1] maxbuckets [arg_2]	count=16
class	file to disk ||| record stream iface	count=1
arg	the coordinate to a ||| coordinate n	count=1
function	version [function_2] ||| [function_2] dbname for [function_1]	count=2
function	_getonematchingrownoretries(), ||| get one matching	count=1
function	with ||| matching row with	count=1
function	table ||| jobs of	count=1
class	a randomly generated ||| spatial pooler	count=1
function	types for ||| types	count=1
module	generate ||| swarming exp_generator	count=1
function	[function] member ||| [function] member	count=1
function	[function_1] w for ||| [function_1] [function_2]	count=4
function	of [function_2] ||| [function_1] metric sequences [function_2]	count=5
function	for jobs in the ||| active jobs for client	count=2
class	runs it inline for ||| search runner	count=1
class	spec ||| spec	count=1
function	segments for [function_2] ||| [function_2] [function_1]	count=5
arg	truth and a prediction ||| prediction	count=1
class	metric ||| aggregate metric	count=1
function	as percent of ||| pct	count=1
class	including 'setup' callbacks ||| opftask	count=1
class	since the knn classifier ||| classifier	count=1
function_arg	[function_1] consisting of ||| [function_1] [arg_2]	count=3
