arg	if the [arg] is loadable ||| [arg]	count=1
function	removes ||| remove	count=1
function	of the ||| focus	count=1
function	coordinates of ||| coordinates	count=1
function	before [function] to set ||| pre [function]	count=1
class	mouse move ||| mouse move	count=2
function	giving the filename ||| filename	count=1
arg	surface src returns a ||| src	count=1
arg	match ty b is ||| b ty	count=1
arg	fn that ||| fn	count=1
function_arg	compiles [arg_2] ||| [function_1] [arg_2]	count=3
function	[function_1] the state ||| [function_2] [function_1]	count=2
arg	[arg] may ||| [arg]	count=3
function	mouse ||| mouse	count=5
function	function creates a new ||| invoke in new	count=1
arg	of this channel ||| channel	count=1
function	an expression for exec ||| exec	count=1
function	is playable on the ||| playable	count=1
function	[function_1] are unreachable ||| [function_1] [function_2]	count=2
class	log ||| log	count=2
function	the mouse pointer to ||| set mouse pos	count=1
function	[function_1] log ||| [function_2] [function_1]	count=1
function	the [function] ||| jump out of [function]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] filename [arg_2]	count=12
class	to initialize this script ||| script	count=1
class	of this [class] and all ||| [class]	count=1
function_arg	[function_1] [arg_2] slot is ||| [function_1] [arg_2]	count=2
class	of an image ||| image info	count=1
function	object this ||| init	count=1
function	count of [function_2] ||| [function_1] [function_2]	count=3
function	first ||| first	count=2
function	purge [function_2] ||| [function_2] [function_1]	count=1
class	drag to this draggroup ||| drag group	count=1
function	safely [function_2] ||| [function_2] [function_1]	count=1
arg	child displayable ||| child	count=2
function	[function_1] group if ||| [function_1] [function_2]	count=2
function_arg	reports [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	start [arg_2] ||| [arg_2] [function_1]	count=2
function	the mouse position ||| mouse pos	count=1
class	this node ||| node	count=3
function	freeze the store ||| freeze	count=1
arg	focused and grabbed displayables ||| roots	count=1
function_arg	a render [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	parses [arg_2] ||| [function_1] [arg_2]	count=1
function	line does ||| line	count=1
function_arg	[function_1] v ||| [arg_2] [function_1]	count=3
class	before a [class] ||| [class]	count=1
arg	hold_time [arg_2] ||| [arg_1] [arg_2]	count=1
arg	slot (the save ||| regexp	count=1
function	files that exist and ||| files	count=1
function	registers a ||| register	count=2
class	segment that this ||| displayable segment	count=2
arg	ev matches keysym ||| ev keysym	count=2
arg	the system ||| force label	count=1
function	a background screenshot ||| background screenshot	count=2
arg	tag exists on layer, ||| tag width height layer	count=1
function	is either relative to ||| elide	count=1
class	the ||| lexer	count=1
class	with savefiles in them ||| file	count=1
arg	converts polart coordinates ||| angle radius xaround yaround	count=1
arg	filename is ||| filename	count=1
module	the currently-focused ||| display	count=1
function	[function_1] an image ||| [function_1] [function_2]	count=2
arg	language ||| language	count=2
class	rollback ||| rollback log	count=3
function_arg	[function_1] a clause ||| [function_1] [arg_2]	count=1
function	get the attributes associated ||| get attributes	count=1
class	data information ||| rollback	count=1
module	[module] exception ||| [module]	count=3
class	with savefiles ||| file	count=1
module	some ||| core	count=2
function_arg	next node [arg_2] ||| [function_1] [arg_2]	count=1
arg	given filename ||| filename	count=3
function	sleep to the ||| sleep	count=1
arg	a pycode object ||| language python_code	count=1
arg	entries a list of ||| entries	count=1
arg	true if [arg] ||| [arg]	count=3
function_arg	[function_1] a child ||| [arg_2] [function_1]	count=3
module	information ||| core	count=2
arg	to node ||| node	count=1
class	savefiles ||| file location	count=1
function	predictively load images from ||| predict	count=1
arg	is expected ||| l name	count=1
class	may want to rollback ||| rollback	count=1
arg	linenumber from filename, including ||| filename linenumber	count=1
function	default [function_2] ||| [function_1] [function_2]	count=6
function	to parse a ||| parse	count=2
module	to ||| display	count=3
function	an sfont ||| sfont	count=1
class	[class] entry at ||| [class]	count=1
function	pin ||| pin	count=1
class	intended to ||| advcharacter	count=1
module	back ||| core	count=1
function	checkpoint ||| checkpoint	count=1
function	infinite loop detection timer ||| not infinite loop	count=1
function	parse an integer ||| integer	count=1
function	mouse pointer ||| set mouse pos	count=1
class	[class_1] is ||| [class_2] [class_1]	count=1
arg	[arg_1] to value ||| [arg_2] [arg_1]	count=4
function_arg	a bmfont [arg_2] ||| [arg_2] [function_1]	count=3
function	than an event ||| event	count=1
function	[function_1] and last ||| [function_1] [function_2]	count=1
function	ultimate target of those ||| target	count=1
arg	a child displayable ||| time child	count=1
class	causes this channel to ||| channel	count=1
function	of image [function_2] ||| display get available [function_1] [function_2]	count=2
arg	for channel [arg_2] ||| [arg_2] [arg_1]	count=2
arg	reachable ||| reachable	count=2
arg	end ||| end	count=1
arg	the list of tokens ||| tokens	count=1
arg	x and [arg_2] ||| [arg_2] [arg_1]	count=1
class	general user-definable information about ||| node	count=1
module	back only the ||| core	count=1
function_arg	[function_1] color and ||| [arg_2] [function_1]	count=9
arg	if [arg] save ||| [arg]	count=1
function	tags that ||| tags	count=1
function	[function_1] log ||| [function_1] [function_2]	count=1
function_arg	immediately before [arg_2] ||| [arg_2] [function_1]	count=3
function	to add [function_2] ||| [function_2] [function_1]	count=3
arg	cropping [arg] rect, where ||| rect [arg]	count=1
class	that need ||| script	count=1
function_arg	a keyword [arg_2] ||| [function_1] [arg_2]	count=1
class	[class_1] [class_2] ||| display [class_2] [class_1]	count=6
arg	clean copy of this ||| clean	count=1
function_arg	[function_1] language ||| [function_1] [arg_2]	count=4
arg	cols the ||| cols	count=1
class	of all slots ||| location	count=1
arg	a call to target ||| target	count=1
arg	maps the colors ||| src dst	count=1
arg	create ||| parent_contents	count=1
function	block is ||| block	count=1
class	node that should ||| node	count=1
function	md5 ||| md5	count=1
function	a count [function_2] ||| [function_1] [function_2]	count=3
function	loads all [function_2] ||| [function_1] [function_2]	count=1
module	object with ||| core	count=1
function	all of its ||| all	count=1
function	cause deferred rollback ||| do deferred rollback	count=2
function	list [function] have ||| get available [function]	count=1
function	side image ||| get side image	count=2
arg	s to language if ||| s language	count=1
function	line log ||| line log	count=2
class	this [class] to ||| [class]	count=1
function	about the [function] to ||| [function]	count=1
class	matches the ||| lexer	count=1
function_arg	[function_1] delay seconds ||| [arg_2] [function_1]	count=2
function_arg	channel [arg_2] ||| [arg_2] [function_1]	count=1
function	checkpoint which means that ||| checkpoint	count=1
class	display this displayable ||| displayable	count=1
function_arg	[function_1] a label ||| [function_1] replay [arg_2]	count=1
arg	[arg_1] objects ||| [arg_2] [arg_1]	count=5
function	should be [function] node ||| add to [function]	count=1
class	to rollback ||| rollback log	count=1
function	a screenshot of the ||| take screenshot	count=1
class	clipping rectangle and a ||| clipper	count=1
function	to start [function_2] ||| [function_1] [function_2]	count=3
function	a [function] ||| [function] menu	count=1
module	at the ||| core	count=1
class	scene list ||| scene lists	count=2
arg	over a child displayable ||| time child	count=1
module	:doc gesture cancels ||| core	count=1
class	spritemanager to ||| sprite	count=1
arg	generated before [arg] ||| [arg]	count=1
arg	[arg_1] in filename ||| [arg_2] [arg_1]	count=8
arg	at old to new ||| old new	count=1
function	state to ||| state	count=1
function	pointer or ||| pos	count=1
function	suspend ||| suspend	count=1
function	and text rectangle ||| text rect	count=2
arg	filename is ||| target filename	count=1
function_arg	attributes returns [arg_2] ||| [function_1] layer tag name [arg_2]	count=1
class	of all slots with ||| location	count=1
class	them ||| location	count=1
arg	with new when ||| new	count=1
class	image or ||| image	count=1
function	of an image ||| image	count=1
function	all textures [function_2] ||| [function_1] [function_2]	count=5
function	freeze the store and ||| freeze	count=1
function	top of ||| top	count=1
arg	to out as ||| out	count=1
function	ren'py to start predicting ||| start predict	count=1
arg	or false otherwise ||| exact	count=1
function	blocks [function_2] ||| [function_2] dialogue [function_1]	count=5
function_arg	[function_1] id ||| [function_1] [arg_2]	count=3
function	path is open in ||| open	count=1
function	a showif ||| showif	count=1
class	in ||| location	count=2
class	intended ||| advcharacter	count=1
arg	canonical [arg_2] ||| [arg_2] [arg_1]	count=2
arg	roots from the ||| roots wait	count=2
arg	from filename, including any ||| filename	count=1
arg	pygame surface containing a ||| surftree fullscreen_video	count=1
arg	be executed when ||| n	count=1
arg	characters with a font ||| font start end	count=1
function	is ||| is	count=2
function	finds ||| find	count=1
function_arg	call [arg_2] ||| [arg_2] [function_1]	count=1
class	of an image if ||| image	count=1
function	[function_1] draw constructors ||| [function_1] [function_2]	count=4
arg	filename, and divides it ||| filedata linenumber	count=1
function_arg	[function_1] [arg_2] ||| [function_1] out [arg_2]	count=4
function	[function] to ||| reset [function]	count=3
function	keyword is ||| keyword	count=1
class	file ||| dialogue file	count=3
arg	displayable d, and ||| d	count=1
arg	[arg_1] filename ||| [arg_2] [arg_1]	count=8
class	log in preparation for ||| rollback log	count=1
arg	with the positional ||| scope child_or_fixed	count=1
module_class	the file ||| core file	count=1
module	[module] time ||| [module]	count=2
module	returns the ||| core	count=1
arg	filename and [arg_2] ||| [arg_2] [arg_1]	count=5
class	return an ||| node	count=1
function_arg	missing [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] be executed ||| [function_1] [arg_2]	count=2
function	line [function_2] ||| [function_2] [function_1]	count=1
module_class	the displayable ||| display displayable	count=1
module	only the ||| core	count=1
function	hides [function_2] ||| [function_2] [function_1]	count=3
function	or has ||| has	count=1
function	purge [function_2] ||| [function_1] [function_2]	count=1
module	updates the ||| core	count=1
arg	with the [arg_2] ||| [arg_1] [arg_2]	count=2
class	called to ||| displayable	count=1
arg	ty [arg_2] ||| [arg_2] [arg_1]	count=8
function	valid rollback point after ||| rollback	count=1
function	the size [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] with the ||| [arg_2] [function_1]	count=11
function	the image [function_2] ||| [function_1] [function_2] hash	count=1
arg	the given source ||| source	count=1
class	want to rollback ||| rollback log	count=1
function	cache pin ||| cache pin	count=2
class	about ||| node	count=1
function	[function_1] lines ||| [function_1] [function_2]	count=1
function_arg	[function_1] word ||| [arg_2] [function_1]	count=2
arg	this ||| dest	count=1
arg	[arg_1] given details ||| [arg_1] [arg_2]	count=2
function	get the [function] ||| [function]	count=2
class	slots ||| location	count=1
function	[function_1] error occurs ||| [function_2] [function_1]	count=4
function_arg	adds a clause ||| add i	count=2
function	updates [function_2] ||| [function_1] [function_2]	count=3
arg	these parameters returns ||| ignore_errors	count=1
function	reports that the call ||| report	count=1
function	control to leave ||| jump out of	count=1
function	se_call causes [function] return ||| return [function]	count=1
function	memory [function] and the ||| [function]	count=1
arg	data data is a ||| data	count=1
function	to ||| core	count=1
function	number float ||| float	count=1
arg	the glyphs [arg_2] ||| text segment assign times [arg_2] [arg_1]	count=1
function	transient display list ||| transient	count=1
class	mouse [class_2] ||| [class_2] [class_1]	count=4
function_arg	execute this [arg_2] ||| [arg_2] [function_1]	count=1
function	string in the ||| string	count=1
module	of ||| display	count=6
module	number of ||| display	count=1
function_arg	[function_1] canonical ||| [arg_2] [function_1]	count=2
arg	object of type cls ||| cls	count=1
function	[function_1] not ||| [function_1] [function_2]	count=1
function	self-voicing text ||| tts	count=2
function_arg	context and [arg_2] ||| [arg_2] [function_1]	count=4
arg	assigns the displayable d ||| d	count=1
module	that subblock as ||| core	count=1
function	this converts [function] lists into ||| [function]	count=1
module	[module] exception should ||| [module]	count=3
module_class	[module_1] current logical ||| [module_1] [class_2]	count=5
function	rpyc file ||| rpyc	count=2
function	if the line does ||| line	count=1
function	command takes ||| takes	count=1
module_class	[module_1] displayable ||| [module_1] [class_2]	count=10
module	segment text tuples handles ||| text	count=1
arg	of fn ||| fn	count=2
function	[function_1] [function_2] ||| [function_1] [function_2] layer tag	count=4
function	alpha channel of ||| alpha munge	count=1
function	other ||| force	count=1
function_arg	event ev matches ||| map event ev	count=1
function	[function_1] prediction to ||| [function_2] [function_1]	count=4
module	displayable to the ||| display	count=1
module	:doc ||| display	count=2
function_arg	the name ||| core name	count=1
module	subblock as ||| core	count=1
module	data ||| core	count=1
arg	arguments x and ||| x	count=1
arg	channel ||| channel	count=9
module	the event matches the ||| display	count=1
arg	the function ||| function	count=1
function	alpha ||| alpha	count=1
arg	this rolls the ||| greedy	count=1
class	the [class] ||| [class]	count=4
function	parents of every object ||| parents	count=1
arg	with name ||| name	count=4
arg	filename [arg_2] ||| [arg_1] [arg_2]	count=4
module	predict that the ||| display	count=1
function	of the physical window ||| physical	count=2
function	kill all [function_2] ||| [function_1] [function_2]	count=6
module	all slots with savefiles ||| core	count=1
arg	keysym ||| keysym	count=1
arg	speed to be ||| n	count=1
module	of segment text tuples ||| text	count=1
function_arg	[function_1] the canonical ||| [arg_2] [function_1]	count=3
module	uses both [module] ||| [module]	count=1
function	start predicting [function_2] ||| [function_2] [function_1]	count=1
module	:doc drag_drop ||| display	count=1
class	[class] a ||| [class]	count=1
arg	glyphs ||| glyphs	count=2
class	returns the location containing ||| multi location	count=1
arg	to ||| child	count=1
function	only the ||| rollback	count=1
arg	d, ||| d	count=1
module	find ||| display	count=1
arg	image [arg] ||| [arg] height	count=1
class	screen named name, which ||| screen	count=1
arg	[arg_1] this ||| real smoothscale [arg_1] [arg_2]	count=2
arg	layer [arg] ||| [arg]	count=1
class	the random ||| random	count=1
arg	screen on ||| screen	count=1
function	files ||| file	count=1
function	[function_1] surfaces ||| [function_2] [function_1]	count=4
arg	volume of this channel ||| channel	count=1
function_arg	[function_1] of v ||| core correct [function_1] [arg_2]	count=3
class	raises this displayable to ||| drag	count=1
function_arg	[function_1] t ||| [arg_2] [function_1]	count=3
class	this log ||| log	count=1
module	if this [module] is ||| [module]	count=1
function	creates a render ||| render	count=1
function_arg	[function_1] and invokes ||| [function_1] [arg_2]	count=5
function	[function_1] [function_2] the ||| [function_1] [function_2]	count=3
function	the ultimate target ||| target	count=1
function	name ||| init	count=1
function	to finish [function_2] ||| [function_2] [function_1]	count=2
function	the queue [function_2] ||| set [function_1] [function_2]	count=1
class	this ||| rollback	count=1
arg	the value end ||| end	count=1
module	:doc loadsave ||| core	count=3
function	add [function_2] ||| [function_1] [function_2]	count=3
function	of dialogue blocks ||| dialogue blocks	count=2
function	[function_1] current context ||| core [function_1] [function_2]	count=3
function	mode it ||| mode	count=1
module	and then ||| core	count=1
arg	[arg_1] linenumber, ||| [arg_2] [arg_1]	count=3
arg	displayable a ||| loc displayable	count=1
function	future ||| scry	count=1
class	them in arbitrary ||| file location	count=1
function	[function] return from ||| return [function]	count=1
function	the strings ||| strings	count=1
arg	v to ||| v	count=1
arg	[arg_1] tag ||| [arg_2] [arg_1]	count=3
arg	the surface src returns ||| src	count=1
module	it can't be ||| core	count=1
function	this attempts ||| focus	count=1
function_arg	[function_1] ev matches ||| [arg_2] [function_1]	count=2
function	freeze ||| freeze	count=1
module_class	the editor ||| core editor	count=1
arg	to the string s ||| s	count=1
function	state and text ||| text	count=1
function	to add history entries ||| add history	count=1
function	dialogue to ||| dialogue	count=1
class	savefiles in them ||| file location	count=1
arg	s as ren'py ||| s	count=1
function	default ||| default	count=3
function	returns a list of ||| list	count=4
function	[function] with ||| replace [function]	count=2
function	store [function_2] ||| core [function_2] [function_1]	count=1
module	an object ||| core	count=1
class	transform ||| transform	count=1
arg	font ||| font start	count=1
arg	that [arg_2] ||| [arg_2] [arg_1]	count=2
module	execution context or the ||| core	count=1
function	[function_1] current context ||| [function_2] [function_1]	count=3
class	in them ||| file	count=1
class	slots with savefiles in ||| location	count=1
function_arg	[function_1] roots ||| [arg_2] [function_1]	count=3
function	to purge objects that ||| purge	count=1
function	the [function] of ||| context [function]	count=1
class	a drag ||| drag	count=1
class	store and the log ||| rollback log	count=1
arg	the given ||| filename linenumber	count=1
function	a python [function_2] ||| [function_1] [function_2]	count=4
function_arg	[function_1] transform ||| [arg_2] [function_1]	count=1
class	a standard-format savefile ||| save record	count=1
function	for correctness ||| check	count=1
function	[function_1] the transform ||| [function_2] [function_1]	count=1
function	parses an image specifier ||| parse image specifier	count=1
function	tb, returns a list ||| traceback list	count=1
arg	label this creates a ||| label	count=1
module	other this attempts ||| display	count=1
arg	of columns in ||| rows padding transpose	count=1
function	parses a [function_2] ||| [function_2] [function_1]	count=6
arg	a bounding area ||| width	count=1
function	used to pan over ||| pan	count=1
class	a ||| file	count=1
function	[function_1] runtime counter ||| [function_1] [function_2]	count=1
function	lower_map ||| index archives	count=1
function_arg	[function_1] [arg_2] ||| core cycle [function_1] [arg_2]	count=1
arg	position in filename ||| filename position	count=1
arg	roots [arg_2] ||| [arg_1] [arg_2]	count=4
function_arg	[function_1] [arg_2] ||| [function_1] autosave [arg_2]	count=1
function	reports an exception ||| report parse	count=1
function	text [function_2] ||| [function_1] [function_2]	count=2
function	and returns a list ||| list	count=1
function	gets all ||| get all	count=6
function	[function_1] drag ||| [function_2] [function_1]	count=1
function_arg	are unreachable [arg_2] ||| [arg_2] [function_1]	count=5
function	the list of draw ||| get draw	count=1
arg	to the string s ||| s scope translate	count=1
function	rate of ||| rate	count=1
class	then ||| lexer	count=1
function_arg	[function_1] the block ||| translation restructurer [function_1] [arg_2]	count=2
module	with [module] given tag ||| [module]	count=1
class	[class] or ||| [class]	count=1
function	[function_1] block ||| [function_2] [function_1]	count=2
function	other returns an x ||| get	count=1
function	tuples handles rtl ||| rtl	count=1
function	none ||| none	count=1
class	sprite for the ||| sprite	count=1
arg	this is called with ||| height st	count=1
class	standard-format savefile ||| save record	count=1
function	cache pin is deprecated ||| cache pin	count=1
module	[module] can be ||| [module]	count=1
function	rollback returns ||| in rollback	count=1
function	to purge [function_2] ||| [function_2] [function_1]	count=1
function	a tint of ||| tint	count=1
arg	with the given details ||| name size bold italics	count=2
class	all ||| file	count=1
arg	is expected to ||| l name	count=1
arg	other in the rgb ||| other	count=1
function	save ||| copy save	count=1
class	back only ||| rollback	count=1
module_class	:doc [class_2] ||| [module_1] [class_2]	count=12
function_arg	[function_1] [arg_2] contain ||| translation restructurer [function_1] [arg_2]	count=3
arg	b is ||| b	count=1
module_class	the game ||| core rollback	count=1
function	other ||| focus	count=1
module	the data information intact ||| core	count=1
function	size [function_2] ||| [function_2] [function_1]	count=4
function	the ast ||| ast	count=1
module	:doc gesture ||| core	count=1
function_arg	[function_1] s to ||| [arg_2] [function_1]	count=3
function	called before [function] to set ||| pre [function]	count=1
arg	trans before after ||| trans before after	count=1
class	them ||| file	count=1
function	[function_1] a showif ||| [function_2] [function_1]	count=1
function	returns a dictionary giving ||| get	count=1
function	:doc screens returns ||| get	count=1
arg	from the object rollback ||| wait	count=1
arg	update the ||| update	count=1
function	into multiple dictionaries ||| split	count=1
arg	scales [arg] up ||| [arg] size	count=1
function	returns a dictionary ||| get	count=1
class	only ||| rollback	count=1
function	hides ||| hide	count=2
arg	used to report that ||| description	count=1
function_arg	[function_1] for channel ||| [arg_2] [function_1]	count=4
class	[class_1] move ||| [class_1] [class_2]	count=1
module_class	[module_1] current line ||| [module_1] [class_2]	count=1
arg	and r2 ||| r2	count=1
function	[function_1] and last ||| [function_2] [function_1]	count=1
arg	[arg_1] ty b ||| [arg_1] [arg_2]	count=2
function	that transform to ||| transform	count=1
function_arg	interpolates between [arg_2] ||| color [function_1] hls [arg_2]	count=2
module_class	the rollback ||| core rollback log	count=1
function	cache pin is deprecated ||| cache unpin	count=1
function	(name [function] style nchildren=0 ||| register sl [function]	count=1
function	finish [function_2] ||| [function_1] [function_2]	count=2
function	of missing translations ||| missing	count=1
function_arg	[function_1] in s ||| [arg_2] [function_1]	count=5
function	strings ||| get strings	count=1
function_arg	rollback [arg_2] ||| [function_1] [arg_2]	count=4
arg	and a layer ||| layer	count=1
function_arg	string [arg_2] ||| [function_1] [arg_2]	count=6
function_arg	screen named name ||| screen name	count=1
arg	report that a ||| description	count=1
function	registers a bmfont ||| register bmfont	count=3
function	return the physical width ||| physical size	count=1
function	[function_1] bmfont ||| [function_2] [function_1]	count=3
function	then on all children ||| visit all	count=1
arg	called by the system ||| force	count=1
class	[class_1] numbers ||| [class_2] [class_1]	count=4
arg	name the name of ||| name	count=1
class	[class_1] screen ||| [class_2] [class_1]	count=1
arg	object ||| init	count=1
function	textures [function_2] ||| [function_1] [function_2]	count=5
function_arg	[function_1] s ||| [arg_2] [function_1]	count=5
function_arg	an ast [function_1] [arg_2] may only contain ||| [function_1] [arg_2]	count=6
class	sprite ||| sprite	count=3
function	a say statement ||| scry say	count=1
function	to ||| focus	count=1
class	drag_drop ||| drag	count=1
class	this channel to ||| channel	count=1
module	return ||| core	count=1
module	attempts to find the ||| display	count=1
arg	to size [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] variant [arg_2]	count=1
arg	the roots [arg_2] ||| [arg_2] [arg_1]	count=4
arg	this calls the function ||| function src	count=1
arg	r1 [arg_2] ||| [arg_1] [arg_2]	count=1
arg	callback on this ||| callback	count=1
function	blocks the ||| blocks	count=1
function	ordered in ||| ordered	count=1
function	paragraph ||| paragraph	count=1
class	this channel allocating a ||| channel	count=1
module	returns true if the ||| display	count=3
module	arbitrary ||| core	count=1
function_arg	[function_1] ren'py ||| [function_1] string [arg_2]	count=1
class	this draggroup ||| drag group	count=1
module	:doc image_func ||| core	count=1
function	filename and [function_2] ||| [function_2] [function_1]	count=3
function	show ||| show	count=1
arg	report ||| description	count=1
arg	down [arg] uses both ||| src [arg]	count=1
class	screen named name, which ||| screen profile	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=306
function_arg	[function_1] [arg_2] ||| [function_1] slots [arg_2]	count=7
module	this rolls back ||| core	count=1
class	a [class] ||| [class]	count=4
function	creates a new ||| new	count=2
function_arg	[function_1] [arg_2] ||| color [function_1] hsv other [arg_2]	count=5
class	move ||| move	count=1
arg	[arg] exists ||| [arg]	count=1
arg	adds code immediately ||| code	count=1
arg	called to update the ||| update	count=1
function	state to that ||| state	count=1
arg	down [arg] uses ||| src [arg]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] state [arg_2]	count=10
arg	y ||| y duration	count=1
function	copy the clean ||| clean	count=1
function	[function] logical line ||| [function] logical	count=3
arg	linenumber, or ||| linenumber	count=1
arg	linenumber ||| linenumber	count=3
arg	if the [arg] can ||| [arg]	count=1
function	a rpyc file ||| rpyc data	count=1
function	image_func returns ||| get	count=1
function_arg	[function_1] named name ||| [function_1] [arg_2]	count=3
function	[function_1] [function_2] ||| [function_1] [function_2]	count=1075
arg	filename exists ||| filename	count=1
class	them in ||| file location	count=1
module	performs the ||| display	count=1
function_arg	before filename and ||| before code filename	count=1
function_arg	new context [arg_2] ||| [function_1] [arg_2]	count=3
function	specifier ||| specifier	count=1
function_arg	color [function_1] [arg_2] ||| color [function_1] hsv [arg_2]	count=4
function	[function_1] and ||| [function_2] [function_1]	count=4
class	[class_1] else ||| [class_1] [class_2]	count=1
arg	[arg] utf-8 ||| [arg]	count=2
module	to return an object ||| core	count=1
module	and merges ||| core	count=1
function	[function_1] prediction ||| [function_2] [function_1]	count=4
function	for image ||| image	count=1
module	list of segment text ||| text	count=1
arg	position in filename is ||| filename position	count=1
function	textures [function_2] ||| [function_2] [function_1]	count=5
module	all slots ||| core	count=1
function_arg	[function_1] for channel ||| [function_1] [arg_2]	count=2
module_class	[module_1] rollback ||| [module_1] [class_2]	count=8
function	pygame event ||| event	count=1
function	a number float ||| float	count=1
function	image_func returns a list [function_1] [function_2] have been defined ||| [function_1] [function_2]	count=1
module_class	in the [class_2] ||| [module_1] [class_2]	count=8
arg	roots from the object ||| roots wait	count=1
function	with the newest mtime ||| newest	count=1
function	this rolls ||| rollback	count=1
module	:doc loadsave returns ||| core	count=1
function	[function] to ||| solid [function]	count=3
arg	[arg_1] to these ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] channel ||| [function_1] filename [arg_2]	count=2
arg	user ||| full	count=1
arg	value end ||| end	count=1
arg	y ||| y	count=1
function	slots ||| slots	count=1
function	is called to purge ||| purge	count=1
module	:undocumented toggles ||| core	count=1
function	next [function_2] ||| [function_2] [function_1]	count=3
function	restart returning the user ||| restart	count=1
function	the dynamic stack ||| dynamic	count=1
function	first [function_2] ||| [function_2] [function_1]	count=7
class	savefiles in ||| location	count=1
function	[function_1] ui ||| [function_2] [function_1]	count=2
function_arg	[function_1] of the ||| [arg_2] [function_1]	count=3
arg	statement ending at position ||| position	count=1
arg	old node with ||| old	count=1
function	gesture from being recognized ||| cancel gesture	count=1
function	cache [function_2] ||| [function_2] [function_1]	count=4
function	as the side image ||| get side image	count=1
function	is open ||| open	count=1
function	size [function_2] ||| core [function_2] [function_1]	count=2
function	image_func returns a list [function_1] [function_2] have been defined ||| display get available [function_1] [function_2]	count=1
arg	from [arg] returns ||| [arg]	count=1
module_class	block the lexer ||| core lexer	count=1
arg	old to new ||| old new	count=6
arg	function ||| function	count=1
function	to be loaded ||| load	count=1
function_arg	traceback list [arg_2] ||| [function_1] out [arg_2]	count=1
module	:doc ||| core	count=59
module	drag_drop method ||| display	count=1
function	context ||| context	count=2
function	this creates a render ||| render	count=1
function_arg	playable on [arg_2] ||| [function_1] filename [arg_2]	count=2
function	sets the ||| set	count=6
arg	[arg_1] these ||| [arg_2] [arg_1]	count=1
function	the side [function_2] ||| [function_1] [function_2]	count=1
class	window ||| interface	count=1
function	say ||| scry say	count=1
arg	r1 and [arg_2] ||| [arg_1] [arg_2]	count=1
arg	move speed to be ||| n	count=1
arg	roots from ||| roots wait	count=2
function_arg	execute [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] transform that ||| [arg_2] [function_1]	count=1
arg	rolls the system ||| force label greedy	count=1
arg	if the label is ||| label	count=1
function	this creates a render ||| zoom render	count=1
function	given ||| scene lists	count=1
arg	child ||| endpos time child	count=1
function	constructors to ||| constructors	count=1
arg	up or down [arg_1] [arg_2] uses both ||| [arg_1] [arg_2]	count=2
function	given bar_value, a :class [function_1] [function_2] ||| core [function_1] [function_2] bar_value	count=1
arg	the system ||| translate force	count=1
module_class	[module_1] editor this ||| [module_1] [class_2]	count=4
function_arg	call to [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	node that [arg_2] ||| [function_1] [arg_2]	count=2
function	sets the transform ||| set transform	count=3
function	widget id ||| id	count=1
function_arg	[function_1] of v ||| [arg_2] [function_1]	count=3
function	encodes a string ||| string	count=1
function	updates ||| update	count=2
function	the mouse [function_2] ||| [function_2] [function_1]	count=2
class	prefix of an image ||| image	count=1
class	image will be ||| image	count=1
function	deprecated music [function_2] ||| [function_1] [function_2]	count=1
function_arg	render [arg_2] ||| [arg_2] [function_1]	count=1
class	advcharacter to ||| advcharacter	count=1
arg	[arg_1] linenumber, or ||| [arg_1] [arg_2]	count=3
function	parses a [function_2] ||| [function_1] [function_2]	count=6
function	tries to [function] returns ||| [function]	count=2
function_arg	[function_1] statement ||| [function_1] [arg_2]	count=1
arg	duration can be a ||| x y duration	count=1
arg	by the ||| s	count=1
function	predicting the ||| predict	count=1
function	of the ||| get	count=1
function	a python [function_2] ||| [function_2] [function_1]	count=4
arg	the logfile without ||| append developer flush	count=1
function	[function_1] state to ||| [function_1] [function_2]	count=2
function	version ||| version	count=1
arg	is called with ||| height st	count=1
arg	of reachable [arg_2] ||| [arg_2] [arg_1]	count=2
function	strings command ||| strings	count=1
function	makes a shallow copy ||| copy	count=1
function_arg	interface string [arg_2] ||| [arg_2] [function_1]	count=6
function	next node that ||| next node	count=2
function_arg	keyword is [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] roots ||| [function_1] [arg_2]	count=3
class	ast statements ||| parser	count=1
arg	the label is not ||| label	count=1
function	analyzes all screens ||| analyze screens	count=2
function	the coordinates ||| focus coordinates	count=1
arg	cols the number of ||| cols	count=1
function	plausible ||| exists imprecise	count=2
arg	displayable ||| loc displayable	count=1
function	[function_1] blocks ||| [function_1] [function_2]	count=4
class	raises this ||| drag	count=1
arg	[arg_1] r2 ||| [arg_1] [arg_2]	count=1
function	[function_1] attributes associated ||| [function_2] [function_1]	count=1
arg	to the glyphs gt ||| gt glyphs	count=1
function	the image prediction ||| prediction	count=1
function	with attributes returns the ||| attributes	count=1
function	[function_1] or menu ||| [function_2] [function_1]	count=1
arg	system to ||| force	count=1
function	show as the side ||| side	count=1
function	persistent ||| save persistent	count=1
function	dotted name which ||| dotted name	count=1
function	adjusts ||| adjust	count=2
function	gets all [function_2] ||| [function_1] screen [function_2]	count=3
class	them in arbitrary order ||| location	count=1
function	the [function] ||| [function]	count=3
function	with attributes returns the ||| apply attributes	count=1
function	ordered in a ||| ordered	count=1
function	history entries ||| history	count=1
arg	merges [arg] which must ||| [arg]	count=1
function	get a variant ||| variant	count=1
function	sets self constant ||| constant	count=1
arg	[arg_1] [arg_2] inform the match ||| [arg_2] [arg_1]	count=6
function	the size ||| size	count=2
class	called to return an ||| node	count=1
function	updates the state to ||| update state	count=1
arg	callback with ||| callback	count=1
class	:doc sprites method causes ||| manager	count=1
function	rollback to occur ||| rollback	count=1
function	creates a new context ||| in new context	count=1
arg	of linenumber from filename, ||| filename linenumber	count=1
function	valid [function] the ||| has [function]	count=1
function	this rolls back ||| rollback	count=1
module	raises this displayable to ||| display	count=1
arg	start and ||| start	count=1
arg	returns true if name ||| name	count=2
module	displayable ||| display	count=1
arg	and other in the ||| other fraction	count=3
function	strings ||| strings	count=4
arg	[arg] used to ||| v [arg]	count=3
function	screenshot ||| take screenshot	count=1
arg	this scales [arg] up or ||| [arg] size	count=1
function_arg	keyword is [arg_2] ||| [arg_2] [function_1]	count=1
function	takes the translates out ||| translates	count=1
arg	these parameters ||| ignore_errors	count=1
function_arg	an sfont [arg_2] ||| [arg_2] [function_1]	count=3
class	this rollback ||| rollback	count=1
function	[function_1] [function_2] this ||| [function_1] [function_2]	count=6
arg	a child displayable ||| child	count=2
arg	the screen on ||| screen	count=1
class	this [class_1] [class_2] ||| [class_1] [class_2]	count=2
function	matches [function] up ||| [function]	count=1
function	in the line ||| line	count=1
function	method creates a tint ||| tint	count=1
function_arg	[function_1] new location ||| [arg_2] [function_1]	count=1
function	the queue ||| queue	count=1
function	to restart returning the ||| restart	count=1
function	kill all textures and ||| kill textures and	count=1
class	this is intended to ||| advcharacter	count=1
function	displayables reachable from ||| displayables	count=1
function	screen [function_2] ||| [function_2] [function_1]	count=1
class	object with ||| node	count=1
arg	has occured [arg_2] ||| [arg_2] [arg_1]	count=8
function_arg	[function_1] cols the ||| [function_1] [arg_2]	count=1
arg	at position [arg_2] ||| [arg_2] [arg_1]	count=4
function	translate that wraps block ||| translate	count=1
function	that are unreachable ||| unreachable	count=1
function	[function_1] and surfaces ||| [function_2] [function_1]	count=3
function	image_func returns [function_2] ||| [function_1] [function_2]	count=3
function	coordinates ||| focus coordinates	count=1
class	dialogue ||| dialogue	count=1
function	comma-separated list of simple_expressions ||| simple expression	count=1
arg	this is expected to ||| loc l parent	count=1
function	cause deferred [function_2] ||| [function_1] [function_2]	count=3
function	top ||| top	count=1
function_arg	[function_1] child displayable ||| [arg_2] [function_1]	count=2
function	is either relative ||| elide	count=1
function	blocks [function_2] ||| [function_2] [function_1]	count=5
class	to display this displayable ||| displayable	count=1
function_arg	the screenshot [arg_2] ||| [function_1] [arg_2]	count=1
arg	scope ||| scope	count=1
function	[function_1] dialogue ||| [function_2] [function_1]	count=1
arg	[arg] that the ||| [arg]	count=1
function	[function_1] string ||| [function_2] [function_1]	count=4
module	information intact ||| core	count=1
function	[function_1] line number ||| [function_2] [function_1]	count=5
class	of all ||| file	count=1
class	and the log ||| log	count=1
class	object with some general ||| node	count=1
arg	the screen ||| screen	count=1
arg	position in filename is ||| target filename position	count=1
function	layer [function_2] ||| [function_2] [function_1]	count=2
function	get a variant screen ||| get screen variant	count=1
arg	t seconds ||| t	count=1
arg	this is called with ||| height st at	count=1
function	a tint ||| tint	count=1
class	[class_1] this draggroup ||| [class_2] [class_1]	count=2
arg	strings and comments returns ||| min_priority max_priority common_only	count=1
arg	package ||| package	count=1
module	the end of config ||| display	count=1
arg	[arg_1] [arg_2] uses both ||| [arg_1] [arg_2]	count=2
function	returns the [function] ||| context [function]	count=1
module	the pygame ||| display	count=1
arg	a bounding ||| width	count=1
function_arg	list l ||| list out l	count=1
function	physical location ||| location	count=1
function	count of missing translations ||| count missing	count=1
function	to start predicting the ||| start predict	count=1
arg	name ||| name mixer loop stop_on_mute	count=1
arg	linenumber, or the none ||| linenumber	count=1
function_arg	keyword [arg_2] ||| [function_1] [arg_2]	count=1
function	tint of ||| tint	count=1
function_arg	persistent [arg_2] ||| [arg_2] [function_1]	count=3
function	the number of dialogue ||| dialogue	count=1
function	the text [function_2] ||| [function_1] [function_2]	count=1
function	ren'py to ||| statement	count=1
function	ren'py to stop predicting ||| stop predict	count=1
arg	generated before [arg] have elapsed ||| [arg]	count=1
function	string ||| string	count=4
function	text of the line ||| text	count=1
module_class	the mouse move ||| display mouse move	count=1
arg	the layer [arg] ||| [arg]	count=1
function	causes ren'py to restart ||| full restart	count=1
arg	expected ||| l name	count=1
arg	with a font ||| font start end	count=1
function_arg	returns the [arg_2] ||| [arg_2] [function_1]	count=4
function	at init ||| init	count=1
function	all of ||| all	count=1
function	the size [function_2] ||| core [function_2] [function_1]	count=2
function	:args (name [function] style nchildren=0 ||| register sl [function]	count=1
arg	package to ||| package	count=1
function	restart returning ||| full restart	count=1
function	a list [function] have been ||| get available [function]	count=1
class	the [class] to ||| [class]	count=1
function	a variant screen ||| screen variant	count=1
arg	save ||| regexp	count=1
arg	into [arg] ||| [arg]	count=2
function	translates out ||| take translates	count=1
function	default drag [function_2] ||| [function_1] [function_2]	count=4
function	execute and any ||| execute	count=1
function	displayables ||| displayables	count=1
function	[function] of ||| set [function]	count=2
module	all slots with ||| core	count=1
function	merge strings command ||| merge strings	count=2
arg	substitutes a scope into ||| scope prefix	count=1
arg	to figure out ||| width height st at	count=1
module	rollback lists inside the ||| core	count=1
function	other this attempts ||| focus	count=1
function	a new [function_2] ||| [function_1] [function_2]	count=3
function	is empty ||| empty	count=1
function_arg	[function_1] d ||| [arg_2] [function_1]	count=1
class	then some ||| lexer	count=1
function_arg	[function_1] with ||| [arg_2] [function_1]	count=11
function	[function_1] md5 ||| [function_1] rpyc [function_2]	count=1
module	[module] this ||| [module]	count=1
arg	to report that a ||| description	count=1
function_arg	[function_1] [arg_2] ||| [function_1] variants [arg_2]	count=3
function_arg	[function_1] slotname, ||| [arg_2] [function_1]	count=2
function	this registers ||| register	count=3
function	this ||| focus	count=1
class	of all slots ||| file	count=1
class	the ||| node	count=1
function	the side [function_2] ||| [function_2] [function_1]	count=1
function_arg	python code ||| python code	count=1
class	returns a ||| file location	count=1
arg	[arg_1] with ||| [arg_2] [arg_1]	count=4
function_arg	[function_1] data structure ||| [function_1] locations [arg_2]	count=3
arg	returns true if node ||| node	count=1
function	[function_1] [function_2] ||| core [function_1] [function_2]	count=9
module_class	[module_1] height ||| [module_1] [class_2]	count=2
class	savefiles in them in ||| file location	count=1
class	rollback is ||| rollback	count=1
function_arg	[function_1] [arg_2] ||| core correct [function_1] [arg_2]	count=36
function	information intact ||| rollback	count=1
function	init/loads the bytecode cache ||| init bytecode	count=1
arg	calls the callback on ||| callback	count=1
function	reports that ||| report	count=1
function	creates a tint ||| tint	count=1
function	a [function] ||| [function]	count=3
function	[function_1] string at ||| [function_1] [function_2]	count=4
function	for ||| count newly	count=1
arg	transform that is ||| transform	count=1
function	to [function] the ||| [function]	count=3
arg	cols the [arg_2] ||| [arg_1] [arg_2]	count=1
function	name with attributes returns ||| apply attributes	count=1
arg	the text ||| text	count=1
arg	given details ||| size bold italics	count=2
module	taking [module] alpha channel ||| [module]	count=1
function	get the [function_2] ||| [function_1] [function_2] layer tag	count=2
function	cache [function_2] ||| [function_1] [function_2]	count=4
module	the given ||| display	count=1
arg	[arg_1] r2 ||| [arg_2] [arg_1]	count=1
arg	in filename is ||| target filename	count=1
arg	filename exists as ||| filename	count=1
class	[class_1] that ||| [class_2] [class_1]	count=2
function	compiles the ||| compile	count=1
arg	this rolls ||| greedy	count=1
function	sets self constant to ||| constant	count=1
function	start predicting ||| start predict	count=2
function	the attributes associated ||| attributes	count=1
function_arg	text [arg_2] ||| [arg_2] [function_1]	count=4
function	rollback returns true ||| in rollback	count=1
arg	beginning [arg] ||| [arg]	count=1
function	is [function_2] ||| [function_1] [function_2]	count=3
arg	name is a ||| name	count=1
arg	by the given ||| s	count=1
function	gesture [function_2] ||| [function_2] [function_1]	count=2
arg	filename ||| target filename	count=1
function	a bmfont ||| bmfont	count=1
function	predicting ||| predict	count=1
module	true if the pygame ||| display	count=1
module	to the end of ||| display	count=1
function	the coordinates of ||| focus coordinates	count=1
arg	linenumber, or the ||| linenumber	count=1
function	advances ||| advance	count=1
function	a list ||| traceback list	count=1
class	segment that this spacesegment ||| space segment	count=1
function	to restart ||| full restart	count=1
function	entries from _history_list ||| pop history	count=1
arg	:args (filename extra_info='') ||| slotname extra_info mutate_flag	count=1
function	disp_imagelike ||| live	count=1
function	color [function] ||| [function]	count=6
function	texture memory [function] and ||| [function]	count=1
function_arg	[function_1] channel to ||| [arg_2] [function_1]	count=2
arg	the old [arg_2] ||| next [arg_1] [arg_2]	count=2
arg	the canonical [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	full text [arg_2] ||| [function_1] filename [arg_2]	count=1
arg	value ||| value	count=2
module	:doc other this causes ||| core	count=1
function	coming up soon ||| for skipping	count=1
arg	a transform that ||| transform	count=1
class	to this parser ||| parser	count=1
arg	the end rectange ||| end_identity after_child	count=1
function	a variant [function_2] ||| [function_2] [function_1]	count=2
module_class	block the [class_2] ||| [module_1] [class_2]	count=2
arg	x and y ||| x y	count=1
function	first valid rollback ||| rollback	count=1
arg	filename exists as a ||| filename	count=1
function	keywords ||| keywords	count=1
function	new context ||| in new context	count=1
arg	node with new ||| new	count=1
function_arg	missing translations [arg_2] ||| [function_1] [arg_2]	count=1
module	other this ||| display	count=1
function	reports ||| report	count=3
function_arg	at [arg_2] ||| [function_1] [arg_2]	count=1
arg	of fn that ||| fn	count=1
arg	the name of ||| name	count=1
function	[function_1] variants ||| [function_2] [function_1]	count=2
arg	package to import binary ||| package	count=1
function	by the [function] system ||| profile [function]	count=1
function	given [function] with ||| displayable [function]	count=1
function	gets a [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] at_list ||| [function_1] [arg_2]	count=1
module_class	the rollback entries ||| core rollback log	count=1
function	drag ||| drag	count=1
function_arg	the named label ||| call label	count=1
module	quits the ||| display	count=1
class	current text [class] up ||| text [class]	count=1
function	returns [function_2] ||| [function_1] [function_2]	count=3
module	:doc image_func copies images ||| core	count=1
arg	ts ||| ts d renders	count=1
arg	this maps the colors ||| src dst	count=1
class	that causes this channel ||| channel	count=1
arg	[arg] with ||| [arg]	count=6
arg	game directory ||| common	count=1
arg	of v [arg_2] ||| [arg_1] [arg_2]	count=2
function	:doc image_func returns [function_1] [function_2] ||| [function_1] [function_2]	count=1
function	purges ||| purge unreachable	count=1
class	node it ||| node	count=1
function	as the persistent ||| save persistent	count=1
function	for the ||| count newly	count=1
function	[function_1] constant for ||| [function_2] [function_1]	count=1
function_arg	[function_1] the layer ||| [arg_2] [function_1]	count=2
function	this creates a new ||| new	count=1
function_arg	[function_1] t seconds ||| [function_1] [arg_2]	count=1
function	loads ||| load	count=6
function_arg	[function_1] old ||| [function_1] [arg_2]	count=2
arg	of v to ||| v	count=1
function	is used to pan ||| pan	count=1
arg	screen on ||| screen id	count=1
arg	invokes the given python ||| callable	count=1
module	called when the ||| display	count=1
function	full text ||| full text	count=2
function	[function_1] and surfaces ||| [function_1] [function_2]	count=3
class	[class_1] move ||| [class_2] [class_1]	count=1
function	no such displayable exists ||| displayable by name	count=1
function	to set the size ||| size	count=1
module	:doc file ||| core	count=1
function	of a say ||| say	count=1
function_arg	[function_1] slotname, or ||| [arg_2] [function_1]	count=2
function	currently-focused ||| focus	count=1
module_class	a list ||| core file location	count=1
arg	with name is part ||| name	count=1
function	this updates [function_2] ||| [function_2] [function_1]	count=3
function	not [function_2] ||| [function_1] [function_2]	count=1
function	replaces ||| replace	count=3
function	writes [function_2] ||| [function_2] [function_1]	count=6
arg	linenumber [arg_2] ||| [arg_2] [arg_1]	count=10
function_arg	[function_1] [arg_2] ||| [function_1] line [arg_2]	count=2
module	statements and stores them ||| translation	count=1
function	:doc image_func returns a [function_1] [function_2] ||| [function_1] [function_2]	count=1
class	that is ||| info	count=1
class	all slots with ||| location	count=1
class	these names are quite ||| lists	count=1
function	[function_1] variants of ||| [function_1] screen [function_2]	count=2
module_class	[module_1] mouse ||| [module_1] [class_2]	count=2
function	[function_1] no ||| [function_1] [function_2]	count=4
function	is the periodic call ||| periodic	count=1
function	constant for ||| constant	count=1
class	this channel ||| channel	count=3
function	the json information for ||| json	count=1
module	statements and stores ||| translation	count=1
class	a clipping rectangle and ||| clipper	count=1
function	leave ||| jump out of	count=1
function	user invoking a quit ||| quit	count=1
module	with savefiles ||| core	count=1
function	a list [function_2] ||| [function_2] [function_1]	count=3
function	pointer or the ||| pos	count=1
arg	:doc other causes ren'py ||| delay music with_none hard	count=1
module	about ||| core	count=1
function_arg	rename [arg_2] ||| [arg_2] [function_1]	count=3
function	a count of ||| count	count=1
arg	system back to the ||| force	count=1
function	statement for image ||| image	count=1
class	of its ||| drag	count=1
arg	old [arg_2] ||| next [arg_1] [arg_2]	count=2
function	interpolates between ||| interpolate	count=3
function	line does not exist ||| line	count=1
arg	given the surface src ||| src	count=1
function_arg	[function_1] [arg_2] ||| [function_1] utf8 traceback list [arg_2]	count=1
function	calls ||| call	count=1
arg	[arg_1] from filename ||| [arg_2] [arg_1]	count=2
function_arg	the persistent [arg_2] ||| [arg_2] [function_1]	count=3
function	:doc image_func returns [function_1] [function_2] have been defined ||| [function_1] [function_2]	count=1
function	playing movie ||| movie	count=1
arg	slot of ||| slot	count=1
module	this rolls ||| core	count=1
function	screen is ||| screen	count=1
function	to freeze the store ||| freeze	count=1
arg	pycode object ||| language python_code	count=1
function	save ||| save	count=2
arg	x [arg_2] ||| [arg_2] [arg_1]	count=1
arg	channel [arg_2] ||| [arg_2] [arg_1]	count=2
arg	given ||| filename linenumber	count=1
arg	arguments x and y ||| x y duration	count=1
function	playable on ||| playable	count=1
function	image ||| image	count=4
function	refresh rate of the ||| refresh rate	count=1
class	user-definable information about ||| node	count=1
module	the type of node ||| sl2	count=1
module_class	the [class_2] ||| [module_1] [class_2] eol	count=2
function	properties [function_2] ||| [function_2] [function_1]	count=2
arg	a child ||| endpos time child	count=1
function	writes ||| write file	count=1
function	[function_1] none ||| [function_1] [function_2]	count=5
function	pause ||| pause	count=2
function	screenshot of the ||| screenshot	count=1
function	state to that at ||| state	count=1
function	locations ||| locations	count=1
function	and ||| and call	count=1
function	to restart ||| restart	count=1
function	[function_1] not none ||| [function_2] [function_1]	count=1
function	audio this registers ||| register	count=1
function	[function_1] group ||| [function_2] [function_1]	count=2
function	full [function_2] ||| [function_2] [function_1]	count=2
class	sprite for ||| sprite	count=1
function	sets the name ||| set mixer	count=1
function	the dialogue to ||| dialogue	count=1
function	encodes a string in ||| string	count=1
class	and then ||| lexer	count=1
module	type of node ||| sl2	count=1
function	image_func returns a list [function_1] [function_2] ||| [function_1] [function_2]	count=1
function	finish any pending work ||| finish pending	count=1
function_arg	[function_1] the channel ||| [function_1] filename [arg_2]	count=2
arg	of the image ||| image	count=1
function_arg	[function_1] with filename ||| [arg_2] [function_1]	count=1
arg	named name ||| name mixer loop	count=1
module	end of config minimum_presplash_time ||| display	count=1
function	blocks the [function_2] ||| [function_2] dialogue [function_1]	count=5
module	slots with ||| core	count=1
function_arg	text of linenumber ||| text filename linenumber	count=2
arg	[arg] 4-tuple ||| [arg]	count=1
module	[module] this stops ||| [module]	count=1
function	returns the [function] of ||| context [function]	count=1
function	displayable on ||| displayable	count=1
arg	of package to ||| package	count=1
function_arg	render that [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] rollback ||| [function_1] [function_2]	count=3
function	text tags ||| text tags	count=2
function_arg	[function_1] [arg_2] ||| color [function_1] [arg_2]	count=15
class	rollback through this checkpoint ||| rollback	count=1
module	of its drag_group ||| display	count=1
function	[function] of ||| get image [function]	count=1
function	of shift+r ||| utter restart	count=1
function	is added to a ||| show	count=1
function	numbers in [function_2] ||| [function_2] [function_1]	count=2
class	of ||| location	count=1
arg	the [arg] can ||| [arg]	count=1
function	tags ordered in a ||| ordered	count=1
class	these names are ||| lists	count=1
function	a screenshot of ||| take screenshot	count=1
function	transform to the new ||| transform	count=1
class	this context ||| music context	count=1
arg	[arg_1] linenumber, ||| [arg_1] [arg_2]	count=3
function	quits the ||| quit	count=1
function	loadsave ||| save	count=1
module	node ||| sl2	count=4
function	image is a plausible ||| exists imprecise	count=1
arg	profiling for ||| predict show update	count=1
function	this registers a bmfont ||| register bmfont	count=1
arg	should be executed when ||| n	count=1
module	from [module] edge distance ||| [module]	count=1
function	predicting [function_2] ||| [function_1] [function_2]	count=1
class	returns ||| scene lists	count=2
arg	name [arg_2] ||| [arg_1] [arg_2]	count=1
function	a new ||| new	count=2
function	widget has the focus ||| focus	count=1
class	current logical ||| lexer	count=1
arg	data structure ||| char_offset line_offset	count=1
function	[function_1] or ||| [function_2] [function_1]	count=1
function	[function_1] tags that ||| [function_2] [function_1]	count=3
function	this registers a new ||| register	count=1
function	to unfreeze ||| unfreeze	count=1
arg	to parse [arg] ||| [arg]	count=3
function	interface string ||| translate string	count=1
module_class	[module_1] seconds ||| [module_1] [class_2]	count=6
function	to the top ||| top	count=1
arg	from slot ||| slot	count=1
arg	with name, ||| name	count=1
function	[function] up to ||| [function]	count=1
function	[function_1] cartesian coordinates ||| [function_2] [function_1]	count=1
module	if the ||| display	count=3
function_arg	screen named _screen_name ||| screen _screen_name	count=1
class	screenshot ||| file location	count=1
function	simple draw ||| draw	count=1
arg	columns in this widget ||| rows padding transpose	count=1
function_arg	[function_1] channel ||| [function_1] [arg_2]	count=2
module	returns a ||| core	count=1
function	properties ||| properties	count=1
function	of files ||| files	count=1
arg	[arg_1] after ||| [arg_2] [arg_1]	count=2
class	of its drag_group ||| drag	count=1
function	sets the [function_2] ||| [function_1] [function_2]	count=3
function	and last ||| and last	count=2
function	draw routine which ||| draw	count=1
function	movie ||| movie	count=1
function	replace ||| replace	count=1
function	returns a list of ||| traceback list	count=1
arg	roots [arg_2] ||| [arg_2] [arg_1]	count=4
class	of an image ||| shown image	count=2
function	code ||| code	count=1
function	is missing a from ||| missing	count=1
function	[function] logical ||| [function] logical	count=3
class	[class] with ||| [class]	count=1
class	of this log object ||| log	count=1
function	a python string ||| python string	count=2
function_arg	screen [arg_2] ||| [function_1] layer [arg_2]	count=3
function	list of files ||| list files	count=1
function	[function_1] no arguments ||| [function_1] [function_2]	count=4
function	bytecode cache ||| init bytecode	count=1
function	slot ||| slot	count=1
module	user-definable information about the ||| core	count=1
function	top of its drag_group ||| top	count=1
function	that a choice ||| choice	count=1
function	[function_1] [function_2] ||| [function_1] rpyc [function_2]	count=7
function	slow ||| call slow	count=1
arg	new-style ||| tokens	count=1
arg	child the child that ||| child style	count=1
function	a screenshot of the ||| screenshot	count=1
function	log ||| log	count=2
class	return an object ||| node	count=1
function	is constant for ||| is constant	count=2
function	tb, returns a list ||| list	count=1
function	ultimate target ||| target	count=1
function	a list of ||| translate list	count=1
function	image name with attributes ||| apply attributes	count=1
class	[class] to the ||| [class]	count=3
function_arg	[function_1] r1 and ||| [arg_2] [function_1]	count=1
function	[function_1] [function_2] ||| [function_2] dialogue [function_1]	count=10
function	textures ||| textures	count=1
function	[function_1] text of ||| [function_2] [function_1]	count=1
function	render ||| zoom render	count=1
function_arg	[function_1] fn ||| [arg_2] [function_1]	count=1
arg	[arg_1] and linenumber, ||| [arg_2] [arg_1]	count=4
module	screen at the ||| display	count=1
function	function creates a new ||| in new	count=1
arg	object for [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	saves [arg_2] ||| core cycle [function_1] [arg_2]	count=1
function	list ||| list	count=5
class	matches ||| lexer	count=1
module	and merges it ||| core	count=1
function	barvalue, [function] the ||| [function]	count=1
function	takes the translates out ||| take translates	count=1
function	[function] in any ||| [function] dialogue	count=2
function	audio this registers a ||| register	count=1
function	missing ||| missing	count=2
function	[function_1] of simple_expressions ||| [function_2] [function_1]	count=1
arg	displayable a ||| displayable	count=1
function	returns a list of ||| get	count=1
function	[function_1] all textures ||| [function_2] [function_1]	count=1
function	replaces this ||| replace	count=1
function_arg	named label ||| call label	count=1
class	drag_drop method ||| drag	count=1
function_arg	music start [arg_2] ||| [function_1] [arg_2]	count=2
class	of an image that ||| shown image	count=1
function	[function_1] the md5 ||| [function_2] [function_1]	count=1
module	on [module] given ||| [module]	count=1
function	match a python ||| python	count=1
function	dialogue blocks [function] in ||| [function] dialogue	count=1
function_arg	context and invokes ||| context callable	count=2
class	seconds or ||| interface	count=1
function_arg	given index ||| scene lists index	count=1
function	[function_1] history entries ||| [function_1] [function_2]	count=2
function	ui specifies a ||| at	count=1
function_arg	playable on [arg_2] ||| [arg_2] [function_1]	count=2
function	dialogue [function_2] ||| [function_2] [function_1]	count=2
function	line [function_2] ||| [function_1] [function_2]	count=1
function	string in ||| string	count=1
function_arg	[function_1] old to ||| [function_1] [arg_2]	count=2
arg	[arg_1] objects and ||| [arg_1] [arg_2]	count=5
arg	given name on layer ||| name layer	count=1
function	attributes returns the ||| apply attributes	count=1
arg	calls the function ||| function src	count=1
function	dialogue [function] ||| dialogue [function]	count=3
function_arg	[function_1] for channel ||| [function_1] value [arg_2]	count=2
function	takes a screenshot ||| take screenshot	count=1
function_arg	safely rename old ||| safe rename old	count=1
function	of simple_expressions ||| simple expression	count=1
class	defines a ||| screen lang	count=1
function	is either relative ||| elide filename	count=1
class	slots with savefiles ||| file	count=1
function_arg	translates out [arg_2] ||| [function_1] [arg_2]	count=4
class	its drag_group ||| drag	count=1
function	the traceback [function_2] ||| [function_2] [function_1]	count=1
arg	be executed when a ||| n	count=1
arg	child displayable which ||| endpos time child	count=1
arg	the image ||| image	count=1
function	applies a transition to ||| transition	count=1
class	savefiles in them ||| file	count=1
class	of this [class] ||| [class]	count=1
arg	given state ||| state	count=1
function	ren'py module ||| module	count=1
arg	filename ||| filename	count=8
module	matches the ||| display	count=1
function	use by ren'py ||| diff	count=1
function	report than an event ||| event	count=1
function	[function_1] predicting ||| [function_2] [function_1]	count=4
function	of ||| focus	count=1
function_arg	[function_1] child ||| [arg_2] [function_1]	count=2
arg	a transform then move ||| old_thing new_thing	count=1
function	definitely not-constant ||| not constant	count=1
function	[function] of the ||| [function]	count=1
function_arg	type of [arg_2] ||| [arg_2] [function_1]	count=7
arg	if the label ||| label	count=1
function	[function_1] screen ||| [function_2] [function_1]	count=16
arg	of the ||| nodes	count=1
class	user-definable information about the ||| node	count=1
arg	name of [arg_2] ||| [arg_1] [arg_2]	count=2
function	:doc screens returns ||| get screen	count=1
function	this updates the state ||| update state	count=1
function	a render that ||| render	count=1
arg	:doc screens the programmatic ||| _screen_name	count=1
function	ren'py to restart returning ||| full restart	count=1
arg	returns the canonical ||| wanted	count=1
arg	[arg_1] a child ||| [arg_1] [arg_2]	count=3
arg	bounding ||| width	count=1
arg	a label ||| label	count=1
arg	called by subclasses of ||| kind who what	count=1
function	[function_1] not none ||| [function_1] [function_2]	count=1
function	of ||| group	count=1
function	a block of ren'py ||| block	count=1
function	takes a screenshot of ||| screenshot	count=1
arg	a clause ||| i	count=1
function	about the future ||| scry	count=1
class	[class_1] else ||| [class_2] [class_1]	count=1
function_arg	[function_1] fn relative ||| [arg_2] [function_1]	count=1
function	for the ||| newly	count=1
function	[function] to ||| [function]	count=2
arg	be ||| n	count=1
arg	a layer ||| layer	count=2
function	return ||| return	count=2
function	first valid rollback point ||| rollback	count=1
function	returns the displayable ||| get	count=2
function_arg	text of [arg_2] ||| [arg_2] [function_1]	count=8
module	rolls ||| core	count=1
function_arg	[function_1] [arg_2] ||| [function_1] displayable by tag [arg_2] tag	count=3
function	that a command takes ||| takes	count=1
function_arg	screen [arg_2] ||| [function_1] variant [arg_2]	count=1
function_arg	path [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	a call [arg_2] ||| [function_1] [arg_2]	count=1
function	data as the persistent ||| save persistent	count=1
arg	the [arg] is ||| [arg]	count=1
arg	with the [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] ordered ||| [function_2] [function_1]	count=4
function	all textures ||| textures	count=1
arg	label this ||| label	count=1
function	start predicting [function_2] ||| [function_1] [function_2]	count=1
class	the random [class_2] ||| [class_2] [class_1]	count=2
class	this node it ||| node	count=1
function_arg	[function_1] [arg_2] utf-8 ||| [function_1] utf8 traceback list [arg_2]	count=1
class	the image ||| image info	count=1
module_class	when the [class_2] ||| [module_1] [class_2]	count=4
class	new segment ||| segment	count=1
module_class	of the image ||| display image	count=1
arg	named _screen_name ||| _screen_name	count=1
function	location of the mouse ||| mouse	count=1
module	this [module] is a ||| [module]	count=1
arg	the user ||| full	count=1
function	textures and surfaces ||| textures and surfaces	count=3
function_arg	[function_1] data data ||| [function_1] [arg_2]	count=4
class	called ||| displayable	count=1
arg	called with the positional ||| scope child_or_fixed	count=1
class	a ||| location	count=1
function	[function_1] transform event ||| [function_2] [function_1]	count=1
function_arg	attributes [arg_2] ||| [function_1] layer tag [arg_2]	count=1
function	of prediction ||| prediction	count=1
class	to [class_1] [class_2] ||| [class_1] [class_2]	count=3
arg	data structure ||| filename linenumber char_offset line_offset	count=1
module	audio if the ||| audio	count=1
arg	t ||| t	count=2
function	profiles object [function_2] ||| [function_2] [function_1]	count=1
arg	in s ||| s	count=1
arg	to report ||| description	count=1
class	the log in preparation ||| rollback log	count=1
function	[function_1] level ||| [function_2] [function_1]	count=1
class	this layout ||| layout	count=1
function	next [function_2] ||| [function_1] [function_2]	count=3
class	displayable this ||| displayable	count=1
function	sleep ||| sleep	count=1
arg	surfaces the various ||| rmap gmap	count=1
arg	maps the colors between ||| src dst	count=1
class	screen ||| screen profile	count=2
class	[class] entry ||| [class]	count=1
arg	controller at index ||| index	count=1
function	attempts to set ||| set	count=1
function	that show the screenshot ||| screenshot	count=1
function	of dialogue [function_2] ||| [function_2] [function_1]	count=2
class	given ||| scene lists	count=1
function	a texture filled ||| texture	count=1
function_arg	type of [arg_2] ||| core correct [function_1] [arg_2]	count=7
class	a sprite ||| sprite	count=1
class	of all slots with ||| file location	count=1
arg	set of reachable ||| reachable	count=1
arg	if ||| context	count=1
arg	callback ||| callback	count=1
function	this gets [function_2] ||| [function_2] [function_1]	count=2
function	[function] and the ||| [function]	count=1
function	say statement ||| say	count=1
function	an image specifier ||| image specifier	count=2
function_arg	[function_1] filename and ||| [arg_2] [function_1]	count=2
function	if the line ||| line	count=1
function	takes ||| takes	count=1
function	[function_1] [function_2] the ||| [function_1] [function_2] layer index prefix	count=3
module	its drag_group ||| display	count=1
module	config ||| display	count=1
function	the line must ||| line	count=1
arg	maps ||| src dst	count=1
module	of all slots with ||| core	count=1
arg	a font ||| font start	count=1
function_arg	with attributes [arg_2] ||| [arg_2] [function_1]	count=2
arg	s ||| s	count=5
function	[function_1] and ||| [function_1] [function_2]	count=4
module	:doc loadsave copies the ||| core	count=1
function_arg	[function_1] with ||| [function_1] [arg_2]	count=11
function	first argument [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] a screen ||| [function_2] [function_1]	count=1
arg	slotname, or none ||| slotname	count=1
function	a call to ||| call	count=1
arg	base ||| base copy	count=1
class	that this spacesegment ||| displayable	count=1
arg	to these parameters returns ||| ignore_errors	count=1
class	the log ||| rollback log	count=1
function	a background ||| background	count=1
function	to cause deferred ||| do deferred	count=1
function	refresh [function_2] ||| [function_1] [function_2]	count=4
function_arg	the save [arg_2] ||| [function_1] [arg_2]	count=1
arg	child the child ||| child	count=1
function	a render ||| zoom render	count=1
arg	linenumber from filename the ||| filename linenumber	count=1
class	screen named name, ||| screen profile	count=1
function	allocating a number if ||| number	count=1
function	are unreachable ||| unreachable	count=1
arg	to new ||| new	count=2
arg	old to [arg_2] ||| [arg_1] [arg_2]	count=2
function	locations in the ||| locations	count=1
function	music [function_2] ||| [function_1] [function_2]	count=1
function_arg	color [function_1] [arg_2] ||| color [function_1] other [arg_2]	count=2
arg	is a word ||| word	count=1
function	this takes a screenshot ||| take screenshot	count=1
arg	of the old node ||| old	count=1
arg	from the screen on ||| screen	count=1
arg	other ||| other	count=1
arg	to indicate that this ||| default	count=1
arg	logfile without ||| append developer flush	count=1
function	to the top of ||| top	count=1
function	[function_1] surfaces that ||| [function_1] [function_2]	count=4
function	the mouse ||| mouse	count=2
arg	at_list ||| at_list	count=1
arg	[arg_1] [arg_2] ||| [arg_1] name [arg_2]	count=1
function	user has seen for ||| count newly seen	count=1
arg	the callback ||| callback	count=1
function	image prediction ||| prediction	count=1
arg	[arg_1] new ||| [arg_1] [arg_2]	count=2
function	an image [function_2] ||| [function_1] [function_2]	count=1
arg	to pan over a ||| startpos endpos time	count=1
class	drag ||| drag	count=2
class	to [class] ||| [class]	count=3
arg	by cropping [arg] rect, ||| rect [arg]	count=1
module_class	:doc color method ||| core color	count=6
function	drawn ||| drawn	count=1
function	the image files ||| image file	count=1
arg	string s ||| s scope	count=1
module	:doc [module] this sets ||| [module]	count=1
function	this parses ||| parse	count=4
function	the mouse pointer ||| set mouse pos	count=1
function	other [function] ||| [function] renderer	count=3
function	filename and line number ||| filename line	count=1
class	channel ||| channel	count=3
function	ren'py to restart returning ||| restart	count=1
arg	given ||| tag	count=1
function	[function_1] all ||| [function_2] [function_1]	count=5
class	returns ||| location	count=1
arg	duration can be ||| x y duration	count=1
function	the queue [function_2] ||| [function_2] [function_1]	count=1
arg	state if ||| state	count=1
function	to pan ||| pan	count=1
function	information ||| rollback	count=1
module	the __path__ of ||| core	count=1
function_arg	ren'py module [arg_2] ||| [arg_2] [function_1]	count=1
function	surfaces that are loaded ||| surfaces	count=1
function_arg	[function_1] [arg_2] with ||| [function_1] displayable by name [arg_2] name	count=3
function	game ||| game	count=1
class	defines a screen ||| screen lang screen	count=3
module	in ||| core	count=2
module	a python ast and ||| sl2	count=1
arg	[arg_1] with new ||| next [arg_1] [arg_2]	count=4
function_arg	[function_1] with name ||| [function_1] variants [arg_2]	count=3
module	:doc screens causes ||| core	count=1
function_arg	[function_1] to label ||| [function_1] [arg_2]	count=4
module	:doc label this ||| core	count=1
function_arg	new context [arg_2] ||| [arg_2] [function_1]	count=3
function	or [function_2] ||| [function_2] [function_1]	count=1
function	that is not ||| not	count=1
function_arg	[function_1] the roots ||| [function_1] [arg_2]	count=5
module_class	the game state ||| core rollback	count=1
function_arg	interpolates between [arg_2] ||| color [function_1] [arg_2]	count=3
arg	child displayable which is ||| child	count=1
function_arg	before [arg_2] ||| [function_1] code [arg_2]	count=3
function	the image [function_2] ||| [function_2] [function_1]	count=1
arg	this calls the function ||| function src dst	count=1
class	numbers ||| det	count=1
function_arg	[function_1] and ||| color [function_1] hls other [arg_2]	count=1
class	intended to be called ||| advcharacter	count=1
arg	expected to ||| loc l parent	count=1
arg	node_type ||| name node_type	count=1
arg	line with filename and ||| filename	count=1
arg	the displayable d ||| d	count=1
function_arg	[function_1] a word ||| [function_1] [arg_2]	count=3
function	[function_1] screenshot ||| [function_2] [function_1]	count=2
function	back only the ||| rollback	count=1
function	games ||| games	count=1
function	pan ||| pan	count=1
class	object with some ||| node	count=1
class	image ||| map cache	count=1
function	command this updates ||| command	count=1
function	sets the transform event ||| set transform	count=1
function	safely rename ||| safe rename	count=2
function	to [function] ||| [function]	count=4
module_class	[module_1] segment ||| [module_1] displayable [class_2]	count=1
function	[function_1] constructors ||| [function_1] [function_2]	count=5
function_arg	apply [arg_2] ||| [arg_2] [function_1]	count=1
function	specified values ||| reset	count=1
module	[module] initial state ||| [module]	count=3
module	attempts to find ||| display	count=1
arg	in ||| offset	count=1
function	or ||| or	count=1
function_arg	pause flag [arg_2] ||| [arg_2] [function_1]	count=4
function	store [function_2] ||| [function_2] [function_1]	count=1
function	[function] return ||| return [function]	count=1
function	[function_1] a bmfont ||| [function_2] [function_1]	count=4
function	missing translations for ||| missing	count=1
function	[function_1] bmfont ||| [function_1] [function_2]	count=3
arg	filename and linenumber, or ||| filename linenumber	count=1
function	[function_1] md5 to ||| [function_2] [function_1]	count=1
function	image that can ||| image	count=1
arg	if the given channel ||| channel	count=1
function	predicting the screen ||| predict screen	count=3
function	[function_1] [function_2] ||| utf8 [function_1] [function_2]	count=3
arg	indicate that this widget ||| default	count=1
function_arg	[function_1] cols ||| [function_1] [arg_2]	count=1
function_arg	[function_1] of linenumber ||| [arg_2] [function_1]	count=2
function	the dialogue to the ||| dialogue	count=1
function	the code ||| code	count=1
function	placement ||| placement	count=1
function	periodic call ||| periodic	count=1
arg	slotname, so it can ||| slotname	count=1
function	hue ||| rotate hue	count=1
function_arg	bmfont [arg_2] ||| [arg_2] [function_1]	count=3
function	transition to a ||| transition	count=1
module	the ||| display	count=43
module	of segment text ||| text	count=1
arg	[arg] rect, where ||| rect [arg]	count=1
module	them ||| core	count=1
function	a number ||| number	count=1
function	restart ||| restart	count=1
function_arg	[function_1] linenumber ||| [arg_2] [function_1]	count=3
module	general user-definable information ||| core	count=1
function	the ||| rollback	count=2
class	image operation is ||| image base	count=1
function	python string at the ||| python string	count=1
class	displayable to cause image ||| displayable	count=1
arg	the positional and ||| scope child_or_fixed	count=1
function	line numbers in ||| linenumbers	count=1
module	to ||| core	count=1
function_arg	loads [arg_2] ||| [function_1] string [arg_2]	count=1
function	toggles the fullscreen mode ||| toggle fullscreen	count=1
class	raises this displayable ||| drag	count=1
module	of the currently-focused ||| display	count=1
module_class	the [class_2] ||| [module_1] [class_2] get	count=3
arg	s as ||| s filename	count=1
function	rolls ||| rollback	count=1
function_arg	[function_1] v ||| core correct [function_1] [arg_2]	count=3
arg	filename exists as a ||| filename test	count=1
class	displayable is part ||| displayable	count=1
function	this parses [function_2] ||| [function_1] [function_2]	count=5
class	image or else ||| image reference	count=3
arg	given filename is ||| filename	count=1
arg	has occured ev ||| ev x y st	count=1
function_arg	the type [arg_2] ||| [arg_2] [function_1]	count=7
class	displayable ||| drag	count=1
function	draw constructors to ||| draw constructors	count=2
function	[function_1] dialogue to ||| [function_1] [function_2]	count=1
function	registers [function_2] ||| [function_1] [function_2]	count=2
arg	from the ||| wait	count=1
function	refresh ||| refresh	count=1
function	whitespace ||| whitespace	count=1
function	default statement ||| default statement	count=2
class	savefiles in them ||| location	count=1
module	:doc audio ||| audio	count=3
function	for ||| newly	count=1
arg	version of fn that ||| fn	count=1
function	sets the ||| set mixer	count=1
module	in them ||| core	count=1
function	persistent ||| persistent	count=1
function_arg	save [arg_2] ||| [function_1] [arg_2]	count=1
function	start of [function_2] ||| [function_1] [function_2]	count=4
module_class	the current ||| core lexer	count=2
function	history entries to ||| history	count=1
arg	size [arg_2] ||| [arg_2] [arg_1]	count=1
module	or the ||| core	count=1
class	defines ||| screen lang	count=1
arg	node_type the ||| name node_type	count=1
arg	x ||| x	count=1
function_arg	[function_1] [arg_2] in the screen ||| [function_1] [arg_2]	count=5
function	[function] have been ||| get available image [function]	count=1
function	layer ||| layer	count=1
function_arg	variant screen [arg_2] ||| [function_1] [arg_2]	count=1
arg	this rolls ||| label greedy	count=1
function	exists or false otherwise ||| defined	count=1
function	[function] have ||| get available [function]	count=1
module	the queue ||| display	count=1
function_arg	pan over [arg_2] ||| [function_1] [arg_2]	count=3
arg	[arg] uses both ||| src [arg]	count=1
module	to [module] ||| [module]	count=1
module	an object with some ||| core	count=1
function	string at the ||| string	count=1
function	parses [function_2] ||| [function_1] [function_2]	count=6
arg	instances [arg_1] [arg_2] ||| next [arg_1] [arg_2]	count=5
class	a screen ||| screen	count=1
arg	for the displayable d, ||| d	count=1
module_class	the given ||| display scene lists	count=1
arg	[arg_1] tag and ||| [arg_2] [arg_1]	count=3
arg	[arg] the ||| id_ [arg]	count=3
function	creates a new context ||| invoke in new context	count=1
class	displayable if it doesn't ||| displayable	count=1
function	or restart to finish ||| finish	count=1
arg	of reachable [arg_2] ||| [arg_1] [arg_2]	count=2
class	of all ||| file location	count=1
class	some general user-definable ||| node	count=1
function	rollback point after ||| rollback	count=1
arg	node with new when ||| new	count=1
function	dotted name which is ||| dotted name	count=1
function	locations in the line ||| line locations	count=1
arg	with [arg_2] ||| [arg_1] [arg_2]	count=2
arg	tag and ||| tag	count=1
function	find the ||| focus	count=1
function	displayables that ||| displayables	count=1
class	of this context ||| music context	count=1
arg	and a layer or ||| layer	count=1
function	screenshot to be ||| screenshot	count=1
function	all screens ||| screens	count=1
arg	name of [arg_2] ||| [arg_2] [arg_1]	count=2
module	lists inside the ||| core	count=1
arg	the old node with ||| old	count=1
arg	columns in this ||| rows padding transpose	count=1
function	added to a scene ||| show	count=1
function	a keyword is ||| keyword	count=1
function	the start ||| start	count=1
function_arg	pause flag [arg_2] ||| [function_1] value [arg_2]	count=2
function	[function] statement ||| [function]	count=1
arg	a child ||| child	count=2
function_arg	[function_1] code ||| [arg_2] [function_1]	count=4
function_arg	channel [arg_2] ||| [function_1] [arg_2]	count=1
function	find the coordinates of ||| coordinates	count=1
arg	of reachable objects ||| reachable wait	count=2
class	cache code to cause ||| base	count=1
function	[function_1] rate ||| [function_2] [function_1]	count=1
module	the end ||| display	count=1
function_arg	[function_1] id ||| [function_1] properties [arg_2] screen layer	count=1
arg	renpy_version if tuple ||| tuple	count=1
arg	initializes this ||| loc	count=1
class	of ||| file location	count=1
arg	linenumber from ||| linenumber	count=1
function_arg	[function_1] context ||| [function_1] [arg_2]	count=1
arg	trans [arg_2] ||| [arg_1] [arg_2]	count=2
arg	[arg_1] and r2 ||| [arg_2] [arg_1]	count=1
arg	to the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
function	a rpyc file ||| rpyc	count=2
function	multiplies ||| multiply	count=1
function_arg	[function_1] with name ||| [function_1] [arg_2]	count=5
function	tags ||| tags	count=3
arg	the game directory ||| common	count=1
module	raises ||| display	count=1
module_class	[module_1] lexer ||| [module_1] [class_2]	count=8
arg	code corresponding to node ||| node	count=1
function	state and text rectangle ||| text rect	count=1
function	plausible image that can ||| image exists imprecise	count=1
function	[function] node ||| add to [function]	count=1
function	either relative to the ||| elide filename	count=1
function_arg	[function_1] on layer ||| [function_1] [arg_2]	count=1
arg	[arg_1] ev ||| [arg_2] [arg_1]	count=2
function	refresh [function_2] ||| [function_2] [function_1]	count=4
function	dynamic ||| dynamic	count=1
arg	of the given state ||| state	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2]	count=158
arg	v to [arg_2] ||| [arg_1] [arg_2]	count=3
function	to cartesian coordinates ||| to cartesian	count=1
function	returns a list ||| traceback list	count=1
function	prediction ||| prediction	count=2
function	[function_1] tags ordered ||| [function_2] [function_1]	count=6
class	node to ||| node	count=1
function	and text ||| text	count=1
module	a number of ||| display	count=1
function	creates a new ||| create	count=1
arg	to unicode [arg] ||| [arg]	count=1
function_arg	persistent data data ||| save persistent data	count=1
arg	to [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
class	displayable to cause ||| displayable	count=1
module_class	[module_1] current line ||| [module_1] [class_2] eol	count=1
function_arg	[function_1] as t ||| [arg_2] [function_1]	count=4
arg	system to ||| translate force	count=1
function	mixers in use ||| mixers	count=1
function	from the same point ||| take execution	count=1
function	a render ||| render	count=1
function	[function_1] dialogue ||| [function_1] [function_2]	count=1
class	image [class_2] ||| [class_2] [class_1]	count=3
function	the coordinates of the ||| focus coordinates	count=1
class	list ||| file location	count=1
arg	[arg] used ||| v [arg]	count=3
arg	filename the ||| filename	count=2
function_arg	[function_1] invokes the ||| [function_1] [arg_2]	count=5
function	apply ||| apply	count=1
function	ordered ||| ordered	count=1
function_arg	[function_1] s as ||| [function_1] [arg_2]	count=1
function	that transform to the ||| transform	count=1
function	the gesture [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] the transform ||| [function_1] [function_2]	count=1
function	the dialogue ||| dialogue	count=1
function	scan the directories for ||| scan	count=1
arg	by the system ||| force	count=1
arg	forces a background ||| take_screenshot	count=1
arg	update ||| update	count=2
arg	store packages ||| packages	count=1
module	that the ||| display	count=1
function	shift+r ||| utter restart	count=1
arg	s to language ||| s language	count=3
arg	label this creates ||| label	count=1
arg	this maps ||| src dst	count=1
function	the translates out ||| translates	count=1
function	nesting [function_2] ||| [function_2] [function_1]	count=1
arg	return the [arg] ||| [arg]	count=3
arg	[arg_1] these ||| [arg_1] [arg_2]	count=1
module	about the ||| core	count=1
function	to find ||| focus	count=1
arg	delay seconds ||| delay	count=2
function_arg	[function_1] object for ||| [function_1] name [arg_2]	count=3
class	to return an object ||| node	count=1
module_class	[module_1] screen ||| [module_1] [class_2]	count=2
class	in them in ||| file	count=1
module	and then some ||| core	count=1
function_arg	[function_1] r1 ||| [arg_2] [function_1]	count=1
class	called ||| node	count=1
function	this parses [function_2] ||| [function_2] [function_1]	count=5
function	the clean ||| clean	count=1
arg	and linenumber, or ||| linenumber	count=1
function_arg	[function_1] [arg_2] ||| [function_1] volume volume delay [arg_2]	count=6
function	to [function_1] [function_2] ||| [function_1] [function_2]	count=8
function	[function_1] an sfont ||| [function_2] [function_1]	count=4
module	:doc other tells ren'py ||| core	count=1
function_arg	an [function_1] [arg_2] may only contain ||| translation restructurer [function_1] [arg_2]	count=3
function_arg	[function_1] has occured ||| [arg_2] [function_1]	count=3
function	hue ||| hue	count=1
function	rename ||| rename	count=1
function	[function] name returns ||| [function] name	count=3
function_arg	[function_1] of ||| [function_1] [arg_2]	count=3
function	alpha channel of ||| alpha	count=1
function	and [function_2] ||| [function_1] [function_2]	count=8
function	numbers ||| linenumbers	count=1
arg	and black ||| black	count=1
arg	maps the ||| src dst	count=1
function	gets ||| get	count=6
function	any pending work that ||| pending	count=1
arg	the glyphs [arg_2] ||| [arg_2] [arg_1]	count=1
function	is missing ||| missing	count=1
arg	[arg] have ||| [arg]	count=1
function	the ||| core	count=1
function_arg	[function_1] named _screen_name ||| [arg_2] [function_1]	count=7
function_arg	[function_1] the layer ||| [function_1] displayable by name [arg_2] name	count=1
function	that a call ||| call	count=1
function	[function_1] no ||| [function_2] [function_1]	count=4
function	all textures [function_2] ||| [function_2] [function_1]	count=5
module	other ||| display	count=1
module	toggles the ||| core	count=1
arg	if [arg] ||| [arg]	count=3
arg	various ||| rmap gmap	count=1
function	find ||| focus	count=1
arg	and linenumber, or the ||| linenumber	count=1
function	this ||| rollback	count=1
module	:doc other returns ||| core	count=2
function	[function_1] but before ||| [function_2] [function_1]	count=2
module	time [module] ||| [module]	count=1
function	the line does ||| line	count=1
function_arg	[function_1] the channel ||| [arg_2] [function_1]	count=2
arg	a new location ||| location	count=1
function	[function] with a ||| replace [function]	count=2
arg	[arg] proportional from ||| [arg]	count=3
function_arg	traceback list [arg_2] ||| [arg_2] [function_1]	count=1
function	start ||| start	count=3
function_arg	pan [arg_2] ||| [function_1] [arg_2]	count=2
function	command this ||| command	count=1
arg	specified number of checkpoints ||| checkpoints	count=1
function	to parse label ||| label	count=1
arg	to match ty b ||| b ty	count=1
function	[function_1] missing ||| [function_1] [function_2]	count=2
arg	kwargs to ||| kwargs	count=1
arg	has the value end ||| end	count=1
class	of advcharacter ||| advcharacter	count=1
function	[function_1] for the ||| [function_2] [function_1]	count=14
function_arg	tags [arg_2] ||| [arg_2] [function_1]	count=1
function	kills [function] ||| kill [function]	count=2
function	layout of ||| layout	count=1
function	from ||| pop	count=1
arg	system ||| force	count=2
arg	count ||| count	count=1
function	constant for the purpose ||| constant	count=1
function	other this attempts to ||| focus	count=1
function	[function_1] pin ||| [function_2] [function_1]	count=1
class	of an image if ||| image info	count=1
arg	this attempts ||| prefix_tag image_tag not_showing layer	count=1
arg	attempts ||| prefix_tag image_tag not_showing layer	count=1
function	block of python ||| python	count=1
function	a number if ||| number	count=1
arg	with filename and ||| filename	count=1
function	debug returns a ||| get	count=1
arg	ev is the raw ||| ev	count=1
function	to [function_2] ||| [function_1] [function_2]	count=2
function	tint of this ||| tint	count=1
function	overlap ||| overlap	count=1
function	count ||| count	count=1
module	method ||| display	count=1
function	[function_1] image ||| [function_2] [function_1]	count=12
function	to restart returning the ||| full restart	count=1
function	coordinates ||| coordinates	count=1
module	the focus ||| display	count=1
class	all ||| location	count=1
function_arg	the named [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	to d ||| child d	count=1
arg	calls the function ||| function	count=1
module_class	number of seconds ||| display interface	count=1
module	in the block the ||| core	count=1
function	dialogue blocks [function] ||| [function] dialogue	count=1
function_arg	[function_1] location ||| [arg_2] [function_1]	count=1
function	predicting the [function_2] ||| [function_2] [function_1]	count=1
arg	s as ||| s	count=1
arg	given by arguments x ||| x	count=1
arg	screens from the screen ||| screen id	count=1
function	locations in [function_2] ||| [function_2] [function_1]	count=2
class	some general ||| node	count=1
arg	child displayable which is ||| time child	count=1
function	texture filled ||| texture	count=1
function	to add ||| add	count=1
function	writes ||| write	count=6
function	list [function_2] ||| [function_1] [function_2]	count=3
arg	to indicate ||| default	count=1
function	of the dynamic stack ||| dynamic	count=1
arg	of linenumber [arg_2] ||| [arg_2] [arg_1]	count=6
arg	new when it is ||| new	count=1
module	the screen at the ||| display	count=1
arg	this channel as a ||| channel	count=1
function_arg	@param [arg_2] ||| [arg_2] [function_1]	count=12
function	the [function_1] [function_2] ||| [function_1] [function_2]	count=1
module	the data information ||| core	count=1
module	to the ||| display	count=2
module_class	the compiled ||| core atltransform base	count=1
function	to be redrawn in ||| redraw	count=2
arg	before [arg_2] ||| [arg_1] [arg_2]	count=1
function	no [function_2] ||| [function_2] [function_1]	count=1
function	background [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] all variants ||| [function_2] [function_1]	count=1
function	first argument that is ||| first	count=1
arg	[arg_1] [arg_2] used to inform the ||| [arg_2] [arg_1]	count=6
function	returns the ultimate target ||| target	count=1
arg	updating context ||| context	count=2
function	returns the set of ||| get	count=1
arg	[arg_1] child ||| [arg_1] [arg_2]	count=2
arg	quite a bit ||| layer thing key zorder	count=1
function	indicate that a call ||| call	count=1
function	run at init ||| init	count=1
function	parents ||| parents	count=1
function	creates a new ||| invoke in new	count=1
arg	if node ||| node	count=1
arg	the context info objects ||| wait	count=1
arg	renpy and store packages ||| packages	count=1
arg	the given filename is ||| filename	count=1
class	[class] this ||| image [class]	count=3
class	this displayable this ||| displayable	count=1
function	presence ||| game menu	count=1
function	that is either relative ||| elide	count=1
class	this [class] ||| [class]	count=13
class	of python ast statements ||| parser	count=2
arg	calls callback with the ||| callback	count=1
function	writes the ||| write	count=2
function	sets the volume of ||| set	count=1
arg	called by subclasses ||| kind who what	count=1
function	cython ||| cython	count=1
function	displayable ||| displayable by tag	count=1
function	sets the [function_2] ||| [function_2] [function_1]	count=3
arg	called by the system ||| translate force	count=1
function_arg	[function_1] [arg_2] ||| [function_1] next [arg_2]	count=2
function	and surfaces that are ||| and surfaces	count=1
arg	kwargs ||| kwargs	count=1
arg	the channel ||| channel	count=2
function	[function_1] are unreachable ||| [function_2] [function_1]	count=2
function	the side image ||| side image	count=1
function	into a [function] ||| [function]	count=1
function_arg	sets the [arg_2] ||| [function_1] volume volume delay [arg_2]	count=1
function	[function] data should ||| write [function]	count=2
class	called to ||| node	count=1
function	image that ||| image	count=1
function	[function_1] text ||| [function_2] [function_1]	count=1
function_arg	before [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] node ||| [function_2] [function_1]	count=1
function_arg	[function_1] updating context ||| [function_1] [arg_2]	count=1
function	add [function_2] ||| [function_2] [function_1]	count=3
module	of the ||| core	count=1
function	the translates out ||| take translates	count=1
class	sprite ||| sprite manager	count=2
function_arg	full text [arg_2] ||| [arg_2] [function_1]	count=4
function	the md5 to ||| md5	count=1
function	to freeze the ||| freeze	count=1
arg	reverts the named ||| name	count=1
function	edge ||| edge	count=1
function	say or ||| say	count=1
function_arg	path to [arg_2] ||| [arg_2] [function_1]	count=3
function	list of [function_2] ||| [function_2] [function_1]	count=8
function_arg	[function_1] index ||| [arg_2] [function_1]	count=1
module	:doc other :args ||| core	count=1
arg	calls the callback ||| callback	count=1
function	is not [function_2] ||| [function_2] [function_1]	count=1
function	:doc image_fonts this registers ||| register	count=2
arg	of type cls ||| cls	count=1
function_arg	given [arg_2] ||| [arg_2] [function_1]	count=1
class	called to return ||| node	count=1
class	the image ||| shown image info	count=1
arg	with new ||| new	count=1
class	editor ||| editor	count=1
arg	assigns times [arg] ||| [arg]	count=1
module	:doc file lists ||| core	count=1
module	of the screen not ||| display	count=1
module	that need analysis ||| core	count=1
function	of missing ||| missing	count=1
function	:doc ||| focus	count=1
function	of the dynamic ||| dynamic	count=1
function	[function_1] rename ||| [function_2] [function_1]	count=1
function	this parses a ||| parse	count=3
function	get [function_2] ||| [function_1] [function_2] layer tag	count=2
arg	true if name is ||| name	count=2
arg	[arg_1] match ty ||| [arg_1] b [arg_2]	count=2
arg	rolls the state of ||| force checkpoints defer greedy	count=1
function	drag group ||| drag group	count=2
class	image will be loaded ||| image	count=1
module_class	of [module_1] [class_2] ||| [module_1] [class_2]	count=3
arg	the block ||| block	count=1
function	queue is empty ||| set queue empty	count=1
function	:doc image_func returns [function_1] [function_2] ||| display [function_1] [function_2]	count=1
function	rollback returns ||| rollback	count=1
function	event ||| map event	count=1
function	framerate ||| framerate	count=1
class	current logical line ||| lexer	count=1
function	attributes associated the ||| attributes	count=1
module	that ||| core	count=1
function	returns a [function_2] ||| [function_1] [function_2]	count=6
function_arg	screen with name ||| screen variants name	count=1
function	in the the ast ||| ast	count=1
arg	slot in ||| slot	count=1
arg	before after ||| before after new_widget	count=2
function	the filename [function_2] ||| [function_2] [function_1]	count=2
function	the state to ||| state	count=1
arg	system back to ||| force label	count=1
function	[function] name ||| [function] name	count=3
function	layer that the screen ||| screen layer	count=1
function	clean stores ||| make clean stores	count=1
function	for the first ||| newly	count=1
function	line does not ||| line	count=1
class	this channel allocating ||| channel	count=1
function	restart to finish ||| finish	count=1
arg	channel this ||| channel	count=1
arg	v [arg_2] ||| [arg_2] [arg_1]	count=3
function	corrects the type of ||| type	count=1
function	number if that ||| number	count=1
arg	attempts to figure out ||| width height st at	count=1
function	safely ||| safe	count=1
function	the dialogue [function] ||| dialogue [function]	count=3
function_arg	[function_1] rolls ||| [arg_2] [function_1]	count=1
arg	and [arg_2] ||| [arg_2] [arg_1]	count=16
arg	given channel ||| channel	count=1
arg	from the screen ||| screen	count=1
function	the line ||| line	count=4
arg	generated before [arg] have ||| [arg]	count=1
arg	system ||| force label	count=1
arg	part of the ||| layer	count=1
function	at the start ||| start	count=1
function_arg	[function_1] filename and ||| [function_1] code [arg_2]	count=2
arg	callback with the ||| callback	count=1
function	python string at ||| python string	count=2
function	@param ||| init	count=7
function	layer that [function_2] ||| [function_2] [function_1]	count=2
arg	an image [arg] ||| [arg] height	count=1
arg	before [arg] have ||| [arg]	count=1
arg	x [arg_2] ||| [arg_1] [arg_2]	count=1
arg	state ||| state	count=1
function	[function_1] rate ||| [function_1] [function_2]	count=1
arg	with name, and ||| name	count=1
arg	channel to value ||| value channel	count=3
function_arg	list [arg_2] ||| [function_1] out [arg_2]	count=1
class	cause ||| base	count=1
module_class	[module_1] list ||| [module_1] [class_2]	count=4
class	[class_1] [class_2] ||| display [class_1] [class_2]	count=3
function	children ||| children	count=2
arg	expr ||| expr	count=1
arg	data data is ||| data	count=1
class	defines [class_2] ||| [class_1] [class_2]	count=1
arg	r1 and ||| r1	count=1
function	current context ||| context	count=2
function	use ||| screens	count=1
module	savefiles in them in ||| core	count=1
function	map ||| map	count=1
function	of the screen ||| get	count=1
function	screenshot of ||| screenshot	count=1
function	in a [function_2] ||| [function_2] [function_1]	count=1
arg	rolls the ||| label greedy	count=1
class	containing ||| multi	count=1
function	layout of this text ||| layout	count=1
class	to this channel ||| channel	count=1
function_arg	of python [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] all textures ||| [function_1] [function_2]	count=1
function	[function_1] a screen ||| [function_1] [function_2] name	count=1
arg	rolls ||| greedy	count=1
function	a choice is ||| choice	count=1
class	in them ||| location	count=1
arg	statement ||| l	count=1
class	returns a ||| location	count=1
function	[function_1] start ||| [function_1] [function_2]	count=2
function	se_call causes [function] return from ||| return [function]	count=1
arg	label causes control ||| label	count=1
function	rollback returns true ||| rollback	count=1
function	creates a ||| create	count=1
function	the bytecode cache ||| bytecode	count=1
function	show statement for image ||| image	count=1
function_arg	[function_1] the canonical ||| [function_1] layer tag name [arg_2]	count=3
class	current global_label which ||| lexer	count=1
arg	in the game directory ||| common	count=1
function	slow ||| slow	count=1
function	:undocumented toggles the ||| toggle	count=1
arg	screens from the screen ||| screen	count=1
function	hides or [function_2] ||| [function_2] [function_1]	count=1
arg	canonical ||| wanted	count=1
arg	child displayable ||| startpos endpos time child	count=1
function	overlap ||| rect overlap	count=1
module_class	[module_1] screen named ||| [module_1] [class_2]	count=2
arg	[arg] the ||| [arg]	count=1
arg	pan over [arg_2] ||| [arg_2] [arg_1]	count=3
function	and [function] ||| tts [function]	count=3
function_arg	[function_1] name ||| [arg_2] [function_1]	count=2
arg	comments returns a ||| min_priority max_priority common_only	count=1
module	slots ||| core	count=1
function_arg	[function_1] channel this ||| [arg_2] [function_1]	count=2
function	command takes no arguments ||| takes no arguments	count=1
function	this is a checkpoint ||| checkpoint	count=1
function	pause flag for ||| pause	count=2
function	coordinates of the ||| focus coordinates	count=1
arg	before [arg_2] ||| [arg_2] [arg_1]	count=1
arg	of v [arg_2] ||| [arg_2] [arg_1]	count=3
function	[function_1] transform ||| [function_2] [function_1]	count=1
function	returns a pair giving ||| get	count=1
arg	package to import ||| package	count=1
function	this parses a comma-separated ||| parse	count=1
class	context ||| music context	count=1
arg	screen ||| screen	count=1
arg	[arg_1] logfile without ||| [arg_2] [arg_1]	count=2
function	the periodic call ||| periodic	count=1
arg	entries ||| entries	count=1
function	hides [function_2] ||| [function_1] [function_2]	count=2
function	sleep to ||| sleep	count=1
arg	to interpolate from the ||| child	count=1
function	are unreachable from the ||| unreachable	count=1
class	in them in ||| location	count=1
module_class	at the current ||| core lexer	count=1
function	self constant to ||| constant	count=1
function	a rpyc file the ||| rpyc data	count=1
class	init/loads ||| script	count=1
arg	[arg_1] objects and ||| [arg_2] [arg_1]	count=5
arg	color and [arg_2] ||| [arg_2] [arg_1]	count=16
arg	indicate that ||| default	count=1
class	drag to this ||| drag	count=1
class	method raises this ||| drag	count=1
arg	indicate that this ||| default	count=1
arg	language if ||| language	count=1
arg	[arg_1] this ||| [arg_2] [arg_1]	count=4
function_arg	parses s ||| parse s	count=1
function	this registers [function_2] ||| [function_1] [function_2]	count=2
module_class	[module_1] current logical ||| [module_1] [class_2] get	count=5
arg	the string s ||| s scope translate	count=1
arg	[arg_1] from filename, ||| [arg_2] [arg_1]	count=4
function	:doc other this ||| focus	count=1
arg	[arg_1] after ||| [arg_1] [arg_2]	count=2
module	:doc debug ||| core	count=1
function_arg	[function_1] invokes ||| [function_1] [arg_2]	count=5
function	to pan over ||| pan	count=1
function_arg	mouse position [arg_2] ||| [function_1] [arg_2]	count=2
class	savefiles in ||| file location	count=1
function	[function_1] rollback ||| [function_2] [function_1]	count=3
class	of an image ||| shown image info	count=1
function	a new context and ||| in new context	count=1
function	[function_1] or replaces ||| [function_2] [function_1]	count=1
function_arg	the screen [arg_2] ||| [function_1] layer [arg_2]	count=3
arg	label ||| label	count=6
function_arg	[function_1] color and ||| color [function_1] hls other [arg_2]	count=3
class	the location ||| location	count=1
arg	of columns in this ||| rows padding transpose	count=1
function	first and last ||| first and last	count=3
arg	if the [arg] can be ||| [arg]	count=1
function	self to ||| state	count=1
function	the md5 to the ||| md5	count=1
function	a paragraph a ||| paragraph	count=1
function	all ||| all	count=9
function	image_func returns [function_2] ||| [function_2] [function_1]	count=4
arg	named ||| name	count=1
function	the side ||| side	count=1
arg	rolls ||| label greedy	count=1
function	interaction ||| interact	count=1
function	number if that proves ||| number	count=1
function	to execute and any ||| execute	count=1
function	finish [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] a transform ||| [arg_2] [function_1]	count=1
function	the state ||| state	count=2
class	with ||| file	count=1
function	start [function_2] ||| [function_1] [function_2]	count=6
function	:class barvalue, [function] the ||| [function]	count=1
function_arg	list [arg_2] ||| [arg_2] [function_1]	count=2
arg	to size this ||| size dest	count=1
function	text rectangle ||| text rect	count=2
module	need analysis ||| core	count=1
class	raises ||| drag	count=1
arg	slot name returns ||| slotname	count=1
function	jump the mouse pointer ||| set mouse pos	count=1
function	a render that ||| zoom render	count=1
function	[function_1] block of ||| [function_1] [function_2]	count=2
class	the [class] entry ||| [class]	count=1
function	currently playing movie ||| movie	count=1
class	returns ||| file	count=1
function	causes [function] return ||| return [function]	count=1
function	a transition to ||| transition	count=1
function	causes [function] return from ||| return [function]	count=1
arg	:doc [arg] ||| [arg]	count=3
arg	node updating context ||| context	count=2
arg	ty b ||| b ty	count=2
class	user-definable ||| node	count=1
function	list of ||| list	count=4
function	line number of the ||| line	count=1
arg	a child displayable which ||| startpos endpos time child	count=1
function	up the window icon ||| icon	count=1
function	adds something ||| add	count=1
module	rolls back only ||| core	count=1
class	game state after a ||| rollback	count=1
arg	the named ||| name	count=1
function	variant [function_2] ||| [function_2] [function_1]	count=2
arg	out as ||| out	count=1
function	in [function_2] ||| [function_2] [function_1]	count=1
class	node that ||| node	count=1
function	tint ||| tint	count=1
class	slots ||| file	count=1
arg	reachable [arg_2] ||| [arg_2] [arg_1]	count=2
function	tags ordered in ||| ordered	count=1
function	the start of prediction ||| start prediction	count=1
function_arg	[function_1] for language ||| [arg_2] [function_1]	count=4
function	implementation of shift+r ||| utter restart	count=1
function_arg	translate that [arg_2] ||| [arg_2] [function_1]	count=3
function	is the simple draw ||| draw	count=1
function	[function_1] none ||| [function_2] [function_1]	count=5
function	[function_1] files ||| [function_1] [function_2] hash	count=3
arg	be called by subclasses ||| kind who what	count=1
function_arg	list of [arg_2] ||| [function_1] slots [arg_2]	count=1
class	:doc sprites method ||| manager	count=2
function	new context ||| new context	count=3
function	toggles the fullscreen mode ||| fullscreen	count=1
class	that this ||| displayable	count=1
function	the self-voicing text ||| tts	count=2
arg	is called with ||| height st at	count=2
function	the case where an ||| dump	count=1
class	:doc ||| drag	count=1
function	a return ||| return	count=1
function	quits ||| quit	count=1
module	audio ||| audio	count=8
function	and ||| and	count=3
module	then some ||| core	count=1
function	label ||| label	count=3
class	arbitrary order ||| file	count=1
arg	that should be executed ||| n	count=1
function_arg	text tags [arg_2] ||| [function_1] [arg_2]	count=1
function	all [function_2] ||| [function_1] screen [function_2]	count=3
function	plausible image that ||| image exists imprecise	count=2
arg	x and y ||| x y duration	count=3
arg	given state if one ||| state	count=1
arg	slotname, or ||| slotname	count=1
module	user-definable information about ||| core	count=1
function	screen ||| screen	count=12
function	[function] the ||| [function]	count=3
module	data information ||| core	count=1
function	bmfont ||| bmfont	count=1
class	[class_1] draggroup ||| [class_1] [class_2]	count=2
function	[function_1] specifier ||| [function_2] [function_1]	count=3
module	the end of ||| display	count=1
class	the file ||| file	count=3
function_arg	[function_1] [arg_2] ||| [function_1] exception [arg_2] traceback_fn	count=2
module	:doc [module] this ||| [module]	count=1
function	deprecated music [function_2] ||| [function_2] [function_1]	count=1
function	blockrollback prevents ||| block rollback	count=1
class	defines a screen ||| lang screen	count=1
function	number if ||| number	count=1
arg	st ||| st	count=1
function	finds the strings ||| get strings	count=1
arg	word ||| word	count=1
function	cause deferred ||| do deferred	count=1
function_arg	[function_1] [arg_2] in the screen ||| [function_1] [arg_2] screen layer	count=4
module_class	the persistent data ||| core persistent	count=1
module	in arbitrary ||| core	count=1
function	refresh rate ||| refresh rate	count=2
function	[function_1] textures ||| [function_1] [function_2]	count=1
function	[function_1] full ||| [function_2] [function_1]	count=4
class	in them in arbitrary ||| file location	count=1
function	takes no arguments ||| takes no arguments	count=3
function	and last nodes ||| and last	count=2
function	[function_1] or ||| [function_1] [function_2]	count=1
arg	position in filename ||| target filename position	count=3
arg	[arg_1] b is ||| [arg_2] [arg_1]	count=6
arg	unicode [arg] ||| [arg]	count=1
class	information about the ||| node	count=1
module_class	of the end of [module_1] [class_2] ||| [module_1] [class_2] eol	count=1
function	the filename ||| filename	count=1
function	image name with attributes ||| attributes	count=1
function	at init time (that ||| init	count=1
class	of ||| drag	count=1
arg	ending at position ||| position	count=1
class	of this channel ||| channel	count=1
function	the top of its ||| top	count=1
function	[function_1] group if ||| [function_2] [function_1]	count=2
class	all slots ||| file location	count=1
arg	seconds seconds ||| seconds	count=1
module	:doc loadsave causes a ||| core	count=1
function	to execute and ||| execute	count=1
class	to this draggroup ||| group	count=1
class	compiled ||| atltransform base	count=1
function	rpyc file the ||| rpyc data	count=1
function	surface and texture memory ||| memory common	count=1
arg	objects ||| wait	count=2
arg	in filename ||| target filename	count=1
class	savefiles in ||| file	count=1
function	[function_1] tags ||| display get available [function_1] [function_2]	count=1
function	physical window to ||| physical	count=1
function	surface ||| mutated surface	count=1
function_arg	replaces [arg_2] ||| [function_1] next [arg_2]	count=2
function	list [function] have been ||| get available [function]	count=1
function	alpha ||| alpha munge	count=1
function	of draw constructors ||| get draw constructors	count=3
function	:doc audio this registers ||| register	count=1
arg	new, if old exists ||| old new	count=1
class	slots with savefiles ||| location	count=1
arg	[arg_1] y ||| [arg_1] [arg_2]	count=3
arg	ligaturization ||| p	count=1
function	parses ||| parse	count=8
arg	it [arg] utf-8 ||| [arg]	count=1
function	attempts ||| focus	count=1
class	draggroup ||| drag group	count=1
function_arg	before filename ||| before code filename	count=1
function	python [function_2] ||| [function_1] [function_2]	count=4
function	a choice [function_2] ||| [function_1] [function_2]	count=1
class	[class_1] this draggroup ||| [class_1] [class_2]	count=2
arg	[arg_1] y ||| [arg_2] [arg_1]	count=3
function	currently playing a ||| playing	count=1
function_arg	[function_1] data structure ||| [function_1] [arg_2]	count=1
function	other this loads ||| load	count=1
function	the the ast ||| ast	count=1
arg	to the end rectange ||| end_identity after_child	count=1
function	any pending work ||| pending	count=1
arg	label is not ||| label	count=1
arg	if source is ||| source	count=1
class	image operation is performed ||| image base	count=1
arg	if old ||| old	count=2
function	fullscreen mode ||| toggle fullscreen	count=1
class	channel to load new ||| channel	count=1
class	with savefiles in ||| file	count=1
function	:doc [function] this created ||| [function]	count=1
function	[function_1] files ||| [function_1] [function_2]	count=4
module	the line ||| core	count=1
class	this context ||| context	count=2
arg	transform then move ||| old_thing new_thing	count=1
function	self ||| state	count=1
arg	render produced by render_screen ||| screen_render full_redraw swdraw	count=1
function	to parse ||| parse	count=2
function	[function_1] rollback to ||| [function_2] [function_1]	count=3
function	strings in ||| get strings	count=1
module	drag_drop method raises ||| display	count=1
arg	figure out ||| width height st at	count=1
class	random [class_2] ||| [class_2] [class_1]	count=2
function	surface ||| surface	count=2
module	drag_drop method raises this ||| display	count=1
arg	[arg] to ||| [arg]	count=1
arg	a layer [arg_2] ||| [arg_1] [arg_2]	count=4
function	[function_1] the ast ||| [function_2] [function_1]	count=4
function_arg	loadsave [arg_2] ||| [function_1] [arg_2]	count=1
function	this matches [function] up to ||| [function]	count=1
arg	over a child displayable ||| child	count=1
arg	at position in filename ||| target filename position	count=1
function	ren'py ||| statement	count=1
class	all slots with savefiles ||| location	count=1
function	a checkpoint which ||| checkpoint	count=1
function	called before [function] to ||| pre [function]	count=1
function	supplied [function] to unicode ||| unicode [function]	count=1
function	analyzes all statements that ||| analyze	count=1
arg	using the supplied codegenerator ||| mode filename lineno	count=1
function	object ||| init	count=4
module	order ||| core	count=1
arg	with name, and returns ||| name	count=1
arg	keywords ||| keywords	count=1
class	scene list some of ||| scene	count=1
function	gets [function_2] ||| [function_2] [function_1]	count=10
function	state ||| state	count=2
arg	screen as a floating-point ||| precision	count=1
function	[function_1] transform ||| [function_1] [function_2]	count=1
module	only ||| core	count=1
class	log in ||| rollback log	count=1
arg	user returns true if ||| full	count=1
class	drag [class_2] ||| [class_1] [class_2]	count=1
class	a drag [class_2] ||| [class_1] [class_2]	count=1
arg	invokes the given ||| callable	count=1
module	then ||| core	count=1
function	and new layout ||| layout	count=1
function_arg	at at_list ||| at at_list	count=1
arg	trans before [arg_2] ||| [arg_2] [arg_1]	count=1
function	the save ||| copy save	count=1
class	container ||| container	count=1
class	the file ||| dialogue file	count=2
function	given a paragraph a ||| paragraph	count=1
arg	expected to ||| l name	count=1
module	audio if ||| audio	count=1
function	physical width ||| physical size	count=1
function	all mixers in use ||| all mixers	count=1
class	being laid out ||| position	count=1
arg	child displayable relative ||| child	count=1
function	start of prediction ||| start prediction	count=3
function	creates a render ||| zoom render	count=1
function	not ||| not	count=1
function	toggles ||| toggle	count=1
function_arg	compiles the [arg_2] ||| [arg_2] [function_1]	count=4
function	queue [function_2] ||| [function_2] [function_1]	count=1
function	the dynamic stack called ||| dynamic	count=1
function	sets the name ||| set	count=1
arg	given channel is ||| channel	count=1
class	slots with savefiles ||| file location	count=1
arg	[arg_1] new when ||| [arg_2] [arg_1]	count=2
function	open in ||| open	count=1
arg	a clause to ||| i	count=1
module	to predict that the ||| display	count=1
module_class	returns a [class_2] ||| [module_1] [class_2]	count=2
arg	[arg_1] [arg_2] to inform the match ||| [arg_2] [arg_1]	count=6
module	list of statements and ||| translation	count=1
function	the ||| quit	count=1
function	json data for ||| json	count=1
arg	entries a list ||| entries	count=1
module	them in arbitrary ||| core	count=1
function	[function_1] [function_2] ||| [function_1] screen [function_2]	count=6
class	ask this [class] ||| [class]	count=3
module	attempts to ||| display	count=1
function	[function_1] the filename ||| [function_1] [function_2]	count=1
module	this attempts ||| display	count=1
function	this updates ||| update	count=1
module	with the ||| display	count=1
function	registers an sfont ||| register sfont	count=2
class	this is intended ||| advcharacter	count=1
class	log in preparation ||| rollback log	count=1
arg	the displayable d, ||| d	count=1
function	parses [function_2] ||| [function_2] [function_1]	count=6
function	execute and any action ||| execute	count=1
arg	[arg] linearly maps ||| src dst white [arg]	count=3
function	just before we initialize ||| end	count=1
arg	name of ||| name	count=1
function_arg	immediately before [arg_2] ||| [function_1] code [arg_2]	count=3
class	ast ||| slif	count=1
function	surfaces ||| surfaces	count=1
module	raises this ||| display	count=1
function_arg	to [arg_2] ||| [function_1] [arg_2]	count=1
class	image ||| image	count=4
arg	other this attempts ||| prefix_tag image_tag not_showing layer	count=1
function	text of ||| text	count=2
function	list of draw constructors ||| get draw constructors	count=1
function	returns a shallow copy ||| copy	count=1
function	a block of ||| block	count=1
function	info about ||| info	count=1
arg	named name ||| name mixer	count=1
function	and text [function_2] ||| [function_1] [function_2]	count=1
function_arg	showing [arg_2] ||| [function_1] [arg_2]	count=2
arg	slot of a ||| f slot	count=1
function	[function_1] predicting the ||| [function_2] [function_1]	count=4
function	a plausible ||| exists imprecise	count=1
function	the simple draw ||| draw	count=1
arg	[arg] 4-tuple giving ||| [arg]	count=1
function	gets a [function_2] ||| [function_1] [function_2]	count=1
arg	slotname, or none if ||| slotname	count=1
function	and archive files ||| list files	count=2
arg	to match ty ||| ty	count=1
function	keyword is a ||| keyword	count=1
arg	[arg_1] columns in ||| [arg_2] [arg_1]	count=1
arg	of ||| image	count=1
arg	[arg_1] child displayable ||| [arg_2] [arg_1]	count=2
function	position a keyword ||| keyword	count=1
arg	this color and ||| fraction	count=3
function_arg	[function_1] the block ||| [arg_2] [function_1]	count=3
class	only the ||| rollback	count=1
function_arg	loads [arg_2] ||| [function_1] [arg_2]	count=4
arg	comments returns ||| min_priority max_priority common_only	count=1
arg	arguments x [arg_2] ||| [arg_2] [arg_1]	count=1
class	store of this rollback ||| rollback	count=1
class	channel allocating ||| channel	count=1
function	objects ||| update	count=1
arg	s with args ||| s	count=1
class	color method ||| color	count=6
function	to ||| polar to	count=1
function	ast [function] ||| create [function]	count=3
class	drag [class_2] ||| [class_2] [class_1]	count=1
class	general user-definable information ||| node	count=1
function_arg	@param cols the ||| init cols	count=1
function	python [function_2] ||| [function_2] [function_1]	count=4
function	files that exist ||| files	count=1
arg	a bit ||| layer thing key zorder	count=1
class	[class_1] or else ||| [class_2] [class_1]	count=1
function	a python string at ||| python string	count=1
arg	filename exists as ||| filename test	count=1
function	valid rollback ||| rollback	count=1
function	udd_utility loads ||| load	count=2
function	calls a ||| call	count=1
module_class	of the displayable ||| display displayable	count=1
class	all slots ||| file	count=1
function	adds a ||| add	count=2
function_arg	[function_1] new location ||| [function_1] [arg_2]	count=1
function	screens returns ||| get	count=1
function	string at ||| string	count=1
arg	this maps the ||| src dst	count=1
arg	label is ||| label	count=1
module	statements and ||| translation	count=1
arg	at position in ||| position	count=1
class	creates a new segment ||| segment	count=1
function	[function] data ||| write [function]	count=2
arg	then strips off the ||| code lineno	count=1
arg	[arg_1] value ||| [arg_2] [arg_1]	count=4
function	this gets ||| get	count=1
function_arg	event [arg_2] ||| [arg_2] [function_1]	count=2
function	and archive ||| list	count=1
arg	old to [arg_2] ||| [arg_2] [arg_1]	count=2
function	takes no [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| color [function_1] hls other [arg_2]	count=5
function	gets a ||| get	count=1
function_arg	[function_1] new-style ||| [function_1] custom tags [arg_2]	count=1
function	finds the strings in ||| get strings	count=1
class	log in preparation ||| log	count=1
arg	should be executed ||| n	count=1
arg	floating-point ||| precision	count=1
class	:doc drag_drop ||| drag	count=1
function_arg	[function_1] [arg_2] ||| core slot [function_1] [arg_2]	count=6
arg	[arg] as ||| store reachable [arg]	count=3
module	other this attempts to ||| display	count=1
function	first argument that ||| first	count=1
function	background ||| background	count=1
function	python string ||| python string	count=2
function	compiles ||| py compile	count=1
module	this attempts to find ||| display	count=1
function	count of missing ||| count missing	count=3
class	defines ||| lang	count=1
function	loads all rpt files ||| load all rpts	count=1
class	is ||| info	count=1
module	called ||| core	count=1
function	[function_1] text of ||| [function_1] [function_2]	count=1
arg	object for ||| candidates	count=1
class	and the log in ||| rollback log	count=1
class	this rolls ||| rollback	count=1
function	blocks ||| blocks	count=1
function	makes a copy ||| copy	count=2
function_arg	[function_1] [arg_2] ||| [function_1] code [arg_2]	count=6
module	the screendisplayable with the ||| display	count=1
class	data ||| rollback	count=1
function	reports an exception to ||| report parse	count=1
function	returns the number ||| get	count=1
arg	[arg_1] name ||| [arg_2] [arg_1]	count=8
function	takes a screenshot of ||| take screenshot	count=1
function	data ||| rollback	count=1
module	quits ||| display	count=1
function	transform to this ||| transform	count=1
module	start of the ||| core	count=1
class	want to rollback ||| rollback	count=1
arg	the roots ||| roots	count=1
function	mouse [function_2] ||| [function_2] [function_1]	count=2
class	information ||| rollback	count=1
module	:doc other ||| core	count=12
class	screen ||| screen	count=2
function	[function_1] pointer or ||| [function_1] [function_2]	count=4
function	parse label ||| label	count=1
arg	and divides it ||| filedata linenumber	count=1
function	tries to [function] ||| [function]	count=2
arg	surface src returns ||| src	count=1
arg	node_type ||| node_type	count=1
function	[function_1] start ||| [function_2] [function_1]	count=2
arg	just before ||| data keep_rollback hard	count=1
arg	child ||| startpos endpos time child	count=1
arg	[arg] playing returns ||| [arg]	count=3
arg	up or [arg_1] [arg_2] uses both ||| real smoothscale [arg_1] [arg_2]	count=1
function	transition to ||| transition	count=1
module	:doc screens ||| core	count=1
arg	the positional ||| scope child_or_fixed	count=1
function	music start ||| music start	count=2
function	[function_1] [function_2] with ||| [function_1] [function_2] name	count=2
function	attempts to ||| focus	count=1
arg	rolls the ||| force checkpoints defer greedy	count=1
function_arg	[function_1] old to ||| [arg_2] [function_1]	count=2
function	all playback channels ||| all	count=1
class	code a ||| python	count=1
class	number of this channel ||| channel	count=1
function	name with attributes returns ||| attributes	count=1
arg	to size [arg_2] ||| [arg_2] [arg_1]	count=1
function	of python ||| python	count=1
function	the list of ||| group	count=1
arg	node ||| next	count=1
module_class	number of [class_2] ||| [module_1] [class_2]	count=4
function	the dynamic ||| dynamic	count=1
function	sets ||| set mixer	count=1
class	editor this ||| editor	count=1
class	[class_1] [class_2] ||| [class_1] [class_2]	count=39
function_arg	adds a [arg_2] ||| [arg_2] [function_1]	count=4
arg	channel as ||| channel	count=1
arg	to delay seconds ||| delay	count=1
arg	user returns true ||| full	count=1
function	coordinates of ||| focus coordinates	count=1
module	general user-definable information about ||| core	count=1
function	the top ||| top	count=1
function	[function_1] physical window ||| [function_2] [function_1]	count=4
function	side [function_2] ||| [function_2] [function_1]	count=1
function	of draw [function_2] ||| [function_2] [function_1]	count=3
class	names are quite a ||| lists	count=1
arg	profiles [arg] surface ||| [arg]	count=1
arg	ev ||| ev	count=1
module	event matches the ||| display	count=1
arg	r1 ||| r1	count=1
function	displayable ||| displayable	count=4
module	place it into the ||| display	count=1
arg	from the roots from ||| roots wait	count=1
function	list [function] ||| get available [function]	count=3
function_arg	named [arg_2] ||| [arg_2] [function_1]	count=1
function	adds a new ||| add	count=1
arg	start and the ||| start	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=132
arg	s as ren'py script ||| s filename	count=1
class	with ||| file location	count=1
function	python ||| python	count=3
function	that is not none ||| not none	count=1
function_arg	python [arg_2] ||| [function_1] [arg_2]	count=1
function	a new context ||| new context	count=3
function	[function] of the ||| context [function]	count=1
function	ren'py to restart ||| restart	count=1
class	this displayable to ||| drag	count=1
function	the attributes associated the ||| attributes	count=1
class	are ||| lists	count=1
class	the data information intact ||| rollback	count=1
arg	if source is given ||| source	count=1
function_arg	parses [arg_2] ||| [arg_2] [function_1]	count=1
class	python ast statements ||| parser	count=2
function	to purge ||| purge	count=1
function	[function_1] textures and ||| [function_2] [function_1]	count=1
module_class	[module_1] displayable is ||| [module_1] [class_2]	count=6
arg	old node with new ||| old new	count=1
module	new audio ||| audio	count=1
function	other sets ||| set	count=1
function	get the [function_2] ||| [function_2] [function_1]	count=2
function_arg	variant screen [arg_2] ||| [arg_2] [function_1]	count=2
arg	channel to [arg_2] ||| [arg_2] [arg_1]	count=2
arg	the given ||| filename	count=1
arg	child displayable which ||| time child	count=1
function	registers a [function_2] ||| [function_2] [function_1]	count=1
arg	a transform ||| transform	count=1
function	updates the [function_2] ||| [function_1] [function_2]	count=4
function	sleep to the end ||| sleep	count=1
function	variant ||| variant	count=1
function	[function_1] cartesian ||| [function_1] [function_2]	count=1
function	nesting level ||| nesting level	count=1
function	[function_1] surfaces ||| [function_1] [function_2]	count=4
function	dialogue [function_2] ||| [function_1] [function_2]	count=2
function	or menu ||| menu	count=1
arg	the newest [arg] ||| [arg]	count=1
function	layout of this ||| layout	count=1
function	[function] amap ||| [function]	count=1
arg	[arg_1] this ||| [arg_1] [arg_2]	count=2
function	the list of ||| get	count=1
arg	after ||| after	count=1
function_arg	writes [arg_2] ||| [function_1] utf8 traceback list [arg_2]	count=2
function	argument that is not ||| not	count=1
class	sprites method causes ||| manager	count=1
function	current return ||| return	count=1
arg	[arg_1] child ||| [arg_2] [arg_1]	count=2
function	callback to [function] the ||| [function]	count=1
module_class	[module_1] game ||| [module_1] [class_2]	count=2
module	savefiles in ||| core	count=1
arg	from filename the ||| filename	count=1
class	that ||| displayable	count=1
arg	[arg_1] to these ||| [arg_2] [arg_1]	count=1
function_arg	an [function_1] [arg_2] contain ||| translation restructurer [function_1] [arg_2]	count=3
class	them ||| file location	count=1
module	drag_drop ||| display	count=1
function	[function_1] image ||| [function_1] [function_2]	count=4
class	the [class] entry at ||| [class]	count=1
function_arg	[function_1] as t ||| [function_1] state [arg_2]	count=3
module	them in ||| core	count=1
class	a new sprite for ||| sprite	count=1
function	ast ||| ast	count=1
class	and returns ||| list	count=1
function	creates a render that ||| zoom render	count=1
function	returns the ||| get	count=5
class	in ||| file location	count=2
function	barvalue, [function] the :func ||| [function]	count=1
function	[function_1] statement ||| [function_2] [function_1]	count=1
function	the [function] of ||| get image [function]	count=1
function_arg	[function_1] a clause ||| [arg_2] [function_1]	count=1
function	into logical [function_2] ||| [function_2] [function_1]	count=1
arg	[arg] uses ||| src [arg]	count=2
arg	glyphs gt ||| gt glyphs	count=1
arg	comments returns a list ||| min_priority max_priority common_only	count=1
class	if this [class] ||| [class]	count=3
class	its ||| drag	count=1
arg	assigns times [arg_1] [arg_2] is the starting time ||| text segment assign times [arg_2] [arg_1]	count=1
module	this attempts to ||| display	count=1
function	a new context and ||| invoke in new context	count=1
arg	and divides it ||| filename filedata linenumber	count=1
class	text [class] up into ||| text [class]	count=1
class	random ||| random	count=1
function	new layout ||| layout	count=1
function	new ||| new	count=2
function	:doc other ||| focus	count=1
class	defines a ||| lang	count=1
function	constructors to try ||| constructors	count=1
arg	kwargs to [arg_2] ||| [arg_1] [arg_2]	count=3
function	state [function_2] ||| [function_2] [function_1]	count=4
function	default drag ||| default drag	count=2
function	[function_1] whitespace ||| [function_1] [function_2]	count=1
class	slots with savefiles in ||| file	count=1
module	raises this displayable ||| display	count=1
arg	two surfaces the various ||| rmap gmap	count=1
module	user-definable ||| core	count=1
arg	compiles an ||| expr	count=1
function	be run at init ||| init	count=1
arg	[arg_1] and linenumber, ||| [arg_1] [arg_2]	count=4
arg	by ||| s	count=1
function	list of ||| get	count=1
function	:doc image_func returns a ||| get	count=1
function	missing a from ||| missing	count=1
function	returns true if ||| has	count=1
arg	s to ||| s	count=1
module	some general ||| core	count=1
module_class	[module_1] image or ||| [module_1] [class_2]	count=2
function	line numbers in the ||| linenumbers	count=1
function	or has a ||| has	count=1
arg	tag and an image ||| tag	count=1
arg	[arg] may only ||| [arg]	count=3
function_arg	a keyword [arg_2] ||| [arg_2] [function_1]	count=1
class	to cause ||| base	count=1
function	attributes ||| attributes	count=1
function	saves ||| saves	count=1
function	is a plausible ||| exists imprecise	count=1
function	the layout of this ||| layout	count=1
function	called [function_1] [function_2] ||| [function_1] [function_2]	count=14
function	are unreachable from ||| unreachable	count=1
arg	the given channel is ||| channel	count=1
function	[function_1] [function_2] ||| core [function_2] [function_1]	count=11
function	causes ren'py to restart ||| restart	count=1
function	user has seen ||| seen	count=2
function	as the side ||| side	count=1
function	information about the line ||| line	count=1
function	rpt files ||| rpts	count=1
function_arg	the screen [arg_2] ||| [function_1] [arg_2]	count=1
function	hides or [function_2] ||| [function_1] [function_2] layer index prefix	count=1
arg	name ||| name	count=9
arg	from filename, ||| filename	count=1
function	queue is empty ||| queue empty	count=1
module	the amount of ||| display	count=1
function	lines ||| lines	count=1
function	given bar_value, a :class [function_1] [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] of missing ||| [function_1] [function_2]	count=2
class	arbitrary order ||| file location	count=1
function	and surfaces that ||| and surfaces	count=2
arg	new location ||| location	count=1
arg	screen profiling for ||| name predict show update	count=1
function	[function] as ||| [function]	count=3
arg	[arg_1] tag ||| [arg_1] [arg_2]	count=3
function	displayable on the ||| displayable	count=1
arg	entries a ||| entries	count=1
function	[function_1] blocks the ||| [function_1] [function_2]	count=4
function	filename and [function_2] ||| [function_1] [function_2]	count=3
function	string ||| translate string	count=1
function	hls ||| hls	count=1
function	the side image ||| get side image	count=2
arg	before ||| before	count=1
function	invoking a quit ||| quit	count=1
arg	[arg_1] [arg_2] color ||| [arg_2] [arg_1]	count=6
arg	requests screen profiling for ||| predict show update	count=1
function	the [function_1] [function_2] ||| core [function_1] [function_2]	count=1
function	a new ||| invoke in new	count=1
function	set ||| set	count=4
function	[function_1] strings command ||| [function_1] [function_2]	count=2
arg	[arg] rect, ||| rect [arg]	count=1
function_arg	ui specifies [arg_2] ||| [function_1] [arg_2]	count=3
module	end of config ||| display	count=1
arg	font ||| font start end	count=1
arg	a child displayable ||| startpos endpos time child	count=1
function	background screenshot ||| background screenshot	count=2
function	writes the [function_2] ||| [function_1] [function_2]	count=4
arg	grab the given ||| tag	count=1
function_arg	color [function_1] [arg_2] ||| color [function_1] hls other [arg_2]	count=2
function	choice [function_2] ||| [function_2] [function_1]	count=1
function	shallow copy ||| copy	count=2
function	node that should ||| node	count=1
arg	positional and ||| scope child_or_fixed	count=1
function	[function_1] blocks the ||| [function_2] [function_1]	count=4
arg	if args is provided ||| args	count=1
function_arg	interpolates between [arg_2] ||| color [function_1] hsv other [arg_2]	count=1
function	a copy ||| copy	count=2
arg	if name is ||| name	count=2
arg	displays a ||| items set_expr	count=1
function	writes a ||| write	count=1
module_class	the displayable is ||| display displayable	count=1
function	at ||| at	count=1
function	this matches [function] ||| [function]	count=1
function	the [function_1] [function_2] ||| [function_2] [function_1]	count=2
arg	assigns times [arg] ||| gt [arg]	count=1
function	[function_1] list ||| utf8 [function_1] [function_2]	count=3
function	block of ren'py ||| block	count=1
class	are quite ||| lists	count=1
class	draggroup ||| group	count=2
class	the log ||| log	count=1
arg	a clean copy ||| clean	count=1
function	clean copy ||| clean	count=1
arg	divides it ||| filename filedata linenumber	count=1
function	the ||| init	count=1
function	matches [function] ||| [function]	count=1
module	toggles ||| core	count=1
function	[function_1] textures and ||| [function_1] [function_2]	count=1
arg	with filename and linenumber, ||| filename linenumber	count=1
arg	to the main menu ||| transition label target	count=1
module	also updates the ||| core	count=1
arg	block the block ||| block	count=1
function	[function_1] a block ||| [function_2] [function_1]	count=2
module_class	with the given ||| display scene lists	count=1
function	[function] of ||| [function]	count=13
arg	child ||| time child	count=1
module	all ||| core	count=1
function	with attributes ||| apply attributes	count=1
function_arg	[function_1] be executed ||| [arg_2] [function_1]	count=2
function	returns a pair ||| get	count=1
function	to restart returning ||| restart	count=1
function	[function_1] context and ||| [function_2] [function_1]	count=4
function	[function_1] cartesian ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| color [function_1] other [arg_2]	count=5
arg	from the screen ||| screen id	count=1
module_class	the mouse ||| display mouse	count=1
arg	clause to this ||| i	count=1
arg	[arg] is loadable ||| [arg]	count=1
arg	true if [arg] save ||| [arg]	count=1
function	to set ||| set	count=2
module	to [module] edges ||| [module]	count=1
module	:undocumented ||| core	count=3
function	a shallow copy ||| copy	count=2
function	translate ||| translate	count=1
function_arg	removes [arg_2] ||| [arg_2] [function_1]	count=4
arg	bit ||| layer thing key zorder	count=1
arg	over a child displayable ||| startpos endpos time child	count=1
function_arg	[function_1] with the ||| [function_1] [arg_2]	count=11
function	[function_1] arguments ||| [function_2] [function_1]	count=5
function_arg	[function_1] [arg_2] only contain ||| translation restructurer [function_1] [arg_2]	count=3
function	numbers [function_2] ||| [function_2] [function_1]	count=2
function	first and last nodes ||| first and last	count=1
class	with savefiles in ||| file location	count=1
function	kill [function_2] ||| [function_1] [function_2]	count=6
class	to ||| node	count=1
arg	thing and reports ||| thing name	count=1
function	say [function_2] ||| core [function_1] [function_2] with expression callback	count=1
arg	checkpoints ||| checkpoints	count=1
arg	to fn relative ||| fn	count=1
class	operation is ||| base	count=1
function	that are unreachable from ||| unreachable	count=1
function	[function_1] constant for ||| [function_1] [function_2]	count=1
function	and line number ||| line	count=1
function_arg	execute this [arg_2] ||| [function_1] [arg_2]	count=1
function	this sets the ||| set	count=2
function_arg	node [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] an sfont ||| [function_1] [function_2]	count=4
function	[function] returns a ||| [function]	count=4
function	side [function_2] ||| [function_1] [function_2]	count=1
module	to return an ||| core	count=1
class	cause [class_2] ||| [class_2] [class_1]	count=1
arg	just ||| data keep_rollback hard	count=1
function_arg	an sfont with ||| sfont name	count=1
class	channel allocating a ||| channel	count=1
function	[function_1] pin is ||| [function_1] [function_2]	count=1
function	:doc image_func returns ||| get	count=1
function	count of ||| count	count=1
function	choice is [function_2] ||| [function_2] [function_1]	count=1
function	stop predicting ||| stop predict	count=1
function	writes [function_2] ||| [function_1] [function_2]	count=3
arg	name ||| name mixer loop	count=1
class	of this [class] to ||| [class]	count=1
arg	filename [arg_2] ||| [arg_2] [arg_1]	count=4
class	this parser ||| parser	count=1
function	blocks [function] in ||| [function] dialogue	count=1
arg	the supplied codegenerator ||| mode filename lineno	count=1
arg	the [arg] ||| [arg]	count=7
class	editor this may ||| editor	count=1
function	[function_1] tags that ||| display get available [function_1] [function_2]	count=1
function	no [function_2] ||| [function_1] [function_2]	count=1
function	a command takes ||| takes	count=1
function	parses a comma-separated ||| parse	count=1
arg	cropping [arg] rect, ||| rect [arg]	count=1
function	command takes [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] rolls the ||| [arg_2] [function_1]	count=1
arg	a child displayable which ||| child	count=1
class	advcharacter ||| advcharacter	count=1
arg	[arg_1] gt ||| text segment assign times [arg_2] [arg_1]	count=3
function	run anymore ||| run	count=1
function	a list of ||| list	count=4
arg	channel to ||| channel	count=1
function	for the first ||| count newly	count=1
arg	[arg_1] keysym ||| [arg_2] [arg_1]	count=1
function	old and new layout ||| layout	count=1
arg	displayable a function ||| displayable	count=1
function	returns the style object ||| style	count=1
function	self constant ||| constant	count=1
function	the line does not ||| line	count=1
arg	t this ||| t	count=1
arg	[arg] save ||| [arg]	count=1
function	no ||| no	count=1
function	into multiple dictionaries one ||| split	count=1
function	out the list of ||| get	count=1
function	get ||| get	count=1
module_class	of the end of [module_1] [class_2] or ||| [module_1] [class_2] eol	count=1
module_class	[module_1] mouse move ||| [module_1] [class_2]	count=2
function	for the first time ||| newly	count=1
function	globally unique serial number ||| serial	count=1
module	user-definable information ||| core	count=1
function	updates the ||| update	count=1
arg	name the name ||| name	count=1
class	a new segment ||| segment	count=1
function	new context and ||| new context	count=1
class	are quite a ||| lists	count=1
function_arg	[function_1] t ||| [function_1] [arg_2]	count=1
function_arg	[function_1] clause ||| [arg_2] [function_1]	count=1
function	the [function] to ||| [function]	count=1
function_arg	[function_1] and invokes ||| [arg_2] [function_1]	count=5
arg	slot ||| f slot	count=1
function	pause [function_2] ||| [function_2] [function_1]	count=1
arg	system back ||| force label	count=1
function_arg	the screen [arg_2] ||| [function_1] variants [arg_2]	count=1
arg	this is called ||| st at	count=1
class	savefiles in them in ||| file	count=1
function_arg	calls [arg_2] ||| [arg_2] [function_1]	count=1
arg	slot in a ||| slot	count=1
module_class	of the end of [module_1] [class_2] ||| [module_1] [class_2]	count=1
function	[function_1] all variants ||| [function_1] [function_2]	count=1
arg	scry ||| scry	count=1
function	hides or replaces ||| hide or replace	count=1
function	[function_1] tags ||| [function_1] [function_2]	count=4
function	before [function] to ||| pre [function]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] value [arg_2]	count=8
module	:doc other jump the ||| core	count=1
function	of missing translations for ||| missing	count=1
function	simple draw routine ||| draw	count=1
function	:undocumented returns a ||| get	count=1
arg	cols ||| cols	count=1
function	coordinates of the currently-focused ||| focus coordinates	count=1
arg	cols the [arg_2] ||| [arg_2] [arg_1]	count=1
function	the persistent ||| save persistent	count=1
function	the first valid rollback ||| rollback	count=1
function_arg	[function_1] ev matches ||| [function_1] [arg_2]	count=2
function	group ||| group	count=1
function	added to ||| show	count=1
arg	tag ||| tag	count=1
function	game [function_2] ||| [function_1] [function_2]	count=1
module_class	a [class_2] ||| [module_1] [class_2]	count=2
arg	child displayable which ||| startpos endpos time child	count=1
function	default [function_2] ||| [function_2] [function_1]	count=6
arg	in filename ||| filename	count=1
function_arg	[function_1] with name, ||| [function_1] [arg_2]	count=1
module	of all ||| core	count=1
module	:doc image_func copies ||| core	count=1
module	this ||| display	count=2
arg	from slot in a ||| slot	count=1
function	to finish ||| finish	count=1
arg	newest [arg] ||| [arg]	count=1
function	locations in ||| locations	count=1
arg	wraps block the block ||| block	count=1
function	to freeze ||| freeze	count=1
function	state of [function_2] ||| [function_2] [function_1]	count=6
function_arg	[function_1] roots from ||| [function_1] [arg_2]	count=3
function	the pause flag for ||| pause	count=2
function	[function] to the ||| reset [function]	count=3
function	and ||| apply	count=1
function	all rpt files ||| all rpts	count=2
function	to add [function_2] ||| [function_1] [function_2]	count=3
arg	[arg_1] linenumber ||| [arg_2] [arg_1]	count=1
arg	args ||| args	count=1
arg	this rolls the system ||| force label greedy	count=1
function	first and [function_2] ||| [function_2] [function_1]	count=4
function	md5 to ||| md5	count=1
function	[function] to the ||| clean [function]	count=1
arg	of v to match ||| v	count=1
function	is a plausible image ||| image exists imprecise	count=1
function	takes no ||| takes no	count=2
function	the strings in ||| strings	count=1
function_arg	are unreachable [arg_2] ||| [function_1] [arg_2]	count=5
arg	from ||| wait	count=1
function	gesture preventing the gesture ||| gesture	count=1
function	simple_expressions ||| simple expression	count=1
function	a list [function] ||| get available [function]	count=3
function_arg	of missing [arg_2] ||| [function_1] [arg_2]	count=1
module	return an ||| core	count=1
class	rollback through this ||| rollback	count=1
module	on [module] given layer ||| [module]	count=1
function	[function_1] blocks ||| [function_2] [function_1]	count=4
arg	layer tag and an ||| layer tag	count=1
function	[function_1] [function_2] ||| [function_1] ordered [function_2]	count=13
function	update ||| update	count=1
arg	old [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	[function_1] [arg_2] match ||| core correct [function_1] [arg_2]	count=6
function	next node ||| next node	count=2
class	in the file ||| dialogue file	count=1
function_arg	replaces [arg_2] ||| [function_1] [arg_2]	count=3
arg	r1 and [arg_2] ||| [arg_2] [arg_1]	count=1
function	a variant ||| variant	count=1
function	sets [function_2] ||| [function_2] [function_1]	count=3
module	[module] to ||| [module]	count=3
function	loadsave returns a list ||| list	count=1
function	this updates [function_2] ||| [function_1] [function_2]	count=3
arg	old node [arg_2] ||| next [arg_1] [arg_2]	count=3
function	transform event ||| transform	count=1
function	[function_1] predicting ||| [function_1] [function_2]	count=4
arg	with filename [arg_2] ||| [arg_1] [arg_2]	count=3
function	[function_1] dialogue to ||| [function_2] [function_1]	count=1
function_arg	to pan [arg_2] ||| [function_1] [arg_2]	count=2
function	this sets the ||| set mixer	count=1
function	either relative to ||| elide filename	count=1
function	[function_1] an image ||| [function_2] [function_1]	count=2
function	screenshot of the current ||| take screenshot	count=1
function_arg	adds [arg_2] ||| [arg_2] [function_1]	count=3
function	the [function] ||| get image [function]	count=1
function	mouse pointer to the ||| set mouse pos	count=1
arg	pycode object ||| python_code hide store	count=1
function	from a string ||| string	count=1
arg	filename exists ||| filename test	count=1
class	each time [class] ||| [class]	count=1
arg	displayable a function ||| loc displayable	count=1
class	drag to ||| drag	count=1
function	screens returns [function_2] ||| display [function_1] [function_2]	count=1
function	the bytecode cache ||| init bytecode	count=1
function	takes [function_2] ||| [function_1] [function_2]	count=2
arg	[arg_1] [arg_2] ||| [arg_1] b [arg_2]	count=6
class	drag_group ||| drag	count=1
module	of ||| core	count=1
arg	data data ||| data	count=1
function	init ||| init	count=3
function	simple_expressions [function_2] ||| [function_2] [function_1]	count=1
function_arg	removes [arg_2] ||| [function_1] line [arg_2]	count=2
arg	node_type the type ||| name node_type	count=1
function	[function_1] the line ||| [function_2] [function_1]	count=2
function	files ||| files	count=3
function	in a showif ||| in showif	count=3
function	a dotted name which ||| dotted name	count=1
function	the coordinates of ||| coordinates	count=1
class	the image ||| shown image	count=1
module	of config ||| display	count=1
function	transform to ||| transform	count=2
class	and the log in ||| log	count=1
function	mouse pointer or the ||| mouse pos	count=1
function_arg	returns the [arg_2] ||| [function_1] displayable by tag [arg_2] tag	count=2
function_arg	[function_1] in s ||| [function_1] [arg_2]	count=5
arg	the callback on ||| callback	count=1
function_arg	rollback [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	[function_1] t ||| [function_1] state [arg_2]	count=2
arg	b ||| b	count=1
function_arg	[function_1] filename ||| [arg_2] [function_1]	count=2
function	new ||| invoke in new	count=1
arg	d ||| d	count=2
arg	over a child ||| time child	count=1
function	number of dialogue blocks ||| dialogue blocks	count=1
function	sets the volume ||| set	count=1
function	be loaded ||| load	count=1
function	[function_1] properties ||| display [function_1] [function_2]	count=2
module	this ||| core	count=1
function	size of [function_2] ||| core [function_2] [function_1]	count=2
function	called to [function] the ||| [function]	count=1
function	loads all [function_2] ||| [function_2] [function_1]	count=1
class	with savefiles in them ||| file location	count=1
class	slots with ||| location	count=1
arg	child displayable ||| time child	count=1
class	location [class_2] ||| [class_2] [class_1]	count=2
function	or [function_2] ||| [function_1] [function_2] layer index prefix	count=1
function	:doc udd_utility loads ||| load	count=2
class	in them in arbitrary ||| file	count=1
function	control information while leaving ||| rollback control	count=1
function_arg	[function_1] [arg_2] with ||| [function_1] [arg_2]	count=6
function	alpha channel ||| alpha	count=1
function	and surfaces ||| and surfaces	count=2
function	in ||| offset	count=1
class	sprites method ||| manager	count=2
function	[function_1] or replaces ||| [function_1] [function_2] layer index prefix	count=1
function_arg	[function_1] clause to ||| [function_1] [arg_2]	count=1
class	this [class] may ||| [class]	count=1
function_arg	string s ||| translate string s	count=1
function	with attributes ||| attributes	count=1
function	[function_1] displayables ||| [function_2] [function_1]	count=1
class	code to cause ||| base	count=1
function	parses a block of ||| parse block	count=1
function	copies the save ||| save	count=1
function	and archive [function_2] ||| [function_1] [function_2]	count=1
function	drag [function_2] ||| [function_1] [function_2]	count=4
function	to restart returning ||| full restart	count=1
function	image_func returns a ||| get	count=1
function	line must exist ||| line	count=1
arg	assigns times [arg_1] [arg_2] is the starting time ||| [arg_2] [arg_1]	count=1
function	is [function_2] ||| [function_2] [function_1]	count=3
function	profiles object ||| profile	count=1
function	drag group if ||| drag group	count=2
function	start predicting the screen ||| start predict screen	count=1
class	set ||| set	count=1
arg	the given state ||| state	count=1
function	[function_1] tags ||| [function_2] [function_1]	count=7
function	a tint of this ||| tint	count=1
function	[function_1] displayables that ||| [function_1] [function_2]	count=1
function	[function_1] state ||| [function_2] [function_1]	count=2
arg	s ||| s filename	count=1
arg	a transform that is ||| transform	count=1
module	with savefiles in ||| core	count=1
arg	old node ||| old	count=1
function	blocks [function] ||| [function] dialogue	count=1
function	is added ||| show	count=1
function	[function_1] for ||| [function_2] [function_1]	count=14
function_arg	an event [arg_2] ||| [arg_2] [function_1]	count=5
class	code ||| translate python	count=1
function	new context and ||| invoke in new context	count=1
function	start predicting the ||| start predict	count=2
arg	[arg] that ||| [arg]	count=1
function	displayable on ||| displayable by	count=1
function	show the screenshot ||| screenshot	count=1
function_arg	context [arg_2] ||| [function_1] [arg_2]	count=3
module	that need ||| core	count=1
arg	[arg_1] before ||| [arg_1] [arg_2]	count=1
function	jump the mouse ||| mouse	count=1
function	rollback ||| in rollback	count=1
class	in arbitrary order ||| location	count=1
function	of simple_expressions [function_2] ||| [function_2] [function_1]	count=1
class	rolls back ||| rollback	count=1
function	of ||| get	count=2
arg	expression giving a transition ||| paired	count=1
arg	to update ||| update	count=1
arg	from the screen on ||| screen id layer	count=1
arg	position ||| position	count=1
arg	transform then move the ||| old_thing new_thing	count=1
function	of the currently-focused ||| focus	count=1
arg	[arg_1] filename is ||| [arg_2] [arg_1]	count=6
function	traceback list ||| utf8 traceback list	count=1
function	[function_1] drag group ||| [function_1] [function_2]	count=1
function	copy ||| copy	count=2
function	[function_1] all screens ||| [function_1] [function_2]	count=1
module	return an object with ||| core	count=1
function	an ast [function] ||| create [function]	count=3
function	pause all playback channels ||| pause all	count=1
function	count of [function_2] ||| [function_2] [function_1]	count=3
module	python ast and ||| sl2	count=1
class	to the file ||| file	count=1
function	add history entries to ||| add history	count=1
arg	[arg_1] to language ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] label ||| [function_1] replay [arg_2]	count=1
arg	old node [arg_2] ||| [arg_2] [arg_1]	count=3
function	bounding box ||| bounds	count=1
function_arg	the [arg_2] ||| [arg_2] [function_1]	count=1
arg	if the given filename ||| filename	count=1
function	unicode string ||| unicode	count=1
function	[function_1] arguments ||| [function_1] [function_2]	count=5
arg	label causes control to ||| label	count=1
class	information intact ||| rollback	count=1
class	mostly ||| iosvideo channel	count=1
arg	then move the ||| old_thing new_thing	count=1
function	attempts to find the ||| focus	count=1
function	sets [function_2] ||| [function_1] [function_2]	count=3
function	the text ||| text	count=1
module	general ||| core	count=1
arg	layer [arg_2] ||| [arg_2] [arg_1]	count=4
function	next ||| next	count=1
module	the filename ||| core	count=1
function	[function_1] [function_2] the ||| [function_2] [function_1]	count=9
module	a ||| core	count=1
arg	a floating-point ||| precision	count=1
function	the size of ||| size	count=1
function	this gets [function_2] ||| [function_1] [function_2]	count=2
class	analysis ||| script	count=1
arg	for white and black ||| black	count=1
class	the data ||| rollback	count=1
class	lexer ||| lexer	count=2
arg	string s ||| s scope translate	count=1
function	a list ||| translate list	count=1
function	[function_1] [function_2] of this ||| [function_1] [function_2]	count=4
function	of image tags ||| image	count=1
function	the text [function_2] ||| [function_2] [function_1]	count=1
function_arg	type [arg_2] ||| [arg_2] [function_1]	count=7
function	parents of every ||| parents	count=1
function	[function_1] rate of ||| [function_2] [function_1]	count=1
function_arg	execute [arg_2] ||| [arg_2] [function_1]	count=1
arg	a label ||| label scope	count=1
arg	kwargs to these ||| kwargs ignore_errors	count=3
function	displayable on the ||| displayable by tag	count=1
arg	in filename is ||| filename	count=1
arg	channel as a ||| channel	count=1
arg	[arg_1] linenumber, or ||| [arg_2] [arg_1]	count=3
class	that ||| script	count=1
function	a screen ||| screen	count=1
arg	the line with filename ||| filename	count=1
arg	on layer [arg_2] ||| [arg_1] name [arg_2]	count=1
arg	pan over ||| startpos endpos time	count=1
function	of prediction to ||| prediction	count=1
function	first argument [function_2] ||| [function_1] [function_2]	count=2
function_arg	node that [arg_2] ||| [arg_2] [function_1]	count=2
module	this displayable to ||| display	count=1
function	a count of missing ||| count missing	count=1
arg	logfile without the ||| append developer flush	count=1
function	is not none ||| not none	count=2
function	[function_1] node that ||| [function_1] [function_2]	count=1
arg	ending at position in ||| position	count=1
function	execute this node ||| execute	count=1
arg	displayable d, and adds ||| d	count=1
function_arg	a [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	kill all [function_2] ||| [function_2] [function_1]	count=6
function	control information while leaving ||| control	count=1
function_arg	render [arg_2] ||| [function_1] [arg_2]	count=1
function	texture ||| texture	count=1
function_arg	pygame event [arg_2] ||| [function_1] [arg_2]	count=2
class	[class_1] a screen ||| [class_2] [class_1]	count=1
function	statement ||| statement	count=1
function	[function_1] ui ||| core [function_1] [function_2] bar_value	count=2
function_arg	[function_1] statement ||| [arg_2] [function_1]	count=1
function	window loses mouse focus ||| focus	count=1
function	reports an exception to ||| report	count=1
module	to [module] edges with ||| [module]	count=1
function	shallow copy of ||| copy	count=1
class	causes this node to ||| node	count=1
class	move returns ||| move	count=1
function	cause deferred [function_2] ||| [function_2] [function_1]	count=3
function	start [function_2] ||| [function_2] [function_1]	count=6
function	[function_1] pin ||| [function_1] [function_2]	count=1
arg	transform ||| transform	count=1
arg	positional ||| scope child_or_fixed	count=1
module	:doc [module] ||| [module]	count=3
module	:doc other splits ||| core	count=1
function_arg	[function_1] a transform ||| [function_1] [arg_2]	count=1
function_arg	[function_1] slotname, or ||| core slot [function_1] [arg_2]	count=2
module_class	the screen ||| display screen profile	count=1
function_arg	interface string [arg_2] ||| [function_1] [arg_2]	count=6
function	maximum framerate for ||| maximum framerate	count=1
function	no such displayable exists ||| displayable by	count=2
function	textures and surfaces that ||| textures and surfaces	count=1
function	screen variants ||| variants	count=1
arg	linenumber from filename, ||| filename linenumber	count=2
module	:doc other this ||| display	count=1
function_arg	[function_1] [arg_2] ||| [function_1] rpyc data [arg_2] data	count=2
function	writes a ||| write file	count=1
arg	down [arg] ||| src [arg]	count=2
function	focus ||| focus	count=1
arg	and comments returns a ||| min_priority max_priority common_only	count=1
arg	name of the ||| name	count=1
function	ren'py to restart ||| full restart	count=1
function	[function_1] transform event ||| [function_1] [function_2]	count=1
arg	true if name ||| name	count=2
function_arg	[function_1] label ||| [function_1] [arg_2]	count=5
function	input the list of ||| group	count=1
arg	a child displayable which ||| time child	count=1
function	list ||| traceback list	count=1
function	rectangle ||| rect	count=1
function	files that ||| files	count=1
function	attributes returns ||| apply attributes	count=1
arg	canonical name ||| name wanted	count=2
function	invoking a quit ||| quit event	count=1
function	bytecode cache ||| bytecode	count=1
function	screenshot ||| screenshot	count=5
class	rollback ||| rollback	count=6
function	[function_1] screen ||| [function_1] [function_2]	count=5
function_arg	[function_1] [arg_2] ||| core [function_1] [arg_2]	count=1
arg	named name will ||| name	count=1
module	and merges it into ||| core	count=1
function	missing translations ||| missing	count=1
arg	thing and reports an ||| thing	count=1
function_arg	screen [arg_2] ||| [function_1] [arg_2]	count=5
class	of advcharacter to ||| advcharacter	count=1
module	the filename attribute to ||| core	count=1
function_arg	channel named [arg_2] ||| [function_1] [arg_2]	count=1
function	input state and text ||| text	count=1
arg	child to ||| child	count=1
class	segment that this ||| segment	count=1
function	screen widget id ||| screen id	count=1
arg	size this ||| size dest	count=1
function_arg	[function_1] given source ||| [arg_2] [function_1]	count=1
arg	[arg_1] before after ||| [arg_1] [arg_2]	count=1
function	[function_1] is empty ||| [function_2] [function_1]	count=4
function	updates the state ||| update state	count=3
arg	to [arg] ||| [arg]	count=2
function	[function_1] pin is ||| [function_2] [function_1]	count=1
function	list of all slots ||| list	count=1
arg	displayable d, ||| d	count=2
arg	state if one exists ||| state	count=1
arg	the user returns true ||| full	count=1
function	associated with ||| set	count=1
function	used to pan ||| pan	count=1
module	rolls back ||| core	count=1
function	choice [function_2] ||| [function_1] [function_2]	count=1
function	the transient display list ||| transient	count=1
class	[class_1] screen ||| [class_1] [class_2]	count=1
function_arg	compiles [arg_2] ||| [arg_2] [function_1]	count=3
function	other :name renpy ||| pop call	count=1
class	of an image if ||| shown image info	count=1
function	restart returning the ||| full restart	count=1
arg	will take [arg] ||| time [arg] end_identity	count=3
function	of the image ||| image	count=1
arg	[arg_1] a child ||| [arg_2] [arg_1]	count=3
arg	[arg_1] logfile without ||| [arg_1] [arg_2]	count=2
function	list of image ||| image	count=1
module_class	the current logical ||| core lexer get	count=1
module	end ||| display	count=1
arg	and a layer ||| layer atl	count=1
function_arg	the screenshot [arg_2] ||| [arg_2] [function_1]	count=1
function	predict ||| predict	count=2
function	rpyc file ||| rpyc data	count=1
module	text ||| text	count=3
function	the supplied [function] to unicode ||| unicode [function]	count=1
function	ensures path is open ||| open	count=1
function	state of that ||| state	count=1
arg	name [arg_2] ||| [arg_2] [arg_1]	count=1
arg	[arg_1] from ||| [arg_2] [arg_1]	count=3
function	given a paragraph ||| paragraph	count=1
function	the style object ||| style	count=1
function	is playable on ||| playable	count=1
class	window is created ||| interface	count=1
function	self constant to true ||| constant	count=1
function	[function_1] of files ||| [function_1] [function_2]	count=3
function_arg	bmfont with ||| bmfont name	count=1
class	them in arbitrary order ||| file location	count=1
function	[function] in ||| [function] dialogue	count=2
function_arg	a render [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] [arg_2] in the screen ||| [function_1] properties [arg_2] screen layer	count=1
function	merge ||| merge	count=1
function	named ||| call	count=1
arg	[arg_1] language if ||| [arg_2] [arg_1]	count=1
module_class	inside the rollback ||| core rollback log	count=1
arg	non-empty save ||| regexp	count=1
arg	roots ||| roots	count=1
class	them in arbitrary order ||| file	count=1
function	:doc image_func returns a [function_1] [function_2] have been defined ||| [function_1] [function_2]	count=1
arg	times [arg] ||| gt [arg]	count=1
function	new context and ||| in new context	count=1
class	and the log ||| rollback log	count=1
function	to purge [function_2] ||| [function_1] [function_2]	count=1
function	and archive [function_2] ||| [function_2] [function_1]	count=1
function_arg	keyword [arg_2] ||| [arg_2] [function_1]	count=1
function	time ||| set times	count=1
function	the focus ||| focus	count=1
class	init/loads the ||| script	count=1
module_class	of seconds or ||| display interface	count=1
arg	the glyphs ||| glyphs	count=2
module	of its ||| display	count=1
arg	over a child displayable ||| endpos time child	count=1
function_arg	color [function_1] [arg_2] ||| color [function_1] [arg_2]	count=6
function	variants of the ||| variants	count=1
function	new [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] no arguments ||| [function_2] [function_1]	count=4
class	method raises this displayable ||| drag	count=1
function	a paragraph a list ||| paragraph	count=1
class	segment [class_2] ||| [class_2] [class_1]	count=8
arg	true if [arg] save slot ||| [arg]	count=1
arg	slot of a ||| slot	count=1
arg	within [arg] ||| dest x y [arg]	count=2
function	the fullscreen mode ||| toggle fullscreen	count=1
function_arg	next node [arg_2] ||| [arg_2] [function_1]	count=1
class	@param ||| zoom common	count=1
function	is called to freeze ||| freeze	count=1
function	not [function_2] ||| [function_2] [function_1]	count=1
function	the strings in ||| get strings	count=1
arg	s as ren'py ||| s filename	count=1
function_arg	[function_1] a child ||| [function_1] [arg_2]	count=3
arg	is expected ||| loc l parent	count=1
function_arg	[function_1] slotname, ||| core slot [function_1] [arg_2]	count=2
arg	if the [arg] ||| [arg]	count=2
class	in ||| file	count=2
function	set [function_2] ||| [function_2] [function_1]	count=1
module	currently-focused ||| display	count=1
arg	of reachable objects and ||| reachable wait	count=1
arg	before [arg] ||| [arg]	count=1
class	a sprite ||| sprite manager	count=1
function	a list [function_2] ||| [function_1] [function_2]	count=3
function_arg	a bmfont [arg_2] ||| [function_1] [arg_2]	count=3
class	the ||| script	count=1
function_arg	line [arg_2] ||| [arg_2] [function_1]	count=1
arg	type cls ||| cls	count=1
function	takes a screenshot ||| screenshot	count=1
module	a string of the ||| display	count=1
arg	of the flattened list ||| nodes	count=1
function	the strings in the ||| get strings	count=1
class	rolls ||| rollback	count=1
arg	if args is ||| args	count=1
function_arg	[function_1] [arg_2] ||| [function_1] layer [arg_2]	count=9
arg	other this attempts to ||| prefix_tag image_tag not_showing layer	count=1
function	[function_1] is not ||| [function_1] [function_2]	count=1
class	tries ||| lexer	count=5
function_arg	[function_1] language ||| [arg_2] [function_1]	count=4
module	if the pygame ||| display	count=1
function	finds the strings ||| strings	count=1
function	position a keyword is ||| keyword	count=1
class	this rolls back ||| rollback	count=1
function	a list of files ||| translate list files	count=1
arg	with ||| name	count=2
arg	s with ||| s	count=1
arg	context ||| context	count=2
class	[class] this ||| sprite [class]	count=2
arg	part ||| layer force	count=1
class	need analysis ||| script	count=1
function_arg	of python code ||| python code	count=1
function	[function_1] all ||| [function_1] [function_2]	count=5
function	init/loads ||| init	count=1
function	of the code ||| code	count=1
arg	of ||| nodes	count=1
arg	instances [arg] ||| [arg]	count=2
module	time [module] time ||| [module]	count=1
function	writes the md5 ||| write rpyc md5	count=2
function_arg	[function_1] delay seconds ||| [function_1] [arg_2]	count=2
function	the state of that ||| state	count=1
function	this converts [function] lists ||| [function]	count=1
function	method interpolates between this ||| interpolate	count=3
function	[function_1] strings command ||| [function_2] [function_1]	count=2
class	file ||| file	count=6
function	to ||| to	count=1
module	with [module] name ||| [module]	count=1
class	may want to rollback ||| rollback log	count=1
function	returns a list of ||| translate list	count=1
arg	image_func :name renpy ||| name exact	count=1
function	screen ||| get screen	count=1
module	we want in the ||| core	count=1
arg	and linenumber ||| linenumber	count=1
arg	[arg_1] before ||| [arg_2] [arg_1]	count=1
arg	the displayable d, and ||| d	count=1
module_class	of the [class_2] ||| [module_1] [class_2] get	count=3
function	the context object ||| context	count=1
module_class	[module_1] compiled ||| [module_1] [class_2]	count=2
function	compile [function] transforms ||| compile [function]	count=1
module	proportional from [module] edge ||| [module]	count=1
function	draw ||| draw	count=2
arg	game if the label ||| label	count=1
function	that a choice is ||| choice	count=1
function	kill all ||| kill	count=1
function	:doc [function] this ||| [function]	count=1
module	of statements and stores ||| translation	count=1
arg	and comments returns ||| min_priority max_priority common_only	count=1
function	group if ||| group	count=1
class	them in arbitrary ||| file	count=1
function	to pan over a ||| pan	count=1
function_arg	[function_1] id ||| [arg_2] [function_1]	count=2
function	of the screen ||| screen	count=1
function	dynamic stack ||| dynamic	count=1
arg	slot of ||| f slot	count=1
function	all [function_2] ||| [function_1] [function_2]	count=4
function	dynamic stack called when ||| dynamic	count=1
function	to [function] returns ||| [function]	count=2
function	[function_1] constructors to ||| [function_2] [function_1]	count=5
class	prefix of an image ||| shown image	count=1
module	:doc other ||| display	count=1
function	be redrawn in full ||| full redraw	count=1
function	line numbers ||| linenumbers	count=1
function	rate of the ||| rate	count=1
function	expect ||| expect	count=1
function_arg	call [arg_2] ||| [function_1] [arg_2]	count=1
function	case where an ||| dump	count=1
class	initialize this script ||| script	count=1
arg	of the flattened ||| nodes	count=1
class	reverts the [class] to the ||| [class]	count=1
function	current physical location ||| location	count=1
class	information about ||| node	count=1
arg	ts ||| ts	count=2
function	this sets ||| set	count=2
function	the clean stores ||| make clean stores	count=1
arg	ts ||| ts d	count=1
module	arbitrary order ||| core	count=1
function	[function_1] attributes associated ||| [function_1] [function_2] layer tag	count=1
function	the hls ||| hls	count=1
arg	the [arg] can be ||| [arg]	count=1
function_arg	at [arg_2] ||| [arg_2] [function_1]	count=1
class	the ||| rollback	count=2
function	expect a ||| expect	count=1
arg	code immediately ||| code	count=1
function_arg	[function_1] [arg_2] ||| [function_1] missing [arg_2]	count=2
arg	to the user ||| full	count=1
function	to execute ||| execute	count=1
function	be [function] ||| add to [function]	count=1
function	list of files that ||| list files	count=1
class	displayable to the ||| drag	count=1
function_arg	[function_1] [arg_2] ||| [function_1] ev [arg_2]	count=3
function	returns the displayable on ||| get	count=2
function	writes the dialogue ||| write dialogue	count=3
function_arg	[function_1] [arg_2] match ||| [function_1] [arg_2]	count=6
arg	displays ||| items set_expr	count=1
function	start of ||| start	count=1
function	draw routine ||| draw	count=1
function	[function_1] tags that ||| display [function_1] [function_2]	count=2
arg	system back ||| force	count=1
arg	x and ||| x	count=1
function	draw [function_2] ||| [function_1] [function_2]	count=3
function	expect a block ||| expect	count=1
function	the line must exist ||| line	count=1
class	segment ||| space segment	count=2
class	screen named ||| screen profile	count=1
arg	attempts to find ||| prefix_tag image_tag not_showing layer	count=1
function	loads all ||| load all	count=2
module	returns ||| core	count=1
function_arg	[function_1] word ||| [function_1] [arg_2]	count=2
function_arg	[function_1] [arg_2] the slot is ||| core slot [function_1] [arg_2]	count=2
function	a block ||| block	count=1
class	image ||| image info	count=1
function_arg	[function_1] t seconds ||| [arg_2] [function_1]	count=1
function	a say ||| scry say	count=1
arg	expressions and a layer ||| layer	count=1
function_arg	[function_1] old ||| [arg_2] [function_1]	count=2
module	be found ||| core	count=1
arg	takes a clean copy ||| clean	count=1
arg	from slot in ||| slot	count=1
function	loads [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] draw constructors ||| [function_2] [function_1]	count=4
arg	if ||| rollback context	count=1
function	parses a ||| parse	count=3
arg	prints a ||| min_priority max_priority common_only	count=1
arg	the value [arg] ||| [arg]	count=3
function	and line number of ||| line	count=1
function	to the [function] ||| [function] physical	count=1
function	new [function_2] ||| [function_1] [function_2]	count=3
function_arg	context and [arg_2] ||| [function_1] [arg_2]	count=4
arg	node ||| node	count=2
function	notify ||| notify	count=1
function	[function] up ||| [function]	count=1
arg	[arg] is the ||| [arg]	count=3
function	the start [function_2] ||| [function_2] [function_1]	count=3
function	numbers in ||| linenumbers	count=1
function_arg	an event [arg_2] ||| [function_1] ev [arg_2]	count=1
module	the block the ||| core	count=1
arg	to these ||| ignore_errors	count=1
class	in them in ||| file location	count=1
arg	the old node ||| old	count=1
function	scene ||| scene	count=1
function_arg	other [arg_2] ||| [arg_2] [function_1]	count=1
function	purge objects that ||| purge	count=1
function	[function] of this ||| [function]	count=11
class	order ||| location	count=1
module_class	[module_1] current ||| [module_1] [class_2]	count=17
arg	channel is ||| channel	count=1
arg	memory profiles [arg] surface and ||| [arg]	count=1
class	giving ||| on	count=1
module_class	advances the current ||| core lexer	count=1
arg	the canonical name ||| name wanted	count=2
class	location containing ||| multi location	count=2
arg	so ||| flag	count=1
function	[function_1] constructors ||| [function_2] [function_1]	count=5
arg	the system to ||| translate force	count=1
module	advances the ||| core	count=1
function	returns true if a ||| has	count=1
arg	columns in ||| rows padding transpose	count=1
function_arg	other [arg_2] ||| [function_1] autosave [arg_2]	count=1
function	none if the line ||| line	count=1
arg	[arg_1] language ||| [arg_2] [arg_1]	count=1
class	names are ||| lists	count=1
function	fullscreen mode ||| fullscreen	count=1
function	say [function_2] ||| [function_2] [function_1]	count=1
function	compiles ||| compile expr	count=1
function	[function_1] state to ||| [function_2] [function_1]	count=2
module	the text input ||| display	count=1
class	new sprite for ||| sprite	count=1
function_arg	[function_1] [arg_2] may only contain ||| [function_1] [arg_2]	count=3
class	with some ||| node	count=1
function	cause deferred rollback to ||| do deferred rollback	count=1
function	back to ||| rollback	count=1
function	cutscene for the ||| cutscene	count=1
function_arg	same point [arg_2] ||| [function_1] state [arg_2]	count=2
arg	times [arg] is the ||| [arg]	count=1
function	pan over ||| pan	count=1
function	parse a function ||| parse	count=2
function	loadsave copies the save ||| copy save	count=1
function	of image [function_2] ||| [function_2] [function_1]	count=8
arg	with tag exists ||| tag	count=1
function	[function_1] pointer or ||| [function_2] [function_1]	count=4
function	a checkpoint which means ||| checkpoint	count=1
arg	bounding area ||| width	count=1
function	returns a [function_2] ||| [function_2] [function_1]	count=8
function	called to cause deferred ||| do deferred	count=1
arg	a font ||| font	count=1
function_arg	music start [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] name [arg_2]	count=3
arg	s as ren'py script ||| s	count=1
arg	the given ||| tag	count=1
class	node ||| node	count=5
function	[function_1] properties ||| [function_2] [function_1]	count=2
arg	x and [arg_2] ||| [arg_1] [arg_2]	count=1
function	replace this ||| replace hsv	count=1
arg	this channel as ||| channel	count=1
function	clean ||| clean	count=1
function	call to ||| call	count=1
function	a call ||| call	count=1
function	deprecated music ||| music	count=2
function	textures and ||| textures and	count=2
function	[function_1] rpt files ||| [function_1] [function_2]	count=2
class	general ||| node	count=1
function	nesting [function_2] ||| core context [function_1] [function_2]	count=1
function	[function_1] draw ||| [function_2] [function_1]	count=4
module	be ||| core	count=2
function	registers [function_2] ||| [function_2] [function_1]	count=2
function	advances this ||| advance	count=1
module_class	the editor this ||| core editor	count=1
function	pixels by which rectangles ||| area	count=1
function	reports an ||| report	count=1
function	a count ||| count	count=1
function	parses a comma-separated list ||| parse	count=1
arg	the system back to ||| force	count=1
class	string giving ||| on	count=1
class	slots ||| file location	count=1
arg	white ||| white	count=1
class	with savefiles in ||| location	count=1
function_arg	render that [arg_2] ||| [function_1] [arg_2]	count=1
arg	from the object ||| wait	count=1
arg	before after ||| before after	count=1
function	cache pin is ||| cache pin	count=2
function	textures and [function_2] ||| [function_2] [function_1]	count=4
function	list of image tags ||| image	count=1
function	[function_1] [function_2] the ||| core [function_2] [function_1]	count=9
arg	black ||| black	count=1
function	this attempts to ||| focus	count=1
module	at the ||| display	count=2
function	an ast ||| ast	count=3
function	game [function_2] ||| [function_2] [function_1]	count=1
class	code ||| python	count=2
class	[class_1] or else ||| [class_1] [class_2]	count=1
arg	number of columns in ||| rows padding transpose	count=1
arg	report that a command ||| description	count=1
function	parses an image ||| parse image	count=2
function	should be [function] ||| add to [function]	count=1
function	when the queue ||| queue	count=1
arg	the label ||| label	count=1
function	pin is deprecated ||| pin	count=1
function	to cause deferred rollback ||| do deferred rollback	count=1
function	at the start of ||| start	count=1
arg	[arg_1] child displayable ||| [arg_1] [arg_2]	count=2
arg	start ||| start	count=1
class	segment that ||| displayable segment	count=2
function	[function_1] a block ||| [function_1] [function_2]	count=2
function	[function] of this ||| set [function]	count=2
function	find the coordinates ||| coordinates	count=1
arg	of linenumber ||| linenumber	count=1
arg	[arg_1] to language ||| [arg_1] [arg_2]	count=1
function	coordinates of the currently-focused ||| coordinates	count=1
function	loadsave copies the save ||| save	count=1
arg	hold_time [arg_2] ||| [arg_2] [arg_1]	count=1
class	state ||| state	count=1
function	and purges ||| purge unreachable	count=1
function	[function_1] transform to ||| [function_2] [function_1]	count=4
class	parser ||| parser	count=1
class	displayable if ||| displayable	count=1
function	cartesian coordinates ||| cartesian	count=1
arg	grabbed displayables ||| roots	count=1
arg	screens the programmatic ||| _screen_name	count=1
arg	surface src ||| src	count=1
function	[function_1] drag ||| [function_1] [function_2]	count=1
class	of this [class] and ||| [class]	count=2
function	[function_1] prediction ||| [function_1] [function_2]	count=4
arg	the logfile without the ||| append developer flush	count=1
class	is intended to ||| advcharacter	count=1
function	text [function_2] ||| [function_2] [function_1]	count=2
class	performs analysis on ||| analysis	count=1
function_arg	removes [arg_2] ||| [function_1] line filename [arg_2]	count=2
function_arg	[function_1] non-empty save ||| [function_1] slots [arg_2]	count=3
function	a count [function_2] ||| [function_2] [function_1]	count=3
function	rtl ||| rtl	count=1
arg	[arg_1] these parameters ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] variant name [arg_2]	count=1
arg	fn relative to the ||| fn	count=1
function	[function_1] lines ||| [function_2] [function_1]	count=1
class	displayable to ||| displayable	count=2
function	[function_1] string at ||| [function_2] [function_1]	count=4
function_arg	same point [arg_2] ||| [arg_2] [function_1]	count=2
arg	to report that ||| description	count=1
function_arg	[function_1] channel ||| [arg_2] [function_1]	count=6
function_arg	writes [arg_2] ||| [arg_2] [function_1]	count=4
arg	[arg_1] from ||| [arg_1] [arg_2]	count=3
function	registers ||| register	count=3
function_arg	[function_1] and ||| [arg_2] [function_1]	count=3
arg	screen ||| screen id	count=1
arg	function ||| function src	count=1
function	[function_1] missing translations ||| [function_2] [function_1]	count=2
function	a variant screen ||| get screen variant	count=2
arg	memory profiles [arg] surface ||| [arg]	count=1
function	[function_1] draw ||| [function_1] [function_2]	count=4
function	called to freeze the ||| freeze	count=1
function	a new context ||| invoke in new context	count=1
function	loop ||| loop	count=1
arg	s [arg_2] ||| [arg_1] [arg_2]	count=3
function	[function_1] ast ||| [function_2] [function_1]	count=2
function	the user has seen ||| seen	count=2
arg	to language ||| language	count=1
function	numbers in the the ||| linenumbers	count=1
function	that the screen ||| screen	count=1
arg	programmatic ||| _screen_name	count=1
function	init but before ||| post init	count=2
function	other jump the mouse ||| mouse	count=1
function	debug returns ||| get	count=1
arg	child displayable which is ||| startpos endpos time child	count=1
function	other attempts to set ||| set	count=1
function	se_call causes [function] ||| return [function]	count=1
module	to the end ||| display	count=1
function	to user input ||| core	count=1
function	refresh rate of ||| refresh rate	count=2
function	called to purge objects ||| purge	count=1
arg	a layer tag and ||| layer tag	count=1
function	the state to that ||| state	count=1
function	of draw [function_2] ||| [function_1] [function_2]	count=3
function	current context and ||| context	count=1
module_class	of the [class_2] ||| [module_1] [class_2]	count=11
function	[function_1] variants ||| [function_1] screen [function_2]	count=2
module	in them in arbitrary ||| core	count=1
function	numbers in the ||| linenumbers	count=1
arg	position in ||| position	count=1
arg	from the screen on ||| screen id	count=1
class	to return ||| node	count=1
function_arg	[function_1] [arg_2] ||| color [function_1] hsv [arg_2]	count=10
module	:doc screens causes ren'py ||| core	count=1
arg	[arg_1] given details ||| [arg_2] [arg_1]	count=2
class	seconds ||| interface	count=1
function_arg	[function_1] s to ||| [function_1] [arg_2]	count=3
arg	base ||| base	count=1
module	of all slots ||| core	count=1
function	compiles ||| compile	count=2
function	queue ||| queue	count=1
function_arg	screen [arg_2] ||| [function_1] variant name [arg_2]	count=1
function	this registers an sfont ||| register sfont	count=1
function	purge objects [function_2] ||| [function_2] [function_1]	count=2
function	list of ||| translate list	count=1
function_arg	[function_1] fn relative ||| [function_1] [arg_2]	count=1
arg	with filename [arg_2] ||| [arg_2] [arg_1]	count=3
function	[function_1] mouse position ||| [function_1] [function_2]	count=1
arg	by cropping [arg] rect, where ||| rect [arg]	count=1
class	the image ||| image	count=1
arg	slotname ||| slotname	count=2
arg	size [arg_2] ||| [arg_1] [arg_2]	count=1
arg	filename ||| filename test	count=1
function	of prediction to ensure ||| prediction	count=1
function	error occurs ||| error	count=1
function	[function_1] whitespace ||| [function_2] [function_1]	count=1
function	finish ||| finish	count=1
class	given ||| scene	count=1
arg	label is not found ||| label	count=1
function_arg	string [arg_2] ||| [arg_2] [function_1]	count=6
function_arg	[function_1] channel to ||| [function_1] value [arg_2]	count=2
function	custom ||| custom	count=1
function	traceback [function_2] ||| utf8 [function_1] [function_2]	count=1
class	information ||| node	count=1
function	run ||| run	count=1
class	to this [class] ||| [class]	count=3
function	either relative to ||| elide	count=1
function_arg	list of [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] s ||| [function_1] [arg_2]	count=5
function	the coordinates ||| coordinates	count=1
function	get the [function] given ||| [function]	count=1
arg	kwargs [arg_2] ||| [arg_1] [arg_2]	count=3
function	[function_1] of prediction ||| [function_1] [function_2]	count=4
class	actually ||| swdraw	count=2
function	a paragraph ||| paragraph	count=1
function	of a [function] statement ||| [function]	count=1
function	missing a from clause ||| missing	count=1
function	is not ||| not	count=1
arg	function ||| function src dst	count=1
function	autosave to occur ||| autosave	count=1
class	segment that ||| segment	count=1
arg	[arg_1] tag and ||| [arg_1] [arg_2]	count=3
function	loads [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] last ||| [function_1] [function_2]	count=2
function	[function_1] line number ||| [function_1] [function_2]	count=5
class	segment ||| segment	count=5
arg	with [arg_2] ||| [arg_2] [arg_1]	count=2
function	cache ||| cache	count=3
function	paragraph a list ||| paragraph	count=1
function_arg	list [arg_2] ||| [function_1] slots [arg_2]	count=1
arg	as a floating-point ||| precision	count=1
function	pause [function_2] ||| [function_1] [function_2]	count=1
arg	trans before [arg_2] ||| [arg_1] [arg_2]	count=1
function	displayable on ||| displayable by tag	count=1
arg	a layer tag ||| layer tag	count=2
class	[class_1] draggroup ||| [class_2] [class_1]	count=2
module	the context at the ||| display	count=1
class	this [class] and all ||| [class]	count=1
arg	trans before ||| trans before	count=2
function	channel named ||| channel	count=1
class	savefiles ||| location	count=1
function	variants ||| variants	count=1
function	is coming up soon ||| for skipping	count=1
arg	language if languages is ||| language	count=1
function	the traceback [function_2] ||| utf8 [function_1] [function_2]	count=1
function_arg	screen [arg_2] ||| [function_1] variants [arg_2]	count=1
function	image_fonts this registers a ||| register	count=1
class	drag to [class_2] ||| [class_1] [class_2]	count=1
function	image that can be ||| image	count=1
function	restart ||| full restart	count=1
class	this ||| drag	count=1
function	cutscene ||| cutscene	count=1
function	to ||| child	count=1
class	a drag [class_2] ||| [class_2] [class_1]	count=1
function	called to freeze ||| freeze	count=1
function_arg	[function_1] named name ||| [arg_2] [function_1]	count=3
module	of config minimum_presplash_time ||| display	count=1
arg	on the layer ||| layer	count=2
function	causes ren'py to start ||| start	count=1
class	of all slots ||| file location	count=1
function	returns an x y ||| get	count=1
arg	layer ||| layer atl	count=1
class	screen named name, ||| screen	count=1
function	get the ||| get	count=1
arg	transform that ||| transform	count=1
function	the traceback ||| traceback	count=1
arg	with name is ||| name	count=1
arg	and invokes the ||| callable	count=1
arg	cropping [arg] ||| rect [arg]	count=1
function	full ||| full	count=2
function	an event ||| event	count=1
class	segment that this spacesegment ||| segment	count=1
function	pair giving the filename ||| filename	count=1
module_class	[module_1] editor ||| [module_1] [class_2]	count=4
function_arg	calls a [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	path [arg_2] ||| [arg_2] [function_1]	count=2
function	run anymore while handling ||| run	count=1
function	is a checkpoint which ||| checkpoint	count=1
class	all ||| file location	count=1
function	as the side image ||| side image	count=1
function	showing ||| showing	count=1
arg	and a layer or ||| layer atl	count=1
function	command takes [function_2] ||| [function_2] [function_1]	count=2
arg	exception [arg] ||| short [arg]	count=2
class	about the ||| node	count=1
function	in ||| in	count=1
arg	if args ||| args	count=1
arg	a pygame surface containing ||| surftree fullscreen_video	count=1
function	the merge ||| merge	count=1
function	all variants ||| all screen variants	count=1
class	returns ||| file location	count=1
module	with some ||| core	count=1
function	rate of the current ||| rate	count=1
function	[function_1] of missing ||| [function_2] [function_1]	count=2
function_arg	an [function_1] [arg_2] only contain ||| [function_1] [arg_2]	count=3
function	the text tags ||| text tags	count=2
function_arg	the type [arg_2] ||| core correct [function_1] [arg_2]	count=7
function	a checkpoint ||| checkpoint	count=1
function	[function_1] of prediction ||| [function_2] [function_1]	count=4
function	reports ||| report parse	count=1
function_arg	color [function_1] [arg_2] ||| color [function_1] hls [arg_2]	count=4
function_arg	[function_1] data data ||| [arg_2] [function_1]	count=4
function	filename and ||| filename	count=1
function	performs ||| perform	count=1
arg	to label ||| label	count=1
class	an object with ||| node	count=1
module_class	the [class_2] ||| [module_1] [class_2]	count=71
arg	value of this ||| value	count=1
arg	save slot (the save ||| regexp	count=1
function	[function_1] tags ||| display [function_1] [function_2]	count=2
function	anchor ||| anchor	count=1
arg	with a font ||| font	count=1
class	node that should be ||| node	count=1
function	restart returning ||| restart	count=1
function_arg	[function_1] of the ||| [function_1] [arg_2]	count=3
function	ultimate target of ||| target	count=1
class	script ||| script	count=2
function	this attempts to find ||| focus	count=1
module	time with the ||| display	count=1
arg	invokes ||| callable	count=1
arg	d, then ||| d	count=1
function_arg	[function_1] [arg_2] the ||| [function_1] [arg_2]	count=2
function	history entries to _history_list ||| history	count=1
function	creates a texture ||| texture	count=1
function	parses a block ||| parse block	count=3
function	translates interface string ||| translate string	count=1
function	a texture ||| texture	count=1
function	kill [function_2] ||| [function_2] [function_1]	count=6
function	line must exist and ||| line	count=1
class	this layout is ||| layout	count=1
function	[function_1] the filename ||| [function_2] [function_1]	count=1
function	remove entries from _history_list ||| pop history	count=1
function	side ||| side	count=1
class	slots with ||| file location	count=1
function	[function_1] files that ||| [function_1] [function_2]	count=3
function	[function_1] [function_2] as an integer ||| [function_1] [function_2]	count=3
function	style object ||| style	count=1
function	to set [function_2] ||| [function_1] [function_2]	count=1
function	missing a ||| missing	count=1
function	the supplied [function] to ||| unicode [function]	count=1
function	screenshot of ||| take screenshot	count=1
class	window is ||| interface	count=1
arg	and y ||| y duration	count=1
arg	ev is ||| ev	count=1
function	a quit ||| quit	count=1
arg	kwargs to [arg_2] ||| [arg_2] [arg_1]	count=3
class	the data information ||| rollback	count=1
module	files also updates the ||| core	count=1
function	this writes ||| write	count=1
class	the random numbers ||| det random	count=2
arg	the system back ||| force	count=1
arg	[arg_1] d, then ||| [arg_2] [arg_1]	count=2
class	with savefiles ||| location	count=1
arg	old [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] transform that ||| [function_1] [arg_2]	count=1
arg	object for name ||| name candidates	count=2
function	layer ||| by tag	count=1
arg	thing ||| thing	count=1
arg	trans before after ||| trans before after new_widget	count=1
arg	[arg_1] keysym ||| [arg_1] [arg_2]	count=1
function	strings in the ||| get strings	count=1
module	the currently ||| display	count=1
class	cache ||| cache	count=1
function	command takes no ||| takes no	count=2
function	using the [function] screen ||| [function]	count=1
module	to return ||| core	count=1
function	event ||| event	count=1
function	[function_1] the md5 ||| [function_1] rpyc [function_2]	count=1
function	surface and texture memory ||| memory	count=1
arg	info objects ||| wait	count=1
function	the save ||| save	count=1
function	writes the [function_2] ||| [function_1] rpyc [function_2]	count=4
function_arg	returns the [arg_2] ||| [function_1] displayable by name [arg_2] name	count=2
arg	called to update ||| update	count=1
arg	given a layer ||| layer	count=1
class	persistent data ||| persistent	count=2
arg	l ||| l	count=3
arg	for channel to value ||| value channel	count=1
function	last nodes in nodes, ||| last	count=1
function_arg	an ast [function_1] [arg_2] only contain ||| [function_1] [arg_2]	count=6
arg	the given channel ||| channel	count=1
arg	the surface src ||| src	count=1
function	open python file object ||| load	count=1
module	to find ||| display	count=1
function	a number if that ||| number	count=1
function	variant screen ||| get screen variant	count=2
function	playable on the ||| playable	count=1
function	attempts to find ||| focus	count=1
arg	the string s ||| s	count=1
arg	to pan over ||| startpos endpos time	count=1
function_arg	attributes returns [arg_2] ||| [function_1] layer tag [arg_2]	count=1
module	want in the ||| core	count=1
module	find the ||| display	count=1
function	screenshot of the current ||| screenshot	count=1
arg	given ||| filename	count=1
function	user has seen for ||| newly seen	count=1
arg	v to match ||| v	count=1
arg	the given details ||| size bold italics	count=2
class	drag_drop method raises this ||| drag	count=1
arg	d, then returns a ||| d	count=1
function	a list of files ||| list files	count=1
module_class	of the current ||| core lexer get	count=1
arg	r1 and r2 ||| r1 r2	count=3
class	arbitrary ||| file location	count=1
function	has the focus ||| focus	count=1
class	drag_drop method raises ||| drag	count=1
class	of this log ||| log	count=1
module	and ||| core	count=4
arg	rolls the system back ||| force label greedy	count=1
function	[function_1] [function_2] to the ||| [function_2] [function_1]	count=18
module	:doc other returns the ||| core	count=2
function	pygame event ||| map event	count=1
module_class	at the [class_2] ||| [module_1] [class_2]	count=2
function	python code ||| delimited python	count=1
function	returns an x ||| get	count=1
function_arg	ren'py module [arg_2] ||| [function_1] [arg_2]	count=1
arg	reachable [arg_2] ||| [arg_1] [arg_2]	count=2
arg	(the save ||| regexp	count=1
function	[function_1] rpt files ||| [function_2] [function_1]	count=2
function_arg	ui specifies [arg_2] ||| [arg_2] [function_1]	count=3
class	the log in ||| rollback log	count=1
function	used to unfreeze ||| unfreeze	count=1
function	periodic call that ||| periodic	count=1
class	[class_1] containing ||| [class_2] [class_1]	count=6
function_arg	[function_1] [arg_2] ||| [function_1] replay [arg_2]	count=2
function	paragraph a list of ||| paragraph	count=1
function	new context ||| invoke in new context	count=1
function_arg	the line [arg_2] ||| [function_1] locations [arg_2]	count=1
class	current line ||| lexer	count=1
arg	of checkpoints ||| checkpoints	count=1
module	indicates the ||| core	count=1
function	simple_expression ||| simple expression	count=1
arg	to these parameters ||| ignore_errors	count=1
arg	this is expected ||| l name	count=1
arg	with tag exists ||| tag width	count=1
function	a plausible image that ||| image exists imprecise	count=1
module_class	[module_1] given ||| [module_1] [class_2]	count=8
arg	data from [arg] returns none ||| [arg]	count=1
function	:doc context returns the [function_1] [function_2] of the current context ||| [function_1] [function_2]	count=1
function_arg	[function_1] t this ||| [arg_2] [function_1]	count=2
arg	in_time ||| in_time	count=1
function	displayable on the ||| displayable by	count=1
arg	r1 [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function] until ||| run [function]	count=3
function	takes [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] v to ||| core correct [function_1] [arg_2]	count=3
function	pan over a ||| pan	count=1
function_arg	[function_1] a word ||| [arg_2] [function_1]	count=3
module	amount of ||| display	count=1
function	contents of the image ||| image	count=1
class	to this [class_1] [class_2] ||| display [class_1] [class_2]	count=3
function	sets the name of ||| set mixer	count=1
function	the periodic call that ||| periodic	count=1
function_arg	[function_1] [arg_2] ||| [function_1] custom tags [arg_2]	count=1
function	variants of [function_2] ||| [function_2] [function_1]	count=2
function_arg	an sfont [arg_2] ||| [function_1] [arg_2]	count=3
function	translates interface string ||| string	count=1
arg	rolls the state ||| force checkpoints defer greedy	count=1
function_arg	[function_1] [arg_2] that the ||| [function_1] [arg_2]	count=2
function	purge objects [function_2] ||| [function_1] [function_2]	count=2
function	[function] have ||| get available image [function]	count=1
arg	the channel this ||| channel	count=1
function	analyzes [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] rename ||| [function_1] [function_2]	count=1
function	group if it ||| group	count=1
module	[module] initial ||| [module]	count=3
function	the fullscreen mode ||| fullscreen	count=1
function	translate that wraps ||| translate	count=1
module	as ||| core	count=1
class	image [class_2] ||| [class_1] [class_2]	count=1
function_arg	[function_1] cols the ||| [arg_2] [function_1]	count=1
function_arg	pause flag [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] context ||| [function_2] [function_1]	count=8
arg	the function ||| function src dst	count=1
function	run at init time ||| init	count=1
function	to compile [function] transforms ||| compile [function]	count=1
function	the mouse [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] linenumber from ||| [arg_2] [function_1]	count=1
arg	layer tag and ||| layer tag	count=2
module	with ||| core	count=2
function	and text [function_2] ||| [function_2] [function_1]	count=1
class	this displayable to the ||| drag	count=1
function	[function_1] variants of ||| [function_2] [function_1]	count=2
arg	this scales [arg] up ||| [arg] size	count=1
function	to user ||| core	count=1
arg	[arg_1] before after ||| [arg_2] [arg_1]	count=1
arg	and invokes the given ||| callable	count=1
function	returns the self-voicing text ||| tts	count=2
module_class	the screen named ||| display screen profile	count=1
function	the filename [function_2] ||| [function_1] [function_2]	count=2
function	replaces this ||| replace hls	count=1
class	this draggroup ||| group	count=2
function	back ||| rollback	count=2
arg	linenumber from filename ||| filename linenumber	count=3
function	[function_1] textures ||| [function_2] [function_1]	count=1
function_arg	[function_1] child displayable ||| [function_1] [arg_2]	count=2
function	converts [function] lists ||| [function]	count=1
arg	end rectange ||| end_identity after_child	count=1
function	safely [function_2] ||| [function_1] [function_2]	count=1
arg	main menu ||| transition label target	count=1
class	with ||| location	count=1
function	[function] returns ||| [function]	count=4
function	[function_1] last nodes ||| [function_1] [function_2]	count=2
function	new ||| in new	count=1
function	ren'py that a choice ||| choice	count=1
arg	if source ||| source	count=1
function	[function_1] cartesian coordinates ||| [function_1] [function_2]	count=1
arg	child displayable ||| endpos time child	count=1
function	side ||| get side	count=1
function	ui specifies ||| at	count=1
module	end of ||| display	count=1
function	execute ||| execute	count=2
arg	the given filename ||| filename	count=1
function	type of ||| type	count=1
function	executes ||| execute	count=1
function	returns ||| get	count=25
function	the implementation of shift+r ||| utter restart	count=1
arg	channel as a fraction ||| channel	count=1
function	a screenshot to be ||| screenshot	count=1
function	is ||| info	count=1
function_arg	persistent [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	[function_1] linenumber ||| [function_1] filename [arg_2]	count=2
arg	on ||| layer	count=1
function	list of ||| traceback list	count=1
function	show as the side ||| get side	count=1
arg	is expected to ||| loc l parent	count=1
class	a ||| file location	count=1
class	with ||| node	count=1
class	game ||| rollback	count=1
function	a rpyc file the ||| rpyc	count=1
function	full [function_2] ||| [function_1] [function_2]	count=2
module	called to ||| core	count=1
function	[function_1] group ||| [function_1] [function_2]	count=2
arg	language if languages ||| language	count=1
arg	[arg_1] language ||| [arg_1] [arg_2]	count=1
class	channel to ||| channel	count=1
function	drag [function_2] ||| [function_2] [function_1]	count=4
function	to find the ||| focus	count=1
class	game state ||| rollback	count=1
arg	the label is ||| label	count=1
function_arg	save [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] ty b ||| [arg_2] [arg_1]	count=2
class	method ||| drag	count=1
class	and then some ||| lexer	count=1
arg	call to target ||| target	count=1
function	string at the current ||| string	count=1
arg	this attempts to find ||| prefix_tag image_tag not_showing layer	count=1
module	intact ||| core	count=1
arg	a child displayable ||| endpos time child	count=1
function	the simple draw routine ||| draw	count=1
arg	linenumber, ||| linenumber	count=1
arg	to the user returns ||| full	count=1
function	handles an interaction ||| interact	count=1
class	a string giving ||| on	count=1
arg	position [arg_2] ||| [arg_2] [arg_1]	count=4
arg	new ||| new	count=3
module	some general user-definable information ||| core	count=1
arg	[arg_1] match ty ||| [arg_2] [arg_1]	count=2
module	init/loads ||| core	count=1
arg	a displayable d, ||| d	count=1
function	textures and [function_2] ||| [function_1] [function_2]	count=4
function	line must ||| line	count=1
arg	pygame surface containing ||| surftree fullscreen_video	count=1
module	finds the ||| core	count=1
arg	a child ||| startpos endpos time child	count=1
arg	to fn relative to ||| fn	count=1
function_arg	[function_1] d ||| [function_1] [arg_2]	count=1
function	creates a texture filled ||| texture	count=1
class	data information intact ||| rollback	count=1
class	an ast ||| slif	count=1
class	return an object with ||| node	count=1
module	:doc other causes ||| core	count=1
arg	the roots [arg_2] ||| [arg_1] [arg_2]	count=4
function	image files ||| image file	count=1
arg	to figure out the ||| width height st at	count=1
arg	node_type the type ||| node_type	count=1
function	size of the ||| size	count=1
function	:doc image_func returns [function_1] [function_2] have been defined ||| display [function_1] [function_2]	count=1
function	are the children ||| children	count=1
function	the transform ||| transform	count=1
arg	fn relative ||| fn	count=1
class	that need analysis ||| script	count=1
function	gets all [function_2] ||| [function_2] [function_1]	count=6
function	screens returns [function_2] ||| [function_2] [function_1]	count=1
function	scene ||| compute scene	count=1
function	and last nodes in ||| and last	count=1
function	intact ||| rollback	count=1
arg	over a child ||| child	count=1
function	background [function_2] ||| [function_1] [function_2]	count=1
function_arg	sets the [arg_2] ||| [arg_2] [function_1]	count=1
class	in them ||| file location	count=1
arg	and grabbed displayables ||| roots	count=1
function_arg	attributes returns [arg_2] ||| [arg_2] [function_1]	count=2
module	audio if the given ||| audio	count=1
function	quit ||| quit	count=1
function	[function_1] drag group ||| [function_2] [function_1]	count=1
function	deprecated music start ||| music start	count=2
function	(name [function] style ||| register sl [function]	count=1
function_arg	[function_1] [arg_2] only contain ||| [function_1] [arg_2]	count=3
class	of an image that ||| image	count=1
function	rollback ||| rollback	count=6
function	renpy_edit_py file ||| init	count=1
module	:undocumented toggles the ||| core	count=1
function	[function_1] of files ||| [function_2] [function_1]	count=3
function	a screenshot ||| screenshot	count=2
function	[function_1] last ||| [function_2] [function_1]	count=2
function_arg	store [arg_2] ||| [arg_2] [function_1]	count=1
function	the top of ||| top	count=1
arg	transform that is applied ||| transform	count=1
arg	true if node ||| node	count=1
function_arg	[function_1] code ||| [function_1] [arg_2]	count=4
function	a quit ||| quit event	count=1
function	compiles the ||| py compile	count=1
function_arg	color [function_1] [arg_2] ||| color [function_1] hsv other [arg_2]	count=2
module_class	[module_1] image ||| [module_1] [class_2]	count=2
arg	on layer, ||| height layer	count=1
function	will ||| predict	count=1
arg	imspec a triple consisting ||| imgspec	count=2
module	rolls back only the ||| core	count=1
arg	to value ||| value	count=1
function_arg	[function_1] non-empty save ||| [arg_2] [function_1]	count=3
arg	code ||| code	count=2
function	execute and ||| execute	count=1
function_arg	text [arg_2] ||| [function_1] [arg_2]	count=3
function	to finish [function_2] ||| [function_1] [function_2]	count=2
arg	a child displayable which ||| endpos time child	count=1
module	:doc other this attempts ||| display	count=1
function_arg	line [arg_2] ||| [function_1] locations [arg_2]	count=1
arg	filename the filename ||| filename	count=1
function	name with attributes ||| apply attributes	count=1
class	[class_1] is ||| [class_1] [class_2]	count=1
function	returns an ||| get	count=1
module	of statements and ||| translation	count=1
arg	for language ||| language	count=1
function	the hsv ||| hsv	count=1
function_arg	[function_1] [arg_2] contain ||| [function_1] [arg_2]	count=3
function_arg	translates out of ||| take translates nodes	count=1
arg	given source ||| source	count=1
class	intact ||| rollback	count=1
arg	this is expected to ||| l name	count=1
function	returns the number of ||| get	count=1
arg	old ||| old	count=4
function	a new context ||| in new context	count=1
function	state of that transform ||| transform state	count=1
arg	line with filename ||| filename	count=1
function	a command takes no ||| takes no	count=1
module	[module] time it ||| [module]	count=2
function	[function_1] rectangle ||| [function_1] [function_2]	count=4
function	execute this ||| execute	count=1
arg	[arg_1] [arg_2] used to inform the ||| [arg_1] [arg_2]	count=8
function	that are the children ||| children	count=1
function	to [function] returns a ||| [function]	count=2
arg	[arg_1] columns in ||| [arg_1] [arg_2]	count=1
function	unicode ||| unicode	count=1
function	dialogue blocks the ||| dialogue blocks	count=2
function_arg	[function_1] [arg_2] may only contain ||| translation restructurer [function_1] [arg_2]	count=3
arg	pan over a ||| startpos endpos time	count=1
arg	from [arg] returns none ||| [arg]	count=1
function	list of [function_2] ||| [function_1] [function_2]	count=8
function	this parses a block ||| parse block	count=1
class	returns a ||| file	count=1
arg	text ||| text	count=1
function_arg	[function_1] as t ||| [function_1] [arg_2]	count=1
function	reached ||| reached	count=1
class	arbitrary ||| file	count=1
function	default drag group if ||| default drag group	count=1
arg	and linenumber, ||| linenumber	count=1
class	store and the log ||| log	count=1
function	[function_1] replaces ||| [function_2] [function_1]	count=2
arg	the system ||| force	count=2
function	get [function_2] ||| [function_2] [function_1]	count=2
arg	layer [arg_2] ||| [arg_1] [arg_2]	count=4
arg	given a layer tag ||| layer tag	count=1
function_arg	[function_1] at_list ||| [arg_2] [function_1]	count=1
module	them in arbitrary order ||| core	count=1
class	current global_label ||| lexer	count=1
module	if this [module] is a ||| [module]	count=1
function	checks the text ||| text	count=1
class	displayable if it ||| displayable	count=1
function	first [function_2] ||| [function_1] [function_2]	count=7
arg	requests screen profiling for ||| name predict show update	count=1
function_arg	[function_1] fn ||| core [function_1] [arg_2]	count=1
arg	value of this function ||| value	count=1
function_arg	type [arg_2] ||| core correct [function_1] [arg_2]	count=7
function	advances this lexer ||| advance	count=1
arg	version of the image ||| image	count=1
class	savefiles in them in ||| location	count=1
function	in [function_2] ||| [function_1] [function_2]	count=1
arg	the canonical ||| wanted	count=1
function	replaces ||| replace hls	count=1
module	this displayable ||| display	count=1
function	the side ||| get side	count=1
function	a plausible image ||| image exists imprecise	count=2
function	[function_1] screen ||| [function_1] [function_2] name	count=1
function	[function] color ||| interpolate [function]	count=2
function	ren'py to start ||| start	count=1
arg	to size ||| size	count=1
arg	hold_time in_time ||| hold_time in_time	count=2
function	the data ||| rollback	count=1
function_arg	start [arg_2] ||| [function_1] [arg_2]	count=2
class	them in ||| location	count=1
module_class	the text segment ||| text displayable segment	count=1
arg	expression giving a ||| paired	count=1
arg	name is ||| name	count=1
function_arg	[function_1] of ||| [arg_2] [function_1]	count=3
module	[module] name ||| [module]	count=1
class	defines a [class_2] ||| [class_1] [class_2]	count=1
arg	used to report ||| description	count=1
arg	if name is the ||| name	count=1
function	list [function_2] ||| [function_2] [function_1]	count=3
class	the ||| drag	count=1
function	the ||| toggle	count=1
arg	kwargs to these parameters ||| kwargs ignore_errors	count=1
class	move returns true if ||| move	count=1
function	with attributes returns ||| attributes	count=1
function	restart returning the ||| restart	count=1
function	[function_1] constructors to ||| [function_1] [function_2]	count=5
function	of image tags that ||| image tags	count=1
function_arg	[function_1] named _screen_name ||| [function_1] [arg_2]	count=7
arg	or down [arg] uses ||| src [arg]	count=1
function	user has seen ||| count seen	count=1
class	image or [class_2] ||| [class_2] [class_1]	count=1
function	of files that ||| files	count=1
class	new sprite for the ||| sprite	count=1
function	returns [function_2] ||| [function_1] ordered [function_2]	count=1
function	drag group if it ||| drag group	count=1
module	the ||| core	count=47
arg	from the screen ||| screen id layer	count=1
arg	by the system to ||| translate force	count=1
function_arg	rename [arg_2] ||| [function_1] [arg_2]	count=3
function	[function_1] menu ||| [function_2] [function_1]	count=1
arg	with a font ||| font start	count=1
function	the ||| focus	count=2
arg	if name ||| name	count=2
class	when this context ||| context	count=1
function_arg	pan [arg_2] ||| [arg_2] [function_1]	count=2
arg	text the text ||| text	count=1
function	displayable to the top ||| top	count=1
module_class	of seconds ||| display interface	count=1
class	this script ||| script	count=1
function	[function_1] [function_2] ||| set [function_1] [function_2]	count=4
function_arg	interface string s ||| translate string s	count=1
arg	at position in filename ||| filename position	count=1
module_class	inside the [class_2] ||| [module_1] [class_2]	count=4
function	as the persistent ||| persistent	count=1
arg	times [arg] is ||| [arg]	count=1
function	updates the [function_2] ||| [function_2] [function_1]	count=4
function_arg	the persistent [arg_2] ||| [function_1] [arg_2]	count=3
arg	size ||| size	count=1
arg	reachable objects and ||| reachable wait	count=2
function	this registers [function_2] ||| [function_2] [function_1]	count=2
function	the merge [function_2] ||| [function_2] [function_1]	count=1
function	locations [function_2] ||| [function_2] [function_1]	count=2
function	a python ||| python	count=1
function	translates out ||| translates	count=1
function_arg	tags [arg_2] ||| [function_1] [arg_2]	count=1
arg	match ty ||| ty	count=1
arg	a layer [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	[function_1] linenumber from ||| [function_1] line filename [arg_2]	count=1
function	called to purge ||| purge	count=1
function	image_func returns [function_2] ||| [function_1] ordered [function_2]	count=1
arg	and other in ||| other fraction	count=6
arg	or down [arg] ||| src [arg]	count=2
arg	we're extracting ||| output tdf strings	count=1
function	quit ||| quit event	count=1
arg	[arg_1] ev is ||| [arg_2] [arg_1]	count=2
module	inside the ||| core	count=1
function	prediction to ensure ||| prediction	count=1
class	an ||| node	count=1
function_arg	[function_1] and ||| color [function_1] other [arg_2]	count=1
module	with [module] ||| [module]	count=1
module	:doc label this function ||| core	count=1
arg	merges [arg] which ||| [arg]	count=1
arg	thing and ||| thing name	count=1
function	other given bar_value, a [function_1] [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] cols ||| [arg_2] [function_1]	count=1
function	group if it doesn't ||| group	count=1
function_arg	the named [arg_2] ||| [function_1] [arg_2]	count=1
function	draw constructors to try ||| draw constructors	count=1
arg	with filename ||| filename	count=1
function_arg	[function_1] location ||| [function_1] [arg_2]	count=1
arg	objects ||| update	count=1
class	current text [class] up into ||| text [class]	count=1
function	the size of the ||| size	count=1
class	all slots ||| location	count=1
function	currently playing a sound ||| playing	count=1
function	to parse a function ||| parse	count=2
module	displayable to ||| display	count=1
arg	calls callback with ||| callback	count=1
arg	arguments x and y ||| x y	count=1
function_arg	attributes [arg_2] ||| [arg_2] [function_1]	count=2
function	writes the dialogue to ||| write dialogue	count=1
function_arg	[function_1] with filename ||| [function_1] [arg_2]	count=1
module	:doc label ||| core	count=1
class	layout is ||| layout	count=1
class	to this [class_1] [class_2] ||| [class_1] [class_2]	count=3
function_arg	call to [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] node ||| [function_1] [function_2]	count=1
class	random numbers ||| det random	count=2
arg	named name ||| name mixer loop stop_on_mute	count=1
function	[function] of ||| context [function]	count=1
function	loads ||| load string	count=1
function	info ||| info	count=1
class	of ||| file	count=1
function	label sets ||| set	count=1
function	a background [function_2] ||| [function_2] [function_1]	count=1
function	analyzes [function_2] ||| [function_1] [function_2]	count=1
function	method interpolates between ||| interpolate	count=3
function	freeze the ||| freeze	count=1
function_arg	an [function_1] [arg_2] only contain ||| translation restructurer [function_1] [arg_2]	count=3
module_class	the [module_1] [class_2] ||| [module_1] [class_2]	count=17
arg	trans [arg_2] ||| [arg_2] [arg_1]	count=2
arg	v ||| v	count=1
class	to rollback ||| rollback	count=1
function	of files that exist ||| files	count=1
function	matches [function] up to ||| [function]	count=1
arg	layer tag ||| layer tag	count=2
arg	and invokes ||| callable	count=1
function	its clean copy ||| clean	count=1
arg	[arg_1] in_time ||| [arg_2] [arg_1]	count=1
arg	the roots from ||| roots wait	count=2
arg	system ||| translate force	count=1
class	of an image if ||| shown image	count=1
arg	[arg_1] ty ||| [arg_1] b [arg_2]	count=2
function	displayable ||| displayable by	count=1
function	type ||| type	count=1
arg	a layer or ||| layer atl	count=1
function	with clause of a [function_1] [function_2] statement ||| [function_1] [function_2]	count=2
function	causes control to leave ||| jump out of	count=1
class	adds ||| multi location	count=1
class	filename ||| file location	count=1
module	the text input state ||| display	count=1
function	objects that are unreachable ||| unreachable	count=1
class	slots with ||| file	count=1
function	pin is ||| pin	count=1
function_arg	[function_1] [arg_2] ||| [function_1] layer tag name [arg_2]	count=9
function_arg	[function_1] [arg_2] ||| [function_1] layer tag [arg_2]	count=9
function	last nodes in ||| last	count=1
arg	the name of the ||| name	count=1
class	with some general ||| node	count=1
function	[function] to ||| clean [function]	count=1
function_arg	[function_1] object for ||| [arg_2] [function_1]	count=4
function	of image ||| image	count=2
function	causes [function] ||| return [function]	count=1
arg	[arg_1] from the ||| [arg_1] [arg_2]	count=3
arg	r2 ||| r2	count=1
function	given [function] with the ||| displayable [function]	count=1
arg	that zooms its child ||| crend x y w	count=1
arg	[arg_1] these parameters ||| [arg_1] [arg_2]	count=1
function	updates [function_2] ||| [function_2] [function_1]	count=3
arg	__path__ of package to ||| package	count=1
function_arg	screen statement ||| screen l	count=1
arg	of package to import ||| package	count=1
arg	the glyphs gt ||| gt glyphs	count=1
function	dialogue blocks ||| dialogue blocks	count=2
arg	by cropping [arg] ||| rect [arg]	count=1
arg	clause ||| i	count=1
function	[function_1] ordered in ||| [function_2] [function_1]	count=4
arg	child displayable which ||| child	count=1
module	an object with ||| core	count=1
arg	the screen ||| screen id layer	count=1
function	a shallow copy of ||| copy	count=1
function	path is open ||| open	count=1
arg	arguments x [arg_2] ||| [arg_1] [arg_2]	count=1
arg	the name ||| name	count=1
function_arg	[function_1] linenumber ||| [function_1] line filename [arg_2]	count=1
arg	system back to ||| force	count=1
class	savefiles ||| file	count=1
function	block ||| block	count=3
function	into multiple ||| split	count=1
arg	zooms its child ||| crend x y w	count=1
module	[module] can ||| [module]	count=1
class	the location [class_2] ||| [class_2] [class_1]	count=2
arg	slot ||| slot	count=2
function_arg	path to [arg_2] ||| [function_1] [arg_2]	count=3
function	name ||| name	count=2
class	names are quite ||| lists	count=1
function	copy the clean stores ||| make clean stores	count=1
function_arg	[function_1] index ||| [function_1] [arg_2]	count=1
arg	system back to the ||| force label	count=1
function_arg	[function_1] r1 and ||| [function_1] [arg_2]	count=1
arg	layer ||| layer	count=5
arg	the main menu ||| transition label target	count=1
function	a new context and ||| new context	count=1
function	into logical lines ||| logical lines	count=1
function	returns a list ||| translate list	count=1
function_arg	given [arg_2] ||| [function_1] [arg_2]	count=1
class	script from ||| script	count=1
class	load of this log ||| log	count=1
arg	attempts to find an ||| prefix_tag image_tag not_showing layer	count=1
function	the type of ||| type	count=1
module	an ||| core	count=1
module_class	advances the [class_2] ||| [module_1] [class_2]	count=2
function	this adjusts ||| adjust	count=1
module	context or the ||| core	count=1
module	:doc gesture cancels the ||| core	count=1
class	segment that this spacesegment ||| displayable segment	count=1
module_class	when the displayable ||| display displayable	count=1
function	cutscene for ||| cutscene	count=1
function	of the mouse ||| mouse	count=1
arg	used to pan over ||| startpos endpos time	count=1
function	user invoking a quit ||| quit event	count=1
function_arg	[function_1] v to ||| [arg_2] [function_1]	count=3
class	current ||| lexer	count=4
function	a transition to a ||| transition	count=1
function	pause flag ||| pause	count=2
function	unfreeze ||| unfreeze	count=1
function	command this updates dialogue ||| command	count=1
function	into logical ||| logical	count=1
function	default drag [function_2] ||| [function_2] [function_1]	count=4
arg	glyphs [arg_2] ||| [arg_2] [arg_1]	count=1
function	this parses an image ||| parse image	count=1
function	:undocumented ||| toggle	count=1
class	text [class] up ||| text [class]	count=1
arg	color and ||| fraction	count=3
function	this sets the name ||| set mixer	count=1
class	to [class_1] [class_2] ||| display [class_1] [class_2]	count=3
function	:undocumented toggles ||| toggle	count=1
class	arbitrary ||| location	count=1
function_arg	an ast [function_1] [arg_2] contain ||| [function_1] [arg_2]	count=6
arg	characters with a font ||| font	count=1
function	filename [function_2] ||| [function_1] [function_2]	count=2
function	size ||| size	count=2
arg	instances [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=5
arg	part of ||| layer	count=1
function	the displayable associated with ||| set	count=1
arg	clean copy of ||| clean	count=1
class	location ||| location	count=1
function	called [function] ||| [function]	count=2
module	and ||| sl2	count=1
function	list of ||| group	count=1
function	the state [function_2] ||| [function_2] [function_1]	count=4
function	sets the name of ||| set	count=1
function_arg	[function_1] transform ||| [function_1] [arg_2]	count=1
function	state of ||| state	count=1
function	with clause of a [function_1] [function_2] statement ||| core [function_1] [function_2] with expression callback	count=2
arg	ev is the ||| ev	count=1
module	tag on [module] given ||| [module]	count=1
function_arg	[function_1] rolls ||| [function_1] [arg_2]	count=1
arg	[arg_1] other in ||| [arg_2] [arg_1]	count=18
function	[function_1] replaces ||| [function_1] [function_2] layer index prefix	count=2
module	with some general user-definable ||| core	count=1
function	the persistent ||| persistent	count=1
arg	kwargs [arg_2] ||| [arg_2] [arg_1]	count=3
arg	ev matches ||| ev	count=1
function	[function_1] text ||| [function_1] [function_2]	count=1
function	[function_1] of image ||| [function_1] ordered [function_2]	count=2
function	to start [function_2] ||| [function_2] [function_1]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] displayable by name [arg_2] name	count=3
function_arg	translates out [arg_2] ||| [arg_2] [function_1]	count=4
function	mouse position ||| mouse pos	count=1
function	to leave ||| jump out of	count=1
function	into logical ||| list logical	count=1
function	d, ||| dynamic image	count=1
function	the [function] of the ||| context [function]	count=1
function	adds missing from clauses ||| process file	count=1
arg	objects and ||| wait	count=1
function	attributes ||| apply attributes	count=1
class	time [class] ||| [class]	count=1
function	of an image name ||| image name	count=1
function	a filename ||| filename	count=1
module_class	and height ||| display swdraw	count=1
function	block to use ||| block	count=1
function_arg	[function_1] child ||| [function_1] [arg_2]	count=2
class	returns the location ||| location	count=1
class	a new sprite ||| sprite	count=1
class	operation is performed ||| base	count=1
function	the state of ||| state	count=1
arg	of v [arg_2] ||| [arg_1] b [arg_2]	count=1
function	of draw ||| get draw	count=2
class	rolls back only the ||| rollback	count=1
function	choice ||| choice	count=1
function	takes no [function_2] ||| [function_1] [function_2]	count=1
function	the pause flag ||| pause	count=2
function	[function_1] node that ||| [function_2] [function_1]	count=1
module	data information intact ||| core	count=1
function	[function_1] rollback to ||| [function_1] [function_2]	count=3
function	this handles an interaction ||| interact	count=1
function	[function_1] [function_2] as an integer ||| [function_1] [function_2] hash	count=3
function	[function_1] string ||| [function_1] [function_2]	count=4
function	[function_1] md5 ||| [function_2] [function_1]	count=1
function	all textures and surfaces ||| textures and surfaces	count=1
arg	[arg_1] and linenumber ||| [arg_2] [arg_1]	count=1
function	reports an exception ||| report	count=1
arg	displayable d ||| d	count=2
function	prediction to ||| prediction	count=1
function_arg	[function_1] [arg_2] ||| [function_1] line filename [arg_2]	count=2
function_arg	of python [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	text of [arg_2] ||| [function_1] [arg_2]	count=7
arg	from filename ||| filename	count=1
class	is intended ||| advcharacter	count=1
arg	an exception [arg] ||| short [arg]	count=2
class	them in ||| file	count=1
arg	fn relative to ||| fn	count=1
function_arg	a call [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	rename old to ||| rename old	count=1
function_arg	[function_1] [arg_2] is ||| [function_1] [arg_2]	count=2
function_arg	[function_1] of linenumber ||| [function_1] filename [arg_2]	count=2
function_arg	color [function_1] [arg_2] ||| [function_1] [arg_2]	count=20
arg	corresponding to node ||| node	count=1
function	gets [function_2] ||| [function_1] [function_2]	count=10
module	savefiles ||| core	count=1
function_arg	[function_1] [arg_2] is ||| core slot [function_1] [arg_2]	count=2
arg	v to [arg_2] ||| [arg_2] [arg_1]	count=4
function	[function] to this ||| [function]	count=1
module	in them in ||| core	count=1
function	checkpoint which ||| checkpoint	count=1
arg	before [arg] have elapsed ||| [arg]	count=1
function	the current physical location ||| location	count=1
function	currently playing ||| playing	count=1
module_class	the log component of [module_1] [class_2] ||| [module_1] [class_2]	count=6
arg	returns the canonical name ||| name wanted	count=1
function_arg	[function_1] name ||| [function_1] [arg_2]	count=2
function_arg	the save [arg_2] ||| [arg_2] [function_1]	count=1
arg	child displayable relative to ||| child	count=1
arg	user returns ||| full	count=1
arg	part of the next ||| layer force	count=1
class	channel to load ||| channel	count=1
function	choice is ||| choice	count=1
function	the [function] ||| context [function]	count=1
arg	ev matches [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function] this ||| get all [function]	count=1
function	init/loads the bytecode cache ||| bytecode	count=1
module	ast and ||| sl2	count=1
function	the currently-focused ||| focus	count=1
function	[function] as an ||| [function]	count=3
function	predicting the [function_2] ||| [function_1] [function_2]	count=1
function	layout ||| layout	count=1
function	of [function_2] ||| [function_2] [function_1]	count=4
function	profiles object [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] widget id ||| core [function_1] [function_2]	count=1
function	other given bar_value, a [function_1] [function_2] ||| core [function_1] [function_2] bar_value	count=1
class	rollback through ||| rollback	count=1
function	sets the mouse position ||| set mouse pos	count=1
function	kill all textures ||| kill textures	count=3
class	transform ||| scene lists	count=1
function	replace ||| replace hsv	count=1
function	this gets all ||| get all	count=2
function	analyzes all statements ||| analyze	count=1
class	context ||| context	count=2
function_arg	rename old ||| rename old	count=1
function_arg	[function_1] canonical name ||| [arg_2] [function_1]	count=2
module_class	and [class_2] ||| [module_1] [class_2]	count=4
function	a choice [function_2] ||| [function_2] [function_1]	count=1
arg	calls the function ||| function src dst	count=1
function	dialogue blocks [function_2] ||| [function_2] [function_1]	count=10
class	that the [class] ||| [class]	count=3
arg	for channel ||| channel	count=2
arg	parse [arg] ||| [arg]	count=3
function	a background [function_2] ||| [function_1] [function_2]	count=1
class	some ||| lexer	count=1
class	height ||| swdraw	count=1
function	cutscene for the specified ||| cutscene	count=1
arg	of the old ||| old	count=1
function	[function] and ||| [function]	count=1
class	defines [class_2] ||| [class_2] [class_1]	count=1
function	rollback to ||| rollback	count=1
module	matches ||| core	count=1
function	as the side ||| get side	count=1
function_arg	[function_1] id ||| [function_1] [arg_2] screen layer	count=4
function	interface string ||| string	count=1
function	[function_1] rectangle ||| [function_2] [function_1]	count=4
function	other returns an ||| get	count=1
arg	child the child ||| child style	count=1
arg	hold_time ||| hold_time	count=1
arg	given source code ||| source	count=1
arg	[arg] the slot ||| [arg]	count=1
function	[function_1] a showif ||| [function_1] [function_2]	count=1
function	init [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] context ||| [function_1] [function_2]	count=8
arg	of this channel as ||| channel	count=1
function	rollback returns true if ||| rollback	count=1
function	predicting [function_2] ||| [function_2] [function_1]	count=1
arg	match ty b ||| b ty	count=2
function	a new [function_2] ||| [function_2] [function_1]	count=3
class	an object ||| node	count=1
arg	[arg] can be ||| [arg]	count=1
arg	match ty [arg_2] ||| [arg_2] [arg_1]	count=8
arg	[arg] color ||| [arg]	count=1
arg	label ||| label scope	count=1
class	move returns true ||| move	count=1
function	a transition ||| transition	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=1115
arg	over a child ||| endpos time child	count=1
arg	filename and linenumber, ||| filename linenumber	count=3
function_arg	python [arg_2] ||| [arg_2] [function_1]	count=1
function	first and [function_2] ||| [function_1] [function_2]	count=4
module	drag_group ||| display	count=1
arg	screen profiling for ||| predict show update	count=1
function	this updates the ||| update	count=1
arg	[arg_1] to new ||| [arg_1] [arg_2]	count=2
function	keyword ||| keyword	count=1
function	context object ||| context	count=1
function	[function_1] that transform ||| [function_2] [function_1]	count=4
function	allocating a number ||| number	count=1
function	registers a new ||| register	count=1
arg	cols the number ||| cols	count=1
module	general user-definable ||| core	count=1
class	mouse move returns ||| mouse move	count=2
arg	callback on this displayable ||| callback	count=1
function	first and ||| first and	count=2
function	the data information ||| rollback	count=1
class	is being laid out ||| position	count=1
module	the __path__ ||| core	count=1
arg	expression giving ||| paired	count=1
function_arg	showing on layer ||| showing layer	count=1
function	a screenshot ||| take screenshot	count=1
function	finds the strings in ||| strings	count=1
arg	[arg_1] new ||| [arg_2] [arg_1]	count=4
function_arg	bmfont with the ||| bmfont name	count=1
arg	a scope ||| scope	count=1
class	all slots with ||| file location	count=1
arg	this rolls the ||| label greedy	count=1
function	traceback list ||| traceback list	count=1
class	new sprite ||| sprite	count=1
function_arg	[function_1] to label ||| [arg_2] [function_1]	count=4
class	need ||| script	count=1
function_arg	[function_1] for language ||| [function_1] [arg_2]	count=4
class	a drag to this ||| drag	count=1
arg	string s ||| s layout	count=1
arg	[arg] can ||| [arg]	count=1
function_arg	[function_1] the roots ||| [arg_2] [function_1]	count=5
function	kill ||| kill	count=1
function	channel ||| channel	count=1
arg	is called ||| st at	count=1
class	of an image ||| image	count=2
module	the start of the ||| core	count=1
function	parse a ||| parse	count=2
arg	color ||| color	count=1
arg	of package ||| package	count=1
class	of these names are ||| lists	count=1
class	this displayable ||| displayable	count=1
arg	on layer [arg_2] ||| [arg_2] [arg_1]	count=1
arg	data from [arg] returns ||| [arg]	count=1
class	file found in ||| file	count=1
function	reports an ||| report parse	count=1
arg	from the roots ||| roots	count=1
module_class	[module_1] rollback entries ||| [module_1] [class_2]	count=8
arg	new when ||| new	count=1
function	layer that the ||| layer	count=1
arg	a layer ||| layer atl	count=1
arg	of non-empty save ||| regexp	count=1
module	of this ||| display	count=1
class	causes this node ||| node	count=1
function_arg	text tags [arg_2] ||| [arg_2] [function_1]	count=1
module	of the screen ||| display	count=1
arg	at position ||| position	count=1
function	line ||| line	count=6
function	cartesian ||| cartesian	count=1
function	python code ||| python	count=1
function	constructors ||| constructors	count=1
function	all variants of ||| all screen variants	count=1
function_arg	[function_1] l ||| [function_1] out [arg_2]	count=4
function	returns a [function_2] ||| [function_1] ordered [function_2]	count=2
arg	slot name returns a ||| slotname	count=1
function	[function_1] surfaces that ||| [function_2] [function_1]	count=4
function	translate that ||| translate	count=1
function	from being recognized ||| cancel	count=1
class	method raises ||| drag	count=1
arg	the system back ||| force label	count=1
module	appropriately taking [module] alpha ||| [module]	count=1
function_arg	string s to ||| translate string s	count=1
arg	scales [arg] up or ||| [arg] size	count=1
function	this sets the name ||| set	count=1
module	this rolls back only ||| core	count=1
arg	white and black ||| black	count=1
arg	string s ||| s	count=2
function	replace this ||| replace	count=1
arg	applies args ||| args	count=1
class	[class] with tag ||| [class]	count=1
function	screen ||| draw screen	count=1
arg	[arg_1] b ||| [arg_2] [arg_1]	count=6
function	size of ||| size	count=1
function	given the traceback ||| traceback	count=1
function_arg	the line [arg_2] ||| [arg_2] [function_1]	count=1
function	last nodes ||| last	count=1
class	:doc drag_drop method ||| drag	count=1
function	texture memory [function] ||| [function]	count=1
module	gets the ||| display	count=1
function	purge ||| purge	count=1
function	render ||| render	count=1
arg	the name [arg_2] ||| [arg_1] [arg_2]	count=1
function	merge [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] predicting the ||| [function_1] [function_2]	count=4
arg	the layer ||| layer	count=2
arg	calls the ||| return_site	count=1
class	current global_label which is ||| lexer	count=1
function	default drag group ||| default drag group	count=3
function	revert the store ||| stores	count=1
module_class	with the [class_2] ||| [module_1] [class_2]	count=2
arg	report that ||| description	count=1
function_arg	[function_1] and ||| color [function_1] hsv other [arg_2]	count=1
arg	[arg_1] new when ||| next [arg_1] [arg_2]	count=2
arg	ty b is ||| b ty	count=1
function	first argument ||| first	count=1
function	multiplies this ||| multiply hls	count=1
function	a list [function] have ||| get available [function]	count=1
function	rolls back only ||| rollback	count=1
module	until [module] ||| [module]	count=1
function	store ||| store	count=2
function	try to parse label ||| label	count=1
module	this [module] is ||| [module]	count=1
function	transition ||| transition	count=2
function	[function_1] name ||| [function_1] [function_2]	count=1
function	of dialogue [function_2] ||| [function_1] [function_2]	count=2
function	into logical [function_2] ||| [function_1] [function_2]	count=1
module_class	of the end of [module_1] [class_2] or ||| [module_1] [class_2]	count=1
function	coordinates of the ||| coordinates	count=1
function	match a python string ||| python string	count=1
function_arg	writes [arg_2] ||| [function_1] rpyc data [arg_2] data	count=2
function_arg	interpolates between [arg_2] ||| color [function_1] hls other [arg_2]	count=1
class	this log object ||| log	count=1
class	rollback entries ||| rollback	count=1
function	[function_1] statement ||| [function_1] [function_2]	count=1
function_arg	[function_1] color and ||| color [function_1] hsv other [arg_2]	count=3
function	all of its children ||| all	count=1
class	[class_1] operation is ||| display [class_1] [class_2]	count=1
arg	part ||| layer	count=1
arg	up [arg_1] [arg_2] uses both ||| [arg_1] [arg_2]	count=1
function	runs the current context ||| context	count=1
function	physical window ||| physical	count=2
function	the traceback list ||| utf8 traceback list	count=1
function	an image [function_2] ||| [function_2] [function_1]	count=1
function	is not [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] this channel ||| [arg_2] [function_1]	count=1
function	that will be ||| predict	count=1
function	corrects the type ||| type	count=1
function_arg	calls a [arg_2] ||| [function_1] replay [arg_2]	count=1
function	[function_1] displayables that ||| [function_2] [function_1]	count=1
function_arg	[function_1] channel ||| [function_1] value [arg_2]	count=2
arg	slotname, ||| slotname	count=1
function	in a [function_2] ||| [function_1] [function_2]	count=1
function	returns [function_2] ||| display [function_1] [function_2]	count=1
function	creates a render that ||| render	count=1
function_arg	pan over [arg_2] ||| [arg_2] [function_1]	count=3
module	block the ||| core	count=1
module	back only ||| core	count=1
function	of a [function] ||| [function] menu	count=1
arg	or down [arg] uses both ||| src [arg]	count=1
function	[function_1] context and ||| [function_1] [function_2]	count=4
function	an interaction ||| interact	count=1
class	file found ||| file	count=1
arg	data into [arg] ||| [arg]	count=2
function	advances this lexer to ||| advance	count=1
arg	[arg_1] with new ||| [arg_2] [arg_1]	count=4
module	a new audio ||| audio	count=1
function	blocks the [function_2] ||| [function_2] [function_1]	count=5
class	code a ||| translate python	count=1
arg	to the glyphs ||| glyphs	count=1
function	the user has seen ||| count seen	count=1
arg	target ||| target	count=1
function	[function_1] is not ||| [function_2] [function_1]	count=1
function	[function_1] block of ||| [function_2] [function_1]	count=2
arg	to language if ||| language	count=1
arg	this attempts to ||| prefix_tag image_tag not_showing layer	count=1
function	last ||| last	count=1
function	the traceback list ||| traceback list	count=1
function_arg	interpolates between [arg_2] ||| [arg_2] [function_1]	count=10
arg	the string s ||| s scope	count=1
module_class	[module_1] segment ||| [module_1] [class_2]	count=3
class	displayable ||| displayable	count=11
arg	of reachable ||| reachable	count=1
function	[function_1] history entries ||| [function_2] [function_1]	count=2
function	layer that ||| layer	count=1
function	other forces ||| force	count=1
function	block ||| expect block	count=1
arg	translations for language ||| language	count=1
function_arg	missing [arg_2] ||| [arg_2] [function_1]	count=1
class	the log in preparation ||| log	count=1
function	be [function] node ||| add to [function]	count=1
arg	by the system ||| translate force	count=1
arg	state state ||| state	count=1
arg	:doc image_func :name renpy ||| name exact	count=1
function	creates an eventname event ||| make event	count=1
function_arg	compiles the [arg_2] ||| [function_1] [arg_2]	count=4
function	[function_1] menu ||| core [function_1] [function_2] with expression callback	count=1
module_class	[module_1] segment that ||| [module_1] [class_2]	count=4
module_class	the lexer ||| core lexer	count=1
function	other this ||| focus	count=1
function	purge objects ||| purge	count=1
function	displayable associated with ||| set	count=1
function	ui ||| adjustment	count=1
arg	figure out the ||| width height st at	count=1
function_arg	[function_1] the layer ||| [function_1] displayable by tag [arg_2] tag	count=1
module	with [module] given name ||| [module]	count=1
function	the strings in the ||| strings	count=1
arg	that image ||| image on	count=2
module	some general user-definable ||| core	count=1
function	of that transform ||| transform	count=1
arg	[arg] playing ||| [arg]	count=3
arg	times [arg] ||| [arg]	count=1
arg	[arg] proportional ||| [arg]	count=3
arg	list of tokens ||| tokens	count=1
function_arg	[function_1] context ||| [arg_2] [function_1]	count=1
arg	to interpolate ||| child	count=1
arg	calls ||| return_site	count=1
class	to the file ||| dialogue file	count=1
module	and ||| display	count=2
function	the named ||| call	count=1
function_arg	[function_1] with name ||| [arg_2] [function_1]	count=11
module	into the ||| display	count=1
class	all slots with ||| file	count=1
arg	and store packages ||| packages	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2] get	count=12
function	rollback point ||| rollback	count=1
class	in arbitrary ||| location	count=1
arg	by the given x ||| s	count=1
function	all [function_2] ||| [function_2] [function_1]	count=7
function	of the image files ||| image file	count=1
function	the children ||| children	count=1
function	alpha channel ||| alpha munge	count=1
function	find the coordinates ||| focus coordinates	count=1
module	slots with savefiles ||| core	count=1
arg	attempts to ||| prefix_tag image_tag not_showing layer	count=1
function	a list of ||| traceback list	count=1
function_arg	[function_1] on layer ||| [arg_2] [function_1]	count=1
class	drag to [class_2] ||| [class_2] [class_1]	count=1
arg	of tokens ||| tokens	count=1
arg	the programmatic ||| _screen_name	count=1
function	analyzes ||| analyze	count=1
function	render that ||| render	count=1
class	[class_1] move returns ||| [class_2] [class_1]	count=1
arg	to be ||| n	count=1
function	of a rpyc file ||| rpyc	count=2
arg	arguments x ||| x	count=1
function	block to ||| block	count=1
function	line number ||| line	count=1
class	event a string giving ||| on	count=1
class	intended to be ||| advcharacter	count=1
arg	and y ||| y	count=1
class	image ||| shown image info	count=1
arg	take [arg] ||| time [arg] end_identity	count=3
class	and ||| parameter info	count=1
function_arg	[function_1] [arg_2] slot is ||| core slot [function_1] [arg_2]	count=2
function	the gesture ||| gesture	count=1
class	screen named ||| screen	count=1
module	object with some general ||| core	count=1
function	to cartesian ||| to cartesian	count=1
function	[function_1] or menu ||| core [function_1] [function_2] with expression callback	count=1
function	[function_1] runtime counter ||| [function_2] [function_1]	count=1
class	clipping rectangle and ||| clipper	count=1
function	run anymore while ||| run	count=1
function	current context and then ||| context	count=1
arg	ts ||| ts width	count=1
class	back only the ||| rollback	count=1
function_arg	store [arg_2] ||| [function_1] [arg_2]	count=1
class	reverts the [class] to ||| [class]	count=1
function	is missing a ||| missing	count=1
function	with attributes returns ||| apply attributes	count=1
arg	context info objects ||| wait	count=1
function	giving the filename and ||| filename	count=1
function	say or [function_2] ||| core [function_1] [function_2] with expression callback	count=1
function_arg	[function_1] invokes the ||| [arg_2] [function_1]	count=5
class	some ||| node	count=1
module	to find the ||| display	count=1
function	image_fonts this registers ||| register	count=2
class	current context if ||| context	count=1
function	traceback [function_2] ||| [function_2] [function_1]	count=1
arg	characters with a font ||| font start	count=1
arg	to the [arg] ||| [arg]	count=1
class	log in ||| log	count=1
function_arg	[function_1] s as ||| [arg_2] [function_1]	count=1
module	:doc other tells ||| core	count=1
arg	the given state if ||| state	count=1
function	count [function_2] ||| [function_2] [function_1]	count=3
class	this [class_1] [class_2] ||| display [class_1] [class_2]	count=2
function	image_func returns a list [function_1] [function_2] ||| display get available [function_1] [function_2]	count=1
function	the json data for ||| json	count=1
function	menu ||| menu	count=1
function	top of its ||| top	count=1
class	of all ||| location	count=1
function	a string ||| string	count=2
function	number of dialogue ||| dialogue	count=1
module	in the ||| core	count=2
class	in them in arbitrary ||| location	count=1
function_arg	an [function_1] [arg_2] may only contain ||| [function_1] [arg_2]	count=3
arg	new when it ||| new	count=1
class	of this channel allocating ||| channel	count=1
function	creates a tint of ||| tint	count=1
function_arg	a bmfont with ||| bmfont name	count=1
function	prediction to ensure the ||| prediction	count=1
function_arg	[function_1] r1 ||| [function_1] [arg_2]	count=1
function	returns a list ||| list	count=4
module	:doc loadsave copies ||| core	count=1
module_class	of [class_2] ||| [module_1] [class_2]	count=4
arg	state if one ||| state	count=1
class	user-definable information ||| node	count=1
function	of [function_2] ||| [function_1] [function_2]	count=4
function	block of ||| block	count=1
function	this loads ||| load	count=1
arg	assigns times [arg] is the ||| [arg]	count=1
module	information about ||| core	count=1
function	checks the text tags ||| text tags	count=1
arg	block ||| block	count=1
function	is open in ||| open	count=1
function	node ||| node	count=1
function	[function_1] files that ||| [function_2] [function_1]	count=3
function	preventing the gesture ||| gesture	count=1
function	checkpoint which means ||| checkpoint	count=1
module_class	[module_1] file found ||| [module_1] [class_2]	count=2
arg	prints ||| min_priority max_priority common_only	count=1
arg	part of ||| layer force	count=1
arg	screen ||| screen id layer	count=1
function	traceback ||| traceback	count=1
class	[class_1] operation is ||| [class_2] [class_1]	count=1
arg	after ||| after new_widget	count=1
class	mouse ||| mouse	count=1
function	hsv ||| hsv	count=1
function	say statement ||| scry say	count=1
function	path to ||| path	count=1
arg	as t this ||| t	count=1
function	screen [function_2] ||| core [function_1] [function_2]	count=1
class	some general user-definable information ||| node	count=1
class	them in arbitrary ||| location	count=1
arg	name ||| name mixer	count=1
function	the same point ||| take execution	count=1
class	image to ||| image	count=1
module_class	and displayable ||| display displayable	count=1
arg	[arg_1] [arg_2] is the starting time ||| [arg_2] [arg_1]	count=2
arg	the [arg] is loadable ||| [arg]	count=1
function	the layout of ||| layout	count=1
function	[function_1] list ||| [function_2] [function_1]	count=3
function	all displayables reachable from ||| all displayables	count=1
module_class	[module_1] file ||| [module_1] [class_2]	count=4
arg	filename, and divides it ||| filename filedata linenumber	count=1
function	[function] given ||| [function]	count=1
function	transform ||| transform	count=3
function	tries to [function] the ||| [function]	count=1
class	image [class_2] ||| display [class_1] [class_2]	count=2
function	interpolates between this color ||| interpolate	count=3
arg	filename and linenumber ||| filename linenumber	count=3
arg	a slot name returns ||| slotname	count=1
function	autosave ||| autosave	count=1
function	of image tags ordered ||| ordered image	count=1
arg	part of the ||| layer force	count=1
function	[function_1] [function_2] with ||| [function_1] [function_2]	count=2
arg	glyphs [arg_2] ||| text segment assign times [arg_2] [arg_1]	count=1
class	scene list ||| scene	count=2
function	[function_1] the dialogue ||| [function_1] [function_2]	count=1
class	order ||| file location	count=1
module	with [module] given ||| [module]	count=2
function	music ||| music	count=2
class	[class_1] that is ||| [class_2] [class_1]	count=2
function	open ||| open	count=1
function	valid [function] the program ||| has [function]	count=1
function	a string in ||| string	count=1
function	the physical window ||| physical	count=2
module	:doc other jump ||| core	count=1
arg	if name is a ||| name	count=1
class	all slots with savefiles ||| file location	count=1
function	arguments ||| arguments	count=1
function_arg	[function_1] new-style ||| [arg_2] [function_1]	count=1
arg	fn ||| fn	count=4
arg	this is expected ||| loc l parent	count=1
module	time [module] time it ||| [module]	count=1
arg	this calls the function ||| function	count=1
arg	[arg] valid ||| [arg]	count=2
function	list of all ||| list	count=1
function	block of ren'py statements ||| block	count=1
function	surfaces that ||| surfaces	count=1
function_arg	[function_1] [arg_2] utf-8 ||| [function_1] [arg_2]	count=1
function	self to begin executing ||| state	count=1
function_arg	adds a [arg_2] ||| [function_1] [arg_2]	count=4
function	node that ||| node	count=1
class	general user-definable ||| node	count=1
arg	if ||| name	count=1
class	[class_1] that is ||| [class_1] [class_2]	count=2
arg	child the child that ||| child	count=1
function	memory [function] and ||| [function]	count=1
function	same point as ||| take execution	count=1
function	choice is [function_2] ||| [function_1] [function_2]	count=1
arg	the various ||| rmap gmap	count=1
function	simple_expressions [function_2] ||| [function_1] [function_2]	count=1
function	:doc transition ||| transition	count=1
function	in a ||| in	count=1
function_arg	named [arg_2] ||| [function_1] [arg_2]	count=1
class	scene ||| scene lists	count=1
function	dialogue to the ||| dialogue	count=1
function	say ||| say	count=4
function	the filename and ||| filename	count=1
function_arg	@param [arg_2] ||| [function_1] [arg_2]	count=12
arg	with new when it ||| new	count=1
class	order ||| file	count=1
arg	number of checkpoints ||| checkpoints	count=1
function	valid rollback point ||| rollback	count=1
function	size of [function_2] ||| [function_2] [function_1]	count=4
function	the data information intact ||| rollback	count=1
arg	[arg_1] and r2 ||| [arg_1] [arg_2]	count=1
function	[function_1] specifier ||| [function_1] [function_2]	count=3
arg	d, then returns ||| d	count=1
function	find the coordinates of ||| focus coordinates	count=1
function	nesting ||| nesting	count=1
arg	ren'py ||| filename filedata linenumber	count=1
function	attributes returns ||| attributes	count=1
function_arg	[function_1] this channel ||| [function_1] volume volume delay [arg_2]	count=1
arg	this is called ||| st	count=1
function	no arguments ||| no arguments	count=2
class	[class] to ||| [class]	count=10
function	this sets ||| set mixer	count=1
module	:doc other this ||| core	count=3
function	add history entries ||| add history	count=2
class	script from a ||| script	count=1
function	this rolls back only ||| rollback	count=1
arg	screen on ||| screen id layer	count=1
arg	thing and reports an ||| thing name	count=1
function	showif ||| showif	count=1
function	draw constructors ||| draw constructors	count=2
arg	a word ||| word	count=1
function	:undocumented returns a list ||| get	count=1
arg	tag and an ||| tag	count=1
module	:doc loadsave causes ||| core	count=1
class	this displayable ||| drag	count=1
function	tags ordered ||| ordered	count=1
arg	these ||| ignore_errors	count=1
class	displayable is ||| displayable	count=2
module	proportional from [module] edge distance ||| [module]	count=1
arg	clean copy ||| clean	count=1
module	slots with savefiles in ||| core	count=1
arg	positional and keyword ||| scope child_or_fixed	count=1
function	the screenshot ||| screenshot	count=1
function	list of files that ||| translate list files	count=1
module	text tuples handles ||| text	count=1
module_class	[module_1] current ||| [module_1] [class_2] get	count=5
arg	[arg_1] in_time ||| [arg_1] [arg_2]	count=1
arg	font ||| font	count=1
function_arg	screen with name ||| screen layer name	count=1
class	in arbitrary order ||| file	count=1
function	runtime counter ||| runtime	count=1
function	[function_1] displayables ||| [function_1] [function_2]	count=1
arg	for channel to ||| channel	count=1
module_class	the text segment ||| text space segment	count=1
arg	set of reachable objects ||| reachable wait	count=1
class	causes this channel ||| channel	count=1
class	to return an ||| node	count=1
module	with savefiles in them ||| core	count=1
function_arg	[function_1] [arg_2] ||| [function_1] missing target filename [arg_2]	count=1
arg	rolls the ||| greedy	count=1
function_arg	[function_1] [arg_2] ||| [function_1] locations [arg_2]	count=3
function_arg	[function_1] updating context ||| [arg_2] [function_1]	count=1
function	this writes a ||| write file	count=1
function	those ||| insert line	count=1
function	parse a number float ||| float	count=1
arg	a font ||| font start end	count=1
function	music [function_2] ||| [function_2] [function_1]	count=1
function	set the size ||| size	count=1
function	variants of the screen ||| screen variants	count=1
module	with some general ||| core	count=1
arg	image ||| image	count=2
function_arg	full text [arg_2] ||| [function_1] [arg_2]	count=3
module_class	[module_1] color method ||| [module_1] [class_2]	count=12
function_arg	[function_1] [arg_2] ||| [function_1] string [arg_2]	count=1
function	:doc other this attempts ||| focus	count=1
function	:args (name [function] style ||| register sl [function]	count=1
arg	[arg_1] from the ||| [arg_2] [arg_1]	count=3
function	strings in ||| strings	count=1
class	to cause [class_2] ||| [class_2] [class_1]	count=1
function	a keyword ||| keyword	count=1
function	:doc context returns the [function_1] [function_2] of the current context ||| core context [function_1] [function_2]	count=1
function	converts [function] lists into ||| [function]	count=1
function	creates a new ||| in new	count=1
class	[class_1] move returns ||| [class_1] [class_2]	count=1
function	line numbers [function_2] ||| [function_2] [function_1]	count=2
arg	__path__ of package ||| package	count=1
class	image ||| shown image	count=1
class	this tries ||| lexer	count=2
function	the start [function_2] ||| [function_1] [function_2]	count=3
arg	reachable objects ||| reachable wait	count=2
class	updates ||| atltransform base	count=1
function	rollback point after having ||| rollback	count=1
function	full text of ||| full text	count=2
function	[function_1] files ||| [function_2] [function_1]	count=7
class	of [class] ||| [class]	count=1
module	this displayable to the ||| display	count=1
function	a plausible [function_2] ||| [function_2] [function_1]	count=8
function	per widget per ||| per	count=1
function_arg	safely rename [arg_2] ||| [arg_2] [function_1]	count=3
module	appropriately taking [module] alpha channel ||| [module]	count=1
arg	part of the next ||| layer	count=1
arg	[arg] linearly ||| src dst white [arg]	count=3
arg	value of ||| value	count=1
function	[function] with ||| has [function]	count=1
module_class	[module_1] seconds or ||| [module_1] [class_2]	count=6
function	[function_1] of simple_expressions ||| [function_1] [function_2]	count=1
function	only ||| rollback	count=1
function	to stop predicting ||| stop predict	count=1
function	a list ||| list	count=4
function	json information for ||| json	count=1
arg	by arguments x ||| x	count=1
function	[function_1] a bmfont ||| [function_1] [function_2]	count=4
arg	tag exists ||| tag	count=1
function	the queue is empty ||| queue empty	count=1
function	render that ||| zoom render	count=1
arg	the positional and keyword ||| scope child_or_fixed	count=1
function	clears ||| clear	count=4
module	returns the ||| display	count=1
function	reports that the ||| report	count=1
arg	as t ||| t	count=1
function	text ||| text	count=4
module_class	in the editor ||| core editor	count=1
arg	[arg_1] objects ||| [arg_1] [arg_2]	count=5
function	a list of all ||| list	count=1
function	for the first time ||| count newly	count=1
function	[function_1] image that ||| [function_2] [function_1]	count=8
function	screen ||| do draw screen	count=1
class	defines a [class_2] ||| [class_2] [class_1]	count=1
function_arg	the screen [arg_2] ||| [arg_2] [function_1]	count=5
module	context at the ||| display	count=1
arg	then strips off ||| code lineno	count=1
module	of [module] ||| [module]	count=1
function	data information ||| rollback	count=1
function	is added to ||| show	count=1
function	rolls back only the ||| rollback	count=1
function	a say statement ||| say	count=1
function	lint checks the text ||| text	count=1
arg	the controller at index ||| index	count=1
function	screens ||| screen	count=1
arg	a [arg] ||| loc [arg]	count=1
function	hides or ||| hide or	count=2
class	image will ||| image	count=1
function	merge [function_2] ||| [function_1] [function_2]	count=1
arg	[arg] save slot ||| [arg]	count=1
function_arg	[function_1] l ||| [arg_2] [function_1]	count=4
arg	to language if languages ||| language	count=1
arg	on layer, ||| width height layer	count=1
function	autosave to ||| autosave	count=1
function	to cartesian ||| polar to cartesian	count=2
arg	it [arg] ||| [arg]	count=1
arg	the old ||| old	count=1
function	the ultimate target of ||| target	count=1
arg	[arg_1] filename the ||| [arg_2] [arg_1]	count=2
arg	[arg_1] [arg_2] match ||| [arg_1] [arg_2]	count=12
function	interpolates between this ||| interpolate	count=3
function	list of files ||| translate list files	count=3
function	not none ||| not none	count=2
module	analysis ||| core	count=1
function	plausible [function_2] ||| [function_2] [function_1]	count=8
module	tag on [module] given layer ||| [module]	count=1
function	the current context ||| context	count=1
function	creates ||| create	count=3
arg	[arg_1] and y ||| [arg_2] [arg_1]	count=4
function	v1 or v2 ||| read	count=1
module	method raises this ||| display	count=1
arg	to the string s ||| s scope	count=1
function_arg	@param cols ||| init cols	count=1
module	segment text ||| text	count=1
function	function creates a new ||| new	count=1
function	[function_1] of image ||| [function_2] [function_1]	count=2
arg	the roots from the ||| roots wait	count=1
function	[function_1] the screen ||| [function_2] [function_1]	count=9
class	and ||| layout	count=1
arg	other in ||| other	count=3
function	the md5 ||| md5	count=1
arg	has occured ev is ||| ev x y st	count=1
module	:doc loadsave returns a ||| core	count=1
arg	tag exists ||| tag width	count=1
function	other returns ||| get	count=3
function	variants [function_2] ||| [function_2] [function_1]	count=2
function	[function] have been ||| get available [function]	count=1
function	to pause ||| pause	count=1
function_arg	with attributes [arg_2] ||| [function_1] layer tag name [arg_2]	count=1
arg	divides it ||| filedata linenumber	count=1
function	sets ||| set	count=8
arg	to update the ||| update	count=1
function	filename ||| filename	count=3
function	this writes a ||| write	count=1
arg	a child ||| time child	count=1
function	the transform event ||| transform	count=1
arg	callback with the name ||| callback	count=1
class	back ||| rollback	count=1
function	of simple_expressions [function_2] ||| [function_1] [function_2]	count=1
arg	the system back to ||| force label	count=1
function	this writes ||| write file	count=1
function	parents of ||| parents	count=1
arg	displayable ||| displayable	count=1
function_arg	[function_1] color and ||| color [function_1] other [arg_2]	count=3
class	log object ||| log	count=1
function	copies the save ||| copy save	count=1
class	segment that this ||| space segment	count=1
arg	start and the last ||| start	count=1
arg	a layer or ||| layer	count=1
class	return ||| node	count=1
function	[function] of ||| get [function]	count=6
arg	then move ||| old_thing new_thing	count=1
function	creates a new context ||| new context	count=2
function	a string in the ||| string	count=1
class	or else ||| reference	count=1
function_arg	[function_1] ren'py ||| [arg_2] [function_1]	count=1
arg	position in [arg_2] ||| [arg_2] [arg_1]	count=4
function	toggles the ||| toggle	count=1
function_arg	[function_1] has occured ||| [function_1] ev [arg_2]	count=3
arg	up or [arg_1] [arg_2] uses both ||| [arg_1] [arg_2]	count=1
function	into logical lines ||| list logical lines	count=2
function	paragraph a ||| paragraph	count=1
function_arg	[function_1] [arg_2] ||| color [function_1] hls [arg_2]	count=10
function	the type ||| type	count=1
module	savefiles in them ||| core	count=1
arg	pan over [arg_2] ||| [arg_1] [arg_2]	count=3
function	[function_1] [function_2] ||| display [function_1] [function_2]	count=5
function	a say ||| say	count=2
function	list ||| translate list	count=1
arg	the screen ||| screen id	count=1
function	the same point as ||| take execution	count=1
function_arg	an [function_1] [arg_2] contain ||| [function_1] [arg_2]	count=3
function	draw [function_2] ||| [function_2] [function_1]	count=3
arg	layer or ||| layer	count=1
arg	the old [arg_2] ||| [arg_2] [arg_1]	count=2
module	init/loads the ||| core	count=1
function	[function_1] md5 to ||| [function_1] rpyc [function_2]	count=1
function	list of simple_expressions ||| simple expression	count=1
function	constant for the ||| constant	count=1
module_class	the [module_1] [class_2] ||| [module_1] displayable [class_2]	count=1
arg	a clause to this ||| i	count=1
arg	trans ||| trans	count=1
arg	on layer ||| layer	count=1
module_class	[module_1] game state ||| [module_1] [class_2]	count=2
arg	filename and ||| filename	count=2
module	method raises this displayable ||| display	count=1
module	of that subblock as ||| core	count=1
arg	the screen on ||| screen id layer	count=1
function	a new ||| in new	count=1
function	:class barvalue, [function] the :func ||| [function]	count=1
function	surfaces that are ||| surfaces	count=1
function	of dialogue blocks the ||| dialogue blocks	count=1
function	mouse pointer to ||| set mouse pos	count=1
function_arg	node [arg_2] ||| [arg_2] [function_1]	count=1
arg	of fn that is ||| fn	count=1
arg	[arg_1] language if ||| [arg_1] [arg_2]	count=1
class	of all slots with ||| file	count=1
class	this channel to load ||| channel	count=1
function_arg	[function_1] with name ||| [function_1] layer [arg_2]	count=3
function	the [function] ||| [function] physical	count=1
class	object ||| node	count=1
function	path ||| path	count=1
function_arg	[function_1] invokes ||| [arg_2] [function_1]	count=5
function	an image ||| image	count=2
function_arg	mouse position [arg_2] ||| [arg_2] [function_1]	count=2
class	slots with savefiles in ||| file location	count=1
arg	[arg_1] [arg_2] ||| next [arg_1] [arg_2]	count=23
module	return an object ||| core	count=1
function	restart returning the user ||| full restart	count=1
arg	clause to ||| i	count=1
arg	the function ||| function src	count=1
arg	[arg_1] image ||| [arg_2] [arg_1]	count=2
arg	the given source code ||| source	count=1
module	the pixellate ||| display	count=1
arg	associated with ||| width height renders	count=1
class	run when this context ||| context	count=1
function	the image ||| image	count=1
module_class	the latest version of [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	the physical width ||| physical size	count=1
class	the location containing ||| multi location	count=2
function	[function_1] is empty ||| set [function_1] [function_2]	count=4
arg	the screen on ||| screen id	count=1
function_arg	missing translations [arg_2] ||| [arg_2] [function_1]	count=1
function	current position a keyword ||| keyword	count=1
function	the start of ||| start	count=1
module	string of the ||| display	count=1
arg	s to [arg_2] ||| [arg_1] [arg_2]	count=4
function	[function_1] [function_2] ||| [function_2] [function_1]	count=311
class	cause [class_2] ||| display [class_2] [class_1]	count=1
class	log in preparation for ||| log	count=1
function_arg	[function_1] rolls the ||| [function_1] [arg_2]	count=1
function	[function_1] prediction to ||| [function_1] [function_2]	count=4
arg	a clean copy of ||| clean	count=1
arg	a version of fn ||| fn	count=1
class	segment that ||| space segment	count=1
function	transform to the ||| transform	count=1
function	to purge objects ||| purge	count=1
module	its ||| display	count=1
function	returns a ||| get	count=5
arg	up [arg_1] [arg_2] uses both ||| real smoothscale [arg_1] [arg_2]	count=1
arg	with the ||| name	count=2
arg	indicate ||| default	count=1
class	else ||| reference	count=1
module_class	[module_1] persistent data ||| [module_1] [class_2]	count=4
arg	by arguments x and ||| x	count=1
function	to find the coordinates ||| coordinates	count=1
arg	old to ||| old	count=3
arg	of the logfile without ||| append developer flush	count=1
arg	profiling for ||| name predict show update	count=1
function	call ||| call	count=2
function	that a call to ||| call	count=1
function	of dialogue ||| dialogue	count=1
function	data as the persistent ||| persistent	count=1
module	both [module] ||| [module]	count=1
module_class	text [class_2] ||| [module_1] [class_2]	count=17
arg	with ||| height	count=1
function	count [function_2] ||| [function_1] [function_2]	count=3
function	mouse [function_2] ||| [function_1] [function_2]	count=2
function_arg	apply [arg_2] ||| [function_1] custom tags [arg_2]	count=1
class	to the ||| drag	count=1
function	line number of ||| line	count=1
function	periodic call that causes ||| periodic	count=1
function	either relative to the ||| elide	count=1
function	mouse pointer or ||| mouse pos	count=2
function	list of draw ||| get draw	count=2
module	true if the ||| display	count=3
function_arg	[function_1] object for ||| [function_1] variant name [arg_2]	count=1
function_arg	with attributes [arg_2] ||| [function_1] layer tag [arg_2]	count=1
function	a list of image ||| image	count=1
function_arg	[function_1] clause ||| [function_1] [arg_2]	count=1
function	image_func returns a list ||| get	count=1
function	given the traceback list ||| traceback list	count=1
function	say or menu ||| say menu	count=1
arg	given state if ||| state	count=1
class	the [class] to the ||| [class]	count=1
arg	tokens ||| tokens	count=1
function	those must ||| insert line	count=1
module	called to return an ||| core	count=1
arg	value [arg] ||| [arg]	count=3
class	that this spacesegment follows ||| displayable	count=1
function_arg	[function_1] canonical name ||| [function_1] layer tag [arg_2]	count=2
function_arg	translate that [arg_2] ||| [function_1] [arg_2]	count=3
function	of image tags ||| image tags	count=1
class	in arbitrary ||| file location	count=1
class	is intended to be ||| advcharacter	count=1
arg	has occured ||| x y st	count=1
function	variant screen ||| screen variant	count=1
function	masks ||| masks	count=1
function	same point ||| take execution	count=1
function	back only ||| rollback	count=1
class	an object with some ||| node	count=1
module	the filename attribute ||| core	count=1
module	information about the ||| core	count=1
arg	label causes ||| label	count=1
class	scene list some ||| scene	count=1
function	:undocumented returns ||| get	count=1
function	start of prediction to ||| start prediction	count=1
function	added ||| show	count=1
function	the merge strings command ||| merge strings	count=1
arg	screens from the screen ||| screen id layer	count=1
function	and [function_2] ||| [function_2] [function_1]	count=8
class	[class_1] [class_2] ||| [class_2] [class_1]	count=24
function	number ||| number	count=1
function	[function] statement ||| say [function]	count=1
function	[function_1] widget id ||| [function_2] [function_1]	count=1
module	:doc drag_drop method ||| display	count=1
arg	thing and reports ||| thing	count=1
function_arg	variant screen [arg_2] ||| [function_1] name [arg_2]	count=1
arg	[arg_1] linenumber ||| [arg_1] [arg_2]	count=1
function	set [function_2] ||| [function_1] [function_2]	count=1
function	be redrawn in ||| redraw	count=2
arg	is associated with ||| width height renders	count=1
function_arg	[function_1] with name, ||| [arg_2] [function_1]	count=1
arg	[arg] have elapsed ||| [arg]	count=1
arg	initializes ||| loc	count=1
function_arg	bmfont [arg_2] ||| [function_1] [arg_2]	count=3
module	matches something at the ||| core	count=1
class	from this [class] may ||| [class]	count=1
arg	of v ||| v	count=1
module	need ||| core	count=1
function_arg	[function_1] t this ||| [function_1] state [arg_2]	count=2
module	text tuples ||| text	count=1
arg	compiles ||| expr	count=1
arg	this node updating context ||| context	count=2
function	[function_1] the state ||| [function_1] [function_2]	count=2
class	with savefiles in them ||| location	count=1
function_arg	[function_1] roots from ||| [arg_2] [function_1]	count=3
function	md5 to the ||| md5	count=1
arg	be executed ||| n	count=1
arg	if [arg] save slot ||| [arg]	count=1
class	this [class] and ||| [class]	count=2
class	all slots with savefiles ||| file	count=1
arg	with the positional and ||| scope child_or_fixed	count=1
arg	node_type the ||| node_type	count=1
function	dialogue ||| dialogue	count=2
arg	to indicate that ||| default	count=1
function_arg	interpolates between [arg_2] ||| color [function_1] other [arg_2]	count=1
function_arg	calls [arg_2] ||| [function_1] replay [arg_2]	count=1
function	handles rtl ||| rtl	count=1
function	this takes a screenshot ||| screenshot	count=1
function	applies a transition ||| transition	count=1
arg	function retained for compatibility ||| filename loops fadeout fadein	count=1
function	[function_1] the dialogue ||| [function_2] [function_1]	count=1
arg	given source code using ||| source	count=1
function	given ||| scene	count=1
function	command ||| command	count=1
module	taking [module] alpha ||| [module]	count=1
arg	v [arg_2] ||| [arg_1] b [arg_2]	count=1
function	[function_1] block ||| [function_1] [function_2]	count=2
function	side image ||| side image	count=1
function_arg	of missing [arg_2] ||| [arg_2] [function_1]	count=1
class	to ||| drag	count=1
function	immediately before ||| before	count=1
function	multiplies this ||| multiply	count=1
function	block is ||| expect block	count=1
class	with some general user-definable ||| node	count=1
function	revert ||| stores	count=1
arg	if the [arg] is ||| [arg]	count=1
function	at init time ||| init	count=1
function	plausible image ||| image exists imprecise	count=2
module	from [module] edge ||| [module]	count=1
arg	displayable on the layer ||| layer	count=2
arg	function retained for ||| filename loops fadeout fadein	count=1
arg	the name [arg_2] ||| [arg_2] [arg_1]	count=1
class	the log in ||| log	count=1
function_arg	replaces [arg_2] ||| [arg_2] [function_1]	count=5
class	game state after ||| rollback	count=1
arg	from filename, including ||| filename	count=1
arg	that ||| on	count=1
class	image or [class_2] ||| [class_1] [class_2]	count=1
module	the focus when the ||| display	count=1
arg	the user returns ||| full	count=1
function	the [function] system ||| profile [function]	count=1
function	clears the ||| clear	count=1
arg	[arg] is ||| [arg]	count=4
arg	profiles [arg] surface and ||| [arg]	count=1
function_arg	to pan [arg_2] ||| [arg_2] [function_1]	count=2
arg	to interpolate from ||| child	count=1
function	to set [function_2] ||| [function_2] [function_1]	count=1
function	adds ||| add	count=3
function	[function_1] the screen ||| [function_1] [function_2]	count=5
module	minimum_presplash_time ||| display	count=1
function	writes the [function_2] ||| [function_2] [function_1]	count=8
function_arg	adds [arg_2] ||| [function_1] [arg_2]	count=3
class	displayable to ||| drag	count=1
module	of the ||| display	count=7
function_arg	[function_1] data structure ||| [arg_2] [function_1]	count=4
function_arg	[function_1] [arg_2] with ||| [function_1] displayable by tag [arg_2] tag	count=3
function	either relative ||| elide filename	count=1
function	[function_1] screenshot ||| [function_1] [function_2]	count=2
arg	rolls ||| force checkpoints defer greedy	count=1
class	to cause [class_2] ||| display [class_2] [class_1]	count=1
function	into ||| split	count=1
class	in arbitrary order ||| file location	count=1
function	added to a ||| show	count=1
class	image ||| image map cache	count=1
function	about the line ||| line	count=1
function	of that transform to ||| transform	count=1
module	the data ||| core	count=1
arg	[arg_1] [arg_2] is the starting time ||| text segment assign times [arg_2] [arg_1]	count=2
function	that transform ||| transform	count=1
function	the screen ||| screen	count=3
arg	thing ||| thing name	count=1
function	dialogue blocks [function] in any ||| [function] dialogue	count=1
arg	v [arg_2] ||| [arg_1] [arg_2]	count=2
arg	over a child ||| startpos endpos time child	count=1
function_arg	loadsave [arg_2] ||| [arg_2] [function_1]	count=1
module	it into the ||| display	count=1
function	the [function] given ||| [function]	count=1
arg	adds code ||| code	count=1
function_arg	[function_1] filename ||| [function_1] code [arg_2]	count=2
class	log ||| rollback log	count=1
function	but before ||| post	count=1
arg	id ||| id	count=1
function	rollback returns true if ||| in rollback	count=1
function	game runtime counter ||| game runtime	count=2
arg	s to [arg_2] ||| [arg_2] [arg_1]	count=4
function	returns a list ||| get	count=2
function	:doc image_func returns a [function_1] [function_2] ||| display [function_1] [function_2]	count=1
function	tries to [function] returns a ||| [function]	count=2
arg	[arg_1] gt ||| [arg_2] [arg_1]	count=3
function	variants of ||| variants	count=1
function_arg	tags in s ||| tags s	count=1
function	init/loads the ||| init	count=1
function	update ||| update path	count=1
arg	supplied codegenerator ||| mode filename lineno	count=1
class	this rolls back only ||| rollback	count=1
arg	s with args and ||| s	count=1
function_arg	[function_1] a label ||| [arg_2] [function_1]	count=1
arg	data structure ||| linenumber char_offset line_offset	count=1
function_arg	safely rename [arg_2] ||| [function_1] [arg_2]	count=3
function	[function_1] all screens ||| [function_2] [function_1]	count=1
function_arg	interpolates between [arg_2] ||| color [function_1] hsv [arg_2]	count=2
function	the merge [function_2] ||| [function_1] [function_2]	count=1
function	to cartesian coordinates ||| polar to cartesian	count=2
function_arg	[function_1] label ||| [arg_2] [function_1]	count=6
arg	to grab the given ||| tag	count=1
arg	the callback on this ||| callback	count=1
module	:doc other causes ren'py ||| core	count=1
function	open python file object ||| load core	count=1
arg	child displayable which is ||| endpos time child	count=1
function_arg	[function_1] clause to ||| [arg_2] [function_1]	count=1
function	texture memory [function] and the ||| [function]	count=1
arg	[arg_1] new ||| next [arg_1] [arg_2]	count=2
function	screenshot of the ||| take screenshot	count=1
class	in the file ||| file	count=1
function	information about the future ||| scry	count=1
arg	ty ||| ty	count=1
function	blocks [function] in any ||| [function] dialogue	count=1
function_arg	store with name ||| store name	count=1
arg	src ||| src	count=1
function	before ||| before	count=2
arg	[arg_1] ty ||| [arg_2] [arg_1]	count=2
function	[function_1] missing translations ||| [function_1] [function_2]	count=2
class	mouse [class_2] ||| [class_1] [class_2]	count=4
arg	[arg_1] to new ||| [arg_2] [arg_1]	count=2
function	no such displayable exists ||| displayable by tag	count=1
function	self to begin ||| state	count=1
function_arg	[function_1] [arg_2] the slot is ||| [function_1] [arg_2]	count=2
arg	named name will be ||| name	count=1
arg	invokes the ||| callable	count=1
function	of draw constructors to ||| get draw constructors	count=1
arg	:undocumented ||| s	count=1
function_arg	text [arg_2] ||| [function_1] filename [arg_2]	count=1
function	the mouse pointer or ||| mouse pos	count=1
function_arg	[function_1] channel this ||| [function_1] filename [arg_2]	count=2
function_arg	an event [arg_2] ||| [function_1] [arg_2]	count=4
arg	assigns times [arg] is ||| [arg]	count=1
arg	renpy_version if tuple is ||| tuple	count=1
function	queue [function_2] ||| set [function_1] [function_2]	count=1
function	multiplies ||| multiply hls	count=1
function	rate ||| rate	count=1
function	[function_1] state ||| [function_1] [function_2]	count=2
class	this node to ||| node	count=1
class	displayable is part of ||| displayable	count=1
function_arg	to [arg_2] ||| [arg_2] [function_1]	count=1
function	the physical window to ||| physical	count=1
function	attributes associated ||| attributes	count=1
arg	named name ||| name	count=4
function_arg	context [arg_2] ||| [arg_2] [function_1]	count=3
module	can't be ||| core	count=1
function	to start predicting ||| start predict	count=2
function	to [function_2] ||| [function_2] [function_1]	count=2
module	method raises ||| display	count=1
function_arg	showing [arg_2] ||| [arg_2] [function_1]	count=2
module	object with some ||| core	count=1
class	:doc drag_drop method raises ||| drag	count=1
function	memory ||| memory	count=2
module	the currently playing ||| display	count=1
arg	is called ||| st	count=1
function	[function_1] name ||| [function_2] [function_1]	count=1
function	next node that should ||| next node	count=1
class	and ||| lexer	count=1
arg	ev matches [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	reports [arg_2] ||| [function_1] exception [arg_2] traceback_fn	count=2
arg	displayable a function that ||| displayable	count=1
function	md5 to the end ||| md5	count=1
function	the strings ||| get strings	count=1
function_arg	[function_1] the block ||| [function_1] [arg_2]	count=1
function_arg	loads [arg_2] ||| [arg_2] [function_1]	count=5
function	is constant for the ||| is constant	count=1
function	[function_1] level ||| core context [function_1] [function_2]	count=1
function	registers a [function_2] ||| [function_1] [function_2]	count=1
function	a choice ||| choice	count=1
arg	if channel ||| channel	count=1
function	[function_1] line ||| [function_2] [function_1]	count=2
function	level ||| level	count=1
function_arg	a list [arg_2] ||| [arg_2] [function_1]	count=1
function	strings in the ||| strings	count=1
function	filename [function_2] ||| [function_2] [function_1]	count=2
function	simple draw routine which ||| draw	count=1
arg	pan over a child ||| startpos endpos time child	count=1
arg	index ||| index	count=1
module	:doc drag_drop method raises ||| display	count=1
module	that time with the ||| display	count=1
function_arg	the [arg_2] ||| [function_1] [arg_2]	count=1
function	either relative ||| elide	count=1
arg	fn that is ||| fn	count=1
class	display this displayable this ||| displayable	count=1
arg	for this slot ||| slotname	count=1
arg	a child displayable relative ||| child	count=1
function	dynamic stack called ||| dynamic	count=1
function	returns the [function] of the ||| context [function]	count=1
function	the [function] screen ||| [function]	count=1
function	interact ||| interact	count=1
function	[function_1] showif ||| [function_2] [function_1]	count=1
class	rollback entries ||| rollback log	count=1
function	rolls back ||| rollback	count=1
class	with savefiles ||| file location	count=1
module	something at the ||| core	count=1
module	of node ||| sl2	count=1
function	set the size of ||| size	count=1
function	called to set ||| set	count=1
function	add ||| add	count=1
arg	s ||| s translate	count=1
arg	displayable a function that ||| loc displayable	count=1
function	context and ||| context	count=1
function_arg	channel named [arg_2] ||| [arg_2] [function_1]	count=1
class	layout ||| layout	count=1
function	[function_1] not ||| [function_2] [function_1]	count=1
module_class	of [module_1] [class_2] ||| [module_1] [class_2] get	count=3
function_arg	event [arg_2] ||| [function_1] [arg_2]	count=2
function	hides [function_2] ||| [function_1] [function_2] layer index prefix	count=1
function	to find the coordinates ||| focus coordinates	count=1
module	called to return ||| core	count=1
arg	linenumber from [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	[function_1] canonical ||| [function_1] layer tag name [arg_2]	count=2
function	start of [function_2] ||| [function_2] [function_1]	count=4
module	attempts ||| display	count=1
function	[function_1] missing ||| [function_2] [function_1]	count=2
function	say or [function_2] ||| [function_2] [function_1]	count=1
function	this registers a ||| register	count=2
arg	just before this ||| data keep_rollback hard	count=1
function	the future ||| scry	count=1
module	segment text tuples ||| text	count=1
function	shallow copy of this ||| copy	count=1
arg	s [arg_2] ||| [arg_2] [arg_1]	count=3
function	a screenshot of ||| screenshot	count=1
function_arg	attributes [arg_2] ||| [function_1] layer tag name [arg_2]	count=1
function	[function_1] mouse position ||| [function_2] [function_1]	count=1
function	:doc image_func returns a [function_1] [function_2] have been defined ||| display [function_1] [function_2]	count=1
arg	gt ||| gt	count=1
module_class	text [class_2] ||| [module_1] displayable [class_2]	count=1
function	is called to set ||| set	count=1
function_arg	text of [arg_2] ||| [function_1] filename [arg_2]	count=1
function	[function] this ||| [function]	count=3
class	rolls back only ||| rollback	count=1
function	a keyword is a ||| keyword	count=1
function	of a rpyc file ||| rpyc data	count=1
function	is either relative to ||| elide filename	count=1
function	execute this node updating ||| execute	count=1
function	revert the ||| stores	count=1
arg	version of fn ||| fn	count=1
function	name with attributes ||| attributes	count=1
function_arg	pygame event [arg_2] ||| [arg_2] [function_1]	count=2
function	gesture ||| gesture	count=1
arg	child ||| child	count=2
function	restarts ||| restart	count=1
function	data information intact ||| rollback	count=1
arg	is called [arg_2] ||| [arg_2] [arg_1]	count=2
arg	filename and [arg_2] ||| [arg_1] [arg_2]	count=5
class	editor this may be ||| editor	count=1
class	[class_1] a screen ||| [class_1] [class_2]	count=1
arg	location ||| location	count=1
module	object ||| core	count=1
function	memory [function] ||| [function]	count=1
function	returns [function_2] ||| [function_2] [function_1]	count=5
module_class	the current ||| core lexer get	count=1
class	interface ||| interface	count=1
function	debug returns a pair ||| get	count=1
arg	to target ||| target	count=1
function	of a [function] ||| [function]	count=1
arg	expressions and a layer ||| layer atl	count=1
module	in arbitrary order ||| core	count=1
class	[class_1] that this ||| [class_2] [class_1]	count=2
arg	layer or ||| layer atl	count=1
function	[function_1] rate of ||| [function_1] [function_2]	count=1
class	a drag to ||| drag	count=1
module	the text ||| display	count=1
function	text of the ||| text	count=1
function	[function_1] showif ||| [function_1] [function_2]	count=1
function	gets all [function_2] ||| [function_1] [function_2]	count=3
function	this matches [function] up ||| [function]	count=1
class	mouse move returns true ||| mouse move	count=1
arg	default ||| default	count=1
class	of this context ||| context	count=1
function	rpyc file the ||| rpyc	count=1
function	attributes returns the ||| attributes	count=1
function	to the [function] ||| [function]	count=1
function_arg	a list [arg_2] ||| [function_1] slots [arg_2]	count=1
function	or replaces ||| or replace	count=1
function	[function_1] last nodes ||| [function_2] [function_1]	count=2
arg	callback on ||| callback	count=1
function	parse ||| parse	count=3
function_arg	saves [arg_2] ||| [arg_2] [function_1]	count=1
class	of this rollback ||| rollback	count=1
function	pin is deprecated ||| unpin	count=1
arg	ts ||| ts width height	count=1
module_class	returns a list ||| core file location	count=1
function	parse a function statement ||| parse	count=2
function	position beyond any contiguous ||| skip	count=1
arg	color and other in ||| other fraction	count=3
module	:doc file lists the ||| core	count=1
class	spritemanager ||| sprite	count=1
arg	the system to ||| force	count=1
function	the coordinates of the ||| coordinates	count=1
function_arg	screen [arg_2] ||| [arg_2] [function_1]	count=11
function	that is either relative ||| elide filename	count=1
function	supplied [function] to ||| unicode [function]	count=1
function	for the widget with ||| widget	count=1
arg	[arg_1] and linenumber ||| [arg_1] [arg_2]	count=1
arg	v to [arg_2] ||| [arg_1] b [arg_2]	count=1
function_arg	call to label ||| call label	count=2
module	config minimum_presplash_time ||| display	count=1
function	to start ||| start	count=1
arg	by the system to ||| force	count=1
module	when the ||| display	count=1
function	is a checkpoint ||| checkpoint	count=1
arg	and ||| fraction	count=3
function_arg	[function_1] given source ||| [function_1] [arg_2]	count=1
class	dialogue from ||| dialogue	count=1
arg	other in the ||| other	count=3
function	all textures and ||| textures and	count=2
class	arbitrary order ||| location	count=1
function_arg	immediately before filename ||| before code filename	count=1
function	writes [function_2] ||| [function_1] rpyc [function_2]	count=3
function	called when the queue ||| queue	count=1
function	[function] the ||| [function] widget	count=2
arg	[arg_1] and y ||| [arg_1] [arg_2]	count=4
arg	expected ||| loc l parent	count=1
module	matches the ||| core	count=1
class	in arbitrary ||| file	count=1
arg	this channel ||| channel	count=1
function	a [function] statement ||| [function]	count=1
arg	thing and ||| thing	count=1
function	get a variant screen ||| screen variant	count=1
